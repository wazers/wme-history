! function(e) {
    var t = {};

    function n(i) {
        if (t[i])
            return t[i].exports;
        var r = t[i] = {
            i: i,
            l: !1,
            exports: {}
        };
        return e[i].call(r.exports, r, r.exports, n),
            r.l = !0,
            r.exports
    }
    n.m = e,
        n.c = t,
        n.d = function(e, t, i) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: i
            })
        },
        n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
        },
        n.t = function(e, t) {
            if (1 & t && (e = n(e)),
                8 & t)
                return e;
            if (4 & t && "object" == typeof e && e && e.__esModule)
                return e;
            var i = Object.create(null);
            if (n.r(i),
                Object.defineProperty(i, "default", {
                    enumerable: !0,
                    value: e
                }),
                2 & t && "string" != typeof e)
                for (var r in e)
                    n.d(i, r, function(t) {
                            return e[t]
                        }
                        .bind(null, r));
            return i
        },
        n.n = function(e) {
            var t = e && e.__esModule ? function() {
                    return e.default
                } :
                function() {
                    return e
                };
            return n.d(t, "a", t),
                t
        },
        n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        },
        n.p = "//editor-assets.waze.com/beta/",
        n(n.s = 760)
}([function(e, t, n) {
    "use strict";
    t.__esModule = !0,
        t.default = function(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i, r = n(180),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = function() {
        function e(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value" in i && (i.writable = !0),
                    (0,
                        s.default)(e, i.key, i)
            }
        }
        return function(t, n, i) {
            return n && e(t.prototype, n),
                i && e(t, i),
                t
        }
    }()
}, function(e, t, n) {
    e.exports = {
        default: n(774),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i, r = n(63),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = function(e, t) {
        if (!e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !t || "object" !== (void 0 === t ? "undefined" : (0,
            s.default)(t)) && "function" != typeof t ? e : t
    }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i = a(n(136)),
        r = a(n(137)),
        s = a(n(63));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.default = function(e, t) {
        if ("function" != typeof t && null !== t)
            throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : (0,
                s.default)(t)));
        e.prototype = (0,
                r.default)(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (i.default ? (0,
                i.default)(e, t) : e.__proto__ = t)
    }
}, , function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i, r = n(770),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = s.default || function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var i in n)
                Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
        }
        return e
    }
}, function(e, t, n) {
    e.exports = {
        default: n(795),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i = s(n(2)),
        r = s(n(864));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.default = function e(t, n, s) {
        null === t && (t = Function.prototype);
        var a = (0,
            r.default)(t, n);
        if (void 0 === a) {
            var o = (0,
                i.default)(t);
            return null === o ? void 0 : e(o, n, s)
        }
        if ("value" in a)
            return a.value;
        var l = a.get;
        return void 0 !== l ? l.call(s) : void 0
    }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i, r = n(62),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = function(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++)
                n[t] = e[t];
            return n
        }
        return (0,
            s.default)(e)
    }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i = s(n(763)),
        r = s(n(25));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.default = function() {
        return function(e, t) {
            if (Array.isArray(e))
                return e;
            if ((0,
                    i.default)(Object(e)))
                return function(e, t) {
                    var n = [],
                        i = !0,
                        s = !1,
                        a = void 0;
                    try {
                        for (var o, l = (0,
                                r.default)(e); !(i = (o = l.next()).done) && (n.push(o.value),
                                !t || n.length !== t); i = !0)
                        ;
                    } catch (e) {
                        s = !0,
                            a = e
                    } finally {
                        try {
                            !i && l.return && l.return()
                        } finally {
                            if (s)
                                throw a
                        }
                    }
                    return n
                }(e, t);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }()
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.subActions = [],
                n
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "destroy",
                value: function() {
                    for (var e = 0, n = this.subActions.length; e < n; e++)
                        this.subActions[e].destroy();
                    (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "destroy", this).call(this)
                }
            }, {
                key: "isLeaf",
                value: function() {
                    return !1
                }
            }, {
                key: "doSubAction",
                value: function(e) {
                    e.setModel(this.model);
                    var t = e.doAction();
                    return !1 !== t ? this.subActions.push(e) : e.destroy(),
                        t
                }
            }, {
                key: "doAction",
                value: function() {
                    for (var e = !1, t = void 0, n = 0, i = this.subActions.length; n < i; n++)
                        t = !1 !== this.subActions[n].doAction(),
                        e = e || t
                }
            }, {
                key: "undoAction",
                value: function() {
                    for (var e = this.subActions.length - 1; e >= 0; e--)
                        this.subActions[e].undoAction()
                }
            }, {
                key: "redoAction",
                value: function() {
                    for (var e = 0, t = this.subActions.length; e < t; e++)
                        this.subActions[e].redoAction()
                }
            }, {
                key: "accept",
                value: function(e) {
                    var t = e.beforeEnter(this);
                    e.visit(this),
                        !1 !== t && this.subActions.forEach(function(t) {
                            t.accept(e)
                        }),
                        e.afterLeave(this)
                }
            }, {
                key: "flat",
                value: function() {
                    var e = _.flatten(this.subActions.map(function(e) {
                        return e.flat()
                    }));
                    return e.push(this),
                        e
                }
            }, {
                key: "getBounds",
                value: function() {
                    var e = void 0,
                        t = void 0,
                        n = void 0;
                    if (_.isEmpty(this.subActions))
                        return null;
                    for (e = (n = this.subActions[0].getBounds()) ? n.clone() : new OpenLayers.Bounds,
                        t = 1; t < this.subActions.length; t++)
                        (n = this.subActions[t].getBounds()) && n.getWidth() > 0 && n.getHeight() > 0 && e.extend(n);
                    return e
                }
            }, {
                key: "serialize",
                value: function(e, t) {
                    return null
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return _.flatten(this.subActions.map(function(e) {
                        return e.getAffectedUniqueIds()
                    }))
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return []
                }
            }]),
            t
    }(u(n(20)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t) {
    var n = e.exports = {
        version: "2.5.7"
    };
    "number" == typeof __e && (__e = n)
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }(n(24));
    var r = {
        EARTH_RADIUS_KM: 6371,
        EARTH_CIRC_KM: 40075,
        getHeading: function(e, t) {
            var n = r.radToDeg(Math.atan2(t.y - e.y, t.x - e.x));
            return n = (360 + n) % 360,
                Math.round(n / 45) % 8
        },
        destinationOnPlane: function(e, t, n) {
            t = r.degToRad(t);
            var i = 1e3 * r.EARTH_RADIUS_KM,
                s = Math.cos(t) * n / (i * Math.cos(r.degToRad(e.lat))),
                a = Math.sin(t) * n / i;
            return new OL.LonLat(r.radToDeg(s) + e.lon, r.radToDeg(a) + e.lat)
        },
        distanceOnPlane: function(e, t) {
            var n = r.degToRad((e.lat + t.lat) / 2),
                i = r.degToRad(e.lon - t.lon),
                s = r.degToRad(e.lat - t.lat);
            return 1e3 * r.EARTH_RADIUS_KM * Math.sqrt(s * s + Math.pow(Math.cos(n) * i, 2))
        },
        getPointAlongLine: function(e, t, n) {
            var s = e,
                a = t,
                o = void 0,
                l = void 0,
                u = 0,
                d = void 0,
                c = void 0,
                h = void 0;
            for (i.defined(n) ? (o = n,
                    u = r.getPointEdge(s, n)) : o = s[u]; u < s.length - 1;) {
                if (l = s[u + 1],
                    !(a - (c = o.distanceTo(l)) > 0)) {
                    d = a / c,
                        o = new OpenLayers.Geometry.Point((1 - d) * o.x + d * l.x, (1 - d) * o.y + d * l.y),
                        h = Math.atan2(o.y - l.y, o.x - l.x);
                    break
                }
                o = l,
                    a -= c,
                    u++
            }
            return {
                point: o,
                angle: h
            }
        },
        getDistanceToPointOnLine: function(e, t) {
            for (var n = e.distanceTo(t, {
                    details: !0
                }).line, i = new OL.Geometry.Point(n.x1, n.y1), r = new OL.Geometry.Point(n.x2, n.y2), s = 0, a = e.components, o = a.length, l = 0; s < o - 1; s++) {
                if (a[s].equals(r) && a[s + 1].equals(i) || a[s].equals(i) && a[s + 1].equals(r))
                    return l += a[s].distanceTo(t);
                l += a[s].distanceTo(a[s + 1])
            }
            return l
        },
        splitLineStringWithPolygon: function(e, t) {
            var n = t.distanceTo(e, {
                    details: !0
                }),
                i = new OL.Geometry.Point(n.x0, n.y0);
            if (n.distance > 0)
                return null;
            for (var r = (n = e.distanceTo(i, {
                    details: !0
                })).line, s = new OL.Geometry.Point(r.x1, r.y1), a = new OL.Geometry.Point(r.x2, r.y2), o = e.components.slice(), l = o.length, u = 0; u < l - 1 && !(o[u].equals(a) && o[u + 1].equals(s) || o[u].equals(s) && o[u + 1].equals(a)); u++)
            ;
            var d = [i.clone()].concat(o.splice(u + 1));
            return o.push(i.clone()),
                [new OL.Geometry.LineString(o), new OL.Geometry.LineString(d)]
        },
        getPointEdge: function(e, t) {
            for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = Number.POSITIVE_INFINITY, r = 0, s = 0; s < e.length - 1; s++) {
                var a = OpenLayers.Geometry.distanceToSegment(t, {
                    x1: e[s].x,
                    y1: e[s].y,
                    x2: e[s + 1].x,
                    y2: e[s + 1].y
                }).distance;
                if (a <= n)
                    return s;
                a < i && (i = a,
                    r = s)
            }
            return r
        },
        toGeoJSON: function(e) {
            return OL.Format.GeoJSON.prototype.extract.geometry.apply(OL.Format.GeoJSON.prototype, [e])
        },
        parse: function(e) {
            var t = OL.Format.GeoJSON.prototype.parseGeometry(e);
            return r.project(t),
                t
        },
        project: function(e) {
            return e.transform(W.Config.map.projection.remote, W.Config.map.projection.local),
                e
        },
        unproject: function(e) {
            return e.transform(W.Config.map.projection.local, W.Config.map.projection.remote),
                e
        },
        geometryToGeoJSON: function(e) {
            return OpenLayers.Format.GeoJSON.prototype.extract.geometry.apply(OpenLayers.Format.GeoJSON.prototype, [e])
        },
        pointToSquarePolygon: function(e, t) {
            var n = r.unproject(e.clone()),
                i = OL.Util.destinationVincenty({
                    lon: n.x,
                    lat: n.y
                }, 45, Math.sqrt(2 * Math.pow(t / 2, 2))),
                s = n.x - i.lon,
                a = n.y - i.lat,
                o = new OL.Geometry.LinearRing([new OL.Geometry.Point(n.x - s, n.y - a), new OL.Geometry.Point(n.x + s, n.y - a), new OL.Geometry.Point(n.x + s, n.y + a), new OL.Geometry.Point(n.x - s, n.y + a)]),
                l = new OL.Geometry.Polygon([o]);
            return r.project(l)
        },
        polygonToPoint: function(e) {
            var t = e.getBounds().getCenterLonLat();
            return new OL.Geometry.Point(t.lon, t.lat)
        },
        getBoundsWithRatio: function(e, t) {
            if (null === e)
                return null;
            var n = e.getCenterLonLat(),
                i = e.getWidth() * t,
                r = e.getHeight() * t;
            return new OpenLayers.Bounds(n.lon - i / 2, n.lat - r / 2, n.lon + i / 2, n.lat + r / 2)
        },
        radToDeg: function(e) {
            return e / Math.PI * 180
        },
        degToRad: function(e) {
            return e * Math.PI / 180
        }
    };
    t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.ARCHIVE_SESSION = "archive",
        t.ARCHIVE_SESSION_DATA = "archiveSession",
        t.BIG_JUNCTION = "bigJunction",
        t.CITY = "city",
        t.COUNTRY = "country",
        t.HOUSE_NUMBER = "houseNumber",
        t.JUNCTION = "junction",
        t.JUNCTION_NC = "junctionConnection",
        t.MAP_PROBLEM = "mapProblem",
        t.MERGED_NODE = "mergedNode",
        t.MTE = "majorTrafficEvent",
        t.NC = "nodeConnection",
        t.NODE = "node",
        t.PROBLEM_DETAILS = "problemDetail",
        t.RESTRICTED_AREA = "restrictedArea",
        t.RESTRICTION = "restriction",
        t.ROAD_CLOSURE = "roadClosure",
        t.SEGMENT = "segment",
        t.SPEED_CAMERA = "camera",
        t.STATE = "state",
        t.STREET = "street",
        t.TURN_PROBLEM = "turnProblem",
        t.UPDATE_REQUEST = "mapUpdateRequest",
        t.UPDATE_REQUEST_SESSION = "updateRequestSession",
        t.USER = "user",
        t.USER_AREA = "userArea",
        t.VENUE = "venue",
        t.VENUE_UPDATE_REQUEST = "venueUpdateRequest"
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i, r = n(180),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = function(e, t, n) {
        return t in e ? (0,
                s.default)(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(10)),
        r = l(n(61)),
        s = l(n(103)),
        a = n(85),
        o = l(a);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = {},
        d = 0;
    u.isBlank = function(e) {
            return null == e || (_.isString(e) ? /^\s*$/.test(e) : _.isFunction(e.isEmpty) ? e.isEmpty() : !(!_.isArray(e) && !_.isObject(e)) && _.isEmpty(e))
        },
        u.getTimeFromSeconds = function(e) {
            if (!(null != e && !isNaN(e)))
                return null;
            e = Math.abs(Math.round(e));
            var t = Math.floor(e / 60),
                n = {};
            return n.seconds = e,
                n.hours = Math.floor(t / 60),
                n.minutes = Math.floor(t % 60),
                n.days = Math.floor(n.hours / 24),
                1 === n.days ? this.safe_t("common.time.day", {
                    day: n.days
                }) : n.days > 1 ? this.safe_t("common.time.days", {
                    days: n.days
                }) : n.hours > 0 ? 0 === n.minutes ? this.safe_t("common.time.hours", {
                    hours: n.hours
                }) : this.safe_t("common.time.hours_minutes", {
                    hours: n.hours,
                    minutes: n.minutes
                }) : n.minutes > 0 ? this.safe_t("common.time.minutes", {
                    minutes: n.minutes
                }) : this.safe_t("common.time.seconds", {
                    seconds: n.seconds
                })
        },
        u.safe_t = function(e, t) {
            var n = {},
                s = void 0;
            return t && (0,
                    r.default)(t).forEach(function(e) {
                    var t = (0,
                            i.default)(e, 2),
                        r = t[0];
                    t[1];
                    n[r] = "%{" + r + "}"
                }),
                s = u.escape(I18n.t(e, n)),
                t && (0,
                    r.default)(t).forEach(function(e) {
                    var t = (0,
                            i.default)(e, 2),
                        n = t[0],
                        r = t[1];
                    r.htmlSafe || (r = u.escape(r)),
                        s = s.replace(new RegExp("%\\{" + n + "\\}"), r)
                }),
                s
        },
        u.safeString = function(e) {
            var t = new String(e);
            return t.htmlSafe = !0,
                t
        },
        u.contentTag = function(e, t) {
            return t = u.escape(t),
                this.safeString("<" + e + ">" + t + "</" + e + ">")
        },
        u.copyShortcut = function() {
            return $.browser.mac ? "⌘+C" : "Ctrl+C"
        },
        u.link = function(e, t, n) {
            e = u.escape(e);
            var s = "";
            return n = n || {},
                (0,
                    r.default)(n).forEach(function(e) {
                    var t = (0,
                            i.default)(e, 2),
                        n = t[0],
                        r = t[1];
                    s += " " + u.escape(n) + '="' + u.escape(r) + '"'
                }),
                s += ' href="' + window.encodeURI(t) + '"',
                this.safeString("<a" + s + ">" + e + "</a>")
        },
        u._formInput = function(e, t, n, i, r, s, a, o, l, c) {
            t = u.escape(t),
                n = u.escape(n),
                e = u.escape(e);
            var h = n + "-" + i + "-" + d++,
                f = "<input type='" + e + "' name='" + n + "' value='" + i + "' id='" + h + "'";
            return (String(i) === String(r) || c) && (f += " checked "),
                !1 === s && (f += " disabled "),
                a && (f += " data-type='" + a + "'"),
                l && (f += " data-nullable='true'"),
                f += "/><label for='" + h + "' class='" + (o || "") + "'>" + t + "</label>"
        },
        u.radio = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = e.label,
                n = void 0 === t ? "" : t,
                i = e.name,
                r = void 0 === i ? "" : i,
                s = e.dataType,
                a = void 0 === s ? "string" : s,
                o = e.value,
                l = void 0 === o ? "" : o,
                d = e.currentValue,
                c = void 0 === d ? null : d,
                h = e.enable,
                f = void 0 === h || h,
                p = e.className,
                g = void 0 === p ? "" : p,
                v = e.nullable,
                m = void 0 !== v && v,
                _ = e.forceChecked,
                y = void 0 !== _ && _;
            if (n)
                return u._formInput("radio", n, r, l, c, f, a, g, m, y)
        },
        u.checkbox = function(e, t, n, i, r) {
            return u._formInput("checkbox", e, t, n, i, r)
        },
        u.option = function(e, t, n, i, r) {
            var s = "<option value='" + u.escape(t) + "'";
            return n instanceof Array || t !== n && (i || parseInt(t, 10) !== parseInt(n, 10)) || (s += " selected"),
                r && (s += " disabled"),
                s += ">" + u.escape(e) + "</option>"
        },
        u.categoryOption = function(e, t) {
            return u.option(I18n.t("venues.categories." + t), t, e[t] ? t : null, !0)
        },
        u.directionRadio = function(e) {
            return -1 === e ? u.radio({
                label: I18n.t("edit.multiple_values"),
                name: "direction",
                dataType: "numeric",
                value: e,
                nullable: !0
            }) : u.radio({
                label: I18n.t("segment.direction." + e),
                name: "direction",
                dataType: "numeric",
                value: e
            })
        },
        u.formatDate = function(e) {
            return e ? new Date(e).toDateString() : ""
        },
        u.durationString = function(e, t) {
            var n = (t - e) / 1e3;
            return this.getTimeFromSeconds(n)
        },
        u.timeDistanceInWords = function(e, t) {
            null == t && (t = new Date),
                e = new Date(e),
                t = new Date(t);
            var n = Math.round(Math.abs((t - e) / 60 / 1e3));
            if (n >= 0 && n <= 1)
                return 0 === n ? I18n.t("datetime.distance_in_words.less_than_x_minutes", {
                    count: 1
                }) : I18n.t("datetime.distance_in_words.x_minutes", {
                    count: n
                });
            if (n >= 2 && n <= 44)
                return I18n.t("datetime.distance_in_words.x_minutes", {
                    count: n
                });
            if (n >= 45 && n <= 89)
                return I18n.t("datetime.distance_in_words.about_x_hours", {
                    count: 1
                });
            if (n >= 90 && n <= 1439)
                return I18n.t("datetime.distance_in_words.about_x_hours", {
                    count: Math.round(n / 60)
                });
            if (n >= 1440 && n <= 2519)
                return I18n.t("datetime.distance_in_words.x_days", {
                    count: 1
                });
            if (n >= 2520 && n <= 43199)
                return I18n.t("datetime.distance_in_words.x_days", {
                    count: Math.round(n / 1440)
                });
            if (n >= 43200 && n <= 86399)
                return I18n.t("datetime.distance_in_words.about_x_months", {
                    count: 1
                });
            if (n >= 86400 && n <= 525599)
                return I18n.t("datetime.distance_in_words.x_months", {
                    count: Math.round(n / 43200)
                });
            e.getFullYear(),
                t.getFullYear();
            var i = n % 525600,
                r = Math.floor(n / 525600);
            return e.getMonth() + 1 >= 3 && 0,
                t.getMonth() + 1 < 3 && 0,
                i < 131400 ? I18n.t("datetime.distance_in_words.about_x_years", {
                    count: r
                }) : i < 394200 ? I18n.t("datetime.distance_in_words.over_x_years", {
                    count: r
                }) : I18n.t("datetime.distance_in_words.almost_x_years", {
                    count: r + 1
                })
        },
        u.dateOnlyString = function(e) {
            return e ? I18n.l("date.formats.long", e) : ""
        },
        u.localizeDateString = function(e, t) {
            return I18n.localize(e, t)
        },
        u.lengthString = function(e, t) {
            t = _.defaults(t || {}, {
                units: a.UNIT.METER,
                translationKey: "measurements.length"
            });
            var n = a.UNIT.KILOMETER,
                i = o.default.getLocalizedDisplayValue(e, t.units, n);
            i < 1 && (n = a.UNIT.METER,
                    i = o.default.getLocalizedDisplayValue(e, t.units, n)),
                i = i.toFixed(2) / 1;
            var r = o.default.localizeUnit(n);
            return I18n.t(t.translationKey + "." + r, {
                count: i
            })
        },
        u.speedString = function(e) {
            var t = o.default.localizeUnit(a.UNIT.KILOMETER),
                n = "";
            return _.isUndefined(e) || (n = (n = o.default.getLocalizedValue(e, a.UNIT.KILOMETER)).toFixed(2)),
                I18n.t("measurements.speed." + t, {
                    speed: n
                })
        },
        u.areaString = function(e) {
            var t = Math.sqrt(e),
                n = o.default.getLocalizedDisplayValue(t, a.UNIT.METER, a.UNIT.KILOMETER),
                i = o.default.localizeUnit(a.UNIT.KILOMETER);
            return n = (n * n).toFixed(2),
                I18n.t("measurements.area." + i + "_squared", {
                    area: n
                })
        },
        u.userProfileLink = function(e) {
            return !e || e.temporary ? null : W.Config.user_profile.url + window.encodeURIComponent(e.userName)
        },
        u.formatUserName = function(e, t) {
            null == t && (t = W.model);
            var n = t.users.getObjectById(e);
            return n ? function(e) {
                return (e.temporary ? I18n.t("user.temporary") : e.userName) + "(" + (e.isStaffUser() ? "staff" : e.normalizedLevel) + ")"
            }(n) : "" + e
        },
        u.userProfile = function(e, t) {
            null == t && (t = W.model);
            var n = t.users.getObjectById(e),
                i = this.userProfileLink(n),
                r = this.formatUserName(e, t);
            return null !== i && W.Config.user_profile.enable ? this.link(r, i, {
                target: "_blank"
            }) : u.escape(r)
        },
        u.formatRank = function(e) {
            return e === s.default.prototype.StaffRank ? I18n.t("edit.segment.lock_levels.staff") : s.default.normalizeLevel(e)
        },
        u.venueRankOption = function(e, t, n) {
            var i = u.formatRank(t);
            return u.radio({
                label: i,
                name: "lockRank",
                dataType: "numeric",
                value: t,
                currentValue: n,
                className: "",
                nullable: !0
            })
        },
        u.getDisplayUnitValue = function(e, t, n) {
            return null == (e = o.default.getLocalizedValue(e, t)) ? e : (n && (e = Math.round(e)),
                e)
        },
        u.shortcutMaskToKeys = function(e) {
            var t = "",
                n = void 0;
            return ["alt", "ctrl", "shift"].forEach(function(i) {
                    e[n = i + "Key"] && (t += "<kbd class='" + u.escape(n) + "'><span>" + u.escape(n) + "</span></kbd> + ")
                }),
                t
        },
        u.getShortcutKey = function(e) {
            var t = W.accelerators.SpecialKeys[e.keyCode];
            return t || (t = String.fromCharCode(e.keyCode)),
                t
        },
        u.formatDays = function(e) {
            return u._groupDays(e).map(function(e) {
                return e.length > 1 ? I18n.t("date.abbr_day_names")[e[0]] + "-" + I18n.t("date.abbr_day_names")[_.last(e)] : I18n.t("date.abbr_day_names")[e[0]]
            }).join(",")
        },
        u.formatMonthRange = function(e, t) {
            if (!e && !t)
                return "";
            if (t < e)
                return "";
            if (e && !t)
                return I18n.strftime(e, I18n.t("formats.date.month_range.end_missing"));
            if (t && !e)
                return I18n.strftime(t, I18n.t("formats.date.month_range.start_missing"));
            var n = e.getFullYear() === t.getFullYear(),
                i = n && e.getMonth() === t.getMonth(),
                r = I18n.strftime(e, "%b"),
                s = I18n.strftime(e, "%Y"),
                a = I18n.strftime(t, "%b"),
                o = I18n.strftime(t, "%Y"),
                l = void 0;
            return l = n ? i ? "formats.date.month_range.single_year_single_month" : "formats.date.month_range.single_year_multi_month" : "formats.date.month_range.multi_year",
                I18n.t(l, {
                    startMonth: r,
                    startYear: s,
                    endMonth: a,
                    endYear: o
                })
        },
        u.formatOpeningHour = function(e) {
            var t = u.formatDays(e.get("days"));
            return e.isAllDay() ? t += " " + I18n.t("edit.landmark.opening_hours.time_span.all_day") : t += " " + e.get("fromHour") + "-" + e.get("toHour"),
                t
        },
        u._groupDays = function(e) {
            var t = [],
                n = [],
                i = e.sort(),
                r = void 0;
            return "monday" === I18n.t("date.first_day") && 0 === i[0] && (i.shift(),
                    i.push(0)),
                r = i[0],
                i.forEach(function(e, s) {
                    Math.abs(e - r) % 6 <= 1 ? n.push(e) : (t.push(n),
                            n = [e]),
                        s === i.length - 1 && t.push(n),
                        r = e
                }),
                t
        },
        u.formatAddress = function(e) {
            return null == e ? I18n.t("edit.landmark.no_address") : e.format()
        },
        u.formatVenueCategories = function(e) {
            return (e = e.map(function(e) {
                return I18n.t("venues.categories." + e)
            })).sort().join(", ")
        },
        u.formatVenueName = function(e) {
            return e || I18n.t("edit.landmark.unnamed")
        },
        u.formatVenueUpdateRequestId = function(e) {
            var t = String(e).split("/");
            return t[t.length - 1]
        },
        u.getSaveErrorTitle = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "save.error_types.default.title",
                n = I18n.t("save.error_types")[e];
            return n && n.title || I18n.t(t)
        },
        u.formatYesNo = function(e) {
            return !0 === e ? I18n.t("formats.boolean.is_true") : I18n.t("formats.boolean.is_false")
        },
        u.escape = function(e) {
            return ("" + e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/\//g, "&#47;")
        },
        u.cleanValue = function(e) {
            switch (e) {
                case null:
                case void 0:
                    return "";
                case !0:
                case !1:
                    return "" + e;
                default:
                    return e
            }
        },
        u.categoryToClassName = function(e) {
            return "string" == typeof e ? e.toLowerCase().replace(/[^a-z0-9]+/g, "-") : ""
        },
        u.timeString = function(e) {
            var t = new Date(e),
                n = t.getHours();
            n < 10 && (n = "0" + n);
            var i = t.getMinutes();
            return i < 10 && (i = "0" + i),
                n + ":" + i
        },
        t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(0)),
        s = l(n(1)),
        a = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        o = l(n(185));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t, n) {
            (0,
                r.default)(this, e),
            this.id = null,
                this.state = null,
                this.persistent = !1,
                n && n.parse && t && this.parse(t),
                (0,
                    i.default)(this, t)
        }
        return (0,
                s.default)(e, [{
                key: "getID",
                value: function() {
                    return this.id || this.ID
                }
            }, {
                key: "getUniqueID",
                value: function() {
                    return this.type + ":" + this.getID()
                }
            }, {
                key: "setID",
                value: function(e) {
                    this.id = e
                }
            }, {
                key: "changeID",
                value: function(e) {
                    this._prevID = this.getID(),
                        this.setID(e)
                }
            }, {
                key: "isNew",
                value: function() {
                    var e = this.getID();
                    return e < 0 || null === e || _.isUndefined(e)
                }
            }, {
                key: "isDeleted",
                value: function() {
                    return Boolean(this.state && this.state === OpenLayers.State.DELETE)
                }
            }, {
                key: "isUpdated",
                value: function() {
                    return this.state === OpenLayers.State.UPDATE
                }
            }, {
                key: "isUnchanged",
                value: function() {
                    return !this.state
                }
            }, {
                key: "getVersion",
                value: function() {
                    return this.version || 1
                }
            }, {
                key: "clone",
                value: function() {
                    return new e(this)
                }
            }, {
                key: "setSelected",
                value: function(e) {
                    this.selected = e
                }
            }, {
                key: "isSelected",
                value: function() {
                    return Boolean(this.selected)
                }
            }, {
                key: "setSnapped",
                value: function(e) {
                    this.snapped = e
                }
            }, {
                key: "isSnapped",
                value: function() {
                    return Boolean(this.snapped)
                }
            }, {
                key: "setPersistent",
                value: function(e) {
                    this.persistent = e
                }
            }, {
                key: "isPersistent",
                value: function() {
                    return this.persistent
                }
            }, {
                key: "getPermissions",
                value: function() {
                    return a.isDefined(this.permissions) ? this.permissions : 0
                }
            }, {
                key: "isAllowed",
                value: function(e) {
                    return e && 0 != (this.getPermissions() & e)
                }
            }, {
                key: "isInUse",
                value: function(e) {
                    e = e || {};
                    var t = a.isDefined(this.state) && null !== this.state,
                        n = e.keepUnsaved && t,
                        i = e.keepSelected && (this.isSelected() || this.isSnapped()),
                        r = e.keepPersistent && this.isPersistent();
                    return n || i || r
                }
            }, {
                key: "isDeletable",
                value: function() {
                    return this.PERMISSIONS.DELETE && this.isAllowed(this.PERMISSIONS.DELETE)
                }
            }, {
                key: "arePropertiesEditable",
                value: function() {
                    return this.PERMISSIONS.EDIT_PROPERTIES && this.isAllowed(this.PERMISSIONS.EDIT_PROPERTIES)
                }
            }, {
                key: "isGeometryEditable",
                value: function() {
                    return this.PERMISSIONS.EDIT_GEOMETRY && this.isAllowed(this.PERMISSIONS.EDIT_GEOMETRY)
                }
            }, {
                key: "merge",
                value: function(e) {
                    this.parse(e),
                        _.extend(this, e),
                        this.originalValues && (this.originalValues = void 0)
                }
            }, {
                key: "getOriginalValue",
                value: function(e) {
                    return this.originalValues && !_.isUndefined(this.originalValues[e]) ? this.originalValues[e] : this[e]
                }
            }, {
                key: "getAttributes",
                value: function() {
                    return this
                }
            }]),
            e
    }();
    (0,
        i.default)(u.prototype, {
        CLASS_NAME: "Waze.Model.Object"
    }),
    _.extend(u.prototype, o.default),
        u.ALL_PERMISSIONS = 2147483647,
        t.default = u,
        e.exports = t.default
}, function(e, t) {
    var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    "number" == typeof __g && (__g = n)
}, function(e, t, n) {
    e.exports = {
        default: n(783),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(0)),
        s = o(n(1)),
        a = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this.model = null,
                this._timestamp = (new Date).getTime(),
                this._description = "",
                this._actionId = _.uniqueId(),
                (0,
                    i.default)(this, t)
        }
        return (0,
                s.default)(e, [{
                key: "getID",
                value: function() {
                    return this._actionId
                }
            }, {
                key: "destroy",
                value: function() {
                    this.model = null
                }
            }, {
                key: "isLeaf",
                value: function() {
                    return !0
                }
            }, {
                key: "accept",
                value: function(e) {
                    e.visit(this)
                }
            }, {
                key: "setModel",
                value: function(e) {
                    this.model = e
                }
            }, {
                key: "undoSupported",
                value: function() {
                    return a.isDefined(this.undoAction)
                }
            }, {
                key: "doAction",
                value: function() {}
            }, {
                key: "redoAction",
                value: function() {}
            }, {
                key: "undoAction",
                value: function() {}
            }, {
                key: "flat",
                value: function() {
                    return this
                }
            }, {
                key: "getBounds",
                value: function() {
                    return null
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return []
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return []
                }
            }, {
                key: "getTimestamp",
                value: function() {
                    return this._timestamp
                }
            }, {
                key: "generateDescription",
                value: function() {}
            }, {
                key: "getDescription",
                value: function() {
                    return this._description
                }
            }]),
            e
    }();
    (0,
        i.default)(l.prototype, {
        CLASS_NAME: "Waze.Action"
    }),
    l.TYPE = {
            ADD: "ADD",
            DELETE: "DELETE",
            UPDATE: "UPDATE",
            REPLACE: "REPLACE",
            MERGE: "MERGE"
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    var i = n(18),
        r = n(12),
        s = n(46),
        a = n(35),
        o = n(36),
        l = function(e, t, n) {
            var u, d, c, h = e & l.F,
                f = e & l.G,
                p = e & l.S,
                g = e & l.P,
                v = e & l.B,
                m = e & l.W,
                _ = f ? r : r[t] || (r[t] = {}),
                y = _.prototype,
                b = f ? i : p ? i[t] : (i[t] || {}).prototype;
            for (u in f && (n = t),
                n)
                (d = !h && b && void 0 !== b[u]) && o(_, u) || (c = d ? b[u] : n[u],
                    _[u] = f && "function" != typeof b[u] ? n[u] : v && d ? s(c, i) : m && b[u] == c ? function(e) {
                        var t = function(t, n, i) {
                            if (this instanceof e) {
                                switch (arguments.length) {
                                    case 0:
                                        return new e;
                                    case 1:
                                        return new e(t);
                                    case 2:
                                        return new e(t, n)
                                }
                                return new e(t, n, i)
                            }
                            return e.apply(this, arguments)
                        };
                        return t.prototype = e.prototype,
                            t
                    }(c) : g && "function" == typeof c ? s(Function.call, c) : c,
                    g && ((_.virtual || (_.virtual = {}))[u] = c,
                        e & l.R && y && !y[u] && a(y, u, c)))
        };
    l.F = 1,
        l.G = 2,
        l.S = 4,
        l.P = 8,
        l.B = 16,
        l.W = 32,
        l.U = 64,
        l.R = 128,
        e.exports = l
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(7)),
        r = h(n(25)),
        s = h(n(2)),
        a = h(n(0)),
        o = h(n(1)),
        l = h(n(3)),
        u = h(n(4)),
        d = h(n(20)),
        c = n(140);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e, n, i) {
            (0,
                a.default)(this, t);
            var r = (0,
                l.default)(this, (t.__proto__ || (0,
                s.default)(t)).call(this, i));
            return r.object = e,
                r.newAttributes = n,
                r.oldAttributes = {},
                r.object.writableAttributes ? r.newAttributes = _.pick(r.newAttributes, r.object.writableAttributes) : r.newAttributes = _.clone(r.newAttributes),
                r.changed = !1,
                r.stateChanged = !1,
                r.object.attributes ? r.attributes = r.object.attributes : r.attributes = r.object,
                r
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "doAction",
                value: function() {
                    this.repository = this.model.getRepository(this.object.type);
                    var e = !0,
                        t = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                r.default)((0,
                                i.default)(this.newAttributes)); !(e = (s = a.next()).done); e = !0) {
                            var o = s.value,
                                l = this.newAttributes[o];
                            this.attributes[o] !== l && (this._keepOriginal(o),
                                this.oldAttributes[o] = this.attributes[o],
                                this.attributes[o] = l,
                                this.changed = !0)
                        }
                    } catch (e) {
                        t = !0,
                            n = e
                    } finally {
                        try {
                            !e && a.return && a.return()
                        } finally {
                            if (t)
                                throw n
                        }
                    }
                    return !!this.changed && (this.object.state || (this.object.state = OL.State.UPDATE,
                            this.stateChanged = !0),
                        this.repository.changed(this.object),
                        !0)
                }
            }, {
                key: "_keepOriginal",
                value: function(e) {
                    this.object.keepOriginal && this.object.keepOriginal[e] && (this.object.originalValues || (this.object.originalValues = {}),
                        _.isUndefined(this.object.originalValues[e]) && (this.object.originalValues[e] = this.attributes[e]))
                }
            }, {
                key: "undoAction",
                value: function() {
                    var e = !0,
                        t = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                r.default)((0,
                                i.default)(this.oldAttributes)); !(e = (s = a.next()).done); e = !0) {
                            var o = s.value,
                                l = this.oldAttributes[o];
                            this.attributes[o] = l
                        }
                    } catch (e) {
                        t = !0,
                            n = e
                    } finally {
                        try {
                            !e && a.return && a.return()
                        } finally {
                            if (t)
                                throw n
                        }
                    }
                    return this.stateChanged && (this.object.state = null),
                        this.repository.changed(this.object)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.stateChanged && (this.object.state = OL.State.UPDATE);
                    var e = !0,
                        t = !1,
                        n = void 0;
                    try {
                        for (var s, a = (0,
                                r.default)((0,
                                i.default)(this.newAttributes)); !(e = (s = a.next()).done); e = !0) {
                            var o = s.value,
                                l = this.newAttributes[o];
                            this.attributes[o] = l
                        }
                    } catch (e) {
                        t = !0,
                            n = e
                    } finally {
                        try {
                            !e && a.return && a.return()
                        } finally {
                            if (t)
                                throw n
                        }
                    }
                    return this.repository.changed(this.object)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = this.newAttributes;
                    return e.id = this.object.getID(), {
                        _objectType: this.object.type,
                        action: d.default.TYPE.UPDATE,
                        attributes: e
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.object.getUniqueID()]
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.object]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = (0,
                        c.generateUpdateActionDescription)(this)
                }
            }]),
            t
    }(d.default);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    var i = n(80)("wks"),
        r = n(57),
        s = n(18).Symbol,
        a = "function" == typeof s;
    (e.exports = function(e) {
        return i[e] || (i[e] = a && s[e] || (a ? s : r)("Symbol." + e))
    }).store = i
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.isSequential = t.printMap = t.runLater = t.deepClone = t.protect = t.localStorage = t.defined = t.isDefined = t.isUndefined = void 0;
    var i = l(n(61)),
        r = l(n(19)),
        s = l(n(63)),
        a = l(n(138)),
        o = n(30);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = {
        get: function(e) {
            try {
                var t = window.localStorage.getItem(e);
                return t ? JSON.parse(t) : null
            } catch (e) {
                return null
            }
        },
        set: function(e, t) {
            try {
                return t = (0,
                        a.default)(t),
                    window.localStorage.setItem(e, t),
                    !0
            } catch (e) {
                return !1
            }
        }
    };
    t.isUndefined = function(e) {
            return _.isUndefined(e)
        },
        t.isDefined = function(e) {
            return !_.isUndefined(e)
        },
        t.defined = function(e) {
            return void 0 !== e && null !== e
        },
        t.localStorage = u,
        t.protect = function(e, t, n) {
            var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            try {
                return t.call(n)
            } catch (t) {
                if ((0,
                        o.httpPost)(W.Config.paths.logger, {
                        action: e,
                        type: t.name,
                        message: t.message,
                        trace: t.stack
                    }),
                    !i)
                    throw t
            }
        },
        t.deepClone = function e(t) {
            if ("object" === (void 0 === t ? "undefined" : (0,
                    s.default)(t)) && null !== t) {
                if (Array.isArray(t))
                    return t.map(function(t) {
                        return e(t)
                    });
                if ("function" == typeof t.clone)
                    return t.clone();
                if ("function" == typeof t.__clone)
                    return t.__clone();
                var n = {};
                for (var i in t)
                    t.hasOwnProperty(i) && (n[i] = e(t[i]));
                return n
            }
            return t
        },
        t.runLater = function(e) {
            r.default.resolve().then(e)
        },
        t.printMap = function(e) {
            return "{" + (0,
                i.default)(e).map(function(e) {
                return e[0] + ": " + e[1]
            }).join(",") + "}"
        },
        t.isSequential = function(e) {
            if (e.length < 2)
                return !0;
            for (var t = 1; t < e.length; t++)
                if (e[t] - e[t - 1] != 1)
                    return !1;
            return !0
        }
}, function(e, t, n) {
    e.exports = {
        default: n(766),
        __esModule: !0
    }
}, function(e, t) {
    e.exports = function(e) {
        return "object" == typeof e ? null !== e : "function" == typeof e
    }
}, function(e, t, n) {
    var i = n(28),
        r = n(112),
        s = n(78),
        a = Object.defineProperty;
    t.f = n(29) ? Object.defineProperty : function(e, t, n) {
        if (i(e),
            t = s(t, !0),
            i(n),
            r)
            try {
                return a(e, t, n)
            } catch (e) {}
        if ("get" in n || "set" in n)
            throw TypeError("Accessors not supported!");
        return "value" in n && (e[t] = n.value),
            e
    }
}, function(e, t, n) {
    var i = n(26);
    e.exports = function(e) {
        if (!i(e))
            throw TypeError(e + " is not an object!");
        return e
    }
}, function(e, t, n) {
    e.exports = !n(39)(function() {
        return 7 != Object.defineProperty({}, "a", {
            get: function() {
                return 7
            }
        }).a
    })
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.FetchError = t.addHttpResponseMiddleware = t.addHttpRequestMiddleware = t.httpRequest = t.httpPost = t.httpGet = void 0;
    var i = p(n(137)),
        r = p(n(136)),
        s = p(n(62)),
        a = p(n(184)),
        o = p(n(6)),
        l = p(n(2)),
        u = p(n(0)),
        d = p(n(3)),
        c = p(n(4)),
        h = p(n(7)),
        f = p(n(138));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = [],
        v = [],
        m = /(application|text)\/(x-)?json/;

    function _(e) {
        if (204 === e.status)
            return !1;
        var t = e.headers.get("content-type");
        return t && m.test(t)
    }
    var y = function(e) {
        function t(e) {
            (0,
                u.default)(this, t);
            var n = _(e) ? (0,
                    f.default)(e.parsedJSON) : e.statusText,
                i = (0,
                    d.default)(this, (t.__proto__ || (0,
                    l.default)(t)).call(this, "Server Response Error: " + n));
            return Error.captureStackTrace && Error.captureStackTrace(i, t),
                i.response = _(e) ? e.parsedJSON : e.statusText,
                i.status = e.status,
                i
        }
        return (0,
                c.default)(t, e),
            t
    }(function(e) {
        function t() {
            var t = (0,
                a.default)(e, (0,
                s.default)(arguments));
            return (0,
                    r.default)(t, (0,
                    l.default)(this)),
                t
        }
        return t.prototype = (0,
                i.default)(e.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            r.default ? (0,
                r.default)(t, e) : t.__proto__ = e,
            t
    }(Error));

    function b(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            i = n.method,
            r = void 0 === i ? "GET" : i,
            s = n.dataType,
            a = void 0 === s ? "form" : s,
            o = n.signal,
            l = void 0 === o ? null : o,
            u = new Headers,
            d = function(e, t, n, i, r) {
                var s = void 0;
                return null != t && ("GET" !== i && "HEAD" !== i ? "json" === n ? (s = (0,
                        f.default)(t),
                    r.append("Content-Type", "application/json; charset=utf-8")) : s = new URLSearchParams(t) : (e = new URL(e, location.origin),
                    (0,
                        h.default)(t).forEach(function(n) {
                        return e.searchParams.append(n, t[n] || "")
                    }))), {
                    url: e,
                    body: s
                }
            }(e, t, a, r, u),
            c = d.url,
            p = d.body,
            m = new Request(c, {
                body: p,
                method: r,
                headers: u,
                credentials: "same-origin"
            });
        return g.forEach(function(e) {
                e.call(void 0, m)
            }),
            fetch(m, {
                signal: l
            }).then(function(e) {
                var t = void 0;
                return t = _(e) ? e.json().then(function(t) {
                        return e.parsedJSON = t,
                            e
                    }).catch(function() {
                        return e.parsedJSON = {},
                            e
                    }) : e.text().then(function(t) {
                        return e.bodyText = t,
                            e
                    }).catch(function() {
                        e.bodyText = ""
                    }),
                    v.forEach(function(n) {
                        t = t.then(function() {
                            return n.call(void 0, e)
                        })
                    }),
                    e.ok ? t.then(function() {
                        return e
                    }) : t.then(function() {
                        throw new y(e)
                    })
            }).then(function(e) {
                return _(e) ? e.parsedJSON : e.bodyText
            })
    }
    t.httpGet = function(e, t, n) {
            return b(e, t, (0,
                o.default)({
                method: "GET"
            }, n))
        },
        t.httpPost = function(e, t, n) {
            return b(e, t, (0,
                o.default)({
                method: "POST"
            }, n))
        },
        t.httpRequest = b,
        t.addHttpRequestMiddleware = function(e) {
            g.push(e)
        },
        t.addHttpResponseMiddleware = function(e) {
            v.push(e)
        },
        t.FetchError = y
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t, n) {
            (0,
                r.default)(this, e),
            this.events = null,
                this.className = t,
                this.moveWithTransform = Boolean(n),
                this.$div = $("<div />").addClass(t),
                this.div = this.$div.get(0),
                this.imageDiv = this.$div.get(0)
        }
        return (0,
                s.default)(e, [{
                key: "destroy",
                value: function() {
                    this.erase(),
                        this.$div = null
                }
            }, {
                key: "clone",
                value: function() {
                    return new e(this.className)
                }
            }, {
                key: "draw",
                value: function(e) {
                    return this.moveWithTransform ? (this.$div.css({
                                transform: "translate(" + e.x + "px, " + e.y + "px)"
                            }),
                            this.$div.css({
                                position: "absolute"
                            })) : this.$div.css({
                            position: "absolute",
                            left: e.x,
                            top: e.y
                        }),
                        this.$div.get(0)
                }
            }, {
                key: "moveTo",
                value: function(e) {
                    null !== e && (this.px = e),
                        null === this.px ? this.display(!1) : this.moveWithTransform ? this.$div.css({
                            transform: "translate(" + this.px.x + "px, " + this.px.y + "px)"
                        }) : this.$div.css({
                            left: this.px.x,
                            top: this.px.y
                        })
                }
            }, {
                key: "erase",
                value: function() {
                    this.$div.remove()
                }
            }, {
                key: "display",
                value: function(e) {
                    this.$div.toggle(e)
                }
            }, {
                key: "isDrawn",
                value: function() {
                    return Boolean(this.$div.parent().length)
                }
            }, {
                key: "bringToFront",
                value: function() {
                    if (this.isDrawn()) {
                        var e = this.$div.parent();
                        this.$div.detach().appendTo(e)
                    }
                }
            }, {
                key: "forceReflow",
                value: function() {
                    return this.$div.get(0).offsetWidth
                }
            }]),
            e
    }();
    (0,
        i.default)(o.prototype, {
        CLASS_NAME: "Waze.DivIcon"
    }),
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.ADDED = "objectsadded",
        t.CHANGED = "objectschanged",
        t.CHANGED_ID = "objectschanged-id",
        t.REMOVED = "objectsremoved",
        t.SYNCED = "objectssynced",
        t.UPDATED = "objectsupdated"
}, function(e, t, n) {
    var i = n(115),
        r = n(77);
    e.exports = function(e) {
        return i(r(e))
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n) {
            (0,
                i.default)(this, e),
            this._segmentID = t,
                this._direction = n
        }
        return (0,
                r.default)(e, [{
                key: "isForward",
                value: function() {
                    return this._direction === e.Direction.FORWARD
                }
            }, {
                key: "isReverse",
                value: function() {
                    return this._direction === e.Direction.REVERSE
                }
            }, {
                key: "getSegmentID",
                value: function() {
                    return this._segmentID
                }
            }, {
                key: "getOpposite",
                value: function() {
                    return this.isForward() ? new e(this._segmentID, e.Direction.REVERSE) : new e(this._segmentID, e.Direction.FORWARD)
                }
            }, {
                key: "equals",
                value: function(e) {
                    return this._segmentID === e._segmentID && this._direction === e._direction
                }
            }, {
                key: "getID",
                value: function() {
                    return this._segmentID + (this._direction ? "f" : "r")
                }
            }, {
                key: "toString",
                value: function() {
                    return this.getID()
                }
            }], [{
                key: "forwardOf",
                value: function(t) {
                    return new e(t, e.Direction.FORWARD)
                }
            }, {
                key: "reverseOf",
                value: function(t) {
                    return new e(t, e.Direction.REVERSE)
                }
            }, {
                key: "for",
                value: function(t, n) {
                    return t.attributes.toNodeID === n.getID() ? e.forwardOf(t.getID()) : e.reverseOf(t.getID())
                }
            }, {
                key: "fromID",
                value: function(t) {
                    var n = parseInt(t.slice(0, -1), 10),
                        i = t.slice(-1);
                    return new e(n, i = "f" === i ? e.Direction.FORWARD : e.Direction.REVERSE)
                }
            }]),
            e
    }();
    a.Direction = {
            FORWARD: !0,
            REVERSE: !1
        },
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    var i = n(27),
        r = n(50);
    e.exports = n(29) ? function(e, t, n) {
            return i.f(e, t, r(1, n))
        } :
        function(e, t, n) {
            return e[t] = n,
                e
        }
}, function(e, t) {
    var n = {}.hasOwnProperty;
    e.exports = function(e, t) {
        return n.call(e, t)
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.FLAG_ATTRIBUTES = t.SEGMENT_DELETION_REJECTION = t.WALKING_ROAD_TYPES = t.HIGHWAY_ROAD_TYPES = t.ROAD_TYPES = void 0;
    var i = A(n(9)),
        r = A(n(6)),
        s = A(n(7)),
        a = A(n(25)),
        o = A(n(2)),
        l = A(n(0)),
        u = A(n(1)),
        d = A(n(3)),
        c = A(n(4)),
        h = A(n(17)),
        f = A(n(117)),
        p = A(n(45)),
        g = A(n(13)),
        v = n(119),
        m = n(867),
        y = A(n(22)),
        b = C(n(24)),
        w = A(n(47)),
        k = A(n(192)),
        E = A(n(34)),
        M = A(n(89)),
        S = n(71),
        T = A(S),
        I = C(n(195));

    function C(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }

    function A(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var O = {
            NOT_REJECTED: 0,
            USER_RANK_TOO_LOW: 1,
            USER_QUOTA_EXCEEDED: 2,
            IN_BIG_JUNCTION: 3,
            HAS_CLOSURES: 4,
            OTHER_REASON: 5
        },
        x = {
            STREET: 1,
            PRIMARY_STREET: 2,
            FREEWAY: 3,
            RAMP: 4,
            WALKING_TRAIL: 5,
            MAJOR_HIGHWAY: 6,
            MINOR_HIGHWAY: 7,
            OFF_ROAD: 8,
            PEDESTRIAN_BOARDWALK: 10,
            FERRY: 15,
            STAIRWAY: 16,
            PRIVATE_ROAD: 17,
            RAILROAD: 18,
            RUNWAY_TAXIWAY: 19,
            PARKING_LOT_ROAD: 20,
            ALLEY: 22
        },
        D = [x.FREEWAY, x.RAMP, x.MAJOR_HIGHWAY, x.MINOR_HIGHWAY],
        R = [x.STREET, x.PRIMARY_STREET, x.MINOR_HIGHWAY, x.MAJOR_HIGHWAY, x.FREEWAY],
        L = [x.STREET, x.PRIMARY_STREET, x.WALKING_TRAIL, x.MAJOR_HIGHWAY, x.MINOR_HIGHWAY, x.OFF_ROAD, x.PEDESTRIAN_BOARDWALK, x.STAIRWAY, x.PRIVATE_ROAD, x.PARKING_LOT_ROAD, x.ALLEY],
        P = [x.WALKING_TRAIL, x.PEDESTRIAN_BOARDWALK, x.STAIRWAY],
        N = [].concat(P, [x.RAILROAD, x.RUNWAY_TAXIWAY]),
        V = {
            tunnel: {
                mask: "flags",
                flag: m.FLAGS.TUNNEL
            },
            unpaved: {
                mask: "flags",
                flag: m.FLAGS.UNPAVED
            },
            headlights: {
                mask: "flags",
                flag: m.FLAGS.HEADLIGHTS
            },
            nearbyHOV: {
                mask: "flags",
                flag: m.FLAGS.NEARBY_HOV
            },
            fwdSpeedCamera: {
                mask: "fwdFlags",
                flag: m.FWD.SPEED_CAMERA
            },
            revSpeedCamera: {
                mask: "revFlags",
                flag: m.REV.SPEED_CAMERA
            }
        },
        U = function(e) {
            function t() {
                return (0,
                        l.default)(this, t),
                    (0,
                        d.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    c.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            type: 1,
                            roadType: 1,
                            fromNodeID: null,
                            toNodeID: null,
                            virtualNodeIDs: [],
                            crossroadID: null,
                            fwdDirection: !0,
                            revDirection: !1,
                            fwdMaxSpeed: null,
                            revMaxSpeed: null,
                            fwdToll: null,
                            revToll: null,
                            hasHNs: !1,
                            fwdMaxSpeedUnverified: !1,
                            revMaxSpeedUnverified: !1,
                            fwdTurnsLocked: !0,
                            revTurnsLocked: !0,
                            level: 0,
                            allowNoDirection: !0,
                            rank: 0,
                            lockRank: null,
                            permissions: h.default.ALL_PERMISSIONS & ~this.PERMISSIONS.EDIT_ROUTING_ROAD_TYPES,
                            routingRoadType: null,
                            flags: 0,
                            fwdFlags: 0,
                            revFlags: 0,
                            primaryStreetID: null,
                            fromCrossroads: [],
                            toCrossroads: [],
                            streetIDs: [],
                            restrictions: [],
                            pickupRestrictions: [],
                            fwdLaneCount: 0,
                            revLaneCount: 0
                        }
                    }
                }, {
                    key: "getEndPoints",
                    value: function() {
                        return this.geometry.getVertices(!0)
                    }
                }, {
                    key: "getFlagAttributes",
                    value: function() {
                        var e = {},
                            t = !0,
                            n = !1,
                            i = void 0;
                        try {
                            for (var r, o = (0,
                                    a.default)((0,
                                    s.default)(this.FLAG_ATTRIBUTES)); !(t = (r = o.next()).done); t = !0) {
                                var l = r.value;
                                e[l] = this.getFlagAttribute(l)
                            }
                        } catch (e) {
                            n = !0,
                                i = e
                        } finally {
                            try {
                                !t && o.return && o.return()
                            } finally {
                                if (n)
                                    throw i
                            }
                        }
                        return e
                    }
                }, {
                    key: "getFlagAttribute",
                    value: function(e) {
                        var t = this.FLAG_ATTRIBUTES[e],
                            n = this.attributes[t.mask];
                        return new f.default(n).isEnabled(t.flag)
                    }
                }, {
                    key: "merge",
                    value: function() {
                        return delete this.attributes.origIDs,
                            p.default.prototype.merge.apply(this, arguments)
                    }
                }, {
                    key: "copyAttributes",
                    value: function(e) {
                        var t = this.attributes,
                            n = t.geometry;
                        (0,
                            r.default)(t, e.attributes);
                        var i = !0,
                            o = !1,
                            l = void 0;
                        try {
                            for (var u, d = (0,
                                    a.default)((0,
                                    s.default)(t)); !(i = (u = d.next()).done); i = !0) {
                                var c = u.value,
                                    h = t[c];
                                h instanceof Array && (t[c] = h.slice(0))
                            }
                        } catch (e) {
                            o = !0,
                                l = e
                        } finally {
                            try {
                                !i && d.return && d.return()
                            } finally {
                                if (o)
                                    throw l
                            }
                        }
                        delete t.origIDs,
                            t.geometry = n
                    }
                }, {
                    key: "setSelected",
                    value: function(e) {
                        p.default.prototype.setSelected.apply(this, arguments),
                            this.getAddress().setSelected(e)
                    }
                }, {
                    key: "getAddress",
                    value: function() {
                        return M.default.fromStreetID(this.attributes.primaryStreetID, this.model, {
                            altStreets: this.attributes.streetIDs
                        })
                    }
                }, {
                    key: "getCenter",
                    value: function() {
                        for (var e = this.geometry.getLength(), t = e / 2, n = e, i = 1, r = this.geometry.components.length; i < r;) {
                            if ((n -= this.geometry.components[i - 1].distanceTo(this.geometry.components[i])) <= t)
                                break;
                            i++
                        }
                        var s = this.geometry.components[i - 1],
                            a = this.geometry.components[i],
                            o = Math.atan2(a.y - s.y, a.x - s.x),
                            l = t - n,
                            u = new OpenLayers.Geometry.Point(s.x, s.y);
                        return u.x += l * Math.cos(o),
                            u.y += l * Math.sin(o),
                            u
                    }
                }, {
                    key: "getArrowPoints",
                    value: function(e, t, n) {
                        var i = [],
                            r = this.geometry.components,
                            s = 0,
                            a = 0;
                        if (!b.defined(e))
                            return [];
                        t && t < e && (s += e - t);
                        for (var o = r[a]; a < r.length - 1;) {
                            var l = r[a + 1],
                                u = o.distanceTo(l);
                            if (n && a === r.length - 2 && (u -= n),
                                s + u < e)
                                s += u,
                                a++,
                                o = l;
                            else {
                                var d = Math.atan2(l.y - o.y, l.x - o.x),
                                    c = e - s;
                                (o = new OpenLayers.Geometry.Point(o.x, o.y)).move(c * Math.cos(d), c * Math.sin(d)),
                                    i.push([o.clone(), d]),
                                    s = 0
                            }
                        }
                        return i
                    }
                }, {
                    key: "getSubSegment",
                    value: function(e, t) {
                        var n = 0,
                            i = this.geometry.components,
                            r = [],
                            s = 0;
                        t && (i = i.clone().reverse());
                        var a = i[0];
                        for (r.push(new OpenLayers.Geometry.Point(a.x, a.y)); n < e && s < i.length - 1;) {
                            var o = i[s + 1],
                                l = a.distanceTo(o);
                            if (n + l < e)
                                r.push(new OpenLayers.Geometry.Point(o.x, o.y)),
                                n += l,
                                a = o,
                                s++;
                            else {
                                var u = e - n,
                                    d = Math.atan2(o.y - a.y, o.x - a.x);
                                (a = new OpenLayers.Geometry.Point(a.x, a.y)).move(u * Math.cos(d), u * Math.sin(d)),
                                    r.push(a),
                                    n = e
                            }
                        }
                        return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(r))
                    }
                }, {
                    key: "clone",
                    value: function() {
                        var e = _.extend({}, this.attributes);
                        this.attributes.geometry && (e.geometry = this.attributes.geometry.clone());
                        var n = new t(e);
                        return this.attributes.streetIDs && (n.attributes.streetIDs = this.attributes.streetIDs.concat()),
                            n
                    }
                }, {
                    key: "splitByGeoms",
                    value: function(e) {
                        var t = this.clone(),
                            n = [];
                        return delete t.geometry,
                            e.forEach(function(e) {
                                var i = t.clone();
                                i.geometry = e,
                                    i.geometry.calculateBounds(),
                                    i.state = OpenLayers.State.INSERT,
                                    n.push(i)
                            }),
                            n
                    }
                }, {
                    key: "isOneWay",
                    value: function() {
                        return this.attributes.fwdDirection ? !this.attributes.revDirection : this.attributes.revDirection
                    }
                }, {
                    key: "isDeletable",
                    value: function() {
                        return this.deletionRejection() === O.NOT_REJECTED
                    }
                }, {
                    key: "deletionRejection",
                    value: function() {
                        if (this.isInBigJunction())
                            return O.IN_BIG_JUNCTION;
                        if (this.hasClosures())
                            return O.HAS_CLOSURES;
                        var e = W.loginManager.user;
                        if (e) {
                            if (this.attributes.createdBy === e.id)
                                return O.NOT_REJECTED;
                            var t = e.canDeleteSegments();
                            if (t !== O.NOT_REJECTED)
                                return t
                        }
                        return this.isAllowed(v.Segments.DELETE) ? O.NOT_REJECTED : O.OTHER_REASON
                    }
                }, {
                    key: "reverseDirection",
                    value: function() {
                        this.isOneWay() && (this.attributes.fwdDirection = !this.attributes.fwdDirection,
                            this.attributes.revDirection = !this.attributes.revDirection)
                    }
                }, {
                    key: "isConnectedToNode",
                    value: function(e) {
                        return this.attributes.toNodeID === e.getID() || this.attributes.fromNodeID === e.getID()
                    }
                }, {
                    key: "isVirtuallyConnectedToNode",
                    value: function(e) {
                        return this.attributes.virtualNodeIDs.includes(e.getID())
                    }
                }, {
                    key: "isPoint",
                    value: function() {
                        var e = this.geometry.components[0];
                        return this.geometry.components.every(function(t) {
                            return t.equals(e)
                        })
                    }
                }, {
                    key: "edgeIntersectionWithEllipse",
                    value: function(e, t, n, i, r) {
                        var s = 1,
                            a = 1,
                            o = void 0;
                        n > i ? (a = n / i,
                            o = n) : (s = i / n,
                            o = i);
                        var l = (e[1].x - e[0].x) * s,
                            u = (e[1].y - e[0].y) * a,
                            d = (e[0].x - t.x) * s,
                            c = (e[0].y - t.y) * a,
                            h = (e[1].x - t.x) * s,
                            f = (e[1].y - t.y) * a,
                            p = Math.sqrt(d * d + c * c),
                            g = p < o,
                            v = [],
                            m = l * l + u * u,
                            y = 2 * (d * l + c * u),
                            b = y * y - 4 * m * (d * d + c * c - o * o);
                        return !(b < 0) && ([(-y + (b = Math.sqrt(b))) / (2 * m), (-y - b) / (2 * m)].sort().forEach(function(n) {
                                if (n >= 0 && n <= 1) {
                                    var i = new OpenLayers.Geometry.Point(e[0].x + n * l / s, e[0].y + n * u / a);
                                    v.push({
                                            point: i,
                                            angle: (2 * Math.PI + Math.atan2((i.y - t.y) * a, (i.x - t.x) * s)) % (2 * Math.PI),
                                            goingOut: g,
                                            index: r
                                        }),
                                        g = !g
                                }
                            }),
                            _.isEmpty(v) ? p < o && Math.sqrt(h * h + f * f) < o : v)
                    }
                }, {
                    key: "intersectionWithEllipse",
                    value: function(e, t, n) {
                        for (var i = this.geometry.getVertices(), r = [], s = !0, a = i[0], o = 0; o < i.length - 1;) {
                            var l = i[o + 1],
                                u = this.edgeIntersectionWithEllipse([a, l], e, t, n, o);
                            if (u instanceof Array ? r = r.concat(u) : s &= u,
                                r.length > 2)
                                return !1;
                            a = l,
                                o++
                        }
                        return _.isEmpty(r) ? s : r
                    }
                }, {
                    key: "getEntireStreet",
                    value: function() {
                        var e = this.attributes.primaryStreetID,
                            t = this.model.streets.getObjectById(e);
                        return !t || t.isEmpty ? [this] : _.values(this.model.segments.objects).filter(function(t) {
                            return t.attributes.primaryStreetID === e
                        })
                    }
                }, {
                    key: "getConnectedSegments",
                    value: function(e) {
                        var t = this,
                            n = this.model.nodes.getObjectById(this.attributes[e + "NodeID"]);
                        return n ? n.attributes.segIDs.map(function(e) {
                            return t.model.segments.getObjectById(e)
                        }).filter(function(e) {
                            return Boolean(e)
                        }) : []
                    }
                }, {
                    key: "getTurnsLockAttribute",
                    value: function(e) {
                        return e.getID() === this.attributes.toNodeID ? "fwdTurnsLocked" : "revTurnsLocked"
                    }
                }, {
                    key: "getNodeAttribute",
                    value: function(e) {
                        return this.attributes.fromNodeID === e.getID() ? "from" : this.attributes.toNodeID === e.getID() ? "to" : null
                    }
                }, {
                    key: "areTurnsLocked",
                    value: function(e) {
                        return e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked : this.attributes.revTurnsLocked
                    }
                }, {
                    key: "setTurnsLock",
                    value: function(e, t) {
                        e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked = t : this.attributes.revTurnsLocked = t
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.getID() === this.getID() && e.type === this.type
                    }
                }, {
                    key: "isLockedByHigherRank",
                    value: function() {
                        return !(!this.attributes.lockRank || !this.model.loginManager.isLoggedIn()) && this.getLockRank() > this.model.loginManager.user.rank
                    }
                }, {
                    key: "getLockRank",
                    value: function() {
                        return null === this.attributes.lockRank ? this.attributes.rank : this.attributes.lockRank
                    }
                }, {
                    key: "hasNonEmptyStreet",
                    value: function() {
                        var e = this.getAddress();
                        return null != e.getStreet() && !e.isEmptyStreet()
                    }
                }, {
                    key: "isHighway",
                    value: function() {
                        return D.includes(this.attributes.roadType)
                    }
                }, {
                    key: "isDrivable",
                    value: function() {
                        return !N.includes(this.attributes.roadType)
                    }
                }, {
                    key: "isWalkingRoadType",
                    value: function() {
                        return P.includes(this.attributes.roadType)
                    }
                }, {
                    key: "getVirtualNodes",
                    value: function() {
                        var e = this;
                        return this.attributes.virtualNodeIDs.map(function(t) {
                            return e.model.nodes.getObjectById(t)
                        }).filter(function(e) {
                            return null != e
                        })
                    }
                }, {
                    key: "hasFromNode",
                    value: function() {
                        return null !== this.attributes.fromNodeID
                    }
                }, {
                    key: "getFromNode",
                    value: function() {
                        return this.hasFromNode() ? this.model.nodes.getObjectById(this.attributes.fromNodeID) : null
                    }
                }, {
                    key: "hasToNode",
                    value: function() {
                        return null !== this.attributes.toNodeID
                    }
                }, {
                    key: "getToNode",
                    value: function() {
                        return this.hasToNode() ? this.model.nodes.getObjectById(this.attributes.toNodeID) : null
                    }
                }, {
                    key: "getNodeByDirection",
                    value: function(e) {
                        return null != this.attributes[e + "NodeID"] ? this.model.nodes.getObjectById(this.attributes[e + "NodeID"]) : null
                    }
                }, {
                    key: "isToNode",
                    value: function(e) {
                        return !!this.hasToNode() && e.getID() === this.getToNode().getID()
                    }
                }, {
                    key: "isFromNode",
                    value: function(e) {
                        return !!this.hasFromNode() && e.getID() === this.getFromNode().getID()
                    }
                }, {
                    key: "isInBigJunction",
                    value: function() {
                        return this.isBigJunctionShort() || this.hasFromBigJunction() || this.hasToBigJunction()
                    }
                }, {
                    key: "isBigJunctionShort",
                    value: function() {
                        return null != this.attributes.crossroadID
                    }
                }, {
                    key: "getBigJunction",
                    value: function() {
                        return this.isBigJunctionShort() ? this.model.bigJunctions.getObjectById(this.attributes.crossroadID) : null
                    }
                }, {
                    key: "hasFromBigJunction",
                    value: function(e) {
                        return null != e ? _.includes(this.attributes.fromCrossroads, e) : this.attributes.fromCrossroads.length > 0
                    }
                }, {
                    key: "getFromBigJunction",
                    value: function() {
                        return this.hasFromBigJunction() ? this.model.bigJunctions.getObjectById(this.attributes.fromCrossroads) : null
                    }
                }, {
                    key: "hasToBigJunction",
                    value: function(e) {
                        return null != e ? _.contains(this.attributes.toCrossroads, e) : this.attributes.toCrossroads.length > 0
                    }
                }, {
                    key: "getToBigJunction",
                    value: function() {
                        return this.hasToBigJunction() ? this.model.bigJunctions.getObjectById(this.attributes.toCrossroads) : null
                    }
                }, {
                    key: "getRelatedBigJunction",
                    value: function() {
                        return this.getBigJunction() || this.getFromBigJunction() || this.getToBigJunction()
                    }
                }, {
                    key: "getBigJunctionRank",
                    value: function() {
                        var e = this.getRelatedBigJunction();
                        return e ? e.rank : 0
                    }
                }, {
                    key: "isJunctionEntry",
                    value: function() {
                        return !this.isBigJunctionShort() && (this.hasFromBigJunction() || this.hasToBigJunction())
                    }
                }, {
                    key: "getJunctionTurns",
                    value: function() {
                        var e = [];
                        return null != this.getFromBigJunction() && e.push.apply(e, (0,
                                i.default)(this.getFromBigJunction().getTurnsFrom(E.default.reverseOf(this.getID())))),
                            null != this.getToBigJunction() && e.push.apply(e, (0,
                                i.default)(this.getToBigJunction().getTurnsFrom(E.default.forwardOf(this.getID())))),
                            e
                    }
                }, {
                    key: "getConnectedSegmentsByDirection",
                    value: function(e) {
                        var t = this;
                        return this.getConnectedSegments(e).filter(function(n) {
                            if (n === t)
                                return !1;
                            var i = t.getNodeByDirection(e);
                            return t.isTurnAllowed(n, i) || n.isTurnAllowed(t, i)
                        })
                    }
                }, {
                    key: "canForceHouseNumbers",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.FORCE_HOUSE_NUMBERS)
                    }
                }, {
                    key: "canEditHouseNumbers",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_HOUSE_NUMBERS)
                    }
                }, {
                    key: "isClosuresSupported",
                    value: function() {
                        return !this.isWalkingRoadType()
                    }
                }, {
                    key: "canEditClosures",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_CLOSURES)
                    }
                }, {
                    key: "canEditHeadlightsReminder",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_HEADLIGHTS_REMINDER)
                    }
                }, {
                    key: "canEditAverageSpeedCamera",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_AVERAGE_SPEED_CAMERA)
                    }
                }, {
                    key: "isSpeedUnverified",
                    value: function(e) {
                        return !0 === this.attributes[e]
                    }
                }, {
                    key: "canChangeMaxSpeedUnverified",
                    value: function(e) {
                        return this.arePropertiesEditable() && this.isSpeedUnverified(e)
                    }
                }, {
                    key: "arePropertiesEditable",
                    value: function() {
                        return !this.hasClosures() && p.default.prototype.arePropertiesEditable.apply(this, arguments)
                    }
                }, {
                    key: "isGeometryEditable",
                    value: function() {
                        return !this.isInBigJunction() && !this.hasClosures() && p.default.prototype.isGeometryEditable.apply(this, arguments)
                    }
                }, {
                    key: "hasClosures",
                    value: function() {
                        return Boolean(this.attributes.hasClosures)
                    }
                }, {
                    key: "lockTurns",
                    value: function(e, t) {
                        var n = {};
                        n[this.getTurnsLockAttribute(e)] = !0;
                        var i = new y.default(this, n);
                        return t ? i : this.model.actionManager.add(i)
                    }
                }, {
                    key: "getFwdHeading",
                    value: function() {
                        var e = this.geometry.components;
                        return g.default.getHeading(e[0], e[e.length - 1])
                    }
                }, {
                    key: "getRevHeading",
                    value: function() {
                        var e = this.geometry.components;
                        return g.default.getHeading(e[e.length - 1], e[0])
                    }
                }, {
                    key: "isTurnAllowed",
                    value: function(e, t) {
                        return null != t && this.model.getTurnGraph().getTurnThroughNode(t, this, e).getTurnData().isAllowed()
                    }
                }, {
                    key: "canUserSetDefaultRank",
                    value: function(e) {
                        return e >= this.attributes.rank
                    }
                }, {
                    key: "canEditRoutingRoadTypes",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_ROUTING_ROAD_TYPES)
                    }
                }, {
                    key: "canEditConnections",
                    value: function() {
                        return this.canEditFromConnections() && this.canEditToConnections()
                    }
                }, {
                    key: "canEditFromConnections",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_CONNECTIONS) && !this.hasFromBigJunction()
                    }
                }, {
                    key: "canEditToConnections",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT_CONNECTIONS) && !this.hasToBigJunction()
                    }
                }, {
                    key: "isRoutable",
                    value: function() {
                        return R.includes(this.attributes.roadType)
                    }
                }, {
                    key: "isInRoundabout",
                    value: function() {
                        return null != this.attributes.junctionID
                    }
                }, {
                    key: "getRoundabout",
                    value: function() {
                        return this.isInRoundabout() ? this.model.junctions.getObjectById(this.attributes.junctionID) : null
                    }
                }, {
                    key: "isEntireRoundabout",
                    value: function() {
                        var e = this.getRoundabout();
                        return e && 1 === e.attributes.segIDs.length
                    }
                }, {
                    key: "getRoutingRoadTypes",
                    value: function() {
                        var e = {
                            prev: null,
                            next: null
                        };
                        if (!this.isRoutable())
                            return e;
                        var t = R.indexOf(this.attributes.roadType);
                        return e.prev = R[t - 1] || null,
                            e.next = R[t + 1] || null,
                            e
                    }
                }, {
                    key: "getRoadType",
                    value: function() {
                        return this.attributes.roadType
                    }
                }, {
                    key: "getDrivingRestrictions",
                    value: function() {
                        return this.attributes.restrictions.slice()
                    }
                }, {
                    key: "getPickupRestrictions",
                    value: function() {
                        return this.attributes.pickupRestrictions.slice()
                    }
                }, {
                    key: "getDrivingRestrictionCount",
                    value: function() {
                        return I.dedupRestrictions(this.attributes.restrictions).length
                    }
                }, {
                    key: "getPickupRestrictionCount",
                    value: function() {
                        return I.dedupRestrictions(this.attributes.pickupRestrictions).length
                    }
                }, {
                    key: "hasRestrictions",
                    value: function() {
                        return this.getDrivingRestrictionCount() > 0 || this.getPickupRestrictionCount() > 0
                    }
                }, {
                    key: "getForwardDrivingRestrictions",
                    value: function() {
                        return this.getDrivingRestrictions().filter(function(e) {
                            return e.isForward()
                        })
                    }
                }, {
                    key: "getReverseDrivingRestrictions",
                    value: function() {
                        return this.getDrivingRestrictions().filter(function(e) {
                            return e.isReverse()
                        })
                    }
                }, {
                    key: "getBidiDrivingRestrictions",
                    value: function() {
                        return this.getDrivingRestrictions().filter(function(e) {
                            return e.isBidi()
                        })
                    }
                }, {
                    key: "allowRestrictionEditing",
                    value: function() {
                        return this.arePropertiesEditable() && !this.isInBigJunction()
                    }
                }, {
                    key: "supportsPickupRestrictions",
                    value: function() {
                        var e = this.getAddress();
                        if (!e)
                            return !1;
                        var t = e.getCountry();
                        return !!t && t.allowPickupRestrictions
                    }
                }, {
                    key: "supportsHouseNumbers",
                    value: function() {
                        return L.includes(this.attributes.roadType) && this.hasNonEmptyStreet()
                    }
                }, {
                    key: "getLaneCount",
                    value: function(e) {
                        return (e === S.SEGMENT_LANE_DIRECTION.FWD ? this.attributes.fwdLaneCount : this.attributes.revLaneCount) || 0
                    }
                }, {
                    key: "hasLanes",
                    value: function(e) {
                        return this.supportsLanes(e) && this.getLaneCount(e) > 0
                    }
                }, {
                    key: "getFwdLanes",
                    value: function() {
                        return T.default.forSegment(this.model, this, S.SEGMENT_LANE_DIRECTION.FWD)
                    }
                }, {
                    key: "getRevLanes",
                    value: function() {
                        return T.default.forSegment(this.model, this, S.SEGMENT_LANE_DIRECTION.REV)
                    }
                }, {
                    key: "supportsLanes",
                    value: function(e) {
                        return e === S.SEGMENT_LANE_DIRECTION.FWD ? this.supportsFwdLanes() : this.supportsRevLanes()
                    }
                }, {
                    key: "supportsFwdLanes",
                    value: function() {
                        return this.attributes.fwdDirection && this._directionlessSupportsLanes() && !this.hasToBigJunction()
                    }
                }, {
                    key: "supportsRevLanes",
                    value: function() {
                        return this.attributes.revDirection && this._directionlessSupportsLanes() && !this.hasFromBigJunction()
                    }
                }, {
                    key: "_directionlessSupportsLanes",
                    value: function() {
                        return this._junctionBoxSupportsLanes() && this._countrySupportsLanes()
                    }
                }, {
                    key: "_junctionBoxSupportsLanes",
                    value: function() {
                        return !this.isBigJunctionShort()
                    }
                }, {
                    key: "_countrySupportsLanes",
                    value: function() {
                        var e = this.getAddress();
                        if (!e)
                            return !1;
                        var t = e.getCountry();
                        return !!t && t.allowLanes
                    }
                }]),
                t
        }(p.default);
    (0,
        r.default)(U.prototype, {
        nested: {
            geometry: OL.Geometry,
            restrictions: w.default,
            pickupRestrictions: k.default
        },
        FLAG_ATTRIBUTES: V,
        MinLevel: -5,
        MaxLevel: 9,
        keepOriginal: {
            fwdMaxSpeedUnverified: !0,
            revMaxSpeedUnverified: !0
        },
        PERMISSIONS: {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4,
            EDIT_EMPTY_STREET: 8,
            SPLIT_DIRECTIONS: 16,
            SET_UNKNOWN_DIRECTIONS: 32,
            EDIT_HOUSE_NUMBERS: 64,
            FORCE_HOUSE_NUMBERS: 128,
            EDIT_CONNECTIONS: 256,
            EDIT_ROUTING_ROAD_TYPES: 512,
            EDIT_CLOSURES: 1024,
            EDIT_HEADLIGHTS_REMINDER: 2048,
            EDIT_AVERAGE_SPEED_CAMERA: 4096
        },
        CLASS_NAME: "Waze.Feature.Vector.Segment"
    }),
    t.default = U,
        t.ROAD_TYPES = x,
        t.HIGHWAY_ROAD_TYPES = D,
        t.WALKING_ROAD_TYPES = P,
        t.SEGMENT_DELETION_REJECTION = O,
        t.FLAG_ATTRIBUTES = V
}, function(e, t) {
    var n;
    n = function() {
        return this
    }();
    try {
        n = n || Function("return this")() || (0,
            eval)("this")
    } catch (e) {
        "object" == typeof window && (n = window)
    }
    e.exports = n
}, function(e, t) {
    e.exports = function(e) {
        try {
            return !!e()
        } catch (e) {
            return !0
        }
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.CATEGORY_ATTRIBUTES_TYPE = t.formatUpdateActionDescription = t.formatActionAddressDescription = t.formatHouseNumberActionDescription = t.formatObjectName = t.userProfile = t.formatValue = t.formatFieldName = t.formatBoolean = t.FORMATTERS = void 0;
    var i = c(n(138)),
        r = c(n(16)),
        s = c(n(47)),
        a = c(n(192)),
        o = n(193),
        l = n(118),
        u = n(14),
        d = n(37);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = "venueCategoryAttributes";

    function f(e, t) {
        return function(n) {
            return n.map(function(t) {
                return new e(t)
            }).map(t)
        }
    }
    var p = {
        default: {
            lockRank: function(e) {
                return r.default.formatRank(e)
            },
            streetID: function(e, t) {
                var n = t.streets.getObjectById(e),
                    i = "",
                    r = void 0;
                return null != n && (i = n.name,
                        n.isEmpty || (r = t.cities.getObjectById(n.cityID).attributes.name)),
                    _.compact([i, r]).join(", ")
            }
        },
        segment: {
            level: function(e) {
                return 0 === e ? I18n.t("edit.segment.levels.0") : e
            },
            roadType: function(e) {
                return I18n.t("segment.road_types." + e)
            },
            routingRoadType: function(e) {
                return I18n.t("segment.road_types." + e)
            },
            primaryStreetID: function(e, t) {
                return p.default.streetID(e, t)
            },
            streetIDs: function(e, t) {
                return e.map(function(e) {
                    return p.default.streetID(e, t)
                })
            },
            fwdMaxSpeed: function(e) {
                return r.default.speedString(e)
            },
            revMaxSpeed: function(e) {
                return r.default.speedString(e)
            },
            fwdMaxSpeedUnverified: function(e) {
                return !e
            },
            revMaxSpeedUnverified: function(e) {
                return !e
            },
            restrictions: f(s.default, function(e) {
                var t = new l.TimeFrameViewHelpers({
                    timeFrame: e.getTimeFrame()
                });
                return t.formatWeekdays() + " " + t.formatHours()
            }),
            pickupRestrictions: f(a.default, function(e) {
                return (e.isForward() ? I18n.t("segment.direction.1") : I18n.t("segment.direction.2")) + ": " + (e.isAllowed() ? I18n.t("restrictions.editing.pickup.allowed") : e.isNotAllowed() ? I18n.t("restrictions.editing.pickup.not_allowed") : I18n.t("restrictions.editing.pickup.unknown"))
            })
        },
        venue: {
            services: function(e) {
                return e.map(function(e) {
                    return I18n.t("venues.services." + e)
                })
            },
            categories: function(e) {
                return e.map(function(e) {
                    return I18n.t("venues.categories." + e)
                })
            },
            openingHours: function(e) {
                return e.map(function(e) {
                    return new o.OpeningHour(e)
                }).map(r.default.formatOpeningHour)
            },
            images: function(e) {
                return e.map(function(e) {
                    return e.id
                })
            },
            externalProviderIDs: function(e) {
                return e.map(function(e) {
                    return e instanceof Backbone.Model ? e.get("uuid") : e
                })
            }
        },
        venueCategoryAttributes: {
            estimatedNumberOfSpots: function(e) {
                return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots." + e)
            },
            paymentType: function(e) {
                return e.map(function(e) {
                    return I18n.t("edit.landmark.parking.types.paymentType." + e)
                })
            },
            costType: function(e) {
                return I18n.t("edit.landmark.parking.types.costType." + e)
            },
            parkingType: function(e) {
                return I18n.t("edit.landmark.parking.types.parkingType." + e)
            },
            lotType: function(e) {
                return I18n.t("edit.landmark.parking.types.lotType." + e)
            }
        },
        camera: {
            type: function(e) {
                return I18n.t("edit.camera.fields.type." + e)
            },
            azymuth: function(e) {
                return (e % 360).toFixed(2)
            }
        }
    };

    function g(e) {
        return !0 === e ? I18n.t("element_history.boolean_attributes.enabled") : I18n.t("element_history.boolean_attributes.disabled")
    }
    t.FORMATTERS = p,
        t.formatBoolean = g,
        t.formatFieldName = function(e, t) {
            var n = "objects." + e + ".fields." + t,
                i = "objects.common.fields." + t;
            return e === h && (n = "objects.venue.category_fields." + t),
                e === u.SEGMENT && d.FLAG_ATTRIBUTES[t] && (n = "objects." + e + ".flag_fields." + t),
                I18n.lookup(n) ? I18n.t(n) : I18n.lookup(i) ? I18n.t(i) : t
        },
        t.formatValue = function(e, t, n, s) {
            return r.default.isBlank(s) ? null : function(e, t, n, r) {
                var s = p.default[n],
                    a = p[t],
                    o = r;
                return a && a[n] ? o = a[n](r, e) : null != s && (o = s(r, e)),
                    _.isBoolean(o) ? g(o) : _.isString(o) ? o : Array.isArray(o) ? o.join(", ") : (0,
                        i.default)(o)
            }(e, t, n, s)
        },
        t.userProfile = function(e, t) {
            return r.default.userProfile(e, t)
        },
        t.formatObjectName = function(e) {
            var t = "objects." + e + ".name";
            return I18n.lookup(t) ? I18n.t(t) : e
        },
        t.formatHouseNumberActionDescription = function(e, t, n, i) {
            var r = e.segments.getObjectById(t).getAddress().getStreetName({
                emptyString: ""
            });
            return I18n.t("save.changes_log.actions." + i, {
                houseNumber: n,
                streetName: r
            })
        },
        t.formatActionAddressDescription = function(e, t) {
            var n = e.getAddress(),
                i = e.attributes.name,
                r = n ? n.getStreetName({
                    emptyString: null
                }) : null;
            return i ? I18n.t("save.changes_log.actions." + t + ".has_name", {
                name: i
            }) : r ? I18n.t("save.changes_log.actions." + t + ".has_street", {
                streetName: r
            }) : I18n.t("save.changes_log.actions." + t + ".default")
        },
        t.formatUpdateActionDescription = function(e, t, n) {
            var i = n > 1 ? "multi" : "name",
                r = I18n.t("objects." + t.object.type + "." + i, {
                    count: n
                });
            if (1 === e.length) {
                var s = e[0],
                    a = s.newValue,
                    o = s.displayName,
                    l = s.added,
                    u = s.removed,
                    d = "save.changes_log.actions.UpdateObject.single",
                    c = a;
                return null === c ? d = "save.changes_log.actions.UpdateObject.deleted" : (l && !u && (d = "save.changes_log.actions.UpdateObject.added",
                            c = l),
                        !l && u && (d = "save.changes_log.actions.UpdateObject.removed",
                            c = u)),
                    I18n.t(d, {
                        featuresCount: n,
                        value: c,
                        propertyName: o,
                        objectsString: r
                    })
            }
            return I18n.t("save.changes_log.actions.UpdateObject.multiple", {
                featuresCount: n,
                objectsString: r
            })
        },
        t.CATEGORY_ATTRIBUTES_TYPE = h
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(6)),
        r = g(n(2)),
        s = g(n(0)),
        a = g(n(1)),
        o = g(n(3)),
        l = g(n(4)),
        u = n(14),
        d = g(n(20)),
        c = p(n(54)),
        h = p(n(195)),
        f = g(n(201));

    function p(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e, n, i) {
            (0,
                s.default)(this, t);
            var a = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, i));
            return a._turnGraph = e,
                a._turn = n,
                a._previousTurn = e.getTurn(n.getFromVertex(), n.getToVertex()),
                a._nodeID = null,
                a._node = null,
                a._junction = null,
                a._junctionID = null,
                a._fromSegment = null,
                a._toSegment = null,
                a
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    this._turnGraph.putTurn(this._turn),
                        this._turn.getTurnData().hasSegmentPath() || !this._previousTurn.getTurnData().isUnknown() || this._turn.getTurnData().isAllowed() || (this.dontSerialize = !0);
                    var e = this._turn.getFromVertex(),
                        t = this._turn.getToVertex();
                    if (this._fromSegment = this.model.segments.getObjectById(e.getSegmentID()),
                        this._toSegment = this.model.segments.getObjectById(t.getSegmentID()),
                        this._turn.getTurnData().hasSegmentPath()) {
                        var n = this._turn.getTurnData().getSegmentPath()[0],
                            i = this.model.segments.getObjectById(n);
                        this._junctionID = i.getBigJunction().getID(),
                            this._junction = this.model.junctions.getObjectById(this._junctionID)
                    } else
                        this._nodeID = this.model.getRoadGraph().getVertexNodeID(this._turn.getFromVertex()),
                        this._node = this.model.nodes.getObjectById(this._nodeID)
                }
            }, {
                key: "undoAction",
                value: function() {
                    this._turnGraph.putTurn(this._previousTurn)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.doAction()
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = this._turn.getTurnData(),
                        t = {
                            id: this._serializeIdAttirbute(this._turn.getFromVertex(), this._turn.getToVertex())
                        },
                        n = this._previousTurn.getTurnData();
                    return (0,
                            i.default)(t, this._serializeTurnDataAttributes(e, n)),
                        e.hasSegmentPath() ? (0,
                            i.default)(t, this._serializeJBTurnAttributes(e)) : (0,
                            i.default)(t, this._serializeNodeTurnAttributes(e)), {
                            _objectType: this._getObjectType(e),
                            action: this._getAction(e, n),
                            attributes: t
                        }
                }
            }, {
                key: "_serializeIdAttirbute",
                value: function(e, t) {
                    return {
                        fromSegID: e.getSegmentID(),
                        toSegID: t.getSegmentID(),
                        fromSegFwd: e.isForward(),
                        toSegFwd: t.isForward()
                    }
                }
            }, {
                key: "_serializeTurnDataAttributes",
                value: function(e, t) {
                    var n = {};
                    return (0,
                            i.default)(n, this._serializeNavigable(e, t)),
                        (0,
                            i.default)(n, this._serializeInstructionOpCode(e, t)),
                        (0,
                            i.default)(n, this._serializeRestrictionAttributes(e, t)),
                        (0,
                            i.default)(n, this._serializeLaneAttributes(e, t)),
                        n
                }
            }, {
                key: "_serializeNavigable",
                value: function(e, t) {
                    return e.isAllowed() !== t.isAllowed() ? {
                        navigable: e.isAllowed()
                    } : {}
                }
            }, {
                key: "_serializeInstructionOpCode",
                value: function(e, t) {
                    return e.getInstructionOpcode() !== t.getInstructionOpcode() ? {
                        instructionOpCode: e.getInstructionOpcode()
                    } : {}
                }
            }, {
                key: "_serializeRestrictionAttributes",
                value: function(e, t) {
                    return h.restrictionArraysEqual(e.getRestrictions(), t.getRestrictions()) ? {} : {
                        restrictions: e.getRestrictions().map(function(e) {
                            return e.toJSON()
                        })
                    }
                }
            }, {
                key: "_serializeLaneAttributes",
                value: function(e, t) {
                    var n = this._turn.getFromVertex(),
                        i = this._turn.getToVertex(),
                        r = c.vertexToLanesDirection(n),
                        s = c.vertexToLanesDirection(i);
                    if (c.lanesEnabled(this._fromSegment, r) && c.lanesEnabled(this._toSegment, s)) {
                        var a = t.getLaneData(),
                            o = e.getLaneData();
                        if (f.default.hasChanged(a, o))
                            return {
                                lanes: null == o ? null : o.toJSON()
                            }
                    }
                    return {}
                }
            }, {
                key: "_getObjectType",
                value: function(e) {
                    return e.hasSegmentPath() ? u.JUNCTION_NC : u.NC
                }
            }, {
                key: "_getAction",
                value: function(e, t) {
                    return e.hasSegmentPath() ? d.default.TYPE.UPDATE : (t.isUnknown() || t.isDisallowed() && !t.hasAdditionalData()) && e.isAllowed() ? d.default.TYPE.ADD : d.default.TYPE.UPDATE
                }
            }, {
                key: "_serializeJBTurnAttributes",
                value: function(e) {
                    return {
                        junctionID: this._junctionID,
                        segmentPath: e.getSegmentPath()
                    }
                }
            }, {
                key: "_serializeNodeTurnAttributes",
                value: function() {
                    return {
                        nodeID: this._nodeID
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    var e = _.compact([this._fromSegment, this._toSegment, this._node, this._junction]);
                    return _.compact(e.map(function(e) {
                        return e && e.getUniqueID()
                    }))
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return _.compact([this._node, this._junction, this._fromSegment, this._toSegment])
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.SetTurn.update")
                }
            }]),
            t
    }(d.default);
    (0,
        i.default)(v.prototype, {
        CLASS_NAME: "Waze.Action.SetTurn"
    }),
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/select22ca61b76e22053571dd8611e5aac4900.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.getHTML = void 0;
    var i, r = n(16),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = n(797);
    a.keys().map(a);
    var o = {
        t: I18n.t.bind(I18n),
        l: I18n.l.bind(I18n),
        h: s.default,
        safe_t: s.default.safe_t,
        __htmlEscape: s.default.escape,
        __cleanValue: s.default.cleanValue
    };

    function l(e, t) {
        return e = "./" + e + ".hamlc",
            t = _.extend({}, o, t),
            a(e)(t)
    }
    o.renderPartial = l,
        Marionette.Renderer.render = function(e, t) {
            return "function" == typeof e ? e(t) : l(e, t)
        },
        t.getHTML = l
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        _getManifestsWith: function(e) {
            return W.Config.enabled_modules.map(function(t) {
                try {
                    return n(845)("./" + t + "/Manifest")[e]
                } catch (e) {
                    throw new Error("Error loading module " + t + ":\nManifest file does not exist.")
                }
            }).filter(function(e) {
                return void 0 !== e
            })
        },
        getEntryPoints: function() {
            return this._getManifestsWith("entryPoint").map(function(e) {
                return e.class[e.callback].bind(e.class)
            })
        },
        getMenus: function() {
            return this._getManifestsWith("menu")
        },
        getRepositories: function() {
            return this._getManifestsWith("feature")
        },
        getLayers: function() {
            return _.flatten(this._getManifestsWith("layers"))
        },
        getLayerSwitcherConfig: function() {
            return this._getManifestsWith("layerSwitcher")
        },
        getFeatureEditors: function() {
            return this._getManifestsWith("feature").filter(function(e) {
                return void 0 !== e.featureEditorClass
            }).map(function(e) {
                return _.pick(e, "featureType", "featureEditorClass")
            })
        },
        getModels: function() {
            return this._getManifestsWith("feature").filter(function(e) {
                return void 0 !== e.modelClass
            }).map(function(e) {
                return _.pick(e, "repositoryName", "modelClass")
            })
        },
        LAYER_TYPE: {
            RASTER: "raster",
            FEATURE: "feature",
            MARKER: "marker"
        }
    };
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(17)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this));
            return i.initializeAttributes(e, n),
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "initializeAttributes",
                value: function(e, t) {
                    this.attributes = e || {},
                        t && t.parse && e && this.parse(e),
                        e && (this.attributes = (0,
                            i.default)(this.attributes, e)),
                        _.defaults(this.attributes, _.result(this, "defaults"))
                }
            }, {
                key: "merge",
                value: function(e) {
                    this.parse(e),
                        (0,
                            i.default)(this.attributes, e),
                        this.originalValues && (this.originalValues = void 0)
                }
            }, {
                key: "getOriginalValue",
                value: function(e) {
                    return this.originalValues && !_.isUndefined(this.originalValues[e]) ? this.originalValues[e] : this.attributes[e]
                }
            }, {
                key: "getID",
                value: function() {
                    return this.attributes.id
                }
            }, {
                key: "setID",
                value: function(e) {
                    this.attributes.id = e
                }
            }, {
                key: "changeID",
                value: function(e) {
                    u.default.prototype.changeID.apply(this, arguments),
                        null != this.fid && (this.fid = e)
                }
            }, {
                key: "getVersion",
                value: function() {
                    return this.attributes.version || u.default.prototype.getVersion.apply(this)
                }
            }, {
                key: "clone",
                value: function() {
                    var e = null,
                        n = _.extend({}, this.attributes);
                    this.attributes.geometry && (e = this.attributes.geometry.clone()),
                        n.geometry = e;
                    var i = new t(n);
                    return i.state = this.state,
                        i
                }
            }, {
                key: "getPermissions",
                value: function() {
                    return d.isDefined(this.attributes.permissions) ? this.attributes.permissions : 0
                }
            }, {
                key: "getAttributes",
                value: function() {
                    return this.attributes
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(h.prototype, {
        CLASS_NAME: "Waze.Feature.Vector"
    }),
    Object.defineProperty(h.prototype, "geometry", {
            get: function() {
                if (this.attributes)
                    return this.attributes.geometry
            },
            set: function(e) {
                this.attributes.geometry = e
            }
        }),
        t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    var i = n(56);
    e.exports = function(e, t, n) {
        if (i(e),
            void 0 === t)
            return e;
        switch (n) {
            case 1:
                return function(n) {
                    return e.call(t, n)
                };
            case 2:
                return function(n, i) {
                    return e.call(t, n, i)
                };
            case 3:
                return function(n, i, r) {
                    return e.call(t, n, i, r)
                }
        }
        return function() {
            return e.apply(t, arguments)
        }
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.RESTRICTION_SEGMENT_DISPOSITION = t.RESTRICTION_SEGMENT_LANE_TYPE = t.RESTRICTION_SEGMENT_DIRECTION = void 0;
    var i = c(n(6)),
        r = c(n(68)),
        s = c(n(2)),
        a = c(n(0)),
        o = c(n(1)),
        l = c(n(3)),
        u = c(n(8)),
        d = c(n(4));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = {
            FWD: "FWD",
            REV: "REV",
            BOTH: "BOTH"
        },
        f = {
            WHOLE_SEGMENT: 1,
            LEFT_LANE: 2,
            MIDDLE_LANE: 3,
            RIGHT_LANE: 4
        },
        p = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = e.direction,
                    i = void 0 === n ? h.FWD : n,
                    o = e.disposition,
                    u = void 0 === o ? f.WHOLE_SEGMENT : o,
                    d = e.laneType,
                    c = void 0 === d ? null : d;
                (0,
                    a.default)(this, t);
                var p = (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).apply(this, arguments));
                return p._direction = i,
                    p._disposition = u,
                    p._laneType = c,
                    (0,
                        r.default)(p),
                    p
            }
            return (0,
                    d.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "withoutDirection",
                    value: function() {
                        return this.with({
                            direction: null
                        })
                    }
                }, {
                    key: "withReverseDirection",
                    value: function() {
                        if (this.isBidi())
                            return this;
                        var e = this.isForward() ? h.REV : h.FWD;
                        return this.with({
                            direction: e
                        })
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return (0,
                            u.default)(t.prototype.__proto__ || (0,
                            s.default)(t.prototype), "equals", this).call(this, e) && this._direction === e._direction && this._disposition === e._disposition && this._laneType === e._laneType
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return (0,
                            i.default)((0,
                            u.default)(t.prototype.__proto__ || (0,
                            s.default)(t.prototype), "toJSON", this).call(this), {
                            direction: this._direction,
                            disposition: this._disposition,
                            laneType: this._laneType
                        })
                    }
                }, {
                    key: "getLaneType",
                    value: function() {
                        return this._laneType
                    }
                }, {
                    key: "getDisposition",
                    value: function() {
                        return null === this._disposition ? f.WHOLE_SEGMENT : this._disposition
                    }
                }, {
                    key: "getDirection",
                    value: function() {
                        return this._direction
                    }
                }, {
                    key: "isForward",
                    value: function() {
                        return this._direction === h.FWD
                    }
                }, {
                    key: "isReverse",
                    value: function() {
                        return this._direction === h.REV
                    }
                }, {
                    key: "isBidi",
                    value: function() {
                        return this._direction === h.BOTH
                    }
                }]),
                t
        }(n(69).BaseRestriction);
    t.default = p,
        t.RESTRICTION_SEGMENT_DIRECTION = h,
        t.RESTRICTION_SEGMENT_LANE_TYPE = {
            HOV: 1,
            HOT: 2,
            EXPRESS: 3,
            BUS: 4,
            FAST: 5
        },
        t.RESTRICTION_SEGMENT_DISPOSITION = f
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(6),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class({
        visible: !0,
        enabled: !0,
        initialize: function(e) {
            (0,
                s.default)(this, e, this)
        },
        destroy: function() {},
        show: function() {
            this.setVisible(!0)
        },
        hide: function() {
            this.setVisible(!1)
        },
        setVisible: function(e) {
            e !== this.visible && (this.visible = e,
                this.div && (e ? OpenLayers.Element.show(this.div) : OpenLayers.Element.hide(this.div)),
                this.events && this.events.triggerEvent("visibilitychanged"))
        },
        enable: function(e) {
            this.setEnabled(!0, e)
        },
        disable: function(e) {
            this.setEnabled(!1, e)
        },
        isEnabled: function() {
            return this.enabled
        },
        setEnabled: function(e, t) {
            this.enabled !== e && (this.enabled = e,
                this.events && !t && this.events.triggerEvent("enablechanged"))
        },
        CLASS_NAME: "Waze.Control"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t) {
    e.exports = !0
}, function(e, t) {
    e.exports = function(e, t) {
        return {
            enumerable: !(1 & e),
            configurable: !(2 & e),
            writable: !(4 & e),
            value: t
        }
    }
}, function(e, t) {
    e.exports = {}
}, function(e, t, n) {
    var i = n(114),
        r = n(81);
    e.exports = Object.keys || function(e) {
        return i(e, r)
    }
}, function(e, t, n) {
    e.exports = {
        default: n(849),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.lanesEnabledOnNode = t.getIncomingLaneDirection = t.lanesDirectionToVertex = t.vertexToLanesDirection = t.lanesEnabled = t.toStandardLaneAngle = t.getLaneAngleCalculator = t.getOutgoingEnabledTurns = void 0;
    var i = l(n(9)),
        r = l(n(34)),
        s = n(71),
        a = l(n(869)),
        o = n(72);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function u(e, t, n) {
        var i = t.getID(),
            a = n === s.SEGMENT_LANE_DIRECTION.FWD ? r.default.forwardOf(i) : r.default.reverseOf(i);
        return e.getTurnGraph().getTurnsFrom(a).filter(function(e) {
            return e.getTurnData().isAllowed()
        })
    }

    function d(e, t) {
        return (0,
            o.isFeatureFlagEnabled)(o.FEATURE_FLAGS.LANES) && e.supportsLanes(t)
    }

    function c(e, t) {
        var n = void 0;
        return e.attributes.fromNodeID === t.getID() ? n = s.SEGMENT_LANE_DIRECTION.REV : e.attributes.toNodeID === t.getID() && (n = s.SEGMENT_LANE_DIRECTION.FWD),
            n
    }
    t.getOutgoingEnabledTurns = u,
        t.getLaneAngleCalculator = function(e, t, n) {
            var r = u(e, t, n),
                o = n === s.SEGMENT_LANE_DIRECTION.FWD ? t.getToNode() : t.getFromNode(),
                l = o.getAngleToSegment(t),
                d = new a.default(l, t.attributes.roadType, [t.attributes.primaryStreetID].concat((0,
                    i.default)(t.attributes.streetIDs)));
            return r.forEach(function(t) {
                    var n = t.getToVertex(),
                        r = e.segments.getObjectById(n.getSegmentID()),
                        s = o.getAngleToSegment(r);
                    d.addOutgoingVertex({
                        toVertex: n,
                        azimuth: s,
                        roadType: r.attributes.roadType,
                        streetIDs: [r.attributes.primaryStreetID].concat((0,
                            i.default)(r.attributes.streetIDs))
                    })
                }),
                d
        },
        t.toStandardLaneAngle = function(e) {
            var t = e % 360;
            return t < -180 ? t += 360 : t > 180 && (t -= 360),
                t
        },
        t.lanesEnabled = d,
        t.vertexToLanesDirection = function(e) {
            return e.isForward() ? s.SEGMENT_LANE_DIRECTION.FWD : s.SEGMENT_LANE_DIRECTION.REV
        },
        t.lanesDirectionToVertex = function(e, t) {
            return t === s.SEGMENT_LANE_DIRECTION.FWD ? r.default.forwardOf(e) : r.default.reverseOf(e)
        },
        t.getIncomingLaneDirection = c,
        t.lanesEnabledOnNode = function(e, t) {
            return t.getSegmentIds().map(function(t) {
                return e.segments.getObjectById(t)
            }).some(function(e) {
                return d(e, c(e, t))
            })
        }
}, function(e, t, n) {
    "use strict";
    var i = n(165)(!0);
    n(95)(String, "String", function(e) {
        this._t = String(e),
            this._i = 0
    }, function() {
        var e, t = this._t,
            n = this._i;
        return n >= t.length ? {
            value: void 0,
            done: !0
        } : (e = i(t, n),
            this._i += e.length, {
                value: e,
                done: !1
            })
    })
}, function(e, t) {
    e.exports = function(e) {
        if ("function" != typeof e)
            throw TypeError(e + " is not a function!");
        return e
    }
}, function(e, t) {
    var n = 0,
        i = Math.random();
    e.exports = function(e) {
        return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + i).toString(36))
    }
}, function(e, t, n) {
    var i = n(27).f,
        r = n(36),
        s = n(23)("toStringTag");
    e.exports = function(e, t, n) {
        e && !r(e = n ? e : e.prototype, s) && i(e, s, {
            configurable: !0,
            value: t
        })
    }
}, function(e, t) {
    t.f = {}.propertyIsEnumerable
}, function(e, t, n) {
    (function(e, n) {
        var i;
        ! function() {
            var r = "object" == typeof self && self.self === self && self || "object" == typeof e && e.global === e && e || this || {},
                s = r._,
                a = Array.prototype,
                o = Object.prototype,
                l = "undefined" != typeof Symbol ? Symbol.prototype : null,
                u = a.push,
                d = a.slice,
                c = o.toString,
                h = o.hasOwnProperty,
                f = Array.isArray,
                p = Object.keys,
                g = Object.create,
                v = function() {},
                m = function(e) {
                    return e instanceof m ? e : this instanceof m ? void(this._wrapped = e) : new m(e)
                };
            void 0 === t || t.nodeType ? r._ = m : (void 0 !== n && !n.nodeType && n.exports && (t = n.exports = m),
                    t._ = m),
                m.VERSION = "1.9.1";
            var _, y = function(e, t, n) {
                    if (void 0 === t)
                        return e;
                    switch (null == n ? 3 : n) {
                        case 1:
                            return function(n) {
                                return e.call(t, n)
                            };
                        case 3:
                            return function(n, i, r) {
                                return e.call(t, n, i, r)
                            };
                        case 4:
                            return function(n, i, r, s) {
                                return e.call(t, n, i, r, s)
                            }
                    }
                    return function() {
                        return e.apply(t, arguments)
                    }
                },
                b = function(e, t, n) {
                    return m.iteratee !== _ ? m.iteratee(e, t) : null == e ? m.identity : m.isFunction(e) ? y(e, t, n) : m.isObject(e) && !m.isArray(e) ? m.matcher(e) : m.property(e)
                };
            m.iteratee = _ = function(e, t) {
                return b(e, t, 1 / 0)
            };
            var w = function(e, t) {
                    return t = null == t ? e.length - 1 : +t,
                        function() {
                            for (var n = Math.max(arguments.length - t, 0), i = Array(n), r = 0; r < n; r++)
                                i[r] = arguments[r + t];
                            switch (t) {
                                case 0:
                                    return e.call(this, i);
                                case 1:
                                    return e.call(this, arguments[0], i);
                                case 2:
                                    return e.call(this, arguments[0], arguments[1], i)
                            }
                            var s = Array(t + 1);
                            for (r = 0; r < t; r++)
                                s[r] = arguments[r];
                            return s[t] = i,
                                e.apply(this, s)
                        }
                },
                k = function(e) {
                    if (!m.isObject(e))
                        return {};
                    if (g)
                        return g(e);
                    v.prototype = e;
                    var t = new v;
                    return v.prototype = null,
                        t
                },
                E = function(e) {
                    return function(t) {
                        return null == t ? void 0 : t[e]
                    }
                },
                M = function(e, t) {
                    return null != e && h.call(e, t)
                },
                S = function(e, t) {
                    for (var n = t.length, i = 0; i < n; i++) {
                        if (null == e)
                            return;
                        e = e[t[i]]
                    }
                    return n ? e : void 0
                },
                T = Math.pow(2, 53) - 1,
                I = E("length"),
                C = function(e) {
                    var t = I(e);
                    return "number" == typeof t && t >= 0 && t <= T
                };
            m.each = m.forEach = function(e, t, n) {
                    var i, r;
                    if (t = y(t, n),
                        C(e))
                        for (i = 0,
                            r = e.length; i < r; i++)
                            t(e[i], i, e);
                    else {
                        var s = m.keys(e);
                        for (i = 0,
                            r = s.length; i < r; i++)
                            t(e[s[i]], s[i], e)
                    }
                    return e
                },
                m.map = m.collect = function(e, t, n) {
                    t = b(t, n);
                    for (var i = !C(e) && m.keys(e), r = (i || e).length, s = Array(r), a = 0; a < r; a++) {
                        var o = i ? i[a] : a;
                        s[a] = t(e[o], o, e)
                    }
                    return s
                };
            var A = function(e) {
                return function(t, n, i, r) {
                    var s = arguments.length >= 3;
                    return function(t, n, i, r) {
                        var s = !C(t) && m.keys(t),
                            a = (s || t).length,
                            o = e > 0 ? 0 : a - 1;
                        for (r || (i = t[s ? s[o] : o],
                                o += e); o >= 0 && o < a; o += e) {
                            var l = s ? s[o] : o;
                            i = n(i, t[l], l, t)
                        }
                        return i
                    }(t, y(n, r, 4), i, s)
                }
            };
            m.reduce = m.foldl = m.inject = A(1),
                m.reduceRight = m.foldr = A(-1),
                m.find = m.detect = function(e, t, n) {
                    var i = (C(e) ? m.findIndex : m.findKey)(e, t, n);
                    if (void 0 !== i && -1 !== i)
                        return e[i]
                },
                m.filter = m.select = function(e, t, n) {
                    var i = [];
                    return t = b(t, n),
                        m.each(e, function(e, n, r) {
                            t(e, n, r) && i.push(e)
                        }),
                        i
                },
                m.reject = function(e, t, n) {
                    return m.filter(e, m.negate(b(t)), n)
                },
                m.every = m.all = function(e, t, n) {
                    t = b(t, n);
                    for (var i = !C(e) && m.keys(e), r = (i || e).length, s = 0; s < r; s++) {
                        var a = i ? i[s] : s;
                        if (!t(e[a], a, e))
                            return !1
                    }
                    return !0
                },
                m.some = m.any = function(e, t, n) {
                    t = b(t, n);
                    for (var i = !C(e) && m.keys(e), r = (i || e).length, s = 0; s < r; s++) {
                        var a = i ? i[s] : s;
                        if (t(e[a], a, e))
                            return !0
                    }
                    return !1
                },
                m.contains = m.includes = m.include = function(e, t, n, i) {
                    return C(e) || (e = m.values(e)),
                        ("number" != typeof n || i) && (n = 0),
                        m.indexOf(e, t, n) >= 0
                },
                m.invoke = w(function(e, t, n) {
                    var i, r;
                    return m.isFunction(t) ? r = t : m.isArray(t) && (i = t.slice(0, -1),
                            t = t[t.length - 1]),
                        m.map(e, function(e) {
                            var s = r;
                            if (!s) {
                                if (i && i.length && (e = S(e, i)),
                                    null == e)
                                    return;
                                s = e[t]
                            }
                            return null == s ? s : s.apply(e, n)
                        })
                }),
                m.pluck = function(e, t) {
                    return m.map(e, m.property(t))
                },
                m.where = function(e, t) {
                    return m.filter(e, m.matcher(t))
                },
                m.findWhere = function(e, t) {
                    return m.find(e, m.matcher(t))
                },
                m.max = function(e, t, n) {
                    var i, r, s = -1 / 0,
                        a = -1 / 0;
                    if (null == t || "number" == typeof t && "object" != typeof e[0] && null != e)
                        for (var o = 0, l = (e = C(e) ? e : m.values(e)).length; o < l; o++)
                            null != (i = e[o]) && i > s && (s = i);
                    else
                        t = b(t, n),
                        m.each(e, function(e, n, i) {
                            ((r = t(e, n, i)) > a || r === -1 / 0 && s === -1 / 0) && (s = e,
                                a = r)
                        });
                    return s
                },
                m.min = function(e, t, n) {
                    var i, r, s = 1 / 0,
                        a = 1 / 0;
                    if (null == t || "number" == typeof t && "object" != typeof e[0] && null != e)
                        for (var o = 0, l = (e = C(e) ? e : m.values(e)).length; o < l; o++)
                            null != (i = e[o]) && i < s && (s = i);
                    else
                        t = b(t, n),
                        m.each(e, function(e, n, i) {
                            ((r = t(e, n, i)) < a || r === 1 / 0 && s === 1 / 0) && (s = e,
                                a = r)
                        });
                    return s
                },
                m.shuffle = function(e) {
                    return m.sample(e, 1 / 0)
                },
                m.sample = function(e, t, n) {
                    if (null == t || n)
                        return C(e) || (e = m.values(e)),
                            e[m.random(e.length - 1)];
                    var i = C(e) ? m.clone(e) : m.values(e),
                        r = I(i);
                    t = Math.max(Math.min(t, r), 0);
                    for (var s = r - 1, a = 0; a < t; a++) {
                        var o = m.random(a, s),
                            l = i[a];
                        i[a] = i[o],
                            i[o] = l
                    }
                    return i.slice(0, t)
                },
                m.sortBy = function(e, t, n) {
                    var i = 0;
                    return t = b(t, n),
                        m.pluck(m.map(e, function(e, n, r) {
                            return {
                                value: e,
                                index: i++,
                                criteria: t(e, n, r)
                            }
                        }).sort(function(e, t) {
                            var n = e.criteria,
                                i = t.criteria;
                            if (n !== i) {
                                if (n > i || void 0 === n)
                                    return 1;
                                if (n < i || void 0 === i)
                                    return -1
                            }
                            return e.index - t.index
                        }), "value")
                };
            var O = function(e, t) {
                return function(n, i, r) {
                    var s = t ? [
                        [],
                        []
                    ] : {};
                    return i = b(i, r),
                        m.each(n, function(t, r) {
                            var a = i(t, r, n);
                            e(s, t, a)
                        }),
                        s
                }
            };
            m.groupBy = O(function(e, t, n) {
                    M(e, n) ? e[n].push(t) : e[n] = [t]
                }),
                m.indexBy = O(function(e, t, n) {
                    e[n] = t
                }),
                m.countBy = O(function(e, t, n) {
                    M(e, n) ? e[n]++ : e[n] = 1
                });
            var x = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
            m.toArray = function(e) {
                    return e ? m.isArray(e) ? d.call(e) : m.isString(e) ? e.match(x) : C(e) ? m.map(e, m.identity) : m.values(e) : []
                },
                m.size = function(e) {
                    return null == e ? 0 : C(e) ? e.length : m.keys(e).length
                },
                m.partition = O(function(e, t, n) {
                    e[n ? 0 : 1].push(t)
                }, !0),
                m.first = m.head = m.take = function(e, t, n) {
                    return null == e || e.length < 1 ? null == t ? void 0 : [] : null == t || n ? e[0] : m.initial(e, e.length - t)
                },
                m.initial = function(e, t, n) {
                    return d.call(e, 0, Math.max(0, e.length - (null == t || n ? 1 : t)))
                },
                m.last = function(e, t, n) {
                    return null == e || e.length < 1 ? null == t ? void 0 : [] : null == t || n ? e[e.length - 1] : m.rest(e, Math.max(0, e.length - t))
                },
                m.rest = m.tail = m.drop = function(e, t, n) {
                    return d.call(e, null == t || n ? 1 : t)
                },
                m.compact = function(e) {
                    return m.filter(e, Boolean)
                };
            var D = function(e, t, n, i) {
                for (var r = (i = i || []).length, s = 0, a = I(e); s < a; s++) {
                    var o = e[s];
                    if (C(o) && (m.isArray(o) || m.isArguments(o)))
                        if (t)
                            for (var l = 0, u = o.length; l < u;)
                                i[r++] = o[l++];
                        else
                            D(o, t, n, i),
                            r = i.length;
                    else
                        n || (i[r++] = o)
                }
                return i
            };
            m.flatten = function(e, t) {
                    return D(e, t, !1)
                },
                m.without = w(function(e, t) {
                    return m.difference(e, t)
                }),
                m.uniq = m.unique = function(e, t, n, i) {
                    m.isBoolean(t) || (i = n,
                            n = t,
                            t = !1),
                        null != n && (n = b(n, i));
                    for (var r = [], s = [], a = 0, o = I(e); a < o; a++) {
                        var l = e[a],
                            u = n ? n(l, a, e) : l;
                        t && !n ? (a && s === u || r.push(l),
                            s = u) : n ? m.contains(s, u) || (s.push(u),
                            r.push(l)) : m.contains(r, l) || r.push(l)
                    }
                    return r
                },
                m.union = w(function(e) {
                    return m.uniq(D(e, !0, !0))
                }),
                m.intersection = function(e) {
                    for (var t = [], n = arguments.length, i = 0, r = I(e); i < r; i++) {
                        var s = e[i];
                        if (!m.contains(t, s)) {
                            var a;
                            for (a = 1; a < n && m.contains(arguments[a], s); a++)
                            ;
                            a === n && t.push(s)
                        }
                    }
                    return t
                },
                m.difference = w(function(e, t) {
                    return t = D(t, !0, !0),
                        m.filter(e, function(e) {
                            return !m.contains(t, e)
                        })
                }),
                m.unzip = function(e) {
                    for (var t = e && m.max(e, I).length || 0, n = Array(t), i = 0; i < t; i++)
                        n[i] = m.pluck(e, i);
                    return n
                },
                m.zip = w(m.unzip),
                m.object = function(e, t) {
                    for (var n = {}, i = 0, r = I(e); i < r; i++)
                        t ? n[e[i]] = t[i] : n[e[i][0]] = e[i][1];
                    return n
                };
            var R = function(e) {
                return function(t, n, i) {
                    n = b(n, i);
                    for (var r = I(t), s = e > 0 ? 0 : r - 1; s >= 0 && s < r; s += e)
                        if (n(t[s], s, t))
                            return s;
                    return -1
                }
            };
            m.findIndex = R(1),
                m.findLastIndex = R(-1),
                m.sortedIndex = function(e, t, n, i) {
                    for (var r = (n = b(n, i, 1))(t), s = 0, a = I(e); s < a;) {
                        var o = Math.floor((s + a) / 2);
                        n(e[o]) < r ? s = o + 1 : a = o
                    }
                    return s
                };
            var L = function(e, t, n) {
                return function(i, r, s) {
                    var a = 0,
                        o = I(i);
                    if ("number" == typeof s)
                        e > 0 ? a = s >= 0 ? s : Math.max(s + o, a) : o = s >= 0 ? Math.min(s + 1, o) : s + o + 1;
                    else if (n && s && o)
                        return i[s = n(i, r)] === r ? s : -1;
                    if (r != r)
                        return (s = t(d.call(i, a, o), m.isNaN)) >= 0 ? s + a : -1;
                    for (s = e > 0 ? a : o - 1; s >= 0 && s < o; s += e)
                        if (i[s] === r)
                            return s;
                    return -1
                }
            };
            m.indexOf = L(1, m.findIndex, m.sortedIndex),
                m.lastIndexOf = L(-1, m.findLastIndex),
                m.range = function(e, t, n) {
                    null == t && (t = e || 0,
                            e = 0),
                        n || (n = t < e ? -1 : 1);
                    for (var i = Math.max(Math.ceil((t - e) / n), 0), r = Array(i), s = 0; s < i; s++,
                        e += n)
                        r[s] = e;
                    return r
                },
                m.chunk = function(e, t) {
                    if (null == t || t < 1)
                        return [];
                    for (var n = [], i = 0, r = e.length; i < r;)
                        n.push(d.call(e, i, i += t));
                    return n
                };
            var P = function(e, t, n, i, r) {
                if (!(i instanceof t))
                    return e.apply(n, r);
                var s = k(e.prototype),
                    a = e.apply(s, r);
                return m.isObject(a) ? a : s
            };
            m.bind = w(function(e, t, n) {
                    if (!m.isFunction(e))
                        throw new TypeError("Bind must be called on a function");
                    var i = w(function(r) {
                        return P(e, i, t, this, n.concat(r))
                    });
                    return i
                }),
                m.partial = w(function(e, t) {
                    var n = m.partial.placeholder,
                        i = function() {
                            for (var r = 0, s = t.length, a = Array(s), o = 0; o < s; o++)
                                a[o] = t[o] === n ? arguments[r++] : t[o];
                            for (; r < arguments.length;)
                                a.push(arguments[r++]);
                            return P(e, i, this, this, a)
                        };
                    return i
                }),
                m.partial.placeholder = m,
                m.bindAll = w(function(e, t) {
                    var n = (t = D(t, !1, !1)).length;
                    if (n < 1)
                        throw new Error("bindAll must be passed function names");
                    for (; n--;) {
                        var i = t[n];
                        e[i] = m.bind(e[i], e)
                    }
                }),
                m.memoize = function(e, t) {
                    var n = function(i) {
                        var r = n.cache,
                            s = "" + (t ? t.apply(this, arguments) : i);
                        return M(r, s) || (r[s] = e.apply(this, arguments)),
                            r[s]
                    };
                    return n.cache = {},
                        n
                },
                m.delay = w(function(e, t, n) {
                    return setTimeout(function() {
                        return e.apply(null, n)
                    }, t)
                }),
                m.defer = m.partial(m.delay, m, 1),
                m.throttle = function(e, t, n) {
                    var i, r, s, a, o = 0;
                    n || (n = {});
                    var l = function() {
                            o = !1 === n.leading ? 0 : m.now(),
                                i = null,
                                a = e.apply(r, s),
                                i || (r = s = null)
                        },
                        u = function() {
                            var u = m.now();
                            o || !1 !== n.leading || (o = u);
                            var d = t - (u - o);
                            return r = this,
                                s = arguments,
                                d <= 0 || d > t ? (i && (clearTimeout(i),
                                        i = null),
                                    o = u,
                                    a = e.apply(r, s),
                                    i || (r = s = null)) : i || !1 === n.trailing || (i = setTimeout(l, d)),
                                a
                        };
                    return u.cancel = function() {
                            clearTimeout(i),
                                o = 0,
                                i = r = s = null
                        },
                        u
                },
                m.debounce = function(e, t, n) {
                    var i, r, s = function(t, n) {
                            i = null,
                                n && (r = e.apply(t, n))
                        },
                        a = w(function(a) {
                            if (i && clearTimeout(i),
                                n) {
                                var o = !i;
                                i = setTimeout(s, t),
                                    o && (r = e.apply(this, a))
                            } else
                                i = m.delay(s, t, this, a);
                            return r
                        });
                    return a.cancel = function() {
                            clearTimeout(i),
                                i = null
                        },
                        a
                },
                m.wrap = function(e, t) {
                    return m.partial(t, e)
                },
                m.negate = function(e) {
                    return function() {
                        return !e.apply(this, arguments)
                    }
                },
                m.compose = function() {
                    var e = arguments,
                        t = e.length - 1;
                    return function() {
                        for (var n = t, i = e[t].apply(this, arguments); n--;)
                            i = e[n].call(this, i);
                        return i
                    }
                },
                m.after = function(e, t) {
                    return function() {
                        if (--e < 1)
                            return t.apply(this, arguments)
                    }
                },
                m.before = function(e, t) {
                    var n;
                    return function() {
                        return --e > 0 && (n = t.apply(this, arguments)),
                            e <= 1 && (t = null),
                            n
                    }
                },
                m.once = m.partial(m.before, 2),
                m.restArguments = w;
            var N = !{
                    toString: null
                }.propertyIsEnumerable("toString"),
                V = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"],
                U = function(e, t) {
                    var n = V.length,
                        i = e.constructor,
                        r = m.isFunction(i) && i.prototype || o,
                        s = "constructor";
                    for (M(e, s) && !m.contains(t, s) && t.push(s); n--;)
                        (s = V[n]) in e && e[s] !== r[s] && !m.contains(t, s) && t.push(s)
                };
            m.keys = function(e) {
                    if (!m.isObject(e))
                        return [];
                    if (p)
                        return p(e);
                    var t = [];
                    for (var n in e)
                        M(e, n) && t.push(n);
                    return N && U(e, t),
                        t
                },
                m.allKeys = function(e) {
                    if (!m.isObject(e))
                        return [];
                    var t = [];
                    for (var n in e)
                        t.push(n);
                    return N && U(e, t),
                        t
                },
                m.values = function(e) {
                    for (var t = m.keys(e), n = t.length, i = Array(n), r = 0; r < n; r++)
                        i[r] = e[t[r]];
                    return i
                },
                m.mapObject = function(e, t, n) {
                    t = b(t, n);
                    for (var i = m.keys(e), r = i.length, s = {}, a = 0; a < r; a++) {
                        var o = i[a];
                        s[o] = t(e[o], o, e)
                    }
                    return s
                },
                m.pairs = function(e) {
                    for (var t = m.keys(e), n = t.length, i = Array(n), r = 0; r < n; r++)
                        i[r] = [t[r], e[t[r]]];
                    return i
                },
                m.invert = function(e) {
                    for (var t = {}, n = m.keys(e), i = 0, r = n.length; i < r; i++)
                        t[e[n[i]]] = n[i];
                    return t
                },
                m.functions = m.methods = function(e) {
                    var t = [];
                    for (var n in e)
                        m.isFunction(e[n]) && t.push(n);
                    return t.sort()
                };
            var j = function(e, t) {
                return function(n) {
                    var i = arguments.length;
                    if (t && (n = Object(n)),
                        i < 2 || null == n)
                        return n;
                    for (var r = 1; r < i; r++)
                        for (var s = arguments[r], a = e(s), o = a.length, l = 0; l < o; l++) {
                            var u = a[l];
                            t && void 0 !== n[u] || (n[u] = s[u])
                        }
                    return n
                }
            };
            m.extend = j(m.allKeys),
                m.extendOwn = m.assign = j(m.keys),
                m.findKey = function(e, t, n) {
                    t = b(t, n);
                    for (var i, r = m.keys(e), s = 0, a = r.length; s < a; s++)
                        if (t(e[i = r[s]], i, e))
                            return i
                };
            var F, B, G = function(e, t, n) {
                return t in n
            };
            m.pick = w(function(e, t) {
                    var n = {},
                        i = t[0];
                    if (null == e)
                        return n;
                    m.isFunction(i) ? (t.length > 1 && (i = y(i, t[1])),
                        t = m.allKeys(e)) : (i = G,
                        t = D(t, !1, !1),
                        e = Object(e));
                    for (var r = 0, s = t.length; r < s; r++) {
                        var a = t[r],
                            o = e[a];
                        i(o, a, e) && (n[a] = o)
                    }
                    return n
                }),
                m.omit = w(function(e, t) {
                    var n, i = t[0];
                    return m.isFunction(i) ? (i = m.negate(i),
                            t.length > 1 && (n = t[1])) : (t = m.map(D(t, !1, !1), String),
                            i = function(e, n) {
                                return !m.contains(t, n)
                            }
                        ),
                        m.pick(e, i, n)
                }),
                m.defaults = j(m.allKeys, !0),
                m.create = function(e, t) {
                    var n = k(e);
                    return t && m.extendOwn(n, t),
                        n
                },
                m.clone = function(e) {
                    return m.isObject(e) ? m.isArray(e) ? e.slice() : m.extend({}, e) : e
                },
                m.tap = function(e, t) {
                    return t(e),
                        e
                },
                m.isMatch = function(e, t) {
                    var n = m.keys(t),
                        i = n.length;
                    if (null == e)
                        return !i;
                    for (var r = Object(e), s = 0; s < i; s++) {
                        var a = n[s];
                        if (t[a] !== r[a] || !(a in r))
                            return !1
                    }
                    return !0
                },
                F = function(e, t, n, i) {
                    if (e === t)
                        return 0 !== e || 1 / e == 1 / t;
                    if (null == e || null == t)
                        return !1;
                    if (e != e)
                        return t != t;
                    var r = typeof e;
                    return ("function" === r || "object" === r || "object" == typeof t) && B(e, t, n, i)
                },
                B = function(e, t, n, i) {
                    e instanceof m && (e = e._wrapped),
                        t instanceof m && (t = t._wrapped);
                    var r = c.call(e);
                    if (r !== c.call(t))
                        return !1;
                    switch (r) {
                        case "[object RegExp]":
                        case "[object String]":
                            return "" + e == "" + t;
                        case "[object Number]":
                            return +e != +e ? +t != +t : 0 == +e ? 1 / +e == 1 / t : +e == +t;
                        case "[object Date]":
                        case "[object Boolean]":
                            return +e == +t;
                        case "[object Symbol]":
                            return l.valueOf.call(e) === l.valueOf.call(t)
                    }
                    var s = "[object Array]" === r;
                    if (!s) {
                        if ("object" != typeof e || "object" != typeof t)
                            return !1;
                        var a = e.constructor,
                            o = t.constructor;
                        if (a !== o && !(m.isFunction(a) && a instanceof a && m.isFunction(o) && o instanceof o) && "constructor" in e && "constructor" in t)
                            return !1
                    }
                    n = n || [],
                        i = i || [];
                    for (var u = n.length; u--;)
                        if (n[u] === e)
                            return i[u] === t;
                    if (n.push(e),
                        i.push(t),
                        s) {
                        if ((u = e.length) !== t.length)
                            return !1;
                        for (; u--;)
                            if (!F(e[u], t[u], n, i))
                                return !1
                    } else {
                        var d, h = m.keys(e);
                        if (u = h.length,
                            m.keys(t).length !== u)
                            return !1;
                        for (; u--;)
                            if (d = h[u],
                                !M(t, d) || !F(e[d], t[d], n, i))
                                return !1
                    }
                    return n.pop(),
                        i.pop(),
                        !0
                },
                m.isEqual = function(e, t) {
                    return F(e, t)
                },
                m.isEmpty = function(e) {
                    return null == e || (C(e) && (m.isArray(e) || m.isString(e) || m.isArguments(e)) ? 0 === e.length : 0 === m.keys(e).length)
                },
                m.isElement = function(e) {
                    return !(!e || 1 !== e.nodeType)
                },
                m.isArray = f || function(e) {
                    return "[object Array]" === c.call(e)
                },
                m.isObject = function(e) {
                    var t = typeof e;
                    return "function" === t || "object" === t && !!e
                },
                m.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error", "Symbol", "Map", "WeakMap", "Set", "WeakSet"], function(e) {
                    m["is" + e] = function(t) {
                        return c.call(t) === "[object " + e + "]"
                    }
                }),
                m.isArguments(arguments) || (m.isArguments = function(e) {
                    return M(e, "callee")
                });
            var z = r.document && r.document.childNodes;
            "function" != typeof /./ && "object" != typeof Int8Array && "function" != typeof z && (m.isFunction = function(e) {
                    return "function" == typeof e || !1
                }),
                m.isFinite = function(e) {
                    return !m.isSymbol(e) && isFinite(e) && !isNaN(parseFloat(e))
                },
                m.isNaN = function(e) {
                    return m.isNumber(e) && isNaN(e)
                },
                m.isBoolean = function(e) {
                    return !0 === e || !1 === e || "[object Boolean]" === c.call(e)
                },
                m.isNull = function(e) {
                    return null === e
                },
                m.isUndefined = function(e) {
                    return void 0 === e
                },
                m.has = function(e, t) {
                    if (!m.isArray(t))
                        return M(e, t);
                    for (var n = t.length, i = 0; i < n; i++) {
                        var r = t[i];
                        if (null == e || !h.call(e, r))
                            return !1;
                        e = e[r]
                    }
                    return !!n
                },
                m.noConflict = function() {
                    return r._ = s,
                        this
                },
                m.identity = function(e) {
                    return e
                },
                m.constant = function(e) {
                    return function() {
                        return e
                    }
                },
                m.noop = function() {},
                m.property = function(e) {
                    return m.isArray(e) ? function(t) {
                            return S(t, e)
                        } :
                        E(e)
                },
                m.propertyOf = function(e) {
                    return null == e ? function() {} :
                        function(t) {
                            return m.isArray(t) ? S(e, t) : e[t]
                        }
                },
                m.matcher = m.matches = function(e) {
                    return e = m.extendOwn({}, e),
                        function(t) {
                            return m.isMatch(t, e)
                        }
                },
                m.times = function(e, t, n) {
                    var i = Array(Math.max(0, e));
                    t = y(t, n, 1);
                    for (var r = 0; r < e; r++)
                        i[r] = t(r);
                    return i
                },
                m.random = function(e, t) {
                    return null == t && (t = e,
                            e = 0),
                        e + Math.floor(Math.random() * (t - e + 1))
                },
                m.now = Date.now || function() {
                    return (new Date).getTime()
                };
            var W = {
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#x27;",
                    "`": "&#x60;"
                },
                H = m.invert(W),
                q = function(e) {
                    var t = function(t) {
                            return e[t]
                        },
                        n = "(?:" + m.keys(e).join("|") + ")",
                        i = RegExp(n),
                        r = RegExp(n, "g");
                    return function(e) {
                        return e = null == e ? "" : "" + e,
                            i.test(e) ? e.replace(r, t) : e
                    }
                };
            m.escape = q(W),
                m.unescape = q(H),
                m.result = function(e, t, n) {
                    m.isArray(t) || (t = [t]);
                    var i = t.length;
                    if (!i)
                        return m.isFunction(n) ? n.call(e) : n;
                    for (var r = 0; r < i; r++) {
                        var s = null == e ? void 0 : e[t[r]];
                        void 0 === s && (s = n,
                                r = i),
                            e = m.isFunction(s) ? s.call(e) : s
                    }
                    return e
                };
            var $ = 0;
            m.uniqueId = function(e) {
                    var t = ++$ + "";
                    return e ? e + t : t
                },
                m.templateSettings = {
                    evaluate: /<%([\s\S]+?)%>/g,
                    interpolate: /<%=([\s\S]+?)%>/g,
                    escape: /<%-([\s\S]+?)%>/g
                };
            var Y = /(.)^/,
                K = {
                    "'": "'",
                    "\\": "\\",
                    "\r": "r",
                    "\n": "n",
                    "\u2028": "u2028",
                    "\u2029": "u2029"
                },
                J = /\\|'|\r|\n|\u2028|\u2029/g,
                Z = function(e) {
                    return "\\" + K[e]
                };
            m.template = function(e, t, n) {
                    !t && n && (t = n),
                        t = m.defaults({}, t, m.templateSettings);
                    var i, r = RegExp([(t.escape || Y).source, (t.interpolate || Y).source, (t.evaluate || Y).source].join("|") + "|$", "g"),
                        s = 0,
                        a = "__p+='";
                    e.replace(r, function(t, n, i, r, o) {
                            return a += e.slice(s, o).replace(J, Z),
                                s = o + t.length,
                                n ? a += "'+\n((__t=(" + n + "))==null?'':_.escape(__t))+\n'" : i ? a += "'+\n((__t=(" + i + "))==null?'':__t)+\n'" : r && (a += "';\n" + r + "\n__p+='"),
                                t
                        }),
                        a += "';\n",
                        t.variable || (a = "with(obj||{}){\n" + a + "}\n"),
                        a = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + a + "return __p;\n";
                    try {
                        i = new Function(t.variable || "obj", "_", a)
                    } catch (e) {
                        throw e.source = a,
                            e
                    }
                    var o = function(e) {
                            return i.call(this, e, m)
                        },
                        l = t.variable || "obj";
                    return o.source = "function(" + l + "){\n" + a + "}",
                        o
                },
                m.chain = function(e) {
                    var t = m(e);
                    return t._chain = !0,
                        t
                };
            var X = function(e, t) {
                return e._chain ? m(t).chain() : t
            };
            m.mixin = function(e) {
                    return m.each(m.functions(e), function(t) {
                            var n = m[t] = e[t];
                            m.prototype[t] = function() {
                                var e = [this._wrapped];
                                return u.apply(e, arguments),
                                    X(this, n.apply(m, e))
                            }
                        }),
                        m
                },
                m.mixin(m),
                m.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(e) {
                    var t = a[e];
                    m.prototype[e] = function() {
                        var n = this._wrapped;
                        return t.apply(n, arguments),
                            "shift" !== e && "splice" !== e || 0 !== n.length || delete n[0],
                            X(this, n)
                    }
                }),
                m.each(["concat", "join", "slice"], function(e) {
                    var t = a[e];
                    m.prototype[e] = function() {
                        return X(this, t.apply(this._wrapped, arguments))
                    }
                }),
                m.prototype.value = function() {
                    return this._wrapped
                },
                m.prototype.valueOf = m.prototype.toJSON = m.prototype.value,
                m.prototype.toString = function() {
                    return String(this._wrapped)
                },
                void 0 === (i = function() {
                        return m
                    }
                    .apply(t, [])) || (n.exports = i)
        }()
    }).call(this, n(38), n(111)(e))
}, function(e, t, n) {
    e.exports = {
        default: n(768),
        __esModule: !0
    }
}, function(e, t, n) {
    e.exports = {
        default: n(790),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i = a(n(163)),
        r = a(n(172)),
        s = "function" == typeof r.default && "symbol" == typeof i.default ? function(e) {
            return typeof e
        } :
        function(e) {
            return e && "function" == typeof r.default && e.constructor === r.default && e !== r.default.prototype ? "symbol" : typeof e
        };

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.default = "function" == typeof r.default && "symbol" === s(i.default) ? function(e) {
            return void 0 === e ? "undefined" : s(e)
        } :
        function(e) {
            return e && "function" == typeof r.default && e.constructor === r.default && e !== r.default.prototype ? "symbol" : void 0 === e ? "undefined" : s(e)
        }
}, function(e, t, n) {
    var i = n(28),
        r = n(167),
        s = n(81),
        a = n(79)("IE_PROTO"),
        o = function() {},
        l = function() {
            var e, t = n(96)("iframe"),
                i = s.length;
            for (t.style.display = "none",
                n(130).appendChild(t),
                t.src = "javascript:",
                (e = t.contentWindow.document).open(),
                e.write("<script>document.F=Object<\/script>"),
                e.close(),
                l = e.F; i--;)
                delete l.prototype[s[i]];
            return l()
        };
    e.exports = Object.create || function(e, t) {
        var n;
        return null !== e ? (o.prototype = i(e),
                n = new o,
                o.prototype = null,
                n[a] = e) : n = l(),
            void 0 === t ? n : r(n, t)
    }
}, function(e, t) {
    var n = {}.toString;
    e.exports = function(e) {
        return n.call(e).slice(8, -1)
    }
}, function(e, t, n) {
    var i = n(77);
    e.exports = function(e) {
        return Object(i(e))
    }
}, function(e, t, n) {
    n(170);
    for (var i = n(18), r = n(35), s = n(51), a = n(23)("toStringTag"), o = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), l = 0; l < o.length; l++) {
        var u = o[l],
            d = i[u],
            c = d && d.prototype;
        c && !c[a] && r(c, a, u),
            s[u] = s.Array
    }
}, function(e, t, n) {
    e.exports = {
        default: n(855),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.RESTRICTION_DESCRIPTION_CHAR_LIMIT = t.RESTRICTION_MODALITY = t.RESTRICTION_TYPE = t.BaseRestriction = void 0;
    var i = u(n(6)),
        r = u(n(7)),
        s = u(n(0)),
        a = u(n(1)),
        o = n(189),
        l = n(857);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = {
            FREE: "FREE",
            BLOCKED: "BLOCKED",
            TOLL: "TOLL",
            PENALTY: "PENALTY",
            ENTER_ONLY: "ENTER_ONLY",
            DANGEROUS_AREA: "DANGEROUS_AREA",
            DIFFICULT: "DIFFICULT"
        },
        c = {
            DRIVING_BLOCKED: "DRIVING_BLOCKED",
            DRIVING_ALLOWED: "DRIVING_ALLOWED",
            DRIVING_TOLL_FREE: "DRIVING_TOLL_FREE"
        },
        h = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.timeFrames,
                    i = void 0 === n ? [] : n,
                    a = t.defaultType,
                    u = void 0 === a ? null : a,
                    d = t.driveProfiles,
                    c = void 0 === d ? {} : d,
                    h = t.description,
                    f = void 0 === h ? "" : h,
                    p = t.editable,
                    g = void 0 === p || p;
                (0,
                    s.default)(this, e),
                this._editable = g,
                    this._defaultType = u,
                    this._description = f,
                    this._timeFrames = i.map(function(e) {
                        return new o.RestrictionTimeFrame(e)
                    }),
                    this._driveProfiles = (0,
                        r.default)(c).reduce(function(e, t) {
                        var n = c[t];
                        return e[t] = new l.RestrictionDriveProfileList({
                                driveProfiles: n
                            }),
                            e
                    }, {})
            }
            return (0,
                    a.default)(e, [{
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            i.default)(this.toJSON(), e))
                    }
                }, {
                    key: "__clone",
                    value: function() {
                        return this.toJSON()
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return this._editable === e._editable && this._defaultType === e._defaultType && this._description === e._description && this._timeFramesEquals(e._timeFrames) && this._driveProfilesEquals(e._driveProfiles)
                    }
                }, {
                    key: "_timeFramesEquals",
                    value: function(e) {
                        return this._timeFrames.length === e.length && this._timeFrames.every(function(t) {
                            return e.some(function(e) {
                                return e.equals(t)
                            })
                        })
                    }
                }, {
                    key: "_driveProfilesEquals",
                    value: function(e) {
                        var t = this,
                            n = (0,
                                r.default)(this._driveProfiles);
                        return n.length === (0,
                            r.default)(e).length && n.every(function(n) {
                            return t._driveProfiles[n].equals(e[n])
                        })
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = this;
                        return {
                            editable: this._editable,
                            defaultType: this._defaultType,
                            description: this._description,
                            timeFrames: this._timeFrames.map(function(e) {
                                return e.toJSON()
                            }),
                            driveProfiles: (0,
                                r.default)(this._driveProfiles).reduce(function(t, n) {
                                return t[n] = e._driveProfiles[n].toJSON(),
                                    t
                            }, {})
                        }
                    }
                }, {
                    key: "getDefaultType",
                    value: function() {
                        return this._defaultType
                    }
                }, {
                    key: "getDescription",
                    value: function() {
                        return null != this._description ? this._description : ""
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this._timeFrames.length ? this._timeFrames[0] : o.RestrictionTimeFrame.getAlwaysOn()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function(e) {
                        return this.hasDriveProfile(e) ? this._driveProfiles[e] : new l.RestrictionDriveProfileList
                    }
                }, {
                    key: "hasDriveProfile",
                    value: function(e) {
                        return this._driveProfiles.hasOwnProperty(e)
                    }
                }, {
                    key: "isDriveProfileEmpty",
                    value: function() {
                        return 0 === (0,
                            r.default)(this._driveProfiles).length
                    }
                }, {
                    key: "isTimeRestricted",
                    value: function() {
                        return this._timeFrames && this._timeFrames.length > 0
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._editable
                    }
                }, {
                    key: "isDifficult",
                    value: function() {
                        return this._defaultType === d.DIFFICULT
                    }
                }, {
                    key: "isSimplyDifficult",
                    value: function() {
                        return this.isDifficult() && !this.isTimeRestricted()
                    }
                }, {
                    key: "supportsNumPassengers",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsSubscriptions",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsTollDriveProfileEntries",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsDriveProfiles",
                    value: function() {
                        return !this.isDifficult()
                    }
                }, {
                    key: "getDrivingModality",
                    value: function() {
                        return this._defaultType === d.TOLL ? c.DRIVING_TOLL_FREE : this._defaultType === d.BLOCKED && this.hasDriveProfile(d.FREE) ? c.DRIVING_ALLOWED : this._defaultType === d.FREE && this.hasDriveProfile(d.BLOCKED) || this._defaultType === d.BLOCKED && this.isDriveProfileEmpty() ? c.DRIVING_BLOCKED : null
                    }
                }, {
                    key: "isBlockedModality",
                    value: function() {
                        return this.getDrivingModality() === c.DRIVING_BLOCKED
                    }
                }, {
                    key: "isAllowedModality",
                    value: function() {
                        return this.getDrivingModality() === c.DRIVING_ALLOWED
                    }
                }, {
                    key: "isTollFreeModality",
                    value: function() {
                        return this.getDrivingModality() === c.DRIVING_TOLL_FREE
                    }
                }]),
                e
        }();
    t.BaseRestriction = h,
        t.RESTRICTION_TYPE = d,
        t.RESTRICTION_MODALITY = c,
        t.RESTRICTION_DESCRIPTION_CHAR_LIMIT = 1e3
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(370),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend({
        TYPE: {
            MAP_PROBLEM: "MAP_PROBLEM",
            VENUE_UPDATE_REQUEST: "VENUE_UPDATE_REQUEST",
            UPDATE_REQUEST: "UPDATE_REQUEST"
        },
        MOTIVATIONS: {
            1: "REPORTED_BY_USER",
            2: "USER_FOLLOWS_ISSUE",
            4: "USER_FOLLOWS_ISSUE_LAST_COMMENT",
            8: "CLOSE_TO_FAVORITES",
            16: "NEAR_DRIVES",
            32: "ISSUE_AGE",
            64: "ISSUE_REOPENED",
            128: "CAN_BE_SOLVED_BY_RANK"
        },
        defaults: {
            state: ""
        },
        initialize: function() {
            s.default.prototype.initialize.apply(this),
                this.set("state", this.getFeedIssueState())
        },
        _isModified: function() {
            return !1
        },
        _isResolved: function() {
            return !1
        },
        getSeverity: function() {
            return null
        },
        onModelChanged: function() {
            this.set("modified", this._isModified()),
                this.set("state", this.getFeedIssueState())
        },
        onModelSynced: function() {
            if (this.set("modified", !1),
                this.set("state", this.getFeedIssueState()),
                this._isResolved())
                return this.trigger("resolved")
        },
        onModelRemoved: function() {
            return this.destroy()
        },
        sync: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            if ("delete" === e) {
                var i = W.Config.paths.issues + "/" + t.get("type") + "/" + t.get("id");
                n.url = encodeURI(i)
            }
            return Backbone.sync(e, t, n)
        },
        getFeedIssueState: function() {
            return ""
        }
    });
    a.prototype.defaults = _.extend({
            modified: !1
        }, s.default.prototype.defaults),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(868),
        s = n(54);
    ! function(e) {
        e[e.FWD = 0] = "FWD",
            e[e.REV = 1] = "REV"
    }(i || (i = {})),
    t.SEGMENT_LANE_DIRECTION = i;
    var a = function() {
        function e(e, t, n, i, r) {
            this.dataModel = e,
                this.segmentId = t,
                this.direction = n,
                this.laneCount = i,
                this.lanes = r.slice()
        }
        return e.forSegment = function(t, n, i) {
                if (null == n)
                    return null;
                for (var a = n.getLaneCount(i), o = s.getOutgoingEnabledTurns(t, n, i), l = [], u = function(e) {
                        var n = o.filter(function(t) {
                                var n = t.getTurnData();
                                return n.hasLanes() && n.getLaneData().includes(e)
                            }),
                            i = Array.from(new Set(n.map(function(e) {
                                return e.getTurnData().getLaneData().getArrowAngle()
                            }))),
                            s = n.map(function(e) {
                                return e.getToVertex().getSegmentID()
                            });
                        l.push(new r.default(t, i, s))
                    }, d = 0; d < a; d++)
                    u(d);
                return new e(t, n.getID(), i, a, l)
            },
            e.prototype.getDirection = function() {
                return this.direction
            },
            e.prototype.getSegment = function() {
                return this.dataModel.segments.getObjectById(this.segmentId)
            },
            e.prototype.getLaneCount = function() {
                return this.laneCount
            },
            e.prototype.getLanes = function() {
                return this.lanes.slice()
            },
            e.prototype.getNode = function() {
                var e = this.dataModel.segments.getObjectById(this.segmentId);
                return this.direction === i.FWD ? e.getToNode() : e.getFromNode()
            },
            e.prototype.isComplete = function() {
                return this.isEmpty() || this.allTurnsCovered() && this.allLanesCovered()
            },
            e.prototype.isEmpty = function() {
                return 0 === this.laneCount
            },
            e.prototype.allTurnsCovered = function() {
                var e = this;
                return s.getOutgoingEnabledTurns(this.dataModel, this.getSegment(), this.getDirection()).every(function(t) {
                    return e.isTurnCovered(t)
                })
            },
            e.prototype.isTurnCovered = function(e) {
                return Boolean(this.lanes.find(function(t) {
                    return t.getToSegmentIDs().includes(e.getToVertex().getSegmentID())
                }))
            },
            e.prototype.allLanesCovered = function() {
                return this.laneCount === this.lanes.length && this.allLanesComplete()
            },
            e.prototype.allLanesComplete = function() {
                return this.lanes.every(function(e) {
                    return !e.isEmpty()
                })
            },
            e
    }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = null;

    function r() {
        if (null == i)
            throw new Error("call init() before reading server config");
        return i
    }
    t.FEATURE_FLAGS = {
            LANES: "Lanes",
            MERGE_PLACES: "MergeVenues"
        },
        t.init = function(e) {
            return e.getConfigurationInfo().then(function(e) {
                i = e,
                    W.serverConfig = i
            })
        },
        t.getServerConfig = r,
        t.isFeatureFlagEnabled = function(e) {
            var t = r().featureFlags;
            return null != t && Boolean(t[e])
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(9)),
        r = g(n(2)),
        s = g(n(0)),
        a = g(n(1)),
        o = g(n(3)),
        l = g(n(4)),
        u = g(n(11)),
        d = g(n(22)),
        c = g(n(395)),
        h = g(n(150)),
        f = g(n(13)),
        p = n(40);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e, n) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                s.default)(this, t);
            var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i)),
                l = i.virtual,
                u = void 0 !== l && l;
            return a.node = e,
                a.segment = n,
                a._connectVirtually = u,
                a
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment, this.node]
                }
            }, {
                key: "doAction",
                value: function() {
                    var e = {};
                    if (this.node.isVirtual() && !this.segment.isWalkingRoadType() && this.doSubAction(new c.default(this.node)),
                        this._connectVirtually)
                        e.virtualNodeIDs = [].concat((0,
                            i.default)(this.segment.attributes.virtualNodeIDs), [this.node.getID()]),
                        this._updateSegmentGeometry();
                    else {
                        var t = this._findSegmentEdge();
                        if (!t)
                            return !1;
                        e[t + "NodeID"] = this.node.getID()
                    }
                    return this.segment.getID(),
                        this.node.getID(),
                        this.doSubAction(new d.default(this.segment, e)),
                        this._updateNodeSegmentList(),
                        !0
                }
            }, {
                key: "_updateSegmentGeometry",
                value: function() {
                    var e = this;
                    if (!this.segment.geometry.components.some(function(t) {
                            return e.node.geometry.equals(t)
                        })) {
                        var t = f.default.getPointEdge(this.segment.geometry.components, this.node.geometry),
                            n = this.segment.geometry.clone();
                        n.components.splice(t + 1, 0, this.node.geometry.clone()),
                            this.doSubAction(new h.default(this.segment, this.segment.geometry, n))
                    }
                }
            }, {
                key: "_findSegmentEdge",
                value: function() {
                    var e = this.segment.geometry.getVertices(!0);
                    return e[0].equals(this.node.geometry) ? "from" : e[1].equals(this.node.geometry) ? "to" : null
                }
            }, {
                key: "_updateNodeSegmentList",
                value: function() {
                    var e = this.node.attributes.segIDs.concat();
                    return e.includes(this.segment.getID()) || e.push(this.segment.getID()),
                        this.doSubAction(new d.default(this.node, {
                            segIDs: e
                        }, {
                            dontSerialize: !0
                        }))
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = (0,
                        p.formatActionAddressDescription)(this.segment, "ConnectSegment")
                }
            }]),
            t
    }(u.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            (0,
                r.default)(this, t);
            var s = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, n));
            return s.subActions = e || [],
                s
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "undoSupported",
                value: function() {
                    for (var e = 0, t = this.subActions.length; e < t; e++)
                        if (!this.subActions[e].undoSupported())
                            return !1;
                    return !0
                }
            }, {
                key: "setModel",
                value: function(e) {
                    (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "setModel", this).call(this, e);
                    for (var n = 0, r = this.subActions.length; n < r; n++)
                        this.subActions[n].setModel(e)
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return _.uniq(_.flatten(this.subActions.map(function(e) {
                        return e.getFocusFeatures()
                    })))
                }
            }]),
            t
    }(u(n(11)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(7),
        s = (i = r) && i.__esModule ? i : {
            default: i
        },
        a = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24));
    var o = OpenLayers.Class(OpenLayers.Renderer.SVG, {
        initialize: function() {
            OpenLayers.Renderer.SVG.prototype.initialize.apply(this, arguments),
                this.supportUse = !0
        },
        setAnimation: function(e, t) {
            var n = document.createElementNS(this.xmlns, "animate");
            n.setAttributeNS(null, "attributeName", t.attributeName),
                n.setAttributeNS(null, "dur", t.dur),
                (0,
                    s.default)(t).forEach(function(e) {
                    n.setAttributeNS(null, e, t[e])
                }),
                e.appendChild(n)
        },
        setStyle: function(e, t, n) {
            if (OpenLayers.Renderer.SVG.prototype.setStyle.apply(this, arguments),
                t.animation && this.setAnimation(e, t.animation),
                t.mask && e.setAttributeNS(null, "mask", t.mask),
                t.filter && e.setAttributeNS(null, "filter", t.filter),
                a.defined(t.rx) && e.setAttributeNS(null, "rx", t.rx),
                a.defined(t.ry) && e.setAttributeNS(null, "ry", t.ry),
                a.defined(t.maskID)) {
                var i = document.getElementById(t.maskID),
                    r = void 0;
                i || (i = document.createElementNS(this.xmlns, "mask"),
                        (r = document.createElementNS(this.xmlns, "rect")).setAttributeNS(null, "x", "0"),
                        r.setAttributeNS(null, "y", "0"),
                        r.setAttributeNS(null, "width", "100%"),
                        r.setAttributeNS(null, "height", "100%"),
                        r.setAttributeNS(null, "fill", "white"),
                        i.setAttributeNS(null, "id", t.maskID),
                        i.appendChild(r)),
                    i.appendChild(e),
                    i._style = t,
                    e = i
            }
            return e
        },
        importSymbol: function(e) {
            return this.symbolMetrics = {},
                this.symbolMetrics[e] = [0, 0, 0],
                e
        },
        getNodeType: function(e, t) {
            var n = OpenLayers.Renderer.SVG.prototype.getNodeType.apply(this, arguments);
            return "circle" === n && a.defined(t.rx) && a.defined(t.ry) && (n = "ellipse"),
                n
        },
        dashStyle: function(e, t) {
            var n = void 0;
            if (e.strokeDashArray)
                return e.strokeDashArray;
            n = e.strokeWidth * t;
            var i = e.strokeDashstyle;
            switch (i) {
                case "solid":
                    return "none";
                case "dot":
                    return [1, 4 * n].join();
                case "dash":
                    return [4 * n, 4 * n].join();
                case "dashdot":
                    return [4 * n, 4 * n, 1, 4 * n].join();
                case "longdash":
                    return [8 * n, 4 * n].join();
                case "longdashdot":
                    return [8 * n, 4 * n, 1, 4 * n].join();
                default:
                    return OpenLayers.String.trim(i).replace(/\s+/g, ",")
            }
        },
        CLASS_NAME: "Waze.Renderer.ExtendedSVG"
    });
    t.default = o,
        e.exports = t.default
}, function(e, t) {
    var n = Math.ceil,
        i = Math.floor;
    e.exports = function(e) {
        return isNaN(e = +e) ? 0 : (e > 0 ? i : n)(e)
    }
}, function(e, t) {
    e.exports = function(e) {
        if (void 0 == e)
            throw TypeError("Can't call method on  " + e);
        return e
    }
}, function(e, t, n) {
    var i = n(26);
    e.exports = function(e, t) {
        if (!i(e))
            return e;
        var n, r;
        if (t && "function" == typeof(n = e.toString) && !i(r = n.call(e)))
            return r;
        if ("function" == typeof(n = e.valueOf) && !i(r = n.call(e)))
            return r;
        if (!t && "function" == typeof(n = e.toString) && !i(r = n.call(e)))
            return r;
        throw TypeError("Can't convert object to primitive value")
    }
}, function(e, t, n) {
    var i = n(80)("keys"),
        r = n(57);
    e.exports = function(e) {
        return i[e] || (i[e] = r(e))
    }
}, function(e, t, n) {
    var i = n(12),
        r = n(18),
        s = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
    (e.exports = function(e, t) {
        return s[e] || (s[e] = void 0 !== t ? t : {})
    })("versions", []).push({
        version: i.version,
        mode: n(49) ? "pure" : "global",
        copyright: "© 2018 Denis Pushkarev (zloirock.ru)"
    })
}, function(e, t) {
    e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
}, function(e, t, n) {
    t.f = n(23)
}, function(e, t, n) {
    var i = n(18),
        r = n(12),
        s = n(49),
        a = n(82),
        o = n(27).f;
    e.exports = function(e) {
        var t = r.Symbol || (r.Symbol = s ? {} : i.Symbol || {});
        "_" == e.charAt(0) || e in t || o(t, e, {
            value: a.f(e)
        })
    }
}, function(e, t) {
    t.f = Object.getOwnPropertySymbols
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.UNIT = void 0;
    var i = s(n(7)),
        r = s(n(25));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a, o = {},
        l = {},
        u = {
            KILOMETER: "km",
            MILE: "mi",
            METER: "m",
            FEET: "ft"
        },
        d = {};
    d[u.KILOMETER] = u.MILE,
        d[u.METER] = u.FEET;
    var c = {},
        h = !0,
        f = !1,
        p = void 0;
    try {
        for (var g, v = (0,
                r.default)((0,
                i.default)(d)); !(h = (g = v.next()).done); h = !0) {
            var m = g.value,
                _ = d[m];
            c[_] = m,
                o[m] = !0,
                l[_] = !0
        }
    } catch (e) {
        f = !0,
            p = e
    } finally {
        try {
            !h && v.return && v.return()
        } finally {
            if (f)
                throw p
        }
    }
    var y = OpenLayers.INCHES_PER_UNIT;
    a = {
            convert: function(e, t, n) {
                return e * y[t] / y[n]
            },
            localizeUnit: function(e) {
                return o[e] && W.model.isImperial ? e = d[e] : l[e] && !W.model.isImperial && (e = c[e]),
                    e
            },
            getLocalizedValue: function(e, t) {
                if (null == e)
                    return e;
                var n = this.localizeUnit(t);
                return this.convert(e, t, n)
            },
            getLocalizedDisplayValue: function(e, t, n) {
                if (null == e)
                    return e;
                var i = this.convert(e, t, n);
                return this.getLocalizedValue(i, n)
            },
            getOriginalValue: function(e, t) {
                if (null == e)
                    return e;
                var n = this.localizeUnit(t);
                return this.convert(e, n, t)
            }
        },
        t.UNIT = u,
        t.default = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(7)),
        r = p(n(53)),
        s = p(n(6)),
        a = p(n(2)),
        o = p(n(0)),
        l = p(n(1)),
        u = p(n(3)),
        d = p(n(4)),
        c = p(n(851)),
        h = n(32),
        f = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = new OpenLayers.Projection("EPSG:4326"),
        v = -100,
        m = -1,
        y = function(e) {
            function t(e, n) {
                (0,
                    o.default)(this, t);
                var i = (0,
                    u.default)(this, (t.__proto__ || (0,
                    a.default)(t)).call(this, n));
                return i.persistentObjects = null,
                    i.idGenerator = null,
                    i.projection = null,
                    i.active = null,
                    i.name = null,
                    i.currentDataBounds = null,
                    i.minZoom = 0,
                    i.onDemand = !0,
                    i.additionalInfo = null,
                    i.useVersions = !0,
                    i.filter = null,
                    i.storePersistentSeparately = !1,
                    (0,
                        s.default)(i, n),
                    i.objects = {},
                    i.persistentObjects = {},
                    i.objectType = e,
                    i.idGenerator = new c.default(v, m),
                    null === i.projection && (i.projection = g),
                    i.active = !f.defined(n.active) || n.active,
                    i.filter && i.filter.on("change", i._onFilterChanged, i),
                    i
            }
            return (0,
                    d.default)(t, e),
                (0,
                    l.default)(t, [{
                    key: "KEEP_CHANGED",
                    value: function(e, t) {
                        return e
                    }
                }, {
                    key: "REPLACE_CHANGED",
                    value: function(e, t) {
                        return t
                    }
                }, {
                    key: "_onFilterChanged",
                    value: function() {
                        this.clear({
                            keepUnsaved: !0
                        })
                    }
                }, {
                    key: "setActive",
                    value: function(e) {
                        this.active = e,
                            this.trigger("change:active", {
                                active: e
                            })
                    }
                }, {
                    key: "updateDataExtent",
                    value: function(e, t, n) {
                        var i = {};
                        return n < this.minZoom ? (this.clear({
                                keepUnsaved: !0,
                                keepSelected: !0
                            }),
                            null) : !this.filtered && (!this.onDemand || this.currentDataBounds && this.currentDataBounds.containsBounds(e)) ? null : this.filter ? (this.filter.isEmpty() || (i[this.filter.getName()] = this.filter.serialize()),
                            i) : (i[this.objectType + "s"] = !0,
                            i)
                    }
                }, {
                    key: "getObjectById",
                    value: function(e) {
                        return this.objects[e] || this.persistentObjects[e]
                    }
                }, {
                    key: "getByAttributes",
                    value: function(e) {
                        return _.where(this.objects, e)
                    }
                }, {
                    key: "put",
                    value: function(e) {
                        e instanceof Array || (e = [e]);
                        for (var t = [], n = [], i = 0, r = e.length; i < r; i++) {
                            var s = e[i],
                                a = s.getID(),
                                o = void 0;
                            o = this.storePersistentSeparately && s.isPersistent() ? this.persistentObjects : this.objects,
                                s.type = this.objectType,
                                s.model = this.model,
                                o[a] ? t.push(s) : n.push(s),
                                o[a] = s
                        }
                        t.length > 0 && this.trigger(h.CHANGED, t),
                            n.length > 0 && this.trigger(h.ADDED, n),
                            (n.length > 0 || t.length > 0) && this.trigger(h.UPDATED)
                    }
                }, {
                    key: "changed",
                    value: function(e) {
                        e instanceof Array || (e = [e]),
                            this.trigger(h.CHANGED, e),
                            this.trigger(h.UPDATED)
                    }
                }, {
                    key: "_triggerChangedID",
                    value: function(e, t) {
                        var n = {
                            oldID: e,
                            newID: t
                        };
                        this.trigger(h.CHANGED_ID, n)
                    }
                }, {
                    key: "synced",
                    value: function(e) {
                        e instanceof Array || (e = [e]),
                            this.trigger(h.SYNCED, e)
                    }
                }, {
                    key: "remove",
                    value: function(e) {
                        e instanceof Array || (e = [e]);
                        for (var t = [], n = 0, i = e.length; n < i; n++) {
                            var r = e[n];
                            this.objects[r.getID()] && (delete this.objects[r.getID()],
                                t.push(r))
                        }
                        t.length > 0 && (this.trigger(h.REMOVED, t),
                            this.trigger(h.UPDATED))
                    }
                }, {
                    key: "mergeObjectAttributes",
                    value: function(e, t) {
                        e.merge(t),
                            e.state = null,
                            this.changed(e),
                            this.synced(e)
                    }
                }, {
                    key: "changeObjectID",
                    value: function(e, t) {
                        var n = e.getID();
                        e.changeID(t),
                            delete this.objects[n],
                            this.objects[t] = e,
                            this._triggerChangedID(n, t),
                            e.state = null,
                            this.changed(e),
                            this.synced(e)
                    }
                }, {
                    key: "generateUniqueID",
                    value: function() {
                        return this.idGenerator.next()
                    }
                }, {
                    key: "getObjectArray",
                    value: function(e) {
                        return _.isUndefined(e) ? (0,
                            r.default)(this.objects) : _.filter(this.objects, e)
                    }
                }, {
                    key: "clear",
                    value: function(e) {
                        var t = this;
                        this.currentDataBounds = null;
                        var n = [];
                        e = _.extend({
                                keepPersistent: !0
                            }, e),
                            (0,
                                i.default)(this.objects).forEach(function(i) {
                                var r = t.objects[i];
                                r.isInUse(e) ? r.state !== OpenLayers.State.INSERT && (r.outOfScope = !0) : (n.push(r),
                                    delete t.objects[i])
                            }),
                            e && e.silent || n.length > 0 && (this.trigger(h.REMOVED, n),
                                this.trigger(h.UPDATED))
                    }
                }, {
                    key: "mergeObjects",
                    value: function(e, t, n) {
                        this.currentDataBounds = n.clone(),
                            t || (t = this.KEEP_CHANGED),
                            this.filtered = Boolean(e) && Boolean(e.filtered),
                            (e = e ? e.objects : []) || (e = []);
                        for (var i = [], r = [], s = 0, a = e.length; s < a; ++s) {
                            var o = e[s].getID();
                            if (this.objects[o])
                                if (!this.useVersions || e[s].getVersion() > this.objects[o].getVersion())
                                    if (this.objects[o].state) {
                                        var l = t(this.objects[o], e[s]);
                                        l && l !== this.objects[o] && (r.push(this.objects[o]),
                                            this.objects[o] = e[s],
                                            i.push(e[s]),
                                            e[s].type = this.objectType,
                                            e[s].model = this.model)
                                    } else
                                        r.push(this.objects[o]),
                                        this.objects[o] = e[s],
                                        i.push(e[s]),
                                        e[s].type = this.objectType,
                                        e[s].model = this.model;
                            else
                                delete this.objects[o].outOfScope;
                            else
                                this.objects[o] = e[s],
                                i.push(e[s]),
                                e[s].type = this.objectType,
                                e[s].model = this.model
                        }
                        delete e.objects,
                            this.additionalInfo = e,
                            r.length > 0 && this.trigger(h.REMOVED, r),
                            i.length > 0 && this.trigger(h.ADDED, i),
                            (r.length > 0 || i.length > 0) && this.trigger(h.UPDATED)
                    }
                }, {
                    key: "getModifiedObjects",
                    value: function() {
                        var e = {};
                        for (var t in e[OpenLayers.State.INSERT] = [],
                                e[OpenLayers.State.UPDATE] = [],
                                e[OpenLayers.State.DELETE] = [],
                                this.objects)
                            this.objects[t].state && e[this.objects[t].state].push(this.objects[t]);
                        return e
                    }
                }, {
                    key: "hasModifiedObjects",
                    value: function() {
                        for (var e in this.objects)
                            if (this.objects[e].state)
                                return !0;
                        return !1
                    }
                }, {
                    key: "getByIds",
                    value: function(e) {
                        var t = [],
                            n = void 0;
                        return e.forEach(function(e) {
                                (n = this.getObjectById(e)) && t.push(n)
                            }, this),
                            t
                    }
                }]),
                t
        }(Marionette.Object);
    (0,
        s.default)(y.prototype, {
        CLASS_NAME: "Waze.Model.ObjectRepository"
    }),
    t.default = y,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(7)),
        r = o(n(17)),
        s = o(n(44)),
        a = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(852));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = OL.Class(OL.Format.GeoJSON, {
        initialize: function() {
            var e = this;
            this._typeToClass = _.clone(a.TYPE_TO_CLASS),
                s.default.getModels().forEach(function(t) {
                    var n = t.repositoryName,
                        i = t.modelClass;
                    e._typeToClass[n] = i
                })
        },
        read: function(e) {
            var t = this;
            return (0,
                    i.default)(e).forEach(function(n) {
                    var i = e[n];
                    _.isUndefined(i.objects) || t._parseObjects(n, i.objects)
                }),
                e
        },
        _parseObjects: function(e, t) {
            var n = a.TYPE_TO_FACTORY[e];
            if (n)
                return t.map(function(e, i) {
                    return t[i] = n.create(e)
                });
            var i = this._typeToClass[e] || r.default;
            return t.map(function(e, n) {
                return t[n] = new i(e, {
                    parse: !0
                })
            })
        }
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(0)),
        r = o(n(1)),
        s = o(n(188)),
        a = n(69);

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
                a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
            (0,
                i.default)(this, e),
            this._state = t,
                this._restrictions = n.slice(),
                this._instructionOpcode = r,
                this._segmentPath = s.slice(),
                this._lanes = a
        }
        return (0,
                r.default)(e, [{
                key: "getRestrictions",
                value: function() {
                    return this._restrictions.slice()
                }
            }, {
                key: "getInstructionOpcode",
                value: function() {
                    return this._instructionOpcode
                }
            }, {
                key: "hasRestrictions",
                value: function() {
                    return this._restrictions && this._restrictions.length > 0
                }
            }, {
                key: "getLaneData",
                value: function() {
                    return this._lanes
                }
            }, {
                key: "hasLanes",
                value: function() {
                    return null != this.getLaneData()
                }
            }, {
                key: "hasInstructionOpcode",
                value: function() {
                    return null !== this._instructionOpcode
                }
            }, {
                key: "isDifficult",
                value: function() {
                    return this.getRestrictions().some(function(e) {
                        return e.isDifficult()
                    })
                }
            }, {
                key: "isSimplyDifficult",
                value: function() {
                    return this._restrictions.some(function(e) {
                        return e.isSimplyDifficult()
                    })
                }
            }, {
                key: "isTimeRestricted",
                value: function() {
                    return this.getRestrictions().some(function(e) {
                        return e.isTimeRestricted()
                    })
                }
            }, {
                key: "isDifficultTimeRestricted",
                value: function() {
                    return this._restrictions.some(function(e) {
                        return e.isDifficult() && e.isTimeRestricted()
                    })
                }
            }, {
                key: "isNonDifficultTimeRestricted",
                value: function() {
                    return this.getRestrictions().some(function(e) {
                        return !e.isDifficult() && e.isTimeRestricted()
                    })
                }
            }, {
                key: "withSimpleDifficulty",
                value: function(e) {
                    if (e !== this.isSimplyDifficult()) {
                        var t = this.getRestrictions();
                        return e ? t.push(new s.default({
                                defaultType: a.RESTRICTION_TYPE.DIFFICULT
                            })) : t = t.filter(function(e) {
                                return !e.isSimplyDifficult()
                            }),
                            this.withRestrictions(t)
                    }
                    return this
                }
            }, {
                key: "withoutDifficultRestrictions",
                value: function() {
                    var e = this.getRestrictions().filter(function(e) {
                        return !e.isDifficult()
                    });
                    return this.withRestrictions(e)
                }
            }, {
                key: "withState",
                value: function(t) {
                    return e.create(t, this._restrictions, this._instructionOpcode, this._segmentPath, this._lanes)
                }
            }, {
                key: "withRestrictions",
                value: function(t) {
                    return e.create(this._state, t, this._instructionOpcode, this._segmentPath, this._lanes)
                }
            }, {
                key: "withInstructionOpcode",
                value: function(t) {
                    return e.create(this._state, this._restrictions, t, this._segmentPath, this._lanes)
                }
            }, {
                key: "withLanes",
                value: function(t) {
                    return e.create(this._state, this._restrictions, this._instructionOpcode, this._segmentPath, t)
                }
            }, {
                key: "toString",
                value: function() {
                    return "" + this._state
                }
            }, {
                key: "isUnknown",
                value: function() {
                    return this._state === e.State.UNKNOWN
                }
            }, {
                key: "isAllowed",
                value: function() {
                    return this._state === e.State.ALLOWED
                }
            }, {
                key: "isDisallowed",
                value: function() {
                    return this._state === e.State.DISALLOWED
                }
            }, {
                key: "hasAdditionalData",
                value: function() {
                    return this.hasInstructionOpcode() || this.hasLanes() || this.hasRestrictions()
                }
            }, {
                key: "withToggledState",
                value: function(t) {
                    return t ? this.withState(e.State.ALLOWED) : this.withState(e.State.DISALLOWED)
                }
            }, {
                key: "hasSegmentPath",
                value: function() {
                    return this._segmentPath.length > 0
                }
            }, {
                key: "getSegmentPath",
                value: function() {
                    return this._segmentPath.slice()
                }
            }], [{
                key: "createAllowed",
                value: function() {
                    return e._ALLOWED_TURN
                }
            }, {
                key: "createDisallowed",
                value: function() {
                    return e._DISALLOWED_TURN
                }
            }, {
                key: "createUnknown",
                value: function() {
                    return e._UNKNOWN_TURN
                }
            }, {
                key: "create",
                value: function(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                    return 0 === n.length && null === i && 0 === r.length && null === s ? t === e.State.ALLOWED ? e._ALLOWED_TURN : e._DISALLOWED_TURN : new e(t, n, i, r, s)
                }
            }]),
            e
    }();
    l.State = {
            DISALLOWED: 0,
            ALLOWED: 1,
            UNKNOWN: 2
        },
        l._ALLOWED_TURN = new l(l.State.ALLOWED),
        l._DISALLOWED_TURN = new l(l.State.DISALLOWED),
        l._UNKNOWN_TURN = new l(l.State.UNKNOWN),
        t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(369)),
        s = d(n(2)),
        a = d(n(0)),
        o = d(n(1)),
        l = d(n(3)),
        u = d(n(4));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            street: null,
                            city: null,
                            state: null,
                            country: null,
                            houseNumber: null,
                            isEmpty: !1,
                            altStreets: []
                        }
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return this.attributes.isEmpty
                    }
                }, {
                    key: "getStreet",
                    value: function() {
                        return this.get("street")
                    }
                }, {
                    key: "getHouseNumber",
                    value: function() {
                        return this.get("houseNumber")
                    }
                }, {
                    key: "getStreetName",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).emptyString,
                            t = void 0 === e ? I18n.t("edit.address.no_street") : e,
                            n = this.getStreet();
                        return n && !n.isEmpty ? n.name : t
                    }
                }, {
                    key: "isEmptyStreet",
                    value: function() {
                        return Boolean(null != this.getStreet() && this.getStreet().isEmpty)
                    }
                }, {
                    key: "getCity",
                    value: function() {
                        return this.get("city")
                    }
                }, {
                    key: "getCityName",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).emptyString,
                            t = void 0 === e ? I18n.t("edit.address.no_city") : e,
                            n = this.getCity();
                        return null == n || n.isEmpty() ? t : n.attributes.name
                    }
                }, {
                    key: "hasState",
                    value: function() {
                        var e = this.getState();
                        return null != e && e.model.hasStates() && !e.isDefault
                    }
                }, {
                    key: "getState",
                    value: function() {
                        return this.get("state")
                    }
                }, {
                    key: "getStateName",
                    value: function() {
                        var e = this.getState();
                        return this.hasState() ? e.name : null
                    }
                }, {
                    key: "getCountry",
                    value: function() {
                        return this.get("country")
                    }
                }, {
                    key: "getCountryName",
                    value: function() {
                        var e = this.getCountry();
                        return null != e && e.name
                    }
                }, {
                    key: "format",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).formatStreet,
                            t = void 0 === e || e;
                        if (this.isEmpty())
                            return I18n.t("edit.landmark.no_address");
                        var n = _.compact([t ? this.getStreetName() : null, this.getCityName(), this.hasState() ? this.getStateName() : this.getCountryName()]).join(", "),
                            i = this.get("houseNumber");
                        return null != i && (n = i + " " + n),
                            n
                    }
                }, {
                    key: "setSelected",
                    value: function(e) {
                        var t = this.attributes,
                            n = t.street,
                            i = t.city,
                            r = t.state,
                            s = t.country,
                            a = t.altStreets;
                        n && n.setSelected(e),
                            i && i.setSelected(e),
                            r && r.setSelected(e),
                            s && s.setSelected(e),
                            a && a.forEach(function(t) {
                                t && t.setSelected(e)
                            })
                    }
                }]),
                t
        }(d(n(858)).default),
        h = new c({
            isEmpty: !0
        });
    c.CITY_NAME_PATTERN = "^\\S.*",
        c.fromStreetID = function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                s = t.streets.getObjectById(e);
            if (null == s)
                return h;
            var a = n.altStreets,
                o = (0,
                    r.default)(n, ["altStreets"]);
            return a && (n.altStreets = a.map(function(e) {
                    return c.fromStreetID(e, t, o)
                })),
                c.fromCityID(s.cityID, t, (0,
                    i.default)({}, n, {
                    street: s
                }))
        },
        c.fromCityID = function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                r = t.cities.getObjectById(e),
                s = void 0,
                a = void 0;
            return r && (s = t.states.getObjectById(r.attributes.stateID)),
                s && (a = t.countries.getObjectById(r.attributes.countryID)),
                [r, s, a].some(function(e) {
                    return null == e
                }) ? h : new c((0,
                    i.default)({}, n, {
                    city: r,
                    state: s,
                    country: a
                }))
        },
        t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    for (var i = W.Config.venues.categories, r = _.object(i, i), s = [], a = 0; a < i.length; a++) {
        var o = i[a];
        s.push({
            id: o
        });
        for (var l = 0; l < W.Config.venues.subcategories[o].length; l++) {
            var u = W.Config.venues.subcategories[o][l];
            s.push({
                id: u
            })
        }
    }
    t.GAS_STATION = "GAS_STATION",
        t.PARKING_LOT = "PARKING_LOT",
        t.mainCategories = i,
        t.mainCategoryMap = r,
        t.allCategories = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(20)),
        u = d(n(17));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e, n, s, o) {
            (0,
                r.default)(this, t);
            var l = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, o));
            return l.attributes = null,
                null === e ? (l.object = new u.default(s),
                    l.attributes = s) : (l.object = e,
                    l.attributes = _.extend({}, l.object.getAttributes())),
                l.object.writableAttributes && (l.attributes = _.pick(l.attributes, l.object.writableAttributes)),
                l.repository = n,
                l
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.object]
                }
            }, {
                key: "doAction",
                value: function() {
                    return this.object.setID(this.repository.generateUniqueID()),
                        this.object.version = 1,
                        this.object.state = OL.State.INSERT,
                        this.repository.put(this.object),
                        !0
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.repository.remove(this.object)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.repository.put(this.object)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = _.extend({}, this.attributes);
                    return e.id = this.object.getID(), {
                        _objectType: this.object.type,
                        action: l.default.TYPE.ADD,
                        attributes: e
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.object.getUniqueID()]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = I18n.t("objects." + this.object.type + ".name");
                    this._description = I18n.t("save.changes_log.actions.CreateObject", {
                        type: e
                    })
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(9)),
        r = g(n(2)),
        s = g(n(0)),
        a = g(n(1)),
        o = g(n(3)),
        l = g(n(8)),
        u = g(n(4)),
        d = g(n(20)),
        c = g(n(11)),
        h = g(n(108)),
        f = n(14),
        p = n(40);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                s.default)(this, t);
            var i = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n)),
                a = n.hide,
                l = void 0 !== a && a,
                u = n.userInitiated,
                d = void 0 !== u && u;
            return i.segment = e,
                i.hideSegment = l,
                i.userInitiated = d,
                i.origState = null,
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment]
                }
            }, {
                key: "doAction",
                value: function() {
                    var e = this;
                    this.segment.getID(),
                        this.origState = this.segment.state,
                        ["fromNodeID", "toNodeID"].forEach(function(e) {
                            if (this.segment.attributes[e]) {
                                var t = this.model.nodes.getObjectById(this.segment.attributes[e]);
                                t && t.isConnectedToSegment(this.segment) && this.doSubAction(new h.default(this.segment, t, {
                                    deleteNode: this.deleteNode,
                                    dontSerialize: !0
                                }))
                            }
                        }, this),
                        this.segment.attributes.virtualNodeIDs.forEach(function(t) {
                            var n = e.model.nodes.getObjectById(t);
                            e.doSubAction(new h.default(e.segment, n, {
                                dontSerialize: !0
                            }))
                        }),
                        this.hideSegment && (this.segment.hidden || (this.hidSegment = !0),
                            this.segment.hidden = !0),
                        this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                            this.model.segments.changed(this.segment)),
                        this.userInitiated && this.model.loginManager.user.incrementDeleteSegmentCount()
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.segment.getID(),
                        this.userInitiated && this.model.loginManager.user.decrementDeleteSegmentCount(),
                        this.segment.state = this.origState,
                        this.hidSegment && delete this.segment.hidden,
                        this.segment.state === OpenLayers.State.INSERT ? this.model.segments.put(this.segment) : this.model.segments.changed(this.segment),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this)
                }
            }, {
                key: "redoAction",
                value: function() {
                    (0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "redoAction", this).call(this),
                        this.hidSegment && (this.segment.hidden = !0),
                        this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                            this.model.segments.changed(this.segment)),
                        this.userInitiated && this.model.loginManager.user.incrementDeleteSegmentCount()
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: f.SEGMENT,
                        action: d.default.TYPE.DELETE,
                        attributes: {
                            id: this.segment.getID()
                        }
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.segment.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = (0,
                        p.formatActionAddressDescription)(this.segment, "DeleteSegment")
                }
            }]),
            t
    }(c.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DIRECTION = void 0;
    var i, r = n(16),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = {
            A_TO_B: 1,
            B_TO_A: 2,
            TWO_WAY: 3
        },
        o = ["startDate", "endDate", "reason", "location", "permanent", "createdBy", "eventId"],
        l = /^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}$/,
        u = Backbone.Model.extend({
            defaults: function() {
                return {
                    startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                    endDate: (new Date).toString("yyyy-MM-dd 23:59"),
                    reason: null,
                    location: null,
                    permanent: !1,
                    eventId: null,
                    direction: a.A_TO_B,
                    createdBy: null,
                    segments: [],
                    closures: [],
                    reverseSegments: {}
                }
            },
            initialize: function() {
                var e = this.get("closures");
                if (e && e.length > 0) {
                    var t = e[0];
                    this._setFromSingleClosure(t)
                }
                var n = this.get("segments");
                null != n && (n = _(n).sortBy(function(e) {
                            return e.getID()
                        }),
                        this.set({
                            segments: n
                        })),
                    this._originalAttribs = this.toJSON()
            },
            _setFromSingleClosure: function(e) {
                for (var t = 0; t < o.length; t++) {
                    var n = o[t];
                    this.set(n, e[n])
                }
                return this.set({
                    direction: this._getDirectionFromClosure(e)
                })
            },
            _getDirectionFromClosure: function(e) {
                var t = e.forward;
                return this.isReverse(e.segID) && (t = !t),
                    t ? a.A_TO_B : a.B_TO_A
            },
            original: function(e) {
                return this._originalAttribs[e]
            },
            differsFromOriginal: function(e) {
                return this.get(e) !== this.original(e)
            },
            hasChanged: function() {
                var e = this;
                return o.some(function(t) {
                    return e.differsFromOriginal(t)
                })
            },
            isOppositeToOriginal: function() {
                var e = this.original("direction"),
                    t = this.get("direction");
                return this._areOpposites(e, t)
            },
            isOppositeTo: function(e) {
                var t = e.get("direction"),
                    n = this.get("direction");
                return this._areOpposites(n, t) && this._hasSameAttributes(e) && this._hasSameSegmentIDs(e)
            },
            _hasSameAttributes: function(e) {
                var t = this;
                return o.every(function(n) {
                    return t.get(n) === e.get(n)
                })
            },
            _hasSameSegmentIDs: function(e) {
                return _.isEqual(this.getSegIDs(), e.getSegIDs())
            },
            _areOpposites: function(e, t) {
                return e === a.A_TO_B && t === a.B_TO_A || e === a.B_TO_A && t === a.A_TO_B
            },
            getSegIDs: function() {
                return _(this.get("segments")).invoke("getID")
            },
            findSegmentByID: function(e) {
                for (var t = this.get("segments"), n = 0; n < t.length; n++) {
                    var i = t[n];
                    if (i.getID() === e)
                        return i
                }
                return null
            },
            mergeWithOpposite: function(e) {
                this.set({
                        direction: a.TWO_WAY
                    }),
                    this._originalAttribs.direction = a.TWO_WAY;
                var t = this.get("closures").concat(e.get("closures"));
                return this.set({
                    closures: t
                })
            },
            isReverse: function(e) {
                return !0 === this.get("reverseSegments")[e]
            },
            saveSimpleFieldsToClosure: function(e) {
                var t = this;
                return o.map(function(n) {
                    return e[n] = t.get(n)
                })
            },
            validate: function() {
                return this.errors = {},
                    this._validateField("startDate", {
                        required: !1,
                        date: !0,
                        futureDate: !1
                    }),
                    this._validateField("endDate", {
                        required: !0,
                        date: !0,
                        futureDate: !0
                    }),
                    this._validateDateRange(),
                    _.isEmpty(this.errors)
            },
            isPresent: function(e) {
                return !s.default.isBlank(this.get(e))
            },
            _validateField: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (!t.required || this.isPresent(e)) {
                    if (this.isPresent(e)) {
                        var n = this.get(e);
                        if (null != t.pattern && !t.pattern.test(n))
                            return void(this.errors[e] = "invalid");
                        if (t.date && !this._isValidDate(n))
                            return void(this.errors[e] = "invalid-date");
                        if (t.futureDate)
                            Date.parse(n).isBefore(1..days().ago()) && (this.errors[e] = "in-past")
                    }
                } else
                    this.errors[e] = "required"
            },
            _isValidDate: function(e) {
                return l.test(e) && null != Date.parse(e)
            },
            _validateDateRange: function() {
                if (null == this.errors.startDate && null == this.errors.endDate) {
                    var e = Date.parse(this.get("startDate"));
                    Date.parse(this.get("endDate")).isAfter(e) || (this.errors.endDate = "before-start-date")
                }
            },
            calculateForwardValuesForSegment: function(e) {
                var t = this.get("direction"),
                    n = this.isReverse(e);
                return t === a.TWO_WAY ? [!0, !1] : t === a.A_TO_B ? [!n] : [n]
            },
            isEndDateSet: function() {
                return null !== this.get("endDate")
            },
            isStartDateSet: function() {
                return null !== this.get("startDate")
            }
        });
    t.default = u,
        t.DIRECTION = a
}, function(e, t, n) {
    e.exports = n.p + "img/select2-spinner7b9776076d5fceef4993b55c9383dedd.gif"
}, function(e, t, n) {
    "use strict";
    var i = n(49),
        r = n(21),
        s = n(113),
        a = n(35),
        o = n(51),
        l = n(166),
        u = n(58),
        d = n(131),
        c = n(23)("iterator"),
        h = !([].keys && "next" in [].keys()),
        f = function() {
            return this
        };
    e.exports = function(e, t, n, p, g, v, m) {
        l(n, t, p);
        var _, y, b, w = function(e) {
                if (!h && e in S)
                    return S[e];
                switch (e) {
                    case "keys":
                    case "values":
                        return function() {
                            return new n(this, e)
                        }
                }
                return function() {
                    return new n(this, e)
                }
            },
            k = t + " Iterator",
            E = "values" == g,
            M = !1,
            S = e.prototype,
            T = S[c] || S["@@iterator"] || g && S[g],
            I = T || w(g),
            C = g ? E ? w("entries") : I : void 0,
            A = "Array" == t && S.entries || T;
        if (A && (b = d(A.call(new e))) !== Object.prototype && b.next && (u(b, k, !0),
                i || "function" == typeof b[c] || a(b, c, f)),
            E && T && "values" !== T.name && (M = !0,
                I = function() {
                    return T.call(this)
                }
            ),
            i && !m || !h && !M && S[c] || a(S, c, I),
            o[t] = I,
            o[k] = f,
            g)
            if (_ = {
                    values: E ? I : w("values"),
                    keys: v ? I : w("keys"),
                    entries: C
                },
                m)
                for (y in _)
                    y in S || s(S, y, _[y]);
            else
                r(r.P + r.F * (h || M), t, _);
        return _
    }
}, function(e, t, n) {
    var i = n(26),
        r = n(18).document,
        s = i(r) && i(r.createElement);
    e.exports = function(e) {
        return s ? r.createElement(e) : {}
    }
}, function(e, t, n) {
    var i = n(76),
        r = Math.min;
    e.exports = function(e) {
        return e > 0 ? r(i(e), 9007199254740991) : 0
    }
}, function(e, t, n) {
    var i = n(57)("meta"),
        r = n(26),
        s = n(36),
        a = n(27).f,
        o = 0,
        l = Object.isExtensible || function() {
            return !0
        },
        u = !n(39)(function() {
            return l(Object.preventExtensions({}))
        }),
        d = function(e) {
            a(e, i, {
                value: {
                    i: "O" + ++o,
                    w: {}
                }
            })
        },
        c = e.exports = {
            KEY: i,
            NEED: !1,
            fastKey: function(e, t) {
                if (!r(e))
                    return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                if (!s(e, i)) {
                    if (!l(e))
                        return "F";
                    if (!t)
                        return "E";
                    d(e)
                }
                return e[i].i
            },
            getWeak: function(e, t) {
                if (!s(e, i)) {
                    if (!l(e))
                        return !0;
                    if (!t)
                        return !1;
                    d(e)
                }
                return e[i].w
            },
            onFreeze: function(e) {
                return u && c.NEED && l(e) && !s(e, i) && d(e),
                    e
            }
        }
}, function(e, t, n) {
    var i = n(114),
        r = n(81).concat("length", "prototype");
    t.f = Object.getOwnPropertyNames || function(e) {
        return i(e, r)
    }
}, function(e, t, n) {
    var i = n(59),
        r = n(50),
        s = n(33),
        a = n(78),
        o = n(36),
        l = n(112),
        u = Object.getOwnPropertyDescriptor;
    t.f = n(29) ? u : function(e, t) {
        if (e = s(e),
            t = a(t, !0),
            l)
            try {
                return u(e, t)
            } catch (e) {}
        if (o(e, t))
            return r(!i.f.call(e, t), e[t])
    }
}, function(e, t) {}, , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            (0,
                s.default)(this, t);
            var e = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return e.normalizedLevel = e.NormalizedLevels[e.rank],
                e
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "isStaffUser",
                value: function() {
                    return this.rank >= this.StaffRank
                }
            }]),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        NormalizedLevels: {
            0: 1,
            1: 2,
            2: 3,
            3: 4,
            4: 5,
            5: 6,
            6: 6
        },
        MinLevel: 0,
        MaxLevel: 5,
        StaffRank: 6,
        CLASS_NAME: "Waze.Feature.Vector.User"
    }),
    d.normalizeLevel = function(e) {
            return d.prototype.NormalizedLevels[e]
        },
        t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(19)),
        r = d(n(371)),
        s = d(n(191)),
        a = d(n(861)),
        o = d(n(862)),
        l = d(n(103)),
        u = d(n(863));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = Backbone.Model.extend({
        MORE_INFO_DEFAULTS: [{
            name: "averageSession",
            visible: !0
        }, {
            name: "allSessions",
            visible: !1
        }],
        _moreInfoTypes: null,
        _moreInfoTypeMap: null,
        constructor: function(e) {
            return this.problem = e,
                Backbone.Model.apply(this)
        },
        setState: function(e) {
            var t = {};
            t.open = e === r.default.OPEN,
                t.resolution = function() {
                    switch (e) {
                        case r.default.SOLVED:
                            return s.default.FIXED;
                        case r.default.NOT_IDENTIFIED:
                            return s.default.NOT_A_PROBLEM;
                        case r.default.OPEN:
                            return null
                    }
                }(),
                this.problem.model.actionManager.add(new u.default(this.problem, t))
        },
        getState: function() {
            var e = this;
            return this.problem.attributes.open ? r.default.OPEN : function() {
                switch (e.problem.attributes.resolution) {
                    case s.default.FIXED:
                        return r.default.SOLVED;
                    case s.default.NOT_A_PROBLEM:
                        return r.default.NOT_IDENTIFIED;
                    case s.default.AUTO:
                        return r.default.CLOSED_AUTOMATICALLY
                }
            }()
        },
        reportStateChanged: function() {
            var e = this.problem.attributes.problemType;
            null != this.problem.attributes.subType && (e += "_" + this.problem.attributes.subType),
                this.getState() === r.default.SOLVED ? W.Report.mapProblemAction("update_state", e, 1) : this.getState() === r.default.NOT_IDENTIFIED && W.Report.mapProblemAction("update_state", e, -1)
        },
        getTitle: function() {
            return I18n.t("problems.types." + this.problem.attributes.subType + ".title")
        },
        getReportedString: function() {
            return I18n.t("problems.panel.auto_detected")
        },
        hasDescription: function() {
            return !0
        },
        getDescription: function() {
            return I18n.t("problems.types." + this.problem.attributes.subType + ".description")
        },
        getDescriptionTemplate: function() {
            return null
        },
        isConversationAvailable: function() {
            return !1
        },
        getMoreInfoTypes: function() {
            var e = this;
            return null !== this._moreInfoTypes ? this._moreInfoTypes : (this._moreInfoTypeMap = {},
                this._moreInfoTypes = this.MORE_INFO_DEFAULTS.map(function(t) {
                    var n = new o.default({
                        name: t.name,
                        visible: t.visible
                    });
                    return e._moreInfoTypeMap[t.name] = n,
                        n
                }),
                this._moreInfoTypes)
        },
        getMoreInfo: function() {
            var e = this;
            return this.moreInfo ? i.default.resolve(this.moreInfo) : this.problem.getSessions().then(function(t) {
                return e._moreInfoTypeMap.averageSession.set({
                        available: t[0].average && t.average.geometry
                    }),
                    e._moreInfoTypeMap.allSessions.set({
                        available: t[0].sessions && t.sessions.length > 0
                    }),
                    e.moreInfo = t
            })
        },
        isMoreInfoAvailable: function() {
            return _.some(this.getMoreInfoTypes(), function(e) {
                return e.get("available")
            })
        },
        getSeverity: function() {
            return this.problem.attributes.severity
        },
        getRepository: function() {
            return this.problem.model.problems
        },
        createMoreInfoRenderer: function(e, t, n) {
            return new a.default(e, t, n)
        },
        getMarkerLayer: function() {
            return W.map.problemLayer
        },
        isEditable: function() {
            return this.problem.canEdit()
        },
        rankAllowsEdit: function() {
            return W.loginManager.getUserRank() >= this.minRankForEdit()
        },
        minRankForEdit: function() {
            return 0
        },
        minLevelForEdit: function() {
            return l.default.normalizeLevel(this.minRankForEdit())
        },
        getBounds: function() {
            return this.problem.getDisconnectBounds()
        },
        getGeometry: function() {
            return this.problem.geometry.clone()
        },
        getOpenStateString: function() {
            return I18n.t("problems.panel.states.open")
        },
        getSolvedStateString: function() {
            return I18n.t("problems.panel.states.solved")
        },
        getNotIdentifiedStateString: function() {
            return I18n.t("problems.panel.states.not_identified")
        },
        getNextButtonString: function() {
            return this._nextButtonString || I18n.t("problems.panel.next")
        },
        setNextButtonString: function(e) {
            this._nextButtonString = e
        }
    });
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        getUrl: function(e) {
            return this.getUrlById(e, this.id)
        },
        getUrlById: function(e, t) {
            return e === i.SIZE.ORIGINAL ? W.Config.venues.image_bucket_url + t : W.Config.venues.image_bucket_url + "thumbs/thumb" + e + "_" + t
        }
    });
    i.SIZE = {
            ORIGINAL: 0,
            SMALL: 32,
            MEDIUM: 100,
            WEB: 347,
            MOBILE: 700,
            BIG: 700
        },
        t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(20));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n, s, o, l) {
            (0,
                r.default)(this, t);
            var u = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, l));
            return u.feature = e,
                u.repo = n,
                u.oldGeometry = s,
                u.newGeometry = o,
                u.changedState = !1,
                u
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    this.feature.type,
                        this.feature.getID(),
                        this.replaceGeometry(this.newGeometry.clone()),
                        this.feature.state || (this.changedState = !0,
                            this.feature.state = OpenLayers.State.UPDATE),
                        this.repo.changed(this.feature)
                }
            }, {
                key: "replaceGeometry",
                value: function(e) {
                    e !== this.feature.geometry && (e.id = this.feature.geometry.id,
                        this.feature.geometry = e,
                        this.feature.bounds = this.feature.geometry.bounds)
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.changedState && (this.feature.state = null),
                        this.replaceGeometry(this.oldGeometry.clone()),
                        this.repo.changed(this.feature)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.replaceGeometry(this.newGeometry.clone()),
                        this.changedState && (this.feature.state = OpenLayers.State.UPDATE),
                        this.repo.changed(this.feature)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = {};
                    return e.id = this.feature.getID(),
                        e.geometry = this.newGeometry, {
                            _objectType: this.feature.type,
                            action: l.default.TYPE.UPDATE,
                            attributes: e
                        }
                }
            }, {
                key: "getBounds",
                value: function() {
                    return this.newGeometry.getBounds().clone()
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.feature.getUniqueID()]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = I18n.t("objects." + this.feature.type + ".name");
                    this._description = I18n.t("save.changes_log.actions.UpdateFeatureGeometry", {
                        objectType: e
                    })
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.feature]
                }
            }]),
            t
    }(l.default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = E(n(10)),
        r = E(n(2)),
        s = E(n(0)),
        a = E(n(1)),
        o = E(n(3)),
        l = E(n(4)),
        u = E(n(73)),
        d = E(n(92)),
        c = E(n(11)),
        h = E(n(151)),
        f = E(n(13)),
        p = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        g = E(n(1068)),
        v = E(n(41)),
        m = E(n(88)),
        y = E(n(190)),
        b = E(n(34)),
        w = E(n(124)),
        k = n(40);

    function E(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var M = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                s.default)(this, t);
            var i = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, n)),
                a = n.splits,
                l = void 0 === a ? null : a,
                u = n.splitNode,
                d = void 0 === u ? null : u,
                c = n.splitAtPoint,
                h = void 0 === c ? null : c,
                f = n.splittingPointDistance,
                p = void 0 === f ? null : f,
                g = n.splittingPointIndex,
                v = void 0 === g ? null : g,
                m = n.splitWithSegment,
                _ = void 0 === m ? null : m;
            return i.splits = l,
                i.splitNode = d,
                i.splitAtPoint = h,
                i.splittingPointDistance = p,
                i.splittingPointIndex = v,
                i.splitWithSegment = _,
                i.segment = e,
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "_splitSegment",
                value: function(e) {
                    this.segment.getID(),
                        e.length;
                    var t = this.model.nodes.getObjectById(this.segment.attributes.fromNodeID),
                        n = this.model.nodes.getObjectById(this.segment.attributes.toNodeID),
                        i = this.addSplitNode();
                    this._createSegments(i),
                        this.connectSegmentsToSplitNode(),
                        this.connectSplitToNode(this.splits[0], t),
                        this.connectSplitToNode(_.last(this.splits), n),
                        this.connectParts(),
                        this.doSubAction(new g.default(this.segment.getID(), _.last(this.splits).getID(), this.splits[0].getID()), {
                            dontSerialize: !0
                        }),
                        this.doSubAction(new d.default(this.segment, {
                            hide: !0
                        }))
                }
            }, {
                key: "connectParts",
                value: function() {
                    if (this.segment.isDrivable()) {
                        var e = this.splits[0],
                            t = _.last(this.splits);
                        if (this.splitNode.isTurnAllowedBySegDirections(e, t)) {
                            var n = new y.default(b.default.forwardOf(e.getID()), b.default.forwardOf(t.getID()), m.default.createAllowed());
                            this.doSubAction(new v.default(this.model.getTurnGraph(), n))
                        }
                        if (this.splitNode.isTurnAllowedBySegDirections(t, e)) {
                            var i = new y.default(b.default.reverseOf(t.getID()), b.default.reverseOf(e.getID()), m.default.createAllowed());
                            this.doSubAction(new v.default(this.model.getTurnGraph(), i))
                        }
                    }
                }
            }, {
                key: "_setVirtualNodes",
                value: function(e, t, n) {
                    var r = this,
                        s = this._getSplitEdge(n.geometry),
                        a = this.segment.attributes.virtualNodeIDs,
                        o = _.partition(a, function(e) {
                            var t = r.model.nodes.getObjectById(e);
                            return r._getSplitEdge(t.geometry) < s
                        }),
                        l = (0,
                            i.default)(o, 2),
                        u = l[0],
                        d = l[1];
                    e.attributes.virtualNodeIDs = u,
                        t.attributes.virtualNodeIDs = d
                }
            }, {
                key: "_setLanesAttributes",
                value: function(e, t) {
                    e.attributes.fwdLaneCount = 0,
                        e.attributes.revLaneCount = this.segment.attributes.revLaneCount,
                        t.attributes.fwdLaneCount = this.segment.attributes.fwdLaneCount,
                        t.attributes.revLaneCount = 0
                }
            }, {
                key: "_createSegments",
                value: function(e) {
                    var t = this.segment.attributes.origID || this.segment.getID() || null,
                        n = this.segment.attributes,
                        i = this.splits[0],
                        r = this.splits[1];
                    i.attributes.toNodeID = e.getID(),
                        i.attributes.fromNodeID = n.fromNodeID,
                        r.attributes.toNodeID = n.toNodeID,
                        r.attributes.fromNodeID = e.getID(),
                        this._setVirtualNodes(i, r, e),
                        this._setLanesAttributes(i, r),
                        this.splits.forEach(function(e) {
                            e.attributes.fwdDirection = n.fwdDirection,
                                e.attributes.revDirection = n.revDirection,
                                e.attributes.fwdToll = n.fwdToll,
                                e.attributes.revToll = n.revToll,
                                e.attributes.origIDs = [t],
                                e.setID(null),
                                this.doSubAction(new w.default(e))
                        }, this)
                }
            }, {
                key: "addSplitNode",
                value: function() {
                    var e = void 0,
                        t = void 0;
                    return this.splitNode || (e = _.last(this.splits[0].geometry.components),
                            e = new OpenLayers.Geometry.Point(e.x, e.y),
                            t = new h.default(e, []),
                            this.doSubAction(t),
                            this.splitNode = t.node),
                        this.splitNode
                }
            }, {
                key: "connectSegmentsToSplitNode",
                value: function() {
                    this.splitWithSegment && this.doSubAction(new u.default(this.splitNode, this.splitWithSegment)),
                        this.splits.forEach(function(e) {
                            this.doSubAction(new u.default(this.splitNode, e, {
                                dontSerialize: !0
                            }))
                        }, this)
                }
            }, {
                key: "connectSplitToNode",
                value: function(e, t) {
                    t && this.doSubAction(new u.default(t, e, {
                        dontSerialize: !0
                    }))
                }
            }, {
                key: "doAction",
                value: function() {
                    return !(this.splitAtPoint && !this.createSplitsFromPoint(this.splitAtPoint)) && (!!this.splits && (!this.hasSingularParts() && void this._splitSegment(this.splits)))
                }
            }, {
                key: "hasSingularParts",
                value: function() {
                    var e = this.model.distanceCache.getValue(this.segment.geometry.getVertices(!0)[0]);
                    return this.splits.some(function(t) {
                        return t.geometry.getLength() < e
                    }, this)
                }
            }, {
                key: "createSplitsFromPoint",
                value: function(e) {
                    var t = void 0;
                    if (p.defined(this.splittingPointIndex))
                        t = this.splittingPointIndex;
                    else if (-1 === (t = this._getSplitEdge(e)))
                        return !1;
                    var n = this.segment.geometry.getVertices().map(function(e) {
                            return new OpenLayers.Geometry.Point(e.x, e.y)
                        }),
                        i = new OpenLayers.Geometry.LineString(n.slice(0, t + 1));
                    _.last(i.components).equals(e) || i.components.push(e.clone());
                    var r = new OpenLayers.Geometry.LineString(n.slice(t + 1));
                    return r.components[0].equals(e) || r.components.unshift(e.clone()),
                        this.splits = [i, r].map(function(e) {
                            return this.createSplitSegmentPart(this.segment, e)
                        }, this),
                        !0
                }
            }, {
                key: "_getSplitEdge",
                value: function(e) {
                    var t = this.segment.geometry.getVertices();
                    return f.default.getPointEdge(t, e, this.splittingPointDistance)
                }
            }, {
                key: "createSplitSegmentPart",
                value: function(e, t) {
                    var n = e.clone();
                    return delete n.geometry,
                        n.geometry = t,
                        n
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return this.splits
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = (0,
                        k.formatActionAddressDescription)(this.segment, "SplitSegments")
                }
            }]),
            t
    }(c.default);
    t.default = M,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(2)),
        r = p(n(0)),
        s = p(n(1)),
        a = p(n(3)),
        o = p(n(4)),
        l = p(n(11)),
        u = p(n(22)),
        d = p(n(396)),
        c = p(n(41)),
        h = p(n(34)),
        f = n(40);

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
        function t(e, n) {
            var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                r.default)(this, t);
            var o = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, s)),
                l = s.deleteNode,
                u = void 0 === l || l,
                d = s.keepTurns,
                c = void 0 !== d && d;
            return o.deleteNode = u,
                o.keepTurns = c,
                o.segment = e,
                o.node = n,
                o.vertex = h.default.for(o.segment, o.node),
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment, this.node]
                }
            }, {
                key: "doAction",
                value: function() {
                    var e = this,
                        n = {};
                    if (this.segment.isVirtuallyConnectedToNode(this.node)) {
                        var i = this.segment.attributes.virtualNodeIDs.filter(function(t) {
                            return t !== e.node.getID()
                        });
                        n.virtualNodeIDs = i
                    } else {
                        var r = this.segment.getTurnsLockAttribute(this.node),
                            s = this.segment.getNodeAttribute(this.node);
                        if (!s)
                            return !1;
                        n[r] = !1,
                            n[s + "NodeID"] = null,
                            this._updateTurns()
                    }
                    var a = this.node.attributes.segIDs.filter(function(t) {
                        return t !== e.segment.getID()
                    });
                    if (this.segment.getID(),
                        this.node.getID(),
                        this.doSubAction(new u.default(this.segment, n)),
                        this.doSubAction(new u.default(this.node, {
                            segIDs: a
                        })),
                        this.node.isVirtual() && 1 === this.node.attributes.segIDs.length) {
                        var o = this.model.segments.getObjectById(this.node.attributes.segIDs[0]);
                        this.doSubAction(new t(o, this.node))
                    }
                    return this.node.isDisconnected() && this.deleteNode && this.doSubAction(new d.default(this.node)),
                        !0
                }
            }, {
                key: "_updateTurns",
                value: function() {
                    var e = this,
                        t = this.model.getTurnGraph();
                    return this.keepTurns || (t.getTurnsFrom(this.vertex).forEach(function(n) {
                                return e.doSubAction(new c.default(t, n.withUnknownTurnData()))
                            }),
                            t.getTurnsTo(this.vertex.getOpposite()).forEach(function(n) {
                                return e.doSubAction(new c.default(t, n.withUnknownTurnData()))
                            })),
                        !0
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = (0,
                        f.formatActionAddressDescription)(this.segment, "DisconnectSegment")
                }
            }]),
            t
    }(l.default);
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.CHANGE_EVENT = void 0;
    var i = h(n(7)),
        r = h(n(120)),
        s = h(n(0)),
        a = h(n(1)),
        o = h(n(190)),
        l = h(n(88)),
        u = h(n(201)),
        d = h(n(34)),
        c = h(n(188));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function() {
        function e(t) {
            (0,
                s.default)(this, e),
            this._roadGraph = t,
                this._adjacencyList = new r.default,
                this._reverseAdjacencyList = new r.default
        }
        return (0,
                a.default)(e, [{
                key: "getTurn",
                value: function(e, t) {
                    var n = null,
                        i = this._adjacencyList.get(e.getID());
                    return i && (n = i[t.getID()]),
                        n || (n = l.default.createUnknown()),
                        new o.default(e, t, n)
                }
            }, {
                key: "_putTurnInList",
                value: function(e, t, n, i) {
                    var r = e.get(t);
                    r || (r = {},
                            e.set(t, r)),
                        r[n] = i
                }
            }, {
                key: "_removeTurnFromList",
                value: function(e, t, n) {
                    var r = e.get(t);
                    r && (delete r[n],
                        0 === (0,
                            i.default)(r).length && e.delete(t))
                }
            }, {
                key: "putTurn",
                value: function(e) {
                    var t = e.getTurnData();
                    null === t || t.isUnknown() ? this._deleteTurn(e) : (this._putTurnInList(this._adjacencyList, e.getFromVertex().getID(), e.getToVertex().getID(), t),
                        this._putTurnInList(this._reverseAdjacencyList, e.getToVertex().getID(), e.getFromVertex().getID(), t),
                        this.trigger("change", e))
                }
            }, {
                key: "_deleteTurn",
                value: function(e) {
                    this._removeTurnFromList(this._adjacencyList, e.getFromVertex().getID(), e.getToVertex().getID()),
                        this._removeTurnFromList(this._reverseAdjacencyList, e.getToVertex().getID(), e.getFromVertex().getID()),
                        this.trigger("change", e)
                }
            }, {
                key: "getTurnThroughNode",
                value: function(e, t, n) {
                    var i = d.default.for(t, e),
                        r = d.default.for(n, e).getOpposite();
                    return this.getTurn(i, r)
                }
            }, {
                key: "_getVerticesForPrimaryIndex",
                value: function(e, t) {
                    var n = e.get(t);
                    return n ? (0,
                        i.default)(n).map(function(e) {
                        return d.default.fromID(e)
                    }) : []
                }
            }, {
                key: "getTurnsFrom",
                value: function(e) {
                    var t = this;
                    return this._getVerticesForPrimaryIndex(this._adjacencyList, e.getID()).map(function(n) {
                        return t.getTurn(e, n)
                    }).filter(function(e) {
                        return !e.getTurnData().isUnknown()
                    })
                }
            }, {
                key: "getLegalTrivialTurnsFrom",
                value: function(e) {
                    var t = this;
                    return this._roadGraph.getConnectedVertices(e).filter(function(n) {
                        return t._roadGraph.isTurnLegal(e, n)
                    }).map(function(n) {
                        return t.getTurn(e, n)
                    })
                }
            }, {
                key: "getTurnsTo",
                value: function(e) {
                    var t = this;
                    return this._getVerticesForPrimaryIndex(this._reverseAdjacencyList, e.getID()).map(function(n) {
                        return t.getTurn(n, e)
                    }).filter(function(e) {
                        return !e.getTurnData().isUnknown()
                    })
                }
            }, {
                key: "clear",
                value: function() {
                    this._adjacencyList.clear(),
                        this._reverseAdjacencyList.clear()
                }
            }, {
                key: "_parseDescartesLanes",
                value: function(e, t) {
                    if (null != t.lanes) {
                        var n = new u.default(t.lanes.fromLaneIndex, t.lanes.toLaneIndex, t.lanes.laneArrowAngle);
                        return e.withLanes(n)
                    }
                    return e
                }
            }, {
                key: "_parseDescartesTurnData",
                value: function(e) {
                    var t = void 0;
                    if ("boolean" == typeof e)
                        t = e ? l.default.createAllowed() : l.default.createDisallowed();
                    else {
                        var n = void 0;
                        n = e.navigable ? l.default.State.ALLOWED : l.default.State.DISALLOWED;
                        var i = e.restrictions.map(function(e) {
                            return new c.default(e)
                        });
                        t = l.default.create(n, i, e.instructionOpCode, e.segmentPath),
                            t = this._parseDescartesLanes(t, e)
                    }
                    return t
                }
            }, {
                key: "fromDescartes",
                value: function(e) {
                    var t = this;
                    (0,
                        i.default)(e).forEach(function(n) {
                            (0,
                                i.default)(e[n]).forEach(function(i) {
                                var r = t._parseDescartesTurnData(e[n][i]);
                                t._putTurnInList(t._adjacencyList, n, i, r),
                                    t._putTurnInList(t._reverseAdjacencyList, i, n, r)
                            })
                        }),
                        this.trigger("change")
                }
            }, {
                key: "_removeVertexFromList",
                value: function(e, t) {
                    e.forEach(function(e, n) {
                            delete e[t]
                        }),
                        e.delete(t)
                }
            }, {
                key: "_removeVertex",
                value: function(e) {
                    this._removeVertexFromList(this._adjacencyList, e.getID()),
                        this._removeVertexFromList(this._reverseAdjacencyList, e.getID())
                }
            }, {
                key: "deleteNewSegments",
                value: function(e) {
                    var t = this;
                    e.forEach(function(e) {
                        t._removeVertex(d.default.forwardOf(e)),
                            t._removeVertex(d.default.reverseOf(e))
                    })
                }
            }, {
                key: "toJSON",
                value: function() {
                    var e = {};
                    return this._adjacencyList.forEach(function(t, n) {
                            var r = (0,
                                i.default)(t).filter(function(e) {
                                return null !== t[e]
                            }).map(function(e) {
                                return t[e].isAllowed() || (e += "!"),
                                    e
                            });
                            r.length > 0 && (e[n] = r)
                        }),
                        e
                }
            }]),
            e
    }();
    _.extend(f.prototype, Backbone.Events),
        t.default = f,
        t.CHANGE_EVENT = "change"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SaveError = void 0;
    var i = M(n(137)),
        r = M(n(136)),
        s = M(n(62)),
        a = M(n(184)),
        o = M(n(15)),
        l = M(n(19)),
        u = M(n(25)),
        d = M(n(7)),
        c = M(n(6)),
        h = M(n(1)),
        f = M(n(2)),
        p = M(n(0)),
        g = M(n(3)),
        v = M(n(4)),
        m = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        y = M(n(87)),
        b = M(n(208)),
        w = M(n(1097)),
        k = M(n(11)),
        E = n(30);

    function M(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var S = function(e) {
            function t(e) {
                (0,
                    p.default)(this, t);
                var n = (0,
                    g.default)(this, (t.__proto__ || (0,
                    f.default)(t)).call(this, "Save Error"));
                return Error.captureStackTrace && Error.captureStackTrace(n, t),
                    n.errors = e,
                    n
            }
            return (0,
                    v.default)(t, e),
                t
        }(function(e) {
            function t() {
                var t = (0,
                    a.default)(e, (0,
                    s.default)(arguments));
                return (0,
                        r.default)(t, (0,
                        f.default)(this)),
                    t
            }
            return t.prototype = (0,
                    i.default)(e.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                r.default ? (0,
                    r.default)(t, e) : t.__proto__ = e,
                t
        }(Error)),
        T = function() {
            function e(t) {
                (0,
                    p.default)(this, e),
                this.scale = null,
                    this.zoom = null,
                    this.oldScale = null,
                    this.keepObjects = !1,
                    this.lastReadRequest = null,
                    (0,
                        c.default)(this, t),
                    this.app = W.app,
                    this.model = W.model,
                    this.map = W.map,
                    this.descartesClient = t.descartesClient,
                    this.selectionManager = W.selectionManager,
                    this.events = new OpenLayers.Events(this),
                    this.serializer = new y.default,
                    this.loadingOperation = {
                        id: "pending.road_data"
                    },
                    this.snapshotManager.on("change:state", this.reload, this),
                    this.selectionManager.events.on({
                        selectionchanged: this._onSelectionChange,
                        scope: this
                    })
            }
            return (0,
                    h.default)(e, [{
                    key: "bindToMap",
                    value: function(e) {
                        var t = this;
                        e.events.on({
                            moveend: function() {
                                t.updateModel(!1)
                            }
                        })
                    }
                }, {
                    key: "reload",
                    value: function() {
                        return this.model.clear(),
                            this.updateModel(!1)
                    }
                }, {
                    key: "updateModel",
                    value: function(e) {
                        var t = {};
                        this.keepObjects = e,
                            this.oldScale = this.scale,
                            this.scale = this.map.getScale(),
                            this.zoom = this.map.getZoom();
                        var n = this.map.calculateBounds(),
                            i = this.descartesClient.getExpandedDataBounds(n);
                        if (null !== i) {
                            var r = !0,
                                s = !1,
                                a = void 0;
                            try {
                                for (var o, l = (0,
                                        u.default)((0,
                                        d.default)(this.model.repos)); !(r = (o = l.next()).done); r = !0) {
                                    var h = o.value,
                                        f = this.model.repos[h];
                                    f.active && (0,
                                        c.default)(t, f.updateDataExtent(n, this.scale, this.zoom))
                                }
                            } catch (e) {
                                s = !0,
                                    a = e
                            } finally {
                                try {
                                    !r && l.return && l.return()
                                } finally {
                                    if (s)
                                        throw a
                                }
                            }
                            _.isEmpty((0,
                                d.default)(t)) || (this.app.isSandboxMode() && (t.sandbox = !0),
                                m.printMap(t),
                                this.sendReadFeatures(t, i))
                        }
                    }
                }, {
                    key: "_isEqualToLastRequest",
                    value: function(e, t) {
                        return null !== this.lastReadRequest && _.isEqual(this.lastReadRequest.filter, e) && t.equals(this.lastReadRequest.bounds)
                    }
                }, {
                    key: "sendReadFeatures",
                    value: function(e, t) {
                        var n = this;
                        if (!this._isEqualToLastRequest(e, t))
                            return this.events.triggerEvent("loadstart"),
                                W.vent.trigger("operationPending", {
                                    operation: this.loadingOperation
                                }),
                                null != this.model.lastTransactionID && (e.mapVersionID = this.model.lastTransactionID),
                                this.snapshotManager.isSnapshotOn() && (e.snapshot = !0),
                                this.app.set("loadingFeatures", !0),
                                this.lastReadRequest = {
                                    filter: e,
                                    bounds: t
                                },
                                this.descartesClient.getFeatures(this.map.calculateBounds(), e).then(function(e) {
                                    return n.serializer.read(e),
                                        n.model.mergeObjects(t, e, n.keepObjects)
                                }).catch(function(e) {
                                    "abort" !== e.reason && console.error("Error getting features", e)
                                }).finally(function() {
                                    n.events.triggerEvent("loadend"),
                                        W.vent.trigger("operationDone", {
                                            operation: n.loadingOperation
                                        }),
                                        n.app.set("loadingFeatures", !1),
                                        n.keepObjects = !1,
                                        n.lastReadRequest = null
                                })
                    }
                }, {
                    key: "save",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return m.protect("saving", function() {
                            var n = t.actions || e.model.actionManager.getActions(),
                                i = {
                                    actions: e._serializeActions(n)
                                };
                            return e.descartesClient.postFeatures(i, e.model.getChangesExtent(), t.ignoreWarnings).then(function(n) {
                                return e._processSaveResponse(n, t), {
                                    pendingEdits: e._getPendingEdits(n),
                                    saveCount: e._getSaveCount(n),
                                    unsavedFeatures: n.unsavedFeatures
                                }
                            }).catch(function(t) {
                                if (t instanceof E.FetchError) {
                                    var n = e._parseErrorResponse(t.response),
                                        i = n[0],
                                        r = void 0;
                                    throw i && (r = i.get("code")),
                                        W.Report.generalAction("save_error", r),
                                        new S(n)
                                }
                                throw t
                            }).finally(function() {
                                W.Report.generalAction("save_clicked", e.model.actionManager.unsavedActionsNum())
                            })
                        })
                    }
                }, {
                    key: "_serializeActions",
                    value: function(e) {
                        var t = new w.default,
                            n = new k.default;
                        return n.subActions = e,
                            n.accept(t),
                            t.getResult()
                    }
                }, {
                    key: "_getPendingEdits",
                    value: function(e) {
                        var t = void 0;
                        return t = e.pendingEdits ? e.pendingEdits.venues : [], {
                            venues: this.model.venues.getByIds(t)
                        }
                    }
                }, {
                    key: "_getSaveCount",
                    value: function(e) {
                        for (var t = {}, n = ["segments", "nodes", "venues", "bigJunctions"], i = 0; i < n.length; i++) {
                            var r = n[i],
                                s = e[r] || {};
                            t[r] = (0,
                                d.default)(s).length
                        }
                        return t
                    }
                }, {
                    key: "_parseErrorResponse",
                    value: function(e) {
                        return e ? this._parseErrors(e) : [new b.default({
                            code: 500,
                            details: "fatal server error"
                        })]
                    }
                }, {
                    key: "_parseErrors",
                    value: function(e) {
                        var t = void 0;
                        t = e.errorList ? e : {
                            errorList: [e],
                            errorLevel: "ERROR"
                        };
                        var n = "WARNING" === e.errorLevel,
                            i = t.errorList.map(function(e) {
                                return e.ignorable = n,
                                    new b.default(e, {
                                        parse: !0
                                    })
                            });
                        return i.length ? i : [new b.default({
                            code: "default"
                        })]
                    }
                }, {
                    key: "_processSaveResponse",
                    value: function(e) {
                        var t = this,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = n.actions,
                            r = void 0 === i ? [] : i,
                            s = n.clearAllActions,
                            a = void 0 === s || s;
                        return m.protect("processing save results", function() {
                            var n = null != e.userLimits,
                                i = null != e.connections,
                                s = null != e.segmentsIdMapping;
                            t._updateRepositoriesFromSaveResponse(e),
                                t._removeDeletedObjectsAfterSave(),
                                n && t._updateUserQuotasAfterSave(e.userLimits),
                                s && t._updateTurnGraphSegmentsIdMapping(e.segmentsIdMapping),
                                i && t._updateTurnGraphConnections(e.connections),
                                a ? t.model.actionManager.clear() : t.model.actionManager.clearGroupsOfActions(r),
                                t.model.setLastTransactionID(e.mapVersionID)
                        })
                    }
                }, {
                    key: "_updateRepositoriesFromSaveResponse",
                    value: function(e) {
                        var t = this;
                        (0,
                            d.default)(e).filter(function(e) {
                            return t.model.isRepository(e)
                        }).map(function(e) {
                            return t.model[e]
                        }).forEach(function(n) {
                            var i = n.name,
                                r = e[i];
                            t._updateRepositoryFromServerResponse(n, r)
                        })
                    }
                }, {
                    key: "_updateRepositoryFromServerResponse",
                    value: function(e, t) {
                        var n = this;
                        (0,
                            d.default)(t).forEach(function(i) {
                            var r = t[i];
                            l.default.resolve(e.getObjectById(i)).then(function(t) {
                                null == t ? n._createNewObjectInRepository(r, e) : n._updateExistingObjectInRepository(t, r, e, i)
                            })
                        })
                    }
                }, {
                    key: "_createNewObjectInRepository",
                    value: function(e, t) {
                        var n = (0,
                            o.default)({}, t.name, {
                            objects: [e]
                        });
                        this.serializer.read(n);
                        var i = n[t.name].objects[0];
                        t.put(i)
                    }
                }, {
                    key: "_updateExistingObjectInRepository",
                    value: function(e, t, n, i) {
                        null == t ? this._deletedObjectInRepository(e, n) : this._updateObjectInRepository(e, n, t, i)
                    }
                }, {
                    key: "_deletedObjectInRepository",
                    value: function(e, t) {
                        e.state = OpenLayers.State.DELETE,
                            t.remove(e)
                    }
                }, {
                    key: "_updateObjectInRepository",
                    value: function(e, t, n, i) {
                        var r = n.id,
                            s = i !== r,
                            a = _.omit(n, "id");
                        t.mergeObjectAttributes(e, a),
                            s && t.changeObjectID(e, r)
                    }
                }, {
                    key: "_removeDeletedObjectsAfterSave",
                    value: function() {
                        this.model.removeModifiedDeletedObjects()
                    }
                }, {
                    key: "_updateUserQuotasAfterSave",
                    value: function(e) {
                        this.model.loginManager.resetUserLimits(e)
                    }
                }, {
                    key: "_updateTurnGraphConnections",
                    value: function(e) {
                        this.model.getTurnGraph().fromDescartes(e)
                    }
                }, {
                    key: "_updateTurnGraphSegmentsIdMapping",
                    value: function(e) {
                        this.model.getTurnGraph().deleteNewSegments((0,
                            d.default)(e))
                    }
                }, {
                    key: "_onSelectionChange",
                    value: function() {
                        return this.app.set("featureSelected", this.selectionManager.hasSelectedFeatures()),
                            this.app.trigger("selectionChanged", {
                                selection: W.selectionManager.getSelectedFeatures()
                            })
                    }
                }]),
                e
        }();
    (0,
        c.default)(T.prototype, {
        CLASS_NAME: "Waze.Controller"
    }),
    t.default = T,
        t.SaveError = S
}, function(e, t) {
    e.exports = function(e) {
        return e.webpackPolyfill || (e.deprecate = function() {},
                e.paths = [],
                e.children || (e.children = []),
                Object.defineProperty(e, "loaded", {
                    enumerable: !0,
                    get: function() {
                        return e.l
                    }
                }),
                Object.defineProperty(e, "id", {
                    enumerable: !0,
                    get: function() {
                        return e.i
                    }
                }),
                e.webpackPolyfill = 1),
            e
    }
}, function(e, t, n) {
    e.exports = !n(29) && !n(39)(function() {
        return 7 != Object.defineProperty(n(96)("div"), "a", {
            get: function() {
                return 7
            }
        }).a
    })
}, function(e, t, n) {
    e.exports = n(35)
}, function(e, t, n) {
    var i = n(36),
        r = n(33),
        s = n(168)(!1),
        a = n(79)("IE_PROTO");
    e.exports = function(e, t) {
        var n, o = r(e),
            l = 0,
            u = [];
        for (n in o)
            n != a && i(o, n) && u.push(n);
        for (; t.length > l;)
            i(o, n = t[l++]) && (~s(u, n) || u.push(n));
        return u
    }
}, function(e, t, n) {
    var i = n(65);
    e.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e) {
        return "String" == i(e) ? e.split("") : Object(e)
    }
}, function(e, t, n) {
    var i = n(46),
        r = n(357),
        s = n(358),
        a = n(28),
        o = n(97),
        l = n(179),
        u = {},
        d = {};
    (t = e.exports = function(e, t, n, c, h) {
        var f, p, g, v, m = h ? function() {
                return e
            } :
            l(e),
            _ = i(n, c, t ? 2 : 1),
            y = 0;
        if ("function" != typeof m)
            throw TypeError(e + " is not iterable!");
        if (s(m)) {
            for (f = o(e.length); f > y; y++)
                if ((v = t ? _(a(p = e[y])[0], p[1]) : _(e[y])) === u || v === d)
                    return v
        } else
            for (g = m.call(e); !(p = g.next()).done;)
                if ((v = r(g, _, p.value, t)) === u || v === d)
                    return v
    }).BREAK = u,
        t.RETURN = d
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            (0,
                i.default)(this, e),
            this._value = t
        }
        return (0,
                r.default)(e, [{
                key: "add",
                value: function(e) {
                    this._value |= e
                }
            }, {
                key: "remove",
                value: function(e) {
                    this._value &= ~e
                }
            }, {
                key: "setBits",
                value: function(e) {
                    var t = this;
                    e.forEach(function(e) {
                        e[1] ? t.add(e[0]) : t.remove(e[0])
                    })
                }
            }, {
                key: "isEnabled",
                value: function(e) {
                    return 0 !== (this._value & e)
                }
            }, {
                key: "isPowerOf2Enabled",
                value: function(e) {
                    return 0 !== (this._value & 1 << e)
                }
            }, {
                key: "isDisabled",
                value: function(e) {
                    return 0 === (this._value & e)
                }
            }, {
                key: "value",
                get: function() {
                    return this._value
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SegmentRestrictionViewHelpers = t.TurnRestrictionViewHelpers = t.TimeFrameViewHelpers = void 0;
    var i = l(n(0)),
        r = l(n(1)),
        s = l(n(372)),
        a = n(189),
        o = n(47);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = new s.default,
        d = function() {
            function e() {
                var t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).timeFrame,
                    n = void 0 === t ? null : t;
                (0,
                    i.default)(this, e),
                this._timeFrame = n
            }
            return (0,
                    r.default)(e, [{
                    key: "formatWeekdays",
                    value: function() {
                        if (this._timeFrame.isAllWeek())
                            return I18n.t("restrictions.editing.timeframe.all_week");
                        var e = this._timeFrame.getWeekdays().map(function(e) {
                            return a.WEEKDAY_ORDINALS.indexOf(e)
                        });
                        return u.getWeekdaysGist(e, "*").map(function(e) {
                            return "*" !== e ? I18n.t("date.abbr_day_names")[e] : e
                        }).join(", ").replace(/, \*,/g, "-")
                    }
                }, {
                    key: "formatHours",
                    value: function() {
                        return this._timeFrame.isAllDay() ? I18n.t("restrictions.editing.timeframe.all_day") : this._timeFrame.getFromTime() + " - " + this._timeFrame.getToTime()
                    }
                }, {
                    key: "formatDateRange",
                    value: function() {
                        return this._timeFrame.isDuringDates() ? I18n.t("restrictions.editing.timeframe.date_range", {
                            start: new Date(this._timeFrame.getStartDate()).toLocaleDateString(),
                            end: new Date(this._timeFrame.getEndDate()).toLocaleDateString()
                        }) : I18n.t("restrictions.editing.timeframe.always")
                    }
                }]),
                e
        }(),
        c = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.dataModel,
                    r = t.segment;
                (0,
                    i.default)(this, e),
                this._dataModel = n,
                    this._segment = r
            }
            return (0,
                    r.default)(e, [{
                    key: "getEditingDrivingTitle",
                    value: function(e) {
                        return this.getDrivingRestrictedTitle(e.getDirection())
                    }
                }, {
                    key: "getDrivingRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.driving_restricted", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "getDrivingNotRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.driving_not_restricted", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "getPickupTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.pickup", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "_getHeading",
                    value: function(e) {
                        return e === o.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._segment.getFwdHeading() : e === o.RESTRICTION_SEGMENT_DIRECTION.REV ? this._segment.getRevHeading() : e === o.RESTRICTION_SEGMENT_DIRECTION.BOTH ? null : void 0
                    }
                }, {
                    key: "_getDirectionString",
                    value: function(e) {
                        if (e === o.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            return I18n.t("restrictions.editing.titles.segment.both_ways");
                        var t = this._getHeading(e);
                        return I18n.t("segment.heading")[t]
                    }
                }]),
                e
        }(),
        h = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.dataModel,
                    r = t.turn;
                (0,
                    i.default)(this, e),
                this._turn = r,
                    this._dataModel = n,
                    this._restrictions = this._turn.getTurnData().getRestrictions(),
                    this._fromSegment = this._dataModel.segments.getObjectById(this._turn.getFromVertex().getSegmentID()),
                    this._toSegment = this._dataModel.segments.getObjectById(this._turn.getToVertex().getSegmentID())
            }
            return (0,
                    r.default)(e, [{
                    key: "getEditingTitle",
                    value: function(e) {
                        return e.isDifficult() ? this._getDifficultTitle() : this._getRestrictedTitle()
                    }
                }, {
                    key: "getDifficultSummaryTitle",
                    value: function() {
                        return this._getDifficultTitle()
                    }
                }, {
                    key: "getSummaryTitle",
                    value: function() {
                        return this._getRestrictedTitle()
                    }
                }, {
                    key: "_getRestrictedTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.restricted", {
                            street: this._fromSegment.getAddress().getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.restricted", {
                            from_street: this._fromSegment.getAddress().getStreetName(),
                            to_street: this._toSegment.getAddress().getStreetName()
                        })
                    }
                }, {
                    key: "_getDifficultTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.difficult", {
                            street: this._fromSegment.getAddress().getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.difficult", {
                            from_street: this._fromSegment.getAddress().getStreetName(),
                            to_street: this._toSegment.getAddress().getStreetName()
                        })
                    }
                }]),
                e
        }();
    t.TimeFrameViewHelpers = d,
        t.TurnRestrictionViewHelpers = h,
        t.SegmentRestrictionViewHelpers = c
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.Segments = {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4,
            EDIT_EMPTY_STREET: 8,
            SPLIT_DIRECTIONS: 16
        },
        t.Nodes = {
            EDIT_GEOMETRY: 1,
            DELETE: 2
        },
        t.Landmarks = {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4
        }
}, function(e, t, n) {
    e.exports = {
        default: n(871),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(45));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = 3,
        h = 7,
        f = function(e) {
            function t(e, n) {
                (0,
                    s.default)(this, t);
                var i = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e, n));
                return i.disconnectBounds = null,
                    i.setSeverity(i.attributes.weight),
                    i.editable = i.attributes.open,
                    i
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "merge",
                    value: function(e) {
                        u.default.prototype.merge.apply(this, arguments),
                            this.editable = this.attributes.open
                    }
                }, {
                    key: "getDisconnectBounds",
                    value: function() {
                        return this.disconnectBounds || (this.disconnectBounds = this.attributes.bounds.getBounds()),
                            this.disconnectBounds
                    }
                }, {
                    key: "setSeverity",
                    value: function(e) {
                        var t = "high";
                        e <= c ? t = "low" : e <= h && (t = "medium"),
                            this.attributes.severity = t
                    }
                }, {
                    key: "getSessions",
                    value: function() {
                        return this.model.problemDetails.getAsync([this.getID()])
                    }
                }, {
                    key: "isRecentlyClosed",
                    value: function() {
                        return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= 6048e5
                    }
                }, {
                    key: "getLocation",
                    value: function() {
                        return this.attributes.geometry
                    }
                }, {
                    key: "canEdit",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT)
                    }
                }]),
                t
        }(u.default);
    (0,
        i.default)(f.prototype, {
        TYPE: {
            DISCONNECTION: "DISCONNECTION",
            TURN: "TURN",
            DATA: "DATA",
            ROAD_CLOSURE: "ROAD_CLOSURE"
        },
        nested: {
            geometry: OL.Geometry,
            bounds: OL.Geometry
        },
        PERMISSIONS: {
            EDIT: 1,
            FORCE_CLOSE: 2
        },
        CLASS_NAME: "Waze.Feature.Vector.MapProblem"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(10)),
        r = s(n(6));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.Behavior.extend({
        defaults: {
            modelAttribute: "model"
        },
        timepickerOptions: {
            defaultTime: !1,
            showMeridian: !1,
            template: "dropdown",
            icons: {
                up: "fa fa-angle-up",
                down: "fa fa-angle-down"
            }
        },
        datepickerOptions: {
            singleDatePicker: !0,
            autoUpdateInput: !1,
            locale: {
                format: "YYYY-MM-DD"
            }
        },
        ui: {
            startDate: ".start-date",
            startTime: ".start-time",
            endDate: ".end-date",
            endTime: ".end-time"
        },
        events: {
            "click .date-input-group .input-group-addon": "_focusSiblingInput",
            "click .input-group.bootstrap-timepicker .input-group-addon": "_focusSiblingInput",
            "click .end-time ,.start-time": "_onTimeInputClicked",
            "click .clear-btn": "_onClearClick"
        },
        bindings: function() {
            return {
                ".start-date": {
                    observe: "startDate",
                    onGet: this._getDate.bind(this),
                    onSet: this._setDate.bind(this)
                },
                ".start-time": {
                    observe: "startDate",
                    onGet: this._getTime.bind(this),
                    onSet: this._setTime.bind(this)
                },
                ".end-date": {
                    observe: "endDate",
                    onGet: this._getDate.bind(this),
                    onSet: this._setDate.bind(this)
                },
                ".end-time": {
                    observe: "endDate",
                    onGet: this._getTime.bind(this),
                    onSet: this._setTime.bind(this)
                },
                ".no-end-date": {
                    observe: "endDate",
                    onGet: function(e) {
                        return e ? e.length > 0 : void 0
                    },
                    onSet: function(e) {
                        return null
                    }
                }
            }
        },
        onRender: function() {
            this.view.stickit(this.view[this.options.modelAttribute], this.bindings()),
                this._createTimePickers(),
                this._createDatePickers()
        },
        onBeforeDestroy: function() {
            this._destroyTimePickers(),
                this._destroyDatePickers()
        },
        _getModel: function() {
            return this.view[this.options.modelAttribute]
        },
        _onStartDateChanged: function() {
            var e = this._getModel(),
                t = e.get("startDate"),
                n = e.get("endDate"),
                i = null == n || Date.parse(n) < Date.parse(t);
            null != t && (i && e.set({
                    endDate: t
                }),
                this._createEndDatePicker())
        },
        _createTimePickers: function() {
            return this.ui.startTime.timepicker(this.timepickerOptions),
                this.ui.endTime.timepicker(this.timepickerOptions)
        },
        _createDatePickers: function() {
            this._createDatePicker(this.ui.startDate, this.ui.startTime),
                this._createEndDatePicker(),
                this._getModel().on("change:startDate", this._onStartDateChanged, this)
        },
        _createEndDatePicker: function() {
            this._destroyEndDatePicker();
            var e = (0,
                r.default)({
                minDate: moment(this._getModel().attributes.startDate)
            }, this.datepickerOptions);
            this._createDatePicker(this.ui.endDate, this.ui.endTime, e)
        },
        _createDatePicker: function(e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.datepickerOptions;
            e.daterangepicker(n),
                e.on("apply.daterangepicker", function(n, i) {
                    e.val(i.startDate.format(i.locale.format)),
                        e.trigger("change"),
                        t && t.focus()
                })
        },
        _destroyTimePickers: function() {
            this.ui.startTime && this.ui.startTime.data("timepicker") && this.ui.startTime.data("timepicker").remove(),
                this.ui.endTime && this.ui.endTime.data("timepicker") && this.ui.endTime.data("timepicker").remove(),
                this._getModel().off("change:startDate", this._onStartDateChanged)
        },
        _destroyDatePickers: function() {
            this.ui.startDate && this.ui.startDate.data("daterangepicker") && this.ui.startDate.data("daterangepicker").remove(),
                this._destroyEndDatePicker()
        },
        _destroyEndDatePicker: function() {
            this.ui.endDate && this.ui.endDate.data("daterangepicker") && this.ui.endDate.data("daterangepicker").remove()
        },
        _focusSiblingInput: function(e) {
            return this.$(e.target).parents(".input-group").find("input").focus()
        },
        _onTimeInputClicked: function(e) {
            this.$(e.target).parents(".input-group").find("input").timepicker("showWidget")
        },
        _onClearClick: function(e) {
            this._getModel().set({
                startDate: null,
                endDate: null
            })
        },
        _getDate: function(e) {
            var t = null;
            if (null != e) {
                var n = e.split(" ")[0];
                this._isValidDate(n) && (t = n)
            }
            return t
        },
        _getTime: function(e) {
            var t = null;
            return e && e.length > 0 && (t = e.split(" ")[1]),
                t
        },
        _setDate: function(e, t) {
            if (this._isValidDate(e)) {
                var n = t.view[this.options.modelAttribute].get(t.observe),
                    i = this._getTime(n);
                return null == i && (i = "00:00"),
                    [e, this._padTime(i)].join(" ")
            }
            return null
        },
        _setTime: function(e, t) {
            var n = t.view[this.options.modelAttribute].get(t.observe),
                i = this._getDate(n);
            return this._isValidDate(i) ? [i, this._padTime(e)].join(" ") : " " + this._padTime(e)
        },
        _padTime: function(e) {
            var t = e.split(":");
            return 1 === (0,
                    i.default)(t, 1)[0].length && (e = "0" + e),
                e
        },
        _isValidDate: function(e) {
            return null != Date.parse(e)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(11)),
        u = c(n(91)),
        d = c(n(368));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e, n, s, o, l) {
            (0,
                r.default)(this, t);
            var u = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, l));
            return u.city = null,
                u.state = e,
                u.country = n,
                u.name = s,
                u.isEmpty = o,
                u
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = null,
                        t = void 0,
                        n = !1;
                    if (this.state || (this.state = this.model.states.getByAttributes({
                            isDefault: !0
                        })[0]),
                        !(e = this.isEmpty ? this.model.cities.getByAttributes({
                            countryID: this.country.getID(),
                            stateID: this.state.getID(),
                            isEmpty: !0
                        })[0] : this.model.cities.getByAttributes({
                            name: this.name,
                            countryID: this.country.getID(),
                            stateID: this.state.getID()
                        })[0])) {
                        this.isEmpty || this.name;
                        var i = new d.default({
                            countryID: this.country.getID(),
                            stateID: this.state.getID(),
                            isEmpty: this.isEmpty,
                            name: this.isEmpty ? "" : this.name
                        });
                        e = (t = new u.default(i, this.model.cities)).object,
                            this.doSubAction(t),
                            n = !0
                    }
                    this.city = e,
                        n || (this.dontSerialize = !0)
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return this.city.isNew() ? [this.city.getUniqueID()] : []
                }
            }]),
            t
    }(l.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(2)),
        r = v(n(0)),
        s = v(n(1)),
        a = v(n(3)),
        o = v(n(8)),
        l = v(n(4)),
        u = v(n(20)),
        d = v(n(397)),
        c = v(n(202)),
        h = n(14),
        f = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54)),
        p = n(71),
        g = n(37);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                r.default)(this, t);
            var s = n.createTwoWay,
                o = void 0 !== s && s,
                l = n.openAllTurns,
                u = void 0 !== l && l,
                d = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, e, n));
            return d.initialSegmentGeometry = null,
                d.openAllTurns = u,
                d.segment = e,
                d.segmentAttributes = {},
                o && (d.segment.attributes.revDirection = !0,
                    d.segment.attributes.fwdDirection = !0),
                d
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    if (this.segment.isPoint())
                        return !1;
                    this.segment.geometry.bounds || this.segment.geometry.calculateBounds(),
                        this.segment.bounds || (this.segment.bounds = this.segment.geometry.bounds),
                        this.segment.state = OpenLayers.State.INSERT,
                        this.segment.getID() || this.segment.setID(this.model.segments.generateUniqueID()),
                        this.segment.attributes.streetIDs || (this.segment.attributes.streetIDs = []),
                        this.initialSegmentGeometry = this.segment.geometry.clone(),
                        this.segment.getID(),
                        this.model.segments.put(this.segment);
                    var e = ["geometry"];
                    f.lanesEnabled(this.segment, p.SEGMENT_LANE_DIRECTION.FWD) || e.push("fwdLaneCount"),
                        f.lanesEnabled(this.segment, p.SEGMENT_LANE_DIRECTION.REV) || e.push("revLaneCount"),
                        $.extend(!0, this.segmentAttributes, _.omit(this.segment.attributes, e)),
                        this.updateEndPoint(null, this.touching.fromVertex, !0),
                        this.updateEndPoint(null, this.touching.toVertex, !1),
                        this.openAllTurns && ["from", "to"].forEach(function(e) {
                            var t = this.segment.getNodeByDirection(e);
                            this.doSubAction(new c.default(t, !0, {
                                forSegment: this.segment
                            }))
                        }, this)
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.segment.getID(),
                        (0,
                            o.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "undoAction", this).call(this),
                        this.model.segments.remove(this.segment)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.model.segments.put(this.segment),
                        (0,
                            o.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "redoAction", this).call(this)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = this.segmentAttributes;
                    return e.id = this.segment.getID(),
                        e.geometry = this.initialSegmentGeometry, {
                            _objectType: h.SEGMENT,
                            action: u.default.TYPE.ADD,
                            attributes: e
                        }
                }
            }, {
                key: "getBounds",
                value: function() {
                    var e = (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "getBounds", this).apply(this, arguments) || new OpenLayers.Bounds;
                    return e.extend(this.initialSegmentGeometry.getBounds()),
                        e
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this.segment.attributes.roadType,
                        t = "save.changes_log.actions.AddSegment.road_types." + _.findKey(g.ROAD_TYPES, function(t) {
                            return t === e
                        });
                    I18n.lookup(t) ? this._description = I18n.t(t) : this._description = I18n.t("save.changes_log.actions.AddSegment.default")
                }
            }]),
            t
    }(d.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(9)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            (0,
                s.default)(this, e),
            this.started = !1,
                this.stopDown = !0,
                this.dragging = !1,
                this.touch = !1,
                this.last = null,
                this.start = null,
                this.lastMoveEvt = null,
                this.oldOnselectstart = null,
                this.interval = 0,
                this.timeoutId = null,
                this.forced = !1,
                this.active = !1,
                this.map = t,
                this.uniqueID = e.baseID--
        }
        return (0,
                a.default)(e, [{
                key: "callback",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    if (this[e])
                        return this[e].apply(this, (0,
                            r.default)(t))
                }
            }, {
                key: "dragstart",
                value: function(e) {
                    e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1]);
                    var t = !0;
                    return this.dragging = !1,
                        (OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) && (this.started = !0,
                            this.start = e.xy,
                            this.last = e.xy,
                            OL.Element.addClass(this.map.viewPortDiv, "olDragDown"),
                            this.down(e),
                            this.callback("down", [e.xy]),
                            OL.Event.stop(e),
                            this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : function() {
                                return !0
                            }),
                            document.onselectstart = function() {
                                return !1
                            },
                            t = !this.stopDown),
                        t
                }
            }, {
                key: "forceStart",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return this.started = !0,
                        this.endOnMouseUp = e,
                        this.forced = !0,
                        this.last = {
                            x: 0,
                            y: 0
                        },
                        this.callback("force")
                }
            }, {
                key: "forceEnd",
                value: function() {
                    if (this.forced)
                        return this.endDrag()
                }
            }, {
                key: "dragmove",
                value: function(e) {
                    return this.map.viewPortDiv.offsets && (e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1])),
                        this.lastMoveEvt = e,
                        !this.started || this.timeoutId || e.xy.x === this.last.x && e.xy.y === this.last.y || (this.interval > 0 && (this.timeoutId = window.setTimeout(this.removeTimeout.bind(this), this.interval)),
                            this.dragging = !0,
                            this.move(e),
                            this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                                document.onselectstart = function() {
                                    return !1
                                }
                            ),
                            this.last = e.xy),
                        !0
                }
            }, {
                key: "dragend",
                value: function(e) {
                    if (e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1]),
                        this.started) {
                        var t = this.start !== this.last;
                        this.endDrag(),
                            this.up(e),
                            this.callback("up", [e.xy]),
                            t && this.callback("done", [e.xy])
                    }
                    return !0
                }
            }, {
                key: "endDrag",
                value: function() {
                    this.started = !1,
                        this.dragging = !1,
                        this.forced = !1,
                        OL.Element.removeClass(this.map.viewPortDiv, "olDragDown"),
                        document.onselectstart = this.oldOnselectstart
                }
            }, {
                key: "down",
                value: function(e) {}
            }, {
                key: "move",
                value: function(e) {}
            }, {
                key: "up",
                value: function(e) {}
            }, {
                key: "out",
                value: function(e) {}
            }, {
                key: "mousedown",
                value: function(e) {
                    return this.dragstart(e)
                }
            }, {
                key: "touchstart",
                value: function(e) {
                    return this.touch || (this.touch = !0,
                            this.map.events.un({
                                mousedown: this.mousedown,
                                mouseup: this.mouseup,
                                mousemove: this.mousemove,
                                click: this.click,
                                scope: this
                            })),
                        this.dragstart(e)
                }
            }, {
                key: "mousemove",
                value: function(e) {
                    return this.dragmove(e)
                }
            }, {
                key: "touchmove",
                value: function(e) {
                    return this.dragmove(e)
                }
            }, {
                key: "removeTimeout",
                value: function() {
                    if (this.timeoutId = null,
                        this.dragging)
                        return this.mousemove(this.lastMoveEvt)
                }
            }, {
                key: "mouseup",
                value: function(e) {
                    if (!this.forced || this.endOnMouseUp)
                        return this.started ? this.dragend(e) : void 0
                }
            }, {
                key: "touchend",
                value: function(e) {
                    if (e.xy = this.last,
                        !this.forced)
                        return this.dragend(e)
                }
            }, {
                key: "click",
                value: function(e) {
                    return this.start === this.last
                }
            }, {
                key: "activate",
                value: function(e) {
                    this.$el = e,
                        this.active = !0;
                    var t = $(this.map.viewPortDiv);
                    return this.$el.on("mousedown.drag-" + this.uniqueID, this.mousedown.bind(this)),
                        this.$el.on("touchstart.drag-" + this.uniqueID, this.touchstart.bind(this)),
                        this.map.events.register("mouseup", this, this.mouseup, !0),
                        t.on("mousemove.drag-" + this.uniqueID, this.mousemove.bind(this)),
                        t.on("touchmove.drag-" + this.uniqueID, this.touchmove.bind(this)),
                        t.on("touchend.drag-" + this.uniqueID, this.touchend.bind(this))
                }
            }, {
                key: "deactivate",
                value: function() {
                    return this.active = !1,
                        this.$el.off(".drag-" + this.uniqueID),
                        $(this.map.viewPortDiv).off(".drag-" + this.uniqueID),
                        $(document).off(".drag-" + this.uniqueID),
                        this.map.events.unregister("mouseup", this, this.mouseup),
                        this.touch = !1,
                        this.started = !1,
                        this.forced = !1,
                        this.dragging = !1,
                        this.start = null,
                        this.last = null,
                        OL.Element.removeClass(this.map.viewPortDiv, "olDragDown")
                }
            }, {
                key: "adjustXY",
                value: function(e) {
                    var t = OL.Util.pagePosition(this.map.viewPortDiv);
                    return e.xy.x -= t[0],
                        e.xy.y -= t[1]
                }
            }]),
            e
    }();
    (0,
        i.default)(l.prototype, {
        CLASS_NAME: "W.Handler.DragElement"
    }),
    l.baseID = 0,
        t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.REGION_CODE_USA = "usa",
        t.REGION_CODE_ROW = "row",
        t.REGION_CODE_IL = "il",
        t.REGION_CODES = [t.REGION_CODE_ROW, t.REGION_CODE_IL, t.REGION_CODE_USA],
        t.DEFAULT_REGION_CODE = t.REGION_CODE_ROW,
        t.ROOT_PATH_LOCALE_CODE = "en",
        t.DEFAULT_LOCALE_CODE = "en",
        t.DEFAULT_LOCALE_CODE_USA = "en-US",
        t.URL_PARAM_REGION_CODE = "env"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.LAYER_UNIQUE_NAMES = t.MapLayers = void 0;
    var i = O(n(210)),
        r = O(n(1127)),
        s = O(n(211)),
        a = O(n(1128)),
        o = O(n(1133)),
        l = O(n(1134)),
        u = O(n(415)),
        d = O(n(1137)),
        c = O(n(1138)),
        h = O(n(155)),
        f = O(n(1139)),
        p = O(n(1163)),
        g = O(n(1164)),
        v = O(n(1165)),
        m = O(n(416)),
        y = O(n(1166)),
        b = O(n(1167)),
        w = O(n(1168)),
        k = O(n(1169)),
        E = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(14)),
        M = O(n(13)),
        S = O(n(1170)),
        T = O(n(75)),
        I = O(n(212)),
        C = O(n(1171)),
        A = O(n(44));

    function O(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var x = A.default.LAYER_TYPE,
        D = "wms",
        R = "mapnik",
        L = {
            ARCHIVE: "archive",
            AREA_MANAGERS: "area_managers",
            BIG_JUNCTIONS: "big_junctions",
            CLOSURES: "closures",
            EDITABLE_AREAS: "editable_areas",
            LANDMARKS: "landmarks",
            NODES: "nodes",
            PLACE_UPDATES: "place_updates",
            PROBLEMS: "problems",
            SATELLITE_IMAGERY: "satellite_imagery",
            SATELLITE_OVERLAY: "satellite_overlay",
            SEGMENTS: "segments",
            SPEED_CAMERAS: "speed_cameras",
            UPDATE_REQUESTS: "update_requests",
            LIVE_USERS: "live_users",
            SEARCH: "search_layer",
            GPS_POINTS: "gps_points",
            ROADS: "roads"
        },
        P = {
            initializeLayers: function(e) {
                var t = e.regionCode,
                    n = void 0 === t ? null : t;
                this._addAerials(n),
                    this._addModulesLayers(x.RASTER),
                    this._addRasterLayers(),
                    this._addModulesLayers(x.FEATURE),
                    this._addModulesLayers(x.MARKER),
                    this._addVectorLayers(),
                    this._clearLayerContainerZIndex()
            },
            _addRasterLayers: function() {
                return this._addRasterLayer(W.Config.raster_layers[L.ROADS]),
                    this._addRasterLayer(W.Config.raster_layers[L.GPS_POINTS]),
                    this.roadLayers = [this.getLayerByUniqueName(L.ROADS)],
                    W.model.events.register("change:lastTransactionID", this, this._refreshRoadLayers),
                    this._setRoadLayerParams()
            },
            _clearLayerContainerZIndex: function() {
                this.layerContainerDiv.style.zIndex = ""
            },
            _addRasterLayer: function(e) {
                var t = {},
                    n = e.type || D,
                    i = I18n.t("layers.name." + e.uniqueName),
                    r = e.file_name || W.Config.raster_layers[n].file_name,
                    s = W.Config.raster_layers[n].servers.map(function(e) {
                        return e + "/" + r
                    });
                $.extend(t, W.Config.raster_layers.options, e.options),
                    t.tileSize = new OL.Size(t.tileWidth, t.tileHeight),
                    t.removeBackBufferDelay = 0,
                    t.uniqueName = e.uniqueName,
                    t.visibility = e.visible;
                var a, o = {
                        text: I18n.t("layers.loading", {
                            layer_name: i
                        })
                    },
                    l = void 0;
                if (n === D) {
                    var u = {};
                    $.extend(u, W.Config.raster_layers.wms.params, e.params),
                        u.layers = e.layers,
                        l = new OL.Layer.WMS(i, s, u, t)
                } else
                    l = new S.default(i, s, t),
                    $.extend(l.params, e.params);
                return l.type = n,
                    l.events.on({
                        loadstart: (a = o,
                            function() {
                                return W.vent.trigger("operationPending", {
                                    operation: a
                                })
                            }
                        ),
                        loadend: function(e) {
                            return function() {
                                return W.vent.trigger("operationDone", {
                                    operation: e
                                })
                            }
                        }(o)
                    }),
                    this.addUniqueLayer(l),
                    l
            },
            _setRoadLayerParams: function() {
                var e = {
                    timestamp: this.snapshotManager && this.snapshotManager.isSnapshotOn() ? -1 : 1,
                    waitFor: W.model.lastTransactionID
                };
                this.roadLayers.forEach(function(t) {
                    t.type === R ? t.params.addToQuery = $.param(e) : _.extend(t.params, e)
                })
            },
            _refreshRoadLayers: function(e) {
                return this._setRoadLayerParams(),
                    this.roadLayers.map(function(e) {
                        return e.redraw({
                                force: !0
                            }),
                            e.removeBackBuffer()
                    })
            },
            _addVectorLayers: function() {
                return this.segmentLayer = new d.default(I18n.t("layers.name.segments"), W.model, W.model.segments, {
                        styleMap: s.default,
                        uniqueName: L.SEGMENTS,
                        selectable: !0,
                        featureType: E.SEGMENT
                    }),
                    this.nodeLayer = new c.default(I18n.t("layers.name.nodes"), W.model, W.model.nodes, {
                        styleMap: r.default,
                        uniqueName: L.NODES,
                        selectable: !0,
                        featureType: E.NODE
                    }),
                    this.landmarkLayer = new h.default(I18n.t("layers.name.landmarks"), W.model, W.model.venues, {
                        styleMap: i.default,
                        uniqueName: L.LANDMARKS,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0,
                        featureType: E.VENUE
                    }),
                    this.bigJunctionLayer = new h.default(I18n.t("layers.name.big_junctions"), W.model, W.model.bigJunctions, {
                        styleMap: o.default,
                        uniqueName: L.BIG_JUNCTIONS,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0,
                        featureType: E.BIG_JUNCTION
                    }),
                    this.bigJunctionPathLayer = new OL.Layer.Vector("bigJunctionPathLayer", {
                        rendererOptions: {
                            zIndexing: !0
                        },
                        renderers: [T.default],
                        styleMap: I.default,
                        selectable: !0
                    }),
                    this.camerasLayer = new h.default(I18n.t("layers.name.speed_cameras"), W.model, W.model.cameras, {
                        styleMap: a.default,
                        uniqueName: L.SPEED_CAMERAS,
                        selectable: !0,
                        featureType: E.SPEED_CAMERA,
                        toggleRepo: !0,
                        rendererOptions: {
                            zIndexing: !0
                        }
                    }),
                    this.problemLayer = new k.default(I18n.t("layers.name.problems"), [W.model.problems], {
                        markerClass: m.default,
                        uniqueName: L.PROBLEMS,
                        className: "map-problems"
                    }),
                    this.updateRequestLayer = new k.default(I18n.t("layers.name.update_requests"), [W.model.mapUpdateRequests], {
                        markerClass: y.default,
                        uniqueName: L.UPDATE_REQUESTS,
                        className: "update-requests"
                    }),
                    this.archiveLayer = new f.default(I18n.t("layers.name.archive"), {
                        rendererOptions: {
                            zIndexing: !0
                        },
                        uniqueName: L.ARCHIVE
                    }),
                    this.userLayer = new p.default(I18n.t("layers.name.editable_areas"), W.model, [W.model.userAreas], {
                        uniqueName: L.EDITABLE_AREAS
                    }),
                    this.managedAreasLayer = new h.default(I18n.t("layers.name.area_managers"), W.model, W.model.managedAreas, {
                        styleMap: u.default,
                        uniqueName: L.AREA_MANAGERS
                    }),
                    this.sketchLayer = new OpenLayers.Layer.Vector("sketch", {
                        styleMap: l.default,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0
                    }),
                    this.placeUpdatesLayer = new k.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: b.default,
                        uniqueName: L.PLACE_UPDATES,
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && !e.isParkingLot() && !e.isResidential()
                        }
                    }),
                    this.parkingPlaceUpdatesLayer = new k.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: b.default,
                        uniqueName: "PARKING_PLACE_UPDATES",
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && e.isParkingLot()
                        }
                    }),
                    this.residentialPlaceUpdatesLayer = new k.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: b.default,
                        uniqueName: "RESIDENTIAL_PLACE_UPDATES",
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && e.isResidential()
                        }
                    }),
                    this.liveUsersLayer = new OL.Layer.Markers(I18n.t("layers.name.live_users"), {
                        uniqueName: L.LIVE_USERS,
                        className: "live-users"
                    }),
                    this.searchLayer = new OL.Layer.Vector("Search", {
                        styleMap: C.default,
                        uniqueName: L.SEARCH
                    }),
                    this.addUniqueLayers([this.archiveLayer, this.managedAreasLayer, this.landmarkLayer, this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.residentialPlaceUpdatesLayer, this.bigJunctionLayer, this.segmentLayer, this.nodeLayer, this.camerasLayer, this.bigJunctionPathLayer, this.sketchLayer, this.problemLayer, this.updateRequestLayer, this.userLayer, this.liveUsersLayer, this.searchLayer]),
                    this.closuresMarkerLayer = new k.default(I18n.t("layers.name.closures"), [W.model.roadClosures], {
                        markerClass: w.default,
                        uniqueName: L.CLOSURES,
                        toggleRepo: !0
                    }),
                    this.addUniqueLayer(this.closuresMarkerLayer)
            },
            _addModulesLayers: function(e) {
                for (var t = A.default.getLayers().filter(function(t) {
                        return t.type === e
                    }), n = 0; n < t.length; n++) {
                    var i = t[n];
                    if (i.type === x.RASTER)
                        this._addModuleRasterLayer(i);
                    else if (i.type === x.FEATURE)
                        this._addModuleFeatureLayer(i);
                    else {
                        if (i.type !== x.MARKER)
                            throw new Error("Invalid layer type " + i.type);
                        this._addModuleMarkerLayer(i)
                    }
                }
            },
            _addModuleRasterLayer: function(e) {
                return this._addRasterLayer(e.options)
            },
            _addModuleFeatureLayer: function(e) {
                var t = e.options || {},
                    n = [W.model.getRepository(t.objectType)],
                    i = void 0;
                i = t.enableZIndexing ? {
                    zIndexing: !0
                } : {};
                var r = new h.default(t.name, W.model, n, {
                    uniqueName: e.uniqueName,
                    visibility: t.visibleByDefault,
                    styleMap: t.styleMap,
                    selectable: t.selectable,
                    featureType: t.objectType,
                    toggleRepo: !0,
                    rendererOptions: i
                });
                return this.addUniqueLayer(r)
            },
            _addModuleMarkerLayer: function(e) {
                var t = e.options || {},
                    n = [W.model.getRepository(t.objectType)],
                    i = new k.default(t.name, n, {
                        uniqueName: e.uniqueName,
                        markerClass: t.markerClass,
                        className: t.markerClassName,
                        visibility: t.visibleByDefault,
                        featureType: t.objectType,
                        filter: t.filter
                    });
                return this.addUniqueLayer(i)
            },
            getLayerByUniqueName: function(e) {
                return this.getLayersBy("uniqueName", e)[0]
            },
            _addAerials: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                if (null == e)
                    throw new Error("Invalid region code for aerial imagery");
                var t = W.Config.map.initialPosition[e],
                    n = new OL.LonLat(t.lon, t.lat);
                M.default.project(n);
                var i = new g.default({
                    name: I18n.t("layers.name.satellite_imagery"),
                    key: "AIzaSyDf-q2MCay0AE7RF6oIMrDPrjBwxVtsUuI",
                    type: "satellite",
                    zoomOffset: 12,
                    numZoomLevels: 11,
                    zoom: t.initialZoom,
                    minResolution: .037322767712175846,
                    center: n,
                    uniqueName: L.SATELLITE_IMAGERY,
                    transitionEffect: "resize"
                });
                this.addUniqueLayer(i);
                var r = new v.default(L.SATELLITE_OVERLAY);
                this.addUniqueLayer(r),
                    r.setZIndex(Number(i.getZIndex()) + 1);
                var s = {
                    text: I18n.t("layers.loading", {
                        layer_name: I18n.t("layers.name.satellite_imagery")
                    })
                };
                return i.events.on({
                        loadstart: function() {
                            if (this.getVisibility())
                                return W.vent.trigger("operationPending", {
                                    operation: s
                                })
                        },
                        loadend: function() {
                            return W.vent.trigger("operationDone", {
                                operation: s
                            })
                        },
                        loaderror: function() {
                            return W.vent.trigger("operationDone", {
                                operation: s
                            })
                        }
                    }),
                    this.setCenter(n, t.initialZoom)
            },
            getLayersByRepos: function(e, t) {
                return (t || null == this.layersPerRepo) && (this.layersPerRepo = this.layers.reduce(function(e, t) {
                        if (null != t.repo)
                            for (var n = 0; n < t.repo.length; n++) {
                                var i = t.repo[n];
                                null == e[i.name] && (e[i.name] = []),
                                    e[i.name].push(t)
                            }
                        return e
                    }, {})),
                    _.pick(this.layersPerRepo, e)
            },
            showLayerByObjectType: function(e) {
                var t = W.model.getRepository(e);
                return this.getLayersByRepos([t.name])[t.name].map(function(e) {
                    return e.setVisibility(!0)
                })
            },
            addUniqueLayer: function(e) {
                if (e.uniqueName && this.getLayersBy("uniqueName", e.uniqueName).length > 0)
                    throw new Error("Cannot add layer " + e.uniqueName + ", the provided\n        uniqueName already exists.");
                return this.addLayer(e)
            },
            addUniqueLayers: function(e) {
                var t = this;
                return e.map(function(e) {
                    return t.addUniqueLayer(e)
                })
            },
            getPlaceUpdateLayers: function() {
                return [this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.residentialPlaceUpdatesLayer]
            }
        };
    t.MapLayers = P,
        t.LAYER_UNIQUE_NAMES = L
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(10),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = {
        selectionRequiredOption: function(e) {
            return Backbone.$("<option/>").prop("disabled", "disabled").prop("selected", "selected").text(e).val("")
        },
        selectOptionsFromList: function(e, t, n) {
            var i = null,
                r = e.map(function(e) {
                    return {
                        value: e,
                        label: t(e)
                    }
                });
            return void 0 !== n && (r = r.filter(function(e) {
                    return e.value !== n
                }),
                i = {
                    value: n,
                    label: t(n)
                }), {
                collection: r,
                defaultOption: i
            }
        },
        checkboxList: function(e) {
            return {
                observe: e,
                getVal: function(e, t, n) {
                    return e.filter(":checked").toArray().map(function(e) {
                        return $(e).attr("value")
                    })
                },
                update: function(e, t, n, i) {
                    var r = t || [];
                    return e.toArray().forEach(function(e) {
                        var t = $(e),
                            n = r.indexOf(t.attr("value")) > -1;
                        return t.attr("checked", n)
                    })
                }
            }
        },
        requireAndEnableIfNot: function(e) {
            return [{
                observe: e,
                name: "required",
                onGet: function(e) {
                    return !e
                }
            }, {
                name: "disabled",
                observe: e
            }]
        },
        contentsAndVisiblity: function(e) {
            return {
                observe: [e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e],
                onGet: function(e) {
                    var t = (0,
                            s.default)(e, 2),
                        n = t[0];
                    return t[1] && n
                },
                visible: !0,
                updateView: !0
            }
        },
        initBootstrapSupport: function() {
            return Backbone.Stickit.addHandler({
                    selector: ".btn-group input[type=radio]",
                    update: function(e, t) {
                        if (e.parent(".btn").removeClass("active"),
                            null !== t && "" !== t) {
                            var n = e.filter("[value=" + t + "]");
                            n.parent(".btn").addClass("active"),
                                n.prop("checked", "checked")
                        }
                    }
                }),
                Backbone.Stickit.addHandler({
                    selector: ".btn-group[data-type=boolean] input[type=radio]",
                    onSet: function(e) {
                        return "true" === e
                    }
                })
        }
    };
    a.initBootstrapSupport(),
        t.default = a,
        e.exports = t.default
}, , function(e, t, n) {
    var i = n(18).document;
    e.exports = i && i.documentElement
}, function(e, t, n) {
    var i = n(36),
        r = n(66),
        s = n(79)("IE_PROTO"),
        a = Object.prototype;
    e.exports = Object.getPrototypeOf || function(e) {
        return e = r(e),
            i(e, s) ? e[s] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? a : null
    }
}, function(e, t) {
    e.exports = function(e, t) {
        return {
            value: t,
            done: !!e
        }
    }
}, function(e, t, n) {
    var i = n(65);
    e.exports = Array.isArray || function(e) {
        return "Array" == i(e)
    }
}, function(e, t, n) {
    var i = n(65),
        r = n(23)("toStringTag"),
        s = "Arguments" == i(function() {
            return arguments
        }());
    e.exports = function(e) {
        var t, n, a;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(n = function(e, t) {
            try {
                return e[t]
            } catch (e) {}
        }(t = Object(e), r)) ? n : s ? i(t) : "Object" == (a = i(t)) && "function" == typeof t.callee ? "Arguments" : a
    }
}, function(e, t, n) {
    var i = n(21),
        r = n(12),
        s = n(39);
    e.exports = function(e, t) {
        var n = (r.Object || {})[e] || Object[e],
            a = {};
        a[e] = t(n),
            i(i.S + i.F * s(function() {
                n(1)
            }), "Object", a)
    }
}, function(e, t, n) {
    e.exports = {
        default: n(778),
        __esModule: !0
    }
}, function(e, t, n) {
    e.exports = {
        default: n(781),
        __esModule: !0
    }
}, function(e, t, n) {
    e.exports = {
        default: n(789),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.VEHICLE_TYPES = void 0;
    var i = o(n(6)),
        r = o(n(68)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = t.vehicleTypes,
                i = void 0 === n ? [] : n,
                a = t.subscriptions,
                o = void 0 === a ? [] : a,
                l = t.numPassengers,
                u = void 0 === l ? 0 : l;
            (0,
                s.default)(this, e),
            this._vehicleTypes = i,
                this._subscriptions = o,
                this._numPassengers = u,
                (0,
                    r.default)(this)
        }
        return (0,
                a.default)(e, [{
                key: "equals",
                value: function(e) {
                    return this._numPassengers === e._numPassengers && _.isEqual(this._vehicleTypes.sort(), e._vehicleTypes.sort()) && _.isEqual(this._subscriptions.sort(), e._subscriptions.sort())
                }
            }, {
                key: "with",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return new this.constructor((0,
                        i.default)(this.toJSON(), e))
                }
            }, {
                key: "getNumPassengers",
                value: function() {
                    return this._numPassengers
                }
            }, {
                key: "getVehicleTypes",
                value: function() {
                    return this._vehicleTypes.slice()
                }
            }, {
                key: "getSubscriptions",
                value: function() {
                    return null == this._subscriptions ? [] : this._subscriptions.slice()
                }
            }, {
                key: "hasSubscriptions",
                value: function() {
                    return null != this._subscriptions && this._subscriptions.length > 0
                }
            }, {
                key: "isAllVehicles",
                value: function() {
                    return !this._vehicleTypes || 0 === this._vehicleTypes.length
                }
            }, {
                key: "toJSON",
                value: function() {
                    return {
                        vehicleTypes: this._vehicleTypes,
                        numPassengers: this._numPassengers,
                        subscriptions: this._subscriptions
                    }
                }
            }]),
            e
    }();
    t.default = l,
        t.VEHICLE_TYPES = {
            TRUCK: 0,
            PUBLIC_TRANSPORTATION: 256,
            TAXI: 272,
            BUS: 288,
            RV: 512,
            TOWING_VEHICLE: 768,
            MOTORCYCLE: 1024,
            PRIVATE: 1280,
            HAZARDOUS_MATERIALS: 1536,
            CAV: 1792,
            EV: 1808,
            HYBRID: 1824,
            CLEAN_FUEL: 1840
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.buildChanges = t.generateUpdateActionDescription = void 0;
    var i = d(n(6)),
        r = d(n(9)),
        s = d(n(7)),
        a = n(40),
        o = n(14),
        l = d(n(141)),
        u = d(n(37));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = {
            segment: {
                fromNodeID: !0,
                toNodeID: !0,
                crossroadID: !0,
                flags: !0,
                fwdFlags: !0,
                revFlags: !0,
                scheduleID: !0
            },
            venue: {
                categoryAttributes: !0,
                mergedFrom: !0
            }
        },
        h = {
            segment: {
                geometry: !0
            },
            venue: {
                geometry: !0,
                entryExitPoints: !0
            }
        },
        f = {
            venue: {
                externalProviderIDs: function(e) {
                    return e.map(function(e) {
                        return e instanceof Backbone.Model ? e.get("uuid") : e
                    })
                }
            }
        };

    function p(e, t) {
        return (0,
            s.default)(t).reduce(function(n, i) {
            return c[e] && c[e][i] || !f[e] || !f[e][i] ? n[i] = t[i] : n[i] = f[e][i](t[i]),
                n
        }, {})
    }

    function g(e, t, n, s, o) {
        return n.map(function(n) {
            var l = s[n],
                u = o[n],
                d = h[t] && h[t][n],
                c = {};
            if (Array.isArray(l)) {
                var f, p, g = u && u.length > 0 ? (f = _).without.apply(f, [l].concat((0,
                        r.default)(u))) : l.concat(),
                    v = l && l.length > 0 ? (p = _).without.apply(p, [u].concat((0,
                        r.default)(l))) : u.concat();
                c = {
                    added: (0,
                        a.formatValue)(e, t, n, g),
                    removed: (0,
                        a.formatValue)(e, t, n, v)
                }
            }
            return (0,
                i.default)({
                name: n,
                displayName: (0,
                    a.formatFieldName)(t, n),
                newValue: (0,
                    a.formatValue)(e, t, n, l),
                oldValue: (0,
                    a.formatValue)(e, t, n, u)
            }, c, {
                isVisual: d
            })
        })
    }

    function v(e, t, n, i) {
        n = p(t, n),
            i = p(t, i);
        var r = _.unique((0,
            s.default)(n).concat((0,
            s.default)(i))).filter(function(e) {
            return !(c[t] && c[t][e] || _.isEqual(i[e], n[e]))
        });
        return g(e, t, r, n, i)
    }

    function m(e, t, n, d) {
        var c = v(e, t, n, d);
        return t === o.VENUE ? c.push.apply(c, (0,
                r.default)(function(e, t, n, r) {
                var a = (new l.default).attributes,
                    o = n.categoryAttributes || {},
                    u = r.categoryAttributes || {};
                o = p(t, o),
                    u = p(t, u);
                var d = (0,
                        i.default)({}, a, (0,
                        s.default)(u).reduce(function(e, t) {
                        return (0,
                            i.default)(e, u[t])
                    }, {})),
                    c = (0,
                        i.default)({}, a, (0,
                        s.default)(o).reduce(function(e, t) {
                        return (0,
                            i.default)(e, o[t])
                    }, {}));
                return g(e, t, _.unique((0,
                    s.default)(d).concat((0,
                    s.default)(c))).filter(function(e) {
                    return !_.isEqual(d[e], c[e])
                }), c, d)
            }(e, a.CATEGORY_ATTRIBUTES_TYPE, n, d))) : t === o.SEGMENT && c.push.apply(c, (0,
                r.default)(function(e, t, n, r) {
                var s = new u.default((0,
                        i.default)({}, n)),
                    a = new u.default((0,
                        i.default)({}, r)),
                    o = s.getFlagAttributes(),
                    l = a.getFlagAttributes();
                return v(e, t, o = p(t, o), l = p(t, l))
            }(e, o.SEGMENT, n, d))),
            c
    }
    t.generateUpdateActionDescription = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                n = function(e) {
                    var t = e.object.type;
                    return m(e.model, t, (0,
                        i.default)({}, e.newAttributes), (0,
                        i.default)({}, e.oldAttributes))
                }(e);
            return (0,
                a.formatUpdateActionDescription)(n, e, t)
        },
        t.buildChanges = m
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(10),
        s = (i = r) && i.__esModule ? i : {
            default: i
        },
        a = n(142);
    t.default = Backbone.Model.extend({
            defaults: function() {
                return {
                    canExitWhileClosed: !1,
                    numberOfSpots: null,
                    estimatedNumberOfSpots: null,
                    costType: a.UNKNOWN,
                    lotType: [],
                    paymentType: [],
                    parkingType: null,
                    hasTBR: !1
                }
            },
            initialize: function() {
                this.attributes.numberOfSpots && this.attributes.numberOfSpots > 0 && null === this.attributes.estimatedNumberOfSpots && (this.attributes.estimatedNumberOfSpots = this._getSpotsEstimateValue())
            },
            clone: function() {
                var e = $.extend(!0, {}, this.attributes);
                return new this.constructor(e)
            },
            _getSpotsEstimateValue: function() {
                var e = this.attributes.numberOfSpots,
                    t = a.SPOTS_ESTIMATE,
                    n = null;
                if (null === e)
                    return n;
                for (var i = 0; i < t.length; i++) {
                    var r = t[i],
                        o = (0,
                            s.default)(r.range, 2),
                        l = o[0],
                        u = o[1];
                    if (e >= l && e <= u) {
                        n = r.value;
                        break
                    }
                }
                return n
            }
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.UNKNOWN = "UNKNOWN";
    var i = t.PARKING_TYPE_PUBLIC = "PUBLIC";
    t.PARKING_TYPE = [i, "RESTRICTED", "PRIVATE"],
        t.COST_TYPE = ["FREE", "LOW", "MODERATE", "EXPENSIVE"],
        t.PAYMENT_TYPE = ["CASH", "CHECKS", "CREDIT", "DEBIT_CARD", "PERMIT", "MEMBERSHIP", "PREPAID", "PARKING_APP", "DIGITAL_WALLET", "SMS_CALL", "ELECTRONIC_PASS"],
        t.LOT_TYPE = ["STREET_LEVEL", "STREET_LEVEL_COVERED", "MULTI_LEVEL", "UNDERGROUND"],
        t.SPOTS_ESTIMATE = [{
            value: "R_1_TO_10",
            range: [1, 10]
        }, {
            value: "R_11_TO_30",
            range: [11, 30]
        }, {
            value: "R_31_TO_60",
            range: [31, 60]
        }, {
            value: "R_61_TO_100",
            range: [61, 100]
        }, {
            value: "R_101_TO_300",
            range: [101, 300]
        }, {
            value: "R_301_TO_600",
            range: [301, 600]
        }, {
            value: "R_600_PLUS",
            range: [601, 1 / 0]
        }]
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = M(n(6)),
        r = M(n(10)),
        s = M(n(61)),
        a = M(n(2)),
        o = M(n(0)),
        l = M(n(3)),
        u = M(n(1)),
        d = M(n(4)),
        c = M(n(45)),
        h = M(n(17)),
        f = n(193),
        p = M(n(105)),
        g = n(90),
        v = M(n(196)),
        m = M(n(896)),
        y = M(n(383)),
        b = M(n(89)),
        w = M(n(13)),
        k = n(142),
        E = M(n(141));

    function M(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var S = function(e) {
        function t(e, n) {
            (0,
                o.default)(this, t);
            var i = (0,
                l.default)(this, (t.__proto__ || (0,
                a.default)(t)).call(this, e, n));
            return i._originalResidential = i.attributes.residential,
                i
        }
        return (0,
                d.default)(t, e),
            (0,
                u.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        name: "",
                        description: "",
                        rank: 0,
                        lockRank: 0,
                        url: null,
                        phone: null,
                        brand: null,
                        residential: !1,
                        openingHours: [],
                        categories: [],
                        categoryAttributes: this._defaultCategoryAttributes(),
                        services: [],
                        entryExitPoints: [],
                        images: [],
                        venueUpdateRequests: [],
                        aliases: [],
                        approved: !0,
                        externalProviderIDs: [],
                        adLocked: !1,
                        permissions: h.default.ALL_PERMISSIONS
                    }
                }
            }, {
                key: "_defaultCategoryAttributes",
                value: function() {
                    var e = {};
                    if (this.isParkingLot()) {
                        var t = _.result(E.default.prototype, "defaults");
                        this.isNew() && (t.parkingType = k.PARKING_TYPE_PUBLIC),
                            e[g.PARKING_LOT] = t
                    }
                    return e
                }
            }]),
            (0,
                u.default)(t, [{
                key: "parse",
                value: function(e) {
                    c.default.prototype.parse.apply(this, arguments),
                        this.parseUpdateRequests(e)
                }
            }, {
                key: "merge",
                value: function(e) {
                    _.defaults(e, this.defaults()),
                        c.default.prototype.merge.apply(this, arguments),
                        this._originalResidential = this.attributes.residential
                }
            }, {
                key: "parseUpdateRequests",
                value: function(e) {
                    if (e.venueUpdateRequests) {
                        var t = h.default.prototype.arePropertiesEditable.apply(this),
                            n = new m.default({
                                isInEditArea: t,
                                isAdLockedEditable: W.loginManager.canEditAdLockedPlaceUpdates(),
                                isEditable: this.areUpdateRequestsEditable()
                            });
                        e.venueUpdateRequests = e.venueUpdateRequests.map(function(e) {
                            return e.place = this,
                                n.build(e)
                        }, this)
                    }
                }
            }, {
                key: "canMergeTo",
                value: function() {
                    return !this.isNew()
                }
            }, {
                key: "hasPendingMerge",
                value: function() {
                    return Boolean(this._pendingMerge)
                }
            }, {
                key: "setPendingMerge",
                value: function(e) {
                    this._pendingMerge = Boolean(e)
                }
            }, {
                key: "isDeletable",
                value: function() {
                    return this.PERMISSIONS.DELETE && this.isAllowed(this.PERMISSIONS.DELETE) && !this.hasPendingMerge()
                }
            }, {
                key: "isAdLocked",
                value: function() {
                    return this.attributes.adLocked
                }
            }, {
                key: "getCategorySet",
                value: function() {
                    return this.attributes.categories.reduce(function(e, t) {
                        return e[t] = !0,
                            e
                    }, {})
                }
            }, {
                key: "getMainCategory",
                value: function() {
                    return this._categoryToParentMap || (this._categoryToParentMap = this._generateCategoryToParentMap()),
                        0 === this.attributes.categories.length ? null : this._categoryToParentMap[this.attributes.categories[0]]
                }
            }, {
                key: "_generateCategoryToParentMap",
                value: function() {
                    var e = {};
                    return (0,
                            s.default)(W.Config.venues.subcategories).forEach(function(t) {
                            var n = (0,
                                    r.default)(t, 2),
                                i = n[0],
                                s = n[1];
                            e[i] = i,
                                s.forEach(function(t) {
                                    e[t] = i
                                })
                        }),
                        e
                }
            }, {
                key: "getServiceSet",
                value: function() {
                    return this.attributes.services.reduce(function(e, t) {
                        return e[t] = !0,
                            e
                    }, {})
                }
            }, {
                key: "getAddress",
                value: function() {
                    return b.default.fromStreetID(this.attributes.streetID, this.model, {
                        houseNumber: this.attributes.houseNumber
                    })
                }
            }, {
                key: "is2D",
                value: function() {
                    return this.geometry.components && this.geometry.components.every(function(e) {
                        return e.components.length > 3
                    })
                }
            }, {
                key: "isPoint",
                value: function() {
                    return "OpenLayers.Geometry.Point" === this.geometry.CLASS_NAME
                }
            }, {
                key: "isGasStation",
                value: function() {
                    return Boolean(this.getCategorySet().GAS_STATION)
                }
            }, {
                key: "getPolygonGeometry",
                value: function() {
                    return this.isPoint() ? w.default.pointToSquarePolygon(this.geometry, 20) : this.geometry.clone()
                }
            }, {
                key: "getPointGeometry",
                value: function() {
                    return this.isPoint() ? this.geometry.clone() : w.default.polygonToPoint(this.geometry)
                }
            }, {
                key: "getLockRank",
                value: function() {
                    return Math.max(this.attributes.rank, this.attributes.lockRank)
                }
            }, {
                key: "getNavigationPoints",
                value: function() {
                    return this.attributes.entryExitPoints
                }
            }, {
                key: "isApproved",
                value: function() {
                    return this.attributes.approved
                }
            }, {
                key: "getOpeningHours",
                value: function() {
                    return new f.Collection(this.attributes.openingHours.map(function(e) {
                        return new f.OpeningHour(e)
                    }))
                }
            }, {
                key: "hasUpdateRequests",
                value: function() {
                    return this.attributes.venueUpdateRequests && this.attributes.venueUpdateRequests.length > 0
                }
            }, {
                key: "requiresModeration",
                value: function() {
                    return this.model.loginManager.getUserRank() < this.attributes.lockRank
                }
            }, {
                key: "getImagesByUserId",
                value: function(e) {
                    return _.filter(this.attributes.images, function(t) {
                        return t.get("creatorUserId") === e
                    })
                }
            }, {
                key: "getImageById",
                value: function(e) {
                    return _.find(this.attributes.images, function(t) {
                        return t.id === e
                    })
                }
            }, {
                key: "arePropertiesEditable",
                value: function() {
                    return h.default.prototype.arePropertiesEditable.apply(this, arguments) && this.attributes.approved
                }
            }, {
                key: "areUpdateRequestsEditable",
                value: function() {
                    return this.isAllowed(this.PERMISSIONS.EDIT_UPDATE_REQUESTS)
                }
            }, {
                key: "areExternalProvidersEditable",
                value: function() {
                    return this.isAllowed(this.PERMISSIONS.EDIT_EXTERNAL_PROVIDERS)
                }
            }, {
                key: "hasOpenUpdateRequests",
                value: function() {
                    return this.attributes.venueUpdateRequests.some(function(e) {
                        return null === e.get("approved")
                    })
                }
            }, {
                key: "canConvertToPublic",
                value: function() {
                    return !1 === this._originalResidential
                }
            }, {
                key: "isParkingLot",
                value: function() {
                    var e = this.attributes.categories;
                    return Array.isArray(e) && e[0] === g.PARKING_LOT
                }
            }, {
                key: "isResidential",
                value: function() {
                    return this.attributes.residential
                }
            }]),
            t
    }(c.default);
    (0,
        i.default)(S.prototype, {
        nested: {
            geometry: OL.Geometry,
            images: p.default,
            entryExitPoints: y.default,
            externalProviderIDs: v.default
        },
        PERMISSIONS: {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4,
            EDIT_UPDATE_REQUESTS: 8,
            EDIT_EXTERNAL_PROVIDERS: 16
        },
        CLASS_NAME: "Waze.Feature.Vector.Landmark"
    }),
    t.default = S,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.NOTIFICATION_TYPES = void 0;
    var i, r = n(370);
    var s = {
            PRIVATE_FORUM_MESSAGE: "PRIVATE_FORUM_MESSAGE",
            DISCOVER_COMMUNITY_FORUM: "DISCOVER_COMMUNITY_FORUM",
            DISCOVER_LOCAL_WIKI: "DISCOVER_LOCAL_WIKI",
            FIRST_TIME_VIDEOS: "FIRST_TIME_VIDEOS",
            CHECK_YOUR_NEIGHBORHOOD: "CHECK_YOUR_NEIGHBORHOOD",
            USER_FIRST_EDIT: "USER_FIRST_EDIT",
            MENTEE_CLICKED_LINK: "MENTEE_CLICKED_LINK",
            MENTEE_RETURNED_TO_WME: "MENTEE_RETURNED_TO_WME",
            MENTOR_ENCOURAGMENT: "MENTOR_ENCOURAGMENT",
            MENTOR_FEEDBACK_REQUEST: "MENTOR_FEEDBACK_REQUEST",
            MENTOR_PRIVATE_MESSAGE: "MENTOR_PRIVATE_MESSAGE"
        },
        a = ((i = r) && i.__esModule ? i : {
            default: i
        }).default.extend({
            TYPE: s,
            GROUPS: {
                PRIVATE_FORUM_MESSAGE: [s.PRIVATE_FORUM_MESSAGE],
                FIRST_TIME_MESSAGES: [s.DISCOVER_COMMUNITY_FORUM, s.DISCOVER_LOCAL_WIKI, s.FIRST_TIME_VIDEOS, s.CHECK_YOUR_NEIGHBORHOOD],
                MENTORING: [s.USER_FIRST_EDIT, s.MENTEE_CLICKED_LINK, s.MENTEE_RETURNED_TO_WME, s.MENTOR_ENCOURAGMENT, s.MENTOR_FEEDBACK_REQUEST, s.MENTOR_PRIVATE_MESSAGE]
            },
            defaults: function() {
                return {
                    type: null,
                    timestamp: null,
                    parameters: {}
                }
            },
            isForumMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.PRIVATE_FORUM_MESSAGE.indexOf(e) > -1
            },
            isFirstTimeMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.FIRST_TIME_MESSAGES.indexOf(e) > -1
            },
            isMentoringMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.MENTORING.indexOf(e) > -1
            },
            isNotification: function() {
                return !this.isForumMessage() && !this.isFirstTimeMessage() && !this.isMentoringMessage()
            },
            getParameter: function(e) {
                return this.attributes.parameters[e]
            }
        });
    t.NOTIFICATION_TYPES = s,
        t.default = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.WRITABLE_ATTRIBUTES = t.PERMISSIONS = t.CATEGORIES = t.ENGLISH_LOCALE = t.MTE_LOCALES = void 0;
    var i = b(n(6)),
        r = b(n(180)),
        s = b(n(10)),
        a = b(n(901)),
        o = b(n(61)),
        l = b(n(25)),
        u = b(n(2)),
        d = b(n(0)),
        c = b(n(1)),
        h = b(n(3)),
        f = b(n(8)),
        p = b(n(4)),
        g = b(n(17)),
        v = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(14)),
        m = b(n(45)),
        y = b(n(89));

    function b(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var w = {
            el: "ελληνικά"
        },
        k = {
            FESTIVAL: "FESTIVAL",
            PARADE: "PARADE",
            CONCERT: "CONCERT",
            SPORTING_EVENT: "SPORTING_EVENT",
            STADIUM_GAMES: "STADIUM_GAMES",
            VIP_VISIT: "VIP_VISIT",
            CRISIS: "CRISIS",
            CONSTRUCTION: "CONSTRUCTION",
            OTHER: "OTHER"
        },
        E = {
            EDIT_PROPERTIES: 1,
            MANIPULATE_PARTNERS: 2,
            PUBLISH: 4,
            EDIT_TWEET_TEXT: 16
        },
        M = ["id", "category", "cityID", "comment", "startDate", "endDate", "names", "url", "partners", "tweetText"],
        S = function(e) {
            function t(e, n) {
                (0,
                    d.default)(this, t);
                var i = (0,
                    h.default)(this, (t.__proto__ || (0,
                    u.default)(t)).call(this, e));
                return m.default.prototype.initializeAttributes.call(i, e, n),
                    i.type = v.MTE,
                    i.writableAttributes = M,
                    i
            }
            return (0,
                    p.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            id: null,
                            active: null,
                            category: null,
                            cityID: null,
                            comment: null,
                            contributors: [],
                            createdBy: null,
                            createdOn: null,
                            description: null,
                            startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                            endDate: null,
                            names: [],
                            permissions: g.default.ALL_PERMISSIONS & ~E.EDIT_TWEET_TEXT,
                            updatedBy: null,
                            updatedOn: null,
                            url: null,
                            published: !1,
                            ready: !1,
                            uniqueName: null,
                            partners: [],
                            tweetText: null,
                            twitterAccountsUrls: []
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        var e = (0,
                                f.default)(t.prototype.__proto__ || (0,
                                u.default)(t.prototype), "clone", this).apply(this, arguments),
                            n = $.extend(!0, [], this.get("names"));
                        return e.set({
                                names: n
                            }),
                            e.model = this.model,
                            e
                    }
                }, {
                    key: "getAddress",
                    value: function() {
                        return y.default.fromCityID(this.attributes.cityID, this.model)
                    }
                }, {
                    key: "getEnglishName",
                    value: function() {
                        var e = _.where(this.attributes.names, {
                            locale: this.ENGLISH_LOCALE
                        });
                        return e.length > 0 ? e[0].value : null
                    }
                }, {
                    key: "getLocale",
                    value: function() {
                        var e = this._getLocalNameObject();
                        return null !== e ? e.locale : null
                    }
                }, {
                    key: "getLocalName",
                    value: function() {
                        var e = this._getLocalNameObject();
                        return null !== e ? e.value : null
                    }
                }, {
                    key: "_getLocalNameObject",
                    value: function() {
                        var e = this,
                            t = _.reject(this.attributes.names, function(t) {
                                return t.locale === e.ENGLISH_LOCALE
                            });
                        return t.length > 0 ? t[0] : null
                    }
                }, {
                    key: "canPublish",
                    value: function() {
                        return !this.isNew() && this.get("ready") && this.isAllowed(E.PUBLISH)
                    }
                }, {
                    key: "canEditPartners",
                    value: function() {
                        return this.isAllowed(E.MANIPULATE_PARTNERS)
                    }
                }, {
                    key: "canEditTweetText",
                    value: function() {
                        return this.isAllowed(E.EDIT_TWEET_TEXT)
                    }
                }]),
                t
        }(Backbone.Model);

    function T(e, t) {
        for (var n = arguments.length, i = Array(n > 2 ? n - 2 : 0), u = 2; u < n; u++)
            i[u - 2] = arguments[u];
        var d = !0,
            c = !1,
            h = void 0;
        try {
            for (var f, p = (0,
                    l.default)((0,
                    o.default)((g = _).omit.apply(g, [(0,
                    a.default)(t)].concat(i)))); !(d = (f = p.next()).done); d = !0) {
                var g, v = (0,
                        s.default)(f.value, 2),
                    m = v[0],
                    y = v[1];
                (0,
                    r.default)(e, m, y)
            }
        } catch (e) {
            c = !0,
                h = e
        } finally {
            try {
                !d && p.return && p.return()
            } finally {
                if (c)
                    throw h
            }
        }
    }
    T(S.prototype, g.default.prototype, "clone", "initialize", "constructor"),
        T(S.prototype, m.default.prototype, "clone", "initialize", "constructor"),
        (0,
            i.default)(S.prototype, {
            PERMISSIONS: E,
            CATEGORIES: k,
            MTE_LOCALES: w,
            ENGLISH_LOCALE: "en"
        }),
        t.MTE_LOCALES = w,
        t.ENGLISH_LOCALE = "en",
        t.CATEGORIES = k,
        t.PERMISSIONS = E,
        t.WRITABLE_ATTRIBUTES = M,
        t.default = S
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(185)),
        u = d(n(905));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        transactionID: null,
                        actionType: null,
                        date: null,
                        userID: null,
                        objects: []
                    }
                }
            }, {
                key: "getObject",
                value: function(e, t) {
                    return this.attributes.objects.filter(function(n) {
                        return n.attributes.objectID === t && n.attributes.objectType === e
                    })[0]
                }
            }, {
                key: "nested",
                get: function() {
                    return {
                        objects: u.default
                    }
                }
            }]),
            t
    }(Backbone.Model);
    c.ACTIONS = {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        _.extend(c.prototype, l.default),
        t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            (0,
                i.default)(this, e),
            this._id = t,
                Array.isArray(n) || (n = [n]),
                this._strategies = n,
                this._state = !1
        }
        return (0,
                r.default)(e, [{
                key: "getId",
                value: function() {
                    return this._id
                }
            }, {
                key: "setState",
                value: function(e) {
                    this._state = e
                }
            }, {
                key: "getState",
                value: function() {
                    return this._state
                }
            }, {
                key: "isLeaf",
                value: function() {
                    return !0
                }
            }, {
                key: "writeStateToApp",
                value: function(e, t) {
                    this._strategies.forEach(function(n) {
                        return n.writeStateToApp(e, t)
                    })
                }
            }], [{
                key: "of",
                value: function(t, n) {
                    return new e(t, n)
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(6)),
        r = f(n(2)),
        s = f(n(0)),
        a = f(n(1)),
        o = f(n(3)),
        l = f(n(4)),
        u = f(n(45)),
        d = f(n(17)),
        c = f(n(13)),
        h = n(30);

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        subject: "",
                        body: "",
                        geometry: null,
                        endDate: null,
                        lockRank: 0,
                        isFollowing: !1,
                        createdOn: null,
                        createdBy: null,
                        updatedBy: null,
                        updatedOn: null,
                        conversation: [],
                        permissions: d.default.ALL_PERMISSIONS,
                        id: null
                    }
                }
            }, {
                key: "isPoint",
                value: function() {
                    return "OpenLayers.Geometry.Point" === this.geometry.CLASS_NAME
                }
            }, {
                key: "getPolygonGeometry",
                value: function() {
                    return this.isPoint() ? c.default.pointToSquarePolygon(this.geometry, 50) : this.geometry.clone()
                }
            }, {
                key: "getPointGeometry",
                value: function() {
                    return this.isPoint() ? this.geometry.clone() : c.default.polygonToPoint(this.geometry)
                }
            }, {
                key: "getComments",
                value: function() {
                    return new Backbone.Collection(this.attributes.conversation)
                }
            }, {
                key: "isFollowing",
                value: function() {
                    return this.attributes.isFollowing
                }
            }, {
                key: "setFollowing",
                value: function(e) {
                    var t = this;
                    return (0,
                        h.httpPost)(W.Config.paths.mapCommentFollow, {
                        mapCommentID: this.getID(),
                        follow: e
                    }).then(function() {
                        t.attributes.isFollowing = e
                    })
                }
            }, {
                key: "addComment",
                value: function(e) {
                    var t = this;
                    return (0,
                        h.httpPost)(W.Config.paths.mapCommentConversation, {
                        mapCommentID: this.getID(),
                        text: e
                    }).then(function(e) {
                        return e.isAutoFollowed && (t.attributes.isFollowing = !0),
                            t.attributes.conversation.push(e.comment),
                            new Backbone.Model(e.comment)
                    })
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(p.prototype, {
        MAX_SUBJECT_LENGTH: 30,
        MAX_BODY_LENGTH: 2e3,
        nested: {
            geometry: OL.Geometry
        },
        PERMISSIONS: {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4
        }
    }),
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(11)),
        u = d(n(91));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e, n, s, o) {
            (0,
                r.default)(this, t);
            var l = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, o));
            return l.street = null,
                l.city = n,
                l.name = e,
                l.isEmpty = s,
                l
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = null,
                        t = void 0,
                        n = !1;
                    (e = this.isEmpty ? this.model.streets.getByAttributes({
                        isEmpty: !0,
                        cityID: this.city.getID()
                    })[0] : this.model.streets.getByAttributes({
                        name: this.name,
                        cityID: this.city.getID()
                    })[0]) || (this.isEmpty || this.name,
                        e = (t = new u.default(null, this.model.streets, {
                            name: this.isEmpty ? "" : this.name,
                            isEmpty: this.isEmpty,
                            cityID: this.city.getID()
                        })).object,
                        this.doSubAction(t),
                        n = !0),
                    this.street = e,
                        n || (this.dontSerialize = !0)
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return this.street.isNew() ? [this.street.getUniqueID()] : []
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = m(n(9)),
        r = m(n(2)),
        s = m(n(0)),
        a = m(n(1)),
        o = m(n(3)),
        l = m(n(8)),
        u = m(n(4)),
        d = m(n(20)),
        c = m(n(92)),
        h = m(n(397)),
        f = m(n(1066)),
        p = n(14),
        g = n(40),
        v = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54));

    function m(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var y = function(e) {
        function t(e, n, i, a) {
            (0,
                s.default)(this, t);
            var l = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e, a));
            return l.segment = e,
                l.changedState = !1,
                l.oldGeometry = n === e.geometry ? n.clone() : n,
                l.newGeometry = i === e.geometry ? i.clone() : i,
                l
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    this.segment.getID();
                    var e = this.oldGeometry.getVertices();
                    if (this.replaceGeometry(),
                        this.segment.isPoint())
                        this.doSubAction(new c.default(this.segment));
                    else {
                        var t = this.segment.geometry.getVertices();
                        this._firstVertexChanged(e, t) && this.updateEndPoint(this.segment.attributes.fromNodeID, this.touching.fromVertex, !0),
                            this._lastVertexChanged(e, t) && this.updateEndPoint(this.segment.attributes.toNodeID, this.touching.toVertex, !1),
                            this._firstComponentChanged(e, t) && this.segment.hasFromNode() && this._resetNodeLaneAngles(this.segment.getFromNode()),
                            this._lastComponentChanged(e, t) && this.segment.hasToNode() && this._resetNodeLaneAngles(this.segment.getToNode()),
                            this.segment.state || (this.changedState = !0,
                                this.segment.state = OpenLayers.State.UPDATE),
                            this.model.segments.changed(this.segment)
                    }
                }
            }, {
                key: "_firstVertexChanged",
                value: function(e, t) {
                    return this._vertexChanged(e, t, 0)
                }
            }, {
                key: "_lastVertexChanged",
                value: function(e, t) {
                    return this._vertexChanged(e, t, -1)
                }
            }, {
                key: "_firstComponentChanged",
                value: function(e, t) {
                    return this._vertexChanged(e, t, 0) || this._vertexChanged(e, t, 1)
                }
            }, {
                key: "_lastComponentChanged",
                value: function(e, t) {
                    return this._vertexChanged(e, t, -1) || this._vertexChanged(e, t, -2)
                }
            }, {
                key: "_vertexChanged",
                value: function(e, t, n) {
                    var i = n,
                        r = n;
                    return n < 0 && (i = e.length + n,
                            r = t.length + n),
                        !e[i].equals(t[r])
                }
            }, {
                key: "_resetNodeLaneAngles",
                value: function(e) {
                    v.lanesEnabledOnNode(this.model, e) && this.doSubAction(new f.default(e))
                }
            }, {
                key: "replaceGeometry",
                value: function() {
                    this.segment.geometry.components.length = 0,
                        this.newGeometry.components.forEach(function(e) {
                            this.segment.geometry.addComponent(e.clone())
                        }, this),
                        this.segment.geometry.calculateBounds(),
                        this.segment.bounds = this.segment.geometry.bounds
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.changedState && (this.segment.state = null),
                        this.segment.geometry.components.length = 0,
                        this.oldGeometry.components.forEach(function(e) {
                            this.segment.geometry.addComponent(e.clone())
                        }, this),
                        this.segment.geometry.calculateBounds(),
                        this.segment.bounds = this.segment.geometry.bounds,
                        this.model.segments.changed(this.segment),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.segment.geometry.components.length = 0,
                        this.newGeometry.components.forEach(function(e) {
                            this.segment.geometry.addComponent(e.clone())
                        }, this),
                        this.segment.geometry.calculateBounds(),
                        this.segment.bounds = this.segment.geometry.bounds,
                        this.changedState && (this.segment.state = OpenLayers.State.UPDATE),
                        this.model.segments.changed(this.segment),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = {};
                    return e.id = this.segment.getID(),
                        e.geometry = this.newGeometry, {
                            _objectType: p.SEGMENT,
                            action: d.default.TYPE.UPDATE,
                            attributes: e
                        }
                }
            }, {
                key: "getBounds",
                value: function() {
                    return this.newGeometry.getBounds().clone()
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    var e = _.flatten(this.subActions.map(function(e) {
                        return e.getFocusFeatures()
                    }));
                    return _.uniq([this.segment].concat((0,
                        i.default)(e)))
                }
            }, {
                key: "generateDescription",
                value: function() {
                    (0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "generateDescription", this).call(this),
                        this._description || (this._description = (0,
                            g.formatActionAddressDescription)(this.segment, "UpdateSegmentGeometry"))
                }
            }]),
            t
    }(h.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(9)),
        r = v(n(6)),
        s = v(n(2)),
        a = v(n(0)),
        o = v(n(1)),
        l = v(n(3)),
        u = v(n(8)),
        d = v(n(4)),
        c = v(n(20)),
        h = v(n(73)),
        f = v(n(11)),
        p = n(14),
        g = v(n(379));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = {
            permissions: 2147483647
        },
        _ = function(e) {
            function t(e, n, i) {
                (0,
                    a.default)(this, t);
                var r = (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).call(this, i));
                return r.node = null,
                    r.point = e.clone(),
                    delete r.point.parent,
                    r.segments = n,
                    r.options = i,
                    r.nodeAttributes = {},
                    r
            }
            return (0,
                    d.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "createNode",
                    value: function(e) {
                        var t = new g.default({
                            geometry: e
                        });
                        return t.attributes || (t.attributes = {}),
                            (0,
                                r.default)(t.attributes, m, t.attributes),
                            t.attributes.segIDs = [],
                            t.state = OpenLayers.State.INSERT,
                            t.setID(this.model.nodes.generateUniqueID()),
                            $.extend(!0, this.nodeAttributes, t.attributes),
                            t
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (this.node = this.createNode(this.point.clone()),
                            this.node.getID(),
                            this.model.nodes.put(this.node),
                            null !== this.segments)
                            for (var e = 0, t = this.segments.length; e < t; e++)
                                this.doSubAction(new h.default(this.node, this.segments[e], this.options))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        (0,
                            u.default)(t.prototype.__proto__ || (0,
                            s.default)(t.prototype), "undoAction", this).call(this),
                            this.model.nodes.remove(this.node)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.nodes.put(this.node),
                            (0,
                                u.default)(t.prototype.__proto__ || (0,
                                s.default)(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = this.nodeAttributes;
                        return e.id = this.node.getID(),
                            e.geometry = this.point, {
                                _objectType: p.NODE,
                                action: c.default.TYPE.ADD,
                                attributes: e
                            }
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.node]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.AddNode")
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = [this.node.getUniqueID()];
                        return this.segments && e.push.apply(e, (0,
                                i.default)(this.segments.map(function(e) {
                                return e.getUniqueID()
                            }))),
                            [].concat(e, (0,
                                i.default)((0,
                                u.default)(t.prototype.__proto__ || (0,
                                s.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }]),
                t
        }(f.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(20));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            (0,
                r.default)(this, t);
            var s = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, n));
            return s.object = e,
                s.repo = null,
                s.origState = null,
                s
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.object]
                }
            }, {
                key: "doAction",
                value: function() {
                    return this.repo = this.model.getRepository(this.object.type),
                        null === this.repo ? (console.error("Error deleting object: could not find an object repository for type " + this.object.type),
                            !1) : (this.origState = this.object.state,
                            this.removeObjct(),
                            !0)
                }
            }, {
                key: "removeObjct",
                value: function() {
                    this.object.state === OpenLayers.State.INSERT ? this.repo.remove(this.object) : (this.object.state = OpenLayers.State.DELETE,
                        this.repo.changed(this.object))
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.object.type,
                        this.object.getID(),
                        this.object.state = this.origState,
                        this.object.state === OpenLayers.State.INSERT ? this.repo.put(this.object) : this.repo.changed(this.object)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.removeObjct()
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: this.object.type,
                        action: l.default.TYPE.DELETE,
                        attributes: {
                            id: this.object.getID()
                        }
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.object.getUniqueID()]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = I18n.t("objects." + this.object.type + ".name");
                    this._description = I18n.t("save.changes_log.actions.DeleteObject", {
                        type: e
                    })
                }
            }]),
            t
    }(l.default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.STATE_CHANGED = "STATE_CHANGED"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(126),
        r = n(207);

    function s(e) {
        return e === i.ROOT_PATH_LOCALE_CODE ? "/editor" + window.location.search : "/" + e + "/editor" + window.location.search
    }

    function a(e) {
        window.location.href = s(e)
    }
    t.documentLocaleMatches = function(e) {
            return window.I18n.locale === e
        },
        t.getURLForLocale = s,
        t.redirectToLocalePage = a,
        t.redirectToErrorPage = function() {
            window.location.href = "/500.html"
        },
        t.setLocaleAndRedirect = function(e) {
            r.setLocaleCode(e),
                a(e)
        },
        t.setRegionCodeAndReload = function(e) {
            r.setRegionCode(e),
                window.location.href = window.location.pathname
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(32),
        r = OL.Class(OL.Layer.Vector, {
            repo: null,
            _featureMap: null,
            model: null,
            initialize: function(e, t, n, i) {
                this.model = t,
                    this.repo = n,
                    OL.Layer.Vector.prototype.initialize.apply(this, [e, i]),
                    this._featureMap = {},
                    _(this.repo).isArray() || (this.repo = [this.repo]);
                for (var r = 0; r < this.repo.length; r++) {
                    var s = this.repo[r];
                    this.registerRepoEvents(s)
                }
            },
            registerRepoEvents: function(e) {
                e.on(i.ADDED, this.onFeaturesAdded, this),
                    e.on(i.CHANGED, this.onFeaturesChanged, this),
                    e.on(i.REMOVED, this.onFeaturesRemoved, this)
            },
            unregisterRepoEvents: function(e) {
                e.off(i.ADDED, this.onFeaturesAdded, this),
                    e.off(i.CHANGED, this.onFeaturesChanged, this),
                    e.off(i.REMOVED, this.onFeaturesRemoved, this)
            },
            destroy: function() {
                for (var e = 0; e < this.repo.length; e++) {
                    var t = this.repo[e];
                    this.unregisterRepoEvents(t)
                }
                return OL.Layer.Vector.prototype.destroy.apply(this)
            },
            getVector: function(e) {
                return this._featureMap[e.getID()] || null
            },
            onFeaturesAdded: function(e) {
                var t = this;
                return e = e.map(function(e) {
                        var n = new OL.Feature.Vector(e.geometry);
                        return n.model = e,
                            t._featureMap[e.getID()] = n,
                            t.fixRenderIntent(n),
                            n
                    }),
                    this.addFeatures(e)
            },
            _getFeatureByPrevId: function(e) {
                var t = e._prevID;
                if (!t)
                    return null;
                var n = this._featureMap[t];
                return n ? (this._featureMap[t] = void 0,
                    this._featureMap[e.getID()] = n,
                    n) : null
            },
            onFeaturesChanged: function(e) {
                for (var t = [], n = [], i = [], r = 0; r < e.length; r++) {
                    var s = e[r],
                        a = this._featureMap[s.getID()] || this._getFeatureByPrevId(s);
                    if (a)
                        this.fixRenderIntent(a),
                        this._updateFeatureModel(a, s),
                        s.hidden ? (this._featureMap[s.getID()] = void 0,
                            t.push(a)) : (a.geometry = s.geometry,
                            this.drawFeature(a)),
                        (s.isDeleted() || s.hidden) && n.push(a);
                    else {
                        var o = new OL.Feature.Vector(s.geometry);
                        o.model = s,
                            i.push(o),
                            this._featureMap[s.getID()] = o
                    }
                }
                return W.selectionManager.unselectFeatures(n),
                    this.removeFeatures(t),
                    this.addFeatures(i)
            },
            onFeaturesRemoved: function(e) {
                var t = this,
                    n = e.map(function(e) {
                        var n = t._featureMap[e.getID()];
                        return t._featureMap[e.getID()] = void 0,
                            n
                    });
                n = _(n).filter(function(e) {
                    return null != e
                });
                var i = _(n).filter(function(e) {
                    return W.selectionManager.isSelected(e)
                });
                return W.selectionManager.unselectFeatures(i),
                    this.removeFeatures(n)
            },
            fixRenderIntent: function(e) {
                e.model.isDeleted() ? e.renderIntent = "delete" : "delete" === e.renderIntent && (e.renderIntent = e.model.isSelected() ? "select" : "default")
            },
            _updateFeatureModel: function(e, t) {
                null != t.geometry && null != e.model.geometry && (t.geometry.id = e.model.geometry.id),
                    e.model = t
            },
            CLASS_NAME: "Waze.Layer.FeatureLayer"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(87)),
        r = s(n(144));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Backbone.Collection.extend({
        model: r.default,
        initialize: function() {
            this.serializer = new i.default
        },
        url: function() {
            return W.Config.paths.notifications
        },
        parse: function(e) {
            return this.serializer.read(e),
                _.filter(e.notifications.objects, function(e) {
                    return e.isNotification()
                })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(219),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend({
        className: function() {
            return "feed-item feed-notification"
        },
        template: "Waze/MapEditor/UI/Modules/Feed/templates/notification_item",
        serializeData: function() {
            return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                title: this._getValueOrTemplate("title"),
                shortMessage: this._getValueOrTemplate("shortMessage")
            })
        },
        _getValueOrTemplate: function(e) {
            var t = this.model.getParameter(e);
            if (null == t) {
                var n = "feed.notifications.type." + this.model.attributes.type + "." + e;
                void 0 !== I18n.lookup(n) && (t = I18n.translate(n, this.model.attributes.parameters))
            }
            return t
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(7)),
        r = u(n(25)),
        s = u(n(16)),
        a = u(n(219)),
        o = u(n(70)),
        l = u(n(117));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
            return {
                observe: "state",
                onGet: function(t) {
                    return t === e
                }
            }
        },
        c = a.default.extend({
            className: function() {
                return "feed-item feed-issue feed-issue-" + this.model.getFeedIssueState()
            },
            template: "Waze/MapEditor/UI/Modules/Feed/templates/issue_item",
            bindings: {
                ":el": {
                    classes: {
                        modified: "modified",
                        "feed-issue-open": d("open"),
                        "feed-issue-rejected": d("rejected"),
                        "feed-issue-solved": d("solved"),
                        "feed-issue-approved": d("approved"),
                        "feed-issue-not-identified": d("not-identified")
                    }
                }
            },
            onRender: function() {
                this.stickit()
            },
            getType: function() {
                return null
            },
            getStateClass: function() {
                return ""
            },
            serializeData: function() {
                return {
                    type: this.getType(),
                    motivation: this._getMotivationText(),
                    place: this._getPlaceText(),
                    street: this.model.get("streetText"),
                    city: this.model.get("cityText"),
                    state: this.model.get("stateText"),
                    country: this.model.get("countryText"),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _formatTimestamp: function() {
                return s.default.timeDistanceInWords(this.model.get("timestamp"))
            },
            _getMotivationText: function() {
                var e = new l.default(this.model.get("motivation")),
                    t = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, u = (0,
                            r.default)((0,
                            i.default)(o.default.prototype.MOTIVATIONS)); !(t = (a = u.next()).done); t = !0) {
                        var d = a.value,
                            c = o.default.prototype.MOTIVATIONS[d];
                        if (e.isEnabled(d))
                            return I18n.t("feed.issues.motivations." + c)
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !t && u.return && u.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
                return null
            },
            _getPlaceText: function() {
                var e = this.model.get("venue");
                return e ? e.attributes.name : ""
            },
            _getSeverityClass: function() {
                return this.model.getSeverity() ? "severity-" + this.model.getSeverity() : ""
            }
        });
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(7)),
        r = g(n(15)),
        s = g(n(6)),
        a = g(n(2)),
        o = g(n(369)),
        l = g(n(0)),
        u = g(n(3)),
        d = g(n(1)),
        c = g(n(4)),
        h = g(n(22)),
        f = g(n(1301)),
        p = n(32);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e) {
            var n = e.dataModel,
                i = void 0 === n ? null : n,
                r = e.selection,
                d = void 0 === r ? [] : r,
                c = (0,
                    o.default)(e, ["dataModel", "selection"]);
            (0,
                l.default)(this, t);
            var h = (0,
                u.default)(this, (t.__proto__ || (0,
                a.default)(t)).call(this, (0,
                s.default)({}, c)));
            return h._dataModel = i,
                h.repository = h._dataModel.getRepository(d[0].type),
                h.featureID = d[0].getID(),
                h.listenTo(h.repository, p.CHANGED, h.onFeaturesChanged),
                h.listenTo(h.repository, p.CHANGED_ID, h._onFeatureChangedIDs),
                h
        }
        return (0,
                c.default)(t, e),
            (0,
                d.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "submit .attributes-form": "_onAttributesFormSubmitted"
                    }
                }
            }]),
            (0,
                d.default)(t, [{
                key: "bindings",
                value: function() {
                    return (0,
                        r.default)({
                        ".feature-id": {
                            observe: "id",
                            onGet: function(e) {
                                return I18n.t("edit.id", {
                                    num: e
                                })
                            }
                        }
                    }, ".attributes-form input, .attributes-form textarea, .attributes-form select, .attributes-form label", {
                        attributes: [{
                            name: "disabled",
                            observe: "propertiesEditable",
                            onGet: _.negate(_.identity)
                        }]
                    })
                }
            }, {
                key: "templateContext",
                value: function() {
                    return _.pick(this.viewModel.attributes, "createdBy", "createdOn", "updatedBy", "updatedOn", "userRank")
                }
            }, {
                key: "getFeature",
                value: function() {
                    return this.repository.getObjectById(this.featureID)
                }
            }, {
                key: "_makeViewModelAttributes",
                value: function(e) {
                    return (0,
                        s.default)({
                        id: e.getID(),
                        createdBy: e.attributes.createdBy,
                        createdOn: e.attributes.createdOn,
                        updatedBy: e.attributes.updatedBy,
                        updatedOn: e.attributes.updatedOn,
                        propertiesEditable: e.arePropertiesEditable(),
                        userRank: W.model.loginManager.getUserRank()
                    }, this.featureToViewModel(e))
                }
            }, {
                key: "_makeModelAttributes",
                value: function(e) {
                    var t = {},
                        n = this.viewModelToFeature();
                    return (0,
                            i.default)(e.changedAttributes()).forEach(function(i) {
                            "function" == typeof n[i] && n[i](e.get(i), t)
                        }),
                        t
                }
            }, {
                key: "toggleEnabled",
                value: function(e) {
                    e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                }
            }, {
                key: "simpleAttribute",
                value: function(e) {
                    return function(t, n) {
                        n[e] = t
                    }
                }
            }, {
                key: "featureToViewModel",
                value: function(e) {
                    return {}
                }
            }, {
                key: "viewModelToFeature",
                value: function(e) {
                    return {}
                }
            }, {
                key: "_onAttributesFormSubmitted",
                value: function() {
                    return !1
                }
            }, {
                key: "onFeaturesChanged",
                value: function(e) {
                    !this.isDestroyed() && this.hasEditedModelChanged(e) && this._reflectRepositoryChanges()
                }
            }, {
                key: "_reflectRepositoryChanges",
                value: function() {
                    var e = this.getFeature();
                    this.viewModel.set(this._makeViewModelAttributes(e), {
                        fromRepo: !0
                    })
                }
            }, {
                key: "_onFeatureChangedIDs",
                value: function(e) {
                    var t = e.oldID,
                        n = e.newID;
                    this.featureID === t && (this.featureID = n)
                }
            }, {
                key: "_onViewModelChanged",
                value: function(e, t) {
                    t.fromRepo || this._updateRepoFromViewModel()
                }
            }, {
                key: "_updateRepoFromViewModel",
                value: function() {
                    var e = this._getRepositoryObjectsToUpdate();
                    !_.isEmpty(e) && this._updateObjectsInRepository(e)
                }
            }, {
                key: "_getRepositoryObjectsToUpdate",
                value: function() {
                    var e = [],
                        t = this.getFeature();
                    return null == t ? console.error("Cannot update a non-existing object with id " + this.featureID + " and type " + this.repository.objectType) : e.push(t),
                        e
                }
            }, {
                key: "_updateObjectsInRepository",
                value: function(e) {
                    var t = this._makeModelAttributes(this.viewModel);
                    if (!_.isEmpty(t)) {
                        var n = this._createUpdateAction(e, t);
                        this._dataModel.actionManager.add(n)
                    }
                }
            }, {
                key: "_createUpdateAction",
                value: function(e, t) {
                    var n = this;
                    return 1 === e.length ? this._createObjectUpdateAction(e[0], t) : new f.default(e.map(function(e) {
                        return n._createObjectUpdateAction(e, t)
                    }))
                }
            }, {
                key: "_createObjectUpdateAction",
                value: function(e, t) {
                    return new h.default(e, t)
                }
            }, {
                key: "hasEditedModelChanged",
                value: function(e) {
                    if (1 !== e.length)
                        return !1;
                    var t = e[0];
                    return this.featureID === t.getID()
                }
            }, {
                key: "onBeforeRender",
                value: function() {
                    var e = this.getFeature();
                    this.viewModel = new Backbone.Model(this._makeViewModelAttributes(e)),
                        this.listenTo(this.viewModel, "change", this._onViewModelChanged)
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this.viewModel, this.bindings())
                }
            }]),
            t
    }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = S(n(9)),
        r = S(n(10)),
        s = S(n(2)),
        a = S(n(0)),
        o = S(n(1)),
        l = S(n(3)),
        u = S(n(4)),
        d = n(1304),
        c = S(d),
        h = n(32),
        f = S(n(128)),
        p = S(n(205)),
        g = S(n(393)),
        v = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(1305)),
        m = S(n(220)),
        y = S(n(1308)),
        b = S(n(1310)),
        w = S(n(22)),
        k = S(n(1312)),
        E = n(72),
        M = S(n(1314));

    function S(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var T = function(e) {
        function t() {
            return (0,
                    a.default)(this, t),
                (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).apply(this, arguments))
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "className",
                value: function() {
                    return "address-edit-view"
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "submit .address-form": "_formSubmitted",
                        "click .full-address": "_editClicked",
                        "click .cancel-button": "_cancelClicked",
                        "click .add-alt-street-btn": "_addAltStreetClicked"
                    }
                }
            }, {
                key: "modelEvent",
                value: function() {
                    return {
                        "change:altStreets": "render"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        streetNameInput: ".street-name",
                        cityNameInput: ".city-name"
                    }
                }
            }, {
                key: "defaultOptions",
                value: function() {
                    return {
                        editStreet: !0,
                        editHouseNumber: !1,
                        editAltStreets: !1
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        altStreetsRegion: ".alt-streets",
                        newAltStreetsRegion: ".new-alt-streets",
                        ttsPlaybackRegion: ".tts-playback-region"
                    }
                }
            }, {
                key: "cityBindings",
                value: function() {
                    return {
                        ".city-id": {
                            observe: "cityID",
                            attributes: f.default.requireAndEnableIfNot("emptyCity"),
                            selectOptions: {
                                collection: "this.cityOptions",
                                defaultOption: {
                                    value: null,
                                    label: I18n.t("mte.edit.select_city")
                                }
                            }
                        }
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".street-name": {
                            observe: ["streetName", "emptyStreet"],
                            onGet: function(e) {
                                var t = (0,
                                        r.default)(e, 2),
                                    n = t[0];
                                return t[1] ? "" : n
                            },
                            onSet: function(e) {
                                return [e, !1]
                            },
                            attributes: f.default.requireAndEnableIfNot("emptyStreet")
                        },
                        ".city-name": {
                            observe: ["cityName", "emptyCity"],
                            onGet: function(e) {
                                var t = (0,
                                        r.default)(e, 2),
                                    n = t[0];
                                return t[1] ? "" : n
                            },
                            onSet: function(e) {
                                return [e, !1]
                            },
                            attributes: f.default.requireAndEnableIfNot("emptyCity")
                        },
                        ".state-id": {
                            observe: "stateID",
                            selectOptions: {
                                collection: "this.stateOptions"
                            }
                        },
                        ".country-id": {
                            observe: "countryID",
                            selectOptions: {
                                collection: "this.countryOptions"
                            }
                        },
                        ".empty-street": {
                            observe: "emptyStreet",
                            attributes: [{
                                name: "disabled",
                                onGet: function() {
                                    return this.options.disableEmptyStreet
                                }
                            }]
                        },
                        ".empty-city": {
                            observe: "emptyCity",
                            attributes: [{
                                name: "disabled",
                                onGet: function() {
                                    return this.options.disableEmptyCity
                                }
                            }]
                        },
                        ".house-number": "houseNumber",
                        ".preview": {
                            observe: "addressFormShown",
                            visible: function(e) {
                                return !e
                            }
                        },
                        ".address-form": {
                            observe: "addressFormShown",
                            visible: !0
                        },
                        ".quota-tooltip": {
                            visible: !0,
                            onGet: function() {
                                return !this._canChangeStreetName()
                            }
                        },
                        ".full-address": {
                            observe: "fullAddress",
                            classes: {
                                disabled: {
                                    observe: "editable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }
                            }
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    var t = this;
                    this.options = _.defaults(e, this.defaultOptions()),
                        this.addressModel = e.addressModel,
                        this.dataModel = e.dataModel,
                        this.model = c.default.fromAddress(this.addressModel, this.dataModel),
                        this.model.set({
                            editable: e.editable,
                            fullAddress: this.addressModel.format({
                                formatStreet: this.options.editStreet
                            })
                        }),
                        this.showStatesSelection = this.dataModel.hasStates(),
                        this._generateOptions(),
                        this.options.showCitySelect ? this._initCitySelect() : this._initCityInput(),
                        this.listenTo(this.model, "change:cityID change:cityName change:emptyCity", function() {
                            t.showStatesSelection && t._updateStateFromCity(),
                                t._refreshStreetAutocompleteOptions()
                        }),
                        this.showStatesSelection && this.listenTo(this.model, "change:stateID", function() {
                            t._refreshCityAutocompleteOptions()
                        }),
                        this.options.editStreet && this._initStreetInput()
                }
            }, {
                key: "_generateOptions",
                value: function() {
                    this.countryOptions = _.map(this.dataModel.countries.objects, function(e) {
                            return {
                                label: e.name,
                                value: e.getID()
                            }
                        }),
                        this.stateOptions = _.map(this.dataModel.states.objects, function(e) {
                            return {
                                label: e.name,
                                value: e.getID()
                            }
                        })
                }
            }, {
                key: "_generateCityOptions",
                value: function() {
                    this.cityOptions = this.dataModel.cities.getValidCities().map(function(e) {
                        return {
                            label: e.attributes.name,
                            value: e.getID()
                        }
                    })
                }
            }, {
                key: "_generateCityNames",
                value: function() {
                    this.cityNames = this.dataModel.cities.getValidCities().map(function(e) {
                        return e.attributes.name
                    })
                }
            }, {
                key: "_generateStreetNames",
                value: function() {
                    var e = this._getSelectedCity();
                    null == e || e.isEmpty() ? this.streetNames = _.chain(this.dataModel.streets.objects).pluck("name").compact().uniq().value() : this.streetNames = _.chain(this.dataModel.streets.objects).filter(function(t) {
                        return e.getID() === t.cityID
                    }).pluck("name").compact().value()
                }
            }, {
                key: "_canChangeStreetName",
                value: function() {
                    return this.dataModel.loginManager.canChangeStreetName()
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this.stickit(this.model, _.extend(this.bindings(), this.cityBindings())),
                        this.ui.cityNameInput.typeahead({
                            source: this.cityNames
                        }),
                        this.ui.streetNameInput.typeahead({
                            source: this.streetNames
                        }),
                        this._initTTSView(),
                        this.options.editAltStreets && !this.options.isAltAddress && (this.showChildView("altStreetsRegion", new y.default({
                                collection: this.model.attributes.altStreets
                            })),
                            this.showChildView("newAltStreetsRegion", new b.default({
                                dataModel: this.options.dataModel,
                                collection: this.model.attributes.newAltStreets
                            })))
                }
            }, {
                key: "_initCitySelect",
                value: function() {
                    var e = this;
                    return this._generateCityOptions(),
                        this.listenTo(this.dataModel.cities, h.UPDATED, function() {
                            return e._generateCityOptions(),
                                e.stickit(e.model, e.cityBindings())
                        })
                }
            }, {
                key: "_refreshCityAutocompleteOptions",
                value: function() {
                    this._generateCityNames(),
                        this.ui.cityNameInput.data && this.ui.cityNameInput.data("typeahead") && (this.ui.cityNameInput.data("typeahead").source = this.cityNames)
                }
            }, {
                key: "_initCityInput",
                value: function() {
                    var e = this;
                    return this._generateCityNames(),
                        this.listenTo(this.dataModel.cities, h.UPDATED, function() {
                            e._refreshCityAutocompleteOptions()
                        })
                }
            }, {
                key: "_refreshStreetAutocompleteOptions",
                value: function() {
                    this._generateStreetNames(),
                        this.ui.streetNameInput.data && this.ui.streetNameInput.data("typeahead") && (this.ui.streetNameInput.data("typeahead").source = this.streetNames)
                }
            }, {
                key: "_initStreetInput",
                value: function() {
                    var e = this;
                    return this._generateStreetNames(),
                        this.listenTo(this.dataModel.streets, h.UPDATED, function() {
                            e._refreshStreetAutocompleteOptions()
                        })
                }
            }, {
                key: "_initTTSView",
                value: function() {
                    if (this.options.enableTTS) {
                        var e = this.options.feature;
                        e instanceof m.default && (e = e.children[0]);
                        var t = e.geometry.components[0],
                            n = k.default.fromAddress(this.model, t);
                        this.getRegion("ttsPlaybackRegion").reset(),
                            this.showChildView("ttsPlaybackRegion", n)
                    }
                }
            }, {
                key: "templateContext",
                value: function() {
                    var e = (0,
                        E.getServerConfig)().maxAllowedStreetNamesChanges;
                    return {
                        dataModel: this.dataModel,
                        MAX_LENGTH: d.MAX_LENGTH,
                        showStatesSelection: this.dataModel.hasStates(),
                        showHouseNumberInput: this.options.editHouseNumber,
                        showStreetInput: this.options.editStreet,
                        showCitySelect: this.options.showCitySelect,
                        showAltStreets: this.options.editAltStreets,
                        enableTTS: this.options.enableTTS,
                        maxAllowedStreetNamesChanges: e
                    }
                }
            }, {
                key: "_formSubmitted",
                value: function(e) {
                    e.preventDefault();
                    var t = this.model.attributes,
                        n = this.options.showCitySelect && !t.emptyCity;
                    t.emptyStreet && (this.model.set("streetName", ""),
                            t = this.model.attributes),
                        t.emptyCity && (this.model.set("cityName", ""),
                            t = this.model.attributes),
                        n || this._cityExists(t) ? this._submitAddressChanges(t, n) : this._confirmCityChanges(t)
                }
            }, {
                key: "_getAltStreetActions",
                value: function() {
                    if (!this.options.editAltStreets)
                        return [];
                    var e = this.options.feature,
                        t = e instanceof m.default ? e.children : [e],
                        n = [],
                        r = this.model.attributes.altStreets.filter(function(e) {
                            return !e.get("deleted")
                        });
                    return n.push.apply(n, (0,
                            i.default)(t.map(function(e) {
                            return new w.default(e, {
                                streetIDs: r.map(function(e) {
                                    return e.id
                                })
                            })
                        }))),
                        this.model.attributes.newAltStreets.forEach(function(e) {
                            n.push.apply(n, (0,
                                i.default)(t.map(function(t) {
                                return new g.default(t, e.attributes)
                            })))
                        }),
                        n
                }
            }, {
                key: "_submitAddressChanges",
                value: function(e, t) {
                    var n = this,
                        r = this.options.feature,
                        s = (r instanceof m.default ? r.children : [r]).map(function(i) {
                            return new p.default(i, e, {
                                updateStreet: n.options.editStreet,
                                getCityFromDataModel: t,
                                updateHouseNumber: n.options.editHouseNumber,
                                streetIDField: n.options.streetIDField
                            })
                        });
                    this.dataModel.actionManager.add(new M.default([].concat((0,
                            i.default)(s), (0,
                            i.default)(this._getAltStreetActions())))),
                        this.addressModel = this.options.feature.getAddress(),
                        this.model.set({
                            fullAddress: this.addressModel.format({
                                formatStreet: this.options.editStreet
                            })
                        }),
                        this.model.set({
                            addressFormShown: !1
                        }),
                        this.trigger("addressChanged")
                }
            }, {
                key: "_cityExists",
                value: function(e) {
                    return W.model.cities.getByAttributes({
                        isEmpty: e.isEmpty,
                        name: e.cityName,
                        countryID: e.countryID,
                        stateID: e.stateID
                    }).length > 0
                }
            }, {
                key: "_confirmCityChanges",
                value: function(e) {
                    var t = this;
                    v.getAndConfirmCityChange(e.cityName, e.countryID, e.stateID).then(function(n) {
                        n && t._submitAddressChanges(e)
                    }).catch(function(n) {
                        console.error(n),
                            t._submitAddressChanges(e)
                    })
                }
            }, {
                key: "_editClicked",
                value: function() {
                    this.editAddress()
                }
            }, {
                key: "_cancelClicked",
                value: function() {
                    this.model.set({
                            addressFormShown: !1
                        }),
                        this.model.populateFromAddressModel(this.addressModel)
                }
            }, {
                key: "_getSelectedCity",
                value: function() {
                    var e = void 0;
                    return e = this.model.get("emptyCity") ? {
                            isEmpty: !0
                        } : this.options.showCitySelect ? {
                            id: this.model.get("cityID")
                        } : {
                            name: this.model.get("cityName")
                        },
                        this.showStatesSelection && (e.stateID = this.model.get("stateID")),
                        e.countryID = this.model.get("countryID"),
                        this.dataModel.cities.getByAttributes(e)[0]
                }
            }, {
                key: "_updateStateFromCity",
                value: function() {
                    var e = this._getSelectedCity();
                    null != e && null != e.attributes.stateID && this.model.set("stateID", e.attributes.stateID)
                }
            }, {
                key: "_addAltStreetClicked",
                value: function() {
                    this.model.addNewAltStreet(this.options.emptyCityForAltStreets)
                }
            }, {
                key: "editAddress",
                value: function() {
                    this.model.get("editable") && this.model.set({
                        addressFormShown: !0
                    })
                }
            }, {
                key: "toggleEditable",
                value: function(e) {
                    return !1 === e && this.model.set({
                            addressFormShown: !1
                        }),
                        this.model.set({
                            editable: e
                        })
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/address/edit"
                }
            }]),
            t
    }(Marionette.View);
    t.default = T,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(7)),
        r = s(n(25));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.Behavior.extend({
        _eventsRegistered: !1,
        initialize: function() {
            return this._registerEvents()
        },
        onBeforeDestroy: function() {
            return this._unregisterEvents()
        },
        _getAcceleratorsObject: function() {
            return _.result(this.view, "accelerators", {})
        },
        _registerEvents: function() {
            if (!this._eventsRegistered) {
                var e = this._getAcceleratorsObject(),
                    t = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, o = (0,
                            r.default)((0,
                            i.default)(e)); !(t = (a = o.next()).done); t = !0) {
                        var l = a.value,
                            u = e[l];
                        W.accelerators.events.register(l, this.view, this.view[u])
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
                this._eventsRegistered = !0
            }
        },
        _unregisterEvents: function() {
            if (this._eventsRegistered) {
                var e = this._getAcceleratorsObject(),
                    t = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, o = (0,
                            r.default)((0,
                            i.default)(e)); !(t = (a = o.next()).done); t = !0) {
                        var l = a.value,
                            u = e[l];
                        W.accelerators.events.unregister(l, this.view, this.view[u])
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
                this._eventsRegistered = !1
            }
        },
        onEditingEnabled: function() {
            return this._registerEvents()
        },
        onEditingDisabled: function() {
            return this._unregisterEvents()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(3)),
        a = l(n(1)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                    s.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, e)),
                a = n.model.get(n.observeAttribute);
            return Array.isArray(a) || n.model.set(n.observeAttribute, [a]),
                n.minSelectionCount = e.minSelectionCount || 0,
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "bindings",
                value: function() {
                    var e = this;
                    return {
                        input: {
                            observe: this.observeAttribute,
                            updateModel: "_confirmUpdate",
                            update: function(e, t, n, i) {
                                e.val(t)
                            },
                            onGet: function(t) {
                                return t.map(e._optionToValue.bind(e))
                            },
                            onSet: function(t) {
                                return Array.isArray(t) || (t = null === t ? [] : [t]),
                                    t.map(e._valueToOption.bind(e))
                            }
                        }
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/multi_selection_view"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "_confirmUpdate",
                value: function(e, t, n) {
                    return !((e && e.length || 0) < this.minSelectionCount) || ($(t.currentTarget).prop("checked", !0),
                        !1)
                }
            }, {
                key: "select",
                value: function(e) {
                    var t = this.getSelected();
                    t.push(e),
                        this.setSelection(t)
                }
            }, {
                key: "setSelection",
                value: function(e) {
                    e = _.uniq(e),
                        this.model.set(this.observeAttribute, e),
                        this.model.trigger("change:" + this.observeAttribute, this.model, e)
                }
            }]),
            t
    }(l(n(222)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = {
        default: n(164),
        __esModule: !0
    }
}, function(e, t, n) {
    n(55),
        n(67),
        e.exports = n(82).f("iterator")
}, function(e, t, n) {
    var i = n(76),
        r = n(77);
    e.exports = function(e) {
        return function(t, n) {
            var s, a, o = String(r(t)),
                l = i(n),
                u = o.length;
            return l < 0 || l >= u ? e ? "" : void 0 : (s = o.charCodeAt(l)) < 55296 || s > 56319 || l + 1 === u || (a = o.charCodeAt(l + 1)) < 56320 || a > 57343 ? e ? o.charAt(l) : s : e ? o.slice(l, l + 2) : a - 56320 + (s - 55296 << 10) + 65536
        }
    }
}, function(e, t, n) {
    "use strict";
    var i = n(64),
        r = n(50),
        s = n(58),
        a = {};
    n(35)(a, n(23)("iterator"), function() {
            return this
        }),
        e.exports = function(e, t, n) {
            e.prototype = i(a, {
                    next: r(1, n)
                }),
                s(e, t + " Iterator")
        }
}, function(e, t, n) {
    var i = n(27),
        r = n(28),
        s = n(52);
    e.exports = n(29) ? Object.defineProperties : function(e, t) {
        r(e);
        for (var n, a = s(t), o = a.length, l = 0; o > l;)
            i.f(e, n = a[l++], t[n]);
        return e
    }
}, function(e, t, n) {
    var i = n(33),
        r = n(97),
        s = n(169);
    e.exports = function(e) {
        return function(t, n, a) {
            var o, l = i(t),
                u = r(l.length),
                d = s(a, u);
            if (e && n != n) {
                for (; u > d;)
                    if ((o = l[d++]) != o)
                        return !0
            } else
                for (; u > d; d++)
                    if ((e || d in l) && l[d] === n)
                        return e || d || 0;
            return !e && -1
        }
    }
}, function(e, t, n) {
    var i = n(76),
        r = Math.max,
        s = Math.min;
    e.exports = function(e, t) {
        return (e = i(e)) < 0 ? r(e + t, 0) : s(e, t)
    }
}, function(e, t, n) {
    "use strict";
    var i = n(171),
        r = n(132),
        s = n(51),
        a = n(33);
    e.exports = n(95)(Array, "Array", function(e, t) {
            this._t = a(e),
                this._i = 0,
                this._k = t
        }, function() {
            var e = this._t,
                t = this._k,
                n = this._i++;
            return !e || n >= e.length ? (this._t = void 0,
                r(1)) : r(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]])
        }, "values"),
        s.Arguments = s.Array,
        i("keys"),
        i("values"),
        i("entries")
}, function(e, t) {
    e.exports = function() {}
}, function(e, t, n) {
    e.exports = {
        default: n(173),
        __esModule: !0
    }
}, function(e, t, n) {
    n(174),
        n(101),
        n(177),
        n(178),
        e.exports = n(12).Symbol
}, function(e, t, n) {
    "use strict";
    var i = n(18),
        r = n(36),
        s = n(29),
        a = n(21),
        o = n(113),
        l = n(98).KEY,
        u = n(39),
        d = n(80),
        c = n(58),
        h = n(57),
        f = n(23),
        p = n(82),
        g = n(83),
        v = n(175),
        m = n(133),
        _ = n(28),
        y = n(26),
        b = n(33),
        w = n(78),
        k = n(50),
        E = n(64),
        M = n(176),
        S = n(100),
        T = n(27),
        I = n(52),
        C = S.f,
        A = T.f,
        O = M.f,
        x = i.Symbol,
        D = i.JSON,
        R = D && D.stringify,
        L = f("_hidden"),
        P = f("toPrimitive"),
        N = {}.propertyIsEnumerable,
        V = d("symbol-registry"),
        U = d("symbols"),
        j = d("op-symbols"),
        F = Object.prototype,
        B = "function" == typeof x,
        G = i.QObject,
        z = !G || !G.prototype || !G.prototype.findChild,
        W = s && u(function() {
            return 7 != E(A({}, "a", {
                get: function() {
                    return A(this, "a", {
                        value: 7
                    }).a
                }
            })).a
        }) ? function(e, t, n) {
            var i = C(F, t);
            i && delete F[t],
                A(e, t, n),
                i && e !== F && A(F, t, i)
        } :
        A,
        H = function(e) {
            var t = U[e] = E(x.prototype);
            return t._k = e,
                t
        },
        q = B && "symbol" == typeof x.iterator ? function(e) {
            return "symbol" == typeof e
        } :
        function(e) {
            return e instanceof x
        },
        $ = function(e, t, n) {
            return e === F && $(j, t, n),
                _(e),
                t = w(t, !0),
                _(n),
                r(U, t) ? (n.enumerable ? (r(e, L) && e[L][t] && (e[L][t] = !1),
                        n = E(n, {
                            enumerable: k(0, !1)
                        })) : (r(e, L) || A(e, L, k(1, {})),
                        e[L][t] = !0),
                    W(e, t, n)) : A(e, t, n)
        },
        Y = function(e, t) {
            _(e);
            for (var n, i = v(t = b(t)), r = 0, s = i.length; s > r;)
                $(e, n = i[r++], t[n]);
            return e
        },
        K = function(e) {
            var t = N.call(this, e = w(e, !0));
            return !(this === F && r(U, e) && !r(j, e)) && (!(t || !r(this, e) || !r(U, e) || r(this, L) && this[L][e]) || t)
        },
        J = function(e, t) {
            if (e = b(e),
                t = w(t, !0),
                e !== F || !r(U, t) || r(j, t)) {
                var n = C(e, t);
                return !n || !r(U, t) || r(e, L) && e[L][t] || (n.enumerable = !0),
                    n
            }
        },
        Z = function(e) {
            for (var t, n = O(b(e)), i = [], s = 0; n.length > s;)
                r(U, t = n[s++]) || t == L || t == l || i.push(t);
            return i
        },
        X = function(e) {
            for (var t, n = e === F, i = O(n ? j : b(e)), s = [], a = 0; i.length > a;)
                !r(U, t = i[a++]) || n && !r(F, t) || s.push(U[t]);
            return s
        };
    B || (o((x = function() {
                if (this instanceof x)
                    throw TypeError("Symbol is not a constructor!");
                var e = h(arguments.length > 0 ? arguments[0] : void 0),
                    t = function(n) {
                        this === F && t.call(j, n),
                            r(this, L) && r(this[L], e) && (this[L][e] = !1),
                            W(this, e, k(1, n))
                    };
                return s && z && W(F, e, {
                        configurable: !0,
                        set: t
                    }),
                    H(e)
            }).prototype, "toString", function() {
                return this._k
            }),
            S.f = J,
            T.f = $,
            n(99).f = M.f = Z,
            n(59).f = K,
            n(84).f = X,
            s && !n(49) && o(F, "propertyIsEnumerable", K, !0),
            p.f = function(e) {
                return H(f(e))
            }
        ),
        a(a.G + a.W + a.F * !B, {
            Symbol: x
        });
    for (var Q = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ee = 0; Q.length > ee;)
        f(Q[ee++]);
    for (var te = I(f.store), ne = 0; te.length > ne;)
        g(te[ne++]);
    a(a.S + a.F * !B, "Symbol", {
            for: function(e) {
                return r(V, e += "") ? V[e] : V[e] = x(e)
            },
            keyFor: function(e) {
                if (!q(e))
                    throw TypeError(e + " is not a symbol!");
                for (var t in V)
                    if (V[t] === e)
                        return t
            },
            useSetter: function() {
                z = !0
            },
            useSimple: function() {
                z = !1
            }
        }),
        a(a.S + a.F * !B, "Object", {
            create: function(e, t) {
                return void 0 === t ? E(e) : Y(E(e), t)
            },
            defineProperty: $,
            defineProperties: Y,
            getOwnPropertyDescriptor: J,
            getOwnPropertyNames: Z,
            getOwnPropertySymbols: X
        }),
        D && a(a.S + a.F * (!B || u(function() {
            var e = x();
            return "[null]" != R([e]) || "{}" != R({
                a: e
            }) || "{}" != R(Object(e))
        })), "JSON", {
            stringify: function(e) {
                for (var t, n, i = [e], r = 1; arguments.length > r;)
                    i.push(arguments[r++]);
                if (n = t = i[1],
                    (y(t) || void 0 !== e) && !q(e))
                    return m(t) || (t = function(e, t) {
                            if ("function" == typeof n && (t = n.call(this, e, t)),
                                !q(t))
                                return t
                        }),
                        i[1] = t,
                        R.apply(D, i)
            }
        }),
        x.prototype[P] || n(35)(x.prototype, P, x.prototype.valueOf),
        c(x, "Symbol"),
        c(Math, "Math", !0),
        c(i.JSON, "JSON", !0)
}, function(e, t, n) {
    var i = n(52),
        r = n(84),
        s = n(59);
    e.exports = function(e) {
        var t = i(e),
            n = r.f;
        if (n)
            for (var a, o = n(e), l = s.f, u = 0; o.length > u;)
                l.call(e, a = o[u++]) && t.push(a);
        return t
    }
}, function(e, t, n) {
    var i = n(33),
        r = n(99).f,
        s = {}.toString,
        a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
    e.exports.f = function(e) {
        return a && "[object Window]" == s.call(e) ? function(e) {
            try {
                return r(e)
            } catch (e) {
                return a.slice()
            }
        }(e) : r(i(e))
    }
}, function(e, t, n) {
    n(83)("asyncIterator")
}, function(e, t, n) {
    n(83)("observable")
}, function(e, t, n) {
    var i = n(134),
        r = n(23)("iterator"),
        s = n(51);
    e.exports = n(12).getIteratorMethod = function(e) {
        if (void 0 != e)
            return e[r] || e["@@iterator"] || s[i(e)]
    }
}, function(e, t, n) {
    e.exports = {
        default: n(776),
        __esModule: !0
    }
}, function(e, t) {
    e.exports = function(e, t, n, i) {
        if (!(e instanceof t) || void 0 !== i && i in e)
            throw TypeError(n + ": incorrect invocation!");
        return e
    }
}, function(e, t, n) {
    "use strict";
    var i = n(56);
    e.exports.f = function(e) {
        return new function(e) {
                var t, n;
                this.promise = new e(function(e, i) {
                        if (void 0 !== t || void 0 !== n)
                            throw TypeError("Bad Promise constructor");
                        t = e,
                            n = i
                    }),
                    this.resolve = i(t),
                    this.reject = i(n)
            }
            (e)
    }
}, function(e, t, n) {
    var i = n(35);
    e.exports = function(e, t, n) {
        for (var r in t)
            n && e[r] ? e[r] = t[r] : i(e, r, t[r]);
        return e
    }
}, function(e, t, n) {
    e.exports = {
        default: n(792),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(7)),
        r = s(n(13));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = {
        parse: function(e) {
            var t = this;
            return this.nested ? ((0,
                    i.default)(this.nested).forEach(function(n) {
                    var i = t.nested[n],
                        r = e[n];
                    r && (_.isArray(r) ? e[n] = r.map(function(e) {
                        return t.parseField(e, i, n)
                    }) : e[n] = t.parseField(r, i, n))
                }),
                e) : e
        },
        parseField: function(e, t, n) {
            if (t === OL.Geometry) {
                var i = r.default.parse(e);
                return this.attributes && this.attributes[n] && this.attributes[n].id && (i.id = this.attributes[n].id),
                    i
            }
            return _.isObject(e) ? new t(e, {
                parse: !0
            }) : new t({
                id: e,
                parse: !0
            })
        }
    };
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(19)),
        r = d(n(6)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(13)),
        l = d(n(87)),
        u = n(30);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function() {
        function e() {
            (0,
                s.default)(this, e),
            this.serializer = new l.default,
                this.getFeaturesjqXHR = null,
                this.abortController = null
        }
        return (0,
                a.default)(e, [{
                key: "_toUnprojectedBBOX",
                value: function(e) {
                    return o.default.unproject(e.clone()).toBBOX()
                }
            }, {
                key: "_newRequestParams",
                value: function(e) {
                    return {
                        language: I18n.locale,
                        bbox: this._toUnprojectedBBOX(e)
                    }
                }
            }, {
                key: "getExpandedDataBounds",
                value: function(e) {
                    return o.default.getBoundsWithRatio(e, 1.7)
                }
            }, {
                key: "getFeatures",
                value: function(e, t, n) {
                    e = this.getExpandedDataBounds(e);
                    var s = (0,
                            r.default)(this._newRequestParams(e), t),
                        a = null;
                    return this._supportAbortController() ? (this.abortController && this.abortController.abort(),
                            this.abortController = new AbortController,
                            n = (0,
                                r.default)({}, n, {
                                signal: this.abortController.signal
                            }),
                            a = (0,
                                u.httpGet)(W.Config.paths.features, s, n)) : (this.getFeaturesjqXHR && this.getFeaturesjqXHR.abort(),
                            this.getFeaturesjqXHR = $.get(W.Config.paths.features, s, n),
                            a = this.getFeaturesjqXHR),
                        i.default.resolve(a).catch(function(e) {
                            throw "abort" !== e.statusText && "AbortError" !== e.name || (e.reason = "abort"),
                                e
                        })
                }
            }, {
                key: "_supportAbortController",
                value: function() {
                    return "function" == typeof AbortController
                }
            }, {
                key: "postFeatures",
                value: function(e, t, n) {
                    var i = (0,
                        r.default)(this._newRequestParams(t), {
                        ignoreWarnings: n
                    });
                    return (0,
                        u.httpPost)(W.Config.paths.features + "?" + $.param(i), e, {
                        dataType: "json"
                    })
                }
            }, {
                key: "getCityExists",
                value: function(e, t, n, i) {
                    var r = parseInt(t, 10),
                        s = parseInt(n, 10);
                    return (0,
                        u.httpGet)(W.Config.paths.cityExists, {
                        cityName: e,
                        countryID: isNaN(r) ? void 0 : r,
                        stateID: isNaN(s) ? void 0 : s,
                        box: this._toUnprojectedBBOX(i)
                    })
                }
            }, {
                key: "getElementHistory",
                value: function(e, t) {
                    var n = this,
                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        r = {
                            objectType: e,
                            objectID: t
                        };
                    return null != i && (r.till = i),
                        (0,
                            u.httpGet)(W.Config.paths.elementHistory, r).then(function(e) {
                            return n.serializer.read(e)
                        })
                }
            }, {
                key: "getConfigurationInfo",
                value: function() {
                    return (0,
                        u.httpGet)(W.Config.paths.configurationInfo)
                }
            }]),
            e
    }();
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.MAX_POLYGON_SIZE_DEGREES = t.BigJunction = void 0;
    var i = g(n(6)),
        r = g(n(2)),
        s = g(n(0)),
        a = g(n(3)),
        o = g(n(1)),
        l = g(n(4)),
        u = g(n(17)),
        d = g(n(45)),
        c = g(n(853)),
        h = g(n(89)),
        f = g(n(13)),
        p = g(n(88));

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                a.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e, n));
            return i._pathCache = null,
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "defaults",
                get: function() {
                    return {
                        name: "",
                        rank: 0,
                        segIDs: [],
                        permissions: u.default.ALL_PERMISSIONS
                    }
                }
            }]),
            (0,
                o.default)(t, [{
                key: "merge",
                value: function() {
                    return this._pathCache = null,
                        d.default.prototype.merge.apply(this, arguments)
                }
            }, {
                key: "getAddress",
                value: function() {
                    return h.default.fromCityID(this.attributes.cityID, this.model)
                }
            }, {
                key: "getSegmentCount",
                value: function() {
                    return this.attributes.segIDs.length
                }
            }, {
                key: "getPossibleTurns",
                value: function() {
                    return null != this._pathCache ? this._pathCache : this._pathCache = c.default.for(this).getAllTurns()
                }
            }, {
                key: "getPossibleTurnsBetween",
                value: function(e, t) {
                    return this.getPossibleTurns().filter(function(n) {
                        return n.getFromVertex().equals(e) && n.getToVertex().equals(t)
                    })
                }
            }, {
                key: "getTurnsFrom",
                value: function(e) {
                    var t = this,
                        n = this.model.getTurnGraph().getLegalTrivialTurnsFrom(e).filter(function(e) {
                            return !t._isShortSegment(e.getToVertex().getSegmentID())
                        }),
                        i = this.model.getTurnGraph().getTurnsFrom(e).filter(function(e) {
                            return e.getTurnData().hasSegmentPath()
                        }),
                        r = n.concat(i);
                    return this.getShortestTurns().filter(function(t) {
                        return t.getFromVertex().equals(e)
                    }).map(function(e) {
                        return e.withTurnData(e.getTurnData().withState(p.default.State.DISALLOWED))
                    }).map(function(e) {
                        var t = r.find(function(t) {
                            return t.verticesEqual(e)
                        });
                        return void 0 !== t ? t : e
                    }).concat(n)
                }
            }, {
                key: "_isShortSegment",
                value: function(e) {
                    return this.attributes.segIDs.includes(e)
                }
            }, {
                key: "getShortestTurns",
                value: function() {
                    var e = _.groupBy(this.getPossibleTurns(), function(e) {
                        return e.getFromVertex().toString() + e.getToVertex().toString()
                    });
                    return _.values(e).map(function(e) {
                        return _.min(e, function(e) {
                            return e.getTurnData().getSegmentPath().length
                        })
                    })
                }
            }, {
                key: "getShortSegments",
                value: function() {
                    return this.model.segments.getByIds(this.attributes.segIDs)
                }
            }, {
                key: "_getIntersectionWithLine",
                value: function(e) {
                    var t = this.attributes.geometry.distanceTo(e, {
                            details: !0
                        }),
                        n = new OL.Geometry.Point(t.x0, t.y0),
                        i = f.default.getPointEdge(e.components, n); -
                    1 === i && (i = 0);
                    var r = e.components[i],
                        s = e.components[i + 1];
                    if (this.attributes.geometry.intersects(s)) {
                        var a = [s, r];
                        r = a[0],
                            s = a[1]
                    }
                    var o = f.default.radToDeg(Math.atan2(s.y - r.y, s.x - r.x));
                    return {
                        x: n.x,
                        y: n.y,
                        angle: o
                    }
                }
            }, {
                key: "getAngleAtIntersection",
                value: function(e) {
                    return this._getIntersectionWithLine(e).angle
                }
            }, {
                key: "getIntersectionPoint",
                value: function(e) {
                    var t = this._getIntersectionWithLine(e);
                    return new OL.Geometry.Point(t.x, t.y)
                }
            }, {
                key: "canEditTurns",
                value: function() {
                    return this.isAllowed(this.PERMISSIONS.UPDATE)
                }
            }, {
                key: "arePropertiesEditable",
                value: function() {
                    return this.PERMISSIONS.UPDATE && this.isAllowed(this.PERMISSIONS.UPDATE)
                }
            }, {
                key: "isPolygonAreaLegal",
                value: function() {
                    var e = f.default.unproject(this.attributes.geometry.getBounds().clone());
                    return e.getWidth() <= .01 && e.getHeight() <= .01
                }
            }]),
            t
    }(d.default);
    (0,
        i.default)(v.prototype, {
        nested: {
            geometry: OL.Geometry
        },
        PERMISSIONS: {
            DELETE: 1,
            UPDATE: 2
        },
        CLASS_NAME: "Waze.Feature.FeatureVector.BigJunction"
    }),
    t.BigJunction = v,
        t.MAX_POLYGON_SIZE_DEGREES = .01
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(68)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = n(69);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).defaultType,
                n = void 0 === e ? u.RESTRICTION_TYPE.FREE : e;
            (0,
                s.default)(this, t);
            var a = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return a._defaultType = n,
                (0,
                    i.default)(a),
                a
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "supportsNumPassengers",
                value: function() {
                    return !1
                }
            }, {
                key: "supportsSubscriptions",
                value: function() {
                    return !1
                }
            }, {
                key: "supportsTollDriveProfileEntries",
                value: function() {
                    return !1
                }
            }]),
            t
    }(u.BaseRestriction);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DATE_FORMAT = t.WEEKDAY_ORDINALS = t.WEEKDAYS = t.RestrictionTimeFrame = void 0;
    var i, r = c(n(7)),
        s = c(n(6)),
        a = c(n(68)),
        o = c(n(0)),
        l = c(n(1)),
        u = c(n(15)),
        d = c(n(117));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = {
            SUNDAY: "SUNDAY",
            MONDAY: "MONDAY",
            TUESDAY: "TUESDAY",
            WEDNESDAY: "WEDNESDAY",
            THURSDAY: "THURSDAY",
            FRIDAY: "FRIDAY",
            SATURDAY: "SATURDAY"
        },
        f = (i = {},
            (0,
                u.default)(i, h.MONDAY, 1),
            (0,
                u.default)(i, h.TUESDAY, 2),
            (0,
                u.default)(i, h.WEDNESDAY, 3),
            (0,
                u.default)(i, h.THURSDAY, 4),
            (0,
                u.default)(i, h.FRIDAY, 5),
            (0,
                u.default)(i, h.SATURDAY, 6),
            (0,
                u.default)(i, h.SUNDAY, 7),
            i),
        p = [h.SUNDAY, h.MONDAY, h.TUESDAY, h.WEDNESDAY, h.THURSDAY, h.FRIDAY, h.SATURDAY],
        g = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.startDate,
                    i = void 0 === n ? null : n,
                    r = t.endDate,
                    s = void 0 === r ? null : r,
                    l = t.fromTime,
                    u = void 0 === l ? null : l,
                    d = t.toTime,
                    c = void 0 === d ? null : d,
                    h = t.weekdays,
                    f = void 0 === h ? 0 : h;
                (0,
                    o.default)(this, e),
                this._startDate = i,
                    this._endDate = s,
                    this._fromTime = u,
                    this._toTime = c,
                    this._weekdays = f,
                    (0,
                        a.default)(this)
            }
            return (0,
                    l.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._startDate === e._startDate && this._endDate === e._endDate && this._fromTime === e._fromTime && this._toTime === e._toTime && this._weekdays === e._weekdays
                    }
                }, {
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            s.default)(this.toJSON(), e))
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            startDate: this._startDate,
                            endDate: this._endDate,
                            fromTime: this._fromTime,
                            toTime: this._toTime,
                            weekdays: this._weekdays
                        }
                    }
                }, {
                    key: "_isOnWeekday",
                    value: function(e) {
                        var t = f[e] - 1;
                        return new d.default(this._weekdays).isPowerOf2Enabled(t)
                    }
                }, {
                    key: "isAllDay",
                    value: function() {
                        return null === this._fromTime && null === this._toTime
                    }
                }, {
                    key: "isAllWeek",
                    value: function() {
                        return null == this._weekdays || 127 === this._weekdays
                    }
                }, {
                    key: "isDuringDates",
                    value: function() {
                        return null !== this._startDate || null !== this._endDate
                    }
                }, {
                    key: "getStartDate",
                    value: function() {
                        return this._startDate
                    }
                }, {
                    key: "getEndDate",
                    value: function() {
                        return this._endDate
                    }
                }, {
                    key: "getFromTime",
                    value: function() {
                        return this._fromTime
                    }
                }, {
                    key: "getToTime",
                    value: function() {
                        return this._toTime
                    }
                }, {
                    key: "getWeekdays",
                    value: function() {
                        var e = this;
                        return this.isAllWeek() ? (0,
                            r.default)(h) : (0,
                            r.default)(h).filter(function(t) {
                            return e._isOnWeekday(t)
                        })
                    }
                }], [{
                    key: "getWeekdaysBitValue",
                    value: function() {
                        return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).reduce(function(e, t) {
                            return e | 1 << f[t] - 1
                        }, 0)
                    }
                }, {
                    key: "getAlwaysOn",
                    value: function() {
                        return new e({
                            startDate: null,
                            endDate: null,
                            fromTime: null,
                            toTime: null,
                            weekdays: null
                        })
                    }
                }]),
                e
        }();
    t.RestrictionTimeFrame = g,
        t.WEEKDAYS = h,
        t.WEEKDAY_ORDINALS = p,
        t.DATE_FORMAT = "YYYY-MM-DD"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(0)),
        r = a(n(1)),
        s = a(n(88));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this._fromVertex = t,
                this._toVertex = n,
                this._turnData = r
        }
        return (0,
                r.default)(e, [{
                key: "getFromVertex",
                value: function() {
                    return this._fromVertex
                }
            }, {
                key: "getToVertex",
                value: function() {
                    return this._toVertex
                }
            }, {
                key: "getTurnData",
                value: function() {
                    return this._turnData
                }
            }, {
                key: "withTurnData",
                value: function(t) {
                    return new e(this._fromVertex, this._toVertex, t)
                }
            }, {
                key: "withUnknownTurnData",
                value: function() {
                    return new e(this._fromVertex, this._toVertex, s.default.createUnknown())
                }
            }, {
                key: "withFromVertex",
                value: function(t) {
                    return new e(t, this._toVertex, this._turnData)
                }
            }, {
                key: "withToVertex",
                value: function(t) {
                    return new e(this._fromVertex, t, this._turnData)
                }
            }, {
                key: "isUturn",
                value: function() {
                    return this._fromVertex.getSegmentID() === this._toVertex.getSegmentID() && !this._turnData.hasSegmentPath()
                }
            }, {
                key: "toString",
                value: function() {
                    return "" + this._fromVertex + this._toVertex + this._turnData
                }
            }, {
                key: "verticesEqual",
                value: function(e) {
                    return this.getFromVertex().equals(e.getFromVertex()) && this.getToVertex().equals(e.getToVertex())
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
            FIXED: 0,
            NOT_A_PROBLEM: 1,
            AUTO: 2
        },
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(68)),
        r = o(n(0)),
        s = o(n(1)),
        a = n(47);

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            (0,
                r.default)(this, e),
            this._defaultType = t.defaultType,
                this._direction = t.direction,
                (0,
                    i.default)(this)
        }
        return (0,
                s.default)(e, [{
                key: "isForward",
                value: function() {
                    return this._direction === a.RESTRICTION_SEGMENT_DIRECTION.FWD
                }
            }, {
                key: "isReverse",
                value: function() {
                    return this._direction === a.RESTRICTION_SEGMENT_DIRECTION.REV
                }
            }, {
                key: "isAllowed",
                value: function() {
                    return this._defaultType && "boolean" == typeof this._defaultType.allowed && this._defaultType.allowed
                }
            }, {
                key: "isNotAllowed",
                value: function() {
                    return this._defaultType && "boolean" == typeof this._defaultType.allowed && !this._defaultType.allowed
                }
            }, {
                key: "equals",
                value: function(e) {
                    return _.isEqual(e._defaultType, this._defaultType) && this._direction === e._direction
                }
            }, {
                key: "__clone",
                value: function() {
                    return this.toJSON()
                }
            }, {
                key: "toJSON",
                value: function() {
                    return {
                        defaultType: this._defaultType,
                        direction: this._direction
                    }
                }
            }, {
                key: "withReverseDirection",
                value: function() {
                    return new e({
                        defaultType: _.clone(this._defaultType),
                        direction: this.isForward() ? a.RESTRICTION_SEGMENT_DIRECTION.REV : a.RESTRICTION_SEGMENT_DIRECTION.FWD
                    })
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = t.OpeningHour = Backbone.Model.extend({
        ALL_DAY_FROM: "00:00",
        ALL_DAY_TO: "00:00",
        defaults: function() {
            return {
                fromHour: "09:00",
                toHour: "17:00",
                days: this.defaultDays.concat()
            }
        },
        defaultDays: [1, 2, 3, 4, 5],
        isAllDay: function() {
            return this.get("fromHour") === this.ALL_DAY_FROM && this.get("toHour") === this.ALL_DAY_TO
        },
        setAllDay: function() {
            return this.set("fromHour", this.ALL_DAY_FROM),
                this.set("toHour", this.ALL_DAY_TO)
        }
    });
    t.Collection = Backbone.Collection.extend({
        model: i
    })
}, function(e, t, n) {
    var i = n(26);
    e.exports = function(e, t) {
        if (!i(e) || e._t !== t)
            throw TypeError("Incompatible receiver, " + t + " required!");
        return e
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.restrictionArraysEqual = t.dedupRestrictions = void 0;
    var i, r = n(9),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.dedupRestrictions = function(e) {
            return e.reduce(function(e, t) {
                return !1 === e.some(function(e) {
                    return e.equals(t)
                }) ? [].concat((0,
                    s.default)(e), [t]) : e
            }, [])
        },
        t.restrictionArraysEqual = function(e, t) {
            if (e.length !== t.length)
                return !1;
            for (var n = 0; n < e.length; n++)
                if (!e[n].equals(t[n]))
                    return !1;
            return !0
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(19)),
        r = a(n(120)),
        s = n(30);

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = new r.default,
        l = Backbone.Model.extend({
            defaults: {
                uuid: null,
                name: null,
                url: null,
                location: null
            },
            initialize: function() {
                if (null === this.get("uuid"))
                    return this.set({
                        uuid: this.id
                    })
            },
            getDetails: function(e) {
                var t = this;
                e || (e = uuidGenerator.v1());
                var n = this.get("name");
                return null != n ? i.default.resolve({
                    name: n,
                    location: this.get("location"),
                    url: this.get("url")
                }) : this._getDetailsFromUuid(this.get("uuid"), e).then(function(e) {
                    var n = {
                        name: e.name,
                        location: e.location,
                        url: e.url
                    };
                    return t.set(n),
                        n
                }).catch(function() {
                    return t.set({
                            name: t.get("uuid")
                        }),
                        i.default.resolve({
                            name: t.get("uuid"),
                            location: "",
                            url: ""
                        })
                })
            },
            _getDetailsFromUuid: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    n = {
                        placeid: e,
                        key: "AIzaSyDf-q2MCay0AE7RF6oIMrDPrjBwxVtsUuI"
                    };
                return null !== t && (n.sessiontoken = t),
                    o.has(e) ? i.default.resolve(o.get(e)) : (0,
                        s.httpGet)(W.Config.places_api.url.details, n).then(function(t) {
                        if ("OK" === t.status) {
                            var n = {
                                location: t.result.geometry.location,
                                name: t.result.name + ", " + t.result.formatted_address,
                                url: t.result.url
                            };
                            return o.set(e, n),
                                n
                        }
                        return i.default.reject(new Error("failed getting provider details"))
                    })
            },
            toJSON: function() {
                return this.get("uuid")
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(45)),
        u = c(n(17)),
        d = n(85);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l.default);
    (0,
        i.default)(h.prototype, {
        nested: {
            geometry: OL.Geometry
        },
        PERMISSIONS: {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4
        },
        UNITS: {
            speed: d.UNIT.KILOMETER
        },
        TYPES: {
            SPEED_CAMERA: 2,
            DUMMY: 3,
            RED_LIGHT: 4
        },
        CLASS_NAME: "Waze.Feature.Vector.SpeedCamera"
    }),
    h.prototype.defaults = {
            type: h.prototype.TYPES.SPEED_CAMERA,
            speed: 0,
            azymuth: 0,
            rank: 0,
            permissions: u.default.ALL_PERMISSIONS
        },
        t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(3)),
        a = c(n(1)),
        o = c(n(4)),
        l = c(n(22)),
        u = c(n(85)),
        d = n(32);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            n.dataModel = e.dataModel,
                n.model = e.selection[0];
            var a = n.dataModel.getRepository(n.model.type);
            return n.listenTo(a, d.CHANGED, n.onFeaturesChanged),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "submit .attributes-form": "_onAttributesFormSubmitted",
                        "change .attributes-form input, .attributes-form select, .attributes-form textarea": "_onAttributeChanged"
                    }
                }
            }]),
            (0,
                a.default)(t, [{
                key: "_onAttributesFormSubmitted",
                value: function() {
                    return !1
                }
            }, {
                key: "_toggleFormControls",
                value: function(e) {
                    this.$(".attributes-form").find("input, textarea, select").prop("disabled", !e)
                }
            }, {
                key: "isModelEditable",
                value: function() {
                    return this.model.arePropertiesEditable()
                }
            }, {
                key: "toggleEnabled",
                value: function(e) {
                    e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                }
            }, {
                key: "serializeElement",
                value: function(e) {
                    var t = void 0,
                        n = e.data("units");
                    if ("checkbox" === e.attr("type") && e.is("[data-multiple]"))
                        t = this.$el.find("input[name=" + e.attr("name") + "]:checked").toArray().map(function(e) {
                            return $(e).val()
                        });
                    else {
                        if ("checkbox" === e.attr("type"))
                            return e.is(":checked");
                        t = e.is("select") && e.prop("multiple") ? e.find("option:selected").toArray().map(function(e) {
                            return $(e).val()
                        }) : e.is("select") ? e.find("option:selected").val() : e.val()
                    }
                    return "boolean" === e.data("type") && (t = e.booleanVal()),
                        "numeric" === e.data("type") && (t = parseInt(t, 10),
                            isNaN(t) && e.is("[data-nullable]") ? t = null : n && (t = u.default.getOriginalValue(t, n))),
                        t
                }
            }, {
                key: "_removeMixedOption",
                value: function(e) {
                    var t = e.parents(".waze-radio-container");
                    t.length > 0 ? t.find(".data-mixed-indicator").remove() : e.find("[data-mixed-indicator]").remove()
                }
            }, {
                key: "_onAttributeChanged",
                value: function(e) {
                    var t = $(e.target),
                        n = t.attr("name"),
                        i = this.serializeElement(t),
                        r = this[n + "Changed"],
                        s = {},
                        a = {};
                    if (null != n) {
                        var o = _.has(this.model.attributes, n),
                            l = this.model.FLAG_ATTRIBUTES && this.model.FLAG_ATTRIBUTES[n];
                        (t.is("select") || t.parents(".waze-radio-container").length > 0) && this._removeMixedOption(t),
                            r ? r.call(this, i) : l ? (a[n] = i,
                                this.changed(s, void 0, a)) : o ? (s[n] = i,
                                this.changed(s)) : console.error("FeatureEditor: unknown attribute changed '" + n + "'")
                    }
                }
            }, {
                key: "changed",
                value: function(e) {
                    arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    this.dataModel.actionManager.add(new l.default(this.model, e))
                }
            }, {
                key: "onFeaturesChanged",
                value: function(e) {
                    this.hasEditedModelChanged(e) && this.isRendered && !this.isDestroyed() && this.renderOnceLater()
                }
            }, {
                key: "hasEditedModelChanged",
                value: function(e) {
                    return 1 === e.length && e[0].getID() === this.model.getID()
                }
            }, {
                key: "serializeData",
                value: function() {
                    return this.model
                }
            }, {
                key: "onRender",
                value: function() {
                    this._toggleFormControls(this.isModelEditable())
                }
            }]),
            t
    }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this._layerUniqueName = t
        }
        return (0,
                r.default)(e, [{
                key: "writeStateToApp",
                value: function(e, t) {
                    var n = t.map.getLayerByUniqueName(this._layerUniqueName),
                        i = n.repo;
                    n.setVisibility(e),
                        i && n.toggleRepo && i.forEach(function(t) {
                            return t.setActive(e)
                        })
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(15),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.Behavior.extend({
        onRender: function() {
            this._bindModels()
        },
        _bindModels: function() {
            var e = this;
            this.options.charLimits.forEach(function(t) {
                var n, i = e.view[t.modelAttribute];
                i && e.view.stickit(i, (n = {},
                    (0,
                        s.default)(n, t.inputSelector, {
                        events: ["keyup"],
                        observe: t.observe,
                        attributes: [{
                            name: "maxlength",
                            onGet: function() {
                                return t.maxLength
                            }
                        }]
                    }),
                    (0,
                        s.default)(n, t.charCountSelector, {
                        updateModel: !1,
                        observe: t.observe,
                        onGet: function(e) {
                            return t.maxLength - (e && e.length || 0)
                        }
                    }),
                    n))
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(60),
        r = function() {
            function e(e, t, n) {
                this.fromLaneIndex = e,
                    this.toLaneIndex = t,
                    this.arrowAngle = n
            }
            return e.hasChanged = function(e, t) {
                    return (null != e || null != t) && (null == e || null == t || !e.equals(t))
                },
                e.prototype.isValid = function() {
                    return this.fromLaneIndex <= this.toLaneIndex && this.arrowAngle % 45 == 0
                },
                e.prototype._indexesDefined = function() {
                    return null != this.fromLaneIndex && null != this.toLaneIndex
                },
                e.prototype.getFromLaneIndex = function() {
                    return this.fromLaneIndex
                },
                e.prototype.getToLaneIndex = function() {
                    return this.toLaneIndex
                },
                e.prototype.getLaneIndexes = function() {
                    return this._indexesDefined() ? i.range(this.getFromLaneIndex(), this.getToLaneIndex() + 1) : []
                },
                e.prototype.getArrowAngle = function() {
                    return this.arrowAngle
                },
                e.prototype.includes = function(e) {
                    return this._indexesDefined() && this.fromLaneIndex <= e && e <= this.toLaneIndex
                },
                e.prototype.equals = function(e) {
                    return this.fromLaneIndex === e.fromLaneIndex && this.toLaneIndex === e.toLaneIndex && this.arrowAngle === e.arrowAngle
                },
                e.prototype.withAngle = function(t) {
                    return new e(this.fromLaneIndex, this.toLaneIndex, t)
                },
                e.prototype.toJSON = function() {
                    return {
                        fromLaneIndex: this.fromLaneIndex,
                        toLaneIndex: this.toLaneIndex,
                        laneArrowAngle: this.arrowAngle
                    }
                },
                e
        }();
    t.default = r
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(9)),
        r = h(n(2)),
        s = h(n(0)),
        a = h(n(1)),
        o = h(n(3)),
        l = h(n(8)),
        u = h(n(4)),
        d = h(n(11)),
        c = h(n(41));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e, n) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                s.default)(this, t);
            var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i)),
                l = i.forSegment,
                u = void 0 === l ? null : l;
            return a.node = e,
                a.navigable = n,
                a.forSegment = u,
                a
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = !1,
                        t = this.node.allConnectionKeys(!0),
                        n = void 0;
                    n = this.navigable ? t.legal : t.all;
                    for (var i = 0; i < n.length; i++) {
                        var r = n[i],
                            s = r.from === r.to;
                        if (r.from.areTurnsLocked(this.node) || this.doSubAction(r.from.lockTurns(this.node, !0)),
                            !this.navigable || !s) {
                            var a = this.forSegment;
                            if (a && a !== r.from && a !== r.to)
                                continue;
                            var o = this.model.getTurnGraph().getTurnThroughNode(this.node, r.from, r.to),
                                l = o.getTurnData().isUnknown(),
                                u = o.getTurnData().withToggledState(this.navigable);
                            if (o = o.withTurnData(u),
                                l && !o.getTurnData().isAllowed())
                                continue;
                            var d = new c.default(this.model.getTurnGraph(), o);
                            !1 !== this.doSubAction(d) && (e = !0)
                        }
                    }
                    return e
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.node]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this.navigable ? this._description = I18n.t("save.changes_log.actions.ModifyAllConnections.allow") : this._description = I18n.t("save.changes_log.actions.ModifyAllConnections.disallow")
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.node.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }]),
            t
    }(d.default);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(7)),
        r = f(n(25)),
        s = f(n(6)),
        a = f(n(2)),
        o = f(n(0)),
        l = f(n(1)),
        u = f(n(3)),
        d = f(n(4)),
        c = f(n(20)),
        h = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t(e, n, i, r) {
            (0,
                o.default)(this, t);
            var s = (0,
                u.default)(this, (t.__proto__ || (0,
                a.default)(t)).call(this, r));
            return s.houseNumberSet = e,
                s.houseNumber = n,
                s.attributes = i,
                s.oldAttributes = {},
                s.stateChanged = !1,
                s.changed = !1,
                s
        }
        return (0,
                d.default)(t, e),
            (0,
                l.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = !0,
                        t = !1,
                        n = void 0;
                    try {
                        for (var a, o = (0,
                                r.default)((0,
                                i.default)(this.attributes)); !(e = (a = o.next()).done); e = !0) {
                            var l = a.value,
                                u = this.attributes[l];
                            null != this.houseNumber[l] && this.houseNumber[l] !== u && (this.changed = !0,
                                this.oldAttributes[l] = this.houseNumber[l])
                        }
                    } catch (e) {
                        t = !0,
                            n = e
                    } finally {
                        try {
                            !e && o.return && o.return()
                        } finally {
                            if (t)
                                throw n
                        }
                    }
                    return this.changed && (0,
                            s.default)(this.houseNumber, this.attributes),
                        this.houseNumberSet.state || (this.houseNumberSet.state = OL.State.UPDATE,
                            this.stateChanged = !0),
                        this.model.houseNumbers.changed(this.houseNumberSet),
                        this.changed
                }
            }, {
                key: "undoAction",
                value: function() {
                    for (var e in this.oldAttributes)
                        h.isUndefined(this.oldAttributes[e]) ? delete this.attributes[e] : this.houseNumber[e] = this.oldAttributes[e];
                    return this.stateChanged && (this.houseNumberSet.state = null),
                        this.model.houseNumbers.changed(this.houseNumberSet)
                }
            }, {
                key: "redoAction",
                value: function() {
                    return this.houseNumberSet.state = OL.State.UPDATE,
                        (0,
                            s.default)(this.houseNumber, this.attributes),
                        this.model.houseNumbers.changed(this.houseNumberSet)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = {};
                    return (0,
                            s.default)(e, this.attributes),
                        e.id = this.houseNumber.id,
                        e.segID = this.houseNumberSet.id, {
                            _objectType: this.houseNumberSet.type,
                            action: c.default.TYPE.UPDATE,
                            attributes: e
                        }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return this.model.segments.getObjectById(this.houseNumberSet.id).getEntireStreet().map(function(e) {
                        return e.getUniqueID
                    })
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.model.segments.getObjectById(this.houseNumberSet.id)]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this.model.segments.getObjectById(this.houseNumberSet.id).getAddress().getStreetName({
                        emptyString: ""
                    });
                    this._description = I18n.t("save.changes_log.actions.UpdateHouseNumber", {
                        houseNumber: this.houseNumber,
                        streetName: e
                    })
                }
            }]),
            t
    }(c.default);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = y(n(9)),
        r = y(n(2)),
        s = y(n(0)),
        a = y(n(1)),
        o = y(n(3)),
        l = y(n(4)),
        u = y(n(11)),
        d = y(n(73)),
        c = y(n(92)),
        h = y(n(124)),
        f = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        p = y(n(37)),
        g = y(n(34)),
        v = y(n(41)),
        m = n(40);

    function y(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var b = function(e) {
        function t(e, n) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                s.default)(this, t);
            var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i)),
                l = i.level,
                u = void 0 === l ? null : l;
            return a.level = u,
                a.segments = e,
                a.node = n,
                a.mergedSegment = null,
                a.keepLevel = !1,
                a
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "_mergeVertices",
                value: function(e, t) {
                    return [].concat((0,
                        i.default)(e.slice(0, -1)), (0,
                        i.default)(t))
                }
            }, {
                key: "createMergedSegment",
                value: function(e, t) {
                    var n = this.segments[0],
                        i = this.segments[1],
                        r = n.geometry.clone().getVertices(),
                        s = i.geometry.clone().getVertices(),
                        a = void 0,
                        o = void 0,
                        l = void 0,
                        u = void 0,
                        d = void 0,
                        c = void 0,
                        h = void 0,
                        f = void 0,
                        v = void 0;
                    n.attributes.fromNodeID === t.getID() && i.attributes.toNodeID === t.getID() ? (a = i.attributes.fromNodeID,
                        o = n.attributes.toNodeID,
                        l = this._mergeVertices(s, r),
                        f = i,
                        d = g.default.forwardOf(i.getID()),
                        u = g.default.reverseOf(i.getID()),
                        v = n,
                        h = g.default.forwardOf(n.getID()),
                        c = g.default.reverseOf(n.getID())) : n.attributes.fromNodeID === t.getID() && i.attributes.fromNodeID === t.getID() ? (a = i.attributes.toNodeID,
                        o = n.attributes.toNodeID,
                        s.reverse(),
                        l = this._mergeVertices(s, r),
                        f = i,
                        d = g.default.reverseOf(i.getID()),
                        u = g.default.forwardOf(i.getID()),
                        v = n,
                        h = g.default.forwardOf(n.getID()),
                        c = g.default.reverseOf(n.getID())) : n.attributes.toNodeID === t.getID() && i.attributes.toNodeID === t.getID() ? (a = n.attributes.fromNodeID,
                        o = i.attributes.fromNodeID,
                        s.reverse(),
                        l = this._mergeVertices(r, s),
                        f = n,
                        d = g.default.forwardOf(n.getID()),
                        u = g.default.reverseOf(n.getID()),
                        v = i,
                        h = g.default.reverseOf(i.getID()),
                        c = g.default.forwardOf(i.getID())) : n.attributes.toNodeID === t.getID() && i.attributes.fromNodeID === t.getID() ? (a = n.attributes.fromNodeID,
                        o = i.attributes.toNodeID,
                        l = this._mergeVertices(r, s),
                        f = n,
                        d = g.default.forwardOf(n.getID()),
                        u = g.default.reverseOf(n.getID()),
                        v = i,
                        h = g.default.forwardOf(i.getID()),
                        c = g.default.reverseOf(i.getID())) : console.warn("Warning: illegal input for merging segments");
                    var m = new OpenLayers.Geometry.LineString(l),
                        _ = new p.default($.extend({}, n.attributes));
                    return _.copyAttributes(n),
                        _.geometry = m,
                        _.setID(null), {
                            mergedSegment: _,
                            fromNodeID: a,
                            toNodeID: o,
                            firstSegment: f,
                            firstReverse: u,
                            firstForward: d,
                            secondSegment: v,
                            secondReverse: c,
                            secondForward: h
                        }
                }
            }, {
                key: "doAction",
                value: function() {
                    if (f.defined(this.segments) || (this.keepLevel = !0,
                            this.segments = this.node.attributes.segIDs.map(function(e) {
                                return this.model.segments.getObjectById(e)
                            }, this)),
                        _(this.segments).invoke("getID").join(),
                        !this.node.areSegmentsBridgable(this.segments))
                        return console.warn("Segments " + _(this.segments).invoke("getID").join() + " are not bridgable."),
                            !1;
                    var e = this.createMergedSegment(this.segments, this.node),
                        n = e.mergedSegment,
                        r = e.fromNodeID,
                        s = e.toNodeID,
                        a = e.firstForward,
                        o = e.firstReverse,
                        l = e.secondForward,
                        u = e.secondReverse,
                        p = e.firstSegment,
                        g = e.secondSegment;
                    this.mergedSegment = n;
                    var v = this.mergedSegment.attributes,
                        m = this.level;
                    null !== m && (m = _.max(this.node.attributes.segIDs.map(function(e) {
                                return this.model.segments.getObjectById(e).attributes.level
                            }, this)),
                            _.isUndefined(m) && (m = 0),
                            this.keepLevel || m++),
                        v.level = m,
                        v.streetIDs = _.union(this.segments[0].attributes.streetIDs || [], this.segments[1].attributes.streetIDs || []),
                        v.origIDs = [this.segments[0].getID(), this.segments[1].getID()],
                        this.mergedSegment.attributes.fromNodeID = r,
                        this.mergedSegment.attributes.toNodeID = s,
                        v.virtualNodeIDs = [].concat((0,
                            i.default)(this.segments[0].attributes.virtualNodeIDs), (0,
                            i.default)(this.segments[1].attributes.virtualNodeIDs)),
                        this.setLockLevel(this.mergedSegment),
                        this.doSubAction(new h.default(this.mergedSegment)),
                        this.mergedSegment.attributes.permissions = this.segments[0].attributes.permissions & this.segments[1].attributes.permissions;
                    var y = this.model.nodes.getObjectById(r),
                        b = this.model.nodes.getObjectById(s);
                    if (this._copyTurns(a, o, l, u),
                        this.mergedSegment.attributes.revLaneCount = this._getMergedLaneCount(p, o),
                        this.mergedSegment.attributes.fwdLaneCount = this._getMergedLaneCount(g, l),
                        y && this.doSubAction(new d.default(y, this.mergedSegment)),
                        b && this.doSubAction(new d.default(b, this.mergedSegment)),
                        this.doSubAction(new c.default(this.segments[0], {
                            hide: !0
                        })),
                        this.doSubAction(new c.default(this.segments[1], {
                            hide: !0
                        })),
                        this._connectVirtualNodes(v),
                        2 === this.node.attributes.segIDs.length) {
                        var w = this.node.attributes.segIDs.map(function(e) {
                            return this.model.segments.getObjectById(e)
                        }, this);
                        this.doSubAction(new t(w, this.node, {
                            level: m - 1
                        }))
                    }
                }
            }, {
                key: "_connectVirtualNodes",
                value: function(e) {
                    var t = this;
                    (this.node.getSegmentIds().filter(function(e) {
                        return t.model.segments.getObjectById(e).isWalkingRoadType()
                    }).length > 0 ? [this.node.getID()].concat((0,
                        i.default)(e.virtualNodeIDs)) : [].concat((0,
                        i.default)(e.virtualNodeIDs))).forEach(function(e) {
                        var n = t.model.nodes.getObjectById(e);
                        t.doSubAction(new d.default(n, t.mergedSegment, {
                            virtual: !0
                        }))
                    })
                }
            }, {
                key: "_copyTurns",
                value: function(e, t, n, i) {
                    var r = this,
                        s = this.model.getTurnGraph();
                    s.getTurnsTo(e).forEach(function(e) {
                            e = e.withToVertex(g.default.forwardOf(r.mergedSegment.getID())),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        }),
                        s.getTurnsFrom(t).forEach(function(e) {
                            e = e.withFromVertex(g.default.reverseOf(r.mergedSegment.getID())),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        }),
                        s.getTurnsFrom(n).forEach(function(e) {
                            e = e.withFromVertex(g.default.forwardOf(r.mergedSegment.getID())),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        }),
                        s.getTurnsTo(i).forEach(function(e) {
                            e = e.withToVertex(g.default.reverseOf(r.mergedSegment.getID())),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        })
                }
            }, {
                key: "_getMergedLaneCount",
                value: function(e, t) {
                    return t.isForward() ? e.attributes.fwdLaneCount : e.attributes.revLaneCount
                }
            }, {
                key: "setLockLevel",
                value: function(e) {
                    var t = [this.segments[0].attributes.lockRank, this.segments[1].attributes.lockRank],
                        n = [this.segments[0].attributes.rank, this.segments[1].attributes.rank];
                    e.attributes.lockRank = null === t[0] && null === t[1] ? null : Math.max.apply(null, t),
                        e.attributes.rank = Math.max.apply(null, n)
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.mergedSegment]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this.segments[0];
                    this._description = (0,
                        m.formatActionAddressDescription)(e, "MergeSegments")
                }
            }]),
            t
    }(u.default);
    t.default = b,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(9)),
        r = v(n(2)),
        s = v(n(0)),
        a = v(n(1)),
        o = v(n(3)),
        l = v(n(8)),
        u = v(n(4)),
        d = v(n(11)),
        c = v(n(22)),
        h = v(n(123)),
        f = v(n(149)),
        p = v(n(1069)),
        g = n(14);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = {
            getCityFromDataModel: !1,
            cityIDField: "cityID",
            streetIDField: "streetID",
            updateStreet: !0,
            updateHouseNumber: !1
        },
        y = function(e) {
            function t(e, n) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                (0,
                    s.default)(this, t);
                var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return a.feature = e,
                    a.attributes = n,
                    a.options = _.defaults(i, m),
                    a
            }
            return (0,
                    u.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this.model.countries.getObjectById(this.attributes.countryID),
                            t = this.model.states.getObjectById(this.attributes.stateID),
                            n = void 0;
                        if (this.options.getCityFromDataModel)
                            n = this.model.cities.getObjectById(this.attributes.cityID);
                        else {
                            var i = new h.default(t, e, this.attributes.cityName, this.attributes.emptyCity);
                            this.doSubAction(i),
                                n = i.city
                        }
                        var r = {};
                        if (this.options.updateStreet) {
                            var s = new f.default(this.attributes.streetName, n, this.attributes.emptyStreet);
                            this.doSubAction(s);
                            var a = s.street;
                            r[this.options.streetIDField] = a.getID(),
                                this.feature.type === g.SEGMENT && this.doSubAction(new p.default)
                        } else
                            r[this.options.cityIDField] = n.getID();
                        return this.options.updateHouseNumber && this.doSubAction(new c.default(this.feature, {
                                houseNumber: this.attributes.houseNumber
                            })),
                            this.doSubAction(new c.default(this.feature, r)),
                            !0
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.feature]
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        if (this.options.getCityFromDataModel) {
                            var e = this.model.cities.getObjectById(this.attributes.cityID);
                            if (e.isNew())
                                return [e.getUniqueID()].concat((0,
                                    i.default)((0,
                                    l.default)(t.prototype.__proto__ || (0,
                                    r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                        }
                        return (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = I18n.t("objects." + this.feature.type + ".name");
                        this._description = I18n.t("save.changes_log.actions.UpdateFeatureAddress", {
                            objectType: e
                        })
                    }
                }]),
                t
        }(d.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DialogContentRegion = t.DialogRegion = void 0;
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = Marionette.Region.extend({
            el: "#dialog-region",
            initialize: function() {
                var e = this;
                return this._ensureElement(),
                    this.$el.addClass("modal").attr("tabindex", -1),
                    this.$el.on("hidden.bs.modal", function() {
                        if (!e._isClosing)
                            return e.empty()
                    }),
                    this.$el.on("click", ".cancel-button", function(t) {
                        return t.preventDefault(),
                            e.empty()
                    })
            },
            empty: function() {
                this._isClosing || (this._isClosing = !0,
                    this._destroyModal(),
                    Marionette.Region.prototype.empty.apply(this, arguments),
                    this._isClosing = !1)
            },
            _destroyModal: function() {
                this.stopListening(this.currentView),
                    this.$el.off("keydown.dialog-region"),
                    this.$el.modal("hide"),
                    this.$el.removeData()
            },
            show: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                Marionette.Region.prototype.show.apply(this, arguments),
                    _.defaults(n, {
                        keyboard: !0,
                        backdrop: "static",
                        modalDialogClass: ""
                    }),
                    e.on("destroy", function() {
                        return t.empty()
                    }),
                    e.$el.addClass("modal-dialog").addClass(n.modalDialogClass),
                    this.$el.on("keydown.dialog-region", function(e) {
                        return e.stopPropagation()
                    }),
                    this.$el.modal(n),
                    this.$el.find(".modal-content").focus()
            }
        }),
        d = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        var t = e.onEscapeKeydown,
                            n = void 0 === t ? function(e) {
                                return e
                            } :
                            t;
                        this.onEscapeKeydown = n
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        var e = this;
                        this.$el.attr("tabindex", -1).focus(),
                            this.$el.off("keydown.dialog-content").on("keydown.dialog-content", function(t) {
                                if (27 === t.which)
                                    return e.onEscapeKeydown(t)
                            })
                    }
                }]),
                t
        }(Marionette.Region);
    t.DialogRegion = u,
        t.DialogContentRegion = d
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(24),
        r = "editorLocation";

    function s() {
        var e = i.localStorage.get(r);
        return null == e ? {
            code: null,
            locale: null
        } : e
    }

    function a(e, t) {
        i.localStorage.set(r, {
            code: e,
            locale: t
        })
    }
    t.getRegionAndLocaleCodes = s,
        t.setRegionAndLocaleCodes = a,
        t.setLocaleCode = function(e) {
            a(this.getRegionCode(), e)
        },
        t.setRegionCode = function(e) {
            a(e, s().locale)
        },
        t.getRegionCode = function() {
            return s().code
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(185),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Backbone.Model.extend({
        defaults: {
            ignorable: !1,
            code: 700,
            description: null,
            geometry: null
        },
        nested: {
            geometry: OL.Geometry
        }
    });
    _.extend(a.prototype, s.default),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = n(32),
        s = a(n(106));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = OL.Class(OL.Control.ModifyFeature, {
        standalone: !0,
        initialize: function(e, t) {
            var n = (0,
                i.default)({
                clickout: !1,
                standalone: !0
            }, t);
            OpenLayers.Control.ModifyFeature.prototype.initialize.call(this, e.layer, n),
                this.repo.on(r.CHANGED, this._onFeaturesChanged, this),
                this.repo.on(r.REMOVED, this._onFeaturesRemoved, this),
                this.map.events.register("zoomend", this, this.resetVertices),
                this._originalGeometry = e.geometry.clone(),
                this.map.addControl(this),
                this.activate(),
                this.selectFeature(e),
                this.handlers.drag.control.feature.geometryTypeMatches = this._isGeometryMatchForDrag
        },
        _isGeometryMatchForDrag: function(e) {
            return Boolean(e._sketch) || e.model && e.model.isSelected() && ("function" != typeof e.model.isPoint || e.model.isPoint())
        },
        destroy: function() {
            this.repo.off(r.CHANGED, this._onFeaturesChanged, this),
                this.repo.off(r.REMOVED, this._onFeaturesRemoved, this),
                this.map.events.unregister("zoomend", this, this.resetVertices),
                this.deactivate(),
                OL.Control.ModifyFeature.prototype.destroy.apply(this, arguments)
        },
        deactivate: function() {
            this.dragHandle && (this.layer.destroyFeatures([this.dragHandle], {
                        silent: !0
                    }),
                    delete this.dragHandle),
                this.feature = null,
                OL.Control.ModifyFeature.prototype.deactivate.call(this)
        },
        setFeatureState: function() {},
        _onFeaturesChanged: function() {
            this.feature && (this.resetVertices(),
                this._originalGeometry = this.feature.geometry.clone())
        },
        _onFeaturesRemoved: function(e) {
            e.includes(this.feature) && this.unselectFeature(this.feature)
        },
        onModification: function() {
            var e = new s.default(this.feature.model, this.repo, this._originalGeometry, this.feature.geometry);
            this.model.actionManager.add(e),
                this._originalGeometry = this.feature.geometry.clone()
        },
        collectDragHandle: function() {
            var e = this,
                t = _.max(this.feature.geometry.getVertices(), function(e) {
                    return e.y
                }),
                n = new OpenLayers.Geometry.Point(t.x, t.y + 30 * this.map.getResolution()),
                i = new OpenLayers.Feature.Vector(n);
            return n.move = function(t, i) {
                    return OpenLayers.Geometry.Point.prototype.move.call(n, t, i),
                        e.feature.geometry.move(t, i)
                },
                i.dragPoint = !0,
                i._sketch = !0,
                this.dragHandle = i,
                this.layer.addFeatures([this.dragHandle], {
                    silent: !0
                })
        },
        dragStart: function(e) {
            var t = "OpenLayers.Geometry.Point" === e.geometry.CLASS_NAME;
            this.toggle && this.feature === e && (this._unselect = e),
                (e._sketch || t && this.feature === e) && (this.vertex = e,
                    this.handlers.drag.stopDown = !0)
        },
        unselectFeature: function(e) {
            OL.Control.ModifyFeature.prototype.unselectFeature.call(this, e),
                W.selectionManager.unselectFeature(e)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.MergeHGighlightStyleMap = void 0;
    var i, r = n(1126),
        s = (i = r) && i.__esModule ? i : {
            default: i
        },
        a = n(390);
    var o = {
            strokeColor: "#ca9ace",
            fillColor: "#c290c6",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        l = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: "white",
            fillColor: "#c290c6",
            graphicZIndex: 0,
            fillOpacity: 1
        },
        u = {
            CAR_SERVICES: s.default.toUnicode("waze-icon-place-car"),
            CULTURE_AND_ENTERTAINEMENT: s.default.toUnicode("waze-icon-place-culture"),
            FOOD_AND_DRINK: s.default.toUnicode("waze-icon-place-food-drink"),
            LODGING: s.default.toUnicode("waze-icon-place-lodging"),
            NATURAL_FEATURES: s.default.toUnicode("waze-icon-place-natural"),
            OTHER: s.default.toUnicode("waze-icon-place-other"),
            OUTDOORS: s.default.toUnicode("waze-icon-place-outdoors"),
            PROFESSIONAL_AND_PUBLIC: s.default.toUnicode("waze-icon-place-professional"),
            SHOPPING_AND_SERVICES: s.default.toUnicode("waze-icon-place-shopping"),
            TRANSPORTATION: s.default.toUnicode("waze-icon-place-transportation")
        },
        d = function(e) {
            var t = W.defaultRule({
                Point: l,
                Polygon: o
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    },
                    getCategoryIcon: function(e) {
                        var t = void 0;
                        return e.model && (t = e.model.getMainCategory()),
                            u[t] || ""
                    }
                }
            })
        },
        c = W.defaultRule({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                pointRadius: 28,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        h = W.defaultRule({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        f = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        p = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        g = W.rule("isApproved", !1, {
            Point: {
                pointRadius: 6,
                fillColor: "#c290c6",
                strokeWidth: 3,
                strokeColor: "#00ece3"
            },
            Polygon: {
                fillColor: "#ca9ace",
                strokeColor: "#00ece3",
                strokeDashstyle: "dash"
            }
        }),
        v = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        }),
        m = W.rule("isResidential", !0, {
            graphicName: "triangle"
        }),
        _ = {
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fillOpacity: .5,
                pointRadius: 28,
                strokeWidth: 3
            },
            Polygon: {
                fillOpacity: .5,
                strokeColor: "#00ece3",
                fillColor: "#00ece3",
                strokeWidth: 3
            }
        },
        y = new OL.StyleMap({
            default: new OL.Style(null, {
                rules: [W.defaultRule(_)]
            })
        });
    t.MergeHGighlightStyleMap = y,
        t.default = new OL.StyleMap({
            default: d([v, a.DragPointRule, f, g, m]),
            highlight: d([W.defaultRule({
                Point: {
                    fontFamily: s.default.fontFamily,
                    label: "${getCategoryIcon}",
                    labelOutlineWidth: 0,
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: "#ca9ace",
                    fillOpacity: 1,
                    strokeOpacity: 1
                },
                Polygon: {
                    strokeColor: "#ca9ace",
                    fillColor: "#ca9ace"
                }
            }), v, a.DragPointHighlightRule, p, m]),
            select: d([c]),
            highlightselected: d([c]),
            delete: d([h]),
            highlightdeleted: d([h])
        })
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = new OpenLayers.Style({
            strokeOpacity: 1,
            strokeDashstyle: "dash",
            strokeColor: "#ff8383",
            strokeWidth: 2
        }),
        r = {
            strokeWidth: 6,
            strokeOpacity: 1
        },
        s = new OpenLayers.Rule({
            getContext: function(e) {
                return e
            },
            filter: new OpenLayers.Filter({
                evaluate: function(e) {
                    return e.model && e.layer.colorEmptyStreetSegments && e.model.getAddress().isEmptyStreet()
                }
            }),
            symbolizer: {
                strokeWidth: 9,
                strokeOpacity: .55,
                strokeColor: "red",
                strokeLinecap: "butt"
            }
        }),
        a = function(e) {
            var t = W.defaultRule({
                Line: r
            });
            return new OL.Style(null, {
                rules: [t].concat(e)
            })
        };
    t.default = new OpenLayers.StyleMap({
            default: a([W.rule("isUnchanged", !0, {
                strokeOpacity: 0
            }), s, W.rule("isUnchanged", !1, {
                strokeColor: "#ff8383"
            })]),
            highlight: a([W.defaultRule({
                strokeColor: "#00ece3"
            }), W.rule("isUnchanged", !1, {
                strokeColor: "#eb7171"
            })]),
            select: a(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            highlightselected: a(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            delete: i,
            highlightdeleted: i,
            drag: a(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            flash: a(W.defaultRule({
                strokeColor: "#000010",
                strokeOpacity: .8
            }))
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(1140)),
        r = l(n(414)),
        s = l(n(1141)),
        a = l(n(1142)),
        o = l(n(1143));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = {
            0: "unknown",
            1: "big_direction_left",
            2: "big_direction_right",
            3: "big_direction_exit_left",
            4: "big_direction_exit_right",
            5: "big_direction_forward",
            6: "big_directions_roundabout",
            7: "big_directions_roundabout",
            8: "big_directions_roundabout_l",
            9: "big_directions_roundabout_l",
            10: "big_directions_roundabout_s",
            11: "big_directions_roundabout_s",
            12: "big_directions_roundabout_r",
            13: "big_directions_roundabout_r",
            14: "big_directions_roundabout_u",
            15: "big_directions_roundabout_u",
            16: "big_direction_end",
            17: "big_direction_exit_left",
            18: "big_direction_exit_right",
            20: "big_direction_u"
        },
        d = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                pointerEvents: "none",
                strokeLinecap: "square",
                strokeWidth: 5
            }, {
                context: {
                    getInstructionCodeImages: function(e) {
                        return n(1144)("./" + u[e.attributes.code] + ".png")
                    }
                }
            })
        });
    d.addUniqueValueRules("default", "type", {
            session: {
                strokeColor: "#7ddd7f",
                strokeWidth: 2,
                graphicZIndex: 0
            },
            drive: {
                strokeColor: "#7ddd7f",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            disallowedPath: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            driveArrow: {
                externalGraphic: i.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 2
            },
            disconnect: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                strokeDashstyle: "dash",
                strokeDashArray: "32 16",
                graphicZIndex: 2
            },
            matchedSegment: {
                strokeWidth: 8,
                strokeColor: "#00ece3",
                strokeOpacity: .7,
                graphicZIndex: 2
            },
            matchedSegmentArrow: {
                externalGraphic: r.default,
                rotation: "${angle}",
                fillOpacity: .7,
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            gutter: {
                strokeColor: "black",
                graphicZIndex: 2
            },
            pinA: {
                pointerEvents: "visiblePainted",
                externalGraphic: s.default,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            pinB: {
                pointerEvents: "visiblePainted",
                externalGraphic: a.default,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            suggestedRoute: {
                strokeWidth: 8,
                strokeColor: "#9400ff",
                graphicZIndex: 3
            },
            suggestedRouteArrow: {
                externalGraphic: o.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            driveWeight: {
                label: "${weight}",
                fontSize: 12,
                fontColor: "white",
                strokeWidth: 3,
                strokeOpacity: 1,
                pointRadius: 14,
                fillColor: "#529554",
                strokeColor: "#7ddd7f"
            },
            routeInstruction: {
                externalGraphic: "${getInstructionCodeImages}",
                graphicWidth: 30,
                graphicHeight: 32
            },
            shortSegment: {
                strokeWidth: 8,
                strokeColor: "#3a582c",
                graphicZIndex: 1
            },
            venue: {
                strokeColor: "#ea4e35",
                fillColor: "#ea4e35",
                strokeDashstyle: "dash",
                strokeOpacity: 1,
                strokeWidth: 2,
                fillOpacity: .3
            }
        }),
        t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(37)),
        o = l(n(13));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this.layer = t
        }
        return (0,
                s.default)(e, [{
                key: "drawUserDrive",
                value: function(e) {
                    var t = [];
                    return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "drive"
                        })),
                        this.drawArrows(e, t, "driveArrow"),
                        this.addFeatures(t),
                        t
                }
            }, {
                key: "drawDisallowedPath",
                value: function(e) {
                    var t = [];
                    return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "disallowedPath"
                        })),
                        this.drawArrows(e, t, "matchedSegmentArrow"),
                        this.addFeatures(t),
                        t
                }
            }, {
                key: "drawDriveWeightPoint",
                value: function(e, t, n) {
                    if (this.layer.map.getZoom() >= W.Config.user_drive.weightMinDisplayZoom) {
                        var i = e.distanceTo(t, {
                            details: !0
                        });
                        i = new OpenLayers.Geometry.Point(i.x1, i.y1),
                            i = o.default.getPointAlongLine(t.getVertices(), this.WEIGHT_POINT_DISTANCE * this.layer.map.getResolution(), i).point;
                        var r = new OpenLayers.Feature.Vector(i, {
                            weight: n.toString(),
                            type: "driveWeight"
                        });
                        this.addFeatures(r)
                    }
                }
            }, {
                key: "drawShortSegment",
                value: function(e) {
                    var t = [];
                    t.push(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "shortSegment"
                        })),
                        this.addFeatures(t)
                }
            }, {
                key: "drawMatchedSegment",
                value: function(e) {
                    var t = [];
                    t.push(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "matchedSegment"
                        })),
                        this.drawArrows(e, t, "matchedSegmentArrow"),
                        this.addFeatures(t)
                }
            }, {
                key: "drawSuggestedRoute",
                value: function(e) {
                    var t = [];
                    return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "suggestedRoute"
                        })),
                        this.drawArrows(e, t, "suggestedRouteArrow"),
                        this.addFeatures(t),
                        t
                }
            }, {
                key: "drawSession",
                value: function(e) {
                    this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "session"
                    }))
                }
            }, {
                key: "drawArrows",
                value: function(e, t, n) {
                    if (this.layer.map.getZoom() >= W.Config.user_drive.arrowsMinDisplayZoom) {
                        var i = this.ARROW_DISTANCE * this.layer.map.getResolution();
                        new a.default({
                            geometry: e
                        }).getArrowPoints(i).forEach(function(e) {
                            t.push(new OpenLayers.Feature.Vector(e[0], {
                                type: n,
                                angle: 360 - OpenLayers.Util.deg(_.last(e))
                            }))
                        })
                    }
                }
            }, {
                key: "drawDisconnect",
                value: function(e, t) {
                    var n = [];
                    n.push(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "disconnect"
                        })),
                        t && this.drawDisconnectGutters(e, n),
                        this.addFeatures(n)
                }
            }, {
                key: "drawDisconnectGutters",
                value: function(e, t) {
                    if (this.layer.map.getZoom() >= W.Config.user_drive.gutterMinDisplayZoom) {
                        var n = void 0,
                            i = this.DISCONNECT_GUTTER_SIZE * this.layer.map.getResolution();
                        [!0, !1].forEach(function(r) {
                            (n = new a.default({
                                geometry: e
                            }).getSubSegment(i, r)).attributes.type = "gutter",
                                t.push(n)
                        })
                    }
                }
            }, {
                key: "drawPin",
                value: function(e, t) {
                    this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "pin" + t
                    }))
                }
            }, {
                key: "drawRouteInstructions",
                value: function(e, t) {
                    var n = [];
                    _.isEmpty(t) || this.layer.map.getZoom() < W.Config.user_drive.instructionsMinDisplayZoom || (t.forEach(function(e) {
                            this.HIDDEN_INSTRUCTION_CODES.includes(Number(e.code)) || n.push(new OpenLayers.Feature.Vector(e.point, {
                                type: "routeInstruction",
                                code: e.code
                            }))
                        }, this),
                        this.addFeatures(n))
                }
            }, {
                key: "drawVenue",
                value: function(e) {
                    var t = new OL.Feature.Vector(e.clone(), {
                        type: "venue"
                    });
                    this.addFeatures(t)
                }
            }, {
                key: "addFeatures",
                value: function(e) {
                    this.layer.addFeatures(e, {
                        silent: !0
                    })
                }
            }, {
                key: "clear",
                value: function() {
                    this.layer.removeAllFeatures()
                }
            }]),
            e
    }();
    (0,
        i.default)(u.prototype, {
        ARROW_DISTANCE: 70,
        DISCONNECT_GUTTER_SIZE: 5,
        WEIGHT_POINT_DISTANCE: 70,
        HIDDEN_INSTRUCTION_CODES: [0, 5]
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.GROUP_ISSUES = "GROUP_ISSUES",
        t.GROUP_MAP_ISSUES = "GROUP_MAP_ISSUES",
        t.ITEM_MAP_PROBLEMS = "ITEM_MAP_PROBLEMS",
        t.ITEM_CLOSED_MAP_PROBLEMS = "ITEM_CLOSED_MAP_PROBLEMS",
        t.ITEM_UPDATE_REQUESTS = "ITEM_UPDATE_REQUESTS",
        t.ITEM_CLOSED_UPDATE_REQUESTS = "ITEM_CLOSED_UPDATE_REQUESTS",
        t.ITEM_PLACE_UPDATE_REQUESTS = "ITEM_PLACE_UPDATE_REQUESTS",
        t.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS = "ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS",
        t.GROUP_PARKING_ISSUES = "GROUP_PARKING_ISSUES",
        t.ITEM_PARKING_MAP_PROBLEMS = "ITEM_PARKING_MAP_PROBLEMS",
        t.ITEM_PARKING_CLOSED_MAP_PROBLEMS = "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
        t.ITEM_PARKING_PLACE_UPDATE_REQUESTS = "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
        t.GROUP_PLACES = "GROUP_PLACES",
        t.ITEM_VENUES = "ITEM_VENUES",
        t.ITEM_RESIDENTIAL_PLACES = "ITEM_RESIDENTIAL_PLACES",
        t.ITEM_PARKING_PLACES = "ITEM_PARKING_PLACES",
        t.GROUP_ROAD = "GROUP_ROAD",
        t.ITEM_ROAD = "ITEM_ROAD",
        t.ITEM_JUNCTION_BOXES = "ITEM_JUNCTION_BOXES",
        t.ITEM_CLOSURES = "ITEM_CLOSURES",
        t.ITEM_SPEED_CAMERAS = "ITEM_SPEED_CAMERAS",
        t.GROUP_DISPLAY = "GROUP_DISPLAY",
        t.ITEM_SATELLITE_IMAGERY = "ITEM_SATELLITE_IMAGERY",
        t.ITEM_AREA_MANAGERS = "ITEM_AREA_MANAGERS",
        t.ITEM_GPS_POINTS = "ITEM_GPS_POINTS",
        t.ITEM_LIVE_USERS = "ITEM_LIVE_USERS",
        t.ITEM_EDITABLE_AREAS = "ITEM_EDITABLE_AREAS",
        t.ITEM_DISALLOWED_TURNS = "ITEM_DISALLOWED_TURNS"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(0)),
        r = o(n(1)),
        s = o(n(75)),
        a = o(n(1214));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = {
            fillColor: "black",
            strokeWidth: 0,
            fillOpacity: .65,
            mask: "url(#spotlightMask)"
        },
        u = {
            maskID: "spotlightMask",
            filter: "url(#spotlightBlur)",
            pointRadius: 70,
            fillColor: "black",
            fillOpacity: 1,
            animation: {
                id: "spotlightAnimation",
                attributeName: "r",
                dur: "0.3s",
                from: 100,
                to: 70,
                fill: "disable",
                begin: "indefinite"
            }
        },
        d = {
            id: "homeSpotlightAnimation",
            attributeName: "r",
            dur: "0.7s",
            from: 400,
            to: 200,
            fill: "freeze",
            begin: "indefinite",
            calcMode: "spline",
            keyTimes: "0;1",
            keySplines: ".4 0 .4 1.3"
        },
        c = function() {
            function e(t) {
                (0,
                    i.default)(this, e),
                this.layer = null,
                    this.overlay = null,
                    this.disableTimeout = 0,
                    this.removeTimeout = 0,
                    this.fadeDuration = 400,
                    this.spotLightDuration = 3e3,
                    this.homeSpotLightRadius = 450,
                    this.homeAnimationZoom = 4,
                    this.map = t
            }
            return (0,
                    r.default)(e, [{
                    key: "_ensureLayer",
                    value: function() {
                        if (null == this.layer)
                            return this.layer = new OL.Layer.Vector("spotlight", {
                                    renderers: [s.default],
                                    styleMap: a.default
                                }),
                                this.removeTimeout && window.clearTimeout(this.removeTimeout),
                                this.fadeIn(this.fadeDuration),
                                this.map.addLayer(this.layer)
                    }
                }, {
                    key: "drawOverlay",
                    value: function() {
                        this._ensureLayer();
                        var e = this.map.getExtent().scale(2).toGeometry(),
                            t = new OL.Feature.Vector(e, null, l);
                        return this.layer.addFeatures(t)
                    }
                }, {
                    key: "drawAndFocusSpotlightAtPoint",
                    value: function(e, t, n) {
                        this._isSpotlightInBounds(e) || this.map.setCenter(new OL.LonLat(e.x, e.y)),
                            this._destroyLayer(),
                            this._ensureLayer(),
                            this.drawOverlay(),
                            t || (t = u);
                        var i = new OL.Feature.Vector(e.clone(), null, t);
                        this.layer.addFeatures(i);
                        var r = t.animation,
                            s = document.getElementById(r.id);
                        s && s.beginElement(),
                            n && this._disableMapNavigation(n)
                    }
                }, {
                    key: "_disableMapNavigation",
                    value: function(e) {
                        var t = this;
                        this.disableTimeout && window.clearTimeout(this.disableTimeout),
                            W.map.showOverlay(),
                            this.disableTimeout = window.setTimeout(function() {
                                W.map.hideOverlay(),
                                    t.fadeOut(t.fadeDuration),
                                    t.disableTimeout = 0
                            }, e)
                    }
                }, {
                    key: "fadeIn",
                    value: function(e) {
                        $(this.layer.div).fadeIn({
                            duration: e,
                            easing: "swing"
                        })
                    }
                }, {
                    key: "fadeOut",
                    value: function(e) {
                        var t = this;
                        $(this.layer.div).fadeOut({
                                duration: e,
                                easing: "swing"
                            }),
                            this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                                this.removeTimeout = 0),
                            this.removeTimeout = window.setTimeout(function() {
                                t._destroyLayer(),
                                    t.removeTimeout = 0
                            }, e)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e, t) {
                        this.layer.addFeatures(e, t)
                    }
                }, {
                    key: "removeFeatures",
                    value: function(e, t) {
                        this.layer.removeFeatures(e, t)
                    }
                }, {
                    key: "animateHome",
                    value: function(e) {
                        W.map.getPannable().panTo(e, this.homeAnimationZoom);
                        var t = W.map.getResolution(),
                            n = this.homeSpotLightRadius / t,
                            i = 2 * n,
                            r = _.extend({}, d, {
                                from: i,
                                to: n
                            }),
                            s = new OL.Geometry.Point(e.lon, e.lat);
                        this.drawAndFocusSpotlightAtPoint(s, {
                                maskID: "spotlightMask",
                                filter: "url(#spotlightBlur)",
                                pointRadius: n,
                                fillColor: "black",
                                fillOpacity: 1,
                                animation: r
                            }, this.spotLightDuration),
                            this.addHomePin(s)
                    }
                }, {
                    key: "addHomePin",
                    value: function(e) {
                        var t = new OpenLayers.Feature.Vector(e.clone(), {
                            type: "homePin"
                        });
                        return this.addFeatures(t),
                            t
                    }
                }, {
                    key: "_isSpotlightInBounds",
                    value: function(e) {
                        var t = 70 * this.map.getResolution(),
                            n = new OL.Bounds(e.x - t, e.y + t, e.x + t, e.y - t);
                        return this.map.getExtent().containsBounds(n)
                    }
                }, {
                    key: "_destroyLayer",
                    value: function() {
                        null != this.layer && (this.layer.removeAllFeatures(),
                            this.map.removeLayer(this.layer),
                            this.layer.destroy(),
                            this.layer = null)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        return this.disableTimeout && (window.clearTimeout(this.disableTimeout),
                                this.disableTimeout = 0),
                            this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                                this.removeTimeout = 0),
                            this._destroyLayer()
                    }
                }]),
                e
        }();
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(208),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend();
    a.prototype.deafults = _.extend({
            collatedCount: null
        }, s.default.prototype.defaults),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(7)),
        r = a(n(10)),
        s = a(n(63));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = {
        bfs: function(e, t, n) {
            var i = [e],
                r = {};
            r[e.getID()] = e.getID();
            for (var a = function() {
                    for (var e = i.shift(), s = ["from", "to"], a = 0; a < s.length; a++)
                        for (var o = s[a], l = e.attributes[o + "NodeID"], u = e.getConnectedSegments(o).filter(function(n) {
                                return n.getID() !== e.getID() && t(n)
                            }).map(function(e) {
                                return e
                            }), d = 0; d < u.length; d++) {
                            var c = u[d];
                            if (!r[c.getID()]) {
                                if (r[c.getID()] = e.getID(),
                                    n(c, l, o, u, e))
                                    return {
                                        v: [c, r]
                                    };
                                i.push(c)
                            }
                        }
                }; !_.isEmpty(i);) {
                var o = a();
                if ("object" === (void 0 === o ? "undefined" : (0,
                        s.default)(o)))
                    return o.v
            }
            return [null, r]
        },
        getReversedSegments: function(e) {
            var t = {
                multipleConnectedComponents: !1,
                numReversed: 0
            };
            if (_.isEmpty(e))
                return t;
            t[e[0].getID()] = !1;
            var n = this.bfs(e[0], function(t) {
                    return e.includes(t)
                }, function(e, n, i, r, s) {
                    var a = "from" === i && e.attributes.toNodeID !== n || "to" === i && e.attributes.fromNodeID !== n,
                        o = t[s.getID()],
                        l = a ? !o : o;
                    return t[e.getID()] = l,
                        l && t.numReversed++,
                        !1
                }),
                s = (0,
                    r.default)(n, 2)[1];
            return (0,
                    i.default)(s).length < e.length && (t = {
                    multipleConnectedComponents: !0,
                    numReversed: 0
                }),
                t
        }
    };
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SAVE_EVENTS = void 0;
    var i = w(n(53)),
        r = w(n(10)),
        s = w(n(61)),
        a = w(n(6)),
        o = w(n(7)),
        l = w(n(25)),
        u = w(n(62)),
        d = w(n(432)),
        c = w(n(120)),
        h = w(n(2)),
        f = w(n(0)),
        p = w(n(1)),
        g = w(n(3)),
        v = w(n(4)),
        m = n(110),
        y = w(n(208)),
        b = w(n(1255));

    function w(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var k = {
            SAVE_START: "save:start",
            SAVE_END: "save:end",
            SAVE_SUCCESS: "save:success",
            SAVE_FAIL: "save:fail",
            SAVE_PROGRESS: "save:progress",
            SAVE_GROUP_START: "save:group:start",
            SAVE_GROUP_END: "save:group:end",
            SAVE_GROUP_SUCCESS: "save:group:success",
            SAVE_GROUP_FAIL: "save:group:fail",
            GROUP_SET_ERRORS: "group:set:errors",
            GROUP_REMOVE_ERRORS: "group:remove:errors"
        },
        E = function(e) {
            function t() {
                return (0,
                        f.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        h.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._actionManager = e.actionManager,
                            this._controller = e.controller,
                            this._editingMediator = e.editingMediator,
                            this._editingLocksIds = [],
                            this._saveErrors = new c.default,
                            this._savingGroups = new d.default,
                            this._lockedGroups = new d.default,
                            this._bindEvents()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._actionManager.events.on({
                            scope: this,
                            afteraction: this._onAction,
                            afterundoaction: this._onAction
                        })
                    }
                }, {
                    key: "_onAction",
                    value: function(e) {
                        var t = this._actionManager.getActionGroupId(e.action);
                        this._clearGroupErrors(t)
                    }
                }, {
                    key: "_saveGroupTask",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            n = t.groupId;
                        return this._setSaveGroupStarted(n),
                            t.actions || (t.actions = this._actionManager.getActionsByGroupId(n)),
                            this._controller.save(t).then(function(t) {
                                return e._clearGroupErrors(n),
                                    e._triggerSaveGroupSuccess(n),
                                    t
                            }).catch(function(t) {
                                e._clearGroupErrors(n);
                                var i = t;
                                i instanceof m.SaveError || (console.error(i),
                                        i = e._createDefaultSaveError()),
                                    e._setGroupErrors(n, i),
                                    e._reportErrors(i.errors),
                                    e._triggerSaveGroupFail(n)
                            }).finally(function() {
                                e._setSaveGroupEnded(n)
                            })
                    }
                }, {
                    key: "_createDefaultSaveError",
                    value: function() {
                        return new m.SaveError([new y.default])
                    }
                }, {
                    key: "_startSave",
                    value: function() {
                        this._triggerSaveStart(),
                            this._lockEditing()
                    }
                }, {
                    key: "_endSave",
                    value: function() {
                        this._triggerSaveEnd(),
                            this._releaseEditing()
                    }
                }, {
                    key: "_lockEditing",
                    value: function() {
                        this._editingMediator.set({
                            navigation: !1,
                            saving: !0
                        });
                        var e = this._editingMediator.lockEditing();
                        this._editingLocksIds.push(e)
                    }
                }, {
                    key: "_releaseEditing",
                    value: function() {
                        this._editingMediator.set({
                            navigation: !0,
                            saving: !1
                        });
                        var e = this._editingLocksIds.pop();
                        this._editingMediator.releaseEditing(e)
                    }
                }, {
                    key: "_setSaveGroupStarted",
                    value: function(e) {
                        this._savingGroups.add(e),
                            this._triggerSaveGroupStart(e)
                    }
                }, {
                    key: "_setSaveGroupEnded",
                    value: function(e) {
                        this._savingGroups.delete(e),
                            this._triggerSaveGroupEnd(e)
                    }
                }, {
                    key: "_isGroupLocked",
                    value: function(e) {
                        return this._lockedGroups.has(e)
                    }
                }, {
                    key: "_lockGroup",
                    value: function(e) {
                        this._lockedGroups.add(e)
                    }
                }, {
                    key: "_releaseGroupLock",
                    value: function(e) {
                        this._lockedGroups.delete(e)
                    }
                }, {
                    key: "getGroupSaveErrors",
                    value: function(e) {
                        var t = this._saveErrors.get(e),
                            n = [];
                        return t && (n = this._collateErrors(t.errors)),
                            n
                    }
                }, {
                    key: "getAllErrorsByGroupsIds",
                    value: function() {
                        var e = this;
                        return (0,
                            u.default)(this._saveErrors.keys()).reduce(function(t, n) {
                            return t[n] = e.getGroupSaveErrors(n),
                                t
                        }, {})
                    }
                }, {
                    key: "getGroupSaveStatus",
                    value: function(e) {
                        return this._savingGroups.has(e)
                    }
                }, {
                    key: "_collateErrors",
                    value: function(e) {
                        var t = [],
                            n = _.groupBy(e, function(e) {
                                return e.get("code")
                            }),
                            i = !0,
                            r = !1,
                            s = void 0;
                        try {
                            for (var a, u = (0,
                                    l.default)((0,
                                    o.default)(n)); !(i = (a = u.next()).done); i = !0) {
                                var d = (e = n[a.value])[0].clone();
                                e.length > 1 && d.set({
                                        geometry: null,
                                        collatedCount: e.length,
                                        ignorable: _.every(e, function(e) {
                                            return e.get("ignorable")
                                        })
                                    }),
                                    t.push(d)
                            }
                        } catch (e) {
                            r = !0,
                                s = e
                        } finally {
                            try {
                                !i && u.return && u.return()
                            } finally {
                                if (r)
                                    throw s
                            }
                        }
                        return t
                    }
                }, {
                    key: "saveGroup",
                    value: function(e, t) {
                        var n = this;
                        if (!this._isGroupLocked(e)) {
                            this._lockGroup(e),
                                this._startSave();
                            var i = this._actionManager.getActionsByGroupId(e);
                            this._saveGroupTask((0,
                                a.default)({}, t, {
                                actions: i,
                                groupId: e,
                                clearAllActions: !1
                            })).then(function(t) {
                                n._releaseGroupLock(e),
                                    n._endSave();
                                var i = n.getGroupSaveErrors(e);
                                return i && i.length > 0 ? n._triggerSaveFail() : n._triggerSaveSuccess(),
                                    t
                            })
                        }
                    }
                }, {
                    key: "isIgnorable",
                    value: function(e) {
                        var t = this.getGroupSaveErrors(e);
                        return !t || t.every(function(e) {
                            return e.get("ignorable")
                        })
                    }
                }, {
                    key: "_clearAllErrors",
                    value: function() {
                        var e = this;
                        this._saveErrors.forEach(function(t, n) {
                            e._clearGroupErrors(n)
                        })
                    }
                }, {
                    key: "_clearGroupErrors",
                    value: function(e) {
                        this._saveErrors.has(e) && (this._saveErrors.delete(e),
                            this._triggerGroupRemoveErrors(e))
                    }
                }, {
                    key: "_setGroupErrors",
                    value: function(e, t) {
                        this._saveErrors.set(e, t),
                            this._triggerGroupSetErrors(e, t)
                    }
                }, {
                    key: "save",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            n = (new Date).getTime(),
                            i = 0;
                        this._startSave();
                        var o = t.actionsGroups || this._actionManager.getActionsByGroupsIds(),
                            l = (0,
                                s.default)(o).map(function(e) {
                                var n = (0,
                                        r.default)(e, 2),
                                    i = n[0],
                                    s = n[1];
                                return (0,
                                    a.default)({}, t, {
                                    groupId: i,
                                    actions: s,
                                    clearAllActions: !1
                                })
                            }),
                            u = 0,
                            d = new b.default({
                                maxParallel: 10
                            }),
                            c = l.filter(function(t) {
                                return !e._isGroupLocked(t.groupId)
                            }).map(function(t) {
                                var n = t.groupId;
                                return e._lockGroup(n),
                                    function() {
                                        return e._saveGroupTask(t).then(function(r) {
                                            e._releaseGroupLock(n),
                                                i += t.actions.length,
                                                u++,
                                                e.trigger(k.SAVE_PROGRESS, {
                                                    finished: u,
                                                    total: l.length,
                                                    percent: u / l.length
                                                })
                                        })
                                    }
                            });
                        return d.all(c).then(function(t) {
                            e._onParallelSaveFinish();
                            var r = (new Date).getTime() - n,
                                s = t.length;
                            return W.Report.save("duration", r),
                                W.Report.save("actions", i, r),
                                W.Report.save("groups", s, r),
                                W.Report.save("failed_groups", s, e._saveErrors.size),
                                t
                        })
                    }
                }, {
                    key: "_onParallelSaveFinish",
                    value: function() {
                        this._actionManager.clearGroupsWithOnlyRevertedChanges(),
                            this._endSave(),
                            this.hasErrors() ? this._triggerSaveFail() : this._triggerSaveSuccess()
                    }
                }, {
                    key: "hasErrors",
                    value: function() {
                        return this._saveErrors.size > 0
                    }
                }, {
                    key: "hasWarnings",
                    value: function() {
                        return _.flatten((0,
                            i.default)(this.getAllErrorsByGroupsIds())).some(function(e) {
                            return e.get("ignorable")
                        })
                    }
                }, {
                    key: "_reportErrors",
                    value: function() {
                        (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).forEach(function(e) {
                            var t = e.get("code");
                            W.Report.saveError(t)
                        })
                    }
                }, {
                    key: "_triggerSaveGroupStart",
                    value: function(e) {
                        this.trigger(k.SAVE_GROUP_START, e)
                    }
                }, {
                    key: "_triggerSaveGroupEnd",
                    value: function(e) {
                        this.trigger(k.SAVE_GROUP_END, e)
                    }
                }, {
                    key: "_triggerSaveGroupSuccess",
                    value: function(e) {
                        this.trigger(k.SAVE_GROUP_SUCCESS, e)
                    }
                }, {
                    key: "_triggerSaveGroupFail",
                    value: function(e) {
                        this.trigger(k.SAVE_GROUP_FAIL, e)
                    }
                }, {
                    key: "_triggerGroupSetErrors",
                    value: function(e, t) {
                        this.trigger(k.GROUP_SET_ERRORS, {
                            groupId: e,
                            error: t
                        })
                    }
                }, {
                    key: "_triggerGroupRemoveErrors",
                    value: function(e) {
                        this.trigger(k.GROUP_REMOVE_ERRORS, e)
                    }
                }, {
                    key: "_triggerSaveStart",
                    value: function() {
                        this.trigger(k.SAVE_START)
                    }
                }, {
                    key: "_triggerSaveEnd",
                    value: function() {
                        this.trigger(k.SAVE_END)
                    }
                }, {
                    key: "_triggerSaveSuccess",
                    value: function() {
                        this.trigger(k.SAVE_SUCCESS)
                    }
                }, {
                    key: "_triggerSaveFail",
                    value: function() {
                        this.trigger(k.SAVE_FAIL)
                    }
                }]),
                t
        }(Marionette.Object);
    t.SAVE_EVENTS = k,
        t.default = E
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(16),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        tagName: "li",
        className: "feed-item",
        triggers: {
            click: "click"
        },
        events: {
            "click .delete": "_onClickDelete"
        },
        initialize: function() {
            this.model.on("change:selected", this._toggleSelected, this),
                this.model.on("delegate:delete", this._destroyModel, this),
                this.model.on("resolved", this._destroyModel, this)
        },
        serializeData: function() {
            return {
                title: this.model.getParameter("title"),
                shortMessage: this.model.getParameter("shortMessage"),
                timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
            }
        },
        _onClickDelete: function(e) {
            return e.stopPropagation(),
                this._destroyModel()
        },
        _destroyModel: function() {
            var e = this;
            return this.$el.one("transitionend", function() {
                    return e.model.destroy()
                }),
                this.$el.addClass("deleting"),
                W.Report.feedAction("dismiss", this.model.get("type"))
        },
        _toggleSelected: function() {
            var e = this.model.get("selected");
            this.$el.toggleClass("selected", e),
                e && this.el.scrollIntoViewIfNeeded()
        },
        _formatTimestamp: function() {
            return s.default.localizeDateString("date.formats.long_with_time", this.model.get("timestamp"))
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(9)),
        r = d(n(10)),
        s = d(n(7)),
        a = d(n(1306)),
        o = d(n(37)),
        l = n(85),
        u = d(n(1307));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = OpenLayers.Class(o.default, {
        children: null,
        address: null,
        addressDetails: null,
        attributeToReducer: null,
        attributeNames: ["flags", "fwdFlags", "revFlags", "roadType", "direction", "level", "fwdToll", "revToll", "fwdDirection", "revDirection", "fwdMaxSpeed", "fwdMaxSpeedUnverified", "revMaxSpeed", "revMaxSpeedUnverified", "permissions", "updatedBy", "createdBy", "createdOn", "updatedOn", "length", "allowNoDirection", "rank", "lockRank", "routingRoadType", "hasClosures", "hasHNs"],
        attributeReducers: {
            permissions: a.default.bitwise.and,
            length: a.default.sum,
            rank: a.default.max,
            hasClosures: a.default.logical.or,
            hasHNs: a.default.logical.or,
            flags: a.default.bitwise.or,
            fwdflags: a.default.bitwise.or,
            revFlags: a.default.bitwise.or,
            fwdToll: a.default.logical.or,
            revToll: a.default.logical.or,
            fwdMaxSpeedUnverified: a.default.logical.or,
            revMaxSpeedUnverified: a.default.logical.or
        },
        flagAttributeNames: (0,
            s.default)(o.default.prototype.FLAG_ATTRIBUTES),
        flagAttributeReducers: (0,
            s.default)(o.default.prototype.FLAG_ATTRIBUTES).reduce(function(e, t) {
            return e[t] = a.default.logical.and
        }, {}),
        attributeReverses: {
            fwdDirection: "directionReverser",
            revDirection: "directionReverser"
        },
        reversableAttributes: {
            fwdMaxSpeed: "revMaxSpeed",
            revMaxSpeed: "fwdMaxSpeed",
            fwdDirection: "revDirection",
            revDirection: "fwdDirection",
            fwdToll: "revToll",
            revToll: "fwdToll",
            fwdFlags: "revFlags",
            revFlags: "fwdFlags",
            fwdMaxSpeedUnverified: "revMaxSpeedUnverified",
            revMaxSpeedUnverified: "fwdMaxSpeedUnverified"
        },
        UNITS: {
            speed: l.UNIT.KILOMETER
        },
        initialize: function(e, t, n) {
            this.children = e,
                this.model = t,
                this.reverseSegments = n,
                this.attributeToReducer = _.extend({}, this.attributeReducers, this.flagAttributeReducers),
                this.calcAttributes()
        },
        directionReverser: function(e, t) {
            return e.isOneWay() ? !e.attributes[t] : e.attributes[t]
        },
        calcAttributes: function() {
            var e, t, n = this._computeAttributes(this.attributeNames),
                s = (0,
                    r.default)(n, 2),
                a = s[0],
                o = s[1],
                l = this._computeAttributes(this.flagAttributeNames),
                u = (0,
                    r.default)(l, 2),
                d = u[0],
                c = u[1];
            this.attributes = a,
                this.flagAttributes = d,
                this.mixed = _.extend({}, o, c),
                this.address = null,
                this.addressDetails = null,
                this.calcVirtualAttributes(),
                this.attributes.restrictions = (e = []).concat.apply(e, (0,
                    i.default)(this.children.map(function(e) {
                    return e.getDrivingRestrictions()
                }))),
                this.attributes.pickupRestrictions = (t = []).concat.apply(t, (0,
                    i.default)(this.children.map(function(e) {
                    return e.getPickupRestrictions()
                })))
        },
        _computeAttributes: function(e) {
            var t = this,
                n = {},
                i = {};
            return e.forEach(function(e) {
                    var r = null,
                        s = t.attributeToReducer[e],
                        a = _.unique(t.children.map(function(n) {
                            return t._getChildAttribute(n, e)
                        }));
                    1 === a.length ? (r = a[0],
                            i[e] = !1) : (i[e] = !0,
                            r = s ? a.reduce(s) : a),
                        n[e] = r
                }),
                [n, i]
        },
        calcVirtualAttributes: function() {
            this.mixed.fwdToll || this.mixed.revToll ? this.mixed.toll = !0 : this.attributes.toll = this.isTollRoad(),
                this.mixed.fwdDirection || this.mixed.revDirection ? this.mixed.direction = !0 : this.attributes.direction = this._getDirection()
        },
        _getDirection: function() {
            return (this.attributes.fwdDirection ? 1 : 0) + (this.attributes.revDirection ? 2 : 0)
        },
        isTollRoad: function() {
            return this.attributes.fwdToll || this.attributes.revToll
        },
        isTollRoadMixed: function() {
            return Boolean(this.mixed.toll)
        },
        getAddress: function() {
            return new u.default(this.children.map(function(e) {
                return e.getAddress()
            }), this.model)
        },
        getID: function() {
            return this.children.map(function(e) {
                return e.getID()
            }).join(", ")
        },
        isHighway: function() {
            return this.children.every(function(e) {
                return e.isHighway()
            })
        },
        isInBigJunction: function() {
            return this.children.some(function(e) {
                return e.isInBigJunction()
            })
        },
        isInRoundabout: function() {
            return this.children.every(function(e) {
                return e.isInRoundabout()
            })
        },
        isEntireRoundabout: function() {
            var e = this.children[0].getRoundabout();
            if (!e)
                return !1;
            var t = this.children.every(function(t) {
                    return t.attributes.junctionID === e.attributes.id
                }),
                n = e.attributes.segIDs.length === this.children.length;
            return t && n
        },
        canChangeMaxSpeedUnverified: function(e) {
            var t = this;
            return !!this.isDrivable() && this.children.some(function(n) {
                var i = t._getAttributeByDirection(n, e);
                return n.canChangeMaxSpeedUnverified(i)
            })
        },
        isDrivable: function() {
            return this.children.every(function(e) {
                return e.isDrivable()
            })
        },
        hasConsistentDrivability: function() {
            return this.children.some(function(e) {
                return !e.isDrivable()
            }) ? this.children.every(function(e) {
                return !e.isDrivable()
            }) : this.children.every(function(e) {
                return e.isDrivable()
            })
        },
        hasConsistentWalkability: function() {
            return this.children.some(function(e) {
                return e.isWalkingRoadType()
            }) ? this.children.every(function(e) {
                return e.isWalkingRoadType()
            }) : this.children.every(function(e) {
                return !e.isWalkingRoadType()
            })
        },
        _canEditConsistentWalkabilityAttribute: function() {
            return this.hasConsistentWalkability() && this.arePropertiesEditable()
        },
        canEditUnpaved: function() {
            return this._canEditConsistentWalkabilityAttribute()
        },
        canEditTunnel: function() {
            return this._canEditConsistentWalkabilityAttribute()
        },
        canEditNearbyHOV: function() {
            return this._canEditConsistentWalkabilityAttribute()
        },
        canEditHeadlightsReminder: function() {
            return this.hasConsistentWalkability() && o.default.prototype.canEditHeadlightsReminder.apply(this, arguments)
        },
        canEditDirection: function() {
            return this.isDrivable() && !this.isInBigJunction() && this.arePropertiesEditable()
        },
        canEditMaxSpeed: function(e) {
            return !this.isSpeedUnverified(e + "MaxSpeedUnverified") && this.hasConsistentWalkability() && this.arePropertiesEditable()
        },
        canEditAverageSpeedCamera: function() {
            return this.hasConsistentWalkability() && o.default.prototype.canEditAverageSpeedCamera.apply(this, arguments)
        },
        allowRestrictionEditing: function() {
            return this.isDrivable() && o.default.prototype.allowRestrictionEditing.apply(this, arguments)
        },
        supportsPickupRestrictions: function() {
            return this.children.every(function(e) {
                return e.supportsPickupRestrictions()
            })
        },
        supportsLanes: function(e) {
            return 1 === this.children.length && this.children[0].supportsLanes(e)
        },
        canEditHouseNumbers: function() {
            return this.children.every(function(e) {
                return e.canEditHouseNumbers()
            })
        },
        supportsHouseNumbers: function() {
            return this.children.every(function(e) {
                return e.supportsHouseNumbers()
            })
        },
        hasSingleNonEmptyStreet: function() {
            return this.getAddress().hasSingleNonEmptyStreet()
        },
        _isReversed: function(e) {
            return Boolean(this.reverseSegments[e.getID()])
        },
        _getChildAttribute: function(e, t) {
            var n = void 0;
            if (n = this.flagAttributeNames.indexOf(t) > -1 ? e.getFlagAttribute(t) : e.attributes[t],
                this._isReversed(e)) {
                var i = this.attributeReverses[t],
                    r = this.reversableAttributes[t];
                i ? n = this[i](e, t) : r && (n = e.attributes[r])
            }
            return n
        },
        _getAttributeByDirection: function(e, t) {
            var n = this.reversableAttributes[t];
            return this._isReversed(e) && n ? n : t
        },
        CLASS_NAME: "Waze.Feature.Vector.CompositeSegment"
    });
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(10)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(16));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "className",
                value: function() {
                    return "lock-edit-view"
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".lock-level-displayer": {
                            observe: this.propertiesEditableAttribute,
                            visible: !0,
                            onGet: _.negate(_.identity)
                        },
                        ".lock-level-displayer label": {
                            observe: [this.lockRankAttribute, this.rankAttribute],
                            onGet: function(e) {
                                var t = (0,
                                        i.default)(e, 2),
                                    n = t[0],
                                    r = t[1];
                                return null != n ? u.default.formatRank(n) : I18n.t("edit.segment.lock_levels.automatic", {
                                    rank: u.default.formatRank(r)
                                })
                            }
                        },
                        ".lock-level-selector": {
                            observe: this.propertiesEditableAttribute,
                            visible: !0
                        },
                        ".lock-level-selector input[name='lockRank']": {
                            observe: [this.lockRankAttribute, this.lockRankMixedAttribute],
                            onGet: function(e) {
                                var t = (0,
                                        i.default)(e, 2),
                                    n = t[0];
                                return t[1] ? "MIXED" : null != n ? n : "AUTO"
                            },
                            onSet: function(e) {
                                return "AUTO" === e ? [null, !1] : "MIXED" === e ? [null, !0] : [e, !1]
                            }
                        },
                        ".lock-level-selector input[name=lockRank][value='MIXED'] + label": {
                            observe: this.lockRankMixedAttribute,
                            visible: !0
                        },
                        ".lock-level-selector input[name=lockRank][value='AUTO']": {
                            attributes: [{
                                name: "disabled",
                                observe: this.allowDefaultRankAttribute,
                                onGet: _.negate(_.identity)
                            }]
                        },
                        ".lock-level-selector label[for|='lockRank'].automatic": {
                            observe: this.rankAttribute,
                            onGet: function(e) {
                                return I18n.t("edit.segment.lock_levels.automatic", {
                                    rank: u.default.formatRank(e)
                                })
                            }
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.rankAttribute = e.rankAttribute || "rank",
                        this.lockRankAttribute = e.lockRankAttribute || "lockRank",
                        this.lockRankMixedAttribute = e.lockRankMixedAttribute || "lockRankMixed",
                        this.allowDefaultRankAttribute = e.allowDefaultRankAttribute || "allowDefaultRank",
                        this.propertiesEditableAttribute = e.propertiesEditableAttribute || "propertiesEditable"
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/lock/edit"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(15)),
        s = u(n(0)),
        a = u(n(3)),
        o = u(n(1)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                s.default)(this, t);
            var n = e.observeAttribute || "currentSelection",
                o = e.model && e.model.get(n) || e.currentSelection || e.optionsList[0];
            _.defaults(e, {
                model: new Backbone.Model((0,
                    r.default)({}, n, o))
            });
            var l = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return l.observeAttribute = n,
                l.name = n || l._generateRandomName(),
                l.optionsList = e.optionsList,
                l.labels = e.labels,
                l.title = e.title,
                l
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "className",
                value: function() {
                    return "single-selection " + this.options.style
                }
            }, {
                key: "bindings",
                value: function() {
                    var e = this;
                    return {
                        input: {
                            observe: this.observeAttribute,
                            onGet: function(t) {
                                return e._optionToValue(t)
                            },
                            onSet: function(t) {
                                return e._valueToOption(t)
                            }
                        }
                    }
                }
            }, {
                key: "defaults",
                value: function() {
                    return {
                        optionsList: [],
                        labels: null,
                        name: "",
                        title: ""
                    }
                }
            }, {
                key: "modelEvents",
                value: function() {
                    var e = this.options.observeAttribute || "currentSelection";
                    return (0,
                        r.default)({}, "change:" + e, "_onModelChange")
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/single_selection_view"
                }
            }]),
            (0,
                o.default)(t, [{
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "_onModelChange",
                value: function() {
                    this.trigger("selection:changed", this.getSelected())
                }
            }, {
                key: "getSelected",
                value: function() {
                    return this.model.get(this.observeAttribute)
                }
            }, {
                key: "select",
                value: function(e) {
                    this.model.set(this.observeAttribute, e)
                }
            }, {
                key: "_optionToInputId",
                value: function(e) {
                    var t = (e || "").toString().replace(/[^a-zA-Z0-9]/gi, ""),
                        n = this.optionsList.indexOf(e);
                    return "id_" + this.name + "_" + t + "_" + n
                }
            }, {
                key: "_optionToValue",
                value: function(e) {
                    return this.optionsList.indexOf(e)
                }
            }, {
                key: "_valueToOption",
                value: function(e) {
                    return this.optionsList[e]
                }
            }, {
                key: "_getOptionLabel",
                value: function(e) {
                    if (this.labels && this.labels.length > 0) {
                        var t = this.optionsList.indexOf(e);
                        return this.labels[t]
                    }
                    return e
                }
            }, {
                key: "_generateRandomName",
                value: function() {
                    return Math.random().toString(16).replace(".", "")
                }
            }, {
                key: "_isEmptyOption",
                value: function(e) {
                    return null === e || "" === e
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        model: this.model,
                        optionToId: this._optionToInputId.bind(this),
                        optionToValue: this._optionToValue.bind(this),
                        getOptionLabel: this._getOptionLabel.bind(this),
                        isEmpty: this._isEmptyOption,
                        options: this.optionsList,
                        name: this.name,
                        title: this.title
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(43),
        r = Marionette.View.extend({
            template: "Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item",
            control: null,
            enabled: !0,
            parent: null,
            className: function() {
                var e = [],
                    t = this.model.get("control");
                e.push(null != this.parent ? "toolbar-group-item" : "toolbar-button"),
                    this.enabled && t.enabled ? this.isActive() ? e.push("ItemActive") : e.push("ItemInactive") : e.push("ItemDisabled"),
                    t.tooltip && e.push("waze-tooltip");
                var n = this.model.get("iconClass");
                return n && e.push(n),
                    t.displayClass && e.push(t.displayClass),
                    e.join(" ")
            },
            events: {
                click: "_onToolbarButtonClick",
                "click .secondary-control": "_onSecondaryControlClick"
            },
            initialize: function(e) {
                return this.control = this.model.get("control"),
                    this.secondaryControl = this.model.get("secondaryControl"),
                    this.parent = e.parent,
                    this.map = e.map,
                    this.control && this._addControlToMap(this.control),
                    this.secondaryControl && this._addControlToMap(this.secondaryControl),
                    this._addEventListeners()
            },
            onDestroy: function() {
                return this._removeEventListeners(),
                    this.control.deactivate(),
                    this.control.destroy()
            },
            _addControlToMap: function(e) {
                !0 === e.autoActivate ? (e.autoActivate = !1,
                    this.map.addControl(e),
                    e.autoActivate = !0) : (this.map.addControl(e),
                    e.deactivate())
            },
            _addEventListeners: function() {
                return this.control.events.on({
                    activate: this.syncModelAndRender,
                    deactivate: this.syncModelAndRender,
                    visibilitychanged: this.render,
                    enablechanged: this.render,
                    tooltipchanged: this.renderTooltip,
                    scope: this
                })
            },
            _removeEventListeners: function() {
                return this.control.events.un({
                    activate: this.syncModelAndRender,
                    deactivate: this.syncModelAndRender,
                    visibilitychanged: this.render,
                    enablechanged: this.render,
                    tooltipchanged: this.renderTooltip,
                    scope: this
                })
            },
            syncModelAndRender: function() {
                return this.model.set("active", this.isActive()),
                    this.render()
            },
            isActive: function() {
                return this.control && this.control.active || this.secondaryControl && this.secondaryControl.active
            },
            renderTooltip: function() {
                var e = this.model.get("control").tooltip;
                e ? (this.$el.attr("title", ""),
                    this.$el.tooltip({
                        placement: "bottom",
                        html: !0,
                        title: (0,
                            i.getHTML)("Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-tooltip", {
                            text: e,
                            icon: "lock-light"
                        })
                    })) : (this.$el.tooltip("destroy"),
                    this.$el.attr("title", this.model.get("title")))
            },
            onRender: function() {
                if (this.$el.attr({
                        class: _.result(this, "className")
                    }),
                    null == this.parent && this.renderTooltip(),
                    null != this.control.onRender)
                    return this.control.onRender(this.$el)
            },
            _onToolbarButtonClick: function() {
                return this._triggerControl(this.control)
            },
            _onSecondaryControlClick: function(e) {
                return e.stopPropagation(),
                    this._triggerControl(this.secondaryControl)
            },
            _triggerControl: function(e) {
                if (e) {
                    if (!e.enabled)
                        return !1;
                    switch (e.type) {
                        case OL.Control.TYPE_BUTTON:
                            e.trigger();
                            break;
                        case OL.Control.TYPE_TOGGLE:
                            this.model.get("active") ? e.deactivate() : e.activate();
                            break;
                        default:
                            return e.activate(),
                                !1
                    }
                    this.trigger("controlTriggered")
                }
            },
            enable: function() {
                return this.enabled = !0,
                    this.render()
            },
            disable: function() {
                return this.enabled = !1,
                    this.render()
            },
            serializeData: function() {
                return {
                    title: this.model.get("title"),
                    control: this.control,
                    secondaryControl: this.secondaryControl,
                    showDrawingControls: this.model.get("showDrawingControls"),
                    featureName: this.model.get("featureName")
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t) {
    e.exports = function(e) {
        var t = [];
        return t.toString = function() {
                return this.map(function(t) {
                    var n = function(e, t) {
                        var n = e[1] || "",
                            i = e[3];
                        if (!i)
                            return n;
                        if (t && "function" == typeof btoa) {
                            var r = (a = i,
                                    "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(a)))) + " */"),
                                s = i.sources.map(function(e) {
                                    return "/*# sourceURL=" + i.sourceRoot + e + " */"
                                });
                            return [n].concat(s).concat([r]).join("\n")
                        }
                        var a;
                        return [n].join("\n")
                    }(t, e);
                    return t[2] ? "@media " + t[2] + "{" + n + "}" : n
                }).join("")
            },
            t.i = function(e, n) {
                "string" == typeof e && (e = [
                    [null, e, ""]
                ]);
                for (var i = {}, r = 0; r < this.length; r++) {
                    var s = this[r][0];
                    "number" == typeof s && (i[s] = !0)
                }
                for (r = 0; r < e.length; r++) {
                    var a = e[r];
                    "number" == typeof a[0] && i[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(" + a[2] + ") and (" + n + ")"),
                        t.push(a))
                }
            },
            t
    }
}, function(e, t, n) {
    var i, r, s = {},
        a = (i = function() {
                return window && document && document.all && !window.atob
            },
            function() {
                return void 0 === r && (r = i.apply(this, arguments)),
                    r
            }
        ),
        o = function(e) {
            var t = {};
            return function(e) {
                return void 0 === t[e] && (t[e] = function(e) {
                            return document.querySelector(e)
                        }
                        .call(this, e)),
                    t[e]
            }
        }(),
        l = null,
        u = 0,
        d = [],
        c = n(1446);

    function h(e, t) {
        for (var n = 0; n < e.length; n++) {
            var i = e[n],
                r = s[i.id];
            if (r) {
                r.refs++;
                for (var a = 0; a < r.parts.length; a++)
                    r.parts[a](i.parts[a]);
                for (; a < i.parts.length; a++)
                    r.parts.push(_(i.parts[a], t))
            } else {
                var o = [];
                for (a = 0; a < i.parts.length; a++)
                    o.push(_(i.parts[a], t));
                s[i.id] = {
                    id: i.id,
                    refs: 1,
                    parts: o
                }
            }
        }
    }

    function f(e, t) {
        for (var n = [], i = {}, r = 0; r < e.length; r++) {
            var s = e[r],
                a = t.base ? s[0] + t.base : s[0],
                o = {
                    css: s[1],
                    media: s[2],
                    sourceMap: s[3]
                };
            i[a] ? i[a].parts.push(o) : n.push(i[a] = {
                id: a,
                parts: [o]
            })
        }
        return n
    }

    function p(e, t) {
        var n = o(e.insertInto);
        if (!n)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
        var i = d[d.length - 1];
        if ("top" === e.insertAt)
            i ? i.nextSibling ? n.insertBefore(t, i.nextSibling) : n.appendChild(t) : n.insertBefore(t, n.firstChild),
            d.push(t);
        else {
            if ("bottom" !== e.insertAt)
                throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
            n.appendChild(t)
        }
    }

    function g(e) {
        if (null === e.parentNode)
            return !1;
        e.parentNode.removeChild(e);
        var t = d.indexOf(e);
        t >= 0 && d.splice(t, 1)
    }

    function v(e) {
        var t = document.createElement("style");
        return e.attrs.type = "text/css",
            m(t, e.attrs),
            p(e, t),
            t
    }

    function m(e, t) {
        Object.keys(t).forEach(function(n) {
            e.setAttribute(n, t[n])
        })
    }

    function _(e, t) {
        var n, i, r, s;
        if (t.transform && e.css) {
            if (!(s = t.transform(e.css)))
                return function() {};
            e.css = s
        }
        if (t.singleton) {
            var a = u++;
            n = l || (l = v(t)),
                i = w.bind(null, n, a, !1),
                r = w.bind(null, n, a, !0)
        } else
            e.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n = function(e) {
                    var t = document.createElement("link");
                    return e.attrs.type = "text/css",
                        e.attrs.rel = "stylesheet",
                        m(t, e.attrs),
                        p(e, t),
                        t
                }(t),
                i = function(e, t, n) {
                    var i = n.css,
                        r = n.sourceMap,
                        s = void 0 === t.convertToAbsoluteUrls && r;
                    (t.convertToAbsoluteUrls || s) && (i = c(i));
                    r && (i += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(r)))) + " */");
                    var a = new Blob([i], {
                            type: "text/css"
                        }),
                        o = e.href;
                    e.href = URL.createObjectURL(a),
                        o && URL.revokeObjectURL(o)
                }
                .bind(null, n, t),
                r = function() {
                    g(n),
                        n.href && URL.revokeObjectURL(n.href)
                }
            ) : (n = v(t),
                i = function(e, t) {
                    var n = t.css,
                        i = t.media;
                    i && e.setAttribute("media", i);
                    if (e.styleSheet)
                        e.styleSheet.cssText = n;
                    else {
                        for (; e.firstChild;)
                            e.removeChild(e.firstChild);
                        e.appendChild(document.createTextNode(n))
                    }
                }
                .bind(null, n),
                r = function() {
                    g(n)
                }
            );
        return i(e),
            function(t) {
                if (t) {
                    if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap)
                        return;
                    i(e = t)
                } else
                    r()
            }
    }
    e.exports = function(e, t) {
        if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document)
            throw new Error("The style-loader cannot be used in a non-browser environment");
        (t = t || {}).attrs = "object" == typeof t.attrs ? t.attrs : {},
            t.singleton || (t.singleton = a()),
            t.insertInto || (t.insertInto = "head"),
            t.insertAt || (t.insertAt = "bottom");
        var n = f(e, t);
        return h(n, t),
            function(e) {
                for (var i = [], r = 0; r < n.length; r++) {
                    var a = n[r];
                    (o = s[a.id]).refs--,
                    i.push(o)
                }
                e && h(f(e, t), t);
                for (r = 0; r < i.length; r++) {
                    var o;
                    if (0 === (o = i[r]).refs) {
                        for (var l = 0; l < o.parts.length; l++)
                            o.parts[l]();
                        delete s[o.id]
                    }
                }
            }
    };
    var y, b = (y = [],
        function(e, t) {
            return y[e] = t,
                y.filter(Boolean).join("\n")
        }
    );

    function w(e, t, n, i) {
        var r = n ? "" : i.css;
        if (e.styleSheet)
            e.styleSheet.cssText = b(t, r);
        else {
            var s = document.createTextNode(r),
                a = e.childNodes;
            a[t] && e.removeChild(a[t]),
                a.length ? e.insertBefore(s, a[t]) : e.appendChild(s)
        }
    }
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, n) {
    var i = n(52),
        r = n(33),
        s = n(59).f;
    e.exports = function(e) {
        return function(t) {
            for (var n, a = r(t), o = i(a), l = o.length, u = 0, d = []; l > u;)
                s.call(a, n = o[u++]) && d.push(e ? [n, a[n]] : a[n]);
            return d
        }
    }
}, function(e, t, n) {
    var i = n(28);
    e.exports = function(e, t, n, r) {
        try {
            return r ? t(i(n)[0], n[1]) : t(n)
        } catch (t) {
            var s = e.return;
            throw void 0 !== s && i(s.call(e)),
                t
        }
    }
}, function(e, t, n) {
    var i = n(51),
        r = n(23)("iterator"),
        s = Array.prototype;
    e.exports = function(e) {
        return void 0 !== e && (i.Array === e || s[r] === e)
    }
}, function(e, t, n) {
    var i = n(28),
        r = n(56),
        s = n(23)("species");
    e.exports = function(e, t) {
        var n, a = i(e).constructor;
        return void 0 === a || void 0 == (n = i(a)[s]) ? t : r(n)
    }
}, function(e, t, n) {
    var i, r, s, a = n(46),
        o = n(361),
        l = n(130),
        u = n(96),
        d = n(18),
        c = d.process,
        h = d.setImmediate,
        f = d.clearImmediate,
        p = d.MessageChannel,
        g = d.Dispatch,
        v = 0,
        m = {},
        _ = function() {
            var e = +this;
            if (m.hasOwnProperty(e)) {
                var t = m[e];
                delete m[e],
                    t()
            }
        },
        y = function(e) {
            _.call(e.data)
        };
    h && f || (h = function(e) {
                for (var t = [], n = 1; arguments.length > n;)
                    t.push(arguments[n++]);
                return m[++v] = function() {
                        o("function" == typeof e ? e : Function(e), t)
                    },
                    i(v),
                    v
            },
            f = function(e) {
                delete m[e]
            },
            "process" == n(65)(c) ? i = function(e) {
                c.nextTick(a(_, e, 1))
            } :
            g && g.now ? i = function(e) {
                g.now(a(_, e, 1))
            } :
            p ? (s = (r = new p).port2,
                r.port1.onmessage = y,
                i = a(s.postMessage, s, 1)) : d.addEventListener && "function" == typeof postMessage && !d.importScripts ? (i = function(e) {
                    d.postMessage(e + "", "*")
                },
                d.addEventListener("message", y, !1)) : i = "onreadystatechange" in u("script") ? function(e) {
                l.appendChild(u("script")).onreadystatechange = function() {
                    l.removeChild(this),
                        _.call(e)
                }
            } :
            function(e) {
                setTimeout(a(_, e, 1), 0)
            }
        ),
        e.exports = {
            set: h,
            clear: f
        }
}, function(e, t) {
    e.exports = function(e, t, n) {
        var i = void 0 === n;
        switch (t.length) {
            case 0:
                return i ? e() : e.call(n);
            case 1:
                return i ? e(t[0]) : e.call(n, t[0]);
            case 2:
                return i ? e(t[0], t[1]) : e.call(n, t[0], t[1]);
            case 3:
                return i ? e(t[0], t[1], t[2]) : e.call(n, t[0], t[1], t[2]);
            case 4:
                return i ? e(t[0], t[1], t[2], t[3]) : e.call(n, t[0], t[1], t[2], t[3])
        }
        return e.apply(n, t)
    }
}, function(e, t) {
    e.exports = function(e) {
        try {
            return {
                e: !1,
                v: e()
            }
        } catch (e) {
            return {
                e: !0,
                v: e
            }
        }
    }
}, function(e, t, n) {
    var i = n(28),
        r = n(26),
        s = n(182);
    e.exports = function(e, t) {
        if (i(e),
            r(t) && t.constructor === e)
            return t;
        var n = s.f(e);
        return (0,
                n.resolve)(t),
            n.promise
    }
}, function(e, t, n) {
    "use strict";
    var i = n(18),
        r = n(12),
        s = n(27),
        a = n(29),
        o = n(23)("species");
    e.exports = function(e) {
        var t = "function" == typeof r[e] ? r[e] : i[e];
        a && t && !t[o] && s.f(t, o, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }
}, function(e, t, n) {
    var i = n(23)("iterator"),
        r = !1;
    try {
        var s = [7][i]();
        s.return = function() {
                r = !0
            },
            Array.from(s, function() {
                throw 2
            })
    } catch (e) {}
    e.exports = function(e, t) {
        if (!t && !r)
            return !1;
        var n = !1;
        try {
            var s = [7],
                a = s[i]();
            a.next = function() {
                    return {
                        done: n = !0
                    }
                },
                s[i] = function() {
                    return a
                },
                e(s)
        } catch (e) {}
        return n
    }
}, function(e, t, n) {
    "use strict";
    var i = n(27),
        r = n(50);
    e.exports = function(e, t, n) {
        t in e ? i.f(e, t, r(0, n)) : e[t] = n
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.RASTER_LAYER_NAME = "cities",
        t.FEATURES_LAYER_NAME = "cities_features",
        t.MARKERS_LAYER_NAME = "cities_markers",
        t.GROUP_DISPLAY = "GROUP_DISPLAY",
        t.GROUP_CITIES = "GROUP_CITIES",
        t.ITEM_CITY_NAMES = "ITEM_CITY_NAMES",
        t.OBJECT_TYPE = "city"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(45)),
        d = c(n(17));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "isEmpty",
                value: function() {
                    return !0 === this.attributes.isEmpty
                }
            }, {
                key: "hasName",
                value: function() {
                    return "" !== this.attributes.name && null !== this.attributes.name && void 0 !== this.attributes.name
                }
            }, {
                key: "showMarker",
                value: function() {
                    return null !== this.attributes.geometry && !this.isEmpty()
                }
            }, {
                key: "defaults",
                get: function() {
                    return {
                        id: null,
                        countryID: null,
                        stateID: null,
                        name: null,
                        englishName: null,
                        geometry: null,
                        isEmpty: !1,
                        permissions: d.default.ALL_PERMISSIONS
                    }
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(h.prototype, {
        nested: {
            geometry: OL.Geometry
        },
        PERMISSIONS: {
            EDIT_PROPERTIES: 1
        }
    }),
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0,
        t.default = function(e, t) {
            var n = {};
            for (var i in e)
                t.indexOf(i) >= 0 || Object.prototype.hasOwnProperty.call(e, i) && (n[i] = e[i]);
            return n
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            selected: !1
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
            OPEN: "open",
            SOLVED: "solved",
            NOT_IDENTIFIED: "not-identified",
            CLOSED_AUTOMATICALLY: "closed-automatically"
        },
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(10)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e() {
            (0,
                r.default)(this, e)
        }
        return (0,
                s.default)(e, [{
                key: "getWeekdaysGist",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                        t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "*",
                        n = [],
                        i = e.length;
                    if (0 === i)
                        return n;
                    for (var r = 0, s = 0; r < i;) {
                        var a = e[r];
                        if (0 === r)
                            n.push(a);
                        else if (r === i - 1) {
                            a === e[r - 1] + 1 && s > 0 && n.push(t),
                                n.push(a)
                        } else {
                            var o = e[r - 1],
                                l = e[r + 1];
                            a !== o + 1 ? n.push(a) : a === l - 1 ? s++ : (s > 0 && n.push(t),
                                n.push(a),
                                s = 0)
                        }
                        r++
                    }
                    return n
                }
            }, {
                key: "isValidTime",
                value: function(e) {
                    if (!_.isString(e))
                        return !1;
                    var t = e.split(":");
                    if (2 !== t.length)
                        return !1;
                    var n = (0,
                            i.default)(t, 2),
                        r = n[0],
                        s = n[1];
                    return !(!/([01]?[0-9]|2[0-3])/.test(r) || !/[0-5]\d/.test(s))
                }
            }, {
                key: "_parseTimeStr",
                value: function(e) {
                    if (this.isValidTime(e)) {
                        var t = e.split(":");
                        return {
                            hour: parseInt(t[0], 10),
                            minute: parseInt(t[1], 10)
                        }
                    }
                    return {}
                }
            }, {
                key: "compareTimes",
                value: function(e, t) {
                    var n = this._parseTimeStr(e),
                        i = this._parseTimeStr(t);
                    return n.hour === i.hour ? n.minute > i.minute ? 1 : n.minute < i.minute ? -1 : 0 : n.hour > i.hour ? 1 : n.hour < i.hour ? -1 : 0
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    var i = n(27).f,
        r = n(64),
        s = n(183),
        a = n(46),
        o = n(181),
        l = n(116),
        u = n(95),
        d = n(132),
        c = n(364),
        h = n(29),
        f = n(98).fastKey,
        p = n(194),
        g = h ? "_s" : "size",
        v = function(e, t) {
            var n, i = f(t);
            if ("F" !== i)
                return e._i[i];
            for (n = e._f; n; n = n.n)
                if (n.k == t)
                    return n
        };
    e.exports = {
        getConstructor: function(e, t, n, u) {
            var d = e(function(e, i) {
                o(e, d, t, "_i"),
                    e._t = t,
                    e._i = r(null),
                    e._f = void 0,
                    e._l = void 0,
                    e[g] = 0,
                    void 0 != i && l(i, n, e[u], e)
            });
            return s(d.prototype, {
                    clear: function() {
                        for (var e = p(this, t), n = e._i, i = e._f; i; i = i.n)
                            i.r = !0,
                            i.p && (i.p = i.p.n = void 0),
                            delete n[i.i];
                        e._f = e._l = void 0,
                            e[g] = 0
                    },
                    delete: function(e) {
                        var n = p(this, t),
                            i = v(n, e);
                        if (i) {
                            var r = i.n,
                                s = i.p;
                            delete n._i[i.i],
                                i.r = !0,
                                s && (s.n = r),
                                r && (r.p = s),
                                n._f == i && (n._f = r),
                                n._l == i && (n._l = s),
                                n[g]--
                        }
                        return !!i
                    },
                    forEach: function(e) {
                        p(this, t);
                        for (var n, i = a(e, arguments.length > 1 ? arguments[1] : void 0, 3); n = n ? n.n : this._f;)
                            for (i(n.v, n.k, this); n && n.r;)
                                n = n.p
                    },
                    has: function(e) {
                        return !!v(p(this, t), e)
                    }
                }),
                h && i(d.prototype, "size", {
                    get: function() {
                        return p(this, t)[g]
                    }
                }),
                d
        },
        def: function(e, t, n) {
            var i, r, s = v(e, t);
            return s ? s.v = n : (e._l = s = {
                        i: r = f(t, !0),
                        k: t,
                        v: n,
                        p: i = e._l,
                        n: void 0,
                        r: !1
                    },
                    e._f || (e._f = s),
                    i && (i.n = s),
                    e[g]++,
                    "F" !== r && (e._i[r] = s)),
                e
        },
        getEntry: v,
        setStrong: function(e, t, n) {
            u(e, t, function(e, n) {
                    this._t = p(e, t),
                        this._k = n,
                        this._l = void 0
                }, function() {
                    for (var e = this._k, t = this._l; t && t.r;)
                        t = t.p;
                    return this._t && (this._l = t = t ? t.n : this._t._f) ? d(0, "keys" == e ? t.k : "values" == e ? t.v : [t.k, t.v]) : (this._t = void 0,
                        d(1))
                }, n ? "entries" : "values", !n, !0),
                c(t)
        }
    }
}, function(e, t, n) {
    "use strict";
    var i = n(18),
        r = n(21),
        s = n(98),
        a = n(39),
        o = n(35),
        l = n(183),
        u = n(116),
        d = n(181),
        c = n(26),
        h = n(58),
        f = n(27).f,
        p = n(873)(0),
        g = n(29);
    e.exports = function(e, t, n, v, m, _) {
        var y = i[e],
            b = y,
            w = m ? "set" : "add",
            k = b && b.prototype,
            E = {};
        return g && "function" == typeof b && (_ || k.forEach && !a(function() {
                (new b).entries().next()
            })) ? (b = t(function(t, n) {
                    d(t, b, e, "_c"),
                        t._c = new y,
                        void 0 != n && u(n, m, t[w], t)
                }),
                p("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","), function(e) {
                    var t = "add" == e || "set" == e;
                    e in k && (!_ || "clear" != e) && o(b.prototype, e, function(n, i) {
                        if (d(this, b, e),
                            !t && _ && !c(n))
                            return "get" == e && void 0;
                        var r = this._c[e](0 === n ? 0 : n, i);
                        return t ? this : r
                    })
                }),
                _ || f(b.prototype, "size", {
                    get: function() {
                        return this._c.size
                    }
                })) : (b = v.getConstructor(t, e, m, w),
                l(b.prototype, n),
                s.NEED = !0),
            h(b, e),
            E[e] = b,
            r(r.G + r.W + r.F, E),
            _ || v.setStrong(b, e, m),
            b
    }
}, function(e, t, n) {
    var i = n(134),
        r = n(877);
    e.exports = function(e) {
        return function() {
            if (i(this) != e)
                throw TypeError(e + "#toJSON isn't generic");
            return r(this)
        }
    }
}, function(e, t, n) {
    "use strict";
    var i = n(21);
    e.exports = function(e) {
        i(i.S, e, { of: function() {
                for (var e = arguments.length, t = new Array(e); e--;)
                    t[e] = arguments[e];
                return new this(t)
            }
        })
    }
}, function(e, t, n) {
    "use strict";
    var i = n(21),
        r = n(56),
        s = n(46),
        a = n(116);
    e.exports = function(e) {
        i(i.S, e, {
            from: function(e) {
                var t, n, i, o, l = arguments[1];
                return r(this),
                    (t = void 0 !== l) && r(l),
                    void 0 == e ? new this : (n = [],
                        t ? (i = 0,
                            o = s(l, arguments[2], 2),
                            a(e, !1, function(e) {
                                n.push(o(e, i++))
                            })) : a(e, !1, n.push, n),
                        new this(n))
            }
        })
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(19)),
        r = l(n(371)),
        s = l(n(882)),
        a = l(n(104)),
        o = n(72);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = a.default.extend({
        MORE_INFO_DEFAULTS: [{
            name: "route",
            visible: !0
        }, {
            name: "drive",
            visible: !0
        }],
        getTitle: function() {
            return this.problem.attributes.typeText
        },
        getReportedString: function() {
            var e = this.problem.attributes.localDriveTime || this.problem.attributes.driveDate;
            return I18n.t("update_requests.panel.reported", {
                date: I18n.l("time.formats.long", Date.parse(e))
            })
        },
        hasDescription: function() {
            var e = this.problem.attributes.description;
            return null != e && e.length > 0
        },
        getDescription: function() {
            return this.problem.attributes.description
        },
        isConversationAvailable: function() {
            return !0
        },
        allowCommenting: function() {
            return this.problem.model.loginManager.isLoggedIn()
        },
        minRankForEdit: function() {
            return (0,
                o.getServerConfig)().minRankForEditingUpdateRequest
        },
        getMoreInfo: function() {
            var e = this;
            return null != this.moreInfo ? i.default.resolve(this.moreInfo) : this.problem.model.updateRequestSessions.getAsync([this.problem.getID()]).then(function(t) {
                return e._moreInfoTypeMap.drive.set({
                        available: null != t[0].driveGeometry
                    }),
                    e._moreInfoTypeMap.route.set({
                        available: null != t[0].routeGeometry
                    }),
                    e.moreInfo = t,
                    t
            })
        },
        getConversation: function() {
            return null != this.conversation ? i.default.resolve(this.conversation) : this.getMoreInfo().then(function(e) {
                return e[0]
            })
        },
        getRepository: function() {
            return this.problem.model.mapUpdateRequests
        },
        createMoreInfoRenderer: function(e, t, n) {
            return new s.default(e, t, n)
        },
        getMarkerLayer: function() {
            return W.map.updateRequestLayer
        },
        getBounds: function() {
            return this.problem.getRequestBounds().getBounds()
        },
        getNextButtonString: function() {
            return this._nextButtonString || I18n.t("update_requests.panel.next")
        },
        reportStateChanged: function() {
            var e = "" + this.problem.attributes.type;
            this.getState() === r.default.SOLVED ? W.Report.updateRequestAction("update_state", e, 1) : this.getState() === r.default.NOT_IDENTIFIED && W.Report.updateRequestAction("update_state", e, -1)
        }
    });
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(6)),
        r = v(n(9)),
        s = v(n(10)),
        a = v(n(61)),
        o = v(n(2)),
        l = v(n(0)),
        u = v(n(1)),
        d = v(n(3)),
        c = v(n(4)),
        h = v(n(45)),
        f = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        p = v(n(13)),
        g = n(119);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t() {
            return (0,
                    l.default)(this, t),
                (0,
                    d.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments))
        }
        return (0,
                c.default)(t, e),
            (0,
                u.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        segIDs: []
                    }
                }
            }, {
                key: "eachSegmentPair",
                value: function(e, t, n) {
                    (0,
                        a.default)(e).forEach(function(e) {
                        var i = (0,
                                s.default)(e, 2),
                            r = i[0],
                            a = i[1],
                            o = r.split(",");
                        t.call(n, parseInt(o[0], 10), parseInt(o[1], 10), a, r)
                    })
                }
            }, {
                key: "allConnectionKeys",
                value: function(e) {
                    var t = [],
                        n = [];
                    return this.attributes.segIDs.forEach(function(i) {
                        var r = this.model.segments.getObjectById(i);
                        this.attributes.segIDs.forEach(function(i) {
                            var s = this.model.segments.getObjectById(i);
                            r && s && (r !== s || e) && (t.push({
                                    from: r,
                                    to: s
                                }),
                                this.isTurnAllowedBySegDirections(r, s) && r.isDrivable() && s.isDrivable() && n.push({
                                    from: r,
                                    to: s
                                }))
                        }, this)
                    }, this), {
                        all: t,
                        legal: n
                    }
                }
            }, {
                key: "isTurnAllowedBySegDirections",
                value: function(e, t) {
                    if (!e || !t)
                        return !1;
                    var n = e.attributes.toNodeID === this.getID() ? e.attributes.fwdDirection : e.attributes.revDirection,
                        i = t.attributes.fromNodeID === this.getID() ? t.attributes.fwdDirection : t.attributes.revDirection;
                    return n && i
                }
            }, {
                key: "getSegmentIds",
                value: function() {
                    return [].concat((0,
                        r.default)(this.attributes.segIDs))
                }
            }, {
                key: "getAngleToSegment",
                value: function(e) {
                    var t = void 0,
                        n = void 0,
                        i = e.geometry.getVertices(),
                        r = void 0;
                    return e.attributes.fromNodeID === this.getID() ? (t = i[0],
                            n = i[1]) : (t = i[i.length - 1],
                            n = i[i.length - 2]),
                        (r = p.default.radToDeg(Math.atan2(n.y - t.y, n.x - t.x))) < 0 && (r = 360 + r),
                        r
                }
            }, {
                key: "getDirectionBetweenSegments",
                value: function(e, t) {
                    var n = e.geometry.components,
                        i = n.length,
                        r = void 0,
                        s = void 0,
                        a = void 0;
                    return e.attributes.toNodeID === this.getID() ? (r = n[i - 2],
                            s = n[i - 1]) : (r = n[1],
                            s = n[0]),
                        a = t.attributes.fromNodeID === this.getID() ? t.geometry.components[1] : t.geometry.components[t.geometry.components.length - 2],
                        (s.x - r.x) * (a.y - r.y) - (s.y - r.y) * (a.x - r.x) > 0
                }
            }, {
                key: "isDisconnected",
                value: function() {
                    return _.isEmpty(this.attributes.segIDs)
                }
            }, {
                key: "isVirtual",
                value: function() {
                    var e = this;
                    return this.model.segments.getByIds(this.attributes.segIDs).some(function(t) {
                        return t.isVirtuallyConnectedToNode(e)
                    })
                }
            }, {
                key: "isConnectedToSegment",
                value: function(e) {
                    return this.attributes.segIDs.includes(e.getID())
                }
            }, {
                key: "isConnectedToBigJunction",
                value: function() {
                    return this.model.segments.getByIds(this.attributes.segIDs).some(function(e) {
                        return e.isBigJunctionShort()
                    }, this)
                }
            }, {
                key: "isAllowedToMoveNode",
                value: function() {
                    return this.attributes.segIDs.every(function(e) {
                        var t = this.model.segments.getObjectById(e);
                        return t && t.isAllowed(g.Segments.EDIT_GEOMETRY) && !t.isBigJunctionShort()
                    }, this)
                }
            }, {
                key: "isDeleteable",
                value: function(e) {
                    var t = this.attributes.segIDs.map(function(t) {
                        return e.segments.getObjectById(t)
                    });
                    return (t = t.filter(function(e) {
                        return f.defined(e)
                    })).length === this.attributes.segIDs.length && (this.areSegmentsBridgable(t) && h.default.prototype.isDeletable.apply(this))
                }
            }, {
                key: "_areDirectionalAttributeSame",
                value: function(e, t, n) {
                    var i = n;
                    return e.attributes.toNodeID !== t.attributes.fromNodeID && e.attributes.fromNodeID !== t.attributes.toNodeID && (i = n.concat().reverse()),
                        n.every(function(n, r) {
                            return e.attributes[n] === t.attributes[i[r]]
                        })
                }
            }, {
                key: "areSegmentsBridgable",
                value: function(e) {
                    if (!e || 2 !== e.length)
                        return !1;
                    var t = e[0],
                        n = e[1];
                    if (!this.attributes.segIDs.includes(t.getID()) || !this.attributes.segIDs.includes(n.getID()))
                        return !1;
                    if (!this.isTurnAllowedBySegDirections(t, n) && !this.isTurnAllowedBySegDirections(n, t))
                        return !1;
                    if (t.attributes.primaryStreetID !== n.attributes.primaryStreetID)
                        return !1;
                    var i = this._areDirectionalAttributeSame(t, n, ["fwdMaxSpeed", "revMaxSpeed"]),
                        r = this._areDirectionalAttributeSame(t, n, ["fwdToll", "revToll"]),
                        s = t.isDrivable() && n.isDrivable() || t.isWalkingRoadType() && n.isWalkingRoadType();
                    return i && s && r
                }
            }, {
                key: "allSegmentsPresent",
                value: function(e) {
                    return this.attributes.segIDs.every(function(t) {
                        return e.segments.getObjectById(t)
                    })
                }
            }, {
                key: "connectionsExist",
                value: function() {
                    return !_.isEmpty(this.allConnectionKeys().legal)
                }
            }, {
                key: "areConnectionsEditable",
                value: function() {
                    var e = this.model.segments.getByIds(this.attributes.segIDs);
                    return e.length === this.attributes.segIDs.length && e.every(function(e) {
                        return e.canEditConnections()
                    })
                }
            }, {
                key: "arePropertiesEditable",
                value: function() {
                    return this.areConnectionsEditable()
                }
            }, {
                key: "areAllConnectionsEnabled",
                value: function() {
                    var e = this.allConnectionKeys().legal,
                        t = this.model.getTurnGraph();
                    return !_.isEmpty(e) && e.every(function(e) {
                        return t.getTurnThroughNode(this, e.from, e.to).getTurnData().isAllowed()
                    }, this)
                }
            }, {
                key: "areAllConnectionsDisabled",
                value: function() {
                    var e = this.allConnectionKeys().legal,
                        t = this.model.getTurnGraph();
                    return !_.isEmpty(e) && e.every(function(e) {
                        return !t.getTurnThroughNode(this, e.from, e.to).getTurnData().isAllowed()
                    }, this)
                }
            }]),
            t
    }(h.default);
    (0,
        i.default)(m.prototype, {
        nested: {
            geometry: OL.Geometry
        },
        PERMISSIONS: {
            EDIT_GEOMETRY: 1,
            DELETE: 2,
            EDIT_OPEN_TURNS: 4,
            EDIT_CLOSE_TURNS: 8
        },
        CLASS_NAME: "Waze.Feature.Vector.Node"
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        SUBJECT: {
            VENUE: "VENUE",
            IMAGE: "IMAGE"
        },
        ACTION: {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        SEVERITY: {
            LOW: "low",
            MEDIUM: "medium",
            HIGH: "high"
        },
        SEVERITY_THRESHOLD: {
            LOW: 3,
            MEDIUM: 7
        },
        defaults: {
            approved: null
        },
        initialize: function() {
            return this.set({
                updateType: this.get("action") + "_" + this.get("subject")
            })
        },
        isVenue: function() {
            return this.get("subject") === this.SUBJECT.VENUE
        },
        isImage: function() {
            return this.get("subject") === this.SUBJECT.IMAGE
        },
        getAddedImage: function() {
            return this._findImage(this.id)
        },
        _findImage: function(e) {
            return _(this.get("place").attributes.images).find(function(t) {
                return t.get("id") === e
            })
        },
        isEditableByUser: function() {
            return this.get("isEditable") && this.get("isInEditArea")
        },
        isPlaceAdLocked: function() {
            return this.get("place").attributes.adLocked && !this.get("isAdLockedEditable")
        },
        getSeverity: function() {
            var e = new TimeSpan(Date.now() - this.get("dateAdded")).days,
                t = this.SEVERITY.HIGH;
            return e <= this.SEVERITY_THRESHOLD.LOW ? t = this.SEVERITY.LOW : e <= this.SEVERITY_THRESHOLD.MEDIUM && (t = this.SEVERITY.MEDIUM),
                t
        },
        getRequiredEditRank: function() {
            return Math.max(this.get("place").attributes.lockRank, i.MIN_EDIT_RANK)
        }
    });
    i.MIN_EDIT_RANK = 1,
        t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(7)),
        r = a(n(25)),
        s = a(n(143));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Backbone.Model.extend({
        GEOMETRY_FIELDS: {
            entryExitPoints: !0,
            geometry: !0
        },
        CHANGE_TYPE: {
            ADDED: "ADDED",
            REMOVED: "REMOVED",
            UNCHANGED: "UNCHANGED"
        },
        EXTERNAL_PROVIDER_FIELD_NAME: "externalProviderIDs",
        initialize: function(e, t) {
            e = {},
                this.__setSuggestedValue(e);
            var n = new s.default(e, {
                parse: !!t && t.parse
            });
            return n.model = W.model,
                this.set({
                    suggestedVenue: n
                })
        },
        __setSuggestedValue: function(e) {
            e[this.get("fieldName")] = this.get("suggestedValue")
        },
        isExternalProvider: function() {
            return this.attributes && this.attributes.fieldName === this.EXTERNAL_PROVIDER_FIELD_NAME
        },
        isGeometry: function() {
            return !0 === this.GEOMETRY_FIELDS[this.get("fieldName")]
        },
        _getChangeList: function(e, t) {
            var n = this,
                i = _.intersection(e, t),
                r = _.difference(e, t),
                s = _.difference(t, e);
            i = i.map(function(e) {
                    return {
                        name: e,
                        changeType: n.CHANGE_TYPE.UNCHANGED
                    }
                }),
                r = r.map(function(e) {
                    return {
                        name: e,
                        changeType: n.CHANGE_TYPE.REMOVED
                    }
                }),
                s = s.map(function(e) {
                    return {
                        name: e,
                        changeType: n.CHANGE_TYPE.ADDED
                    }
                });
            var a = i.concat(s, r);
            return _.sortBy(a, "name")
        }
    });
    o.build = function(e, t) {
            var n = [],
                s = !0,
                a = !1,
                l = void 0;
            try {
                for (var u, d = (0,
                        r.default)((0,
                        i.default)(e)); !(s = (u = d.next()).done); s = !0) {
                    var c = u.value,
                        h = e[c];
                    _.isEqual(h, t.attributes[c]) || n.push(new o({
                        fieldName: c,
                        suggestedValue: h,
                        venue: t
                    }, {
                        parse: !0
                    }))
                }
            } catch (e) {
                a = !0,
                    l = e
            } finally {
                try {
                    !s && d.return && d.return()
                } finally {
                    if (a)
                        throw l
                }
            }
            return n
        },
        t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(7)),
        r = s(n(25));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = s(n(381)).default.extend({
        __setSuggestedValue: function(e) {
            e.categoryAttributes = {
                    PARKING_LOT: {}
                },
                e.categoryAttributes.PARKING_LOT[this.get("fieldName")] = this.get("suggestedValue")
        }
    });
    a.build = function(e, t) {
            var n = [],
                s = !0,
                o = !1,
                l = void 0;
            try {
                for (var u, d = (0,
                        r.default)((0,
                        i.default)(e)); !(s = (u = d.next()).done); s = !0) {
                    var c = u.value,
                        h = e[c],
                        f = void 0;
                    t.attributes.categoryAttributes && t.attributes.categoryAttributes.PARKING_LOT && (f = t.attributes.categoryAttributes.PARKING_LOT[c]),
                        _.isEqual(h, f) || n.push(new a({
                            fieldName: c,
                            suggestedValue: h,
                            venue: t
                        }, {
                            parse: !0
                        }))
                }
            } catch (e) {
                o = !0,
                    l = e
            } finally {
                try {
                    !s && d.return && d.return()
                } finally {
                    if (o)
                        throw l
                }
            }
            return n
        },
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(0)),
        s = o(n(1)),
        a = o(n(13));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = t.point,
                i = void 0 === n ? new OL.Geometry.Point(0, 0) : n,
                s = t.entry,
                o = void 0 === s || s,
                l = t.exit,
                u = void 0 === l || l,
                d = t.primary,
                c = void 0 !== d && d,
                h = t.name,
                f = void 0 === h ? "" : h,
                p = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).parse,
                g = void 0 !== p && p;
            (0,
                r.default)(this, e),
            g && (i = a.default.parse(i)),
                this._point = i.clone(),
                this._entry = o,
                this._exit = u,
                this._isPrimary = c,
                this._name = f
        }
        return (0,
                s.default)(e, [{
                key: "with",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return new this.constructor((0,
                        i.default)(this.toJSON(), e))
                }
            }, {
                key: "getPoint",
                value: function() {
                    return this._point.clone()
                }
            }, {
                key: "getEntry",
                value: function() {
                    return this._entry
                }
            }, {
                key: "getExit",
                value: function() {
                    return this._exit
                }
            }, {
                key: "getName",
                value: function() {
                    return this._name
                }
            }, {
                key: "isPrimary",
                value: function() {
                    return this._isPrimary
                }
            }, {
                key: "toJSON",
                value: function() {
                    return {
                        point: this._point,
                        entry: this._entry,
                        exit: this._exit,
                        primary: this._isPrimary,
                        name: this._name
                    }
                }
            }, {
                key: "clone",
                value: function() {
                    return this.with()
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(45));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = 4,
        h = 14,
        f = function(e) {
            function t(e, n) {
                (0,
                    s.default)(this, t);
                var i = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e, n));
                return i.editable = i.attributes.open,
                    i.attributes.typeText = i.getTypeText(),
                    i.setSeverity(),
                    i
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "merge",
                    value: function(e) {
                        u.default.prototype.merge.apply(this, arguments),
                            this.editable = this.attributes.open
                    }
                }, {
                    key: "getRequestBounds",
                    value: function() {
                        return this.requestBounds || (this.requestBounds = this.attributes.bounds),
                            this.requestBounds
                    }
                }, {
                    key: "getTypeText",
                    value: function() {
                        return I18n.t("update_requests.types." + this.attributes.type)
                    }
                }, {
                    key: "setSeverity",
                    value: function() {
                        var e = new window.TimeSpan(Date.now() - this.attributes.driveDate).days,
                            t = "high";
                        e <= c ? t = "low" : e <= h && (t = "medium"),
                            this.attributes.severity = t
                    }
                }, {
                    key: "isRecentlyClosed",
                    value: function() {
                        return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= 6048e5
                    }
                }, {
                    key: "getLocation",
                    value: function() {
                        return this.attributes.geometry
                    }
                }, {
                    key: "canEdit",
                    value: function() {
                        return this.isAllowed(this.PERMISSIONS.EDIT)
                    }
                }]),
                t
        }(u.default);
    (0,
        i.default)(f.prototype, {
        nested: {
            geometry: OL.Geometry,
            bounds: OL.Geometry
        },
        editable: !0,
        Type: {
            INCORRECT_TURN: 6,
            INCORRECT_ADDRESS: 7,
            INCORRECT_ROUTE: 8,
            INCORRECT_MISSING_ROUNDABOUT: 9,
            INCORRECT_GENERAL_ERROR: 10,
            TURN_NOT_ALLOWED: 11,
            INCORRECT_JUNCTION: 12,
            MISSING_BRIDGE_OVERPASS: 13,
            WRONG_DRIVING_DIRECTIONS: 14,
            MISSING_EXIT: 15,
            MISSING_ROAD: 16
        },
        PERMISSIONS: {
            EDIT: 1,
            FORCE_CLOSE: 2
        },
        CLASS_NAME: "Waze.Feature.Vector.UpdateRequest"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = e.isLeft,
                i = void 0 === n ? null : n,
                a = e.projectionLonLat,
                l = void 0 === a ? null : a,
                u = e.closestSegment,
                d = void 0 === u ? null : u;
            (0,
                s.default)(this, t);
            var c = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return c.isLeft = i,
                c.projectionLonLat = l,
                c.closestSegment = d,
                c
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "calculateProjection",
                value: function(e) {
                    var t = new OL.Geometry.Point(this.geometry.x, this.geometry.y),
                        n = e.distanceTo(t, {
                            details: !0
                        }),
                        i = n.line,
                        r = {
                            x: i.x1,
                            y: i.y1
                        },
                        s = {
                            x: i.x2,
                            y: i.y2
                        };
                    if (s.y > r.y) {
                        var a = [s, r];
                        r = a[0],
                            s = a[1]
                    }
                    this.isLeft = (s.x - r.x) * (t.y - r.y) - (s.y - r.y) * (t.x - r.x) <= 0,
                        this.projectionLonLat = new OL.LonLat(n.x0, n.y0),
                        this.closestSegment = n.model
                }
            }, {
                key: "getFractionFromProjection",
                value: function() {
                    return new OL.Geometry.Point(this.projectionLonLat.lon, this.projectionLonLat.lat)
                }
            }, {
                key: "changedSegment",
                value: function() {
                    return this.parent.id !== this.closestSegment.getID()
                }
            }, {
                key: "clone",
                value: function() {
                    var e = new t({
                        fractionPoint: this.fractionPoint.clone(),
                        projectionLonLat: this.projectionLonLat ? this.projectionLonLat.clone() : null,
                        number: this.number,
                        valid: this.valid,
                        forced: this.forced,
                        id: this.id,
                        side: this.side,
                        version: this.version,
                        geometry: this.geometry.clone()
                    });
                    return e.parent = this.parent,
                        e
                }
            }]),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        nested: {
            geometry: OL.Geometry,
            fractionPoint: OL.Geometry
        }
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(2)),
        s = l(n(0)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l(n(17)).default);
    (0,
        i.default)(u.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getAllSegments",
                value: function() {
                    return this.model.segments.getByIds(this.attributes.segIDs)
                }
            }]),
            t
    }(l(n(45)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(45));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "parse",
                value: function(e) {
                    return null != e.env && (e.env = function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                            return "na" === (e = e.toLowerCase()) ? "usa" : e
                        }(e.env)),
                        u.default.prototype.parse.apply(this, arguments)
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(c.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    c.TYPE = {
            INVALID_ENV: "INVALID_ENV",
            GENERAL: "GENERAL",
            TEMP_FREEZE: "TEMP_FREEZE"
        },
        t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t(e, n, s) {
            (0,
                r.default)(this, t);
            var o = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e, s));
            return o._children = n,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getId",
                value: function() {
                    return this._id
                }
            }, {
                key: "getChildren",
                value: function() {
                    return this._children
                }
            }, {
                key: "appendChild",
                value: function(e) {
                    this.getChildren().push(e)
                }
            }, {
                key: "isLeaf",
                value: function() {
                    return !1
                }
            }], [{
                key: "of",
                value: function(e, n, i) {
                    return new t(e, n, i)
                }
            }]),
            t
    }(l(n(147)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
            stroke: !1,
            pointRadius: 12,
            fillColor: "white",
            fillOpacity: .6,
            graphicZIndex: 0,
            fontSize: 16,
            labelYOffset: 0,
            fontColor: "#3d3d3d",
            labelOutlineWidth: 0,
            fontFamily: "FontAwesome",
            label: ""
        },
        r = W.rule("dragPoint", !0, i),
        s = W.rule("dragPoint", !0, _.defaults({
            fillColor: "#25d7fd",
            fillOpacity: .3
        }, i));
    t.DragPointRule = r,
        t.DragPointHighlightRule = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(912)),
        r = a(n(148)),
        s = a(n(200));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.CompositeView.extend({
        childView: i.default,
        className: "conversation-view",
        childViewContainer: ".comment-list",
        template: "Waze/MapEditor/UI/Modules/Conversation/templates/list",
        behaviors: {
            charCount: {
                behaviorClass: s.default,
                charLimits: [{
                    inputSelector: ".new-comment-text",
                    charCountSelector: ".new-comment-max-length",
                    maxLength: r.default.prototype.MAX_BODY_LENGTH,
                    modelAttribute: "viewModel",
                    observe: "commentText"
                }]
            }
        },
        bindings: {
            "[name=follow]": {
                observe: "following",
                attributes: [{
                    observe: "disableFollowing",
                    name: "disabled"
                }]
            },
            ".no-comments": {
                observe: "commentCount",
                visible: !0,
                onGet: function(e) {
                    return 0 === e
                }
            },
            ".new-comment-text": {
                observe: "commentText",
                attributes: [{
                    observe: "submitting",
                    name: "disabled"
                }]
            },
            ".send-button": {
                attributes: [{
                    observe: "submitting",
                    name: "disabled"
                }]
            }
        },
        ui: {
            commentList: ".comment-list"
        },
        events: {
            "submit .new-comment-form": "_onSubmit"
        },
        initialize: function() {
            return this.commentable = this.options.commentable,
                this.collection = this.commentable.getComments(),
                this.viewModel = new Backbone.Model({
                    following: this.commentable.isFollowing(),
                    commentCount: this.collection.length,
                    commentText: "",
                    disableFollowing: !1,
                    submitting: !1
                }),
                this.listenTo(this.viewModel, "change:following", this._onFollowingChanged),
                this.listenTo(this.collection, "add", this._updateCommentCount)
        },
        _updateCommentCount: function() {
            return this.viewModel.set({
                commentCount: this.collection.length
            })
        },
        onRender: function() {
            return this.stickit(this.viewModel),
                this._scrollToLastComment()
        },
        _onFollowingChanged: function(e, t, n) {
            var i = this;
            if (n.stickitChange)
                return this.viewModel.set({
                        disableFollowing: !0
                    }),
                    this.commentable.setFollowing(t).catch(function() {
                        return i.viewModel.set({
                            following: !t
                        })
                    }).finally(function() {
                        return i.viewModel.set({
                            disableFollowing: !1
                        })
                    })
        },
        _onSubmit: function(e) {
            var t = this;
            e.preventDefault();
            var n = this.viewModel.get("commentText").trim();
            if (!(n.length <= 0))
                return this.viewModel.set({
                        submitting: !0
                    }),
                    this.commentable.addComment(n).then(function(e) {
                        return t.viewModel.set({
                                commentText: ""
                            }),
                            t.collection.add(e),
                            t.viewModel.set({
                                following: t.commentable.isFollowing()
                            }),
                            t._scrollToLastComment()
                    }).catch(function() {
                        window.alert(I18n.t("conversation.send_error"))
                    }).finally(function() {
                        return t.viewModel.set({
                            submitting: !1
                        })
                    })
        },
        _scrollToLastComment: function() {
            var e = this.ui.commentList.get(0);
            e.scrollTop = e.scrollHeight
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(2)),
        s = l(n(0)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l(n(17)).default);
    (0,
        i.default)(u.prototype, {
        TYPE: {
            MANAGED: "managed",
            DRIVE: "drive"
        },
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(2)),
        r = h(n(0)),
        s = h(n(1)),
        a = h(n(3)),
        o = h(n(4)),
        l = h(n(11)),
        u = h(n(22)),
        d = h(n(123)),
        c = h(n(149));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e, n, s) {
            (0,
                r.default)(this, t);
            var o = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, s));
            return o.segment = e,
                o.attributes = n,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this.segment.getAddress();
                    if (null == e.getStreet() || e.isEmptyStreet())
                        return !1;
                    var t = new d.default(e.getState(), e.getCountry(), this.attributes.cityName, this.attributes.emptyCity);
                    this.doSubAction(t);
                    var n = t.city,
                        i = new c.default(this.attributes.streetName, n, this.attributes.emptyStreet);
                    this.doSubAction(i);
                    var r = i.street;
                    if (this.segment.attributes.streetIDs.includes(r.getID()))
                        return !1;
                    this.doSubAction(new u.default(this.segment, {
                        streetIDs: this.segment.attributes.streetIDs.concat(r.getID())
                    }))
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment]
                }
            }]),
            t
    }(l.default);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(9)),
        r = f(n(2)),
        s = f(n(0)),
        a = f(n(1)),
        o = f(n(3)),
        l = f(n(8)),
        u = f(n(4)),
        d = f(n(37)),
        c = f(n(11)),
        h = f(n(107));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t(e, n, i) {
            (0,
                s.default)(this, t);
            var a = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, i));
            return a.segments = e,
                a.sourceSplits = n[0].map(function(e) {
                    var t = new d.default({
                        geometry: e
                    });
                    return t.copyAttributes(a.segments[0]),
                        t
                }),
                a.targetSplits = _.last(n).map(function(e) {
                    var t = new d.default({
                        geometry: e
                    });
                    return t.copyAttributes(_.last(a.segments)),
                        t
                }),
                a
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    var e = this.subActions[0] && this.subActions[0].splitNode;
                    return e ? [e] : []
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.AddIntersection")
                }
            }, {
                key: "doAction",
                value: function() {
                    var e = new h.default(_.last(this.segments), {
                        splits: this.targetSplits
                    });
                    return this.doSubAction(e),
                        this.doSubAction(new h.default(this.segments[0], {
                            splits: this.sourceSplits,
                            splitNode: e.splitNode
                        }))
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [].concat((0,
                        i.default)(this.segments.map(function(e) {
                        return e.getUniqueID()
                    })), (0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }]),
            t
    }(c.default);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(9)),
        r = f(n(2)),
        s = f(n(0)),
        a = f(n(1)),
        o = f(n(3)),
        l = f(n(8)),
        u = f(n(4)),
        d = f(n(11)),
        c = f(n(108)),
        h = f(n(107));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, n));
            return i._node = e,
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this._node]
                }
            }, {
                key: "doAction",
                value: function() {
                    var e = this;
                    if (!this._node.isVirtual())
                        return !1;
                    var t = this._node.attributes.segIDs.map(function(t) {
                        return e.model.segments.getObjectById(t)
                    }).find(function(t) {
                        return t.isVirtuallyConnectedToNode(e._node)
                    });
                    return this.doSubAction(new c.default(t, this._node, {
                            deleteNode: !1
                        })),
                        this.doSubAction(new h.default(t, {
                            splitNode: this._node,
                            splitAtPoint: this._node.attributes.geometry
                        })),
                        !0
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.ConvertNodeToRegular")
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this._node.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }]),
            t
    }(d.default);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(9)),
        r = p(n(2)),
        s = p(n(0)),
        a = p(n(1)),
        o = p(n(3)),
        l = p(n(8)),
        u = p(n(4)),
        d = p(n(11)),
        c = p(n(20)),
        h = n(14),
        f = p(n(108));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                s.default)(this, t),
            n.dontSerialize = !0;
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, n));
            return i.node = e,
                i.prevNodeState = null,
                i.hidNode = !1,
                i.changedSegAttributes = {},
                i.changedSegStates = [],
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.node]
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.node.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }, {
                key: "doAction",
                value: function() {
                    if (this.node.state === OpenLayers.State.DELETE)
                        return !1;
                    this.node.attributes.segIDs.forEach(function(e) {
                            var t = this.model.segments.getObjectById(e);
                            this.doSubAction(new f.default(t, this.node))
                        }, this),
                        this.node.getID(),
                        this.node.hidden || (this.hidNode = !0),
                        this.node.hidden = !0,
                        this.prevNodeState = this.node.state,
                        this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                            this.model.nodes.changed(this.node))
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.node.getID(),
                        this.hidNode && delete this.node.hidden,
                        this.node.state === OpenLayers.State.INSERT ? this.model.nodes.put(this.node) : (this.node.state = this.prevNodeState,
                            this.model.nodes.changed(this.node)),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.hidNode && (this.node.hidden = !0),
                        this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                            this.model.nodes.changed(this.node)),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this)
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: h.NODE,
                        action: c.default.TYPE.DELETE,
                        attributes: {
                            id: this.node.getID()
                        }
                    }
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.DeleteNode")
                }
            }]),
            t
    }(d.default);
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(9)),
        r = v(n(2)),
        s = v(n(0)),
        a = v(n(1)),
        o = v(n(3)),
        l = v(n(8)),
        u = v(n(4)),
        d = v(n(107)),
        c = v(n(151)),
        h = v(n(73)),
        f = v(n(108)),
        p = v(n(11)),
        g = n(14);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, n));
            return i.segment = e,
                i.options = n,
                i._analyzeSnappedFeatures(),
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "_analyzeSnappedFeatures",
                value: function() {
                    var e = this;
                    if (this.touching = {},
                        this.snappedFeatures) {
                        this.snappedFeatures instanceof Array || (this.snappedFeatures = [this.snappedFeatures]),
                            this.snappedFeatures = this.snappedFeatures.filter(function(e) {
                                return e
                            });
                        var t = this.segment.geometry.getVertices(!0),
                            n = t[0],
                            i = _.last(t),
                            r = void 0;
                        this.snappedFeatures.forEach(function(t) {
                            r = null,
                                t.point.equals(n) ? (e.touching.fromVertex = {},
                                    r = e.touching.fromVertex) : t.point.equals(i) && (e.touching.toVertex = {},
                                    r = e.touching.toVertex),
                                r && (r.feature = t.feature,
                                    r.point = t.point,
                                    r.distance = t.distance,
                                    t.feature.type === g.SEGMENT ? "edge" === t.type || "vertex" === t.type ? r.segmentEdge = !0 : "node" === t.type && (r.segmentNode = !0) : t.feature.type === g.NODE && (r.node = !0))
                        })
                    }
                }
            }, {
                key: "_connectToExistingNode",
                value: function(e, t) {
                    t !== e.getID() && (t && this.doSubAction(new f.default(this.segment, this.model.nodes.getObjectById(t))),
                        this.doSubAction(new h.default(e, this.segment)))
                }
            }, {
                key: "updateEndPoint",
                value: function(e, t, n) {
                    if (t) {
                        if (t.node)
                            this._connectToExistingNode(t.feature, e);
                        else if (t.segmentNode)
                            e && this.doSubAction(new f.default(this.segment, this.model.nodes.getObjectById(e))),
                            this.doSubAction(new c.default(t.point, [this.segment, t.feature]));
                        else if (t.segmentEdge)
                            if (e && this.doSubAction(new f.default(this.segment, this.model.nodes.getObjectById(e))),
                                this.segment.isWalkingRoadType() && !t.feature.isWalkingRoadType()) {
                                var i = new c.default(t.point, [this.segment]);
                                this.doSubAction(i);
                                var r = i.node;
                                this.doSubAction(new h.default(r, t.feature, {
                                    virtual: !0
                                }))
                            } else
                                this.doSubAction(new d.default(t.feature, {
                                    splitAtPoint: t.point,
                                    splitWithSegment: this.segment,
                                    splittingPointDistance: t.distance
                                }))
                    } else if (e && this.doSubAction(new f.default(this.segment, this.model.nodes.getObjectById(e))),
                        this.createNodes) {
                        var s = void 0;
                        s = n ? this.segment.geometry.components[0] : this.segment.geometry.components[this.segment.geometry.components.length - 1],
                            this.doSubAction(new c.default(s, [this.segment]))
                    }
                    return !0
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.segment.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment]
                }
            }, {
                key: "_getSplitAction",
                value: function() {
                    var e = this.flat();
                    return _.find(e, function(e) {
                        return e instanceof d.default
                    })
                }
            }, {
                key: "_getDisconnectAction",
                value: function() {
                    var e = this.flat(),
                        t = _.find(e, function(e) {
                            return e instanceof f.default
                        });
                    if (t && !t.node.isDisconnected())
                        return t
                }
            }, {
                key: "_getConnectAction",
                value: function() {
                    var e = this.flat(),
                        t = _.find(e, function(e) {
                            return e instanceof h.default
                        });
                    if (t && t.node.attributes.segIDs.length > 1)
                        return t
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this._getSplitAction();
                    if (e)
                        return e.generateDescription(),
                            void(this._description = e.getDescription());
                    var t = this._getConnectAction();
                    if (t)
                        return t.generateDescription(),
                            void(this._description = t.getDescription());
                    var n = this._getDisconnectAction();
                    n && (n.generateDescription(),
                        this._description = n.getDescription())
                }
            }]),
            t
    }(p.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = m(n(10)),
        r = m(n(61)),
        s = m(n(15)),
        a = m(n(2)),
        o = m(n(0)),
        l = m(n(1)),
        u = m(n(3)),
        d = m(n(4)),
        c = m(n(11)),
        h = m(n(22)),
        f = m(n(41)),
        p = m(n(34)),
        g = n(71),
        v = n(40);

    function m(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var _ = function(e) {
        function t(e, n) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                o.default)(this, t);
            var r = (0,
                u.default)(this, (t.__proto__ || (0,
                a.default)(t)).call(this, i));
            return r._segment = e,
                r._direction = n,
                r._laneCount = i.laneCount,
                r._turnLaneDatas = i.turnLaneDatas || {},
                r
        }
        return (0,
                d.default)(t, e),
            (0,
                l.default)(t, [{
                key: "doAction",
                value: function() {
                    this._shouldUpdateLaneCount(this._laneCount) && this._updateSegmentLaneCount(this._segment, this._direction, this._laneCount),
                        this._updateTurnLanes(this._segment, this._direction, this._turnLaneDatas)
                }
            }, {
                key: "_shouldUpdateLaneCount",
                value: function(e) {
                    return null != e
                }
            }, {
                key: "_updateSegmentLaneCount",
                value: function(e, t, n) {
                    var i = t === g.SEGMENT_LANE_DIRECTION.FWD ? "fwdLaneCount" : "revLaneCount";
                    this.doSubAction(new h.default(e, (0,
                        s.default)({}, i, n)))
                }
            }, {
                key: "_updateTurnLanes",
                value: function(e, t, n) {
                    var s = this,
                        a = t === g.SEGMENT_LANE_DIRECTION.FWD ? p.default.forwardOf(e.getID()) : p.default.reverseOf(e.getID());
                    (0,
                        r.default)(n).forEach(function(e) {
                        var t = (0,
                                i.default)(e, 2),
                            n = t[0],
                            r = t[1],
                            o = s.model.getTurnGraph().getTurn(a, p.default.fromID(n));
                        s._updateTurn(o, r)
                    })
                }
            }, {
                key: "_updateTurn",
                value: function(e, t) {
                    var n = e.getTurnData().withLanes(t),
                        i = e.withTurnData(n);
                    this.doSubAction(new f.default(this.model.getTurnGraph(), i))
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this._segment]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = 0 === this._segment.getLaneCount(this._direction);
                    this._description = (0,
                        v.formatActionAddressDescription)(this._segment, e ? "AddLanes" : "UpdateLanes")
                }
            }]),
            t
    }(c.default);
    t.default = _,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(9)),
        r = g(n(2)),
        s = g(n(0)),
        a = g(n(1)),
        o = g(n(3)),
        l = g(n(8)),
        u = g(n(4)),
        d = g(n(11)),
        c = g(n(20)),
        h = g(n(123)),
        f = g(n(149)),
        p = n(14);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, n));
            return i.attributes = null,
                i.initialGeometry = null,
                i.landmark = e,
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = void 0,
                        t = void 0,
                        n = null,
                        i = void 0,
                        r = this.landmark.attributes.geometry;
                    return !(!this.landmark.isPoint() && !this.landmark.is2D()) && (this.initialGeometry = this.landmark.geometry.clone(),
                        this.landmark.attributes.geometry = null,
                        this.attributes = {},
                        $.extend(!0, this.attributes, this.landmark.attributes),
                        this.landmark.attributes.geometry = r,
                        this.landmark.getID() || this.landmark.setID(this.model.venues.generateUniqueID()),
                        this.landmark.state = OpenLayers.State.INSERT,
                        this.landmark.getID(),
                        this.model.venues.put(this.landmark),
                        this.model.segments.topCityID && (n = this.model.cities.getObjectById(this.model.segments.topCityID)),
                        null === n && null !== this.model.countries.top && (t = new h.default(this.model.states.top, this.model.countries.top, "", !0),
                            this.doSubAction(t),
                            n = t.city),
                        null !== n && (e = new f.default("", n, !0),
                            this.doSubAction(e),
                            i = e.street,
                            this.attributes.streetID = i.getID(),
                            this.landmark.attributes.streetID = i.getID()),
                        !0)
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.landmark.getID(),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this),
                        this.model.venues.remove(this.landmark)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.model.venues.put(this.landmark),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = this.attributes;
                    return e.id = this.landmark.getID(),
                        e.geometry = this.initialGeometry, {
                            _objectType: p.VENUE,
                            action: c.default.TYPE.ADD,
                            attributes: e
                        }
                }
            }, {
                key: "getBounds",
                value: function() {
                    return this.initialGeometry.getBounds().clone()
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.landmark.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.landmark]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.AddLandmark")
                }
            }]),
            t
    }(d.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = E(n(2)),
        r = E(n(0)),
        s = E(n(1)),
        a = E(n(3)),
        o = E(n(4)),
        l = E(n(11)),
        u = E(n(150)),
        d = E(n(107)),
        c = E(n(151)),
        h = E(n(124)),
        f = E(n(41)),
        p = E(n(73)),
        g = E(n(92)),
        v = E(n(91)),
        m = E(n(22)),
        y = E(n(37)),
        b = E(n(34)),
        w = E(n(88)),
        k = E(n(387));

    function E(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var M = Math.PI / 180 * 10,
        S = function(e) {
            function t(e) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    r.default)(this, t);
                var s = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, n));
                return s.containedSegments = null,
                    s.roundaboutSegments = null,
                    s.isLeftHand = !1,
                    s.ellipse = e,
                    s._intersections = [],
                    s
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return this.getRoundaboutSegments()
                    }
                }, {
                    key: "getRoundaboutSegments",
                    value: function() {
                        return this.roundaboutSegments
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = _.compact(_.flatten(_.flatten(this._intersections).map(function(e) {
                            return e.segments
                        })).map(function(e) {
                            return e.getAddress() ? e.getAddress().getStreetName({
                                emptyString: null
                            }) : null
                        }));
                        e && e.length > 0 ? this._description = I18n.t("save.changes_log.actions.CreateRoundabout.has_street", {
                            streetName: e[0]
                        }) : this._description = I18n.t("save.changes_log.actions.CreateRoundabout.default")
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (this._intersections = this.getIntersections(),
                            _.isEmpty(this._intersections))
                            return !1;
                        this.determineDrivingDirection(this._intersections),
                            this.deleteContainedSegments(),
                            this.modifyIntersectingSegments(this._intersections),
                            this.addRoundaboutSegments(this._intersections),
                            this.addRoundabout()
                    }
                }, {
                    key: "determineDrivingDirection",
                    value: function(e) {
                        var t = e[0][0].segments[0].getAddress();
                        null == t || null == t.street || null == t.getCountry() ? this.isLeftHand = this.model.isLeftHand : this.isLeftHand = t.getCountry().leftHandTraffic
                    }
                }, {
                    key: "addRoundabout",
                    value: function() {
                        var e = _(this.roundaboutSegments).invoke("getID"),
                            t = new v.default(new k.default({
                                segIDs: e,
                                type: "RA"
                            }), this.model.junctions);
                        this.doSubAction(t);
                        var n = t.object;
                        this.roundaboutSegments.forEach(function(e) {
                            this.doSubAction(new m.default(e, {
                                junctionID: n.getID()
                            }))
                        }, this)
                    }
                }, {
                    key: "deleteContainedSegments",
                    value: function() {
                        this.containedSegments.forEach(function(e) {
                            this.doSubAction(new g.default(e))
                        }, this)
                    }
                }, {
                    key: "addRoundaboutSegments",
                    value: function(e) {
                        var t = void 0,
                            n = void 0,
                            i = void 0,
                            r = void 0,
                            s = void 0,
                            a = void 0,
                            o = void 0,
                            l = void 0;
                        for (this.roundaboutSegments = [],
                            (e = e.reduce(function(e, t) {
                                return e.concat(t)
                            })).sort(function(e, t) {
                                return e.angle - t.angle
                            }),
                            e.push({
                                angle: e[0].angle,
                                point: e[0].point,
                                segments: []
                            }),
                            t = 0; t < e.length - 1; t++) {
                            for (i = e[t].point,
                                r = e[t + 1].point,
                                o = new OpenLayers.Geometry.LineString,
                                l = new y.default({
                                    geometry: o
                                }),
                                s = e[t].angle,
                                a = e[t + 1].angle,
                                t === e.length - 2 && (a += 2 * Math.PI),
                                o.addPoint(i.clone()),
                                n = s + M; n < a; n += M)
                                o.addPoint(new OpenLayers.Geometry.Point(this.ellipse.center.x + this.ellipse.rx * Math.cos(n), this.ellipse.center.y + this.ellipse.ry * Math.sin(n)));
                            n > a && o.addPoint(r.clone()),
                                this.isLeftHand && (l.attributes.fwdDirection = !1,
                                    l.attributes.revDirection = !0),
                                this.doSubAction(new h.default(l)),
                                this.roundaboutSegments.push(l)
                        }
                        e.pop(),
                            this.addNodes(e, this.roundaboutSegments)
                    }
                }, {
                    key: "addNodes",
                    value: function(e, t) {
                        var n = void 0,
                            i = void 0;
                        e.forEach(function(e, r) {
                            (n = e.segments.concat()).push(t[r]),
                                n.push(t[(t.length + r - 1) % t.length]),
                                e.node ? n.forEach(function(t) {
                                    t.isConnectedToNode(e.node) || this.doSubAction(new p.default(e.node, t))
                                }, this) : (i = new c.default(e.point, n),
                                    this.doSubAction(i),
                                    e.node = i.node),
                                this.isLeftHand ? (this.openConnection(n[0], e.node, _.last(n)),
                                    this.openConnection(n[1], e.node, n[0]),
                                    this.openConnection(n[1], e.node, _.last(n))) : (this.openConnection(n[0], e.node, n[1]),
                                    this.openConnection(_.last(n), e.node, n[0]),
                                    this.openConnection(_.last(n), e.node, n[1]))
                        }, this)
                    }
                }, {
                    key: "openConnection",
                    value: function(e, t, n) {
                        if (t.isTurnAllowedBySegDirections(e, n)) {
                            var i = b.default.for(e, t),
                                r = b.default.for(n, t).getOpposite(),
                                s = this.model.getTurnGraph(),
                                a = s.getTurn(i, r);
                            a = a.withTurnData(a.getTurnData().withState(w.default.State.ALLOWED));
                            var o = new f.default(s, a);
                            this.doSubAction(o)
                        }
                    }
                }, {
                    key: "modifyIntersectingSegments",
                    value: function(e) {
                        e.forEach(function(e) {
                            1 === e.length ? this.shortenSegment(e[0]) : this.splitSegment(e)
                        }, this)
                    }
                }, {
                    key: "splitSegment",
                    value: function(e) {
                        var t = e[0].segments[0],
                            n = new d.default(t, {
                                splitAtPoint: e[0].point,
                                splittingPointIndex: e[0].index
                            });
                        this.doSubAction(n),
                            e[0].node = n.splitNode,
                            _.last(e).segments = [_.last(n.splits)],
                            _.last(e).index = _.last(e).index - e[0].index,
                            e[0].segments = [n.splits[0]],
                            this.shortenSegment(_.last(e))
                    }
                }, {
                    key: "shortenSegment",
                    value: function(e) {
                        var t = e.segments[0],
                            n = t.geometry.clone();
                        e.goingOut ? (t.geometry.components.splice(0, e.index + 1),
                                t.geometry.addComponent(e.point.clone(), 0)) : (t.geometry.components.splice(e.index + 1),
                                t.geometry.addComponent(e.point.clone())),
                            this.doSubAction(new u.default(t, n, t.geometry))
                    }
                }, {
                    key: "getIntersections",
                    value: function() {
                        var e = void 0,
                            t = this;
                        return this.containedSegments = [],
                            this.model.segments.getObjectArray(function(e) {
                                return e.state !== OpenLayers.State.DELETE && e.geometry.bounds.intersectsBounds(t.ellipse.bounds)
                            }).reduce(function(n, i) {
                                return (e = i.intersectionWithEllipse(t.ellipse.center, t.ellipse.rx, t.ellipse.ry)) instanceof Array ? 1 !== e.length && e[0].goingOut || (e.forEach(function(e) {
                                            e.segments = [i]
                                        }),
                                        n.push(e)) : e && t.containedSegments.push(i),
                                    n
                            }, [])
                    }
                }]),
                t
        }(l.default);
    t.default = S,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.UpdateFractionPoint = t.ReplaceHouseNumberSegment = t.DeleteHouseNumber = t.AddHouseNumber = void 0;
    var i = f(n(8)),
        r = f(n(2)),
        s = f(n(0)),
        a = f(n(1)),
        o = f(n(3)),
        l = f(n(4)),
        u = f(n(20)),
        d = f(n(11)),
        c = f(n(203)),
        h = n(40);

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
            function t(e, n, i) {
                (0,
                    s.default)(this, t);
                var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return a.houseNumberSet = e,
                    a.houseNumber = n,
                    a
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.houseNumber.id = this.model.houseNumbers.generateUniqueID(),
                            this.houseNumberSet.numbers.push(this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet),
                            !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return this.houseNumberSet.numbers = _.without(this.houseNumberSet.numbers, this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.houseNumberSet.numbers.push(this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {
                            number: this.houseNumber.number,
                            id: this.houseNumber.id,
                            segID: this.houseNumberSet.id,
                            geometry: this.houseNumber.geometry,
                            fractionPoint: this.houseNumber.fractionPoint,
                            forced: this.houseNumber.forced
                        };
                        return {
                            _objectType: this.houseNumberSet.type,
                            action: u.default.TYPE.ADD,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumberSet.id).getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            h.formatHouseNumberActionDescription)(this.model, this.houseNumberSet.id, this.houseNumber, "AddHouseNumber")
                    }
                }]),
                t
        }(u.default),
        g = function(e) {
            function t(e, n, i) {
                (0,
                    s.default)(this, t);
                var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return a.houseNumberSet = e,
                    a.houseNumber = n,
                    a
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.houseNumberSet.numbers = _.without(this.houseNumberSet.numbers, this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet),
                            !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        return this.houseNumberSet.numbers.push(this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        return this.houseNumberSet.numbers = _.without(this.houseNumberSet.numbers, this.houseNumber),
                            this.model.houseNumbers.changed(this.houseNumberSet)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {
                            id: this.houseNumber.id,
                            segID: this.houseNumberSet.id
                        };
                        return {
                            _objectType: this.houseNumberSet.type,
                            action: u.default.TYPE.DELETE,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumberSet.id).getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            h.formatHouseNumberActionDescription)(this.model, this.houseNumberSet.id, this.houseNumber, "DeleteHouseNumber")
                    }
                }]),
                t
        }(u.default),
        v = function(e) {
            function t(e, n, i) {
                (0,
                    s.default)(this, t);
                var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, i));
                return a.oldParent = null,
                    a.houseNumber = e,
                    a.newSet = n,
                    a
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "doAction",
                    value: function() {
                        return this.houseNumber.id,
                            this.houseNumber.parent.id,
                            this.newSet.id,
                            this.newHouseNumber = this.houseNumber.clone(),
                            this.oldParent = this.newHouseNumber.parent,
                            this.newHouseNumber.parent = this.newSet,
                            this.doSubAction(new g(this.houseNumber.parent, this.houseNumber)),
                            this.doSubAction(new p(this.newSet, this.newHouseNumber)),
                            !0
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        (0,
                            i.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this),
                            this.houseNumber.parent = this.oldParent
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        (0,
                            i.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this),
                            this.newHouseNumber.parent = this.newSet
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this.model.segments.getObjectById(this.oldParent.id),
                            t = this.model.segments.getObjectById(this.newSet.id);
                        return [e.getUniqueID(), t.getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumber.parent.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.UpdateFractionPoint", {
                            houseNumber: this.houseNumber,
                            segmentId: this.houseNumberSet.id
                        })
                    }
                }]),
                t
        }(d.default),
        m = function(e) {
            function t(e, n, i, a) {
                (0,
                    s.default)(this, t);
                var l = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, a));
                return l.houseNumber = e,
                    l.houseNumberSet = n,
                    l.fractionPoint = i,
                    l
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "doAction",
                    value: function() {
                        this.newHouseNumber = this.houseNumber;
                        var e = new OL.Geometry.Point(this.fractionPoint.lonlat.lon, this.fractionPoint.lonlat.lat);
                        if (this.fractionPoint.closestSegment.getID() !== this.houseNumber.parent.id) {
                            var t = new v(this.houseNumber, this.houseNumberSet, null);
                            this.doSubAction(t),
                                this.doSubAction(new c.default(t.newSet, t.newHouseNumber, {
                                    fractionPoint: e
                                })),
                                this.newHouseNumber = t.newHouseNumber
                        } else
                            this.doSubAction(new c.default(this.houseNumber.parent, this.houseNumber, {
                                fractionPoint: e
                            }));
                        return !0
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumberSet.id).getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.getObjectById(this.houseNumberSet.id)]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = (0,
                            h.formatHouseNumberActionDescription)(this.model, this.houseNumberSet.id, this.houseNumber, "UpdateFractionPoint")
                    }
                }]),
                t
        }(d.default);
    t.AddHouseNumber = p,
        t.DeleteHouseNumber = g,
        t.ReplaceHouseNumberSegment = v,
        t.UpdateFractionPoint = m
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(9)),
        r = p(n(2)),
        s = p(n(0)),
        a = p(n(1)),
        o = p(n(3)),
        l = p(n(4)),
        u = p(n(11)),
        d = n(14),
        c = p(n(73)),
        h = p(n(107)),
        f = p(n(106));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
        function t(e, n, i, a, l) {
            (0,
                s.default)(this, t);
            var u = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, l));
            return u._node = e,
                u._oldGeometry = n.clone(),
                u._newGeometry = i.clone(),
                u._origSegGeometries = a,
                u
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "_updateSegmentGeometry",
                value: function(e) {
                    var t = e.geometry.clone();
                    if (this._node.getID() === e.attributes.fromNodeID && (t.components[0] = this._newGeometry.clone()),
                        this._node.getID() === e.attributes.toNodeID) {
                        var n = t.components.length - 1;
                        t.components[n] = this._newGeometry.clone()
                    }
                    this.doSubAction(new f.default(e, this.model.segments, this._origSegGeometries[e.getID()], t))
                }
            }, {
                key: "_getConnectedSegments",
                value: function() {
                    var e = this;
                    return this._node.getSegmentIds().map(function(t) {
                        return e.model.segments.getObjectById(t)
                    }).filter(function(e) {
                        return null != e
                    })
                }
            }, {
                key: "_moveConnectedSegments",
                value: function() {
                    var e = this;
                    this._getConnectedSegments().forEach(function(t) {
                        return e._updateSegmentGeometry(t)
                    })
                }
            }, {
                key: "_moveNode",
                value: function() {
                    this.doSubAction(new f.default(this._node, this.model.nodes, this._oldGeometry, this._newGeometry))
                }
            }, {
                key: "_handleTouchingSegment",
                value: function(e) {
                    var t = this,
                        n = e.feature,
                        i = this._node.getSegmentIds().map(function(e) {
                            return t.model.segments.getObjectById(e)
                        }).every(function(e) {
                            return e.isWalkingRoadType()
                        });
                    n.isDrivable() && i ? this.doSubAction(new c.default(this._node, n, {
                        virtual: !0
                    })) : this.doSubAction(new h.default(e.feature, {
                        splitNode: this._node,
                        splitAtPoint: e.point,
                        splittingPointDistance: e.distance
                    }))
                }
            }, {
                key: "_handleTouchingFeatures",
                value: function() {
                    var e = void 0;
                    if (!this.snappedFeatures)
                        return !1;
                    (e = this.snappedFeatures).feature.type === d.SEGMENT && ("edge" === e.type || "vertex" === e.type ? this._handleTouchingSegment(e) : "node" === e.type && this.doSubAction(new c.default(this._node, e.feature)))
                }
            }, {
                key: "doAction",
                value: function() {
                    this._moveNode(),
                        this._moveConnectedSegments(),
                        this._handleTouchingFeatures()
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    var e = this,
                        t = this._node.getSegmentIds().map(function(t) {
                            return e.model.segments.getObjectById(t).getUniqueID()
                        });
                    return [].concat((0,
                        i.default)(t), [this._node.getUniqueID()])
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this._node].concat((0,
                        i.default)(this._getConnectedSegments()))
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.MoveNode")
                }
            }]),
            t
    }(u.default);
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(20));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n, s, o) {
            (0,
                r.default)(this, t);
            var l = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, o));
            return l.houseNumber = e,
                l.houseNumberSet = l.houseNumber.parent,
                l.newGeometry = s.clone(),
                l.oldGeometry = n,
                l.oldFraction = e.fractionPoint.clone(),
                l.newFraction = null,
                l.changedState = !1,
                l
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "destroy",
                value: function() {
                    this.houseNumberSet = null,
                        this.houseNumber = null,
                        this.newGeometry = null,
                        this.oldGeometry = null
                }
            }, {
                key: "doAction",
                value: function() {
                    return this.houseNumber.id,
                        this.houseNumberSet.getID(),
                        this.newFraction = this.houseNumber.getFractionFromProjection(),
                        this.houseNumber.geometry = this.newGeometry.clone(),
                        this.houseNumber.fractionPoint = this.newFraction,
                        this.houseNumberSet.state || (this.changedState = !0,
                            this.houseNumberSet.state = OL.State.UPDATE),
                        this.model.houseNumbers.changed(this.houseNumberSet)
                }
            }, {
                key: "undoAction",
                value: function() {
                    return this.houseNumber.geometry = this.oldGeometry,
                        this.houseNumber.fractionPoint = this.oldFraction,
                        this.changedState && (this.houseNumberSet.state = null),
                        this.model.houseNumbers.changed(this.houseNumberSet)
                }
            }, {
                key: "redoAction",
                value: function() {
                    return this.houseNumber.geometry = this.newGeometry.clone(),
                        this.houseNumber.fractionPoint = this.newFraction,
                        this.changedState && (this.houseNumberSet.state = OL.State.UPDATE),
                        this.model.houseNumbers.changed(this.houseNumberSet)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = {
                        segID: this.houseNumberSet.id,
                        id: this.houseNumber.id,
                        geometry: this.newGeometry,
                        fractionPoint: this.newFraction
                    };
                    return {
                        _objectType: this.houseNumberSet.type,
                        action: l.default.TYPE.UPDATE,
                        attributes: e
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return this.model.segments.getObjectById(this.houseNumberSet.id).getEntireStreet().map(function(e) {
                        return e.getUniqueID()
                    })
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.model.segments.getObjectById(this.houseNumberSet.id)]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this.model.segments.getObjectById(this.houseNumberSet.id).getAddress().getStreetName({
                        emptyString: ""
                    });
                    this._description = I18n.t("save.changes_log.actions.UpdateHouseNumberGeometry", {
                        houseNumber: this.houseNumber,
                        streetName: e
                    })
                }
            }]),
            t
    }(l.default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(9)),
        r = c(n(386)),
        s = c(n(74)),
        a = c(n(1070)),
        o = c(n(1071)),
        l = c(n(1072)),
        u = n(93),
        d = c(u);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = {
        nextClosureID: -101,
        add: function(e) {
            for (var t = [], n = e.get("segments"), i = 0; i < n.length; i++)
                for (var r = n[i], s = e.calculateForwardValuesForSegment(r.getID()), o = 0; o < s.length; o++) {
                    var l = s[o],
                        u = this._createRoadClosure(e, r.getID(), r.geometry);
                    u.forward = l,
                        t.push(new a.default(u, r))
                }
            return this._wrapInMultiAction(t)
        },
        _createRoadClosure: function(e, t, n) {
            var i = new r.default({
                id: this._getNewClosureID(),
                geometry: n.clone(),
                segID: t,
                active: !0
            });
            return e.saveSimpleFieldsToClosure(i),
                i
        },
        delete: function(e) {
            var t = _.map(e.get("closures"), function(t) {
                var n = e.findSegmentByID(t.segID);
                return new l.default(t, n)
            });
            return this._wrapInMultiAction(t)
        },
        update: function(e) {
            for (var t = [], n = e.get("closures"), i = e.isOppositeToOriginal(), r = this._changedToOneWay(e), s = this._shouldUpdate(e), a = this._shouldCreateOpposite(e), o = 0; o < n.length; o++) {
                var u = n[o],
                    d = void 0;
                i ? (t.push(this._createAddOppositeAction(e, u)),
                    d = e.findSegmentByID(u.segID),
                    t.push(new l.default(u, d))) : r && this._hasObsoleteDirection(e, u) ? (d = e.findSegmentByID(u.segID),
                    t.push(new l.default(u, d))) : (s && t.push(this._createUpdateAction(e, u)),
                    a && t.push(this._createAddOppositeAction(e, u)))
            }
            return this._wrapInMultiAction(t)
        },
        _shouldUpdate: function(e) {
            return e.hasChanged()
        },
        _createUpdateAction: function(e, t) {
            var n = new r.default(t);
            return e.saveSimpleFieldsToClosure(n),
                e.isOppositeToOriginal() && (n.forward = !n.forward),
                new o.default(n)
        },
        _shouldCreateOpposite: function(e) {
            return e.differsFromOriginal("direction") && e.get("direction") === u.DIRECTION.TWO_WAY
        },
        _createAddOppositeAction: function(e, t) {
            var n = this._createRoadClosure(e, t.segID, t.geometry);
            n.forward = !t.forward;
            var i = e.findSegmentByID(t.segID);
            return new a.default(n, i)
        },
        _getNewClosureID: function() {
            return this.nextClosureID--
        },
        _changedToOneWay: function(e) {
            return e.differsFromOriginal("direction") && e.original("direction") === u.DIRECTION.TWO_WAY
        },
        _hasObsoleteDirection: function(e, t) {
            var n = e.calculateForwardValuesForSegment(t.segID);
            return !_.contains(n, t.forward)
        },
        applyToAllSegments: function(e, t) {
            for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i = this._findMissingSegments(e, t), r = [], s = new d.default({
                    segments: i,
                    reverseSegments: n,
                    direction: e.get("direction")
                }), o = 0; o < i.length; o++)
                for (var l = i[o], u = s.calculateForwardValuesForSegment(l.getID()), c = 0; c < u.length; c++) {
                    var h = u[c],
                        f = this._createRoadClosure(e, l.getID(), l.geometry);
                    f.forward = h,
                        r.push(new a.default(f, l))
                }
            return this._wrapInMultiAction(r)
        },
        _findMissingSegments: function(e, t) {
            return _.reject(t, function(t) {
                return null != e.findSegmentByID(t.getID())
            })
        },
        _wrapInMultiAction: function(e) {
            return new s.default([].concat((0,
                i.default)(e)))
        }
    };
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.InvalidLoginError = void 0;
    var i = _(n(137)),
        r = _(n(136)),
        s = _(n(62)),
        a = _(n(184)),
        o = _(n(6)),
        l = _(n(19)),
        u = _(n(1)),
        d = _(n(2)),
        c = _(n(0)),
        h = _(n(3)),
        f = _(n(4)),
        p = n(72),
        g = _(n(1088)),
        v = _(n(103)),
        m = n(30);

    function _(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var y = "_csrf_token",
        b = /^(post|delete)$/,
        w = function(e) {
            function t() {
                (0,
                    c.default)(this, t);
                var e = (0,
                    h.default)(this, (t.__proto__ || (0,
                    d.default)(t)).call(this, "Invalid Login Error"));
                return Error.captureStackTrace && Error.captureStackTrace(e, m.FetchError),
                    e
            }
            return (0,
                    f.default)(t, e),
                t
        }(function(e) {
            function t() {
                var t = (0,
                    a.default)(e, (0,
                    s.default)(arguments));
                return (0,
                        r.default)(t, (0,
                        d.default)(this)),
                    t
            }
            return t.prototype = (0,
                    i.default)(e.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                r.default ? (0,
                    r.default)(t, e) : t.__proto__ = e,
                t
        }(Error)),
        k = function() {
            function e() {
                (0,
                    c.default)(this, e),
                this.expired = !1,
                    this.returningUser = !1,
                    this.user = null,
                    this.events = new OpenLayers.Events(this),
                    (0,
                        m.addHttpResponseMiddleware)(this._onServerResponse.bind(this)),
                    (0,
                        m.addHttpRequestMiddleware)(function(e) {
                        var t = e.method;
                        b.test(t.toLowerCase()) && e.headers.append("X-CSRF-Token", $.cookie(y))
                    })
            }
            return (0,
                    u.default)(e, [{
                    key: "getLoggedInUser",
                    value: function() {
                        var e = this;
                        return null !== this.user ? l.default.resolve(this.user) : (0,
                            m.httpGet)(W.Config.paths.auth, {
                            language: I18n.locale
                        }).then(function(t) {
                            e.user = new g.default(t, {
                                parse: !0
                            })
                        }).finally(function() {
                            e.events.triggerEvent("loginStatus", {
                                user: e.user,
                                automatic: !0
                            })
                        })
                    }
                }, {
                    key: "_onServerResponse",
                    value: function(e) {
                        if (!e.ok) {
                            if (!this._hasUser() || this.expired)
                                return;
                            if (403 === e.status) {
                                var t = e.parsedJSON;
                                if (t) {
                                    var n = t.errorList;
                                    if (null != n && n.length > 0) {
                                        var i = n[0];
                                        103 !== i.code && 100 !== i.code || (this.expired = !0,
                                            this.returningUser = !1,
                                            this.events.triggerEvent("sessionExpired"))
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "_hasUser",
                    value: function() {
                        return null !== this.user
                    }
                }, {
                    key: "isAuthenticated",
                    value: function() {
                        return !this.expired && this._hasUser()
                    }
                }, {
                    key: "isLoggedIn",
                    value: function() {
                        return (0,
                            p.getServerConfig)().enforceEmailVerification ? this.isAuthenticated() && this.isVerifiedEmail() : this.isAuthenticated()
                    }
                }, {
                    key: "isFirstLogin",
                    value: function() {
                        return this._hasUser() && this.user.isFirstLogin
                    }
                }, {
                    key: "isVerifiedEmail",
                    value: function() {
                        return this._hasUser() && this.user.isVerifiedEmail()
                    }
                }, {
                    key: "isUserEmailAddressMissing",
                    value: function() {
                        return this._hasUser() && this.user.isEmailAddressMissing()
                    }
                }, {
                    key: "getUserVerificationEmailAddress",
                    value: function() {
                        return this._hasUser() ? this.user.getUnverifiedEmail() : null
                    }
                }, {
                    key: "getUserRank",
                    value: function() {
                        return this.isLoggedIn() ? this.user.rank : v.default.prototype.MaxLevel
                    }
                }, {
                    key: "_isAdOperator",
                    value: function() {
                        return !!this.isLoggedIn() && this.user.adOperator
                    }
                }, {
                    key: "canEditAdLockedPlaceUpdates",
                    value: function() {
                        return this.getUserRank() >= v.default.prototype.StaffRank || this._isAdOperator()
                    }
                }, {
                    key: "canEditBigJunctions",
                    value: function() {
                        return this.getUserRank() >= W.Config.big_junctions.minRank
                    }
                }, {
                    key: "login",
                    value: function(e, t) {
                        var n = this,
                            i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                        return this.expired && e !== this.user.userName && !1 === this.events.triggerEvent("beforeloginchanged") ? l.default.resolve() : this._doLogin(e, t, i).then(function(e) {
                            var t = new g.default(e, {
                                parse: !0
                            });
                            n.returningUser = n._hasUser() && n.user.userName === t.userName,
                                n.user = t,
                                n.expired = !1,
                                n.events.triggerEvent("login", {
                                    user: n.user
                                })
                        }).catch(function(e) {
                            if (!(e instanceof m.FetchError))
                                throw e;
                            self.events.triggerEvent("loginfailed", e.response)
                        })
                    }
                }, {
                    key: "_getCsrfToken",
                    value: function() {
                        var e = $.cookie(y);
                        return null !== e && void 0 !== e ? l.default.resolve(e) : (0,
                            m.httpGet)(W.Config.login.paths.get)
                    }
                }, {
                    key: "_doLogin",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                        return this._getCsrfToken().then(function() {
                            return (0,
                                m.httpPost)(W.Config.login.paths.create, {
                                user_id: e,
                                password: t,
                                recaptcha_response: n
                            })
                        }).then(function(e) {
                            if (!e.reply || !e.reply.login)
                                throw W.Report.loginAction("login_invalid"),
                                    new w;
                            W.Report.loginAction("login_success")
                        }).then(function() {
                            return (0,
                                m.httpGet)(W.Config.paths.auth)
                        })
                    }
                }, {
                    key: "logout",
                    value: function() {
                        null !== this.user && !1 !== this.events.triggerEvent("beforeloginchanged") && (this.user = null,
                            this.expired = !1,
                            this.returningUser = !1,
                            $.cookie("_web_session", null, {
                                path: "/"
                            }),
                            $.cookie(y, null, {
                                path: "/"
                            }),
                            this.events.triggerEvent("logout", {
                                user: null,
                                logout: !0
                            }))
                    }
                }, {
                    key: "getAuthCookieName",
                    value: function() {
                        return "_web_session"
                    }
                }, {
                    key: "resetUserLimits",
                    value: function(e) {
                        this._hasUser() && this.user.resetUserLimits(e)
                    }
                }, {
                    key: "canChangeStreetName",
                    value: function() {
                        return !this._hasUser() || this.user.canChangeStreetName()
                    }
                }]),
                e
        }();
    (0,
        o.default)(k.prototype, {
        CLASS_NAME: "Waze.LoginManager"
    }),
    t.default = k,
        t.InvalidLoginError = w
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        DEFAULT: 0,
        MTE: 1,
        isValid: function(e) {
            return _.values(i).indexOf(e) >= 0
        }
    };
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = S(n(25)),
        r = S(n(53)),
        s = S(n(7)),
        a = S(n(6)),
        o = S(n(0)),
        l = S(n(1)),
        u = S(n(86)),
        d = S(n(1098)),
        c = S(n(1099)),
        h = S(n(1100)),
        f = S(n(1102)),
        p = S(n(1103)),
        g = S(n(1104)),
        v = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(14)),
        m = S(n(92)),
        y = S(n(152)),
        b = S(n(204)),
        w = S(n(44)),
        k = S(n(109)),
        E = S(n(1106)),
        M = S(n(1107));

    function S(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var T = void 0,
        I = function() {
            function e(t) {
                var n = this;
                (0,
                    o.default)(this, e),
                this.segments = null,
                    this.nodes = null,
                    this.users = null,
                    this.streets = null,
                    this.cities = null,
                    this.states = null,
                    this.countries = null,
                    this.problems = null,
                    this.mapUpdateRequests = null,
                    this.venues = null,
                    this.junctions = null,
                    this.bigJunctions = null,
                    this.crossroads = null,
                    this.isLeftHand = !1,
                    this._restrictionSubscriptions = {},
                    this.lastTransactionID = null;
                var i = new OpenLayers.Projection("EPSG:900913");
                (0,
                    a.default)(this, t),
                this.events = new OpenLayers.Events(this),
                    this.actionManager = new g.default(this),
                    this.distanceCache = new T(new OpenLayers.Projection("EPSG:900913")),
                    this.repos = {},
                    this.reposByObjectType = {},
                    this.addRepository("segments", v.SEGMENT, {}, h.default),
                    this.addRepository("nodes", v.NODE, {
                        onDemand: !1
                    }),
                    this.addRepository("users", v.USER, {
                        onDemand: !1,
                        useVersions: !1
                    }),
                    this.addRepository("streets", v.STREET, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("countries", v.COUNTRY, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("states", v.STATE, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("junctions", v.JUNCTION, {
                        onDemand: !1
                    }),
                    this.addRepository("bigJunctions", v.BIG_JUNCTION, {
                        onDemand: !1
                    }),
                    this.addRepository("problems", v.MAP_PROBLEM, {
                        filter: new d.default("problemFilter", ["ALL", "PARKING"], {
                            OPEN: 0,
                            CLOSED: 1
                        })
                    }),
                    this.addRepository("mapUpdateRequests", v.UPDATE_REQUEST, {
                        filter: new d.default("mapUpdateRequestFilter", ["ALL", "PARKING"], {
                            OPEN: 0,
                            CLOSED: 1
                        })
                    }),
                    this.addRepository("roadClosures", v.ROAD_CLOSURE, {
                        minZoom: W.Config.closures.minDisplayZoom,
                        active: W.Config.closures.shownByDefault
                    }),
                    this.addRepository("venues", v.VENUE, {
                        filter: new d.default("venueFilter", ["ALL", "RESIDENTIAL", "PARKING"], {
                            SHOW: 0,
                            UPDATE_REQUEST: 1
                        })
                    }, f.default),
                    this.addRepository("cameras", v.SPEED_CAMERA, {
                        minZoom: W.Config.cameras.minDisplayZoom,
                        active: W.Config.cameras.shownByDefault
                    }),
                    this.addRepository("userAreas", v.USER_AREA, {
                        minZoom: W.Config.editable_areas.minDisplayZoom
                    }),
                    this.addRepository("problemDetails", v.PROBLEM_DETAILS, {
                        url: W.Config.paths.problemDetails,
                        localProjection: i,
                        onDemand: !1
                    }, c.default),
                    this.addRepository("houseNumbers", v.HOUSE_NUMBER, {
                        url: W.Config.paths.houseNumbers,
                        localProjection: i,
                        onDemand: !1
                    }, c.default),
                    this.addRepository("updateRequestSessions", v.UPDATE_REQUEST_SESSION, {
                        url: W.Config.paths.updateRequestSessions,
                        localProjection: i,
                        onDemand: !1
                    }, c.default),
                    this.addRepository("archives", v.ARCHIVE_SESSION, {
                        url: W.Config.paths.archive,
                        onDemand: !1
                    }, c.default),
                    this.addRepository("archiveSessions", v.ARCHIVE_SESSION_DATA, {
                        url: W.Config.paths.archiveSessions,
                        onDemand: !1,
                        localProjection: i
                    }, c.default),
                    this.addRepository("managedAreas", "managedArea"),
                    this.addRepository("majorTrafficEvents", v.MTE),
                    this.addRepository("restrictedAreas", v.RESTRICTED_AREA, {}, p.default),
                    w.default.getRepositories().forEach(function(e) {
                        n.addRepository(e.repositoryName, e.featureType, e.repositoryConfig, e.repositoryClass)
                    }),
                    this._roadGraph = new E.default(this.nodes, this.segments),
                    this._turnGraph = new k.default(this._roadGraph),
                    W.prefs.on("change:isImperial", function(e, t) {
                        null !== t && (this.isImperial = t)
                    }, this),
                    this.isImperial = W.prefs.get("isImperial")
            }
            return (0,
                    l.default)(e, [{
                    key: "isRepository",
                    value: function(e) {
                        return null != this.repos[e]
                    }
                }, {
                    key: "addRepository",
                    value: function(e, t, n, i) {
                        if (this.isRepository(e))
                            throw new Error("Cannot add repository " + e + " to DataModel, the provided repository name already exists.");
                        i || (i = u.default),
                            (n = n || {}).model = this,
                            n.name = e;
                        var r = new i(t, n);
                        this.repos[e] = this[e] = this.reposByObjectType[t] = r
                    }
                }, {
                    key: "getTurnGraph",
                    value: function() {
                        return this._turnGraph
                    }
                }, {
                    key: "getRoadGraph",
                    value: function() {
                        return this._roadGraph
                    }
                }, {
                    key: "clear",
                    value: function(e) {
                        for (var t in this)
                            this[t] instanceof u.default && this[t].clear(e);
                        this._turnGraph.clear()
                    }
                }, {
                    key: "getRepository",
                    value: function(e) {
                        return e && this.reposByObjectType[e] || null
                    }
                }, {
                    key: "mergeObjects",
                    value: function(e, t, n) {
                        var i = this,
                            r = t.segments,
                            a = t.connections;
                        r || (n = !0),
                            this.events.triggerEvent("mergestart"),
                            _.without((0,
                                s.default)(t), "segments", "connections").forEach(function(r) {
                                var s = i[r],
                                    a = t[r];
                                s && (n && !s.onDemand || s.clear({
                                        keepUnsaved: !0,
                                        keepSelected: !0
                                    }),
                                    s.mergeObjects(a, null, e, i.scale, t))
                            }),
                            r && (this.segments.clear({
                                    keepUnsaved: !0,
                                    keepSelected: !0
                                }),
                                this.segments.mergeObjects(r, null, e, this.scale, t),
                                a && (this._turnGraph.clear(),
                                    this._turnGraph.fromDescartes(a))),
                            this.setMeasurementSystem(),
                            this.setDrivingDirection(),
                            this.setRestrictionSubscriptions(),
                            this.setTopCountry(t),
                            this.events.triggerEvent("mergeend")
                    }
                }, {
                    key: "putPersistent",
                    value: function(e) {
                        var t = this;
                        (0,
                            s.default)(e).forEach(function(n) {
                            var i = t[n];
                            void 0 !== i && e[n].objects.forEach(function(e) {
                                e.setPersistent(!0),
                                    i.put(e)
                            })
                        })
                    }
                }, {
                    key: "setTopCountry",
                    value: function(e) {
                        var t = e.countries,
                            n = e.states;
                        t && t.mainObjectID ? (this.countries.top = this.countries.objects[t.mainObjectID],
                            n && (this.states.top = this.states.objects[n.mainObjectID])) : (this.countries.top = null,
                            this.states.top = null)
                    }
                }, {
                    key: "setMeasurementSystem",
                    value: function() {
                        var e = W.prefs.get("isImperial");
                        if (null !== e)
                            this.isImperial = e;
                        else {
                            var t = (0,
                                    r.default)(this.countries.objects),
                                n = null;
                            _.isEmpty(t) || (n = t[0],
                                W.prefs.set("isImperial", 234 === n.id || 235 === n.id))
                        }
                    }
                }, {
                    key: "setDrivingDirection",
                    value: function() {
                        var e = (0,
                            r.default)(this.countries.objects);
                        this.isLeftHand = !1,
                            _.isEmpty(e) || (this.isLeftHand = Boolean(e[0].leftHandTraffic))
                    }
                }, {
                    key: "setRestrictionSubscriptions",
                    value: function() {
                        this._restrictionSubscriptions = {};
                        var e = (0,
                            r.default)(this.countries.objects)[0];
                        null != e && null != e.restrictionSubscriptions && (this._restrictionSubscriptions = e.restrictionSubscriptions)
                    }
                }, {
                    key: "getRestrictionSubscriptions",
                    value: function() {
                        return this._restrictionSubscriptions
                    }
                }, {
                    key: "deleteSegments",
                    value: function(e) {
                        if (1 === e.length)
                            this.actionManager.add(new m.default(e[0], {
                                userInitiated: !0
                            }));
                        else if (e.length > 1) {
                            for (var t = [], n = 0, i = e.length; n < i; n++)
                                t.push(new m.default(e[n], {
                                    userInitiated: !0
                                }));
                            this.actionManager.add(new M.default(t))
                        }
                    }
                }, {
                    key: "deleteObjects",
                    value: function(e) {
                        1 === e.length && this.actionManager.add(new y.default(e[0]))
                    }
                }, {
                    key: "deleteNodes",
                    value: function(e) {
                        1 === e.length && this.actionManager.add(new b.default(null, e[0]))
                    }
                }, {
                    key: "_getModifiedObjects",
                    value: function() {
                        var e = {
                            segments: this.segments.getModifiedObjects(),
                            nodes: this.nodes.getModifiedObjects(),
                            cities: this.cities.getModifiedObjects(),
                            streets: this.streets.getModifiedObjects(),
                            venues: this.venues.getModifiedObjects(),
                            bigJunctions: this.bigJunctions.getModifiedObjects(),
                            majorTrafficEvents: this.majorTrafficEvents.getModifiedObjects()
                        };
                        return this.mapComments && (e.mapComments = this.mapComments.getModifiedObjects()),
                            e
                    }
                }, {
                    key: "removeModifiedDeletedObjects",
                    value: function() {
                        var e = this._getModifiedObjects(),
                            t = !0,
                            n = !1,
                            r = void 0;
                        try {
                            for (var a, o = (0,
                                    i.default)((0,
                                    s.default)(e)); !(t = (a = o.next()).done); t = !0)
                                for (var l = a.value, u = this.repos[l], d = e[l], c = 0; c < d[OL.State.DELETE].length; c++) {
                                    var h = d[OL.State.DELETE][c];
                                    u.remove(h)
                                }
                        } catch (e) {
                            n = !0,
                                r = e
                        } finally {
                            try {
                                !t && o.return && o.return()
                            } finally {
                                if (n)
                                    throw r
                            }
                        }
                    }
                }, {
                    key: "hasModifiedObjects",
                    value: function() {
                        return (0,
                            r.default)(this.repos).some(function(e) {
                            return e.hasModifiedObjects()
                        })
                    }
                }, {
                    key: "getChangesExtent",
                    value: function() {
                        var e = new OpenLayers.Bounds;
                        return [this.segments, this.nodes].forEach(function(t) {
                                (0,
                                    r.default)(t.getModifiedObjects()).forEach(function(t) {
                                    t.forEach(function(t) {
                                        e.extend(t.geometry.bounds)
                                    })
                                })
                            }),
                            e
                    }
                }, {
                    key: "hasStates",
                    value: function() {
                        var e = this.states.getObjectArray();
                        return 1 !== e.length || !e[0].isDefault
                    }
                }, {
                    key: "setLastTransactionID",
                    value: function(e) {
                        this.lastTransactionID = e,
                            this.events.triggerEvent("change:lastTransactionID", {
                                id: this.lastTransactionID
                            })
                    }
                }]),
                e
        }();
    (0,
        a.default)(I.prototype, {
        CLASS_NAME: "Waze.DataModel"
    }),
    T = function() {
            function e(t, n) {
                (0,
                    o.default)(this, e),
                this.precision = 1,
                    this.distanceInMeters = 1,
                    this.currentDistance = null,
                    this.currentLat = null,
                    (0,
                        a.default)(this, n),
                    this.projection = new OpenLayers.Projection("EPSG:4326"),
                    this.inputProjection = t
            }
            return (0,
                    l.default)(e, [{
                    key: "getValue",
                    value: function(e, t) {
                        var n = e.clone();
                        return n.transform(this.inputProjection, this.projection),
                            !t && this.isPointInCacheRange(n) || this.calculateLat(e, n),
                            this.currentDistance
                    }
                }, {
                    key: "isPointInCacheRange",
                    value: function(e) {
                        return null !== this.currentDistance && Math.abs(e.y - this.currentLat) < this.precision
                    }
                }, {
                    key: "calculateLat",
                    value: function(e, t) {
                        this.currentLat = t.y;
                        var n = OpenLayers.Util.destinationVincenty({
                                lon: t.x,
                                lat: t.y
                            }, 90, this.distanceInMeters),
                            i = new OpenLayers.Geometry.Point(n.lon, n.lat);
                        i.transform(this.projection, this.inputProjection),
                            this.currentDistance = Math.abs(i.x - e.x)
                    }
                }]),
                e
        }(),
        (0,
            a.default)(T.prototype, {
            CLASS_NAME: "Waze.DataModel.DistanceCache"
        }),
        t.default = I,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(9)),
        r = p(n(2)),
        s = p(n(0)),
        a = p(n(1)),
        o = p(n(3)),
        l = p(n(8)),
        u = p(n(4)),
        d = p(n(11)),
        c = p(n(152)),
        h = p(n(22)),
        f = p(n(20));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
        function t(e, n, i) {
            var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
            (0,
                s.default)(this, t);
            var l = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, a));
            return l._fromVenues = e,
                l._toVenue = n,
                l.newAttributes = i,
                l._initialHasPendingMerge = n.hasPendingMerge(),
                l
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this;
                    this._fromVenues.map(function(e) {
                            return e.getID()
                        }).join(" "),
                        this._toVenue.getID(),
                        this._toVenue.setPendingMerge(!0),
                        this._fromVenues.forEach(function(t) {
                            e.doSubAction(new c.default(t, {
                                dontSerialize: !0
                            }))
                        }),
                        this.doSubAction(new h.default(this._toVenue, this.newAttributes, {
                            dontSerialize: !0
                        }))
                }
            }, {
                key: "undoAction",
                value: function() {
                    this._toVenue.setPendingMerge(this._initialHasPendingMerge),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this),
                        this._triggerMainChanged()
                }
            }, {
                key: "redoAction",
                value: function() {
                    this._toVenue.setPendingMerge(!0),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this),
                        this._triggerMainChanged()
                }
            }, {
                key: "_triggerMainChanged",
                value: function() {
                    this.model.getRepository(this._toVenue.type).changed(this._toVenue)
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    var e = this._fromVenues.map(function(e) {
                        return e.getUniqueID()
                    });
                    return [].concat((0,
                        i.default)(e), [this._toVenue.getUniqueID()])
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this._toVenue].concat((0,
                        i.default)(this._fromVenues))
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this._toVenue.name;
                    this._description = e ? I18n.t("save.changes_log.actions.MergeLandmarks.has_name", {
                        count: this._fromVenues.length,
                        mainVenueName: e
                    }) : I18n.t("save.changes_log.actions.MergeLandmarks.default", {
                        count: this._fromVenues.length,
                        placeId: this._toVenue.getID()
                    })
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: this._toVenue.type,
                        action: f.default.TYPE.MERGE,
                        attributes: {
                            mergedFromVenueIds: this._fromVenues.map(function(e) {
                                return e.getID()
                            }),
                            mainVenue: this.newAttributes
                        }
                    }
                }
            }]),
            t
    }(d.default);
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(6),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control, {
        DEFAULTS: {
            tolerance: 15,
            node: !0,
            edge: !0,
            vertex: !0
        },
        greedy: !0,
        precedence: ["node", "vertex", "edge"],
        resolution: null,
        geoToleranceCache: null,
        layer: null,
        feature: null,
        snappedFeature: null,
        point: null,
        initialize: function(e) {
            OpenLayers.Control.prototype.initialize.apply(this, [e]),
                this.options = e || {},
                this.options.layer && this.setLayer(this.options.layer),
                this.defaults = (0,
                    s.default)({}, this.DEFAULTS, this.options.defaults),
                this.setTargets(this.options.targets),
                0 === this.targets.length && this.layer && this.addTargetLayer(this.layer),
                this.geoToleranceCache = {}
        },
        setLayer: function(e) {
            this.active ? (this.deactivate(),
                this.layer = e,
                this.activate()) : this.layer = e
        },
        setTargets: function(e) {
            if (this.targets = [],
                e && e.length)
                for (var t = void 0, n = 0, i = e.length; n < i; ++n)
                    (t = e[n]) instanceof OpenLayers.Layer.Vector ? this.addTargetLayer(t) : this.addTarget(t)
        },
        addTargetLayer: function(e) {
            this.addTarget({
                layer: e
            })
        },
        addTarget: function(e) {
            (e = (0,
                s.default)(e, this.defaults, e)).nodeTolerance = e.nodeTolerance || e.tolerance,
                e.vertexTolerance = e.vertexTolerance || e.tolerance,
                e.edgeTolerance = e.edgeTolerance || e.tolerance,
                this.targets.push(e)
        },
        removeTargetLayer: function(e) {
            for (var t = void 0, n = this.targets.length - 1; n >= 0; --n)
                (t = this.targets[n]).layer === e && this.removeTarget(t)
        },
        removeTarget: function(e) {
            return OpenLayers.Util.removeItem(this.targets, e)
        },
        activate: function() {
            var e = OpenLayers.Control.prototype.activate.call(this);
            return e && this.layer && this.layer.events && this.layer.events.on({
                    sketchstarted: this.onSketchModified,
                    sketchmodified: this.onSketchModified,
                    vertexmodified: this.onVertexModified,
                    scope: this
                }),
                e
        },
        deactivate: function() {
            var e = OpenLayers.Control.prototype.deactivate.call(this);
            return e && this.layer && this.layer.events && this.layer.events.un({
                    sketchstarted: this.onSketchModified,
                    sketchmodified: this.onSketchModified,
                    vertexmodified: this.onVertexModified,
                    scope: this
                }),
                this.feature = null,
                this.snappedFeature = null,
                this.point = null,
                e
        },
        onSketchModified: function(e) {
            this.feature = e.feature,
                this.considerSnapping(e.vertex, e.vertex)
        },
        onVertexModified: function(e) {
            this.feature = e.feature;
            var t = this.layer.map.getLonLatFromViewPortPx(e.pixel);
            this.considerSnapping(e.vertex, new OpenLayers.Geometry.Point(t.lon, t.lat))
        },
        considerSnapping: function(e, t) {
            for (var n = {
                    rank: Number.POSITIVE_INFINITY,
                    dist: Number.POSITIVE_INFINITY,
                    x: null,
                    y: null
                }, i = !1, r = void 0, s = void 0, a = 0, o = this.targets.length; a < o; ++a)
                if (s = this.targets[a],
                    r = this.testTarget(s, t)) {
                    if (this.greedy) {
                        (n = r).target = s,
                            i = !0;
                        break
                    }
                    (r.rank < n.rank || r.rank === n.rank && r.dist < n.dist) && ((n = r).target = s,
                        i = !0)
                }
            i && (!1 !== this.events.triggerEvent("beforesnap", {
                point: e,
                x: n.x,
                y: n.y,
                distance: n.dist,
                layer: n.target.layer,
                snapType: this.precedence[n.rank]
            }) ? (this.snappedFeature = {
                    feature: n.feature,
                    distance: n.dist,
                    type: this.precedence[n.rank],
                    point: new OpenLayers.Geometry.Point(n.x, n.y)
                },
                e.x = n.x,
                e.y = n.y,
                this.point = e,
                this.events.triggerEvent("snap", {
                    point: e,
                    feature: n.feature,
                    snapType: this.precedence[n.rank],
                    layer: n.target.layer,
                    distance: n.dist
                })) : i = !1);
            this.point && !i && (e.x = t.x,
                e.y = t.y,
                this.point = null,
                this.snappedFeature = null,
                this.events.triggerEvent("unsnap", {
                    point: e
                }))
        },
        testTarget: function(e, t) {
            for (var n = {
                    node: this.getGeoTolerance(e.nodeTolerance),
                    vertex: this.getGeoTolerance(e.vertexTolerance),
                    edge: this.getGeoTolerance(e.edgeTolerance)
                }, i = Math.max(n.node, n.vertex, n.edge), r = {
                    rank: Number.POSITIVE_INFINITY,
                    dist: Number.POSITIVE_INFINITY
                }, s = !1, a = e.layer.features, o = void 0, l = void 0, u = void 0, d = void 0, c = void 0, h = void 0, f = void 0, p = this.precedence.length, g = new OpenLayers.LonLat(t.x, t.y), v = 0, m = a.length; v < m; ++v)
                if ((o = a[v]) !== this.feature && !o._sketch && o.state !== OpenLayers.State.DELETE && o.model && !o.model.isDeleted() && (!e.filter || e.filter.evaluate(o)) && o.atPoint(g, i, i))
                    for (var _ = 0, y = Math.min(r.rank + 1, p); _ < y; ++_)
                        if (e[l = this.precedence[_]])
                            if ("edge" === l) {
                                if ((h = (c = o.geometry.distanceTo(t, {
                                        details: !0
                                    })).distance) <= n[l] && h < r.dist) {
                                    r = {
                                            feature: o,
                                            rank: _,
                                            dist: h,
                                            x: c.x0,
                                            y: c.y0
                                        },
                                        s = !0;
                                    break
                                }
                            } else {
                                f = !1;
                                for (var b = 0, w = (u = o.geometry.getVertices("node" === l)).length; b < w; ++b)
                                    (h = (d = u[b]).distanceTo(t)) <= n[l] && (_ < r.rank || _ === r.rank && h < r.dist) && (r = {
                                            feature: o,
                                            rank: _,
                                            dist: h,
                                            x: d.x,
                                            y: d.y
                                        },
                                        s = !0,
                                        f = !0);
                                if (f)
                                    break
                            }
            return s ? r : null
        },
        getGeoTolerance: function(e) {
            var t = this.layer.map.getResolution();
            t !== this.resolution && (this.resolution = t,
                this.geoToleranceCache = {});
            var n = this.geoToleranceCache[e];
            return void 0 === n && (n = e * t,
                    this.geoToleranceCache[e] = n),
                n
        },
        destroy: function() {
            this.active && this.deactivate(),
                delete this.layer,
                delete this.targets,
                OpenLayers.Control.prototype.destroy.call(this)
        },
        CLASS_NAME: "Waze.Control.Snapping"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1113),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OL.Feature.Vector, {
        initialize: function(e, t, n) {
            OL.Feature.Vector.prototype.initialize.apply(this, [new s.default(e), t, n])
        },
        getID: function() {
            return this.id
        },
        clone: function() {
            return new a(this.geometry ? this.geometry.clone() : null, this.attributes, this.style)
        },
        CLASS_NAME: "Waze.Feature.AggregatePointVector"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(412),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = {
        virtualVertices: {
            strokeWidth: 2,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 4,
            fillColor: "#ffffff",
            fillOpacity: .6
        },
        permalinkMarker: new OL.StyleMap({
            default: new OL.Style({
                externalGraphic: s.default,
                graphicYOffset: -53,
                graphicWidth: 37,
                graphicHeight: 53
            })
        })
    };
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/location-pin9ec58e180e175fd30652e4c15b957a95.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(53)),
        r = d(n(138)),
        s = d(n(10)),
        a = d(n(61)),
        o = d(n(6)),
        l = d(n(0)),
        u = d(n(1));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = void 0,
        h = function() {
            function e(t) {
                var n = this;
                (0,
                    l.default)(this, e),
                this._futureShortcutsByAction = {},
                    this.$element = null,
                    this.shortcutToAction = {},
                    this.Actions = {},
                    this.$element = t || $(window),
                    this.events = new OpenLayers.Events(this),
                    this.registerActions(),
                    W.app.on("change:loggedIn", function() {
                        n._enableShortcutsByRank(W.app.get("user"))
                    })
            }
            return (0,
                    u.default)(e, [{
                    key: "_enableShortcutsByRank",
                    value: function(e) {
                        var t = null != e;
                        if (W.Config.big_junctions.enable)
                            return this.setActionEnabled("drawBigJunction", t && W.loginManager.canEditBigJunctions())
                    }
                }, {
                    key: "activate",
                    value: function() {
                        return this.$element.bind("keydown.shortcuts", this.onKeyDown.bind(this))
                    }
                }, {
                    key: "addAction",
                    value: function(e, t) {
                        return t = t || {},
                            (t = (0,
                                o.default)({}, {
                                changeable: !0,
                                group: "default"
                            }, t)).name = e,
                            this.Groups[t.group].members.push(t),
                            t.id = e,
                            t.enabled = !0,
                            this.Actions[e] = t,
                            this.events.addEventType(e)
                    }
                }, {
                    key: "setActionEnabled",
                    value: function(e, t) {
                        this.Actions[e].enabled = t
                    }
                }, {
                    key: "registerShortcut",
                    value: function(e, t, n) {
                        null != this._futureShortcutsByAction[t] && (e = this._futureShortcutsByAction[t],
                            n = !0,
                            delete this._futureShortcutsByAction[t]);
                        var i = void 0;
                        if (i = n ? c.prototype.fromString(e) : c.prototype.fromEmacsNotation(e),
                            t = this.Actions[t]) {
                            var r = this.shortcutToAction[i];
                            r && (delete this.shortcutToAction[r.shortcut],
                                    delete r.shortcut),
                                t.shortcut && delete this.shortcutToAction[t.shortcut],
                                this.shortcutToAction[i] = t,
                                t.shortcut = i
                        }
                    }
                }, {
                    key: "_registerShortcuts",
                    value: function(e) {
                        var t = this;
                        return (0,
                            a.default)(e).forEach(function(e) {
                            var n = (0,
                                    s.default)(e, 2),
                                i = n[0],
                                r = n[1];
                            return t.registerShortcut(i, r)
                        })
                    }
                }, {
                    key: "registerDefaultShortcuts",
                    value: function() {
                        this._registerShortcuts({
                                "S+191": "showShortcutsDialog",
                                "C+z": "undo",
                                "CS+z": "redo",
                                "C+s": "save",
                                "AS+r": "reloadData",
                                i: "drawSegment",
                                o: "drawRoundabout",
                                j: "drawBigJunction",
                                l: "displayLayerSwitcher",
                                s: "spreadArrows",
                                a: "hideArrows",
                                "S+d": "colorEmptyStreets",
                                "S+w": "closeStreetView",
                                q: "disallowAllConnections",
                                w: "allowAllConnections",
                                m: "toggleMultipleSelection",
                                r: "toggleSegmentDirection",
                                e: "editSegmentAddress",
                                h: "editHouseNumbers",
                                c: "editClosures",
                                t: "editRestrictions",
                                "C+a": "selectEntireStreet",
                                "C+38": "increaseSegmentLevel",
                                "C+40": "decreaseSegmentLevel",
                                38: "panUp",
                                39: "panRight",
                                40: "panDown",
                                37: "panLeft",
                                "S+38": "zoomIn",
                                "S+40": "zoomOut",
                                f: "search",
                                221: "nextFeedItem",
                                219: "prevFeedItem",
                                "S+i": "toggleSatelliteImagery",
                                "S+g": "toggleGPSpoints",
                                "S+r": "toggleRoads",
                                "S+m": "toggleMapcomments",
                                "S+a": "toggleAreaManagers",
                                "S+b": "toggleJunctionboxes",
                                "S+s": "toggleSpeedcameras",
                                "S+p": "toggleMapProblems",
                                "S+u": "toggleUpdateRequests",
                                "S+e": "toggleEditableAreas",
                                "S+c": "toggleRoadClosures",
                                "S+v": "toggleLiveUsers",
                                "S+l": "togglePlaces",
                                "S+z": "toggleShowAllArrows"
                            }),
                            W.Config.chat.enable && this.registerShortcut("A+c", "toggleChat")
                    }
                }, {
                    key: "onKeyDown",
                    value: function(e) {
                        var t = $(e.target);
                        if (!t.is(":input") || t.is("input[type=radio],input[type=checkbox]")) {
                            var n = new c(e),
                                i = this.shortcutToAction[n];
                            return i && !0 === i.enabled ? (this.events.triggerEvent(i.id, {
                                    action: i
                                }),
                                !1) : void 0
                        }
                    }
                }, {
                    key: "registerActions",
                    value: function() {
                        this.addAction("undo"),
                            this.addAction("redo"),
                            this.addAction("save"),
                            this.addAction("delete", {
                                changeable: !1
                            }),
                            this.addAction("search"),
                            this.addAction("reloadData"),
                            this.addAction("drawSegment", {
                                group: "drawing"
                            }),
                            this.addAction("drawRoundabout", {
                                group: "drawing"
                            }),
                            W.Config.big_junctions.enable && this.addAction("drawBigJunction", {
                                group: "drawing",
                                enabled: !1
                            }),
                            this.addAction("displayLayerSwitcher", {
                                group: "layers"
                            }),
                            this.addAction("spreadArrows", {
                                group: "layers"
                            }),
                            this.addAction("hideArrows", {
                                group: "layers"
                            }),
                            this.addAction("colorEmptyStreets", {
                                group: "layers"
                            }),
                            this.addAction("closeStreetView", {
                                group: "layers"
                            }),
                            W.Config.chat.enable && this.addAction("toggleChat", {
                                group: "layers"
                            }),
                            this.addAction("toggleMultipleSelection", {
                                group: "editing"
                            }),
                            this.addAction("allowAllConnections", {
                                group: "editing"
                            }),
                            this.addAction("disallowAllConnections", {
                                group: "editing"
                            }),
                            this.addAction("toggleSegmentDirection", {
                                group: "editing"
                            }),
                            this.addAction("editSegmentAddress", {
                                group: "editing"
                            }),
                            this.addAction("editHouseNumbers", {
                                group: "editing"
                            }),
                            this.addAction("editClosures", {
                                group: "editing"
                            }),
                            this.addAction("editRestrictions", {
                                group: "editing"
                            }),
                            this.addAction("selectEntireStreet", {
                                group: "editing"
                            }),
                            this.addAction("increaseSegmentLevel", {
                                group: "editing"
                            }),
                            this.addAction("decreaseSegmentLevel", {
                                group: "editing"
                            }),
                            this.addAction("showShortcutsDialog", {
                                changeable: !1
                            }),
                            this.addAction("panUp", {
                                group: "navigation"
                            }),
                            this.addAction("panDown", {
                                group: "navigation"
                            }),
                            this.addAction("panLeft", {
                                group: "navigation"
                            }),
                            this.addAction("panRight", {
                                group: "navigation"
                            }),
                            this.addAction("zoomIn", {
                                group: "navigation"
                            }),
                            this.addAction("zoomOut", {
                                group: "navigation"
                            }),
                            this.addAction("nextFeedItem"),
                            this.addAction("prevFeedItem"),
                            this.addAction("toggleSatelliteImagery", {
                                group: "layers",
                                toggler: "ITEM_SATELLITE_IMAGERY"
                            }),
                            this.addAction("toggleGPSpoints", {
                                group: "layers",
                                toggler: "ITEM_GPS_POINTS"
                            }),
                            this.addAction("toggleRoads", {
                                group: "layers",
                                toggler: "ITEM_ROAD"
                            }),
                            this.addAction("toggleMapcomments", {
                                group: "layers",
                                toggler: "ITEM_MAP_COMMENTS"
                            }),
                            this.addAction("toggleAreaManagers", {
                                group: "layers",
                                toggler: "ITEM_AREA_MANAGERS"
                            }),
                            this.addAction("toggleJunctionboxes", {
                                group: "layers",
                                toggler: "ITEM_JUNCTION_BOXES"
                            }),
                            this.addAction("toggleSpeedcameras", {
                                group: "layers",
                                toggler: "ITEM_SPEED_CAMERAS"
                            }),
                            this.addAction("toggleMapProblems", {
                                group: "layers",
                                toggler: "ITEM_MAP_PROBLEMS"
                            }),
                            this.addAction("toggleUpdateRequests", {
                                group: "layers",
                                toggler: "ITEM_UPDATE_REQUESTS"
                            }),
                            this.addAction("toggleEditableAreas", {
                                group: "layers",
                                toggler: "ITEM_EDITABLE_AREAS"
                            }),
                            this.addAction("toggleRoadClosures", {
                                group: "layers",
                                toggler: "ITEM_CLOSURES"
                            }),
                            this.addAction("toggleLiveUsers", {
                                group: "layers",
                                toggler: "ITEM_LIVE_USERS"
                            }),
                            this.addAction("toggleShowAllArrows", {
                                group: "layers",
                                toggler: "ITEM_DISALLOWED_TURNS"
                            }),
                            this.addAction("togglePlaces", {
                                group: "layers",
                                toggler: "GROUP_PLACES"
                            })
                    }
                }, {
                    key: "persist",
                    value: function() {
                        return window.localStorage.setItem(this.LocalStorageKey, (0,
                            r.default)(this.serialize()))
                    }
                }, {
                    key: "restore",
                    value: function() {
                        var e = this,
                            t = window.localStorage.getItem(this.LocalStorageKey);
                        if (!t)
                            return !1;
                        try {
                            t = JSON.parse(t)
                        } catch (e) {
                            return !1
                        }
                        return (0,
                                a.default)(t).forEach(function(t) {
                                var n = (0,
                                        s.default)(t, 2),
                                    i = n[0],
                                    r = n[1];
                                null != e.Actions[i] ? e.registerShortcut(r, i, !0) : e._futureShortcutsByAction[i] = r
                            }),
                            !0
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return (0,
                                i.default)(this.Actions).forEach(function(t) {
                                var n = t.shortcut || c.getEmpty();
                                e[t.id] = n.toString()
                            }),
                            e
                    }
                }]),
                e
        }();
    (0,
        o.default)(h.prototype, {
        LocalStorageKey: "keyboardShortcuts",
        SpecialKeys: {
            32: "Space",
            38: "↑",
            39: "→",
            40: "↓",
            37: "←",
            9: "Tab",
            46: "Del",
            187: "=",
            189: "-"
        },
        Modifiers: {
            C: 1,
            S: 2,
            A: 4
        },
        BitToModifier: null,
        ModifierToBrowserEvent: null,
        BrowserEventToModifier: {
            altKey: "A",
            metaKey: "C",
            ctrlKey: "C",
            shiftKey: "S"
        },
        Groups: {
            default: {
                members: []
            },
            navigation: {
                members: []
            },
            editing: {
                members: []
            },
            drawing: {
                members: []
            },
            layers: {
                members: []
            }
        },
        Actions: null,
        CLASS_NAME: "Waze.Control.KeyboardShortcuts"
    }),
    (c = function() {
        function e(t) {
            (0,
                l.default)(this, e),
            this.ctrlKey = !1,
                this.metaKey = !1,
                this.altKey = !1,
                this.shiftKey = !1,
                this.keyCode = null,
                t && (this.ctrlKey = t.ctrlKey,
                    this.altKey = t.altKey,
                    this.shiftKey = t.shiftKey,
                    this.metaKey = t.metaKey,
                    this.keyCode = t.which)
        }
        return (0,
                u.default)(e, [{
                key: "toString",
                value: function() {
                    var e = this,
                        t = 0;
                    return (0,
                            a.default)(h.prototype.BrowserEventToModifier).forEach(function(n) {
                            var i = (0,
                                    s.default)(n, 2),
                                r = i[0],
                                a = i[1];
                            e[r] && (t |= h.prototype.Modifiers[a])
                        }),
                        t + "," + this.keyCode
                }
            }, {
                key: "isEmpty",
                value: function() {
                    return -1 === this.keyCode || "-1" === this.keyCode
                }
            }, {
                key: "fromString",
                value: function(e) {
                    var t = e.split(","),
                        n = t[0],
                        i = _.last(t),
                        r = new c;
                    return (0,
                            a.default)(h.prototype.BrowserEventToModifier).forEach(function(e) {
                            var t = (0,
                                    s.default)(e, 2),
                                i = t[0],
                                a = t[1];
                            h.prototype.Modifiers[a] & n && (r[i] = !0)
                        }),
                        r.keyCode = i,
                        r
                }
            }, {
                key: "fromEmacsNotation",
                value: function(e) {
                    var t = e.split("+"),
                        n = t[0],
                        i = _.last(t),
                        r = new c;
                    return 1 === t.length && (n = ""),
                        1 === i.length && (i = i.toUpperCase().charCodeAt()),
                        r.keyCode = i,
                        n.split("").forEach(function(e) {
                            var t = h.prototype.ModifierToBrowserEvent[e];
                            r[t] = !0
                        }),
                        r
                }
            }]),
            e
    }()).getEmpty = function() {
            var e = new c;
            return e.keyCode = -1,
                e
        },
        h.prototype.BitToModifier = {},
        (0,
            a.default)(h.prototype.Modifiers).forEach(function(e) {
            var t = (0,
                    s.default)(e, 2),
                n = t[0],
                i = t[1];
            h.prototype.BitToModifier[i] = n
        }),
        h.prototype.ModifierToBrowserEvent = {},
        (0,
            a.default)(h.prototype.BrowserEventToModifier).forEach(function(e) {
            var t = (0,
                    s.default)(e, 2),
                n = t[0],
                i = t[1];
            h.prototype.ModifierToBrowserEvent[i] = n
        }),
        h.KeyStroke = c,
        t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-standard36b7901c37f65cd4308d73998cb62a94.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                fillOpacity: .3,
                strokeOpacity: .7,
                strokeWidth: 2,
                strokeColor: "#333",
                label: "${getLabel}",
                fontColor: "#333",
                labelOutlineColor: "white",
                labelOutlineWidth: 2,
                fontSize: 14,
                fontWeight: "bold",
                fillColor: "${getFillColor}"
            }, {
                context: {
                    getLabel: function(e) {
                        return e.model.getUserName()
                    },
                    getFillColor: function(e) {
                        return "#" + (e.model.userID % 16777216).toString(16)
                    }
                }
            }),
            highlight: new OpenLayers.Style({
                strokeOpacity: 1,
                strokeWidth: 3,
                fontSize: 18
            })
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(31)),
        r = s(n(191));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = "open",
        o = "solved",
        l = "rejected",
        u = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new i.default("map-problem"),
                    n = this.model.getLocation(),
                    r = new OL.LonLat(n.x, n.y);
                OL.Marker.prototype.initialize.call(this, r, t),
                    this.render(),
                    this.icon.$div.data("model", this.model)
            },
            render: function() {
                var e = this.icon.$div;
                e.attr("data-id", this.model.getID());
                var t = e.hasClass("selected");
                return e.removeClass(),
                    e.addClass("map-problem"),
                    e.toggleClass("selected", t),
                    e.toggleClass("uneditable", !this.model.editable),
                    e.toggleClass("recently-closed", this.model.isRecentlyClosed()),
                    e.addClass(this.model.attributes.severity),
                    e.addClass(this._getState())
            },
            _getState: function() {
                return this.model.attributes.open ? a : this.model.attributes.resolution === r.default.FIXED ? o : l
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t) {
            return (0,
                    i.default)(this, e),
                this.copied = null,
                this.clipboardActive = !1,
                this.$clipboardEl = null,
                this.$clipboardContainer = null,
                this.$el = t,
                this.events = new OL.Events(this),
                this
        }
        return (0,
                r.default)(e, [{
                key: "setEl",
                value: function(e) {
                    return this.$el = e,
                        this.$el.on({
                            mouseover: this._onMouseOver.bind(this),
                            mouseout: this._onMouseOut.bind(this),
                            scope: this
                        })
                }
            }, {
                key: "_onMouseOver",
                value: function() {
                    return $(document).on({
                        keydown: this._onKeyDown.bind(this),
                        keyup: this._onKeyUp.bind(this)
                    })
                }
            }, {
                key: "_onMouseOut",
                value: function() {
                    return $(document).off({
                            keydown: this._onKeyDown.bind(this),
                            keyup: this._onKeyUp.bind(this)
                        }),
                        this._detachClipboard()
                }
            }, {
                key: "_onKeyDown",
                value: function(e) {
                    var t = this;
                    if (this.copied = !1,
                        this.value && (e.ctrlKey || e.metaKey) && (67 === e.keyCode && (this.copied = !0),
                            !$(e.target).is("input:visible,textarea:visible")))
                        return _.defer(function() {
                            null == t.$clipboardContainer && (t.$clipboardContainer = $("<div class='clipboard-container'></div>")),
                                t.$clipboardContainer.appendTo($(document.body)),
                                t.$clipboardContainer.empty().show(),
                                t.$clipboardEl = $("<textarea />").val(t.value).appendTo(t.$clipboardContainer).focus().select(),
                                t.clipboardActive = !0
                        })
                }
            }, {
                key: "_onKeyUp",
                value: function(e) {
                    $(e.target).is(this.$clipboardEl) && (this.copied && this.events.triggerEvent("copied", this.$clipboardEl.val()),
                            this._detachClipboard()),
                        this.copied = !1
                }
            }, {
                key: "_detachClipboard",
                value: function() {
                    this.clipboardActive && (this.$clipboardContainer.empty().detach(),
                        this.clipboardActive = !1)
                }
            }, {
                key: "set",
                value: function(e) {
                    this.value = e
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(1192)),
        r = o(n(1196)),
        s = o(n(421)),
        a = o(n(16));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = Marionette.View.extend({
        APPROVE_ACTION_NAMES: {
            default: I18n.t("venues.update_requests.panel.action.approve"),
            ADD_VENUE: I18n.t("venues.update_requests.panel.action.add_to_map")
        },
        HIDE_PLACE_DETAILS: {
            ADD_VENUE: !0
        },
        template: "templates/place_updates/item",
        events: {
            "change [name=approved]": "_onApproveChanged",
            "click .image-preview": "_onImagePreviewClicked",
            "click .focus": "_onFocusClicked",
            "click .street-view-btn": "_onStreetViewClicked"
        },
        bindings: {
            ".street-view-btn": {
                observe: "streetViewAvailable",
                visible: !0
            },
            ".street-view-tooltip": {
                observe: "streetViewAvailable",
                visible: !0,
                onGet: _.negate(Boolean)
            }
        },
        ui: {
            approvedDropdown: "[name=approved]",
            header: ".header",
            scrollable: ".scrollable",
            actions: ".actions",
            tooltips: ".tooltip"
        },
        fieldChangeView: null,
        imageDialogView: null,
        bodyScrollPosition: null,
        rendered: !1,
        maxHeight: null,
        initialize: function() {
            this.streetViewController = this.options.streetViewController,
                this.viewModel = new Backbone.Model({
                    streetViewAvailable: !1
                }),
                this.listenTo(this.model, "change:approved", this._onModelChanged),
                this._checkStreetViewAvailability()
        },
        _checkStreetViewAvailability: function() {
            var e = this;
            this.streetViewController && this.streetViewController.hasPlacePanaorama(this.options.venue).then(function(t) {
                e.viewModel.set({
                    streetViewAvailable: t
                })
            })
        },
        serializeData: function() {
            return {
                model: this.model,
                venue: this.options.venue,
                hidePlaceDetails: Boolean(this.HIDE_PLACE_DETAILS[this.model.get("updateType")]),
                showDebug: this.options.showDebug
            }
        },
        _onModelChanged: function() {
            return this.render()
        },
        _onApproveChanged: function() {
            var e = this.ui.approvedDropdown.filter(":checked").booleanVal(),
                t = new r.default(this.options.venue, this.model, e);
            this.options.venue.model.actionManager.add(t);
            var n = "" + this.model.get("updateType"),
                i = null != e ? e ? 1 : -1 : null;
            null != i && W.Report.placeUpdateRequestAction("update_state", n, i)
        },
        _onImagePreviewClicked: function(e) {
            var t = $(e.target).data("image-id"),
                n = new s.default({
                    venue: this.options.venue,
                    imageId: t
                });
            return W.app.layout.getRegion("dialogRegion").show(n),
                e.preventDefault()
        },
        _onFocusClicked: function() {
            this.trigger("focusClicked")
        },
        _onStreetViewClicked: function() {
            this.trigger("streetViewClicked")
        },
        onRender: function() {
            this.rendered = !0,
                "UPDATE_VENUE" === this.model.get("updateType") && (this.fieldChangeView && this.fieldChangeView.destroy(),
                    this.fieldChangeView = new i.default({
                        collection: new Backbone.Collection(this.model.get("changedFields"), {
                            sort: !1
                        }),
                        el: this.$(".changed-fields")
                    }),
                    this.fieldChangeView.render()),
                this._setBodyHeight(),
                this.ui.scrollable.scrollTop(this.bodyScrollPosition),
                this.stickit(this.viewModel),
                this.ui.tooltips.tooltip()
        },
        onDestroy: function() {
            if (this.fieldChangeView)
                return this.fieldChangeView.destroy()
        },
        render: function() {
            return this.rendered && (this.bodyScrollPosition = this.ui.scrollable.scrollTop()),
                Marionette.View.prototype.render.apply(this, arguments)
        },
        setMaxHeight: function(e) {
            return this.maxHeight = e,
                this._setBodyHeight()
        },
        _setBodyHeight: function() {
            var e = this.ui.header.outerHeight(),
                t = this.ui.actions.outerHeight();
            return this.ui.scrollable.css({
                maxHeight: this.maxHeight - e - t
            })
        },
        templateContext: {
            getTitle: function() {
                var e = this.model.get("updateType");
                return I18n.t("venues.update_requests.panel.title." + e)
            },
            getApproveActionName: function() {
                var e = this.model.get("updateType"),
                    t = l.prototype.APPROVE_ACTION_NAMES;
                return t[e] || t.default
            },
            getChangesTemplate: function() {
                return "templates/place_updates/" + this.model.get("updateType").toLowerCase()
            },
            getApproveActionIntent: function() {
                return "default"
            },
            getRejectActionName: function() {
                return I18n.t("venues.update_requests.panel.action.reject")
            },
            getRejectedLabel: function() {
                return I18n.t("venues.update_requests.panel.rejected")
            },
            getApprovedLabel: function() {
                return I18n.t("venues.update_requests.panel.approved")
            },
            getNoPermissionsMessage: function() {
                if (this.model.get("isInEditArea")) {
                    var e = this.model.getRequiredEditRank(),
                        t = a.default.formatRank(e);
                    return I18n.t("venues.update_requests.panel.uneditable", {
                        level: t
                    })
                }
                return I18n.t("venues.update_requests.panel.out_of_edit_area")
            },
            getNewPlaceImages: function() {
                return this.model.get("place").getImagesByUserId(this.model.get("createdBy"))
            },
            shouldShowCarousel: function() {
                return this.getNewPlaceImages().length > 1
            },
            shouldShowName: function() {
                return !this.model.get("place").attributes.residential
            },
            getCarouselUniqueId: function() {
                return "place-update-carousel-" + this.model.get("id").replace(/[^\d\w]/g, "")
            },
            isOpened: function() {
                return null === this.model.get("approved")
            },
            isApproved: function() {
                return !0 === this.model.get("approved")
            },
            isRejected: function() {
                return !1 === this.model.get("approved")
            }
        }
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(16)),
        r = a(n(1193)),
        s = a(n(420));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.View.extend({
        tagName: "li",
        template: "templates/place_updates/changed_field",
        events: {
            "mouseover .location-button.current": "_onCurrentOver",
            "mouseover .location-button.suggested": "_onSuggestedOver",
            "mouseout .location-button.current": "_onLocationOut",
            "mouseout .location-button.suggested": "_onLocationOut"
        },
        behaviors: {
            ToolTip: {
                behaviorClass: s.default,
                layerClassName: "suggested-geometry-layer"
            }
        },
        regions: {
            externalProvidersRegion: ".external-providers-view"
        },
        onRender: function() {
            this.model.isExternalProvider() && this._showExternalProvidersView()
        },
        _showExternalProvidersView: function() {
            var e = new r.default({
                venue: this.model.attributes.suggestedVenue
            });
            this.showChildView("externalProvidersRegion", e)
        },
        _onCurrentOver: function() {
            var e = this._getValue(this.model.get("venue")).getBounds().getCenterLonLat();
            this.triggerMethod("show:tooltip", e, I18n.t("venues.update_requests.panel.change.current_location"), "")
        },
        _onSuggestedOver: function() {
            var e = this._getValue(this.model.get("suggestedVenue")),
                t = new OL.Feature.Vector(e),
                n = e.getBounds().getCenterLonLat();
            this.triggerMethod("show:tooltip", n, I18n.t("venues.update_requests.panel.change.suggested_location"), "suggested", t)
        },
        _onLocationOut: function() {
            this.triggerMethod("hide:tooltip")
        },
        _getValue: function(e) {
            var t = this.model.get("fieldName");
            return this.valueGetters[t] ? this.valueGetters[t](e) : e.attributes[t]
        },
        serializeData: function() {
            var e = this._getValue(this.model.get("venue")),
                t = this._getValue(this.model.get("suggestedVenue")),
                n = _.isArray(e) || _.isArray(t);
            return {
                showChangeList: n,
                changeList: n ? this.getChangeList() : null,
                currentValue: e,
                suggestedValue: t,
                fieldName: this.model.get("fieldName"),
                removing: !t,
                isGeometry: this.model.isGeometry(),
                isExternalProvider: this.model.isExternalProvider(),
                model: this.model
            }
        },
        templateContext: {
            getRemovedImages: function() {
                var e = this.model.get("venue"),
                    t = _(e.attributes.images),
                    n = _(this.model.get("suggestedVenue").attributes.images);
                return _.difference(t.pluck("id"), n.pluck("id")).map(function(e) {
                    return t.find(function(t) {
                        return t.get("id") === e
                    })
                })
            }
        },
        valueGetters: {
            streetID: function(e) {
                return i.default.formatAddress(e.getAddress())
            },
            entryExitPoints: function(e) {
                var t = e.getNavigationPoints()[0];
                return null != t ? t.getPoint() : e.attributes.geometry.getCentroid()
            },
            openingHours: function(e) {
                return e.getOpeningHours().map(i.default.formatOpeningHour).join(", ")
            },
            services: function(e) {
                return e.attributes.services.map(function(e) {
                    return I18n.t("venues.services." + e)
                })
            },
            categories: function(e) {
                return e.attributes.categories.map(function(e) {
                    return I18n.t("venues.categories." + e)
                })
            },
            externalProviderIDs: function(e) {
                return e.attributes.externalProviderIDs.map(function(e) {
                    return e.get("uuid")
                })
            }
        },
        getChangeList: function() {
            var e = this._getValue(this.model.get("venue")),
                t = this._getValue(this.model.get("suggestedVenue"));
            return this.model._getChangeList(e, t)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(210)),
        r = s(n(31));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.Behavior.extend({
        defaults: {
            layerClassName: ""
        },
        _markerLayer: null,
        _vectorLayer: null,
        _currentLocationDrawn: !1,
        initialize: function() {
            this._vectorLayer = new OL.Layer.Vector("", {
                    styleMap: i.default
                }),
                this._markerLayer = new OL.Layer.Markers(""),
                W.map.addLayers([this._vectorLayer, this._markerLayer]),
                $(this._vectorLayer.div).addClass(this.options.layerClassName)
        },
        _createTooltip: function(e, t, n) {
            var i = new OL.Marker(e, new r.default("location-tooltip " + n));
            return i.icon.$div.text(t),
                this._markerLayer.addMarker(i)
        },
        _createFeature: function(e) {
            this._vectorLayer.addFeatures(e)
        },
        onShowTooltip: function(e, t, n, i) {
            this._currentLocationDrawn || (this._createTooltip(e, t, n),
                i && this._createFeature(i),
                this._currentLocationDrawn = !0)
        },
        onHideTooltip: function() {
            this._vectorLayer.removeAllFeatures(),
                this._markerLayer.clearMarkers(),
                this._currentLocationDrawn = !1
        },
        _destroyLayers: function() {
            this._vectorLayer && this._vectorLayer.destroy(),
                this._markerLayer && this._markerLayer.destroy()
        },
        onDestroy: function() {
            this._destroyLayers()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(105),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        template: "templates/place_updates/image_dialog",
        image: null,
        events: function() {
            return {
                "click .prev-button": "onPrevClicked",
                "click .next-button": "onNextClicked",
                "click .delete-button": "onDeleteClicked"
            }
        },
        initialize: function() {
            this.venue = this.options.venue,
                this.image = this.venue.getImageById(this.options.imageId),
                this.currentImageIndex = this._getCurrentImageIndex()
        },
        serializeData: function() {
            return {
                imageUrl: this.image.getUrl(s.default.SIZE.BIG),
                dateAdded: this.image.get("date"),
                addingUserId: this.image.get("creatorUserId"),
                venueName: this.venue.attributes.name,
                hasNext: this.hasNext(),
                hasPrev: this.hasPrev()
            }
        },
        _getCurrentImageIndex: function() {
            return this.venue.attributes.images.indexOf(this.image)
        },
        hasNext: function() {
            return this.venue.attributes.images.length - 1 > this.currentImageIndex
        },
        hasPrev: function() {
            return this.currentImageIndex > 0
        },
        onPrevClicked: function() {
            var e = this.venue.attributes.images;
            this.currentImageIndex > 0 && (this.currentImageIndex--,
                this.image = e[this.currentImageIndex],
                this.render())
        },
        onNextClicked: function() {
            var e = this.venue.attributes.images,
                t = e.length;
            this.currentImageIndex < t - 1 && (this.currentImageIndex++,
                this.image = e[this.currentImageIndex],
                this.render())
        },
        onDeleteClicked: function() {
            this.trigger("deleteImageClicked", this.image.id);
            var e = this.venue.attributes.images;
            this.currentImageIndex > e.length - 1 && (this.currentImageIndex = e.length - 1),
                this.image = e[this.currentImageIndex],
                this.render()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "next",
                value: function() {
                    return this.trigger("next")
                }
            }]),
            t
    }(Marionette.Object);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(7)),
        r = u(n(25)),
        s = u(n(215)),
        a = u(n(1216)),
        o = u(n(1217)),
        l = u(n(1219));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = Marionette.Object.extend({
        ignoredErrors: {
            100: !0
        },
        errorCollection: null,
        _editingLock: null,
        initialize: function() {
            this.mediator = this.options.mediator,
                this._lockEditing(),
                this.overlayRenderer = new s.default(this.options.map),
                this.overlayRenderer.drawOverlay()
        },
        onDestroy: function() {
            return this._releaseEditing(),
                this.overlayRenderer && this.overlayRenderer.destroy(),
                this.errorListView && this.errorListView.destroy(),
                this.successView && this.successView.destroy(),
                W.accelerators.events.unregister("save", this, this._onSaveClicked)
        },
        success: function(e) {
            var t = this;
            return this._releaseEditing(),
                this.overlayRenderer.destroy(),
                this.trigger("saveSuccess"),
                this.trigger("done"),
                this._showSuccessMessage(e),
                this.listenTo(this.successView, "destroy", function() {
                    return t.destroy()
                })
        },
        fail: function(e) {
            var t = this;
            if (!this.ignoredErrors[e[0].get("code")])
                return 1 === e.length && this._showErrorPoint(e[0]),
                    this._reportErrors(e),
                    e = this._collateErrors(e),
                    this.errorCollection = new a.default(e),
                    this.errorListView = new o.default({
                        collection: this.errorCollection
                    }),
                    this.listenTo(this.errorListView, "click:save", this._onSaveClicked),
                    this.listenTo(this.errorListView, "destroy", function() {
                        return t.trigger("done"),
                            t.destroy()
                    }),
                    this.listenTo(this.errorListView, "click:focus", this._showErrorPoint),
                    W.accelerators.events.register("save", this, this._onSaveClicked),
                    this.options.popoverRegion.show(this.errorListView);
            this.overlayRenderer.destroy()
        },
        _reportErrors: function() {
            (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).forEach(function(e) {
                var t = e.get("code");
                W.Report.saveError(t)
            })
        },
        _collateErrors: function(e) {
            var t = [],
                n = _.groupBy(e, function(e) {
                    return e.get("code")
                }),
                s = !0,
                a = !1,
                o = void 0;
            try {
                for (var l, u = (0,
                        r.default)((0,
                        i.default)(n)); !(s = (l = u.next()).done); s = !0) {
                    var d = (e = n[l.value])[0];
                    e.length > 1 && d.set({
                            geometry: null,
                            collatedCount: e.length,
                            ignorable: _.every(e, function(e) {
                                return e.get("ignorable")
                            })
                        }),
                        t.push(d)
                }
            } catch (e) {
                a = !0,
                    o = e
            } finally {
                try {
                    !s && u.return && u.return()
                } finally {
                    if (a)
                        throw o
                }
            }
            return t
        },
        _releaseEditing: function() {
            this.mediator.set({
                    navigation: !0,
                    saving: !1
                }),
                this.mediator.releaseEditing(this._editingLock),
                this._editingLock = null
        },
        _lockEditing: function() {
            this.mediator.set({
                    navigation: !1,
                    saving: !0
                }),
                this._editingLock = this.mediator.lockEditing()
        },
        _showErrorPoint: function(e) {
            var t = e.get("geometry");
            if (null !== t)
                return this.overlayRenderer.drawAndFocusSpotlightAtPoint(t)
        },
        _onSaveClicked: function() {
            if (this.errorCollection.isIgnorable())
                return this.trigger("resave")
        },
        _showSuccessMessage: function(e) {
            return this.successView = new l.default({
                    model: e
                }),
                this.options.popoverRegion.show(this.successView)
        }
    });
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.Region.extend({
        constructor: function() {
            this.el || this._createContainer(),
                Marionette.Region.prototype.constructor.apply(this, arguments)
        },
        initialize: function() {
            var e = this,
                t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.saveButtonSelector = t.saveButtonSelector,
                !this.saveButtonSelector)
                throw new Error("Popover region initialized without the saveButtonSelector options");
            return this.$container.on("click", ".close-popover", function() {
                return e.empty()
            })
        },
        show: function(e) {
            return e.$el.addClass("save-popover"),
                this.$container.addClass("shrunk"),
                Marionette.Region.prototype.show.apply(this, arguments)
        },
        onShow: function() {
            return this._positionContainer(),
                this.$container.removeClass("shrunk")
        },
        _createContainer: function() {
            this.$container = this.el = $("<div />").attr({
                class: "save-popover-container"
            }).appendTo("body")
        },
        _positionContainer: function() {
            var e = $(this.saveButtonSelector)[0].getBoundingClientRect(),
                t = this.$container[0];
            return this.$container.css({
                top: e.top + e.height,
                left: e.left - t.offsetWidth + e.width
            })
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(9)),
        r = h(n(0)),
        s = h(n(1)),
        a = h(n(31)),
        o = h(n(34)),
        l = h(n(1234)),
        u = h(n(1246)),
        d = h(n(430)),
        c = h(n(1247));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function() {
        function e(t, n, i) {
            var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                a = s.includeJunctionTurns,
                o = void 0 !== a && a,
                l = s.includeUturns,
                u = void 0 === l || l,
                d = s.includeOnlyDisallowedTurns,
                h = void 0 !== d && d;
            (0,
                r.default)(this, e),
            this._drawingContext = t,
                this._dataModel = n,
                this._appPreferences = i,
                this._includeJunctionTurns = o,
                this._includeUturns = u,
                this._includeOnlyDisallowedTurns = h,
                this._offsetCalculator = new c.default
        }
        return (0,
                s.default)(e, [{
                key: "generate",
                value: function(t) {
                    return this._drawingContext.getMapZoom() < e.MIN_UTURN_DISPLAY_ZOOM ? [] : [].concat((0,
                        i.default)(this._createTurnArrowsForVertex(o.default.forwardOf(t.getID()))), (0,
                        i.default)(this._createTurnArrowsForVertex(o.default.reverseOf(t.getID()))))
                }
            }, {
                key: "_createTurnArrowsForVertex",
                value: function(e) {
                    var t = this,
                        n = this._dataModel.segments.getDirectedSegment(e);
                    if (!n.getNode())
                        return [];
                    var i = [];
                    n.hasBigJunction() ? this._includeJunctionTurns && (i = this._getJunctionTurnArrows(n)) : i = this._getValidTurnsArrows(n),
                        this._includeOnlyDisallowedTurns && (i = i.filter(function(e) {
                            return !e.getTurn().getTurnData().isAllowed()
                        }));
                    var r = i.filter(function(e) {
                        return t._shouldDrawArrow(e)
                    }).map(function(e) {
                        return new l.default({
                            turnArrow: e,
                            isLeftHand: t._dataModel.isLeftHand,
                            drawingContext: t._drawingContext,
                            dataModel: t._dataModel,
                            transparent: t._appPreferences.get("showTransparentTurnArrows")
                        })
                    });
                    return n.hasBigJunction() || this._offsetCalculator.calculate(r, {
                            isLeftHand: this._dataModel.isLeftHand,
                            offsetRegularTurns: this._appPreferences.get("spreadTurnArrows")
                        }),
                        r.length > 0 && this._drawLockedBadge(n),
                        r
                }
            }, {
                key: "_getValidTurnsArrows",
                value: function(e) {
                    var t = this,
                        n = e.getNode(),
                        i = e.getSegment();
                    return this._dataModel.getTurnGraph().getLegalTrivialTurnsFrom(e.getVertex()).map(function(e) {
                        var r = t._dataModel.segments.getObjectById(e.getToVertex().getSegmentID());
                        return new u.default(i, r, n, e)
                    })
                }
            }, {
                key: "_getJunctionTurnArrows",
                value: function(e) {
                    var t = this,
                        n = e.getBigJunction();
                    return n.getTurnsFrom(e.getVertex()).map(function(i) {
                        var r = t._dataModel.segments.getObjectById(i.getToVertex().getSegmentID()),
                            s = t._dataModel.nodes.getObjectById(t._dataModel.getRoadGraph().getVertexNodeID(i.getToVertex().getOpposite()));
                        return new d.default(e.getSegment(), r, s, i, n)
                    })
                }
            }, {
                key: "_shouldDrawArrow",
                value: function(e) {
                    return !e.getTurn().isUturn() || this._shouldDrawUturn(e)
                }
            }, {
                key: "_shouldDrawUturn",
                value: function(t) {
                    if (!this._includeUturns || this._isDeadEndUturn(t))
                        return !1;
                    var n = this._drawingContext.mapUnitsToPixel(t.getFromSegment().geometry.getLength());
                    return this._drawingContext.getMapZoom() >= e.MIN_UTURN_DISPLAY_ZOOM && n >= e.MIN_SEGMENT_LENGTH_FOR_UTURN
                }
            }, {
                key: "_isDeadEndUturn",
                value: function(e) {
                    return 1 === this._dataModel.getRoadGraph().getConnectedVertices(e.getTurn().getFromVertex()).length
                }
            }, {
                key: "_drawLockedBadge",
                value: function(e) {
                    var t = e.getNode();
                    if (!e.areTurnsLocked()) {
                        var n = new OpenLayers.Marker(new OL.LonLat(t.geometry.x, t.geometry.y), new a.default("unlocked-badge"));
                        this._drawingContext.addMarkers([n])
                    }
                }
            }]),
            e
    }();
    f.MIN_UTURN_DISPLAY_ZOOM = 5,
        f.MIN_ARROW_DISPLAY_ZOOM = 4,
        f.MIN_SEGMENT_LENGTH_FOR_UTURN = 75,
        t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(11)),
        u = d(n(41));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this));
            return n._turn = e,
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    if (this.model.segments.getDirectedSegment(this._turn.getFromVertex()).areTurnsLocked()) {
                        var e = this._turn,
                            t = this._turn.getTurnData();
                        t = t.withToggledState(!t.isAllowed()),
                            e = e.withTurnData(t);
                        var n = this.model.getTurnGraph(),
                            i = new u.default(n, e);
                        this.doSubAction(i)
                    } else {
                        var r = this.model.segments.getObjectById(this._turn.getFromVertex().getSegmentID()),
                            s = this.model.nodes.getObjectById(this.model.getRoadGraph().getVertexNodeID(this._turn.getFromVertex()));
                        this.doSubAction(r.lockTurns(s, !0))
                    }
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    var e = _.flatten(this.subActions.map(function(e) {
                        return e.getFocusFeatures()
                    }));
                    return _.uniq(e)
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this._turn.getTurnData().isAllowed();
                    this._description = e ? I18n.t("save.changes_log.actions.SetTurn.disallow") : I18n.t("save.changes_log.actions.SetTurn.allow")
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = _(n(9)),
        r = _(n(6)),
        s = _(n(2)),
        a = _(n(0)),
        o = _(n(1)),
        l = _(n(3)),
        u = _(n(4)),
        d = n(69),
        c = _(n(1238)),
        h = _(n(1239)),
        f = _(n(1240)),
        p = _(n(1241)),
        g = _(n(1242)),
        v = _(n(1243)),
        m = _(n(47));

    function _(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var y = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            description: "",
                            drivingModality: null,
                            helpMessage: ""
                        }
                    }
                }]),
                t
        }(Backbone.Model),
        b = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            validationRegion: ".restriction-validation-region",
                            segmentEditingRegion: ".segment-editing-region",
                            timeframeEditingRegion: ".timeframe-editing-region",
                            driveProfileEditingRegion: ".drive-profile-editing-region"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-cancel": "restriction:edit:cancel"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-create": "_createRestriction",
                            "click .do-update": "_updateRestriction",
                            "change .do-change-driving-modality": "_changeDrivingModality"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            "change:helpMessage": "_updateHelpMessage"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=description]": "description",
                            ".driving-modality-select": {
                                observe: "drivingModality",
                                selectOptions: {
                                    collection: "this._drivingModalityOptions"
                                }
                            },
                            ".drive-profile-editing-region": {
                                classes: {
                                    "drive-profile-toll-free": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === d.RESTRICTION_MODALITY.DRIVING_TOLL_FREE
                                        }
                                    },
                                    "drive-profile-allowed": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === d.RESTRICTION_MODALITY.DRIVING_ALLOWED
                                        }
                                    }
                                }
                            },
                            ".help-message": {
                                observe: ["helpMessage"]
                            },
                            ".help-message-region": {
                                classes: {
                                    hidden: {
                                        observe: "helpMessage",
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }
                                }
                            },
                            "select, textarea, .do-update, .do-create": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restriction: null,
                            isNewRestriction: !0,
                            editingTitle: "",
                            canEditRestrictions: !1,
                            canAddTollRestriction: !1,
                            subscriptions: {}
                        };
                        this._restriction = e.restriction,
                            this._isNewRestriction = e.isNewRestriction,
                            this._editingTitle = e.editingTitle,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._canAddTollRestriction = e.canAddTollRestriction,
                            this._subscriptions = e.subscriptions,
                            this._timeframe = this._restriction.getTimeFrame(),
                            this.model = new y({
                                restrictionEditable: this._isRestrictionEditable(),
                                description: this._restriction.getDescription(),
                                drivingModality: null
                            }),
                            this._drivingModalityOptions = this._getDriveProfileTypeOptions()
                    }
                }, {
                    key: "_updateHelpMessage",
                    value: function() {
                        var e = this.getChildView("driveProfileEditingRegion");
                        this.model.set({
                            helpMessage: e.getHelpMessage(this.model.attributes.drivingModality)
                        })
                    }
                }, {
                    key: "_getDriveProfileTypeOptions",
                    value: function() {
                        var e = this,
                            t = [d.RESTRICTION_MODALITY.DRIVING_ALLOWED];
                        return this._restriction.supportsTollDriveProfileEntries() && t.push(d.RESTRICTION_MODALITY.DRIVING_TOLL_FREE),
                            t.push(d.RESTRICTION_MODALITY.DRIVING_BLOCKED),
                            t.map(function(t) {
                                return {
                                    value: t,
                                    label: I18n.t("restrictions.editing.driving.types." + t),
                                    disabled: t === d.RESTRICTION_MODALITY.DRIVING_TOLL_FREE && !e._canAddTollRestriction
                                }
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.$(".waze-tooltip").tooltip();
                        var e = this._isRestrictionEditable();
                        this._isSegmentRestriction() && this.showChildView("segmentEditingRegion", h.default.for(this._restriction, {
                                restrictionEditable: e
                            })),
                            this.showChildView("timeframeEditingRegion", v.default.for(this._timeframe, {
                                restrictionEditable: e
                            })),
                            this._showDriveProfileEdit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            isNewRestriction: this._isNewRestriction,
                            editingTitle: this._editingTitle,
                            showEditDriveProfile: this._restriction.supportsDriveProfiles(),
                            showTollDisabledTooltip: !this._canAddTollRestriction && this._restriction.supportsTollDriveProfileEntries()
                        }
                    }
                }, {
                    key: "_isRestrictionEditable",
                    value: function() {
                        return this._restriction.isEditable() && this._canEditRestrictions
                    }
                }, {
                    key: "_isSegmentRestriction",
                    value: function() {
                        return this._restriction instanceof m.default
                    }
                }, {
                    key: "_getDrivingModality",
                    value: function() {
                        return this._isNewRestriction ? d.RESTRICTION_MODALITY.DRIVING_ALLOWED : this._restriction.getDrivingModality()
                    }
                }, {
                    key: "_showDriveProfileEdit",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).drivingModality,
                            t = void 0 === e ? this._getDrivingModality() : e,
                            n = this._isRestrictionEditable(),
                            i = void 0;
                        i = this._restriction.supportsDriveProfiles() ? t === d.RESTRICTION_MODALITY.DRIVING_BLOCKED ? f.default.for(this._restriction, {
                                restrictionEditable: n
                            }) : p.default.for(this._restriction, {
                                restrictionEditable: n,
                                subscriptions: this._subscriptions
                            }) : new g.default,
                            this.model.set({
                                drivingModality: t
                            }),
                            this.showChildView("driveProfileEditingRegion", i),
                            this._updateHelpMessage()
                    }
                }, {
                    key: "_getEditedRestriction",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.description,
                            n = e.drivingModality,
                            i = this.getChildView("timeframeEditingRegion"),
                            s = this.getChildView("driveProfileEditingRegion"),
                            a = this._restriction.getDefaultType();
                        this._restriction.supportsDriveProfiles() && (n === d.RESTRICTION_MODALITY.DRIVING_ALLOWED ? a = d.RESTRICTION_TYPE.BLOCKED : n === d.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? a = d.RESTRICTION_TYPE.TOLL : n === d.RESTRICTION_MODALITY.DRIVING_BLOCKED && (a = s.getRestrictionData().defaultType));
                        var o = {
                            defaultType: a,
                            description: t
                        };
                        if ((0,
                                r.default)(o, i.getRestrictionData()),
                            (0,
                                r.default)(o, s.getRestrictionData()),
                            this._isSegmentRestriction()) {
                            var l = this.getChildView("segmentEditingRegion");
                            (0,
                                r.default)(o, l.getRestrictionData())
                        }
                        return this._restriction.with(o)
                    }
                }, {
                    key: "_validate",
                    value: function() {
                        var e = [];
                        return this.model.attributes.description.length > d.RESTRICTION_DESCRIPTION_CHAR_LIMIT && e.push(I18n.t("restrictions.editing.validation.description_char_limit", {
                                char_limit: d.RESTRICTION_DESCRIPTION_CHAR_LIMIT
                            })),
                            e
                    }
                }, {
                    key: "_isValid",
                    value: function() {
                        var e, t = this,
                            n = (e = this._validate()).concat.apply(e, (0,
                                i.default)(["timeframeEditingRegion", "driveProfileEditingRegion"].map(function(e) {
                                return t.getChildView(e).validate()
                            }))),
                            r = new c.default({
                                errorMessages: n
                            });
                        return this.showChildView("validationRegion", r),
                            r.isValid()
                    }
                }, {
                    key: "_createRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:create", this._getEditedRestriction())
                    }
                }, {
                    key: "_updateRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:update", this._restriction, this._getEditedRestriction())
                    }
                }, {
                    key: "_changeDrivingModality",
                    value: function(e) {
                        var t = e.target.value;
                        this._showDriveProfileEdit({
                            drivingModality: t
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = b,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(2)),
        r = f(n(0)),
        s = f(n(1)),
        a = f(n(3)),
        o = f(n(4)),
        l = n(118),
        u = n(69),
        d = n(139),
        c = n(47),
        h = f(c);

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "getRestriction",
                    value: function() {
                        return this._restriction
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = new t({
                            isDifficult: e.isDifficult(),
                            isAllowed: e.isAllowedModality(),
                            isBlocked: e.isBlockedModality(),
                            isTollFree: e.isTollFreeModality()
                        });
                        return n._restriction = e,
                            n
                    }
                }]),
                t
        }(Backbone.Model),
        g = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "tr"
                    }
                }, {
                    key: "className",
                    value: function() {
                        var e = ["restriction-list-item"];
                        return this.model.attributes.isDifficult && e.push("restriction-list-item-difficult"),
                            this.model.attributes.isAllowed && e.push("restriction-list-item-allowed"),
                            this.model.attributes.isBlocked && e.push("restriction-list-item-blocked"),
                            e.join(" ")
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click ": "item:edit",
                            "click .do-edit": "item:edit",
                            "click .do-delete": "item:delete",
                            "click .do-applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {}
                        };
                        this._subscriptions = e.subscriptions
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$(".badge-tooltip, .apply-to-all-tooltip").tooltip()
                    }
                }, {
                    key: "_formatWeekdays",
                    value: function() {
                        return new l.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatWeekdays()
                    }
                }, {
                    key: "_formatTime",
                    value: function() {
                        return new l.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatHours()
                    }
                }, {
                    key: "_formatDriveProfile",
                    value: function(e) {
                        var t = "",
                            n = e.isAllVehicles() ? I18n.t("restrictions.editing.driving.all_vehicles") : this._formatVehicleTypes(e.getVehicleTypes()),
                            i = e.getNumPassengers();
                        if (t = i > 0 ? n + " (+" + i + ")" : n,
                            e.hasSubscriptions()) {
                            var r = e.getSubscriptions().map(this._formatSubscription, this);
                            t = t + " " + I18n.t("restrictions.editing.driving.prepositions.with") + " " + r
                        }
                        return t
                    }
                }, {
                    key: "_formatSubscription",
                    value: function(e) {
                        return this._subscriptions.hasOwnProperty(e) ? this._subscriptions[e] : e
                    }
                }, {
                    key: "_formatSummary",
                    value: function() {
                        var e = this,
                            t = this.getRestriction(),
                            n = void 0;
                        return t.isDifficult() ? new l.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatDateRange() : (n = t.isBlockedModality() ? t.getDriveProfileList(u.RESTRICTION_TYPE.BLOCKED) : t.getDriveProfileList(u.RESTRICTION_TYPE.FREE),
                            _.isEmpty(n) ? I18n.t("restrictions.editing.driving.all_vehicles") : n.getDriveProfiles().map(function(t) {
                                return e._formatDriveProfile(t)
                            }).join(", "))
                    }
                }, {
                    key: "_formatVehicleTypes",
                    value: function(e) {
                        var t = _.invert(d.VEHICLE_TYPES);
                        return e.map(function(e) {
                            return I18n.t("restrictions.vehicle_types." + t[e])
                        }).join(", ")
                    }
                }, {
                    key: "_formatLane",
                    value: function() {
                        var e = this.getRestriction();
                        if (e instanceof h.default) {
                            var t = e.getDisposition(),
                                n = _.invert(c.RESTRICTION_SEGMENT_DISPOSITION)[t];
                            return I18n.t("restrictions.summary.disposition." + n)
                        }
                        return ""
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.options.canEditRestrictions && this.getRestriction().isEditable(),
                            t = e && this.options.canApplyToAll;
                        return {
                            laneStr: this._formatLane(),
                            daysStr: this._formatWeekdays(),
                            timeStr: this._formatTime(),
                            summaryStr: this._formatSummary(),
                            canModifyRestriction: e,
                            canApplyToAll: t
                        }
                    }
                }, {
                    key: "getRestriction",
                    value: function() {
                        return this.model.getRestriction()
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this.model.getRestriction().getTimeFrame()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function() {
                        return this.model.getRestriction().getDriveProfileList()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_list_item"
                    }
                }]),
                t
        }(Marionette.View),
        v = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "tbody"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return g
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "item:edit": "item:edit",
                            "item:delete": "item:delete",
                            "item:applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            canApplyToAll: this._canApplyToAll,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._subscriptions
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restrictions: [],
                            canApplyToAll: !1,
                            canEditRestrictions: !1,
                            subscriptions: {}
                        };
                        this._canEditRestrictions = e.canEditRestrictions,
                            this._canApplyToAll = e.canApplyToAll,
                            this._subscriptions = e.subscriptions,
                            this.collection = new Backbone.Collection(e.restrictions.map(function(e) {
                                return p.for(e)
                            }))
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.BIG_TOOLTIP_VERT_PLACEMENTS = t.BIG_TOOLTIP_HORIZ_PLACEMENTS = void 0;
    var i = d(n(53)),
        r = d(n(6)),
        s = d(n(2)),
        a = d(n(0)),
        o = d(n(1)),
        l = d(n(3)),
        u = d(n(4));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = t.BIG_TOOLTIP_HORIZ_PLACEMENTS = {
            LEFT: "left",
            RIGHT: "right",
            MIDDLE: "middle"
        },
        h = t.BIG_TOOLTIP_VERT_PLACEMENTS = {
            TOP: "top",
            BOTTOM: "bottom"
        },
        f = function(e) {
            function t(e) {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).call(this, (0,
                        r.default)({}, e, {
                        parentEl: null,
                        el: "#big-tooltip-region"
                    })))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "onShow",
                    value: function(e, t, n) {
                        var r = this,
                            s = n.screenPosition,
                            a = n.placements;
                        this.$el.css({
                                display: "block",
                                top: s.top,
                                left: s.left
                            }),
                            t.$el.removeClass((0,
                                i.default)(c).join(" ")),
                            t.$el.removeClass((0,
                                i.default)(h).join(" ")),
                            t.$el.addClass("big-tooltip"),
                            t.$el.addClass(a.join(" ")),
                            t.$el.on("mouseenter", function() {
                                return r.trigger("tooltip:mouseenter")
                            }),
                            t.$el.on("mouseleave", function(e) {
                                0 === t.$el.has(e.target).length ? r.trigger("tooltip:mouseleave") : e.stopPropagation()
                            })
                    }
                }, {
                    key: "onEmpty",
                    value: function(e, t) {
                        t.$el.off("mouseenter"),
                            t.$el.off("mouseleave"),
                            this.$el.css({
                                display: "none"
                            })
                    }
                }]),
                t
        }(Marionette.Region);
    t.default = f
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(0)),
        r = o(n(1)),
        s = o(n(34)),
        a = o(n(13));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t, n, r, s, a) {
            (0,
                i.default)(this, e),
            this._fromSegment = t,
                this._toSegment = n,
                this._node = r,
                this._turn = s,
                this._bigJunction = a,
                this._dataModel = this._fromSegment.model
        }
        return (0,
                r.default)(e, [{
                key: "equals",
                value: function(e) {
                    return this._turn.getFromVertex().equals(e._turn.getFromVertex()) && this._turn.getToVertex().equals(e._turn.getToVertex())
                }
            }, {
                key: "getAngle",
                value: function() {
                    return this._bigJunction.getAngleAtIntersection(this._toSegment.geometry)
                }
            }, {
                key: "getNode",
                value: function() {
                    return this._node
                }
            }, {
                key: "getFromSegment",
                value: function() {
                    return this._fromSegment
                }
            }, {
                key: "getToSegment",
                value: function() {
                    return this._toSegment
                }
            }, {
                key: "getTurn",
                value: function() {
                    return this._turn
                }
            }, {
                key: "getPoint",
                value: function() {
                    return this._bigJunction.getIntersectionPoint(this._toSegment.geometry)
                }
            }, {
                key: "getDistanceFromPoint",
                value: function() {
                    return 10
                }
            }, {
                key: "hasMultiplePaths",
                value: function() {
                    return this._bigJunction.getPossibleTurnsBetween(this._turn.getFromVertex(), this._turn.getToVertex()).length > 1
                }
            }, {
                key: "isEditable",
                value: function() {
                    return this._bigJunction.canEditTurns()
                }
            }, {
                key: "getSegmentPathGeometry",
                value: function() {
                    var e = this._getLineStrings(),
                        t = new OL.Geometry.LineString(_.last(e)),
                        n = a.default.splitLineStringWithPolygon(t, this._bigJunction.geometry);
                    return null != n && (e[e.length - 1] = n[0].components),
                        new OL.Geometry.LineString(Array.prototype.concat.apply([], e))
                }
            }, {
                key: "_getLineStrings",
                value: function() {
                    var e = this;
                    return this._getVertices().map(function(t) {
                        var n = e._dataModel.segments.getObjectById(t.getSegmentID()).geometry.clone().components;
                        return t.isForward() || n.reverse(),
                            n
                    })
                }
            }, {
                key: "_getVertices",
                value: function() {
                    var e = this,
                        t = this._dataModel.getRoadGraph(),
                        n = this._turn.getFromVertex();
                    return this._turn.getTurnData().getSegmentPath().map(function(i) {
                        var r = t.getVertexNodeID(n),
                            a = e._dataModel.nodes.getObjectById(r),
                            o = e._dataModel.segments.getObjectById(i),
                            l = s.default.for(o, a).getOpposite();
                        return n = l,
                            l
                    }).concat([this._turn.getToVertex()])
                }
            }, {
                key: "_getPossibleTurns",
                value: function() {
                    return this._bigJunction.getPossibleTurnsBetween(this._turn.getFromVertex(), this._turn.getToVertex())
                }
            }, {
                key: "isLockedByHigherRank",
                value: function() {
                    var e = this;
                    return this._turn.getTurnData().getSegmentPath().map(function(t) {
                        return e._dataModel.segments.getObjectById(t)
                    }).some(function(e) {
                        return e.isLockedByHigherRank()
                    })
                }
            }, {
                key: "getPossibleTurnAtOffset",
                value: function(e) {
                    var t = this._getPossibleTurns(),
                        n = this.getCurrentPossibleTurnIndex();
                    return (n += e) < 0 && (n += t.length),
                        t[n % t.length]
                }
            }, {
                key: "getPossibleTurnCount",
                value: function() {
                    return this._getPossibleTurns().length
                }
            }, {
                key: "getCurrentPossibleTurnIndex",
                value: function() {
                    var e = this,
                        t = this._getPossibleTurns();
                    return _.findIndex(t, function(t) {
                        return _.isEqual(t.getTurnData().getSegmentPath(), e._turn.getTurnData().getSegmentPath())
                    })
                }
            }, {
                key: "getNextPossibleTurn",
                value: function() {
                    return this.getPossibleTurnAtOffset(1)
                }
            }, {
                key: "getPrevPossibleTurn",
                value: function() {
                    return this.getPossibleTurnAtOffset(-1)
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = OpenLayers.Class(OpenLayers.Handler.Keyboard, {
        initialize: function(e, t, n) {
            OpenLayers.Handler.Keyboard.prototype.initialize.apply(this, arguments)
        },
        destroy: function() {
            OpenLayers.Handler.Keyboard.prototype.destroy.apply(this, arguments)
        },
        handleKeyEvent: function(e) {
            $(e.target).is(":input") || OpenLayers.Handler.Keyboard.prototype.handleKeyEvent.apply(this, arguments)
        },
        CLASS_NAME: "Waze.Handler.KeyboardShortcut"
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = {
        default: n(1250),
        __esModule: !0
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(157)),
        r = n(144),
        s = c(n(16)),
        a = c(n(1281)),
        o = c(n(1282)),
        l = c(n(1283)),
        u = c(n(1284)),
        d = c(n(1285));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = I18n.t("internal.wiki_best_practices_link"),
        f = I18n.t("internal.wiki_area_manager"),
        p = I18n.t("internal.wiki_country_manager"),
        g = I18n.t("internal.wiki_mentoring"),
        v = I18n.t("internal.wiki_rank_link"),
        m = I18n.t("internal.editing_local_forum_link"),
        y = {
            FLAGGED_USER: h,
            BLOCKED_USER: h,
            ACTIVATED_USER: h,
            WELCOME_NEW_EDITOR: m,
            WELCOME_TO_WME: h,
            SOON_TO_BE_UPGRADED: v,
            LEVEL_UPGRADE: v,
            LEVEL_UPGRADE_3: v,
            LEVEL_UPGRADE_4: v,
            LEVEL_UPGRADE_5: v
        },
        b = {
            MEET_FELLOW_EDITORS: m,
            LEVEL_UPGRADE_2: v,
            LEVEL_UPGRADE_3: f,
            LEVEL_UPGRADE_4: g,
            LEVEL_UPGRADE_5: p,
            MENTOR_FEEDBACK_REQUEST: I18n.t("internal.mentoring_feedback_url"),
            USER_FIRST_EDIT: h
        },
        w = {
            USER_FIRST_EDIT: m
        },
        k = {
            LEVEL_UPGRADE_2: a.default,
            LEVEL_UPGRADE_3: o.default,
            LEVEL_UPGRADE_4: l.default,
            LEVEL_UPGRADE_5: u.default,
            LEVEL_UPGRADE_6: d.default
        },
        E = i.default.extend({
            tagName: "div",
            template: "Waze/MapEditor/UI/Modules/Feed/templates/notification_detail",
            className: "notification-detail",
            triggers: {
                "click .next": "nextClicked"
            },
            initialize: function() {
                return this.model.on("destroy", this.destroy, this)
            },
            _onClickDelete: function() {
                return this.$el.addClass("deleting"),
                    this.model.trigger("delegate:delete")
            },
            serializeData: function() {
                return _.extend(i.default.prototype.serializeData.apply(this, arguments), {
                    hasNext: this.options.hasNext,
                    subject: this._getValueOrTemplate("subject"),
                    message: this._getValueOrTemplate("message"),
                    linkText: this._getValueOrTemplate("linkText"),
                    buttonText: this._getValueOrTemplate("buttonText"),
                    secondButtonText: this._getValueOrTemplate("secondButtonText"),
                    linkURL: this._getLinkURL(),
                    buttonURL: this._getButtonURL(),
                    secondButtonURL: this._getSecondButtonURL(),
                    imageURL: this._getImageURL()
                })
            },
            setMaxHeight: function(e) {
                return this.$el.css({
                    maxHeight: e
                })
            },
            _getLinkURL: function() {
                return this._getParamByTypeAndMap("linkURL", y)
            },
            _getButtonURL: function() {
                return this._getButtonUrlByButtonNameAndMap("buttonURL", b)
            },
            _getSecondButtonURL: function() {
                return this._getButtonUrlByButtonNameAndMap("secondButtonURL", w)
            },
            _getButtonUrlByButtonNameAndMap: function(e, t) {
                switch (this.model.get("type")) {
                    case r.NOTIFICATION_TYPES.MENTEE_CLICKED_LINK:
                    case r.NOTIFICATION_TYPES.MENTEE_RETURNED_TO_WME:
                        return this._buildProfileLink();
                    case r.NOTIFICATION_TYPES.MENTOR_ENCOURAGMENT:
                        return this._getStartMentoringLink();
                    default:
                        return this._getParamByTypeAndMap(e, t)
                }
            },
            _buildProfileLink: function() {
                return s.default.userProfileLink({
                    userName: this.model.attributes.parameters.username
                })
            },
            _getStartMentoringLink: function() {
                return s.default.userProfileLink({
                    userName: this.options.user.userName
                }) + "#startMentoring"
            },
            _getImageURL: function() {
                return this._getParamByTypeAndMap("imageURL", k)
            },
            _getParamByTypeAndMap: function(e, t) {
                var n = this.model.getParameter(e);
                return n || t[this.model.get("type")]
            }
        });
    t.default = E,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(157),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CompositeView.extend({
        className: "feed-group",
        template: "Waze/MapEditor/UI/Modules/Feed/templates/feed_group",
        childView: s.default,
        childViewContainer: ".feed-list",
        childViewEventPrefix: "notifications",
        collapseItemsMessage: "feed.notifications.collapsed_message",
        events: {
            "click .toggle": "toggleGrouping"
        },
        bindings: {
            ":el": {
                classes: {
                    grouped: "grouped",
                    groupable: {
                        observe: "length",
                        onGet: function(e) {
                            return e > 3
                        }
                    }
                }
            },
            ".toggle": {
                observe: "length",
                visible: function(e) {
                    return e > 3
                }
            },
            ".counter": {
                observe: "length",
                onGet: function(e) {
                    return I18n.t(this.collapseItemsMessage, {
                        count: e - 1
                    })
                }
            }
        },
        initialize: function() {
            var e = this;
            return this.model = new Backbone.Model({
                    length: 0,
                    grouped: !1
                }),
                this.collection.on("reset sync", function() {
                    var t = e.collection.length;
                    return e.model.set({
                        length: t,
                        grouped: t > 3
                    })
                }),
                this.collection.on("reset add remove", function() {
                    return e.model.set({
                        length: e.collection.length
                    })
                }),
                this.collection.on("remove", function() {
                    if (e.collection.length <= 3)
                        return e.model.set({
                            grouped: !1
                        })
                })
        },
        onRender: function() {
            return this.stickit()
        },
        toggleGrouping: function() {
            return this.model.set({
                grouped: !this.model.get("grouped")
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend(),
        r = Backbone.Collection.extend({
            model: i,
            removeEmpty: function() {
                return this.remove(this.where({
                        name: ""
                    }), {
                        silent: !0
                    }),
                    this
            }
        });
    t.Item = i,
        t.Collection = r
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.Behavior.extend({
        _lastTabId: null,
        events: {
            "show.bs.tab a[data-toggle=tab]": "_onTabShown"
        },
        _onTabShown: function(e) {
            this._lastTabId = $(e.target).attr("href")
        },
        _restoreLastTab: function() {
            if (null !== this._lastTabId)
                return this.$("a[href='" + this._lastTabId + "']").tab("show")
        },
        onRender: function() {
            return this._restoreLastTab()
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "templates/venue/venue-edit-more-info",
        serializeData: function() {
            return {
                landmark: this.model,
                serviceTypes: this.options.serviceTypes,
                serviceSet: this.options.serviceSet
            }
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(10)),
        r = h(n(2)),
        s = h(n(0)),
        a = h(n(1)),
        o = h(n(3)),
        l = h(n(4)),
        u = h(n(1329)),
        d = h(n(186)),
        c = h(n(407));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "defaults",
                    get: function() {
                        return {
                            loading: !1,
                            showHistory: !1,
                            hasMore: !1,
                            isEmpty: !0,
                            hasError: !1
                        }
                    }
                }]),
                t
        }(Backbone.Model),
        p = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            txRegion: ".transactions"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .toggleHistory": "_toggleHistory",
                            "click .loadMoreHistory": "_loadMoreHistory"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".showHistory": {
                                observe: "showHistory",
                                visible: _.negate(_.identity)
                            },
                            ".hideHistory": {
                                observe: "showHistory",
                                visible: !0
                            },
                            ".historyContent": {
                                observe: "showHistory",
                                visible: !0
                            },
                            ".loadingHistory": {
                                observe: "loading",
                                visible: !0
                            },
                            ".transactions": {
                                observe: "isEmpty",
                                visible: _.negate(_.identity)
                            },
                            ".historyEmpty": {
                                observe: ["isEmpty", "hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            i.default)(e, 3),
                                        n = t[0],
                                        r = t[1],
                                        s = t[2];
                                    return n && !r & !s
                                }
                            },
                            ".historyError": {
                                observe: ["hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            i.default)(e, 2),
                                        n = t[0];
                                    return !t[1] && n
                                }
                            },
                            ".loadMoreContainer": {
                                observe: ["hasMore", "hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            i.default)(e, 3),
                                        n = t[0],
                                        r = t[1];
                                    return !t[2] && n && !r
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e.model;
                        this._map = e.map,
                            this._objectType = t.type,
                            this._objectID = t.getID(),
                            this._descartes = new d.default,
                            this._historyDataModel = new c.default,
                            this._nextTransaction = null,
                            this._historyLoaded = !1,
                            this._viewModel = new f,
                            this._transactionsView = new u.default({
                                map: this._map,
                                historyDataModel: this._historyDataModel,
                                objectType: this._objectType,
                                objectID: this._objectID
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.getRegion("txRegion").show(this._transactionsView),
                            this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onHistorySuccess",
                    value: function(e) {
                        this._historyDataModel.mergeObjects(new OL.Bounds, e, !0),
                            this._nextTransaction = e.transactions.nextTransaction,
                            this._transactionsView.collection.add(e.transactions.objects),
                            this._viewModel.set({
                                hasMore: null != this._nextTransaction,
                                isEmpty: 0 === this._transactionsView.collection.length
                            })
                    }
                }, {
                    key: "_onHistoryFail",
                    value: function() {
                        this._viewModel.set("hasError", !0)
                    }
                }, {
                    key: "_toggleLoading",
                    value: function(e) {
                        this._viewModel.set("loading", e)
                    }
                }, {
                    key: "_toggleHistory",
                    value: function() {
                        var e = this,
                            t = this._viewModel.attributes.showHistory;
                        t = !t,
                            this._viewModel.set("showHistory", t),
                            t && !this._historyLoaded && (W.Report.elementHistoryAction("show", this._objectType),
                                this._fetchHistory().then(function() {
                                    return e._historyLoaded = !0
                                }))
                    }
                }, {
                    key: "_fetchHistory",
                    value: function(e) {
                        var t = this;
                        return this._toggleLoading(!0),
                            this._viewModel.set("hasError", !1),
                            this._descartes.getElementHistory(this._objectType, this._objectID, e).then(this._onHistorySuccess.bind(this), this._onHistoryFail.bind(this)).then(function() {
                                t._toggleLoading(!1)
                            })
                    }
                }, {
                    key: "_loadMoreHistory",
                    value: function() {
                        var e = this;
                        W.Report.elementHistoryAction("load_more", this._objectType),
                            this._fetchHistory(this._nextTransaction).then(function() {
                                null == e._nextTransaction && W.Report.elementHistoryAction("load_all", e._objectType)
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ElementHistory/templates/history_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(13)),
        u = d(n(211));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "mouseenter .ca-geometry .ca-value-old": this._showOldGeometry,
                        "mouseenter .ca-geometry .ca-value-new": this._showNewGeometry,
                        "mouseleave .ca-visual .ca-value": this._destroyDrawingContext
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    this._map = this.options.map,
                        this._historyChangesBuilder = this.options.historyChangesBuilder,
                        this._drawingContext = null,
                        this._changedAttributes = this._buildChanges()
                }
            }, {
                key: "onDestroy",
                value: function() {
                    this._destroyDrawingContext()
                }
            }, {
                key: "getChangedAttributesNames",
                value: function() {
                    return this._changedAttributes.map(function(e) {
                        return e.displayName
                    })
                }
            }, {
                key: "serializeData",
                value: function() {
                    return {
                        changedAttributes: this._changedAttributes
                    }
                }
            }, {
                key: "_buildChanges",
                value: function() {
                    var e = this.model.attributes,
                        t = e.objectType,
                        n = e.newValue,
                        i = e.oldValue;
                    return this._historyChangesBuilder.buildChanges(t, n, i)
                }
            }, {
                key: "_destroyDrawingContext",
                value: function() {
                    null != this._drawingContext && (this._drawingContext.destroy(),
                        this._drawingContext = null)
                }
            }, {
                key: "_drawGeometry",
                value: function(e) {
                    var t = l.default.parse(e);
                    this._getDrawingContext().addFeatures([new OL.Feature.Vector(t.clone())])
                }
            }, {
                key: "_showOldGeometry",
                value: function() {
                    this._drawGeometry(this.model.attributes.oldValue.geometry)
                }
            }, {
                key: "_showNewGeometry",
                value: function() {
                    this._drawGeometry(this.model.attributes.newValue.geometry)
                }
            }, {
                key: "_getDrawingContext",
                value: function() {
                    return null == this._drawingContext && (this._drawingContext = this._map.getDrawingContext(),
                            this._drawingContext.setStyleMap(u.default),
                            this._drawingContext.moveLayerToTop()),
                        this._drawingContext
                }
            }, {
                key: "tagName",
                get: function() {
                    return "ul"
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_main"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.NAVIGATION_POINT_TYPE = t.Decorator = void 0;
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = {
            ENTRY: "entry",
            EXIT: "exit",
            BOTH: "both"
        },
        o = function() {
            function e(t, n, r) {
                (0,
                    i.default)(this, e),
                this._navigationPoint = t,
                    this._landmark = n,
                    this._index = r,
                    this._landmarkCentroid = null
            }
            return (0,
                    r.default)(e, [{
                    key: "getNavigationPoint",
                    value: function() {
                        return this._navigationPoint
                    }
                }, {
                    key: "getType",
                    value: function() {
                        var e = this._navigationPoint.getEntry(),
                            t = this._navigationPoint.getExit();
                        return e && t ? a.BOTH : e ? a.ENTRY : a.EXIT
                    }
                }, {
                    key: "isLocatedAtCentroid",
                    value: function() {
                        return this._navigationPoint.getPoint().equals(this.getLandmarkCentroid())
                    }
                }, {
                    key: "getIndex",
                    value: function() {
                        return this._index
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._landmark.arePropertiesEditable()
                    }
                }, {
                    key: "getArrowIconClass",
                    value: function() {
                        var e = this.getType();
                        return e === a.BOTH ? "waze-icon-full-arrow-two-sided" : e === a.ENTRY ? "waze-icon-full-arrow-right" : "waze-icon-full-arrow-left"
                    }
                }, {
                    key: "getLandmarkCentroid",
                    value: function() {
                        return null === this._landmarkCentroid && (this._landmarkCentroid = this._landmark.attributes.geometry.getCentroid()),
                            this._landmarkCentroid
                    }
                }, {
                    key: "getName",
                    value: function() {
                        return this._navigationPoint.getName().length > 0 ? this._navigationPoint.getName() : I18n.t("edit.landmark.navigation_point.no_name")
                    }
                }, {
                    key: "getLandmarkGeometry",
                    value: function() {
                        return this._landmark.attributes.geometry
                    }
                }]),
                e
        }();
    t.Decorator = o,
        t.NAVIGATION_POINT_TYPE = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(53)),
        r = c(n(6)),
        s = c(n(93)),
        a = c(n(1343)),
        o = c(n(404)),
        l = c(n(1345)),
        u = c(n(1347)),
        d = n(110);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = Marionette.Object.extend({
        compositeSegment: null,
        initialize: function(e) {
            this.region = e.region,
                this.pannable = e.pannable,
                this.listViewConfig = e.listViewConfig,
                this.editViewConfig = e.editViewConfig,
                this.allClosures = e.allClosures,
                this.compositeSegment = e.compositeSegment,
                this.segments = this.compositeSegment.children.concat(),
                this.dataModel = e.dataModel,
                this._reverseSegments = _.clone(this.compositeSegment.reverseSegments)
        },
        showClosures: function() {
            var e = this,
                t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = a.default.getSharedClosures(this.segments, this._reverseSegments, this.allClosures),
                i = (0,
                    r.default)({
                    dataModel: this.dataModel,
                    collection: n,
                    showActivateRepoMessage: !this.options.repoActive,
                    showSaveMessage: !this.options.canSaveClosures,
                    lockLevel: this._getClosureLockLevel(),
                    canEdit: this._areClosuresEditable(),
                    canAdd: this.options.canAdd
                }, this.listViewConfig, t),
                s = new l.default(i);
            s.on("add", function() {
                    return e.newClosure()
                }),
                s.on("edit", function(t) {
                    return e.editClosure(t)
                }),
                s.on("delete", function(t) {
                    return e.deleteClosure(t)
                }),
                s.on("applyToAll", function(t) {
                    return e.applyClosureToAllSegments(t)
                }),
                s.on("locate", function(t) {
                    var n = _.first(t.attributes.segments).geometry.getBounds().getCenterLonLat();
                    return e.pannable.panTo(n)
                }),
                this._show(s)
        },
        _areClosuresEditable: function() {
            return this.compositeSegment.canEditClosures() && this.options.repoActive && this.options.canSaveClosures
        },
        _getClosureLockLevel: function() {
            var e = 0;
            return this.compositeSegment.children.forEach(function(t) {
                    var n = t.getAddress();
                    n && n.getCountry() && (e = Math.max(e, t.attributes.lockRank, n.getCountry().allowRoadClosureRank))
                }),
                e
        },
        newClosure: function() {
            var e = this,
                t = this.createSharedClosure();
            this._createEditView(t, {
                newClosure: !0
            }).on("save", function() {
                e.saveClosure(t, !0)
            })
        },
        editClosure: function(e) {
            var t = this;
            this._createEditView(e).on("save", function() {
                t.saveClosure(e, !1)
            })
        },
        _createEditView: function(e) {
            var t = this,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            _.defaults(n, {
                    newClosure: !1
                }),
                _.extend(n, this.editViewConfig),
                n.model = e,
                n.availableEvents = this.dataModel.majorTrafficEvents.getObjectArray();
            var i = new u.default(n);
            return i.on("editCancelled", function() {
                    return t.showClosures()
                }),
                this._show(i),
                i
        },
        applyClosureToAllSegments: function(e) {
            var t = o.default.applyToAllSegments(e, this.segments, this._reverseSegments);
            return this._runAction(t, {
                loadingMessage: I18n.t("closures.loading.apply_to_all"),
                successMessage: I18n.t("closures.success.apply_to_all")
            })
        },
        _show: function(e) {
            this.view = e,
                this.region && this.region.show(this.view)
        },
        deleteClosure: function(e) {
            var t = void 0;
            if (t = e.isPresent("reason") ? I18n.t("closures.delete_confirm", {
                    info: e.get("reason")
                }) : I18n.t("closures.delete_confirm_no_reason"),
                window.confirm(t)) {
                var n = o.default.delete(e);
                return this._runAction(n, {
                    loadingMessage: I18n.t("closures.loading.delete"),
                    successMessage: I18n.t("closures.success.delete")
                })
            }
        },
        saveNewClosure: function(e) {
            var t = o.default.add(e);
            return this._runAction(t, {
                loadingMessage: I18n.t("closures.loading.add"),
                successMessage: I18n.t("closures.success.add")
            })
        },
        saveExistingClosure: function(e) {
            var t = o.default.update(e);
            return this._runAction(t, {
                loadingMessage: I18n.t("closures.loading.update"),
                successMessage: I18n.t("closures.success.update")
            })
        },
        saveClosure: function(e, t) {
            this._confirmPermanent(e) && (t ? this.saveNewClosure(e) : this.saveExistingClosure(e))
        },
        _confirmPermanent: function(e) {
            if (e.attributes.permanent) {
                var t = I18n.t("closures.permanent_confirm");
                return window.confirm(t)
            }
            return !0
        },
        _runAction: function(e) {
            var t = this,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            return this.view.message.showLoading(n.loadingMessage),
                this._disableControls(),
                e.doAction(),
                n.actions = [e],
                W.controller.save(n).then(function(i) {
                    var r = !1;
                    return i.unsavedFeatures && (r = !_.isEmpty(i.unsavedFeatures.roadClosures)),
                        r ? t._handlePartialSuccess(i.unsavedFeatures.roadClosures, e) : t.showClosures({
                            successMessage: n.successMessage
                        })
                }).catch(function(n) {
                    if (n instanceof d.SaveError)
                        return t._onError(n.errors, e);
                    throw n
                }).finally(function() {
                    return t._enableControls()
                })
        },
        _enableControls: function() {
            return this._toggleControls(!1)
        },
        _disableControls: function() {
            return this._toggleControls(!0)
        },
        _toggleControls: function(e) {
            this.region && this.region.$el.find("a, .btn, button, input, textarea, select").toggleClass("disabled", e)
        },
        _handlePartialSuccess: function(e, t) {
            this._undoFailedActions(e, t);
            var n = (0,
                    i.default)(e).map(function(e) {
                    return e.errorList
                }),
                r = _.flatten(n.map(function(e) {
                    return e.map(function(e) {
                        return e.details
                    })
                })),
                s = I18n.t("closures.partial_error") + ": " + r.join(",\n");
            return this.showClosures({
                errorMessage: s
            })
        },
        _undoFailedActions: function(e, t) {
            if (null != t.subActions)
                for (var n = 0; n < t.subActions.length; n++) {
                    var i = t.subActions[n];
                    if (null != i.subActions)
                        this._undoFailedActions(e, i);
                    else if (null != i.closure) {
                        e[i.closure.getID()] && i.undoAction()
                    }
                }
        },
        _onError: function(e, t) {
            var n = e[0];
            t.undoAction();
            var i = I18n.t("save.error_types"),
                r = Number(n.get("code")),
                s = i[r] && i[r].title || n.get("details");
            return this.view.message.showError(s)
        },
        createSharedClosure: function() {
            var e = this.segments.concat(),
                t = this.compositeSegment.getAddress(),
                n = {
                    location: null == t || t.isEmpty() ? "" : t.getStreetName() + ", " + t.getCityName(),
                    segments: e,
                    reverseSegments: this._reverseSegments
                };
            return this.compositeSegment.mixed.direction || (n.direction = this.compositeSegment.attributes.direction),
                new s.default(n)
        }
    });
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(7)),
        r = o(n(25)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = {
            ERROR: "error",
            SUCCESS: "success",
            LOADING: "loading"
        },
        u = {
            CONTAINER: "closures-status-message",
            ICON: "closures-status-message-icon",
            ICON_BY_TYPE: {
                error: "fa fa-exclamation-circle icon-exclamation-sign",
                success: "fa fa-check icon-ok",
                loading: "icon-spinner icon-spin fa fa-spinner fa-spin"
            }
        },
        d = function() {
            function e(t, n) {
                (0,
                    s.default)(this, e),
                null == n && (n = {}),
                    this.options = n,
                    this.$el = $(t).addClass(u.CONTAINER),
                    null == this.options.showIcon && (this.options.showIcon = !0),
                    this.ui = {
                        text: $("<span>").appendTo(this.$el),
                        icon: null
                    }
            }
            return (0,
                    a.default)(e, [{
                    key: "showError",
                    value: function(e) {
                        this.show(e, l.ERROR)
                    }
                }, {
                    key: "showSuccess",
                    value: function(e) {
                        this.show(e, l.SUCCESS)
                    }
                }, {
                    key: "showLoading",
                    value: function(e) {
                        this.show(e, l.LOADING)
                    }
                }, {
                    key: "show",
                    value: function(e, t) {
                        this._setText(e),
                            this._setClass(t),
                            this.options.showIcon && this._setIcon(t),
                            this.$el.show()
                    }
                }, {
                    key: "_setText",
                    value: function(e) {
                        null == e && (e = ""),
                            e.htmlSafe ? this.ui.text.html(e) : this.ui.text.text(e)
                    }
                }, {
                    key: "_setClass",
                    value: function(e) {
                        var t = !0,
                            n = !1,
                            s = void 0;
                        try {
                            for (var a, o = (0,
                                    r.default)((0,
                                    i.default)(l)); !(t = (a = o.next()).done); t = !0) {
                                var u = a.value,
                                    d = l[u];
                                this.$el.toggleClass(d, d === e)
                            }
                        } catch (e) {
                            n = !0,
                                s = e
                        } finally {
                            try {
                                !t && o.return && o.return()
                            } finally {
                                if (n)
                                    throw s
                            }
                        }
                    }
                }, {
                    key: "_setIcon",
                    value: function(e) {
                        var t = u.ICON_BY_TYPE[e];
                        null != t ? this._showIcon(t) : null != this.ui.icon && this.ui.icon.hide()
                    }
                }, {
                    key: "_showIcon",
                    value: function(e) {
                        var t = u.ICON + " " + e;
                        null != this.ui.icon ? this.ui.icon.attr({
                            class: t
                        }) : this.ui.icon = $("<span>").addClass(t).prependTo(this.$el)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.$el.hide()
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
            SEGMENT: {
                canEditMTE: !0
            },
            MTE: {
                canEditMTE: !1
            }
        },
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
            SEGMENT: {
                showPartialClosuresHeader: !0,
                extendedChildViewOptions: {
                    allowApplyToAll: !0,
                    showLocateButton: !1,
                    showEventName: !0,
                    getDescription: function(e) {
                        return null
                    }
                }
            },
            MTE: {
                showPartialClosuresHeader: !1,
                extendedChildViewOptions: {
                    allowApplyToAll: !1,
                    showLocateButton: !0,
                    showEventName: !1,
                    getDescription: function(e) {
                        return e.get("location")
                    }
                }
            }
        },
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(10)),
        r = c(n(15)),
        s = c(n(2)),
        a = c(n(0)),
        o = c(n(3)),
        l = c(n(1)),
        u = c(n(4)),
        d = c(n(1362));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            var e;
            (0,
                a.default)(this, t);
            var n = (0,
                o.default)(this, (t.__proto__ || (0,
                s.default)(t)).apply(this, arguments));
            return n.ARROW_POINTS = (e = {
                        0: n._straightArrow.bind(n),
                        45: n._slightRightArrow.bind(n),
                        90: n._rightArrow.bind(n),
                        135: n._hardRightArrow.bind(n)
                    },
                    (0,
                        r.default)(e, -45, n._slightLeftArrow.bind(n)),
                    (0,
                        r.default)(e, -90, n._leftArrow.bind(n)),
                    (0,
                        r.default)(e, -135, n._hardLeftArrow.bind(n)),
                    e),
                n
        }
        return (0,
                u.default)(t, e),
            (0,
                l.default)(t, [{
                key: "className",
                value: function() {
                    var e = ["lane-arrow"];
                    return this.options.smallArrow ? e.push("small-arrow") : this._isComplete() || e.push("grey-arrow"),
                        e.join(" ")
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/lane_arrow"
                }
            }]),
            (0,
                l.default)(t, [{
                key: "bindings",
                value: function() {
                    return {
                        ".empty-badge": {
                            observe: "angles",
                            onGet: function(e) {
                                return 0 === e.length
                            },
                            visible: !0
                        }
                    }
                }
            }, {
                key: "_isComplete",
                value: function() {
                    return this.model.attributes.isComplete
                }
            }, {
                key: "_isAngleDrawable",
                value: function(e) {
                    return Boolean(this.ARROW_POINTS[e])
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit();
                    var e = this.model.attributes.angles;
                    if (e.length > 0) {
                        var t = (0,
                            d.default)(this.el).size(26, 38);
                        this._drawArrows(t, e),
                            this._alignArrows(t, e)
                    }
                }
            }, {
                key: "_drawArrows",
                value: function(e, t) {
                    var n = this;
                    t.forEach(function(i) {
                        if (n._isAngleDrawable(i)) {
                            var r = n.ARROW_POINTS[i](t),
                                s = r.finalPoint,
                                a = r.bendingPoint,
                                o = n._drawArrowLine(e, a, s);
                            n._drawArrowTip(o)
                        } else
                            console.error("Can't draw angle with value " + i)
                    })
                }
            }, {
                key: "_drawArrowLine",
                value: function(e, t, n) {
                    return e.polyline(_.compact([
                        [13, 30], t, n
                    ])).stroke({
                        width: 3,
                        linecap: "round",
                        linejoin: "round",
                        fill: "transparent"
                    }).addClass("arrow-line").fill("none")
                }
            }, {
                key: "_drawArrowTip",
                value: function(e) {
                    e.marker("end", 2, 2, function(e) {
                        e.polygon("0,0 0,2 2,1").addClass("arrow-tip").stroke({
                            linejoin: "round"
                        })
                    })
                }
            }, {
                key: "_alignArrows",
                value: function(e, t) {
                    var n = 0,
                        r = 0;
                    if (t.some(function(e) {
                            return 0 !== e
                        }) && (t.every(function(e) {
                            return e >= 0
                        }) ? n = -3 : t.every(function(e) {
                            return e <= 0
                        }) && (n = 3)),
                        this.options.smallArrow) {
                        var s = (0,
                            i.default)(t, 1)[0];
                        if (this.ARROW_POINTS[s])
                            r -= this.ARROW_POINTS[s](t).finalPoint[1] - 4
                    }
                    e.translate(n, r)
                }
            }, {
                key: "_straightArrow",
                value: function() {
                    return {
                        finalPoint: [13, 11],
                        bendingPoint: null
                    }
                }
            }, {
                key: "_slightRightArrow",
                value: function(e) {
                    return {
                        finalPoint: e.includes(0) ? [20, 13] : [21, 11],
                        bendingPoint: [13, 20]
                    }
                }
            }, {
                key: "_rightArrow",
                value: function() {
                    return {
                        finalPoint: [21, 19],
                        bendingPoint: [13, 19]
                    }
                }
            }, {
                key: "_hardRightArrow",
                value: function() {
                    return {
                        finalPoint: [21, 26],
                        bendingPoint: [13, 19]
                    }
                }
            }, {
                key: "_slightLeftArrow",
                value: function(e) {
                    return {
                        finalPoint: e.includes(0) ? [6, 13] : [5, 11],
                        bendingPoint: [13, 20]
                    }
                }
            }, {
                key: "_leftArrow",
                value: function() {
                    return {
                        finalPoint: [5, 19],
                        bendingPoint: [13, 19]
                    }
                }
            }, {
                key: "_hardLeftArrow",
                value: function() {
                    return {
                        finalPoint: [5, 26],
                        bendingPoint: [13, 19]
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(15)),
        s = u(n(0)),
        a = u(n(3)),
        o = u(n(1)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                s.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.mainAttribute = e.mainAttribute,
                n
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "bindings",
                value: function() {
                    var e = this;
                    return {
                        "input[type=checkbox]": {
                            observe: this.observeAttribute,
                            updateModel: "_confirmUpdate",
                            update: function(e, t, n, i) {
                                e.val(t)
                            },
                            onGet: function(t) {
                                return t.map(e._optionToValue.bind(e))
                            },
                            onSet: function(t) {
                                return Array.isArray(t) || (t = null === t ? [] : [t]),
                                    t.map(e._valueToOption.bind(e))
                            }
                        },
                        "input[type=radio]": {
                            observe: this.mainAttribute,
                            onGet: function(t) {
                                return e.optionsList.indexOf(t)
                            },
                            onSet: function(t) {
                                return e.optionsList[t]
                            }
                        }
                    }
                }
            }, {
                key: "modelEvents",
                value: function() {
                    var e, t = this.options.observeAttribute || "currentSelection",
                        n = this.options.mainAttribute;
                    return e = {},
                        (0,
                            r.default)(e, "change:" + t, "_onModelChange"),
                        (0,
                            r.default)(e, "change:" + n, "_onMainChange"),
                        e
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click button": "_onButtonClick"
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/main_selection_view"
                }
            }]),
            (0,
                o.default)(t, [{
                key: "getMainOption",
                value: function() {
                    return this.model.get(this.mainAttribute)
                }
            }, {
                key: "_onMainChange",
                value: function(e, t) {
                    var n = this.getSelected(); -
                    1 === n.indexOf(t) && (n.push(t),
                        this.setSelection(n))
                }
            }, {
                key: "_onModelChange",
                value: function(e, t) {
                    var n = this.getMainOption();
                    if (-1 === t.indexOf(n))
                        t.length > 0 ? this.model.set(this.mainAttribute, t[0]) : (this.model.set(this.observeAttribute, [""]),
                            this.model.set(this.mainAttribute, ""));
                    else if ("" === n && t.length > 1) {
                        var i = _.compact(t);
                        this.model.set(this.observeAttribute, i),
                            this.model.set(this.mainAttribute, i[0])
                    } else
                        "" !== n && t.indexOf("") > -1 && (t = _.without(t, ""),
                            this.model.set(this.observeAttribute, t));
                    this.trigger("selection:changed", this.getSelected())
                }
            }]),
            t
    }(u(n(162)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.LandmarkMerger = t.MAIN_CATEGORY = t.ADDRESS_FIELD = t.CUSTOM_DESCRIPTION = t.PARKING_FIELDS = t.VENUE_FIELDS = void 0;
    var i = c(n(63)),
        r = c(n(9)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(53)),
        l = c(n(16)),
        u = c(n(141)),
        d = n(90);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = {
            NAME: "name",
            ALIASES: "aliases",
            DESCRIPTION: "description",
            LOCK_RANK: "lockRank",
            BRAND: "brand",
            CATEGORIES: "categories",
            EXTERNAL_PROVIDER_IDS: "externalProviderIDs",
            OPENING_HOURS: "openingHours",
            URL: "url",
            PHONE: "phone",
            SERVICES: "services",
            IMAGES: "images"
        },
        f = {
            PARKING_TYPE: "parkingType",
            HAS_TBR: "hasTBR",
            CAN_EXIT_WHILE_CLOSED: "canExitWhileClosed",
            COST_TYPE: "costType",
            PAYMENT_TYPE: "paymentType",
            EXTIMATED_NUMBER_OF_SPOTS: "estimatedNumberOfSpots",
            LOT_TYPE: "lotType"
        },
        p = (0,
            o.default)(h),
        g = (0,
            o.default)(f),
        v = "CUSTOM_DESCRIPTION",
        m = "mainCategory",
        y = "address",
        b = function() {
            function e(t) {
                (0,
                    s.default)(this, e);
                var n = new u.default;
                this._defaultParkingAttributes = n.attributes,
                    this.venues = t.venues,
                    this.mainVenue = t.mainVenue,
                    this.dataModel = t.dataModel,
                    this.model = this._createModel(),
                    this.startModel = this._createModel()
            }
            return (0,
                    a.default)(e, [{
                    key: "_createModel",
                    value: function() {
                        var e = this,
                            t = {};
                        return [v, m, y].concat((0,
                                r.default)(p), (0,
                                r.default)(g)).forEach(function(n) {
                                t[n] = e.getPropertySuggestedValue(n)
                            }),
                            new Backbone.Model(t)
                    }
                }, {
                    key: "getModel",
                    value: function() {
                        return this.model
                    }
                }, {
                    key: "getPropertySuggestedValue",
                    value: function(e) {
                        switch (e) {
                            case v:
                                return "";
                            case m:
                                return this._getSuggestedProperties(h.CATEGORIES)[0];
                            case y:
                                return this._getSuggestedAddress();
                            case h.ALIASES:
                                return this._getSuggestedNames();
                            case h.CATEGORIES:
                            case h.SERVICES:
                                return this._getSuggestedProperties(e);
                            case h.EXTERNAL_PROVIDER_IDS:
                                return this._getSuggestedExternalProviderIds();
                            case h.OPENING_HOURS:
                                return this._getSuggestedOpeningHours();
                            case h.IMAGES:
                                return this._getSuggestedImages();
                            case f.HAS_TBR:
                            case f.CAN_EXIT_WHILE_CLOSED:
                            case f.PARKING_TYPE:
                            case f.COST_TYPE:
                            case f.PAYMENT_TYPE:
                            case f.EXTIMATED_NUMBER_OF_SPOTS:
                            case f.LOT_TYPE:
                                return this._getSuggestedParkingProperty(e);
                            default:
                                return this._getSuggestedProperty(e)
                        }
                    }
                }, {
                    key: "_getSuggestedProperty",
                    value: function(e) {
                        return this.mainVenue.attributes[e]
                    }
                }, {
                    key: "_getSuggestedNames",
                    value: function() {
                        var e = this.mainVenue,
                            t = e.attributes.name,
                            n = e.attributes.aliases;
                        return _.uniq([t].concat((0,
                            r.default)(n)))
                    }
                }, {
                    key: "_getSuggestedAddress",
                    value: function() {
                        return this.mainVenue.getAddress().format({
                            formatStreet: !0
                        })
                    }
                }, {
                    key: "_getAddressList",
                    value: function() {
                        return _.unique(this.venues.map(function(e) {
                            return e.getAddress().format({
                                formatStreet: !0
                            })
                        }))
                    }
                }, {
                    key: "_getSuggestedParkingProperty",
                    value: function(e) {
                        var t = this.mainVenue,
                            n = t && t.attributes.categoryAttributes;
                        return n && n.PARKING_LOT && n.PARKING_LOT[e] || this._defaultParkingAttributes[e]
                    }
                }, {
                    key: "_getSuggestedProperties",
                    value: function(e) {
                        return Array.isArray(this.mainVenue.attributes[e]) ? _.compact(this.mainVenue.attributes[e]) : []
                    }
                }, {
                    key: "_getSuggestedExternalProviderIds",
                    value: function() {
                        return this._getSuggestedProperties("externalProviderIDs").map(function(e) {
                            return "object" === (void 0 === e ? "undefined" : (0,
                                i.default)(e)) ? e.id || e.attributes.uuid : e
                        })
                    }
                }, {
                    key: "_getSuggestedImages",
                    value: function() {
                        return _.compact(this.mainVenue.attributes.images.filter(function(e) {
                            return e.attributes.approved
                        }).map(function(e) {
                            return e.attributes.id
                        }))
                    }
                }, {
                    key: "getPropertyOptions",
                    value: function(e, t) {
                        switch (e) {
                            case h.NAME:
                                return this._getNameList();
                            case y:
                                return this._getAddressList();
                            case m:
                                return this._createPropertyList(h.CATEGORIES, !1)[0];
                            case h.LOCK_RANK:
                                return this._getLockRankRange();
                            case h.EXTERNAL_PROVIDER_IDS:
                                return this._createProviderIdList();
                            case h.OPENING_HOURS:
                                return this._getOpeningHours();
                            case h.IMAGES:
                                return this._createImagesIdsList();
                            default:
                                return this._createPropertyList(e, t)
                        }
                    }
                }, {
                    key: "getParkingPropertyOptions",
                    value: function(e, t) {
                        return this._createParkingPropertyList(e, t)
                    }
                }, {
                    key: "_createPropertyList",
                    value: function(e, t) {
                        var n = [];
                        return this.venues.forEach(function(t) {
                                n.push(t.attributes[e])
                            }),
                            n = _.flatten(n),
                            n = _.uniq(n),
                            t || (n = _.compact(n)),
                            n
                    }
                }, {
                    key: "_createParkingPropertyList",
                    value: function(e, t) {
                        var n = this,
                            i = [];
                        return this.venues.forEach(function(t) {
                                var r = t.attributes.categoryAttributes;
                                r && r.PARKING_LOT ? i.push(r.PARKING_LOT[e] || n._defaultParkingAttributes[e]) : t === n.mainVenue && i.push(n._defaultParkingAttributes[e])
                            }),
                            i = _.flatten(i),
                            i = _.uniq(i),
                            t || (i = _.compact(i)),
                            i
                    }
                }, {
                    key: "createImagesList",
                    value: function() {
                        var e = [];
                        return this.venues.forEach(function(t) {
                                e.push(t.attributes.images)
                            }),
                            e = _.flatten(e),
                            _.compact(_.uniq(e))
                    }
                }, {
                    key: "_createImagesIdsList",
                    value: function() {
                        var e = this.createImagesList(h.IMAGES).filter(function(e) {
                            return e.attributes.approved
                        });
                        return _.compact(e.map(function(e) {
                            return e.attributes.id
                        }))
                    }
                }, {
                    key: "_getOpeningHours",
                    value: function() {
                        var e = this.venues.map(function(e) {
                            return e.getOpeningHours().map(l.default.formatOpeningHour)
                        });
                        return _.uniq(_.flatten(e))
                    }
                }, {
                    key: "_getSuggestedOpeningHours",
                    value: function() {
                        var e = this.mainVenue.getOpeningHours().map(l.default.formatOpeningHour);
                        return _.uniq(_.flatten(e))
                    }
                }, {
                    key: "_createProviderIdList",
                    value: function() {
                        var e = this.venues.map(function(e) {
                            return e.attributes.externalProviderIDs.map(function(e) {
                                return "object" === (void 0 === e ? "undefined" : (0,
                                    i.default)(e)) ? e.id || e.attributes.uuid : e
                            })
                        });
                        return _.compact(_.uniq(_.flatten(e)))
                    }
                }, {
                    key: "_getNameList",
                    value: function() {
                        var e = [];
                        return this.venues.forEach(function(t) {
                                e.push(t.attributes.name),
                                    e.push(t.attributes.aliases)
                            }),
                            e = _.flatten(e),
                            _.uniq(e)
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank();
                        return _.range(0, e + 1)
                    }
                }, {
                    key: "_getVenueAttribute",
                    value: function(e) {
                        var t = this.model;
                        switch (e) {
                            case h.CATEGORIES:
                                return [t.get(m)].concat(_.without(t.get(h.CATEGORIES), t.get(m)));
                            case h.ALIASES:
                                return _.without(t.get(h.ALIASES), t.get(h.NAME));
                            case h.DESCRIPTION:
                                return t.get(h.DESCRIPTION) === v ? t.get(v) : t.get(h.DESCRIPTION);
                            case h.EXTERNAL_PROVIDER_IDS:
                                return this._idsListToObjects(h.EXTERNAL_PROVIDER_IDS, t.get(h.EXTERNAL_PROVIDER_IDS));
                            case h.OPENING_HOURS:
                                return this._openingHoursToObjects(t.get(h.OPENING_HOURS));
                            case h.IMAGES:
                                return this._idsListToObjects(h.IMAGES, t.get(h.IMAGES));
                            default:
                                return t.get(e)
                        }
                    }
                }, {
                    key: "_getParkingAttribute",
                    value: function(e) {
                        return this.model.get(e)
                    }
                }, {
                    key: "getAttributeValue",
                    value: function(e) {
                        return p.indexOf(e) > -1 ? this._getVenueAttribute(e) : g.indexOf(e) > -1 ? this._getParkingAttribute(e) : void 0
                    }
                }, {
                    key: "_isAttributeChanged",
                    value: function(e) {
                        var t = this.model.get(e),
                            n = this.startModel.get(e);
                        switch (e) {
                            case h.CATEGORIES:
                                return !_.isEqual(n, t) || this.model.get(m) !== this.startModel.get(m);
                            default:
                                return !_.isEqual(n, t)
                        }
                    }
                }, {
                    key: "_idsListToObjects",
                    value: function(e, t) {
                        var n = this.venues.map(function(n) {
                            return n.attributes[e].map(function(e) {
                                if ("object" === (void 0 === e ? "undefined" : (0,
                                        i.default)(e))) {
                                    var n = e.id || e.attributes.uuid;
                                    if (t.indexOf(n) > -1)
                                        return e
                                }
                                return null
                            })
                        });
                        return _.uniq(_.compact(_.flatten(n)))
                    }
                }, {
                    key: "_openingHoursToObjects",
                    value: function(e) {
                        var t = [];
                        return this.venues.forEach(function(n) {
                                n.attributes.openingHours.length > 0 && n.getOpeningHours().models.forEach(function(n) {
                                    e.indexOf(l.default.formatOpeningHour(n)) > -1 && t.push(n)
                                })
                            }),
                            t = _.flatten(t),
                            (t = _.uniq(t, !1, function(e) {
                                return l.default.formatOpeningHour(e)
                            })).map(function(e) {
                                return e.toJSON()
                            })
                    }
                }, {
                    key: "_getAddressByAddressString",
                    value: function(e) {
                        return this.venues.map(function(e) {
                            return e.getAddress()
                        }).filter(function(t) {
                            return t.format({
                                formatStreet: !0
                            }) === e
                        })[0]
                    }
                }, {
                    key: "getNewAttributes",
                    value: function() {
                        var e = this,
                            t = {};
                        p.forEach(function(n) {
                            e._isAttributeChanged(n) && (t[n] = e.getAttributeValue(n))
                        });
                        var n = this.getAttributeValue(h.CATEGORIES);
                        if (n[0] === d.PARKING_LOT) {
                            t.categoryAttributes = {
                                PARKING_LOT: {}
                            };
                            var i = t.categoryAttributes.PARKING_LOT;
                            g.forEach(function(t) {
                                e._isAttributeChanged(t) && (i[t] = e.getAttributeValue(t))
                            })
                        }
                        return t.brand && -1 === n.indexOf(d.GAS_STATION) && delete t.brand,
                            this._handleAddressChange(t),
                            t.id = this.mainVenue.attributes.id,
                            t
                    }
                }, {
                    key: "_handleAddressChange",
                    value: function(e) {
                        var t = this.model.get(y),
                            n = this.startModel.get(y);
                        if (t !== n) {
                            var i = this._getAddressByAddressString(t),
                                r = this._getAddressByAddressString(n);
                            i.getStreet() !== r.getStreet() && (e.streetID = i.getStreet() ? i.getStreet().getID() : 0),
                                i.getHouseNumber() !== r.getHouseNumber() && (e.houseNumber = i.getHouseNumber())
                        }
                    }
                }, {
                    key: "getSourceVenues",
                    value: function() {
                        return _.without(this.venues, this.mainVenue)
                    }
                }, {
                    key: "getTargetVenue",
                    value: function() {
                        return this.mainVenue
                    }
                }]),
                e
        }();
    t.default = b,
        t.VENUE_FIELDS = h,
        t.PARKING_FIELDS = f,
        t.CUSTOM_DESCRIPTION = v,
        t.ADDRESS_FIELD = y,
        t.MAIN_CATEGORY = m,
        t.LandmarkMerger = b
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar",
        className: "toolbar",
        events: {
            "click .mode-item": "_onModeItemClick"
        },
        bindings: {
            ":el": {
                observe: "mode",
                update: function(e, t) {
                    return e.find(".mode-item").removeClass("active").filter("[data-mode='" + t + "']").addClass("active")
                }
            }
        },
        regions: {
            search: "#search",
            layerSwitcher: ".layer-switcher-container",
            toolbar: "#edit-buttons"
        },
        ui: {
            modeSwitcher: "#mode-switcher"
        },
        onRender: function() {
            this.stickit()
        },
        _onModeItemClick: function(e) {
            var t = $(e.target).data("mode");
            this.model.requestModeChange(t).catch(function(e) {
                alert(e)
            })
        },
        setHouseNumbersState: function(e) {
            this.ui.modeSwitcher.toggle(!e)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(2)),
        r = f(n(0)),
        s = f(n(1)),
        a = f(n(3)),
        o = f(n(4)),
        l = n(127),
        u = f(n(13)),
        d = n(30),
        c = f(n(1386)),
        h = f(n(1387));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = new RegExp(/^\s?(-?\d+(?:\.\d+)?)\s*[,\s]{1}\s*(-?\d+(?:\.\d+)?)\s*$/),
        g = [{
            test: function(e) {
                return null !== p.exec(e)
            },
            search: function(e) {
                var t = p.exec(e);
                this._goToResult(new Backbone.Model({
                        venue: {
                            location: {
                                x: t[1],
                                y: t[2]
                            }
                        }
                    })),
                    W.Report.searchAction("search", "custom_lonlat")
            }
        }],
        v = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            searchField: "input",
                            searchForm: "form"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            results: ".search-result-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".search-query": "searchQuery",
                            ".search-result-region": {
                                observe: "showResults",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "keydown .search-query": "_onKeyDown",
                            "blur .search-query": "_hideResultsList"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.map = e.map,
                            this.model = new Backbone.Model({
                                showResults: !1,
                                showRetrieveError: !1,
                                showNoResultsError: !1,
                                searchQuery: ""
                            }),
                            this.collection = new Backbone.Collection([]),
                            this._registerEvents()
                    }
                }, {
                    key: "_getCurrentSelectionIndex",
                    value: function() {
                        return this.collection && this.collection.length > 0 ? this.collection.findIndex(function(e) {
                            return e.get("selected")
                        }) : -1
                    }
                }, {
                    key: "_registerEvents",
                    value: function() {
                        var e = this;
                        this._getSearchLayer().events.on({
                                moveend: this._onMapMove,
                                scope: this
                            }),
                            W.accelerators.events.register("search", this, function() {
                                return e.ui.searchField.focus()
                            })
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        var t = !1;
                        switch (e.which) {
                            case 38:
                                this._moveUp(),
                                    t = !0;
                                break;
                            case 40:
                                this._moveDown(),
                                    t = !0;
                                break;
                            case 27:
                                this._hideResultsList();
                                break;
                            case 13:
                                e.preventDefault(),
                                    e.stopPropagation(),
                                    -1 === this._getCurrentSelectionIndex() ? this._doSearch(this.model.get("searchQuery")) : this._goToSelection()
                        }
                        this.model.get("showResults") && t && e.preventDefault()
                    }
                }, {
                    key: "_moveUp",
                    value: function() {
                        var e = this._getCurrentSelectionIndex();
                        --e < 0 && (e = this.collection.length - 1),
                            this._select(e)
                    }
                }, {
                    key: "_moveDown",
                    value: function() {
                        var e = this._getCurrentSelectionIndex();
                        ++e >= this.collection.length && (e = 0),
                            this._select(e)
                    }
                }, {
                    key: "_hideResultsList",
                    value: function() {
                        this.model.set("showResults", !1),
                            this._unselectAll()
                    }
                }, {
                    key: "_showResultsList",
                    value: function() {
                        var e = this;
                        this.showChildView("results", new Marionette.CollectionView({
                                collection: this.collection,
                                childView: c.default,
                                emptyView: h.default,
                                emptyViewOptions: function() {
                                    return {
                                        model: e.model
                                    }
                                },
                                onChildviewSelected: this._onChildViewSelected.bind(this)
                            })),
                            this.model.set("showResults", !0)
                    }
                }, {
                    key: "_unselectAll",
                    value: function() {
                        this.collection.forEach(function(e) {
                            e.set("selected", !1)
                        })
                    }
                }, {
                    key: "_select",
                    value: function(e) {
                        this._unselectAll(),
                            e >= 0 && e < this.collection.length && this.collection.at(e).set("selected", !0)
                    }
                }, {
                    key: "_unRegisterEvents",
                    value: function() {
                        this._getSearchLayer().events.un({
                            moveend: this._onMapMove,
                            scope: this
                        })
                    }
                }, {
                    key: "_getSearchLayer",
                    value: function() {
                        return this.map.getLayerByUniqueName(l.LAYER_UNIQUE_NAMES.SEARCH)
                    }
                }, {
                    key: "_doSearch",
                    value: function(e) {
                        this._parseCustomSearch(e) || this._serverRequest(e)
                    }
                }, {
                    key: "_parseCustomSearch",
                    value: function(e) {
                        for (var t = g, n = 0; n < t.length; n++) {
                            var i = t[n];
                            if (i.test.call(this, e))
                                return i.search.call(this, e),
                                    !0
                        }
                        return !1
                    }
                }, {
                    key: "_serverRequest",
                    value: function(e) {
                        var t = this,
                            n = this.map.getCenter().clone();
                        n = u.default.unproject(n);
                        var i = {
                            q: e,
                            max_distance_kms: W.Config.search.maxDistance,
                            lon: n.lon,
                            lat: n.lat,
                            format: "PROTO_JSON_FULL"
                        };
                        (0,
                            d.httpGet)(W.Config.search.server, i, {
                            dataType: "json"
                        }).then(function(e) {
                                t.collection.reset(e),
                                    t._showResultsList()
                            }).catch(function(e) {
                                t.collection.reset([]);
                                var n = 404 === e.status,
                                    i = !n;
                                t.model.set({
                                        showNoResultsError: n,
                                        showRetrieveError: i
                                    }),
                                    t._showResultsList()
                            }),
                            W.Report.searchAction("search", "server_request")
                    }
                }, {
                    key: "_onChildViewSelected",
                    value: function(e) {
                        this._goToResult(e),
                            W.Report.searchAction("result_click")
                    }
                }, {
                    key: "_goToSelection",
                    value: function() {
                        var e = this.collection.at(this._getCurrentSelectionIndex());
                        e && (this._goToResult(e),
                            W.Report.searchAction("result_enter"))
                    }
                }, {
                    key: "_onResultSelect",
                    value: function(e, t, n, i) {
                        this._goToResult(e)
                    }
                }, {
                    key: "_goToResult",
                    value: function(e) {
                        var t = e.get("venue"),
                            n = u.default.project(new OL.LonLat(t.location.x, t.location.y)),
                            i = new OL.Geometry.Point(n.lon, n.lat),
                            r = new OL.Feature.Vector(i),
                            s = this._getSearchLayer();
                        s.removeAllFeatures(),
                            this.map.setCenter(n, W.Config.search.resultZoom),
                            this.map.focus(),
                            s.addFeatures(r)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.map.setLayerVisibility(l.LAYER_UNIQUE_NAMES.SEARCH, !0),
                            this.stickit()
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.ui.searchField.removeAttr("disabled")
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.ui.searchField.attr("disabled", "disabled")
                    }
                }, {
                    key: "_onMapMove",
                    value: function(e) {
                        e.zoomChanged || this._getSearchLayer().removeAllFeatures()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._unRegisterEvents(),
                            this.map.setLayerVisibility(l.LAYER_UNIQUE_NAMES.SEARCH, !1)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/search"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(15)),
        r = a(n(1388)),
        s = a(n(1389));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.Object.extend({
        initialize: function(e) {
            this.map = e.map,
                this.actionManager = e.actionManager,
                this.togglers = e.togglerTree,
                this.controller = e.controller,
                this.layerSwitcherLayout = new r.default,
                this.state = new Backbone.Model,
                this.treeState = new Backbone.Model,
                this._readState(),
                this.listenTo(this.state, "change", this._onChange),
                this.listenTo(this.layerSwitcherLayout, "render", this._onRender)
        },
        _readState: function() {
            this.state.set(this.togglers.getState()),
                this.treeState.set(this.togglers.getTreeState())
        },
        _onRender: function() {
            this._initAccelerators(),
                this._renderLayerSwitcher()
        },
        destroy: function() {
            this._destroyAccelerators()
        },
        getLayout: function() {
            return this.layerSwitcherLayout
        },
        _renderLayerSwitcher: function() {
            this.layerSwitcherListView = new s.default({
                    state: this.state,
                    treeState: this.treeState,
                    map: this.map
                }),
                this.layerSwitcherLayout.showChildView("layersList", this.layerSwitcherListView)
        },
        _onChange: function() {
            this.togglers.setState(this.layerSwitcherListView.state.toJSON()),
                this.togglers.writeToLocalStorage(),
                this._updateApp()
        },
        _updateApp: function() {
            this.togglers.writeStateToApp({
                    map: this.map,
                    dataModel: W.model
                }),
                this.controller.updateModel(!0),
                this._readState()
        },
        _getLayerSwitcherAccelerators: function() {
            return _.values(W.accelerators.Actions).filter(function(e) {
                return null != e.toggler
            })
        },
        _initAccelerators: function() {
            var e = this;
            this._getLayerSwitcherAccelerators().forEach(function(t) {
                e._registerLayerAccelerator(t.name, t.toggler)
            })
        },
        _destroyAccelerators: function() {
            var e = this;
            this._getLayerSwitcherAccelerators().forEach(function(t) {
                e._unregisterLayerAccelerator(t.name, t.toggler)
            })
        },
        _registerLayerAccelerator: function(e, t) {
            W.accelerators.events.register(e, this, this._setLayerVisibility)
        },
        _unregisterLayerAccelerator: function(e, t) {
            W.accelerators.events.unregister(e, this, this._setLayerVisibility)
        },
        _setLayerVisibility: function(e) {
            var t = this.togglers.getState(),
                n = e.action.toggler;
            this.togglers.setState((0,
                    i.default)({}, n, !t[n])),
                this._updateApp()
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(3)),
        a = u(n(1)),
        o = u(n(4)),
        l = n(218);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.actionManager = e.actionManager,
                n._control = e.control,
                n._enableChangesLog = e.enableChangesLog,
                n._saveController = n._control.saveController,
                n._changesLogView = null,
                n.model = new Backbone.Model({
                    title: e.title,
                    hasErrors: !1,
                    success: !1,
                    failed: !1,
                    saving: !1,
                    enabled: !1,
                    unsavedActionsCounter: 0
                }),
                n._bindEvents(),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        click: "_save",
                        mouseenter: "_onMouseEnter",
                        mouseleave: "_onMouseLeave"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        changesLogRegion: ".changes-log-region"
                    }
                }
            }, {
                key: "className",
                value: function() {
                    return "toolbar-button waze-icon-save"
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ":el": {
                            classes: {
                                ItemDisabled: {
                                    observe: "enabled",
                                    onGet: _.negate(_.identity)
                                },
                                loading: {
                                    observe: "saving"
                                },
                                "has-error": {
                                    observe: "hasErrors"
                                },
                                success: {
                                    observe: "success"
                                }
                            }
                        },
                        ".counter": {
                            observe: "unsavedActionsCounter",
                            visible: !0,
                            updateView: !0
                        },
                        ".menu-title": "title"
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Toolbar/templates/save"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "_bindEvents",
                value: function() {
                    this._saveController && (this.listenTo(this._saveController, l.SAVE_EVENTS.SAVE_START, this._onSaveStarted),
                            this.listenTo(this._saveController, l.SAVE_EVENTS.SAVE_FAIL, this._onSaveFailed),
                            this.listenTo(this._saveController, l.SAVE_EVENTS.SAVE_SUCCESS, this._onSaveSuccess)),
                        this.actionManager.events.on({
                            scope: this,
                            afteraction: this._onActionChange,
                            afterundoaction: this._onActionChange,
                            afterclearactions: this._onActionChange
                        })
                }
            }, {
                key: "_onSaveStarted",
                value: function() {
                    this.model.set({
                        saving: !0,
                        success: !1
                    })
                }
            }, {
                key: "_onSaveFailed",
                value: function() {
                    var e = this;
                    this._updateHasErrors(),
                        this.model.set({
                            saving: !1,
                            failed: !0
                        }),
                        this._doAfterAnimation(function() {
                            e.model.set("failed", !1)
                        }),
                        this._showChangesLog()
                }
            }, {
                key: "_onSaveSuccess",
                value: function() {
                    var e = this;
                    this._updateHasErrors(),
                        this.model.set({
                            saving: !1,
                            success: !0
                        }),
                        this._doAfterAnimation(function() {
                            e.model.set("success", !1)
                        })
                }
            }, {
                key: "_doAfterAnimation",
                value: function(e) {
                    setTimeout(e, 1500)
                }
            }, {
                key: "_updateHasErrors",
                value: function() {
                    this._saveController && this.model.set("hasErrors", this._saveController.hasErrors())
                }
            }, {
                key: "_unbindEvents",
                value: function() {
                    this.actionManager.events.un({
                        scope: this,
                        afteraction: this._onActionChange,
                        afterundoaction: this._onActionChange,
                        afterclearactions: this._onActionChange
                    })
                }
            }, {
                key: "_save",
                value: function() {
                    this.model.get("enabled") && this._control.trigger()
                }
            }, {
                key: "_onActionChange",
                value: function() {
                    this._updateHasErrors(),
                        this._updateNumberOfActions(),
                        this._updateEnableDisableState()
                }
            }, {
                key: "_updateNumberOfActions",
                value: function() {
                    var e = this.actionManager.unsavedActionsNum();
                    this.model.set("unsavedActionsCounter", e)
                }
            }, {
                key: "_updateEnableDisableState",
                value: function() {
                    this.actionManager.canSave() ? this._enable() : this._disable()
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this.model)
                }
            }, {
                key: "_onMouseEnter",
                value: function() {
                    this._showChangesLog()
                }
            }, {
                key: "_showChangesLog",
                value: function() {
                    !this._changesLogView && this._enableChangesLog && this.actionManager.getActionsNum() > 0 && (this._destroyChangesLog(),
                        this._changesLogView = W.changesLogController.createChangesLogView(),
                        this.showChildView("changesLogRegion", this._changesLogView))
                }
            }, {
                key: "_onMouseLeave",
                value: function() {
                    this._destroyChangesLog()
                }
            }, {
                key: "_destroyChangesLog",
                value: function() {
                    this._changesLogView && (this._changesLogView.destroy(),
                        this._changesLogView = null)
                }
            }, {
                key: "onDestroy",
                value: function() {
                    this._unbindEvents()
                }
            }, {
                key: "_enable",
                value: function() {
                    this.model.set("enabled", !0)
                }
            }, {
                key: "_disable",
                value: function() {
                    this.model.set("enabled", !1)
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(48),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
        initialize: function(e) {
            OpenLayers.Control.prototype.initialize.apply(this, [e]),
                this.editingMediator = e.editingMediator,
                this.saveController = e.saveController,
                this.autoActivate = !1,
                W.accelerators.events.register("save", this, this._onSaveShortcut)
        },
        destroy: function() {
            W.accelerators.events.unregister("save", this, this._onSaveShortcut),
                OpenLayers.Control.prototype.destroy.apply(this)
        },
        _onSaveShortcut: function() {
            this.saveController && this.saveController.hasWarnings() ? this._save({
                ignoreWarnings: !0
            }) : this._save()
        },
        trigger: function() {
            this._save()
        },
        _save: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            this.enabled && this.editingMediator.get("editingEnabled") && this.saveController.save(e)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(11)),
        u = d(n(22));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e, n, s, o) {
            (0,
                r.default)(this, t);
            var l = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, o));
            return l.bigJunctionID = e,
                l.segments = n,
                l.action = s,
                l.connectedSegments = null,
                l
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this._updateConnectedSegments(this.segments, "from"),
                        t = this._updateConnectedSegments(this.segments, "to");
                    this.connectedSegments = e.concat(t)
                }
            }, {
                key: "_updateConnectedSegments",
                value: function(e, n) {
                    for (var i = [], r = 0; r < e.length; r++) {
                        var s = e[r],
                            a = s.attributes[n + "NodeID"],
                            o = s.getConnectedSegmentsByDirection(n);
                        i.concat(o);
                        for (var l = 0; l < o.length; l++) {
                            var d = o[l];
                            if (d.isDrivable()) {
                                var c = {},
                                    h = (d.attributes.fromNodeID === a ? "from" : "to") + "Crossroads",
                                    f = _.clone(d.attributes[h]);
                                t.ADD_JUNCTION_TO_SEGMENT === this.action ? _.contains(f, this.bigJunctionID) || f.push(this.bigJunctionID) : f = _.without(f, this.bigJunctionID),
                                    c[h] = f,
                                    this.doSubAction(new u.default(d, c, {
                                        dontSerialize: !0
                                    }))
                            }
                        }
                    }
                    return i
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.model.bigJunctions.getObjectById(this.bigJunctionID)]
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    var e = this.model.bigJunctions.getObjectById(this.bigJunctionID),
                        t = this.segments.map(function(e) {
                            return e.getUniqueID()
                        });
                    return e && t.push(e.getUniqueID()),
                        t
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.UpdateBigJunctionConnectedSegments")
                }
            }]),
            t
    }(l.default);
    _.extend(c, {
            ADD_JUNCTION_TO_SEGMENT: "add",
            REMOVE_JUNCTION_FROM_SEGMENT: "remove"
        }),
        t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1407),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Backbone.Collection.extend({
        model: s.default
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/loading-indicator",
        className: "loading-indicator",
        initialize: function() {
            return this.globalVent = this.options.globalVent,
                this.operations = [],
                this.globalVent.on("operationPending", this._onOperationPending, this),
                this.globalVent.on("operationDone", this._onOperationDone, this)
        },
        onDestroy: function() {
            return this.globalVent.off("operationPending", this._onOperationPending, this),
                this.globalVent.off("operationDone", this._onOperationDone, this)
        },
        _onOperationPending: function(e) {
            return this.operations.push(e.operation),
                this.render()
        },
        _onOperationDone: function(e) {
            return this.operations = _.without(this.operations, e.operation),
                this.render()
        },
        _hasOperations: function() {
            return this.operations.length > 0
        },
        serializeData: function() {
            var e = void 0;
            if (this._hasOperations()) {
                var t = _.last(this.operations);
                e = t.text || I18n.t(t.id)
            } else
                e = "";
            return {
                operationText: e
            }
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(89),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        className: "location-info",
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/location-info",
        bindings: {
            ".full-address": "fullAddress"
        },
        initialize: function() {
            this._dataModel = this.options.dataModel,
                this._map = this.options.map,
                this.model = new Backbone.Model({
                    fullAddress: ""
                }),
                this._dataModel.events.register("mergeend", this, this._update),
                this._dataModel.events.register("zoomend", this, this._update)
        },
        onDestroy: function() {
            this._dataModel.events.unregister("mergeend", this, this._update),
                this._dataModel.events.unregister("zoomend", this, this._update)
        },
        _update: function() {
            var e = this._getAddressFromTopCity() || this._getAddressFromMainCountry() || "";
            this.model.set({
                fullAddress: e
            })
        },
        _getAddressFromTopCity: function() {
            return this._shouldShowTopCity() ? s.default.fromCityID(this._dataModel.segments.topCityID, this._dataModel).format({
                formatStreet: !1
            }) : null
        },
        _getAddressFromMainCountry: function() {
            var e = this._dataModel.countries.top;
            return null === e ? null : e.name
        },
        _shouldShowTopCity: function() {
            return this._map.getZoom() >= W.Config.segments.minDisplayZoom && null !== this._dataModel.segments.topCityID
        },
        onRender: function() {
            this.stickit()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        HOVER_DELAY_MS: 200,
        tagName: "li",
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/item",
        events: {
            "mouseenter .area-manager-item": "_onAreaMouseEnter",
            "mouseleave .area-manager-item": "_onAreaMouseLeave"
        },
        triggers: {
            "click .area-manager-item": "onAreaClicked"
        },
        _hoverTimeoutId: null,
        _hovered: !1,
        _onAreaMouseEnter: function() {
            null == this._hoverTimeoutId && (this._hoverTimeoutId = window.setTimeout(this._onHoverTimeout.bind(this), this.HOVER_DELAY_MS))
        },
        _onAreaMouseLeave: function() {
            return this._clearHoverTimeout(),
                this._hovered = !1,
                this.trigger("onAreaMouseLeave", {
                    model: this.model
                })
        },
        _onHoverTimeout: function() {
            return this._hovered = !0,
                this.trigger("onAreaMouseEnter", {
                    model: this.model
                }),
                this._clearHoverTimeout()
        },
        _clearHoverTimeout: function() {
            this._hoverTimeoutId && window.clearTimeout(this._hoverTimeoutId),
                this._hoverTimeoutId = null
        },
        onBeforeDestroy: function() {
            return this._hovered && (this._hovered = !1,
                    this.trigger("onAreaMouseLeave", {
                        model: this.model
                    })),
                this._clearHoverTimeout()
        }
    });
    t.default = i,
        e.exports = t.default
}function(e, t, n) {
    n(761),
        e.exports = n(1439)
}, function(e, t, n) {
    "use strict";
    window.W = {
            Config: {
                api_base: "/Descartes/app",
                regions: {
                    il: {
                        api_base: "/il-Descartes/app",
                        search: {
                            server: "/il-SearchServer/mozi"
                        }
                    },
                    usa: {
                        api_base: "/Descartes/app",
                        search: {
                            server: "/SearchServer/mozi"
                        }
                    },
                    row: {
                        api_base: "/row-Descartes/app",
                        search: {
                            server: "/row-SearchServer/mozi"
                        }
                    }
                },
                paths: {
                    features: "Features",
                    issues: "Feed/Issues",
                    notifications: "Feed/Notifications",
                    auth: "Session",
                    problemDetails: "MapProblems/Details",
                    updateRequestSessions: "MapProblems/UpdateRequests",
                    updateRequestComments: "MapProblems/UpdateRequests/Comment",
                    updateRequestFollow: "MapProblems/UpdateRequests/Notification",
                    mapCommentConversation: "MapComments/Comment",
                    mapCommentFollow: "MapComments/Notification",
                    archive: "Archive/List",
                    archiveSessions: "Archive/SessionGPS",
                    houseNumbers: "HouseNumbers",
                    cityExists: "CityExistence",
                    mteDetails: "MajorTrafficEvents/Details",
                    mtePublish: "MajorTrafficEvents/Publish",
                    mteReady: "MajorTrafficEvents/Ready",
                    logger: "ErrorReport",
                    elementHistory: "ElementHistory",
                    configurationInfo: "info/config",
                    version: "info/version"
                },
                enabled_modules: ["Comments", "Cities"],
                units: {
                    lonLatPrecision: 5
                },
                week_days_order: [1, 2, 3, 4, 5, 6, 0],
                reporting: {
                    enable: !0
                },
                login: {
                    paths: {
                        get: "/login/get",
                        create: "/login/create",
                        dashboard: "/dashboard",
                        email_verification: "/UsersProfile/email/verify"
                    }
                },
                search: {
                    server: "/SearchServer/mozi",
                    resultZoom: 3,
                    options: {
                        origin: "editor"
                    }
                },
                places_api: {
                    url: {
                        autocomplete: "/maps/api/place/autocomplete/json",
                        details: "/maps/api/place/details/json"
                    }
                },
                mte: {
                    root_url: "/mte"
                },
                map: {
                    initialPosition: {
                        il: {
                            lon: 34.789,
                            lat: 32.086,
                            initialZoom: 1
                        },
                        usa: {
                            lon: -73.99078,
                            lat: 40.73565,
                            initialZoom: 0
                        },
                        row: {
                            lon: -.119,
                            lat: 51.524,
                            initialZoom: 0
                        }
                    },
                    projection: {
                        remote: "EPSG:4326",
                        local: "EPSG:900913"
                    }
                },
                tts: {
                    url: "https://ttsgw.world.waze.com/TTSGateway/Text2SpeechServlet",
                    default_locale: {
                        tts: "en-US",
                        locale: "en"
                    },
                    options: {
                        version: 6,
                        protocol: 2,
                        sessionid: 12345654321,
                        content_type: "audio/mpeg",
                        type: "street",
                        validate_data: "positive",
                        skipCache: !0,
                        lon: 0,
                        lat: 0
                    }
                },
                chat: {
                    enable: !0,
                    staffOnly: !1
                },
                segments: {
                    allTypes: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
                    minDisplayZoom: 2,
                    zoomToRoadType: {
                        0: [],
                        1: [],
                        2: [2, 3, 4, 6, 7, 15],
                        3: [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
                        4: -1,
                        5: -1,
                        6: -1,
                        7: -1,
                        8: -1,
                        9: -1,
                        10: -1
                    }
                },
                speed_limit: {
                    enable: !0
                },
                place_updates: {
                    focusZoom: 6
                },
                problems: {
                    maxDetailsZoom: 7,
                    minDetailsZoom: 5
                },
                houseNumbers: {
                    allowEditing: !0,
                    minEditZoom: 6
                },
                restrictions: {
                    allowEditing: !0
                },
                closures: {
                    minDisplayZoom: 0
                },
                cameras: {
                    minDisplayZoom: 3,
                    minDragZoom: 3
                },
                editable_areas: {
                    minDisplayZoom: 0
                },
                user_drive: {
                    gutterMinDisplayZoom: 6,
                    arrowsMinDisplayZoom: 5,
                    instructionsMinDisplayZoom: 5,
                    weightMinDisplayZoom: 5,
                    initialZoom: 7
                },
                user_editing_enabled: !0,
                big_junctions: {
                    minRank: 4,
                    enable: !0
                },
                venues: {
                    image_bucket_url: "https://venue-image.waze.com/",
                    zoomToSize: {
                        0: 1,
                        1: 2,
                        2: 3,
                        3: 3,
                        4: 3,
                        5: 4,
                        6: 4,
                        7: 4,
                        8: 4,
                        9: 4,
                        10: 4
                    },
                    categories: ["CAR_SERVICES", "TRANSPORTATION", "PROFESSIONAL_AND_PUBLIC", "SHOPPING_AND_SERVICES", "FOOD_AND_DRINK", "CULTURE_AND_ENTERTAINEMENT", "OTHER", "LODGING", "OUTDOORS", "NATURAL_FEATURES", "PARKING_LOT"],
                    subcategories: {
                        CAR_SERVICES: ["GAS_STATION", "GARAGE_AUTOMOTIVE_SHOP", "CAR_WASH", "CHARGING_STATION"],
                        PARKING_LOT: [],
                        TRANSPORTATION: ["AIRPORT", "BUS_STATION", "FERRY_PIER", "SEAPORT_MARINA_HARBOR", "SUBWAY_STATION", "TRAIN_STATION", "BRIDGE", "TUNNEL", "TAXI_STATION", "JUNCTION_INTERCHANGE", "REST_AREAS"],
                        PROFESSIONAL_AND_PUBLIC: ["COLLEGE_UNIVERSITY", "SCHOOL", "CONVENTIONS_EVENT_CENTER", "GOVERNMENT", "LIBRARY", "CITY_HALL", "ORGANIZATION_OR_ASSOCIATION", "PRISON_CORRECTIONAL_FACILITY", "COURTHOUSE", "CEMETERY", "FIRE_DEPARTMENT", "POLICE_STATION", "MILITARY", "HOSPITAL_URGENT_CARE", "DOCTOR_CLINIC", "OFFICES", "POST_OFFICE", "RELIGIOUS_CENTER", "KINDERGARDEN", "FACTORY_INDUSTRIAL", "EMBASSY_CONSULATE", "INFORMATION_POINT", "EMERGENCY_SHELTER", "TRASH_AND_RECYCLING_FACILITIES"],
                        SHOPPING_AND_SERVICES: ["ARTS_AND_CRAFTS", "BANK_FINANCIAL", "SPORTING_GOODS", "BOOKSTORE", "PHOTOGRAPHY", "CAR_DEALERSHIP", "FASHION_AND_CLOTHING", "CONVENIENCE_STORE", "PERSONAL_CARE", "DEPARTMENT_STORE", "PHARMACY", "ELECTRONICS", "FLOWERS", "FURNITURE_HOME_STORE", "GIFTS", "GYM_FITNESS", "SWIMMING_POOL", "HARDWARE_STORE", "MARKET", "SUPERMARKET_GROCERY", "JEWELRY", "LAUNDRY_DRY_CLEAN", "SHOPPING_CENTER", "MUSIC_STORE", "PET_STORE_VETERINARIAN_SERVICES", "TOY_STORE", "TRAVEL_AGENCY", "ATM", "CURRENCY_EXCHANGE", "CAR_RENTAL", "TELECOM"],
                        FOOD_AND_DRINK: ["RESTAURANT", "BAKERY", "DESSERT", "CAFE", "FAST_FOOD", "FOOD_COURT", "BAR", "ICE_CREAM"],
                        CULTURE_AND_ENTERTAINEMENT: ["ART_GALLERY", "CASINO", "CLUB", "TOURIST_ATTRACTION_HISTORIC_SITE", "MOVIE_THEATER", "MUSEUM", "MUSIC_VENUE", "PERFORMING_ARTS_VENUE", "GAME_CLUB", "STADIUM_ARENA", "THEME_PARK", "ZOO_AQUARIUM", "RACING_TRACK", "THEATER"],
                        OTHER: ["CONSTRUCTION_SITE"],
                        LODGING: ["HOTEL", "HOSTEL", "CAMPING_TRAILER_PARK", "COTTAGE_CABIN", "BED_AND_BREAKFAST"],
                        OUTDOORS: ["PARK", "PLAYGROUND", "BEACH", "SPORTS_COURT", "GOLF_COURSE", "PLAZA", "PROMENADE", "POOL", "SCENIC_LOOKOUT_VIEWPOINT", "SKI_AREA"],
                        NATURAL_FEATURES: ["ISLAND", "SEA_LAKE_POOL", "RIVER_STREAM", "FOREST_GROVE", "FARM", "CANAL", "SWAMP_MARSH", "DAM"]
                    }
                },
                marx: {
                    server: "https://marx-beta.waze.com:443"
                },
                openlayers: {
                    img_path: "images/"
                },
                log: {
                    enable: !1
                },
                user_profile: {
                    enable: !0,
                    url: "https://www.waze.com/user/editor/"
                },
                area_manager_widget: {
                    enable: !0
                },
                livemap: {
                    zoom_offset: 12,
                    max_zoom: 17,
                    url: "/livemap"
                },
                advanced_tools: {
                    minRank: 3
                }
            },
            version: "v2.21-58-g3df942a\n",
            apiKeys: {
                googleMapsApiKey: "AIzaSyDf-q2MCay0AE7RF6oIMrDPrjBwxVtsUuI"
            }
        },
        W.Config.raster_layers = {
            regions: {
                usa: {
                    wms: {
                        servers: ["http://etiles5.waze.com/wms", "http://etiles6.waze.com/wms", "http://etiles7.waze.com/wms", "http://etiles8.waze.com/wms"]
                    },
                    mapnik: {
                        servers: ["https://editor-tiles1.waze.com", "https://editor-tiles2.waze.com", "https://editor-tiles3.waze.com", "https://editor-tiles4.waze.com"]
                    }
                },
                row: {
                    wms: {
                        servers: ["http://etiles1.waze.com/wms", "http://etiles2.waze.com/wms", "http://etiles3.waze.com/wms", "http://etiles4.waze.com/wms"],
                        file_name: "wme_beta"
                    },
                    mapnik: {
                        servers: ["https://world-editor-tiles1.waze.com", "https://world-editor-tiles2.waze.com", "https://world-editor-tiles3.waze.com", "https://world-editor-tiles4.waze.com"]
                    }
                },
                il: {
                    wms: {
                        servers: ["http://etiles1.maps.waze.co.il/wms", "http://etiles2.maps.waze.co.il/wms", "http://etiles3.maps.waze.co.il/wms", "http://etiles4.maps.waze.co.il/wms"]
                    },
                    mapnik: {
                        servers: ["https://il-editor-tiles1.waze.com", "https://il-editor-tiles2.waze.com", "https://il-editor-tiles3.waze.com", "https://il-editor-tiles4.waze.com"]
                    }
                }
            },
            options: {
                alpha: !0,
                buffer: 1,
                tileWidth: 512,
                tileHeight: 512,
                gutter: 15,
                transitionEffect: "resize",
                displayInLayerSwitcher: !0,
                draggable: !1
            },
            wms: {
                servers: ["/wms"],
                file_name: "wme",
                params: {
                    projection: "EPSG:900913",
                    format: "image/png",
                    transparent: !0
                }
            },
            mapnik: {
                servers: [],
                file_name: "tiles/${z}/${x}/${y}.png"
            },
            roads: {
                uniqueName: "roads",
                visible: !0,
                type: "mapnik",
                options: {
                    isBaseLayer: !1,
                    zoomOffset: 12,
                    draggable: !0,
                    gutter: 0
                }
            },
            gps_points: {
                uniqueName: "gps_points",
                visible: !1,
                type: "mapnik",
                options: {
                    isBaseLayer: !1,
                    zoomOffset: 12,
                    opacity: 1,
                    draggable: !0,
                    gutter: 0
                },
                params: {
                    clientLayer: "gps_points"
                }
            }
        },
        n(762),
        n(43),
        n(1065),
        n(1073),
        n(1074),
        n(1075),
        n(1076),
        n(1077),
        n(16),
        n(1078),
        n(1079)
}, function(e, t, n) {
    "use strict";
    OL.Map.prototype.Z_INDEX_BASE.MarkerOverlay = 850,
        OL.Map.prototype.Z_INDEX_BASE.TopLayer = 9999,
        OL.Geometry.LineString.prototype.distanceTo = function(e, t) {
            var n = !(t && !1 === t.edge) && t && t.details,
                i = void 0,
                r = {},
                s = void 0,
                a = Number.POSITIVE_INFINITY,
                o = void 0,
                l = void 0;
            if (e instanceof OpenLayers.Geometry.Point) {
                var u = this.getSortedSegments(),
                    d = e.x,
                    c = e.y,
                    h = void 0;
                for (o = 0,
                    l = u.length; o < l; ++o)
                    if (h = u[o],
                        (i = OpenLayers.Geometry.distanceToSegment(e, h)).distance < a) {
                        if (r = i,
                            s = h,
                            0 === (a = i.distance))
                            break
                    } else if (h.x2 > d && (c > h.y1 && c < h.y2 || c < h.y1 && c > h.y2))
                    break;
                r = n ? {
                    distance: r.distance,
                    x0: r.x,
                    y0: r.y,
                    x1: d,
                    y1: c,
                    line: s
                } : r.distance
            } else if (e instanceof OpenLayers.Geometry.LineString) {
                var f = this.getSortedSegments(),
                    p = e.getSortedSegments(),
                    g = void 0,
                    v = void 0,
                    m = void 0,
                    _ = void 0,
                    y = void 0,
                    b = p.length,
                    w = {
                        point: !0
                    };
                e: for (o = 0,
                    l = f.length; o < l; ++o) {
                    _ = (g = f[o]).x1,
                        y = g.y1;
                    for (var k = 0; k < b; ++k) {
                        if (v = p[k],
                            m = OpenLayers.Geometry.segmentsIntersect(g, v, w)) {
                            a = 0,
                                r = {
                                    distance: 0,
                                    x0: m.x,
                                    y0: m.y,
                                    x1: m.x,
                                    y1: m.y
                                };
                            break e
                        }
                        (i = OpenLayers.Geometry.distanceToSegment({
                            x: _,
                            y: y
                        }, v)).distance < a && (r = {
                            distance: a = i.distance,
                            x0: _,
                            y0: y,
                            x1: i.x,
                            y1: i.y
                        })
                    }
                }
                if (n || (r = r.distance),
                    0 !== a && g) {
                    i = e.distanceTo(new OpenLayers.Geometry.Point(g.x2, g.y2), t);
                    var E = n ? i.distance : i;
                    E < a && (r = n ? {
                        distance: a,
                        x0: i.x1,
                        y0: i.y1,
                        x1: i.x0,
                        y1: i.y0
                    } : E)
                }
            } else
                r = e.distanceTo(this, t),
                n && (r = {
                    distance: r.distance,
                    x0: r.x1,
                    y0: r.y1,
                    x1: r.x0,
                    y1: r.y0
                });
            return r
        },
        OL.Geometry.Collection.prototype.distanceTo = function(e, t) {
            for (var n = !(t && !1 === t.edge) && t && t.details, i = void 0, r = void 0, s = void 0, a = Number.POSITIVE_INFINITY, o = 0, l = this.components.length; o < l && (i = this.components[o].distanceTo(e, t),
                    !((s = n ? i.distance : i) < a && (a = s,
                        r = i,
                        n && (r.model = this.components[o].model),
                        0 === a))); ++o)
            ;
            return r
        },
        OL.Geometry.Point.prototype.toLonLat = function() {
            return new OL.LonLat(this.x, this.y)
        },
        OL.LonLat.prototype.toPoint = function() {
            return new OL.Geometry.Point(this.lon, this.lat)
        },
        OL.Geometry.LinearRing.prototype.getCentroid = function() {
            if (this.components) {
                var e = this.components.length;
                if (e > 0 && e <= 2)
                    return this.components[0].clone();
                if (e > 2) {
                    var t = 0,
                        n = 0,
                        i = this.components[0].x,
                        r = this.components[0].y,
                        s = -1 * this.getArea(),
                        a = void 0,
                        o = void 0,
                        l = void 0;
                    if (0 !== s) {
                        for (a = 0; a < e - 1; a++) {
                            var u = this.components[a],
                                d = this.components[a + 1];
                            t += (u.x + d.x - 2 * i) * ((u.x - i) * (d.y - r) - (d.x - i) * (u.y - r)),
                                n += (u.y + d.y - 2 * r) * ((u.x - i) * (d.y - r) - (d.x - i) * (u.y - r))
                        }
                        o = i + t / (6 * s),
                            l = r + n / (6 * s)
                    } else {
                        for (a = 0; a < e - 1; a++)
                            t += this.components[a].x,
                            n += this.components[a].y;
                        o = t / (e - 1),
                            l = n / (e - 1)
                    }
                    return new OpenLayers.Geometry.Point(o, l)
                }
                return null
            }
        },
        OL.Handler.Drag.prototype.checkModifiers = function(e) {
            return null === this.keyMask || ((e.shiftKey ? OpenLayers.Handler.MOD_SHIFT : 0) | (e.ctrlKey ? OpenLayers.Handler.MOD_CTRL : 0) | (e.metaKey ? OpenLayers.Handler.MOD_CTRL : 0) | (e.altKey ? OpenLayers.Handler.MOD_ALT : 0)) === this.keyMask
        }
}, function(e, t, n) {
    e.exports = {
        default: n(764),
        __esModule: !0
    }
}, function(e, t, n) {
    n(67),
        n(55),
        e.exports = n(765)
}, function(e, t, n) {
    var i = n(134),
        r = n(23)("iterator"),
        s = n(51);
    e.exports = n(12).isIterable = function(e) {
        var t = Object(e);
        return void 0 !== t[r] || "@@iterator" in t || s.hasOwnProperty(i(t))
    }
}, function(e, t, n) {
    n(67),
        n(55),
        e.exports = n(767)
}, function(e, t, n) {
    var i = n(28),
        r = n(179);
    e.exports = n(12).getIterator = function(e) {
        var t = r(e);
        if ("function" != typeof t)
            throw TypeError(e + " is not iterable!");
        return i(t.call(e))
    }
}, function(e, t, n) {
    n(769),
        e.exports = n(12).Object.entries
}, function(e, t, n) {
    var i = n(21),
        r = n(356)(!0);
    i(i.S, "Object", {
        entries: function(e) {
            return r(e)
        }
    })
}, function(e, t, n) {
    e.exports = {
        default: n(771),
        __esModule: !0
    }
}, function(e, t, n) {
    n(772),
        e.exports = n(12).Object.assign
}, function(e, t, n) {
    var i = n(21);
    i(i.S + i.F, "Object", {
        assign: n(773)
    })
}, function(e, t, n) {
    "use strict";
    var i = n(52),
        r = n(84),
        s = n(59),
        a = n(66),
        o = n(115),
        l = Object.assign;
    e.exports = !l || n(39)(function() {
            var e = {},
                t = {},
                n = Symbol(),
                i = "abcdefghijklmnopqrst";
            return e[n] = 7,
                i.split("").forEach(function(e) {
                    t[e] = e
                }),
                7 != l({}, e)[n] || Object.keys(l({}, t)).join("") != i
        }) ? function(e, t) {
            for (var n = a(e), l = arguments.length, u = 1, d = r.f, c = s.f; l > u;)
                for (var h, f = o(arguments[u++]), p = d ? i(f).concat(d(f)) : i(f), g = p.length, v = 0; g > v;)
                    c.call(f, h = p[v++]) && (n[h] = f[h]);
            return n
        } :
        l
}, function(e, t, n) {
    n(775),
        e.exports = n(12).Object.getPrototypeOf
}, function(e, t, n) {
    var i = n(66),
        r = n(131);
    n(135)("getPrototypeOf", function() {
        return function(e) {
            return r(i(e))
        }
    })
}, function(e, t, n) {
    n(777);
    var i = n(12).Object;
    e.exports = function(e, t, n) {
        return i.defineProperty(e, t, n)
    }
}, function(e, t, n) {
    var i = n(21);
    i(i.S + i.F * !n(29), "Object", {
        defineProperty: n(27).f
    })
}, function(e, t, n) {
    n(779),
        e.exports = n(12).Object.setPrototypeOf
}, function(e, t, n) {
    var i = n(21);
    i(i.S, "Object", {
        setPrototypeOf: n(780).set
    })
}, function(e, t, n) {
    var i = n(26),
        r = n(28),
        s = function(e, t) {
            if (r(e),
                !i(t) && null !== t)
                throw TypeError(t + ": can't set as prototype!")
        };
    e.exports = {
        set: Object.setPrototypeOf || ("__proto__" in {} ? function(e, t, i) {
            try {
                (i = n(46)(Function.call, n(100).f(Object.prototype, "__proto__").set, 2))(e, []),
                t = !(e instanceof Array)
            } catch (e) {
                t = !0
            }
            return function(e, n) {
                return s(e, n),
                    t ? e.__proto__ = n : i(e, n),
                    e
            }
        }({}, !1) : void 0),
        check: s
    }
}, function(e, t, n) {
    n(782);
    var i = n(12).Object;
    e.exports = function(e, t) {
        return i.create(e, t)
    }
}, function(e, t, n) {
    var i = n(21);
    i(i.S, "Object", {
        create: n(64)
    })
}, function(e, t, n) {
    n(101),
        n(55),
        n(67),
        n(784),
        n(787),
        n(788),
        e.exports = n(12).Promise
}, function(e, t, n) {
    "use strict";
    var i, r, s, a, o = n(49),
        l = n(18),
        u = n(46),
        d = n(134),
        c = n(21),
        h = n(26),
        f = n(56),
        p = n(181),
        g = n(116),
        v = n(359),
        m = n(360).set,
        _ = n(785)(),
        y = n(182),
        b = n(362),
        w = n(786),
        k = n(363),
        E = l.TypeError,
        M = l.process,
        S = M && M.versions,
        T = S && S.v8 || "",
        I = l.Promise,
        C = "process" == d(M),
        A = function() {},
        O = r = y.f,
        x = !! function() {
            try {
                var e = I.resolve(1),
                    t = (e.constructor = {})[n(23)("species")] = function(e) {
                        e(A, A)
                    };
                return (C || "function" == typeof PromiseRejectionEvent) && e.then(A) instanceof t && 0 !== T.indexOf("6.6") && -1 === w.indexOf("Chrome/66")
            } catch (e) {}
        }(),
        D = function(e) {
            var t;
            return !(!h(e) || "function" != typeof(t = e.then)) && t
        },
        R = function(e, t) {
            if (!e._n) {
                e._n = !0;
                var n = e._c;
                _(function() {
                    for (var i = e._v, r = 1 == e._s, s = 0, a = function(t) {
                            var n, s, a, o = r ? t.ok : t.fail,
                                l = t.resolve,
                                u = t.reject,
                                d = t.domain;
                            try {
                                o ? (r || (2 == e._h && N(e),
                                        e._h = 1),
                                    !0 === o ? n = i : (d && d.enter(),
                                        n = o(i),
                                        d && (d.exit(),
                                            a = !0)),
                                    n === t.promise ? u(E("Promise-chain cycle")) : (s = D(n)) ? s.call(n, l, u) : l(n)) : u(i)
                            } catch (e) {
                                d && !a && d.exit(),
                                    u(e)
                            }
                        }; n.length > s;)
                        a(n[s++]);
                    e._c = [],
                        e._n = !1,
                        t && !e._h && L(e)
                })
            }
        },
        L = function(e) {
            m.call(l, function() {
                var t, n, i, r = e._v,
                    s = P(e);
                if (s && (t = b(function() {
                            C ? M.emit("unhandledRejection", r, e) : (n = l.onunhandledrejection) ? n({
                                promise: e,
                                reason: r
                            }) : (i = l.console) && i.error && i.error("Unhandled promise rejection", r)
                        }),
                        e._h = C || P(e) ? 2 : 1),
                    e._a = void 0,
                    s && t.e)
                    throw t.v
            })
        },
        P = function(e) {
            return 1 !== e._h && 0 === (e._a || e._c).length
        },
        N = function(e) {
            m.call(l, function() {
                var t;
                C ? M.emit("rejectionHandled", e) : (t = l.onrejectionhandled) && t({
                    promise: e,
                    reason: e._v
                })
            })
        },
        V = function(e) {
            var t = this;
            t._d || (t._d = !0,
                (t = t._w || t)._v = e,
                t._s = 2,
                t._a || (t._a = t._c.slice()),
                R(t, !0))
        },
        U = function(e) {
            var t, n = this;
            if (!n._d) {
                n._d = !0,
                    n = n._w || n;
                try {
                    if (n === e)
                        throw E("Promise can't be resolved itself");
                    (t = D(e)) ? _(function() {
                        var i = {
                            _w: n,
                            _d: !1
                        };
                        try {
                            t.call(e, u(U, i, 1), u(V, i, 1))
                        } catch (e) {
                            V.call(i, e)
                        }
                    }): (n._v = e,
                        n._s = 1,
                        R(n, !1))
                } catch (e) {
                    V.call({
                        _w: n,
                        _d: !1
                    }, e)
                }
            }
        };
    x || (I = function(e) {
                p(this, I, "Promise", "_h"),
                    f(e),
                    i.call(this);
                try {
                    e(u(U, this, 1), u(V, this, 1))
                } catch (e) {
                    V.call(this, e)
                }
            },
            (i = function(e) {
                this._c = [],
                    this._a = void 0,
                    this._s = 0,
                    this._d = !1,
                    this._v = void 0,
                    this._h = 0,
                    this._n = !1
            }).prototype = n(183)(I.prototype, {
                then: function(e, t) {
                    var n = O(v(this, I));
                    return n.ok = "function" != typeof e || e,
                        n.fail = "function" == typeof t && t,
                        n.domain = C ? M.domain : void 0,
                        this._c.push(n),
                        this._a && this._a.push(n),
                        this._s && R(this, !1),
                        n.promise
                },
                catch: function(e) {
                    return this.then(void 0, e)
                }
            }),
            s = function() {
                var e = new i;
                this.promise = e,
                    this.resolve = u(U, e, 1),
                    this.reject = u(V, e, 1)
            },
            y.f = O = function(e) {
                return e === I || e === a ? new s(e) : r(e)
            }
        ),
        c(c.G + c.W + c.F * !x, {
            Promise: I
        }),
        n(58)(I, "Promise"),
        n(364)("Promise"),
        a = n(12).Promise,
        c(c.S + c.F * !x, "Promise", {
            reject: function(e) {
                var t = O(this);
                return (0,
                        t.reject)(e),
                    t.promise
            }
        }),
        c(c.S + c.F * (o || !x), "Promise", {
            resolve: function(e) {
                return k(o && this === a ? I : this, e)
            }
        }),
        c(c.S + c.F * !(x && n(365)(function(e) {
            I.all(e).catch(A)
        })), "Promise", {
            all: function(e) {
                var t = this,
                    n = O(t),
                    i = n.resolve,
                    r = n.reject,
                    s = b(function() {
                        var n = [],
                            s = 0,
                            a = 1;
                        g(e, !1, function(e) {
                                var o = s++,
                                    l = !1;
                                n.push(void 0),
                                    a++,
                                    t.resolve(e).then(function(e) {
                                        l || (l = !0,
                                            n[o] = e,
                                            --a || i(n))
                                    }, r)
                            }),
                            --a || i(n)
                    });
                return s.e && r(s.v),
                    n.promise
            },
            race: function(e) {
                var t = this,
                    n = O(t),
                    i = n.reject,
                    r = b(function() {
                        g(e, !1, function(e) {
                            t.resolve(e).then(n.resolve, i)
                        })
                    });
                return r.e && i(r.v),
                    n.promise
            }
        })
}, function(e, t, n) {
    var i = n(18),
        r = n(360).set,
        s = i.MutationObserver || i.WebKitMutationObserver,
        a = i.process,
        o = i.Promise,
        l = "process" == n(65)(a);
    e.exports = function() {
        var e, t, n, u = function() {
            var i, r;
            for (l && (i = a.domain) && i.exit(); e;) {
                r = e.fn,
                    e = e.next;
                try {
                    r()
                } catch (i) {
                    throw e ? n() : t = void 0,
                        i
                }
            }
            t = void 0,
                i && i.enter()
        };
        if (l)
            n = function() {
                a.nextTick(u)
            };
        else if (!s || i.navigator && i.navigator.standalone)
            if (o && o.resolve) {
                var d = o.resolve(void 0);
                n = function() {
                    d.then(u)
                }
            } else
                n = function() {
                    r.call(i, u)
                };
        else {
            var c = !0,
                h = document.createTextNode("");
            new s(u).observe(h, {
                    characterData: !0
                }),
                n = function() {
                    h.data = c = !c
                }
        }
        return function(i) {
            var r = {
                fn: i,
                next: void 0
            };
            t && (t.next = r),
                e || (e = r,
                    n()),
                t = r
        }
    }
}, function(e, t, n) {
    var i = n(18).navigator;
    e.exports = i && i.userAgent || ""
}, function(e, t, n) {
    "use strict";
    var i = n(21),
        r = n(12),
        s = n(18),
        a = n(359),
        o = n(363);
    i(i.P + i.R, "Promise", {
        finally: function(e) {
            var t = a(this, r.Promise || s.Promise),
                n = "function" == typeof e;
            return this.then(n ? function(n) {
                    return o(t, e()).then(function() {
                        return n
                    })
                } :
                e, n ? function(n) {
                    return o(t, e()).then(function() {
                        throw n
                    })
                } :
                e)
        }
    })
}, function(e, t, n) {
    "use strict";
    var i = n(21),
        r = n(182),
        s = n(362);
    i(i.S, "Promise", {
        try: function(e) {
            var t = r.f(this),
                n = s(e);
            return (n.e ? t.reject : t.resolve)(n.v),
                t.promise
        }
    })
}, function(e, t, n) {
    var i = n(12),
        r = i.JSON || (i.JSON = {
            stringify: JSON.stringify
        });
    e.exports = function(e) {
        return r.stringify.apply(r, arguments)
    }
}, function(e, t, n) {
    n(55),
        n(791),
        e.exports = n(12).Array.from
}, function(e, t, n) {
    "use strict";
    var i = n(46),
        r = n(21),
        s = n(66),
        a = n(357),
        o = n(358),
        l = n(97),
        u = n(366),
        d = n(179);
    r(r.S + r.F * !n(365)(function(e) {
        Array.from(e)
    }), "Array", {
        from: function(e) {
            var t, n, r, c, h = s(e),
                f = "function" == typeof this ? this : Array,
                p = arguments.length,
                g = p > 1 ? arguments[1] : void 0,
                v = void 0 !== g,
                m = 0,
                _ = d(h);
            if (v && (g = i(g, p > 2 ? arguments[2] : void 0, 2)),
                void 0 == _ || f == Array && o(_))
                for (n = new f(t = l(h.length)); t > m; m++)
                    u(n, m, v ? g(h[m], m) : h[m]);
            else
                for (c = _.call(h),
                    n = new f; !(r = c.next()).done; m++)
                    u(n, m, v ? a(c, g, [r.value, m], !0) : r.value);
            return n.length = m,
                n
        }
    })
}, function(e, t, n) {
    n(793),
        e.exports = n(12).Reflect.construct
}, function(e, t, n) {
    var i = n(21),
        r = n(64),
        s = n(56),
        a = n(28),
        o = n(26),
        l = n(39),
        u = n(794),
        d = (n(18).Reflect || {}).construct,
        c = l(function() {
            function e() {}
            return !(d(function() {}, [], e) instanceof e)
        }),
        h = !l(function() {
            d(function() {})
        });
    i(i.S + i.F * (c || h), "Reflect", {
        construct: function(e, t) {
            s(e),
                a(t);
            var n = arguments.length < 3 ? e : s(arguments[2]);
            if (h && !c)
                return d(e, t, n);
            if (e == n) {
                switch (t.length) {
                    case 0:
                        return new e;
                    case 1:
                        return new e(t[0]);
                    case 2:
                        return new e(t[0], t[1]);
                    case 3:
                        return new e(t[0], t[1], t[2]);
                    case 4:
                        return new e(t[0], t[1], t[2], t[3])
                }
                var i = [null];
                return i.push.apply(i, t),
                    new(u.apply(e, i))
            }
            var l = n.prototype,
                f = r(o(l) ? l : Object.prototype),
                p = Function.apply.call(e, f, t);
            return o(p) ? p : f
        }
    })
}, function(e, t, n) {
    "use strict";
    var i = n(56),
        r = n(26),
        s = n(361),
        a = [].slice,
        o = {};
    e.exports = Function.bind || function(e) {
        var t = i(this),
            n = a.call(arguments, 1),
            l = function() {
                var i = n.concat(a.call(arguments));
                return this instanceof l ? function(e, t, n) {
                    if (!(t in o)) {
                        for (var i = [], r = 0; r < t; r++)
                            i[r] = "a[" + r + "]";
                        o[t] = Function("F,a", "return new F(" + i.join(",") + ")")
                    }
                    return o[t](e, n)
                }(t, i.length, i) : s(t, i, e)
            };
        return r(t.prototype) && (l.prototype = t.prototype),
            l
    }
}, function(e, t, n) {
    n(796),
        e.exports = n(12).Object.keys
}, function(e, t, n) {
    var i = n(66),
        r = n(52);
    n(135)("keys", function() {
        return function(e) {
            return r(i(e))
        }
    })
}, function(e, t, n) {
    var i = {
        "./Waze/MapEditor/UI/Map/MapControls/templates/mouse_position.hamlc": 798,
        "./Waze/MapEditor/UI/Map/MapControls/templates/overlay-buttons.hamlc": 799,
        "./Waze/MapEditor/UI/Map/MapControls/templates/permalink.hamlc": 800,
        "./Waze/MapEditor/UI/Map/MapControls/templates/zoombar.hamlc": 801,
        "./Waze/MapEditor/UI/Map/templates/location-message.hamlc": 802,
        "./Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-item.hamlc": 803,
        "./Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-layout.hamlc": 804,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/action-view.hamlc": 805,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/changes-log-view.hamlc": 806,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/group-view.hamlc": 807,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-list-view.hamlc": 808,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-view.hamlc": 809,
        "./Waze/MapEditor/UI/Modules/Chat/View/chat.hamlc": 810,
        "./Waze/MapEditor/UI/Modules/Chat/View/chat_message.hamlc": 811,
        "./Waze/MapEditor/UI/Modules/Chat/View/chat_user.hamlc": 812,
        "./Waze/MapEditor/UI/Modules/Cities/templates/feature_editor.hamlc": 813,
        "./Waze/MapEditor/UI/Modules/Cities/templates/layer_switcher.hamlc": 814,
        "./Waze/MapEditor/UI/Modules/Closures/templates/edit.hamlc": 815,
        "./Waze/MapEditor/UI/Modules/Closures/templates/item.hamlc": 816,
        "./Waze/MapEditor/UI/Modules/Closures/templates/layout.hamlc": 817,
        "./Waze/MapEditor/UI/Modules/Closures/templates/list.hamlc": 818,
        "./Waze/MapEditor/UI/Modules/Comments/templates/feature_editor.hamlc": 819,
        "./Waze/MapEditor/UI/Modules/Comments/templates/name_editor.hamlc": 820,
        "./Waze/MapEditor/UI/Modules/Conversation/templates/item.hamlc": 821,
        "./Waze/MapEditor/UI/Modules/Conversation/templates/list.hamlc": 822,
        "./Waze/MapEditor/UI/Modules/Conversation/templates/text.hamlc": 823,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/history_main.hamlc": 824,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_item.hamlc": 825,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_main.hamlc": 826,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_related.hamlc": 827,
        "./Waze/MapEditor/UI/Modules/Feed/templates/feed.hamlc": 828,
        "./Waze/MapEditor/UI/Modules/Feed/templates/feed_group.hamlc": 829,
        "./Waze/MapEditor/UI/Modules/Feed/templates/issue_item.hamlc": 830,
        "./Waze/MapEditor/UI/Modules/Feed/templates/message_item.hamlc": 831,
        "./Waze/MapEditor/UI/Modules/Feed/templates/notification_detail.hamlc": 832,
        "./Waze/MapEditor/UI/Modules/Feed/templates/notification_item.hamlc": 833,
        "./Waze/MapEditor/UI/Modules/GeoLocation/templates/pan_button.hamlc": 834,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes.hamlc": 835,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes_edit.hamlc": 836,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/lane_arrow.hamlc": 837,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/segment_lanes.hamlc": 838,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/turn_lane_checkbox.hamlc": 839,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/turn_lanes_edit.hamlc": 840,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/checkbox.hamlc": 841,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layer-switcher.hamlc": 842,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layout.hamlc": 843,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/module-togglers.hamlc": 844,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/text-checkboxes.hamlc": 913,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/togglers-tree.hamlc": 914,
        "./Waze/MapEditor/UI/Modules/Login/templates/email_verification.hamlc": 915,
        "./Waze/MapEditor/UI/Modules/Login/templates/login_main.hamlc": 916,
        "./Waze/MapEditor/UI/Modules/Login/templates/login_view.hamlc": 917,
        "./Waze/MapEditor/UI/Modules/MTE/templates/contributors/item.hamlc": 918,
        "./Waze/MapEditor/UI/Modules/MTE/templates/contributors/list.hamlc": 919,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/closures.hamlc": 920,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/loading.hamlc": 921,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/names.hamlc": 922,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/twitter_urls.hamlc": 923,
        "./Waze/MapEditor/UI/Modules/MTE/templates/mte_edit_view.hamlc": 924,
        "./Waze/MapEditor/UI/Modules/MTE/templates/mte_item_view.hamlc": 925,
        "./Waze/MapEditor/UI/Modules/MTE/templates/mte_list.hamlc": 926,
        "./Waze/MapEditor/UI/Modules/MTE/templates/sidebar.hamlc": 927,
        "./Waze/MapEditor/UI/Modules/MTE/templates/toolbar_buttons.hamlc": 928,
        "./Waze/MapEditor/UI/Modules/MTE/templates/topbar.hamlc": 929,
        "./Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/edit.hamlc": 930,
        "./Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/item.hamlc": 931,
        "./Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/layout.hamlc": 932,
        "./Waze/MapEditor/UI/Modules/Problems/templates/_navigation.hamlc": 933,
        "./Waze/MapEditor/UI/Modules/Problems/templates/closure_description.hamlc": 934,
        "./Waze/MapEditor/UI/Modules/Problems/templates/edit.hamlc": 935,
        "./Waze/MapEditor/UI/Modules/RegionSwitcher/templates/region-switcher.hamlc": 936,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_blocked_edit.hamlc": 937,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_edit.hamlc": 938,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_item.hamlc": 939,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit.hamlc": 940,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_segment.hamlc": 941,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_validation.hamlc": 942,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_driving_segments.hamlc": 943,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_list_item.hamlc": 944,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main.hamlc": 945,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_pickup.hamlc": 946,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_segments.hamlc": 947,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table.hamlc": 948,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_turn.hamlc": 949,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/timeframe_edit.hamlc": 950,
        "./Waze/MapEditor/UI/Modules/Save/templates/error_item.hamlc": 951,
        "./Waze/MapEditor/UI/Modules/Save/templates/error_list.hamlc": 952,
        "./Waze/MapEditor/UI/Modules/Save/templates/success.hamlc": 953,
        "./Waze/MapEditor/UI/Modules/Sidebar/templates/advanced-tools.hamlc": 954,
        "./Waze/MapEditor/UI/Modules/StreetView/templates/street-view-button.hamlc": 955,
        "./Waze/MapEditor/UI/Modules/StreetView/templates/street-view.hamlc": 956,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/save.hamlc": 957,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/search-empty-view.hamlc": 958,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/search-result-item.hamlc": 959,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/search.hamlc": 960,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-group.hamlc": 961,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-tooltip.hamlc": 962,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item.hamlc": 963,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar.hamlc": 964,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/item.hamlc": 965,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/layout.hamlc": 966,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/main-list.hamlc": 967,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/rest-list.hamlc": 968,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/layout.hamlc": 969,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/loading-indicator.hamlc": 970,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/location-info.hamlc": 971,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/description_selection_view.hamlc": 972,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/external_providers_view.hamlc": 973,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/image_item_view.hamlc": 974,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/images_selection_view.hamlc": 975,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/layout.hamlc": 976,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/main_selection_view.hamlc": 977,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/multi_selection_view.hamlc": 978,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/single_selection_view.hamlc": 979,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/landmark-item-view.hamlc": 980,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/merge-venues.hamlc": 981,
        "./templates/add_update_details.hamlc": 982,
        "./templates/additional_details.hamlc": 983,
        "./templates/address/alt-street.hamlc": 984,
        "./templates/address/edit-alt-street.hamlc": 985,
        "./templates/address/edit.hamlc": 986,
        "./templates/archive-panel.hamlc": 987,
        "./templates/archive-sessions.hamlc": 988,
        "./templates/big-junction-edit.hamlc": 989,
        "./templates/camera-edit.hamlc": 990,
        "./templates/chrome_autofill_off.hamlc": 991,
        "./templates/editable-areas.hamlc": 992,
        "./templates/focus-buttons.hamlc": 993,
        "./templates/house-number.hamlc": 994,
        "./templates/house-numbers-lightbox.hamlc": 995,
        "./templates/instruction-override.hamlc": 996,
        "./templates/keyboard_shortcuts/list.hamlc": 997,
        "./templates/keyboard_shortcuts/modal.hamlc": 998,
        "./templates/lock/edit.hamlc": 999,
        "./templates/login/sandbox-message.hamlc": 1e3,
        "./templates/map.hamlc": 1001,
        "./templates/node-edit.hamlc": 1002,
        "./templates/opening_hours/add.hamlc": 1003,
        "./templates/opening_hours/item.hamlc": 1004,
        "./templates/opening_hours/layout.hamlc": 1005,
        "./templates/place_updates/actions.hamlc": 1006,
        "./templates/place_updates/add_details.hamlc": 1007,
        "./templates/place_updates/add_image.hamlc": 1008,
        "./templates/place_updates/add_venue.hamlc": 1009,
        "./templates/place_updates/changed_field.hamlc": 1010,
        "./templates/place_updates/changed_field_item.hamlc": 1011,
        "./templates/place_updates/changed_field_parking_lot.hamlc": 1012,
        "./templates/place_updates/delete_venue.hamlc": 1013,
        "./templates/place_updates/external_provider/item.hamlc": 1014,
        "./templates/place_updates/external_provider/list.hamlc": 1015,
        "./templates/place_updates/flag.hamlc": 1016,
        "./templates/place_updates/image.hamlc": 1017,
        "./templates/place_updates/image_dialog.hamlc": 1018,
        "./templates/place_updates/item.hamlc": 1019,
        "./templates/place_updates/layout.hamlc": 1020,
        "./templates/place_updates/panel_header.hamlc": 1021,
        "./templates/place_updates/place_details.hamlc": 1022,
        "./templates/place_updates/update_venue.hamlc": 1023,
        "./templates/prefs-panel.hamlc": 1024,
        "./templates/segment/average-speed-camera.hamlc": 1025,
        "./templates/segment/edit-panel-attributes-form.hamlc": 1026,
        "./templates/segment/edit-panel.hamlc": 1027,
        "./templates/segment/flag-attribute.hamlc": 1028,
        "./templates/segment/junction-exit-layout.hamlc": 1029,
        "./templates/segment/junction-exit.hamlc": 1030,
        "./templates/segment/routing.hamlc": 1031,
        "./templates/segment/speed-limit.hamlc": 1032,
        "./templates/segment/tts-playback-popover.hamlc": 1033,
        "./templates/segment/tts-playback.hamlc": 1034,
        "./templates/sidebar/links.hamlc": 1035,
        "./templates/sidebar/sidebar.hamlc": 1036,
        "./templates/sidebar/user-details.hamlc": 1037,
        "./templates/sidebar/user-info.hamlc": 1038,
        "./templates/sidebar/user-permissions-tooltip.hamlc": 1039,
        "./templates/sidebar/user-sandbox.hamlc": 1040,
        "./templates/snapshot-message.hamlc": 1041,
        "./templates/snapshot-toggler.hamlc": 1042,
        "./templates/tips/watch-tutorial.hamlc": 1043,
        "./templates/turn-arrow-tooltip-timeframes.hamlc": 1045,
        "./templates/turn-arrow-tooltip.hamlc": 1046,
        "./templates/turn-arrow.hamlc": 1047,
        "./templates/tutorial-lightbox.hamlc": 1048,
        "./templates/user-greeting.hamlc": 1049,
        "./templates/util/day-checkboxes.hamlc": 1050,
        "./templates/util/toggle-checkboxes.hamlc": 1051,
        "./templates/venue/alias.hamlc": 1052,
        "./templates/venue/aliases-layout.hamlc": 1053,
        "./templates/venue/category-tag.hamlc": 1054,
        "./templates/venue/external-provider/item.hamlc": 1055,
        "./templates/venue/external-provider/list.hamlc": 1056,
        "./templates/venue/suggested-categories.hamlc": 1057,
        "./templates/venue/venue-categories.hamlc": 1058,
        "./templates/venue/venue-edit-general.hamlc": 1059,
        "./templates/venue/venue-edit-more-info-contact.hamlc": 1060,
        "./templates/venue/venue-edit-more-info-parking-lot.hamlc": 1061,
        "./templates/venue/venue-edit-more-info-services.hamlc": 1062,
        "./templates/venue/venue-edit-more-info.hamlc": 1063,
        "./templates/venue/venue-edit.hamlc": 1064
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 797
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<span class='mouse-position' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>00.00000 00.00000</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='overlay-buttons-container'>\n<div class='street-view-region'></div>\n<div class='geo-location-region'></div>\n<div class='zoom-bar-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<a class='livemap-link' href='/livemap/' target='_blank'>\n<div class='icon'></div>\n</a>\n<a class='permalink' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>\n<div class='icon'></div>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='zoom-bar-container'>\n<div class='zoom-button zoom-plus-button'></div>\n<div class='zoom-button zoom-minus-button'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='footer-message location-message'>\nData for this location is on a different server environment,\n<a data-env='" + t(e(this.otherEnv)) + "' href='#'>switch now</a>\n<button class='close'>×</button>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='entry'>\n<i class='arrow fa fa-arrow-circle-right'></i>\n<span class='street-name'>" + t(e(this.streetName)) + "</span>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + t(e(this.t("edit.big_junction.entries") + ":"))),
                            n.push("<div class='list'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='left-side'>\n<div class='dot-container'>\n<div class='tooltip-item undo-tooltip' title='" + t(e(this.t("save.changes_log.undo_item"))) + "' data-toggle='tooltip' data-container='body'></div>\n<div class='redo-tooltip tooltip-item' title='" + t(e(this.t("save.changes_log.redo_item"))) + "' data-toggle='tooltip' data-container='body'></div>\n<div class='dot'></div>\n</div>\n<div class='line'></div>\n</div>\n<div class='right-side'>\n<div class='title'></div>\n<div class='ids-region'></div>\n<div class='timestamp'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='header'>\n<div class='title'></div>\n</div>\n<div class='groups-list-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='actions'>\n<div class='action-button tooltip-item undo-all' title='" + t(e(this.t("save.changes_log.undo_all"))) + "' data-toggle='tooltip' data-container='body'></div>\n<div class='action-button redo-all tooltip-item' title='" + t(e(this.t("save.changes_log.redo_all"))) + "' data-toggle='tooltip' data-container='body'></div>\n</div>\n<div class='actions-items-list-region'></div>\n<div class='save-error-actions-region'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='error-list-container'>\n<div class='list-region'></div>\n<div class='error-actions'>\n<div class='save-and-ignore waze-btn waze-btn-blue waze-btn-smaller'>\n<span class='button-text'>"),
                            n.push("" + t(e(this.t("save.changes_log.ignore")))),
                            n.push("</span>\n<span class='loading'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='title-container'>\n<div class='title'></div>\n<a class='focus pan-button'>\n<i class='fa fa-crosshairs'></i>\n</a>\n</div>\n<div class='solution'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='chat-toggle'>\n<button class='toggle'></button>\n</div>\n<div id='chat'>\n<div class='header'>\n<span class='room-name single-room-label'></span>\n<div class='dropdown room-selector'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='room-name'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu rooms'></ul>\n</div>\n<div class='dropdown visibilty-menu'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='status'>" + t(e(this.status)) + "</span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu visibility'>\n<li class='visibility-visible'>\n<a href='#'>" + t(e(this.t("chat.visible"))) + "</a>\n</li>\n<li class='visibility-invisible'>\n<a href='#'>" + t(e(this.t("chat.invisible"))) + "</a>\n</li>\n</ul>\n</div>\n<button class='minimize' aria-hidden='true' type='button'>_</button>\n</div>\n<div class='not-connected-message'>Not Connected</div>\n<div class='chat-body'>\n<div class='messages'>\n<div class='message-list'></div>\n<a class='unread-messages-notification' href='#'></a>\n<div class='new-message'>\n<input class='message-input' placeholder='" + t(e(this.t("chat.placeholder"))) + "' data-auto-rtl>\n</div>\n</div>\n<div class='users'>\n<ul class='list-unstyled user-list'></ul>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='from'>" + t(e(this.from.name)) + "</div>\n<div class='body'>"),
                            i = 0,
                            r = (a = this.body.split("\n")).length; i < r; i++)
                            s = a[i],
                            n.push("<div>" + t(e(s)) + "</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<a class='" + ["user", "" + t(e(this.className))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#' data-id='" + t(e(this.id)) + "'>\n<div class='rank'>"),
                            this.rank < 6 ? n.push("" + t(e(this.rank + 1))) : n.push("&nbsp;"),
                            n.push("</div>\n<i class='crosshair fa fa-crosshairs'></i>\n<div class='username'>" + t(e(this.name)) + "</div>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='city-feature-editor'>\n<div class='feature-editor-header'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.city.title"))) + "</span>\n</div>\n<div class='preview'>\n<span class='city-name'>"),
                            n.push("" + t(e(this.city.attributes.name))),
                            n.push("</span>"),
                            this.canEdit && n.push("<a class='edit-button'>\n<i class='waze-icon-edit'></i>\n</a>"),
                            n.push("</div>\n</div>\n<form class='attributes-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("edit.address.city")))),
                            n.push("</label>\n<div class='controls'>\n<input class='city-name form-control' type='text' autocomplete='off'>\n</div>\n</div>\n<div class='action-buttons'>\n<button class='save-button waze-btn waze-btn-blue waze-btn-smaller' type='button'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n<div class='loading waze-loader-sm'></div>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return e = this.__cleanValue,
                            n = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/checkbox",
                            i = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/text-checkboxes",
                            (t = []).push("" + e(this.renderPartial(n, {
                                id: "GROUP_CITIES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                title: this.t("layer_switcher.togglers.ITEM_CITY_NAMES"),
                                items: [{
                                    id: "ITEM_CITY_NAMES",
                                    iconName: "visible"
                                }]
                            }))),
                            t.push("</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["edit-closure", "" + t(e(this.newClosure ? "new" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<form class='form' action='#' method='post'>\n<div class='form-group'>\n<label class='control-label' for='closure_reason'>" + t(e(this.t("closures.fields.reason"))) + "</label>\n<div class='controls'>\n<input class='form-control' type='text' name='closure_reason'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_direction'>" + t(e(this.t("closures.fields.direction"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='closure_direction'></select>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_startDate'>" + t(e(this.t("closures.fields.startDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='form-control start-date' type='text' name='closure_startDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text' name='closure_startTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_endDate'>" + t(e(this.t("closures.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='end-date form-control' type='text' name='closure_endDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' name='closure_endTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>"),
                            this.canEditMTE && (n.push("<div class='form-group'>\n<label class='control-label control-label-inline' for='closure_eventId'>" + t(e(this.t("closures.fields.event"))) + "</label>\n<i class='mte-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.mte"))) + "'></i>\n<div class='controls'>\n<div class='mte-message mte-message-empty'>"),
                                n.push("" + t(e(this.t("closures.no_events_empty_dates")))),
                                n.push("</div>\n<select class='form-control' name='closure_eventId' required='" + t(e(this.newClosure)) + "'></select>\n</div>\n</div>")),
                            n.push("<div class='checkbox controls-container'>\n<input id='closure-permanent-checkbox' type='checkbox' name='closure_permanent'>\n<label class='control-label-inline' for='closure-permanent-checkbox'>" + t(e(this.t("closures.fields.permanent"))) + "</label>\n<i class='permanent-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.permanent"))) + "'></i>\n</div>\n<input type='submit' style='display: none;'>\n<ul class='additional-attributes list-unstyled'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this.closures[0]))),
                            null != this.getProvider() && n.push("<li>" + t(e(this.t("closures.fields.provider", {
                                provider: this.getProvider()
                            }))) + "</li>"),
                            n.push("</ul>\n<div class='message' style='display: none'></div>\n<div class='action-buttons'>\n<div class='save-button waze-btn waze-btn-blue waze-btn-smaller'>"),
                            this.newClosure ? n.push("" + t(e(this.t("edit.add")))) : n.push("" + t(e(this.t("toolbar.save.title")))),
                            n.push("</div>\n<div class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent'>" + t(e(this.t("edit.cancel"))) + "</div>\n</div>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='details section'>"),
                            this.canEdit && (n.push("<div class='buttons'>"),
                                this.showLocateButton && n.push("<a class='locate'>\n<i class='waze-icon-crosshair'></i>\n</a>"),
                                n.push("<a class='delete'>\n<i class='waze-icon-trash'></i>\n</a>\n<a class='edit'>\n<i class='waze-icon-edit'></i>\n</a>\n</div>"),
                                this.showApplyToAll && n.push("<a class='apply-to-all' href='#'>" + t(e(this.t("closures.apply_to_all"))) + "</a>")),
                            n.push("<div class='direction'>"),
                            this.direction === this.DIRECTION.A_TO_B ? n.push("<div class='dir-icon dir-icon-a'>A</div>\n<div class='dir-sep'></div>\n<div class='dir-icon dir-icon-b'>B</div>") : this.direction === this.DIRECTION.B_TO_A ? n.push("<div class='dir-icon dir-icon-b'>B</div>\n<div class='dir-sep'></div>\n<div class='dir-icon dir-icon-a'>A</div>") : (n.push("<div class='dir-label span'>"),
                                n.push("" + t(e(this.t("segment.direction.label." + this.direction)))),
                                n.push("</div>")),
                            n.push("</div>\n<div class='dates row section'>\n<div class='col-xs-6 start-date'>\n<div class='date-label'>" + t(e(this.t("closures.headers.start"))) + "</div>"),
                            this.isStartDateSet ? n.push("<div class='date'>" + t(e(this.formatDate(this.startDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.startDate))) + "</div>") : n.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            n.push("</div>\n<div class='col-xs-6 end-date'>\n<div class='date-label'>" + t(e(this.t("closures.headers.end"))) + "</div>"),
                            this.isEndDateSet ? n.push("<div class='date'>" + t(e(this.formatDate(this.endDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.endDate))) + "</div>") : n.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            n.push("</div>\n</div>\n</div>"),
                            (this.eventName || this.description) && (n.push("<div class='bottom'>"),
                                this.eventName && (n.push("<div class='event-name'>\n<i class='waze-icon-event'></i>"),
                                    n.push("" + e(this.eventName)),
                                    n.push("</div>")),
                                this.description && n.push("<div class='description'>" + t(e(this.description)) + "</div>"),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='main'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.canEdit && this.canAdd || !this.showSaveMessage ? this.showActivateRepoMessage ? n.push("<div class='alert alert-danger'>" + t(e(this.t("closures.enable_layer"))) + "</div>") : !this.canEdit && this.canAdd && n.push("<div class='alert alert-danger'>" + t(e(this.t("closures.lock_message", {
                                lockLevel: this.h.formatRank(this.lockLevel)
                            }))) + "</div>") : n.push("<div class='alert alert-gray'>" + t(e(this.t("closures.save_your_changes"))) + "</div>"),
                            n.push("<ul class='full-closures list-unstyled'></ul>"),
                            this.showPartialClosuresHeader && n.push("<div class='partial-closures-header' style='display: none;'>" + t(e(this.t("closures.partial_header"))) + "</div>"),
                            n.push("<ul class='list-unstyled partial-closures'></ul>\n<div class='message' style='display: none'></div>"),
                            this.canEdit && this.canAdd && (n.push("<div class='add-closure-button waze-btn waze-btn-white'>"),
                                n.push("" + t(e(this.t("closures.add")))),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = function(e) {
                                return e.replace(/\n/g, "&#x000A;")
                            },
                            (n = []).push("<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.map_comment.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane'></div>\n<div class='name-editor-region'></div>\n<div class='conversation-region'></div>\n<form class='attributes-form side-panel-section'>"),
                            this.comment.isNew() && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control new-subject-input' type='text' name='subject' value='" + t(e(this.comment.attributes.subject)) + "'>\n<div class='input-max-length new-subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='form-control new-body-input' name='body'>" + i(t(e(this.comment.attributes.body))) + "</textarea>\n<div class='input-max-length new-body-max-length'></div>\n</div>\n</div>"),
                            n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control waze-radio-container'>"),
                            this.editable)
                            for (s = r = 0,
                                a = this.userRank; 0 <= a ? r <= a : r >= a; s = 0 <= a ? ++r : --r)
                                n.push("" + e(this.h.radio({
                                    label: this.h.formatRank(s),
                                    name: "lockRank",
                                    dataType: "numeric",
                                    value: s,
                                    currentValue: this.comment.attributes.lockRank,
                                    enable: this.editable
                                })));
                        else
                            n.push("<div class='rank-value'>" + t(e(this.h.formatRank(this.comment.attributes.lockRank))) + "</div>");
                        return n.push("</div>\n</div>\n</div>\n<div class='end-date-form-group form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<span class='input-group-addon'>\n<input class='no-end-date' type='checkbox'>\n</span>\n<input class='end-date form-control' type='text' placeholder='" + t(e(this.t("edit.placeholder.date"))) + "'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' placeholder='" + t(e(this.t("edit.placeholder.time"))) + "'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='clear-btn'>" + t(e(this.t("edit.map_comment.clear"))) + "</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.type"))) + "</label>\n<div class='controls'>\n<div class='btn-group' data-toggle='buttons'>\n<label class='" + ["btn", "btn-default", "point-btn", "" + t(e(this.comment.isPoint() ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.comment.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(this.comment.isPoint())) + "' value='true'>"),
                            n.push("" + t(e(this.t("edit.map_comment.type.point")))),
                            n.push("</label>\n<label class='" + ["btn", "btn-default", "area-btn", "" + t(e(this.comment.isPoint() ? void 0 : "active"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.comment.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(!this.comment.isPoint())) + "' value='false'>"),
                            n.push("" + t(e(this.t("edit.map_comment.type.area")))),
                            n.push("</label>\n</div>\n</div>\n</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this.comment.attributes))),
                            n.push("<li>" + t(e(this.t("edit.id", {
                                num: this.comment.getID()
                            }))) + "</li>\n</ul>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='preview'>\n<div class='subject-preview'></div>\n<div class='reported-date'>"),
                            n.push("" + t(e(this.createdDate))),
                            n.push("</div>\n<div class='body-preview'></div>\n</div>\n<form class='edit'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control subject-input' type='text'>\n<div class='input-max-length subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='body-textarea form-control'></textarea>\n<div class='body-max-length input-max-length'></div>\n</div>\n</div>\n<button class='apply-button waze-btn waze-btn-blue waze-btn-smaller' type='submit'>"),
                            n.push("" + t(e(this.t("edit.map_comment.name_edit.apply")))),
                            n.push("</button>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["comment-content", "" + t(e(this.isByReporter() ? "reporter" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='comment-title'>\n<span class='username'>" + t(e(this.getUserName())) + "</span>\n<span class='date'>" + t(e(I18n.l("date.formats.long", this.createdOn))) + "</span>\n</div>\n<div class='text'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='no-comments'>"),
                            n.push("" + t(e(this.t("conversation.no_comments")))),
                            n.push("<br>"),
                            n.push("" + t(e(this.t("conversation.ask")))),
                            n.push("</div>\n<ul class='comment-list list-unstyled'></ul>\n<form class='clearfix new-comment-form'>\n<div class='controls-container'>\n<textarea class='form-control new-comment-text' placeholder='" + t(e(this.t("conversation.enter"))) + "' required></textarea>\n<div class='input-max-length new-comment-max-length'></div>\n<button class='send-button waze-btn waze-btn-blue' type='submit'>" + t(e(this.t("conversation.send"))) + "</button>"),
                            n.push("" + e(this.h.checkbox(this.t("conversation.follow"), "follow", "on"))),
                            n.push("</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.isHref)
                            n.push("<a href='" + t(e(this.text)) + "' target='_blank'>" + t(e(this.text)) + "</a>");
                        else
                            for (r = i = 0,
                                s = (o = this.getCommentLines()).length; i < s; r = ++i)
                                a = o[r],
                                n.push("" + t(e(a))),
                                r < this.getCommentNumber() - 1 && n.push("<br>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='elementHistoryContainer'>\n<div class='toggleHistory'>\n<div class='showHistory'>"),
                            n.push("" + t(e(this.t("element_history.show")))),
                            n.push("</div>\n<div class='hideHistory'>"),
                            n.push("" + t(e(this.t("element_history.hide")))),
                            n.push("</div>\n</div>\n<div class='historyContent'>\n<div class='history-message historyEmpty'>"),
                            n.push("" + t(e(this.t("element_history.no_history")))),
                            n.push("</div>\n<div class='transactions'></div>\n<div class='loadingHistory'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='loadMoreContainer'>\n<div class='btn btn-block btn-default loadMoreHistory'>"),
                            n.push("" + t(e(this.t("element_history.load_more")))),
                            n.push("</div>\n</div>\n<div class='history-message historyError'>"),
                            n.push("" + t(e(this.t("element_history.history_error")))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='tx-header'>\n<div class='tx-summary'>\n<div class='tx-author-date'>"),
                            n.push("" + t(e(this.h.dateOnlyString(this.date)))),
                            n.push("" + t(e(this.t("element_history.changed_by")))),
                            n.push("" + e(this.userProfile)),
                            n.push("</div>\n<div class='tx-preview'>"),
                            this.mainObjectAction && (n.push("<div>"),
                                n.push("" + t(e(this.mainObjectAction))),
                                n.push("</div>")),
                            this.previewItems && (n.push("<div>"),
                                n.push("" + t(e(this.previewItems))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='flex-noshrink tx-toggle-closed'></div>\n</div>\n<div class='tx-content'>\n<div class='main-object-region tx-changes'></div>\n<div class='related-objects-region tx-changes'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            r = 0,
                            s = (a = this.changedAttributes).length; r < s; r++)
                            i = a[r],
                            n.push("<li class='" + ["tx-changed-attribute", "" + t(e(i.isVisual ? "ca-visual" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='ca-name'>"),
                            n.push("" + t(e(i.displayName))),
                            n.push("</div>\n<div class='" + ["ca-preview", "ca-" + t(e(i.name))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            i.oldValue && i.newValue ? (n.push("" + t(e(this.t("element_history.changed_from")))),
                                n.push("<span class='ca-value ca-value-old'>"),
                                i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : n.push("" + t(e(i.oldValue))),
                                n.push("</span>\n<span>"),
                                n.push("" + t(e(this.t("element_history.changed_to")))),
                                n.push("</span>\n<span class='ca-value ca-value-new'>"),
                                i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : n.push("" + t(e(i.newValue))),
                                n.push("</span>")) : (i.oldValue && (n.push("<span class='ca-value ca-value-old'>"),
                                    i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : n.push("" + t(e(i.oldValue))),
                                    n.push("</span>\n<span>"),
                                    n.push("" + t(e(this.t("element_history.actions.default.DELETE")))),
                                    n.push("</span>")),
                                i.newValue && (n.push("<span class='ca-value ca-value-new'>"),
                                    i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : n.push("" + t(e(i.newValue))),
                                    n.push("</span>\n<span>"),
                                    n.push("" + t(e(this.t("element_history.actions.default.ADD")))),
                                    n.push("</span>"))),
                            n.push("</div>\n</li>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<span class='ro-name'>"),
                            n.push("" + t(e(this.displayName))),
                            n.push("</span>\n<span class='ro-value'>"),
                            n.push("" + t(e(this.displayValue))),
                            n.push("</span>\n<span class='ro-action'>"),
                            n.push("" + t(e(this.actionText))),
                            n.push("</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='feed-content'>\n<div class='feed-first-time-messages'></div>\n<div class='feed-mentoring'></div>\n<div class='feed-notifications'></div>\n<div class='feed-messages'></div>\n<div class='feed-issues'></div>\n</div>\n<div class='feed-load-section'>\n<div class='feed-loading sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='feed-empty'>\n<div class='feed-empty-message'>"),
                            n.push("" + t(e(this.t("feed.empty")))),
                            n.push("</div>\n<div class='feed-empty-image'></div>\n</div>\n<div class='feed-more'>\n<div class='feed-load-more waze-btn waze-btn-small waze-btn-white'>"),
                            n.push("" + t(e(this.t("feed.load_more")))),
                            n.push("</div>\n<div class='feed-loading-more sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n</div>\n<div class='feed-first-time-load'>\n<div class='feed-loading-text-container'>\n<div class='feed-loading-first-time-text'>" + t(e(this.t("feed.load_first_time"))) + "</div>\n<div class='dots-animation'></div>\n</div>\n<div class='feed-loading-first sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='toggle'>\n<a class='counter' href='#'></a>\n<span class='icon-toggle'></span>\n</div>\n<ul class='feed-list'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='inner'>\n<div class='delete'></div>\n<div class='icon_container'>\n<div class='icon'></div>\n</div>\n<div class='save-alert'></div>\n<div class='content'>\n<div class='title'>\n<span class='type'>" + t(e(this.type)) + "</span>\n<span class='timestamp'>"),
                            n.push("      " + t(e(this.timestamp))),
                            n.push("</span>\n</div>\n<div class='subtext'>"),
                            this.place && n.push("<span class='place'>" + t(e("" + this.place)) + "</span>"),
                            this.street && (this.place && n.push("<span>" + t(e(", ")) + "</span>"),
                                n.push("<span class='street'>" + t(e("" + this.street)) + "</span>")),
                            this.city && n.push("<span class='city'>" + t(e(", " + this.city)) + "</span>"),
                            this.state && n.push("<span class='state'>" + t(e(", " + this.state)) + "</span>"),
                            this.country && n.push("<span class='country'>" + t(e(", " + this.country)) + "</span>"),
                            n.push("</div>"),
                            this.motivation && (n.push("<div class='motivation'>"),
                                n.push("" + t(e(this.motivation))),
                                n.push("</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='inner'>\n<div class='delete'></div>\n<div class='image'></div>\n<div class='content'>\n<div class='title'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>\n<div class='from'>"),
                            n.push("" + t(e(this.t("feed.messages.from")))),
                            n.push("<div class='sender'>"),
                            n.push("" + t(e(this.sender))),
                            n.push("</div>\n</div>\n<div class='timestamp'>"),
                            n.push("    " + t(e(this.timestamp))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='header'>\n<div class='buttons'>\n<div class='close-panel'></div>\n<div class='delete'></div>\n</div>\n<div class='title'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>\n<div class='timestamp'>"),
                            n.push("" + t(e(this.timestamp))),
                            n.push("</div>\n</div>\n<div class='body'>"),
                            this.imageURL && n.push("<section class='image'>\n<img src='" + t(e(this.imageURL)) + "'>\n</section>"),
                            this.subject && n.push("<section class='heading'>\n<h2>" + t(e(this.subject)) + "</h2>\n</section>"),
                            this.sender && (n.push("<section class='sender'>"),
                                n.push("" + t(e(this.t("feed.messages.from")))),
                                n.push("<a href='" + t(e(this.senderURL)) + "' target='_blank'>" + t(e(this.sender)) + "</a>\n</section>")),
                            n.push("<section class='content'>"),
                            n.push("" + t(e(this.message))),
                            n.push("</section>"),
                            this.linkText && n.push("<section class='link'>\n<a href='" + t(e(this.linkURL)) + "' target='_blank'>" + t(e(this.linkText)) + "</a>\n</section>"),
                            n.push("</div>\n<div class='footer'>\n<section class='buttons'>"),
                            this.buttonText && (n.push("<a class='waze-plain-btn' href='" + t(e(this.buttonURL)) + "' target='_blank'>"),
                                n.push("" + t(e(this.buttonText))),
                                n.push("</a>")),
                            this.secondButtonText && (n.push("<a class='waze-plain-btn' href='" + t(e(this.secondButtonURL)) + "' target='_blank'>"),
                                n.push("" + t(e(this.secondButtonText))),
                                n.push("</a>")),
                            this.hasNext ? (n.push("<div class='next waze-plain-btn'>"),
                                n.push("" + t(e(this.t("feed.details.next")))),
                                n.push("</div>")) : (n.push("<div class='done waze-plain-btn'>"),
                                n.push("" + t(e(this.t("feed.details.done")))),
                                n.push("</div>")),
                            n.push("</section>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='inner'>\n<div class='delete'></div>\n<div class='image_container'>\n<div class='image'></div>\n</div>\n<div class='content'>\n<div class='title'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>\n<div class='subtext'>"),
                            n.push("" + t(e(this.shortMessage))),
                            n.push("</div>\n<div class='timestamp'>"),
                            n.push("    " + t(e(this.timestamp))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='geolocation-control-container'>\n<button class='pan-button'>\n<span></span>\n</button>\n<button class='btn btn-default loading' disabled='" + t(e(!0)) + "'>\n<span class='fa-spin'></span>\n</button>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='direction-lanes'>\n<div class='lane-instruction lane-instruction-from'>\n<div class='drawing'>\n<div class='line'></div>\n<div class='letter-circle'></div>\n</div>\n<div class='instruction'>\n<div class='instruction-text'>\n<span class='heading'></span>\n<span class='street-name'></span>\n</div>\n</div>\n</div>\n<div class='lane-instruction lane-instruction-to'>\n<div class='drawing'>\n<div class='letter-circle'></div>\n<div class='uncovered-turn-badge waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("lanes.uncovered_turn"))) + "'></div>\n</div>\n<div class='instruction'>\n<div class='instruction-text'>" + t(e(this.t("lanes.reach_intersection"))) + "</div>\n<div class='lane-arrows'></div>\n<div class='lane-edit'>\n<div>\n<span class='edit-lane-guidance'></span>\n</div>\n<div class='edit-region'></div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls direction-lanes-edit'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("lanes.lane_count"))) + "</label>\n<input class='form-control' type='number' size='" + t(e(3)) + "' name='laneCount' min='" + t(e(0)) + "' max='" + t(e(32)) + "'>\n</div>\n<div class='form-group turns'>\n<label class='control-label'>" + t(e(this.t("lanes.turns"))) + "</label>\n<div class='controls-container turns-region'></div>\n</div>\n<div class='alert alert-gray warning'></div>\n<hr>\n<div class='button-container'>\n<span class='cancel-button'>" + t(e(this.t("lanes.buttons.cancel"))) + "</span>\n<button class='apply-button waze-btn waze-btn-blue'>" + t(e(this.t("lanes.buttons.apply"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='empty-badge waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("lanes.empty_lane"))) + "'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<label class='control-label'>" + t(e(this.t("lanes.title"))) + "</label>\n<div class='fwd-lanes'></div>\n<div class='rev-lanes'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<input class='checkbox-large checkbox-white' type='checkbox' name='lane'>\n<label></label>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='left-turn-lanes-part'></div>\n<div class='right-turn-lanes-part'>\n<div class='street-name'></div>\n<div class='checkboxes-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            i = "layer-switcher-" + this.id.toLowerCase(),
                            n.push("<div class='" + ["toggler", "controls-container", "" + t(e(this.classes))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='" + ["toggle", "" + t(e(i))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' id='" + t(e(i)) + "' type='checkbox'>\n<label for='" + t(e(i)) + "'>\n<span class='label-text'>" + t(e(this.t("layer_switcher.togglers." + this.id))) + "</span>\n</label>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='layer-switcher-container'>\n<div class='toolbar-button waze-btn waze-btn-white waze-icon-layers'></div>\n<div class='menu not-visible'>\n<div class='more-options-toggle'>\n<label>\n<div class='title'></div>\n<input type='checkbox' name='show-more-options'>\n</label>\n<div class='pinned text-checkbox'>\n<input id='layer-switcher-pinned-input' type='checkbox' name='pinned'>\n<label for='layer-switcher-pinned-input' title='" + t(e(this.t("Pin layer switcher"))) + "'>\n<i class='waze-icon-pin'></i>\n</label>\n</div>\n</div>\n<div class='scrollable'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/LayerSwitcher/templates/togglers-tree"))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='layer-switcher-container'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r, s, a, o, l, u, d;
                        for (e = this.__cleanValue,
                            t = [],
                            i = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/checkbox",
                            s = 0,
                            o = (r = n(44).getLayerSwitcherConfig()).length; s < o; s++)
                            for (a = 0,
                                l = (u = r[s].togglers).length; a < l; a++)
                                (d = u[a]).parent === this.id && (t.push("<li>"),
                                    d.template ? t.push("" + e(this.renderPartial(d.template))) : t.push("" + e(this.renderPartial(i, {
                                        id: d.id
                                    }))),
                                    t.push("</li>"));
                        return t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    var i = {
        "./Cities/Manifest": 846,
        "./Comments/Manifest": 908
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 845
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r, s = v(n(15)),
        a = n(367),
        o = v(n(847)),
        l = v(n(368)),
        u = v(n(848)),
        d = v(n(906)),
        c = v(n(44)),
        h = v(n(907)),
        f = v(n(389)),
        p = v(n(147)),
        g = v(n(199));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = c.default.LAYER_TYPE,
        _ = {
            entryPoint: {
                callback: "init",
                class: h.default
            },
            feature: {
                repositoryName: "cities",
                repositoryClass: u.default,
                featureType: a.OBJECT_TYPE,
                modelClass: l.default,
                featureEditorClass: d.default,
                repositoryConfig: {
                    onDemand: !1,
                    storePersistentSeparately: !0
                }
            },
            layers: [{
                type: m.FEATURE,
                uniqueName: a.FEATURES_LAYER_NAME,
                options: {
                    objectType: a.OBJECT_TYPE,
                    selectable: !0,
                    visibleByDefault: !1
                }
            }, {
                type: m.MARKER,
                uniqueName: a.MARKERS_LAYER_NAME,
                options: {
                    name: I18n.t("layers.name.city_names"),
                    objectType: a.OBJECT_TYPE,
                    visibleByDefault: !1,
                    markerClass: o.default,
                    filter: function(e) {
                        return e.showMarker()
                    }
                }
            }, {
                type: m.RASTER,
                uniqueName: a.RASTER_LAYER_NAME,
                options: {
                    uniqueName: "cities",
                    visible: !1,
                    type: "mapnik",
                    options: {
                        alpha: !1,
                        opacity: 1,
                        transitionEffect: null,
                        isBaseLayer: !1,
                        zoomOffset: 12,
                        draggable: !0,
                        gutter: 0
                    },
                    params: {
                        clientLayer: "cities"
                    }
                }
            }],
            layerSwitcher: {
                togglers: [{
                    parent: a.GROUP_DISPLAY,
                    toggler: f.default.of(a.GROUP_CITIES, [p.default.of(a.ITEM_CITY_NAMES, new g.default(a.MARKERS_LAYER_NAME))], new g.default(a.RASTER_LAYER_NAME)),
                    template: "Waze/MapEditor/UI/Modules/Cities/templates/layer_switcher"
                }],
                defaultVisibility: (i = {},
                    (0,
                        s.default)(i, a.GROUP_CITIES, !1),
                    (0,
                        s.default)(i, a.ITEM_CITY_NAMES, !1),
                    i),
                bitNumbers: (r = {},
                    (0,
                        s.default)(r, a.GROUP_CITIES, 27),
                    (0,
                        s.default)(r, a.ITEM_CITY_NAMES, 28),
                    r)
            }
        };
    t.default = _,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(31),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = OL.Class(OL.Marker, {
            initialize: function(e) {
                return this.model = e,
                    this.icon = new s.default("city-name-marker"),
                    this.lonlat = e.attributes.geometry.toLonLat(),
                    OL.Marker.prototype.initialize.call(this, this.lonlat, this.icon),
                    this.render(),
                    this
            },
            render: function() {
                this.icon.div.textContent = this.model.attributes.name,
                    this.icon.div.attributes.cityId = this.model.getID()
            },
            highlight: function() {
                this.icon.div.classList.add("selected")
            },
            unhighlight: function() {
                this.icon.div.classList.remove("selected")
            }
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(7)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(86)),
        d = c(n(186));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e, n));
            return i.descartes = new d.default(W.map),
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getByAttributes",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = (0,
                            i.default)(e);
                    return 0 === t.length ? [] : this.getObjectArray().filter(function(n) {
                        return t.every(function(t) {
                            return n.attributes[t] === e[t]
                        })
                    })
                }
            }, {
                key: "getValidCities",
                value: function() {
                    return this.getObjectArray().filter(function(e) {
                        return e.hasName() && !e.isEmpty()
                    })
                }
            }, {
                key: "getCityExists",
                value: function(e, t, n) {
                    var i;
                    return (i = this.descartes).getCityExists.apply(i, Array.prototype.slice.call(arguments).concat([this.currentDataBounds]))
                }
            }]),
            t
    }(u.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    n(850),
        e.exports = n(12).Object.values
}, function(e, t, n) {
    var i = n(21),
        r = n(356)(!1);
    i(i.S, "Object", {
        values: function(e) {
            return r(e)
        }
    })
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t, n) {
            (0,
                r.default)(this, e);
            var i = isNaN(t) ? 0 : t;
            this.step = isNaN(n) || 0 === n ? 1 : n,
                this.lastValue = i - this.step
        }
        return (0,
                s.default)(e, [{
                key: "last",
                value: function() {
                    return this.lastValue
                }
            }, {
                key: "next",
                value: function() {
                    return this.lastValue += this.step,
                        this.lastValue
                }
            }, {
                key: "peek",
                value: function() {
                    return this.lastValue + this.step
                }
            }]),
            e
    }();
    (0,
        i.default)(o.prototype, {
        CLASS_NAME: "Waze.Model.IDGenerator"
    }),
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.TYPE_TO_CLASS = t.TYPE_TO_FACTORY = void 0;
    var i = n(187),
        r = S(n(859)),
        s = S(n(883)),
        a = S(n(886)),
        o = S(n(37)),
        l = S(n(379)),
        u = S(n(892)),
        d = S(n(893)),
        c = S(n(894)),
        h = S(n(143)),
        f = S(n(103)),
        p = S(n(197)),
        g = S(n(384)),
        v = S(n(898)),
        m = S(n(386)),
        _ = S(n(387)),
        y = S(n(899)),
        b = S(n(900)),
        w = S(n(144)),
        k = S(n(145)),
        E = S(n(388)),
        M = S(n(146));

    function S(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.TYPE_TO_FACTORY = {
            issues: r.default,
            problems: s.default,
            problemDetails: a.default
        },
        t.TYPE_TO_CLASS = {
            segments: o.default,
            nodes: l.default,
            bigJunctions: i.BigJunction,
            updateRequestSessions: u.default,
            archives: d.default,
            archiveSessions: c.default,
            venues: h.default,
            users: f.default,
            cameras: p.default,
            mapUpdateRequests: g.default,
            houseNumbers: v.default,
            roadClosures: m.default,
            junctions: _.default,
            managedAreas: y.default,
            userAreas: b.default,
            notifications: w.default,
            majorTrafficEvents: k.default,
            restrictedAreas: E.default,
            transactions: M.default
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(854)),
        o = l(n(34));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this._bigJunction = t,
                this._dataModel = this._bigJunction.model
        }
        return (0,
                s.default)(e, [{
                key: "getAllTurns",
                value: function() {
                    var e = this,
                        t = [];
                    return this._getEntryVertices().forEach(function(n) {
                            var i = new a.default(e._dataModel);
                            e._findAllTurns(n, i, {}, t)
                        }),
                        t
                }
            }, {
                key: "_findAllTurns",
                value: function(e, t, n, i) {
                    var r = this;
                    i.length >= this.MAX_TURNS || (n[e] = !0,
                        t.appendVertex(e),
                        this._getConnectedVertices(e).forEach(function(e) {
                            var s = r._dataModel.segments.getObjectById(e.getSegmentID());
                            r._isSegmentOutOfBigJunction(s) ? (t.appendVertex(e),
                                t.isPathLegal() && i.push(t.build()),
                                t.removeLastVertex()) : n[e] || r._findAllTurns(e, t, n, i)
                        }),
                        t.removeLastVertex(),
                        n[e] = !1)
                }
            }, {
                key: "_getConnectedVertices",
                value: function(e) {
                    var t = this._dataModel.getRoadGraph();
                    return t.getConnectedVertices(e).filter(function(n) {
                        return t.isTurnLegal(e, n)
                    })
                }
            }, {
                key: "_getEntryVertices",
                value: function() {
                    var e = [],
                        t = this._bigJunction.getID();
                    return this._getAccessSegments().forEach(function(n) {
                            var i = null;
                            if (n.hasFromBigJunction(t) && n.attributes.revDirection ? i = !1 : n.hasToBigJunction(t) && n.attributes.fwdDirection && (i = !0),
                                null !== i) {
                                var r = o.default.forwardOf(n.getID());
                                !1 === i && (r = r.getOpposite()),
                                    e.push(r)
                            }
                        }),
                        e
                }
            }, {
                key: "_getAccessSegments",
                value: function() {
                    var e = [];
                    return this._bigJunction.getShortSegments().forEach(function(t) {
                            e = (e = e.concat(t.getConnectedSegmentsByDirection("from"))).concat(t.getConnectedSegmentsByDirection("to"))
                        }),
                        e = e.filter(this._isSegmentOutOfBigJunction.bind(this)),
                        _.uniq(e, function(e) {
                            return e.getID()
                        })
                }
            }, {
                key: "_isSegmentOutOfBigJunction",
                value: function(e) {
                    return !e.isBigJunctionShort() && e.isDrivable()
                }
            }]),
            e
    }();
    (0,
        i.default)(u.prototype, {
        MAX_PATHS: 100
    }),
    u.for = function(e) {
            return new u(e)
        },
        t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(9)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(88)),
        o = l(n(190));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this._dataModel = t,
                this._vertices = []
        }
        return (0,
                s.default)(e, [{
                key: "appendVertex",
                value: function(e) {
                    return this._vertices.push(e)
                }
            }, {
                key: "removeLastVertex",
                value: function() {
                    return this._vertices.pop()
                }
            }, {
                key: "isPathLegal",
                value: function() {
                    return this._vertices.length >= 2 && !this._trivialConnectionExists()
                }
            }, {
                key: "_trivialConnectionExists",
                value: function() {
                    var e = _.first(this._vertices),
                        t = _.last(this._vertices),
                        n = this._dataModel.getTurnGraph().getTurn(e, t);
                    return this._dataModel.getRoadGraph().isTurnLegal(e, t) && this._dataModel.getRoadGraph().areVerticesConnected(e, t) && n.getTurnData().isAllowed()
                }
            }, {
                key: "build",
                value: function() {
                    var e = _.first(this._vertices),
                        t = _.last(this._vertices),
                        n = this._getShortSegmentIDs(),
                        i = this._dataModel.getTurnGraph().getTurn(e, t);
                    if (_.isEqual(i.getTurnData().getSegmentPath(), n) && !i.getTurnData().isUnknown())
                        return i;
                    var r = this._isPathAllowed() ? a.default.State.ALLOWED : a.default.State.DISALLOWED,
                        s = a.default.create(r, this._getRestrictions(), null, n);
                    return new o.default(e, t, s)
                }
            }, {
                key: "_isPathAllowed",
                value: function() {
                    var e = this,
                        t = this._dataModel.getTurnGraph();
                    return this._vertices.slice(0, -1).every(function(n, i, r) {
                        return t.getTurn(n, e._vertices[i + 1]).getTurnData().isAllowed()
                    })
                }
            }, {
                key: "_getShortSegmentIDs",
                value: function() {
                    return this._vertices.slice(1, -1).map(function(e) {
                        return e.getSegmentID()
                    })
                }
            }, {
                key: "_getRestrictions",
                value: function() {
                    var e = this,
                        t = this._dataModel.getTurnGraph(),
                        n = [];
                    return this._vertices.forEach(function(t) {
                            var r, s = e._dataModel.segments.getDirectedSegment(t);
                            (r = n).push.apply(r, (0,
                                i.default)(s.getDrivingRestrictions()))
                        }),
                        n = n.map(function(e) {
                            return e.withoutDirection()
                        }),
                        this._vertices.slice(0, -1).forEach(function(r, s) {
                            var a, o = e._vertices[s + 1],
                                l = t.getTurn(r, o);
                            (a = n).push.apply(a, (0,
                                i.default)(l.getTurnData().getRestrictions()))
                        }),
                        n.filter(function(e, t) {
                            return _.findIndex(n, function(t) {
                                return t.equals(e)
                            }) === t
                        })
                }
            }]),
            e
    }();
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    n(856),
        e.exports = n(12).Object.freeze
}, function(e, t, n) {
    var i = n(26),
        r = n(98).onFreeze;
    n(135)("freeze", function(e) {
        return function(t) {
            return e && i(t) ? e(r(t)) : t
        }
    })
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.RestrictionDriveProfileList = void 0;
    var i = o(n(68)),
        r = o(n(0)),
        s = o(n(1)),
        a = o(n(139));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.RestrictionDriveProfileList = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = (t.restrictionType,
                    t.driveProfiles),
                s = void 0 === n ? [] : n;
            (0,
                r.default)(this, e),
            this._driveProfiles = s.map(function(e) {
                    return new a.default(e)
                }),
                (0,
                    i.default)(this)
        }
        return (0,
                s.default)(e, [{
                key: "equals",
                value: function(e) {
                    return this._driveProfiles.every(function(t) {
                        return e._driveProfiles.some(function(e) {
                            return e.equals(t)
                        })
                    })
                }
            }, {
                key: "toJSON",
                value: function() {
                    return this._driveProfiles.map(function(e) {
                        return e.toJSON()
                    })
                }
            }, {
                key: "isAllVehicles",
                value: function() {
                    return 0 === this._driveProfiles.length || this._driveProfiles.some(function(e) {
                        return e.isAllVehicles()
                    })
                }
            }, {
                key: "getDriveProfiles",
                value: function() {
                    return this._driveProfiles.slice()
                }
            }, {
                key: "isEmpty",
                value: function() {
                    return 0 === this._driveProfiles.length
                }
            }]),
            e
    }()
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(68),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Backbone.Model.extend({
        constructor: function() {
            Backbone.Model.prototype.constructor.apply(this, arguments),
                (0,
                    s.default)(this.attributes),
                this.set = this._error
        },
        _error: function() {
            throw new TypeError("Cannot change attributes of an immutable object")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = u(n(15)),
        s = u(n(70)),
        a = u(n(860)),
        o = u(n(880)),
        l = u(n(881));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = s.default.prototype.TYPE,
        c = {
            TYPE_TO_CLASS: (i = {},
                (0,
                    r.default)(i, d.MAP_PROBLEM, a.default),
                (0,
                    r.default)(i, d.VENUE_UPDATE_REQUEST, o.default),
                (0,
                    r.default)(i, d.UPDATE_REQUEST, l.default),
                i),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.type])(e)
            }
        };
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(70)),
        r = s(n(104));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = i.default.extend({
        _isModified: function() {
            return this.attributes.problem.isUpdated()
        },
        _isResolved: function() {
            return !this.attributes.problem.attributes.open
        },
        getSeverity: function() {
            return this.attributes.problem.attributes.severity
        },
        getFeedIssueState: function() {
            return this.attributes.problem ? new r.default(this.attributes.problem).getState() : "open"
        }
    });
    a.prototype.defaults = _.extend({
            problem: null
        }, i.default.prototype.defaults),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this.info = t,
                this.layer = n,
                this.displayOptions = r
        }
        return (0,
                r.default)(e, [{
                key: "drawMoreInfo",
                value: function() {
                    return this.layer.removeAllFeatures({
                            silent: !0
                        }),
                        this._drawSessions()
                }
            }, {
                key: "_drawSessions",
                value: function() {
                    return this._drawMatchingSegments(),
                        this.displayOptions.allSessions && this._drawAllSessions(),
                        this.displayOptions.averageSession && this._drawAverageSession(),
                        this._drawPins()
                }
            }, {
                key: "_drawMatchingSegments",
                value: function() {
                    if (this.info.average.nextSegGeom && this.layer.driveRenderer.drawMatchedSegment(this.info.average.nextSegGeom),
                        this.info.average.prevSegGeom)
                        return this.layer.driveRenderer.drawMatchedSegment(this.info.average.prevSegGeom)
                }
            }, {
                key: "_drawAllSessions",
                value: function() {
                    var e = this;
                    return this.info.sessions.map(function(t) {
                        return t.geometry.components.map(function(t) {
                            return e.layer.driveRenderer.drawSession(t)
                        })
                    })
                }
            }, {
                key: "_drawAverageSession",
                value: function() {
                    if (this.info.average.geometry)
                        return this.layer.driveRenderer.drawDisconnect(this.info.average.geometry.components[1]),
                            this.layer.driveRenderer.drawUserDrive(this.info.average.geometry.components[0]),
                            this.layer.driveRenderer.drawUserDrive(this.info.average.geometry.components[2])
                }
            }, {
                key: "_drawPins",
                value: function() {
                    var e = _.last(this.info.average.prevSegGeom.getVertices(!0)),
                        t = this.info.average.nextSegGeom.getVertices(!0)[0];
                    if (!e.equals(t))
                        return this.layer.driveRenderer.drawPin(e, "A"),
                            this.layer.driveRenderer.drawPin(t, "B")
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            available: !0,
            visible: !0
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(22)),
        u = d(n(191));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "generateDescription",
                value: function() {
                    this.object.attributes.open ? this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.open") : this.object.attributes.resolution === u.default.FIXED ? this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.solved") : this.object.attributes.resolution === u.default.NOT_A_PROBLEM && (this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.not_identified"))
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = {
        default: n(865),
        __esModule: !0
    }
}, function(e, t, n) {
    n(866);
    var i = n(12).Object;
    e.exports = function(e, t) {
        return i.getOwnPropertyDescriptor(e, t)
    }
}, function(e, t, n) {
    var i = n(33),
        r = n(100).f;
    n(135)("getOwnPropertyDescriptor", function() {
        return function(e, t) {
            return r(i(e), t)
        }
    })
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        SPEED_CAMERA: 1
    };
    t.FLAGS = {
            TUNNEL: 1,
            BRIDGE: 2,
            PRIVATE: 4,
            FERRY: 8,
            UNPAVED: 16,
            HEADLIGHTS: 32,
            NEARBY_HOV: 128
        },
        t.FWD = i,
        t.REV = i
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e(e, t, n) {
            this.dataModel = e,
                this.angles = t.slice(),
                this.toSegmentIDs = n.slice()
        }
        return e.prototype.getToSegmentIDs = function() {
                return this.toSegmentIDs
            },
            e.prototype.getAngles = function() {
                return this.angles
            },
            e.prototype.isEmpty = function() {
                return 0 === this.angles.length || 0 === this.toSegmentIDs.length
            },
            e.prototype.getToSegments = function() {
                var e = this;
                return this.toSegmentIDs.map(function(t) {
                    return e.dataModel.segments.getObjectById(t)
                })
            },
            e
    }();
    t.default = i
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(62)),
        r = d(n(6)),
        s = d(n(870)),
        a = d(n(120)),
        o = d(n(0)),
        l = d(n(1)),
        u = n(54);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function() {
        function e(t, n, i) {
            (0,
                o.default)(this, e),
            this._vertexInfo = new a.default,
                this._fromAzimuth = t,
                this._fromRoadType = n,
                this._fromStreetIDs = i
        }
        return (0,
                l.default)(e, [{
                key: "addOutgoingVertex",
                value: function(e) {
                    var t = e.toVertex,
                        n = e.azimuth,
                        i = e.roadType,
                        r = e.streetIDs,
                        s = {
                            id: t.toString(),
                            roadType: i,
                            streetIDs: r,
                            azimuth: n,
                            rawAngle: this._calcRawAngle(this._fromAzimuth, n),
                            snappedAngle: null
                        };
                    s.similarity = this._vertexSimilarity(s),
                        this._setVertexInfo(s)
                }
            }, {
                key: "_setVertexInfo",
                value: function(e) {
                    this._vertexInfo.set(e.id, e)
                }
            }, {
                key: "_calcRawAngle",
                value: function(e, t) {
                    var n = (0,
                        u.toStandardLaneAngle)(t - e);
                    return n = (0,
                        u.toStandardLaneAngle)(180 - n)
                }
            }, {
                key: "snapAngles",
                value: function() {
                    var e = this;
                    this._vertexInfo.forEach(function(e) {
                            var t = (0,
                                u.toStandardLaneAngle)(45 * Math.round(e.rawAngle / 45));
                            e.snappedAngle = t
                        }),
                        this._resolveZeroAngleConflicts().forEach(function(t) {
                            e._setVertexInfo(t)
                        })
                }
            }, {
                key: "_resolveZeroAngleConflicts",
                value: function() {
                    var e = this,
                        t = this._getVertexesBySnappedAngle(0),
                        n = [];
                    if (t.length > 1) {
                        var i = this._sortVertexesBySimilarity(t),
                            a = (0,
                                s.default)(i),
                            o = a[0];
                        n = a.slice(1).map(function(t) {
                            var n = e._isLeftTurn(o.rawAngle, t.rawAngle) ? -45 : 45;
                            return (0,
                                r.default)({}, t, {
                                snappedAngle: n
                            })
                        })
                    }
                    return n
                }
            }, {
                key: "getSnappedAngle",
                value: function(e) {
                    return this._vertexInfo.get(e.toString()).snappedAngle
                }
            }, {
                key: "getRawAngle",
                value: function(e) {
                    return this._vertexInfo.get(e.toString()).rawAngle
                }
            }, {
                key: "_getVertexesBySnappedAngle",
                value: function(e) {
                    return (0,
                        i.default)(this._vertexInfo.values()).filter(function(t) {
                        return t.snappedAngle === e
                    })
                }
            }, {
                key: "_vertexSimilarity",
                value: function(e) {
                    var t = _.intersection(e.streetIDs, this._fromStreetIDs).length > 0,
                        n = e.roadType === this._fromRoadType,
                        i = 0;
                    t && i++,
                        n && i++;
                    var r = (0,
                        u.toStandardLaneAngle)(this._fromAzimuth - 180);
                    return i += 1 - Math.abs(r - e.azimuth) / 360
                }
            }, {
                key: "_sortVertexesBySimilarity",
                value: function(e) {
                    return _.sortBy(e, function(e) {
                        return -e.similarity
                    })
                }
            }, {
                key: "_isLeftTurn",
                value: function(e, t) {
                    return (0,
                        u.toStandardLaneAngle)(t) < (0,
                        u.toStandardLaneAngle)(e)
                }
            }]),
            e
    }();
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    t.__esModule = !0;
    var i, r = n(62),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = function(e) {
        return Array.isArray(e) ? e : (0,
            s.default)(e)
    }
}, function(e, t, n) {
    n(101),
        n(55),
        n(67),
        n(872),
        n(876),
        n(878),
        n(879),
        e.exports = n(12).Map
}, function(e, t, n) {
    "use strict";
    var i = n(373),
        r = n(194);
    e.exports = n(374)("Map", function(e) {
        return function() {
            return e(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        get: function(e) {
            var t = i.getEntry(r(this, "Map"), e);
            return t && t.v
        },
        set: function(e, t) {
            return i.def(r(this, "Map"), 0 === e ? 0 : e, t)
        }
    }, i, !0)
}, function(e, t, n) {
    var i = n(46),
        r = n(115),
        s = n(66),
        a = n(97),
        o = n(874);
    e.exports = function(e, t) {
        var n = 1 == e,
            l = 2 == e,
            u = 3 == e,
            d = 4 == e,
            c = 6 == e,
            h = 5 == e || c,
            f = t || o;
        return function(t, o, p) {
            for (var g, v, m = s(t), _ = r(m), y = i(o, p, 3), b = a(_.length), w = 0, k = n ? f(t, b) : l ? f(t, 0) : void 0; b > w; w++)
                if ((h || w in _) && (v = y(g = _[w], w, m),
                        e))
                    if (n)
                        k[w] = v;
                    else if (v)
                switch (e) {
                    case 3:
                        return !0;
                    case 5:
                        return g;
                    case 6:
                        return w;
                    case 2:
                        k.push(g)
                }
            else if (d)
                return !1;
            return c ? -1 : u || d ? d : k
        }
    }
}, function(e, t, n) {
    var i = n(875);
    e.exports = function(e, t) {
        return new(i(e))(t)
    }
}, function(e, t, n) {
    var i = n(26),
        r = n(133),
        s = n(23)("species");
    e.exports = function(e) {
        var t;
        return r(e) && ("function" != typeof(t = e.constructor) || t !== Array && !r(t.prototype) || (t = void 0),
                i(t) && null === (t = t[s]) && (t = void 0)),
            void 0 === t ? Array : t
    }
}, function(e, t, n) {
    var i = n(21);
    i(i.P + i.R, "Map", {
        toJSON: n(375)("Map")
    })
}, function(e, t, n) {
    var i = n(116);
    e.exports = function(e, t) {
        var n = [];
        return i(e, !1, n.push, n, t),
            n
    }
}, function(e, t, n) {
    n(376)("Map")
}, function(e, t, n) {
    n(377)("Map")
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(70),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend({
        _isModified: function() {
            return this.attributes.initialApproved !== this.attributes.updateRequest.get("approved")
        },
        _isResolved: function() {
            return null !== this.attributes.updateRequest.get("approved")
        },
        getSeverity: function() {
            return this.attributes.updateRequest.getSeverity()
        },
        getFeedIssueState: function() {
            if (!this.attributes.updateRequest)
                return "open";
            var e = this.attributes.updateRequest.attributes.approved;
            return e ? "approved" : !1 === e ? "rejected" : "open"
        }
    });
    a.prototype.defaults = _.extend({
            venue: null,
            updateRequest: null,
            initialApproved: null
        }, s.default.prototype.defaults),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(70)),
        r = s(n(378));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = i.default.extend({
        initialized: function() {
            this.set("state", this.getState())
        },
        _isModified: function() {
            return this.attributes.updateRequest.isUpdated()
        },
        _isResolved: function() {
            return !this.attributes.updateRequest.attributes.open
        },
        getSeverity: function() {
            return this.attributes.updateRequest.attributes.severity
        },
        getFeedIssueState: function() {
            return this.attributes.updateRequest ? new r.default(this.attributes.updateRequest).getState() : "open"
        }
    });
    a.prototype.defaults = _.extend({
            updateRequest: null
        }, i.default.prototype.defaults),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this.info = t,
                this.layer = n,
                this.displayOptions = r
        }
        return (0,
                r.default)(e, [{
                key: "drawMoreInfo",
                value: function() {
                    if (this.layer.removeAllFeatures({
                            silent: !0
                        }),
                        this.displayOptions.drive && this._drawUserDrive(),
                        this.displayOptions.route)
                        return this._drawRoute()
                }
            }, {
                key: "_drawUserDrive",
                value: function() {
                    if (this.info.driveGeometry)
                        for (var e = 0; e < this.info.driveGeometry.components.length; e++) {
                            var t = this.info.driveGeometry.components[e];
                            this.layer.driveRenderer.drawUserDrive(t)
                        }
                }
            }, {
                key: "_drawRoute",
                value: function() {
                    var e = this;
                    if (this.info.routeGeometry)
                        return this.info.routeGeometry.components.map(function(t) {
                            return e.layer.driveRenderer.drawSuggestedRoute(t),
                                e.layer.driveRenderer.drawRouteInstructions(t, e.info.getRouteInstructions())
                        })
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = l(n(15)),
        s = l(n(121)),
        a = l(n(884)),
        o = l(n(885));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = s.default.prototype.TYPE,
        d = {
            TYPE_TO_CLASS: (i = {},
                (0,
                    r.default)(i, u.DISCONNECTION, s.default),
                (0,
                    r.default)(i, u.TURN, a.default),
                (0,
                    r.default)(i, u.DATA, s.default),
                (0,
                    r.default)(i, u.ROAD_CLOSURE, o.default),
                i),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.problemType])(e, {
                    parse: !0
                })
            }
        };
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e, n));
            return i.editable = i.attributes.open,
                i.attributes.reroutePercent = i.reroutePercent(),
                i.setSeverity(i.attributes.priority),
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "reroutePercent",
                value: function() {
                    return (this.attributes.reroutesCounter / (this.attributes.reroutesCounter + this.attributes.routesCounter) * 100).toFixed(0)
                }
            }, {
                key: "setSeverity",
                value: function(e) {
                    var t = "high";
                    t = -1 === e ? "low" : this.attributes.reroutePercent >= 90 ? "high" : "medium",
                        this.attributes.severity = t
                }
            }]),
            t
    }(u(n(121)).default);
    (0,
        i.default)(d.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.TurnProblem"
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e, n));
            return i._location = null,
                i._calcLocation(),
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "_calcLocation",
                value: function() {
                    this.hasEndPoint() ? this._location = this._getMiddlePoint() : this._location = this.attributes.geometry
                }
            }, {
                key: "_getMiddlePoint",
                value: function() {
                    return this.attributes.geometry.clone().resize(.5, this.attributes.endPoint)
                }
            }, {
                key: "hasEndPoint",
                value: function() {
                    return null != this.attributes.endPoint
                }
            }, {
                key: "getLocation",
                value: function() {
                    return this._location
                }
            }]),
            t
    }(u(n(121)).default);
    (0,
        i.default)(d.prototype, {
        nested: {
            geometry: OL.Geometry,
            bounds: OL.Geometry,
            endPoint: OL.Geometry
        }
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = l(n(15)),
        s = l(n(887)),
        a = l(n(889)),
        o = l(n(891));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = l(n(121)).default.prototype.TYPE,
        d = {
            TYPE_TO_CLASS: (i = {},
                (0,
                    r.default)(i, u.DISCONNECTION, s.default),
                (0,
                    r.default)(i, u.TURN, a.default),
                (0,
                    r.default)(i, u.DATA, o.default),
                i),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.problemType])(e, {
                    parse: !0
                })
            }
        };
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(888));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        nested: {
            sessions: l.default,
            average: l.default
        }
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(2)),
        s = l(n(0)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l(n(17)).default);
    (0,
        i.default)(u.prototype, {
        nested: {
            geometry: OL.Geometry,
            nextSegGeom: OL.Geometry,
            prevSegGeom: OL.Geometry
        }
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(890));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        nested: {
            routeNextSeg: OL.Geometry,
            routePrevSeg: OL.Geometry,
            alternatives: l.default
        }
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(2)),
        s = l(n(0)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l(n(17)).default);
    (0,
        i.default)(u.prototype, {
        nested: {
            averageGeom: OL.Geometry
        }
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(2)),
        s = l(n(0)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l(n(17)).default);
    (0,
        i.default)(u.prototype, {
        nested: {
            segmentGeom: OL.Geometry,
            secondarySegmentGeom: OL.Geometry,
            venueGeom: OL.Geometry
        }
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(17)),
        d = n(30);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).instructions,
                n = void 0 === e ? null : e;
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return i.instructions = n,
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getRouteInstructions",
                value: function() {
                    return null === this.instructions && (this.routeInstructions ? this.instructions = this.routeInstructions.split(",").map(function(e, t) {
                            return {
                                code: e,
                                point: this.routeGeometry.components[t].components[0]
                            }
                        }, this) : this.instructions = []),
                        this.instructions
                }
            }, {
                key: "_updateCommentFlag",
                value: function() {
                    if (1 === this.comments.length) {
                        var e = this.model.mapUpdateRequests.getObjectById(this.getID());
                        e && (e.attributes.hasComments = !0,
                            this.model.mapUpdateRequests.changed(e))
                    }
                }
            }, {
                key: "hasPendingComments",
                value: function() {
                    var e = this.comments || [],
                        t = Number(Date.today().setTimeToNow().add(-2).weeks()),
                        n = e.filter(function(e) {
                            return e.createdOn > t
                        });
                    return 0 !== n.length && !n.some(function(e) {
                        return -1 === e.userID
                    })
                }
            }, {
                key: "getComments",
                value: function() {
                    return new Backbone.Collection(this.comments)
                }
            }, {
                key: "getIsFollowing",
                value: function() {
                    return this.isFollowing
                }
            }, {
                key: "setFollowing",
                value: function(e) {
                    var t = this;
                    return (0,
                        d.httpPost)(W.Config.paths.updateRequestFollow, {
                        mapUpdateRequestID: this.getID(),
                        follow: e
                    }).then(function() {
                        t.isFollowing = e
                    })
                }
            }, {
                key: "addComment",
                value: function(e) {
                    var t = this;
                    return (0,
                        d.httpPost)(W.Config.paths.updateRequestComments, {
                        mapUpdateRequestID: this.getID(),
                        text: e
                    }).then(function(e) {
                        return e.isAutoFollowed && (t.isFollowing = !0),
                            t.comments.push(e.comment),
                            t._updateCommentFlag(),
                            e
                    }).then(function(e) {
                        return new Backbone.Model(e.comment)
                    })
                }
            }, {
                key: "getCommentable",
                value: function() {
                    return {
                        getComments: this.getComments.bind(this),
                        isFollowing: this.getIsFollowing.bind(this),
                        setFollowing: this.setFollowing.bind(this),
                        addComment: this.addComment.bind(this)
                    }
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(h.prototype, {
        CLASS_NAME: "Waze.Feature.UpdateRequestSession"
    }),
    (0,
        i.default)(h.prototype, {
        nested: {
            driveGeometry: OL.Geometry,
            routeGeometry: OL.Geometry
        }
    }),
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getAverageSpeed",
                value: function() {
                    return this.totalRoadMeters / (this.endTime - this.startTime) * 3600
                }
            }]),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.Archive"
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(17)),
        d = c(n(895));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).bounds,
                n = void 0 === e ? null : e;
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return i.bounds = n,
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getDriveBounds",
                value: function() {
                    return null !== this.bounds ? this.bounds : (this.bounds = this.driveParts.reduce(function(e, t) {
                            return t.geometry.calculateBounds(),
                                e.extend(t.geometry.bounds),
                                e
                        }, new OpenLayers.Bounds),
                        this.bounds)
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(h.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.ArchiveSession",
        nested: {
            driveParts: d.default
        }
    }),
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "isMatched",
                value: function() {
                    return this.matchType === this.MATCH_TYPE.MATCHED
                }
            }]),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        MATCH_TYPE: {
            UNMATCHED: "UNMATCHED",
            MATCHED: "MATCHED",
            PAVED: "PAVED"
        },
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(380)),
        o = d(n(897)),
        l = d(n(381)),
        u = d(n(382));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function() {
        function e(t) {
            return (0,
                    r.default)(this, e),
                _.extend(this, t)
        }
        return (0,
                s.default)(e, [{
                key: "build",
                value: function(e) {
                    return this._isFlag(e) ? this._buildFlag(e) : this._buildRegularUpdate(e)
                }
            }, {
                key: "_isFlag",
                value: function(e) {
                    return e.type === this.TYPE.REQUEST && e.subType === this.SUB_TYPE.FLAG
                }
            }, {
                key: "_buildFlag",
                value: function(e) {
                    return new o.default({
                        subject: e.flagSubjectType,
                        type: e.flagType,
                        comment: e.flagComment,
                        place: e.place,
                        dateAdded: e.dateAdded,
                        createdBy: e.createdBy,
                        entityId: e.flagEntityID,
                        id: e.id,
                        isInEditArea: this.isInEditArea,
                        isEditable: this.isEditable,
                        isAdLockedEditable: this.isAdLockedEditable
                    })
                }
            }, {
                key: "_buildRegularUpdate",
                value: function(e) {
                    var t = a.default.prototype.SUBJECT.VENUE,
                        n = a.default.prototype.ACTION.ADD;
                    e.type === this.TYPE.REQUEST ? n = e.subType === this.SUB_TYPE.UPDATE ? a.default.prototype.ACTION.UPDATE : a.default.prototype.ACTION.DELETE : e.type === this.TYPE.IMAGE && (t = a.default.prototype.SUBJECT.IMAGE);
                    var i = this._parseChangedFields(e.place, e.changedVenue);
                    return new a.default({
                        action: n,
                        subject: t,
                        changedFields: i,
                        place: e.place,
                        dateAdded: e.dateAdded,
                        createdBy: e.createdBy,
                        id: e.id,
                        isInEditArea: this.isInEditArea,
                        isEditable: this.isEditable,
                        isAdLockedEditable: this.isAdLockedEditable
                    })
                }
            }, {
                key: "_parseChangedFields",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        n = _.omit(t, ["permissions", "categoryAttributes"]),
                        i = (t.categoryAttributes || {}).PARKING_LOT || {};
                    return [].concat(l.default.build(n, e)).concat(u.default.build(i, e))
                }
            }]),
            e
    }();
    (0,
        i.default)(c.prototype, {
        TYPE: {
            VENUE: "VENUE",
            REQUEST: "REQUEST",
            IMAGE: "IMAGE"
        },
        SUB_TYPE: {
            UPDATE: "UPDATE",
            DELETE: "DELETE",
            FLAG: "FLAG"
        }
    }),
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(380);
    var s = ((i = r) && i.__esModule ? i : {
        default: i
    }).default.extend({
        TYPE: {
            CLOSED: "CLOSED",
            MOVED: "MOVED",
            RESIDENTIAL: "RESIDENTIAL",
            DUPLICATE: "DUPLICATE",
            INAPPROPRIATE: "INAPPROPRIATE",
            WRONG_DETAILS: "WRONG_DETAILS",
            LOW_QUALITY: "LOW_QUALITY",
            UNRELATED: "UNRELATED",
            OTHER: "OTHER"
        },
        initialize: function() {
            if (this.set("updateType", "flag"),
                this.isImage() && this.set("imageId", this.get("entityId")),
                this.isVenue() && this.get("type") === this.TYPE.DUPLICATE)
                return this.set("duplicateVenueId", this.get("entityId"))
        },
        getDuplicateVenue: function() {
            var e = this.get("duplicateVenueId");
            return this.get("place").model.venues.getObjectById(e)
        },
        getImage: function() {
            return this._findImage(this.getImageId())
        },
        getImageId: function() {
            return this.get("imageId")
        }
    });
    t.default = s,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(8)),
        u = c(n(4)),
        d = c(n(385));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            (0,
                s.default)(this, t);
            var e = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return e.createNumbers(),
                e
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "createNumbers",
                value: function() {
                    for (var e = 0; e < this.numbers.length; e++)
                        this.numbers[e].parent = this
                }
            }, {
                key: "merge",
                value: function() {
                    (0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "merge", this).apply(this, arguments),
                        this.createNumbers()
                }
            }, {
                key: "getNumber",
                value: function(e) {
                    for (var t = 0; t < this.numbers.length; t++) {
                        var n = this.numbers[t];
                        if (n.id === e)
                            return n
                    }
                    return null
                }
            }, {
                key: "getSegment",
                value: function() {
                    return this.segment || (this.segment = this.model.segments.getObjectById(this.id))
                }
            }]),
            t
    }(c(n(17)).default);
    (0,
        i.default)(h.prototype, {
        nested: {
            numbers: d.default,
            editArea: OL.Geometry
        }
    }),
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            return (0,
                    s.default)(this, t),
                e.id = e.id + "ma",
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e, n))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getUserName",
                value: function() {
                    var e = this.model.users.getObjectById(this.userID);
                    return e ? e.userName : ""
                }
            }]),
            t
    }(u(n(17)).default);
    (0,
        i.default)(d.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(2)),
        s = l(n(0)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            t
    }(l(n(17)).default);
    (0,
        i.default)(u.prototype, {
        nested: {
            geometry: OL.Geometry
        }
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = {
        default: n(902),
        __esModule: !0
    }
}, function(e, t, n) {
    n(903),
        e.exports = n(12).Object.getOwnPropertyDescriptors
}, function(e, t, n) {
    var i = n(21),
        r = n(904),
        s = n(33),
        a = n(100),
        o = n(366);
    i(i.S, "Object", {
        getOwnPropertyDescriptors: function(e) {
            for (var t, n, i = s(e), l = a.f, u = r(i), d = {}, c = 0; u.length > c;)
                void 0 !== (n = l(i, t = u[c++])) && o(d, t, n);
            return d
        }
    })
}, function(e, t, n) {
    var i = n(99),
        r = n(84),
        s = n(28),
        a = n(18).Reflect;
    e.exports = a && a.ownKeys || function(e) {
        var t = i.f(s(e)),
            n = r.f;
        return n ? t.concat(n(e)) : t
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = n(14),
        u = d(n(146));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        objectID: null,
                        objectType: null,
                        actionType: null,
                        newValue: null,
                        oldValue: null
                    }
                }
            }, {
                key: "isSegmentSplit",
                value: function() {
                    return this._isSegmentSplitMerge()[0]
                }
            }, {
                key: "isSegmentMerge",
                value: function() {
                    return this._isSegmentSplitMerge()[1]
                }
            }, {
                key: "_isSegmentSplitMerge",
                value: function() {
                    var e = !1,
                        t = !1;
                    if (this.attributes.objectType === l.SEGMENT) {
                        var n = (this.attributes.newValue || {}).origIDs || [];
                        this.attributes.actionType === u.default.ACTIONS.ADD && (e = 1 === n.length,
                            t = 2 === n.length)
                    }
                    return [e, t]
                }
            }, {
                key: "isVenueMerge",
                value: function() {
                    return this.attributes.objectType === l.VENUE && this.attributes.newValue && this.attributes.newValue.mergedFrom && this.attributes.newValue.mergedFrom.length > 0
                }
            }]),
            t
    }(Backbone.Model);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(19)),
        r = h(n(2)),
        s = h(n(0)),
        a = h(n(3)),
        o = h(n(8)),
        l = h(n(1)),
        u = h(n(4)),
        d = h(n(198)),
        c = h(n(22));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t() {
            (0,
                s.default)(this, t);
            var e = (0,
                a.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            return e.editedModel = e._createEditableModel(),
                e.formModel = new Backbone.Model({
                    defaults: {
                        editing: !1,
                        submitting: !1
                    }
                }),
                e
        }
        return (0,
                u.default)(t, e),
            (0,
                l.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .edit-button": function() {
                            this._toggleEditing(!0)
                        },
                        "click .cancel-button": "_cancelChanges",
                        "click .save-button": "_applyChanges",
                        "submit form": function() {
                            return !1
                        }
                    }
                }
            }, {
                key: "editedModelBindings",
                value: function() {
                    return {
                        "form .city-name": "name"
                    }
                }
            }, {
                key: "formBindings",
                value: function() {
                    return {
                        ".preview": {
                            observe: "editing",
                            visible: !0,
                            onGet: _.negate(_.identity)
                        },
                        "form.attributes-form": {
                            observe: "editing",
                            visible: !0
                        },
                        "form.attributes-form input": {
                            attributes: [{
                                name: "disabled",
                                observe: "submitting"
                            }]
                        }
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        cityNameInput: ".attributes-form .city-name"
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Cities/templates/feature_editor"
                }
            }]),
            (0,
                l.default)(t, [{
                key: "serializeData",
                value: function() {
                    return {
                        canEdit: this.model.arePropertiesEditable(),
                        city: this.model
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this.editedModel, this.editedModelBindings()),
                        this.stickit(this.formModel, this.formBindings()),
                        (0,
                            o.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "onRender", this).apply(this, arguments)
                }
            }, {
                key: "_createEditableModel",
                value: function() {
                    var e = $.extend(!0, {}, this.model.attributes);
                    return new Backbone.Model(e)
                }
            }, {
                key: "_toggleEditing",
                value: function(e) {
                    this.formModel.set("editing", e),
                        e && this.ui.cityNameInput.focus()
                }
            }, {
                key: "_toggleSubmitting",
                value: function(e) {
                    this.formModel.set("submitting", e)
                }
            }, {
                key: "_cancelChanges",
                value: function() {
                    this.editedModel.set(this._createEditableModel().attributes),
                        this._toggleEditing(!1)
                }
            }, {
                key: "_applyChanges",
                value: function() {
                    this.editedModel.attributes.name !== this.model.attributes.name ? this._checkExistance().then(this._commitChanges.bind(this), alert) : this._toggleEditing(!1)
                }
            }, {
                key: "_checkExistance",
                value: function() {
                    var e = this,
                        t = arguments,
                        n = this.editedModel.attributes.name,
                        r = this.model.attributes,
                        s = r.countryID,
                        a = r.stateID;
                    return this._toggleSubmitting(!0),
                        new i.default(function(i, r) {
                            e.dataModel.cities.getCityExists(n, s, a).then(function(t) {
                                var n = t.existingCity;
                                if (n && n.id !== e.model.getID()) {
                                    var s = I18n.t("edit.city.name_exists", {
                                        name: t.existingCity.name
                                    });
                                    r(s)
                                } else
                                    e._toggleEditing(!1),
                                    i()
                            }).catch(function() {
                                return r(t)
                            }).finally(function() {
                                return e._toggleSubmitting(!1)
                            })
                        })
                }
            }, {
                key: "_commitChanges",
                value: function() {
                    var e = new c.default(this.model, this.editedModel.attributes);
                    this.dataModel.actionManager.add(e)
                }
            }]),
            t
    }(d.default);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(367),
        r = {
            init: function(e) {
                var t = e.map;
                this.selectionManager = e.selectionManager,
                    this.markersLayer = t.getLayerByUniqueName(i.MARKERS_LAYER_NAME),
                    this.featuresLayer = t.getLayerByUniqueName(i.FEATURES_LAYER_NAME),
                    this.markersLayer.events.register("markerclick", this, this._onMarkerClick),
                    this.selectionManager.events.register("app:selection:featureunselected", this, this._onFeatureUnselected)
            },
            destroy: function() {
                this.markersLayer.events.unregister("markerclick", this, this._onMarkerClick),
                    this.selectionManager.events.unregister("app:selection:featureunselected", this, this._onFeatureUnselected)
            },
            _onFeatureUnselected: function(e) {
                var t = this;
                (e.features || [e.feature]).forEach(function(e) {
                    var n = e.model;
                    if (n && n.type === i.OBJECT_TYPE) {
                        var r = e.model.getID(),
                            s = t.markersLayer.getMarker(r);
                        s && s.unhighlight()
                    }
                })
            },
            _onMarkerClick: function(e) {
                var t = e.target.attributes.cityId,
                    n = this.featuresLayer.features.filter(function(e) {
                        return e.model.getID() === t
                    })[0];
                void 0 !== n && (this.selectionManager.setSelectedModels([n.model]),
                    this.markersLayer.getMarker(t).highlight())
            }
        };
    t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(148)),
        r = d(n(909)),
        s = d(n(910)),
        a = d(n(91)),
        o = d(n(44)),
        l = d(n(147)),
        u = d(n(199));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = o.default.LAYER_TYPE,
        h = {
            feature: {
                repositoryName: "mapComments",
                featureType: "mapComment",
                modelClass: i.default,
                featureEditorClass: s.default
            },
            layers: [{
                type: c.FEATURE,
                uniqueName: "mapComments",
                options: {
                    name: I18n.t("layers.name.comments"),
                    objectType: "mapComment",
                    selectable: !0,
                    visibleByDefault: !0,
                    styleMap: r.default,
                    enableZIndexing: !0,
                    geometryEditing: {
                        enable: !0,
                        options: {
                            mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.RESHAPE
                        }
                    }
                }
            }],
            layerSwitcher: {
                togglers: [{
                    id: "ITEM_MAP_COMMENTS",
                    parent: "GROUP_DISPLAY",
                    toggler: l.default.of("ITEM_MAP_COMMENTS", new u.default("mapComments"))
                }],
                defaultVisibility: {
                    ITEM_MAP_COMMENTS: !0
                },
                bitNumbers: {
                    ITEM_MAP_COMMENTS: 26
                }
            },
            menu: {
                name: "map-comments",
                items: [{
                    title: I18n.t("drawing.map_comment_point"),
                    featureName: I18n.t("drawing.map_comment"),
                    primaryShape: "point",
                    secondaryShape: "",
                    layerUniqueName: "mapComments",
                    createFeature: function(e, t) {
                        var n = new i.default({
                                geometry: e
                            }),
                            r = new a.default(n, t.mapComments);
                        return t.actionManager.add(r),
                            r.object
                    }
                }, {
                    title: I18n.t("drawing.map_comment_area"),
                    featureName: I18n.t("drawing.map_comment"),
                    primaryShape: "polygon",
                    secondaryShape: "",
                    layerUniqueName: "mapComments",
                    createFeature: function(e, t) {
                        var n = new i.default({
                                geometry: e
                            }),
                            r = new a.default(n, t.mapComments);
                        return t.actionManager.add(r),
                            r.object
                    }
                }]
            }
        };
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(390),
        r = "#ffffff",
        s = {
            strokeColor: r,
            fillColor: r,
            strokeDashstyle: "dash",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        a = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: r,
            fillColor: r,
            graphicZIndex: 0,
            fillOpacity: 1
        },
        o = function(e) {
            var t = W.defaultRule({
                Point: a,
                Polygon: s
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        l = W.defaultRule({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fontFamily: "FontAwesome",
                label: "",
                labelOutlineWidth: 0,
                fontColor: "white",
                fontSize: 11,
                labelYOffset: 0,
                pointRadius: 12,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        u = W.defaultRule({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        d = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        c = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        h = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        });
    t.default = new OL.StyleMap({
            default: o([h, d, i.DragPointRule]),
            highlight: o([W.defaultRule({
                Point: {
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: r,
                    fillOpacity: .6,
                    strokeOpacity: 1
                },
                Polygon: {
                    fillOpacity: .6,
                    strokeColor: r,
                    fillColor: r
                }
            }), h, c, i.DragPointHighlightRule]),
            select: o([l]),
            highlightselected: o([l]),
            delete: o([u]),
            highlightdeleted: o([u])
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(2)),
        r = v(n(0)),
        s = v(n(3)),
        a = v(n(8)),
        o = v(n(1)),
        l = v(n(4)),
        u = v(n(198)),
        d = v(n(911)),
        c = v(n(391)),
        h = v(n(122)),
        f = v(n(200)),
        p = v(n(106)),
        g = v(n(148));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t() {
            (0,
                r.default)(this, t);
            var e = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).apply(this, arguments));
            return e.endDateModel = new Backbone.Model({
                    endDate: e.model.attributes.endDate
                }),
                e.endDateModel.on("change:endDate", function(t, n, i) {
                    e.changed({
                        endDate: n
                    })
                }),
                e.newFormModel = new Backbone.Model({
                    body: e.model.attributes.body,
                    subject: e.model.attributes.subject
                }),
                e
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "className",
                value: function() {
                    return "map-comment-feature-editor separator-line"
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        nameEditorRegion: ".name-editor-region",
                        conversationRegion: ".conversation-region"
                    }
                }
            }, {
                key: "behaviors",
                value: function() {
                    return {
                        dateTimePickers: {
                            behaviorClass: h.default,
                            modelAttribute: "endDateModel"
                        },
                        charCount: {
                            behaviorClass: f.default,
                            charLimits: [{
                                inputSelector: ".new-subject-input",
                                charCountSelector: ".new-subject-max-length",
                                maxLength: g.default.prototype.MAX_SUBJECT_LENGTH,
                                modelAttribute: "newFormModel",
                                observe: "subject"
                            }, {
                                inputSelector: ".new-body-input",
                                charCountSelector: ".new-body-max-length",
                                maxLength: g.default.prototype.MAX_BODY_LENGTH,
                                modelAttribute: "newFormModel",
                                observe: "body"
                            }]
                        }
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Comments/templates/feature_editor"
                }
            }]),
            (0,
                o.default)(t, [{
                key: "onRender",
                value: function() {
                    this.model.isNew() ? this.newFormModel.set({
                            body: this.model.attributes.body,
                            subject: this.model.attributes.subject
                        }) : (this._renderNameEditor(),
                            this._renderConversationRegion()),
                        (0,
                            a.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "onRender", this).apply(this, arguments)
                }
            }, {
                key: "_renderNameEditor",
                value: function() {
                    var e = this,
                        t = new d.default({
                            createdDate: this._getCreateDisplayDate(),
                            subject: this.model.attributes.subject,
                            body: this.model.attributes.body,
                            editable: this.model.arePropertiesEditable()
                        });
                    return t.on("changed", function(t) {
                            return e.changed(t)
                        }),
                        this.showChildView("nameEditorRegion", t)
                }
            }, {
                key: "_getCreateDisplayDate",
                value: function() {
                    return this.model.attributes.createdOn ? I18n.l("time.formats.long", new Date(this.model.attributes.createdOn)) : ""
                }
            }, {
                key: "_renderConversationRegion",
                value: function() {
                    var e = new c.default({
                        commentable: this.model
                    });
                    return this.showChildView("conversationRegion", e)
                }
            }, {
                key: "onFeaturesChanged",
                value: function(e) {
                    if (u.default.prototype.onFeaturesChanged.apply(this, arguments),
                        this.hasEditedModelChanged(e))
                        return this.endDateModel.set({
                            endDate: this.model.attributes.endDate
                        })
                }
            }, {
                key: "serializeData",
                value: function() {
                    return {
                        userRank: this.dataModel.loginManager.getUserRank(),
                        editable: this.model.arePropertiesEditable(),
                        comment: this.model
                    }
                }
            }, {
                key: "isPointChanged",
                value: function(e) {
                    var t = void 0;
                    t = "true" === e ? this.model.getPointGeometry() : this.model.getPolygonGeometry();
                    var n = new p.default(this.model, this.dataModel.mapComments, this.model.geometry, t);
                    this.dataModel.actionManager.add(n)
                }
            }]),
            t
    }(u.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(200)),
        r = s(n(148));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Comments/templates/name_editor",
        className: "map-comment-name-editor",
        ui: {
            editButton: ".edit-button",
            applyButton: ".apply-button"
        },
        events: {
            "click @ui.editButton": "_onEditButtonClicked",
            "submit form": "_onApplyButtonClicked"
        },
        bindings: {
            ".preview": {
                visible: !0,
                observe: "showingPreview"
            },
            ".edit": {
                visible: !0,
                observe: "showingPreview",
                onGet: _.negate(_.identity)
            },
            ".subject-preview": "subject",
            ".body-preview": {
                observe: "body",
                classes: {
                    "edit-button": "editable"
                }
            },
            ".subject-input": "subject",
            ".body-textarea": "body"
        },
        behaviors: {
            charCount: {
                behaviorClass: i.default,
                charLimits: [{
                    inputSelector: ".subject-input",
                    charCountSelector: ".subject-max-length",
                    maxLength: r.default.prototype.MAX_SUBJECT_LENGTH,
                    modelAttribute: "model",
                    observe: "subject"
                }, {
                    inputSelector: ".body-textarea",
                    charCountSelector: ".body-max-length",
                    maxLength: r.default.prototype.MAX_BODY_LENGTH,
                    modelAttribute: "model",
                    observe: "body"
                }]
            }
        },
        initialize: function() {
            this.model = new Backbone.Model({
                showingPreview: !0,
                createdDate: this.options.createdDate,
                editable: this.options.editable,
                subject: this.options.subject,
                body: this.options.body
            })
        },
        onRender: function() {
            this.stickit()
        },
        _onEditButtonClicked: function() {
            this.model.set({
                showingPreview: !1
            })
        },
        _onApplyButtonClicked: function(e) {
            return e.preventDefault(),
                this.model.set({
                    showingPreview: !0
                }),
                this.trigger("changed", {
                    subject: this.model.get("subject"),
                    body: this.model.get("body")
                }),
                !1
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(16));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = /(https?:\/\/(?:-\.)?(?:[^\s/?.#-]+\.?)+(?:\/[^\s]*)?)/i,
        c = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "span"
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getCommentLines: function() {
                                return this.text.split("\n")
                            },
                            getCommentNumber: function() {
                                return this.getCommentLines().length
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Conversation/templates/text"
                    }
                }]),
                t
        }(Marionette.View),
        h = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            textItems: ".text"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.model.get("text").split(d).map(function(e) {
                                return new Backbone.Model({
                                    text: e,
                                    isHref: e.match(d)
                                })
                            }),
                            t = new Backbone.Collection(e);
                        this.showChildView("textItems", new Marionette.CollectionView({
                            collection: t,
                            childView: c
                        }))
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getUserName: function() {
                                return this.isByReporter() ? I18n.t("conversation.reporter") : l.default.formatUserName(this.userID)
                            },
                            isByReporter: function() {
                                return -1 === this.userID
                            }
                        }
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "comment"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Conversation/templates/item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='text-checkboxes'>\n<span class='title'>" + t(e(this.title)) + "</span>\n<div class='checkboxes'>"),
                            i = 0,
                            s = (o = this.items).length; i < s; i++)
                            a = "layer-switcher-" + (r = o[i]).id.toLowerCase(),
                            n.push("<div class='text-checkbox'>\n<input class='" + t(e(a)) + "' id='" + t(e(a)) + "' type='checkbox'>\n<label for='" + t(e(a)) + "' title='" + t(e(this.t("layer_switcher.togglers." + r.id))) + "'>\n<i class='waze-icon-" + r.iconName + "'></i>\n</label>\n</div>");
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return e = this.__cleanValue,
                            n = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/checkbox",
                            i = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/text-checkboxes",
                            (t = []).push("<ul class='list-unstyled togglers'>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_ISSUES",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_MAP_ISSUES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                title: this.t("layer_switcher.togglers.ITEM_MAP_PROBLEMS"),
                                items: [{
                                    id: "ITEM_MAP_PROBLEMS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_CLOSED_MAP_PROBLEMS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                title: this.t("layer_switcher.togglers.ITEM_UPDATE_REQUESTS"),
                                items: [{
                                    id: "ITEM_UPDATE_REQUESTS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_CLOSED_UPDATE_REQUESTS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_PARKING_ISSUES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                title: this.t("layer_switcher.togglers.ITEM_PARKING_MAP_PROBLEMS"),
                                items: [{
                                    id: "ITEM_PARKING_MAP_PROBLEMS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                title: this.t("layer_switcher.togglers.ITEM_PARKING_PLACE_UPDATE_REQUESTS"),
                                items: [{
                                    id: "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
                                    iconName: "visible"
                                }]
                            }))),
                            t.push("</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_PLACES",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_VENUES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_RESIDENTIAL_PLACES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PARKING_PLACES"
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_ROAD",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_ROAD"
                            }))),
                            t.push("</li>"),
                            W.Config.big_junctions.enable && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(n, {
                                    id: "ITEM_JUNCTION_BOXES"
                                }))),
                                t.push("</li>")),
                            t.push("<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_CLOSURES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_SPEED_CAMERAS"
                            }))),
                            t.push("</li>"),
                            t.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/LayerSwitcher/templates/module-togglers", {
                                id: "GROUP_ROAD"
                            }))),
                            t.push("</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_DISPLAY",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_SATELLITE_IMAGERY"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_AREA_MANAGERS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_GPS_POINTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_EDITABLE_AREAS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_LIVE_USERS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_DISALLOWED_TURNS"
                            }))),
                            t.push("</li>"),
                            t.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/LayerSwitcher/templates/module-togglers", {
                                id: "GROUP_DISPLAY"
                            }))),
                            t.push("</ul>\n</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='login-verification-view'>\n<div class='step-email-missing'>\n<div class='verification-image verification-image-verify'></div>\n<div class='login-title verification-title'>"),
                            n.push("" + t(e(this.t("login.email_verification.missing.title")))),
                            n.push("</div>\n<div class='verification-messages'>"),
                            n.push("" + t(e(this.t("login.email_verification.missing.message")))),
                            n.push("</div>\n<div class='verification-actions'>\n<div class='btn-wrapper'>\n<a class='waze-btn waze-btn-blue waze-btn-small' href='" + t(e(this.dashboardURL)) + "' target='_blank'>"),
                            n.push("" + t(e(this.t("login.email_verification.missing.add_email")))),
                            n.push("</a>\n</div>\n</div>\n</div>\n<div class='step-verification'>\n<div class='verification-image verification-image-verify'></div>\n<div class='login-title verification-title'>"),
                            n.push("" + t(e(this.t("login.email_verification.verify.title")))),
                            n.push("</div>\n<div class='alert-danger verification-alert'>"),
                            n.push("" + t(e(this.t("login.email_verification.verify.error")))),
                            n.push("</div>\n<div class='verification-messages'>"),
                            n.push("" + t(e(this.t("login.email_verification.verify.message", {
                                recipient: this.recipient
                            })))),
                            n.push("</div>\n<div class='verification-actions'>\n<div class='btn-wrapper'>\n<button class='do-send-verification-email waze-btn waze-btn-blue waze-btn-small'>\n<span class='emailSending'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            n.push("" + t(e(this.t("login.email_verification.verify.send_email")))),
                            n.push("</button>\n</div>\n<div class='btn-wrapper'>\n<a class='waze-btn waze-btn-small waze-btn-white' href='" + t(e(this.dashboardURL)) + "' target='_blank'>"),
                            n.push("" + t(e(this.t("login.email_verification.verify.change_email")))),
                            n.push("</a>\n</div>\n</div>\n</div>\n<div class='step-verification-done'>\n<div class='verification-image verification-image-sent'></div>\n<div class='login-title verification-title'>"),
                            n.push("" + t(e(this.t("login.email_verification.sent.title")))),
                            n.push("</div>\n<div class='alert-success verification-alert'>"),
                            n.push("" + t(e(this.t("login.email_verification.sent.alert", {
                                recipient: this.recipient
                            })))),
                            n.push("</div>\n<div class='verification-messages'>"),
                            n.push("" + t(e(this.t("login.email_verification.sent.message")))),
                            n.push("</div>\n</div>\n<div class='login-verification-footer'>\n<a class='do-back-to-login waze-link'>\n&lt;"),
                            n.push("" + t(e(this.t("login.email_verification.back_to_login")))),
                            n.push("</a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='modal-content'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='login-popup'>\n<div class='language-select'>\n<a class='dropdown-toggle waze-gray-link' data-toggle='dropdown' href='#'>"),
                            n.push("" + t(e(I18n.t("language_name")))),
                            n.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            i = 0,
                            s = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"].length; i < s; i++)
                            r = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"][i],
                            n.push("<li>\n<a class='change-language' href='" + t(e(this.getURLForLocale(r))) + "' data-locale='" + t(e(r)) + "'>"),
                            n.push("" + t(e({
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español América Latina",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "อังกฤษ"
                            } [r]))),
                            n.push("</a>\n</li>");
                        return n.push("</ul>\n</div>\n<div class='welcome-message'>\n<h2 class='login-title'>"),
                            n.push("" + t(e(this.t("welcome.title")))),
                            n.push("</h2>\n<p>"),
                            n.push("" + t(e(this.t("welcome.content")))),
                            n.push("</p>\n</div>\n<div class='login-popup-content'>\n<div class='login-form'>\n<div class='login-title'>"),
                            n.push("" + t(e(this.t("login.title")))),
                            n.push("</div>\n<div class='form-title'>\n<div class='expired-warning text-warning'>" + t(e(this.t("session.expired.title"))) + "</div>\n<span class='title-text'></span>\n</div>\n<form action='#' method='post'>\n<input class='form-control input-border username' autofocus='true' name='username' required='" + t(e(!0)) + "' type='text' placeholder='" + t(e(this.t("login.form.username"))) + "'>\n<input class='form-control input-border password' name='password' required='" + t(e(!0)) + "' type='password' placeholder='" + t(e(this.t("login.form.password"))) + "'>\n<div class='recaptcha-container'>\n<div class='g-recaptcha' data-size='invisible' data-badge='inline'></div>\n</div>\n<div class='error-message text-danger'></div>\n<div class='form-action'>\n<button class='submit waze-btn waze-btn-blue' type='submit'>\n<span class='loading'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            n.push("" + t(e(this.t("login.form.action")))),
                            n.push("</button>\n</div>\n<a class='forgot-password waze-gray-link' href='/forgot_password'>" + t(e(this.t("login.forgot_password"))) + "</a>\n</form>\n</div>\n<div class='login-popup-links'>\n<a class='btn btn-default tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.tutorial.description"))) + "</div>\n</a>\n<a class='btn btn-default wiki' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.wiki.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.wiki.description"))) + "</div>\n</a>\n<a class='btn btn-default forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.forum.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.forum.description"))) + "</div>\n</a>\n<a class='btn btn-default playmode' href='#'>\n<div class='banner'></div>\n<div class='title'>" + t(e(this.t("welcome.play_mode.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.play_mode.description"))) + "</div>\n</a>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='name'>" + t(e(this.h.formatUserName(this.userID))) + "</div>"),
                            this.isPartner && (n.push("<div class='partner'>" + t(e(this.t("mte.edit.contributors.partner"))) + "</div>"),
                                this.editable && n.push("<div class='remove-button'>\n<i class='fa fa-remove'></i>\n</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='add-partner-section'>\n<button class='add-partner-button btn btn-block btn-positive btn-primary'>\n<i class='fa fa-plus'></i>"),
                            n.push("" + t(e(this.t("mte.edit.contributors.add_partner")))),
                            n.push("</button>\n<form class='add-partner-form'>\n<div class='header'>\n<a class='cancel-button pull-right'>" + t(e(this.t("mte.edit.contributors.cancel"))) + "</a>\n<h4 class='title'>" + t(e(this.t("mte.edit.contributors.add_partner"))) + "</h4>\n</div>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control partner-select' required></select>\n</div>\n<button class='add-button btn btn-block btn-primary' type='submit'>"),
                            n.push("" + t(e(this.t("mte.edit.contributors.add")))),
                            n.push("</button>\n</div>\n</form>\n</div>\n<div class='list'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='closures'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='loading'>"),
                            n.push("" + t(e(this.loadingMessage))),
                            n.push("</div>\n<div class='error'>"),
                            n.push("" + t(e(this.errorMessage))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='preview'>\n<h3 class='english-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview'>"),
                            n.push("" + t(e(this.ENGLISH_LOCALE))),
                            n.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n<h3 class='local-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview local-language-preview'>"),
                            n.push("" + t(e(this.ENGLISH_LOCALE))),
                            n.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n</div>\n<form class='edit-form inner-form side-panel-section'>\n<div class='english-name form-group'>\n<div class='controls'>\n<input class='english-name form-control' required autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select' disabled>\n<option>English</option>\n</select>\n</div>\n</div>\n<div class='form-group local-name'>\n<div class='controls'>\n<button class='btn-link remove-local-name-button' type='button'>\n<i class='fa fa-remove'></i>\n</button>\n<input class='form-control local-name' autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select locale'></select>\n</div>\n</div>\n<button class='add-local-name-button btn-link' type='button'>\n<i class='fa fa-plus'></i>"),
                            n.push("" + t(e(this.t("mte.edit.name_list.add_language")))),
                            n.push("</button>\n<button class='apply-button btn waze-btn waze-btn-blue'>Apply</button>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group twitter-accounts-urls'>\n<label class='control-label'>" + t(e(this.t("mte.edit.twitter_accounts_urls"))) + "</label>\n<ul>"),
                            i = 0,
                            r = (s = this.twitterAccountsUrls).length; i < r; i++)
                            a = s[i],
                            n.push("<li>\n<a href='" + t(e(a)) + "' target='_blank'>" + t(e(a)) + "</a>\n</li>");
                        return n.push("</ul>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='edit-panel flex-parent mte-edit-view'>\n<div class='flex-noshrink navigation'>\n<button class='back-button btn-link' type='button'>\n&#60;"),
                            n.push("" + t(e(this.t("mte.edit.back_to_search")))),
                            n.push("</button>\n</div>\n<div class='contents'>\n<div class='no-outer-padding panel-header'>\n<div class='title'>\n<label class='control-label'>"),
                            this.newModel ? n.push("" + t(e(this.t("mte.edit.add_event_title")))) : n.push("" + t(e(this.t("mte.edit.edit_event_title")))),
                            n.push("</label>"),
                            this.newModel || n.push("<div class='submit-buttons'>\n<button class='btn btn-defaults submit-button'>" + t(e(this.t("mte.edit.submit"))) + "</button>\n<div class='submitted-indication'>" + t(e(this.t("mte.edit.submitted"))) + "</div>\n</div>\n<div class='publish-buttons'>\n<button class='btn btn-default publish-button'>" + t(e(this.t("mte.edit.publish"))) + "</button>\n<div class='published-indication'>" + t(e(this.t("mte.edit.published"))) + "</div>\n</div>"),
                            n.push("</div>\n<div class='names-container'>\n<div class='names-region'></div>\n<div class='validation-error' for='names'></div>\n</div>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#mte-edit-general'>"),
                            n.push("" + t(e(this.t("mte.edit.tabs.general")))),
                            n.push("</a>\n</li>\n<li class='closures-tab'>"),
                            this.newModel ? (n.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.closures_disabled"))) + "'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                n.push("</a>")) : (n.push("<a data-toggle='tab' href='#mte-edit-closures'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                n.push("</a>")),
                            n.push("</li>\n<li class='contributors-tab'>"),
                            this.newModel ? (n.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.partners_disabled"))) + "'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                n.push("</a>")) : (n.push("<a data-toggle='tab' href='#mte-edit-contributors'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                n.push("</a>")),
                            n.push("</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='mte-edit-general'>\n<form class='attributes-form'>"),
                            n.push("<button class='form-submit-button hidden'></button>\n<div class='form-group side-panel-section'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.category"))) + "</label>\n<div class='controls'>\n<select class='category form-control' required></select>\n</div>\n</div>\n<div class='side-panel-section'>\n<label class='control-label control-label-inline required-field'>" + t(e(this.t("mte.edit.fields.location"))) + "</label>\n<i class='location-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("mte.edit.location_tooltip"))) + "'></i>\n<div class='address-edit-region'></div>\n<div class='validation-error' for='cityID'></div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group start-date-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.start_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date form-control start-date' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='startDate'></div>\n</div>\n<div class='end-date-group form-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.end_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date end-date form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='endDate'></div>\n</div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("mte.edit.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control url' type='text'>\n</div>\n</div>"),
                            this.canEditTweetText && n.push("<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("mte.edit.tweet_text"))) + "</label>\n<textarea class='form-control' name='tweetText' maxlength='" + t(e(140)) + "'></textarea>\n</div>\n</div>"),
                            n.push("<div class='twitter-urls-region'></div>\n<div class='event-page form-group side-panel-section'>\n<a class='btn btn-block btn-primary' target='_blank'>"),
                            n.push("" + t(e(this.t("mte.edit.waze_event_page")))),
                            n.push("</a>\n</div>\n<div class='side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/additional_details", this.modelAttributes))),
                            n.push("</div>\n</form>\n</div>\n<div class='tab-pane' id='mte-edit-closures'></div>\n<div class='tab-pane' id='mte-edit-contributors'>\n<div class='contributors-region'></div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='icon'>\n<i class='mte-icon waze-icon-event'></i>"),
                            this.published && n.push("<i class='published-indication waze-icon-check'></i>"),
                            n.push("</div>\n<div class='name'>"),
                            n.push("" + t(e(this.name))),
                            n.push("</div>\n<div class='date'>"),
                            n.push("" + t(e(this.date))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, n, i, r, s, a;
                        for (s in n = this.__htmlEscape,
                            t = this.__cleanValue,
                            (i = []).push("<div class='flex-noshrink mte-search'>\n<div class='search-header'>\n<div class='title'>" + n(t(this.t("mte.search.title"))) + "</div>\n<div class='action date-switcher dropdown'>\n<a class='dropdown-toggle waze-dropdown' data-toggle='dropdown'>\n<span class='current-date-filter'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            a = this.dateFilters)
                            e.call(a, s) && (r = a[s],
                                i.push("<li class='waze-dropdown-item'>\n<a class='date-filter-item' data-filter='" + n(t(s)) + "'>" + n(t("" + r.name)) + "</a>\n</li>"));
                        return i.push("</ul>\n</div>\n</div>\n<input class='form-control search-input' type='text' placeholder='" + n(t(this.t("mte.search.placeholder"))) + "'>\n</div>\n<ul class='list-unstyled mte-list'></ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='loaderRegion'>\n<div class='sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n<div class='mainRegion'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<button class='add-button btn-link toolbar-button waze-icon-event' title='" + t(e(this.t("mte.edit.toolbar.add"))) + "'>"),
                            n.push("" + t(e(this.t("mte.edit.toolbar.add")))),
                            n.push("</button>\n<button class='btn-link save-button toolbar-button waze-icon-save' title='" + t(e(this.t("mte.edit.toolbar.save"))) + "'>"),
                            n.push("" + t(e(this.t("mte.edit.toolbar.save")))),
                            n.push("</button>\n<button class='btn-link delete-button toolbar-button waze-icon-trash' title='" + t(e(this.t("mte.edit.toolbar.delete"))) + "'>"),
                            n.push("" + t(e(this.t("mte.edit.toolbar.delete")))),
                            n.push("</button>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='topbar topbar-mte'>\n<div class='mode-name'>"),
                            n.push("" + t(e(this.t("modes.name.mte")))),
                            n.push("</div>\n<div class='location-info-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<form class='edit-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.navigation_point.type"))) + "</label>\n<div class='controls controls-container entry-controls'>\n<select class='form-control type' name='type'>\n<option value='" + t(e(this.NAVIGATION_POINT_TYPE.ENTRY)) + "'>" + t(e(this.t("edit.landmark.navigation_point.types.entry"))) + "</option>\n<option value='" + t(e(this.NAVIGATION_POINT_TYPE.EXIT)) + "'>" + t(e(this.t("edit.landmark.navigation_point.types.exit"))) + "</option>\n<option value='" + t(e(this.NAVIGATION_POINT_TYPE.BOTH)) + "'>" + t(e(this.t("edit.landmark.navigation_point.types.both"))) + "</option>\n</select>\n<div class='is-primary-checkbox-container'>\n<input class='is-primary' id='" + t(e(this.isPrimaryInputId)) + "' name='is-primary' type='checkbox'>\n<label for='" + t(e(this.isPrimaryInputId)) + "'>" + t(e(this.t("edit.landmark.navigation_point.is_primary"))) + "</label>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.navigation_point.name"))) + "</label>\n<div class='controls'>\n<input class='form-control name' name='name'>\n</div>\n</div>\n<div class='buttons'>\n<button class='btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='preview'>\n<div class='arrow-icon'></div>\n<div class='name'></div>\n<div class='buttons'>\n<div class='edit-button waze-icon-edit'></div>\n<div class='delete-button waze-icon-trash'></div>\n</div>\n</div>\n<div class='edit-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='list-region'></div>\n<button class='add-button btn btn-link'>" + t(e(this.t("edit.landmark.navigation_point.add_button"))) + "</button>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.showNext ? n.push("<div class='next waze-plain-btn'>" + t(e(this.adapter.getNextButtonString())) + "</div>") : n.push("<div class='done waze-plain-btn'>" + t(e(this.t("problems.panel.done"))) + "</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            null != this.attributes.description && (n.push("<p class='description'>"),
                                n.push("" + t(e(this.attributes.description))),
                                n.push("</p>")),
                            null != this.attributes.extraInfo && (n.push("<p class='extraInfo'>"),
                                n.push("" + t(e(this.attributes.extraInfo))),
                                n.push("</p>")),
                            null != this.attributes.street && (n.push("<div class='street'>\n<strong>" + t(e(this.t("problems.panel.closure.street") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.street))),
                                n.push("</div>")),
                            null != this.attributes.fromCrossStreet && (n.push("<div class='fromCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.from_cross_street") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.fromCrossStreet))),
                                n.push("</div>")),
                            null != this.attributes.toCrossStreet && (n.push("<div class='toCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.to_cross_street") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.toCrossStreet))),
                                n.push("</div>")),
                            null != this.attributes.startTime && (n.push("<div class='startTime'>\n<strong>" + t(e(this.t("problems.panel.closure.start_time") + ":")) + "</strong>"),
                                n.push("" + t(e(I18n.l("time.formats.long", this.attributes.startTime)))),
                                n.push("</div>")),
                            null != this.attributes.endTime && (n.push("<div class='endTime'>\n<strong>" + t(e(this.t("problems.panel.closure.end_time") + ":")) + "</strong>"),
                                n.push("" + t(e(I18n.l("time.formats.long", this.attributes.endTime)))),
                                n.push("</div>")),
                            null != this.attributes.dailyHours && (n.push("<div class='dailyHours'>\n<strong>" + t(e(this.t("problems.panel.closure.schedule") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.dailyHours))),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["problem-edit", "" + t(e("severity-" + this.adapter.getSeverity()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='top-section'>\n<a class='close-panel'></a>\n<div class='header'>\n<div class='dot'></div>\n<div class='main-title'>" + t(e(this.mainTitle)) + "</div>\n<div class='title'>" + t(e(this.adapter.getTitle()))),
                            n.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            n.push("</div>\n<div class='reported'>" + t(e(this.adapter.getReportedString())) + "</div>"),
                            this.showDebug && n.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.adapter.problem.getID()
                            }))) + "</div>"),
                            n.push("</div>\n<div class='body'>\n<div class='problem-data'>"),
                            this.adapter.hasDescription() && (n.push("<div class='description section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.description"))) + "</div>\n<div class='collapsible content'>"),
                                null != this.adapter.getDescriptionTemplate() ? n.push("" + e(this.renderPartial(this.adapter.getDescriptionTemplate(), this.adapter.problem))) : n.push("" + t(e(this.adapter.getDescription()))),
                                n.push("</div>\n</div>")),
                            this.showMoreInfoSection()) {
                            for (n.push("<div class='collapsed more-info section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.more_info"))) + "</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<form class='controls-container'>\n<div class='not-available'>" + t(e(this.t("problems.panel.more_info.not_available"))) + "</div>"),
                                i = 0,
                                r = (s = this.adapter.getMoreInfoTypes()).length; i < r; i++)
                                a = (a = s[i]).get("name"),
                                n.push("<div class='" + ["more-info-checkbox", "more-info-" + t(e(a)) + "-checkbox"].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='" + ["legend", "more-info-" + t(e(a))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                                n.push("" + e(this.h.checkbox(this.t("problems.panel.more_info." + a), a, "on"))),
                                n.push("</div>");
                            n.push("</form>\n</div>\n</div>")
                        }
                        return this.adapter.isConversationAvailable() && (n.push("<div class='conversation section'>\n<div class='title'>"),
                                n.push("" + t(e(this.t("problems.panel.section.conversation")))),
                                n.push("<span class='comment-count-badge'></span>\n</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<div class='conversation-region'></div>\n</div>\n</div>")),
                            n.push("</div>\n</div>\n</div>\n<div class='actions'>"),
                            this.showCloseDetails() ? (n.push("<div class='close-details section'>\n<div class='content'>\n<div class='date'>" + e(this.getCloseDate()) + "</div>\n<div class='by'>" + e(this.getClosingUser()) + "</div>\n<div class='navigation'>"),
                                n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Problems/templates/_navigation", this))),
                                n.push("</div>\n</div>\n</div>")) : (n.push("<div class='section'>\n<div class='content'>\n<form class='controls-container'>"),
                                n.push("" + e(this.h.radio({
                                    label: this.adapter.getOpenStateString(),
                                    name: "state",
                                    value: "open",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                n.push("" + e(this.h.radio({
                                    label: this.adapter.getSolvedStateString(),
                                    name: "state",
                                    value: "solved",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                n.push("" + e(this.h.radio({
                                    label: this.adapter.getNotIdentifiedStateString(),
                                    name: "state",
                                    value: "not-identified",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                this.adapter.isEditable() || (this.adapter.rankAllowsEdit() ? n.push("<div class='alert alert-gray alert-lock no-permissions-alert'>" + t(e(this.t("problems.panel.no_permission"))) + "</div>") : n.push("<div class='alert alert-gray alert-lock no-permissions-alert'>" + t(e(this.t("problems.panel.no_permission_level", {
                                    level: this.adapter.minLevelForEdit()
                                }))) + "</div>")),
                                n.push("</form>\n<div class='navigation'>"),
                                n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Problems/templates/_navigation", this))),
                                n.push("</div>\n</div>\n</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<select class='form-control region-select'></select>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='drive-profile-edit-blocked'>\n<div class='drive-profile-group'>\n<div class='controls-container'>\n<input id='all-vehicles-on-radio' type='radio' name='isAllVehicles' value='true'>\n<label for='all-vehicles-on-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                            n.push("</label>\n</div>\n</div>\n<div class='drive-profile-group drive-profile-vehicles-group'>\n<div class='controls-container'>\n<input id='all-vehicles-off-radio' type='radio' name='isAllVehicles' value='false'>\n<label class='drive-profile-vehicles-option-label' for='all-vehicles-off-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.only_vehicles")))),
                            n.push("</label>\n</div>\n<div class='drive-profile-vehicle-types'>"),
                            i = 0,
                            s = (a = this.getVehicleTypes()).length; i < s; i++)
                            r = a[i],
                            n.push("<div class='controls-container'>\n<input class='vehicle-type' id='vehicle-type-" + r.value + "-checkbox' type='checkbox' value='" + t(e(r.value)) + "'>\n<label class='vehicle-type-label' for='vehicle-type-" + t(e(r.value)) + "-checkbox'>"),
                            n.push("" + t(e(this.t("restrictions.vehicle_types." + r.key)))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='drive-profile-edit-free'>\n<div class='collection-region'></div>\n<div class='add-drive-profile-item do-add-item'>\n<span class='waze-icon-plus'></span>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.add_vehicle")))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o, l, u, d, c, h, f, p;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='drive-profile-item-attributes'>"),
                            this.isBlank)
                            n.push("<div class='is-blank'>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.no_vehicle")))),
                            n.push("</div>");
                        else {
                            if (n.push("<div class='vehicle-type'>"),
                                this.hasVehicleType) {
                                for (n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.vehicleName))),
                                    n.push("</span>\n<i class='do-delete-vehicle-type drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    r = 0,
                                    l = (c = this.vehicleTypesNames).length; r < l; r++)
                                    p = c[r],
                                    n.push("<li>\n<a class='do-set-vehicle-type' data-target='#' data-value='" + t(e(this.vehicleTypes[p])) + "'>"),
                                    n.push("" + t(e(this.t("restrictions.vehicle_types." + p)))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>")
                            } else
                                n.push("<div class='all-vehicles'>"),
                                n.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                                n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                n.push("</div>");
                            if (n.push("</div>"),
                                this.hasNumPassengers) {
                                for (n.push("<div class='num-passengers'>"),
                                    this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.t("restrictions.editing.driving.min_passengers", {
                                        count: this.numPassengers
                                    })))),
                                    n.push("</span>\n<i class='do-delete-num-passengers drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    a = 0,
                                    u = (h = this.numPassengersRange).length; a < u; a++)
                                    i = h[a],
                                    n.push("<li>\n<a class='do-set-num-passengers' data-target='#' data-value='" + t(e(i)) + "'>"),
                                    n.push("" + t(e(this.t("restrictions.editing.driving.min_passengers", {
                                        count: i
                                    })))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>\n</div>")
                            }
                            if (this.hasSubscription) {
                                for (n.push("<div class='subscription'>"),
                                    this.hasNumPassengers ? (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.and")))),
                                        n.push("</span>")) : this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.subscriptionName))),
                                    n.push("</span>\n<i class='do-delete-subscription drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    o = 0,
                                    d = (f = this.subscriptionOptions).length; o < d; o++)
                                    s = f[o],
                                    n.push("<li>\n<a class='do-set-subscription' data-target='#' data-value='" + t(e(s.value)) + "'>"),
                                    n.push("" + t(e(s.name))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>\n</div>")
                            }
                        }
                        return n.push("</div>"),
                            this.restrictionEditable && (n.push("<div class='drive-profile-item-actions'>\n<div class='do-delete-item drive-profile-item-action'>\n<i class='fa fa-trash'></i>\n</div>"),
                                this.isExhaustive || (n.push("<div class='btn-group'>\n<span class='drive-profile-item-action dropdown-toggle' data-toggle='dropdown'>\n<i class='fa fa-plus'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    this.hasVehicleType || (n.push("<li>\n<a class='do-init-vehicle-type' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.vehicle_type")))),
                                        n.push("</a>\n</li>")),
                                    !this.hasNumPassengers && this.supportsNumPassengers && (n.push("<li>\n<a class='do-init-num-passengers' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.num_passengers")))),
                                        n.push("</a>\n</li>")),
                                    !this.hasSubscription && this.supportsSubscriptions && this.subscriptionsAvailable && (n.push("<li>\n<a class='do-init-subscription' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.subscription")))),
                                        n.push("</a>\n</li>")),
                                    n.push("</ul>\n</div>")),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            this.isNewRestriction ? n.push("" + t(e(this.t("restrictions.modal_headers.creating_restriction")))) : n.push("" + t(e(this.t("restrictions.modal_headers.editing_restriction")))),
                            n.push("</h3>\n</div>\n<div class='modal-body'>\n<div class='restriction-editing-region'>\n<div class='restriction-validation-region'></div>\n<div class='restriction-editing-section'>\n<div class='restriction-editing-title restriction-editing-title-main'>"),
                            n.push("" + t(e(this.editingTitle))),
                            n.push("</div>\n<div class='segment-editing-region'></div>\n<div class='timeframe-editing-region'></div>\n</div>"),
                            this.showEditDriveProfile && (n.push("<div class='restriction-editing-section'>\n<div class='driving-modality-editing-region'>\n<div class='restriction-editing-title'>"),
                                n.push("" + t(e(this.t("restrictions.editing.sections.driving_prefix")))),
                                n.push("<select class='do-change-driving-modality driving-modality-select form-control'></select>"),
                                this.showTollDisabledTooltip && n.push("<i class='waze-tooltip' title='" + t(e(this.t("restrictions.editing.driving.toll_disabled"))) + "'></i>"),
                                n.push("" + t(e(this.t("restrictions.editing.sections.driving_suffix")))),
                                n.push("</div>\n</div>\n</div>")),
                            n.push("<div class='drive-profile-editing-region'></div>\n<div class='restriction-editing-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.more_info")))),
                            n.push("</div>\n<div class='description-editing-region'>\n<textarea class='form-control' name='description' placeholder='" + t(e(this.t("restrictions.editing.placeholders.description"))) + "'></textarea>\n</div>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>\n<div class='help-message-region'>\n<i class='fa fa-exclamation-circle'></i>\n<div class='help-message'></div>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-cancel'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>"),
                            this.isNewRestriction ? n.push("<button class='btn btn-primary do-create'>" + t(e(this.t("restrictions.buttons.add"))) + "</button>") : n.push("<button class='btn btn-primary do-update'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>"),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restriction-editing-container'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.segment.applies")))),
                            n.push("</div>\n<div class='segment-section-content'>\n<select class='form-control' name='disposition'></select>\n<select class='form-control' name='laneType'></select>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restriction-validation-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.validation")))),
                            n.push("</div>\n<div class='collection-region'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.forwardTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.reverseTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='bidi-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-bidi'>\n    <span class='direction-icon direction-icon-bidi'>"),
                            n.push("    " + t(e(this.t("segment.direction.label.3")))),
                            n.push("    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.bidiTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<td class='restriction-segment-attribute'>" + t(e(this.laneStr)) + "</td>\n<td>" + t(e(this.daysStr)) + "</td>\n<td>" + t(e(this.timeStr)) + "</td>\n<td class='restriction-item-summary' title='" + t(e(this.summaryStr)) + "'>\n<div class='restriction-item-details'>"),
                            this.isAllowed && (n.push("<span class='restriction-item-badge restriction-item-badge-allowed'>"),
                                n.push("" + t(e(this.t("restrictions.summary.badges.allowed")))),
                                n.push("</span>")),
                            this.isBlocked && (n.push("<span class='restriction-item-badge restriction-item-badge-blocked'>"),
                                n.push("" + t(e(this.t("restrictions.summary.badges.blocked")))),
                                n.push("</span>")),
                            this.isTollFree && (n.push("<span class='restriction-item-badge restriction-item-badge-toll-free'>"),
                                n.push("" + t(e(this.t("restrictions.summary.badges.toll_free")))),
                                n.push("<i class='badge-tooltip fa fa-info-circle' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("restrictions.summary.tooltips.toll_free"))) + "'></i>\n</span>")),
                            n.push("<div class='restriction-item-details-summary'>"),
                            n.push("" + t(e(this.summaryStr))),
                            n.push("</div>\n</div>\n</td>\n<td>\n<div class='restriction-actions'>"),
                            this.canModifyRestriction && (n.push("<div class='restriction-editing-actions'>"),
                                this.canApplyToAll && n.push("<i class='apply-to-all-tooltip do-applyToAll fa fa-clone' title='" + t(e(this.t("restrictions.editing.actions.apply_to_all"))) + "'></i>"),
                                n.push("<i class='do-delete fa fa-trash' title='" + t(e(this.t("restrictions.editing.actions.delete"))) + "'></i>\n</div>")),
                            n.push("<i class='do-edit fa fa-chevron-right restriction-action-edit'></i>\n</div>\n</td>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='modal-dialog restrictions-modal'>\n<div class='modal-content'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.forwardTitle))),
                            n.push("</div>\n<div class='restriction-summary-filler'></div>\n<div class='restriction-summary-dropdown'>\n<select class='constraint-select constraint-select-fwd form-control' name='constraint'></select>\n</div>\n</div>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.reverseTitle))),
                            n.push("</div>\n<div class='restriction-summary-filler'></div>\n<div class='restriction-summary-group-dropdown'>\n<select class='constraint-select constraint-select-rev form-control' name='constraint'></select>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            n.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            n.push("</h3>\n<div class='modal-header-messages'>"),
                            this.editingMultipleSegments && (n.push("<div class='modal-header-message'>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.multiple_segments")))),
                                n.push("</div>")),
                            this.canEditRestrictions || (n.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='modal-body'>"),
                            this.enablePickupRestrictions ? (n.push("<ul class='nav nav-tabs restriction-tabs'>\n<li>\n<a data-toggle='tab' href='#driving-restrictions'>"),
                                n.push("" + t(e(this.t("restrictions.tab_headers.driving")))),
                                n.push("</a>\n</li>\n<li>\n<a data-toggle='tab' href='#pickup-restrictions'>"),
                                n.push("" + t(e(this.t("restrictions.tab_headers.pickup")))),
                                n.push("</a>\n</li>\n</ul>\n<div class='tab-content'>\n<div class='tab-pane' id='driving-restrictions'></div>\n<div class='tab-pane' id='pickup-restrictions'></div>\n</div>")) : n.push("<div id='driving-restrictions'></div>"),
                            n.push("</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-container'>\n<div class='driving-controls'>\n<input id='tollRoadCheckbox' type='checkbox' name='tollRoad'>\n<label for='tollRoadCheckbox'>"),
                            n.push("" + t(e(this.t("restrictions.editing.segment.toll_road")))),
                            n.push("</label>\n<i class='toll-road-tooltip waze-tooltip' title='" + t(e(this.t("restrictions.editing.segment.toll_road_disabled"))) + "'></i>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<table class='restrictions-table table'>\n<thead>\n<tr>\n<th class='restriction-segment-attribute'>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.lane")))),
                            n.push("</th>\n<th>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.days")))),
                            n.push("</th>\n<th>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.time")))),
                            n.push("</th>\n<th>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.details")))),
                            n.push("</th>\n<th></th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            n.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            n.push("</h3>\n<div class='modal-header-messages'>"),
                            this.canEditRestrictions || (n.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='modal-body'>\n<div class='restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.summaryTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>"),
                            this.canEditDifficultTurns && (n.push("<div class='controls-container'>\n<input id='is-difficult-checkbox' type='checkbox' name='isDifficult'>\n<label for='is-difficult-checkbox'>"),
                                n.push("" + t(e(this.t("restrictions.editing.turn.difficult_turn")))),
                                n.push("</label>\n</div>")),
                            n.push("</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restriction-editing-container'>\n<div class='timeframe-section timeframe-section-weekdays'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.days")))),
                            n.push("</div>\n<div class='timeframe-section-content'>\n<div class='timeframe-weekdays'>"),
                            r = 0,
                            s = (a = W.Config.week_days_order).length; r < s; r++)
                            i = a[r],
                            n.push("<div class='controls-container'>\n<input class='weekday' id='day-ordinal-" + i + "-checkbox' type='checkbox' value='" + t(e(this.getWeekdayFromOrdinal(i))) + "'>\n<label for='day-ordinal-" + t(e(i)) + "-checkbox'>"),
                            n.push("" + t(e(this.t("date.abbr_day_names")[i]))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n<div class='timeframe-weekdays-toggle'>"),
                            n.push("      " + t(e(this.t("restrictions.editing.toggle.select")))),
                            n.push("      <span>\n      :&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-all weekdays-toggle'>"),
                            n.push("      " + t(e(this.t("restrictions.editing.toggle.all")))),
                            n.push("      </span>\n      <span>\n      ,&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-none weekdays-toggle'>"),
                            n.push("      " + t(e(this.t("restrictions.editing.toggle.none")))),
                            n.push("      </span>\n</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-hours'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.hours")))),
                            n.push("</div>\n<div class='timeframe-hours-controls'>\n<div class='timeframe-section-content'>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-from-time' name='fromTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-to-time' name='toTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='controls-container timeframe-all-day'>\n<input id='is-all-day-checkbox' type='checkbox' name='isAllDay'>\n<label for='is-all-day-checkbox'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.all_day")))),
                            n.push("</label>\n</div>\n</div>\n<div class='timeframe-overnight-message'>\n<i class='waze-tooltip'></i>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.overnight")))),
                            n.push("</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-dates'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.applies")))),
                            n.push("</div>\n<div class='timeframe-section-content'>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-off-radio' type='radio' name='isDuringDates' value='false'>\n<label for='is-during-dates-off-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.always")))),
                            n.push("</label>\n</div>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-on-radio' type='radio' name='isDuringDates' value='true'>\n<label class='label-datepicker' for='is-during-dates-on-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.every_month")))),
                            n.push("</label>\n<input class='btn btn-default datepicker'>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<p class='description'>"),
                            n.push("" + t(e(this.title))),
                            this.collated && n.push("" + t(e(" (" + this.collated + ")"))),
                            this.showPanButton && n.push("<a class='focus'>\n<i class='fa fa-crosshairs'></i>\n</a>"),
                            n.push("</p>\n<div class='suggestion'>\n<span class='suggestion-title'>" + t(e(this.t("save.error.suggestion"))) + "</span>"),
                            n.push("" + t(e(this.solution))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='error-list'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.getTitle())) + "</h4>\n</div>\n<div class='body'>\n<ul class='list list-unstyled'></ul>\n</div>\n<div class='actions clearfix'>"),
                            this.showActionTitle() && n.push("<p class='actions-title'>" + t(e(this.t("save.error.actions.title"))) + "</p>"),
                            this.collection.isIgnorable() ? n.push("<button class='btn btn-default edit'>" + t(e(this.t("save.error.actions.edit"))) + "</button>\n<button class='btn btn-default save'>" + t(e(this.t("save.error.actions.save"))) + "</button>") : n.push("<button class='btn btn-default close-button'>" + t(e(this.t("save.error.actions.close"))) + "</button>"),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='success'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.t("save.success.title"))) + "</h4>\n</div>\n<div class='body'>\n<div class='change-count'>"),
                            n.push("" + e(this.getSaveCountTextFor("segments"))),
                            n.push("" + e(this.getSaveCountTextFor("nodes"))),
                            n.push("" + e(this.getSaveCountTextFor("venues"))),
                            n.push("" + e(this.getSaveCountTextFor("bigJunctions"))),
                            n.push("</div>"),
                            this.showPendingVenues() && (n.push("<div class='pending-venues'></div>"),
                                this.venueNames.length > 0 ? n.push("" + e(this.safe_t("save.success.pending_venues.with_names", {
                                    names: this.h.contentTag("strong", this.venueNames)
                                }))) : n.push("" + e(this.safe_t("save.success.pending_venues.no_names")))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='waze-staff-tools'>\n<div class='action dropdown env-switcher'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#'>"),
                            n.push("" + t(e(this.currentRegionName))),
                            n.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>\n<li>\n<a class='env-link' href='" + t(e(this.getURLForLocale(I18n.locale))) + "' data-env='row'>" + t(e(this.t("envs.row"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='" + t(e(this.getURLForLocale(I18n.locale))) + "' data-env='usa'>" + t(e(this.t("envs.usa"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='" + t(e(this.getURLForLocale(I18n.locale))) + "' data-env='il'>" + t(e(this.t("envs.il"))) + "</a>\n</li>\n</ul>\n</div>\n<div id='snapshot-toggler'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='street-view-control'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div id='street-view-container'>\n<div class='panorama view-area'></div>\n<a class='close-button'>\n<i class='fa fa-remove'></i>\n</a>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='item-icon'></div>\n<span class='menu-title'></span>\n<span class='loader'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>\n<div class='v-sign'></div>\n<div class='changes-log-region'></div>\n<div class='counter'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='result-error-message results-error'>"),
                            n.push("" + t(e(this.t("toolbar.search_results.error")))),
                            n.push("</div>\n<div class='no-results-error-message results-error'>"),
                            n.push("" + t(e(this.t("toolbar.search_results.no_results")))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='search-result'>\n<div class='icon'></div>\n<div class='content'>\n<div class='" + ["title", "" + t(e(this.description ? void 0 : "no-description"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>"),
                            this.description && (n.push("<div class='description'>"),
                                n.push("" + t(e(this.description))),
                                n.push("</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<form class='form-search'>\n<div class='input-wrapper'>\n<input class='search-query' autocomplete='off' name='q' spellcheck='off' type='text' placeholder='" + t(e(this.t("toolbar.search"))) + "'>\n<i class='fa fa-spin fa-spinner input-addon input-addon-right spinner'></i>\n</div>\n<div class='search-result-region'></div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='toolbar-icon'></div>\n<div class='group-title'>" + t(e(this.t("toolbar." + this.name))) + "</div>\n<menu class='dropdown-menu'></menu>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.icon && n.push("<div class='" + ["toolbar-tooltip-icon", "" + t(e(this.icon + "-icon"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                            n.push("<div class='toolbar-tooltip-text'>" + t(e(this.text)) + "</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='item-icon'></div>\n<span class='menu-title'>" + t(e(this.title)) + "</span>"),
                            this.showDrawingControls && (n.push("<div class='drawing-controls'>"),
                                this.secondaryControl && n.push("<span class='" + ["drawing-control", "secondary-control", "waze-tooltip", "" + t(e(this.secondaryControl.drawingType))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-toggle='tooltip' title='" + t(e(this.t("drawing." + this.secondaryControl.drawingType))) + "'></span>"),
                                this.control && n.push("<span class='" + ["drawing-control", "main-control", "waze-tooltip", "" + t(e(this.control.drawingType))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-toggle='tooltip' title='" + t(e(this.t("drawing." + this.control.drawingType, {
                                    name: this.featureName
                                }))) + "'></span>"),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='mode-switcher'>\n<div class='title-button'>\n<div class='short-title span'>" + t(e(this.t("title_short"))) + "</div>\n<div class='fa fa-angle-down icon'></div>\n</div>\n<menu class='dropdown-menu'>\n<ul class='list-unstyled'>\n<li class='mode-item' data-mode='" + t(e(0)) + "'>"),
                            n.push("" + t(e(this.t("modes.name.default")))),
                            n.push("</li>\n<li class='mode-item' data-mode='" + t(e(1)) + "'>"),
                            n.push("" + t(e(this.t("modes.name.mte")))),
                            n.push("</li>\n</ul>\n</menu>\n</div>\n<div id='search'></div>\n<div id='edit-buttons'></div>\n<div class='layer-switcher-container'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='area-manager-item'>\n<a href='#'>\n<span class='username'>" + t(e(this.username)) + "</span>\n</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='main-list-region'></div>\n<div class='rest-list-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='title'>" + t(e(this.t("area_managers_list.title") + ":")) + "</div>\n<ul class='main-list'></ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.numItems > 0 && n.push("" + t(e("+"))),
                            n.push("<span class='dropdown'>\n<a class='dropdown-toggle' data-toggle='dropdown'>"),
                            this.numItems > 0 && n.push("" + t(e(this.t("area_managers_list.rest", {
                                count: this.numItems
                            })))),
                            n.push("</a>\n<ul class='dropdown-menu'></ul>\n</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='topbar'>\n<div class='location-info-region'></div>\n<div class='area-managers-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + t(e(this.operationText))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<span class='full-address'></span>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'>"),
                            i = 0,
                            r = (a = this.options).length; i < r; i++)
                            s = a[i],
                            n.push("<div class='option-container'>\n<input class='" + t(e(this.isEmpty(s) ? "empty" : void 0)) + "' id='" + t(e(this.optionToId(s))) + "' type='radio' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n</div>");
                        return n.push("<div class='option-container'>\n<input id='custom_description_radio' type='radio' value='" + t(e(this.CUSTOM_DESCRIPTION)) + "' name='" + t(e(this.name)) + "'>\n<label for='custom_description_radio'>"),
                            n.push("" + e(this.t("merge_places.custom_description"))),
                            n.push("</label>\n</div>\n<div class='text-container'>\n<textarea class='form-control'></textarea>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='selection-container'>\n<div class='fa-spin loader'>\n<div class='spinner'></div>\n</div>\n<div class='selection-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        return [].join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container images-selection selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'>"),
                            i = 0,
                            r = (a = this.options).length; i < r; i++)
                            s = a[i],
                            n.push("<div class='image-container'>\n<input id='" + t(e(this.optionToId(s))) + "' type='checkbox' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label class='image-label' for='" + t(e(this.optionToId(s))) + "'>\n<img class='image-preview' src='" + t(e(this.getUrlById(s))) + "'>\n</label>\n</div>");
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<div class='merge-landmark-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<div class='modal-title'>\n<h3>"),
                            t.push("" + e(this.t("merge_places.title", {
                                count: this.placesCount,
                                mainPlaceName: this.mainPlaceName
                            }))),
                            t.push("</h3>\n</div>\n</div>\n<div class='modal-body'>\n<div class='instruction'>"),
                            t.push("" + e(this.t("merge_places.instruction", {
                                count: this.placesCount,
                                mainPlaceName: this.mainPlaceName
                            }))),
                            t.push("</div>\n<div class='name-region'></div>\n<div class='description-region'></div>\n<div class='address-region'></div>\n<div class='lockRank-region'></div>\n<div class='categories-region'></div>\n<div class='alert alert-gray parking-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.parking_message"))),
                            t.push("</div>\n<div class='alert alert-gray brand-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.gas_message"))),
                            t.push("</div>\n<div class='brand-region'></div>\n<div class='externalProviderIDs-region'></div>\n<div class='openingHours-region'></div>\n<div class='url-region'></div>\n<div class='phone-region'></div>\n<div class='services-region'></div>\n<div class='images-region'></div>\n<div class='parking-attributes'>\n<div class='parkingType-region'></div>\n<div class='hasTBR-region'></div>\n<div class='canExitWhileClosed-region'></div>\n<div class='costType-region'></div>\n<div class='paymentType-region'></div>\n<div class='estimatedNumberOfSpots-region'></div>\n<div class='lotType-region'></div>\n</div>\n</div>\n<div class='modal-footer'>\n<button class='do-close waze-btn waze-btn-smaller waze-btn-white'>"),
                            t.push("" + e(this.t("merge_places.actions.cancel"))),
                            t.push("</button>\n<button class='do-apply waze-btn waze-btn-blue waze-btn-smaller'>"),
                            t.push("" + e(this.t("merge_places.actions.merge"))),
                            t.push("</button>\n</div>\n</div>\n</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'></div>"),
                            i = 0,
                            r = (a = this.options).length; i < r; i++)
                            s = a[i],
                            n.push("<div class='" + ["option-container", "" + t(e(this.isEmpty(s) ? "empty" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input id='" + t(e(this.optionToId(s))) + "' type='checkbox' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n<input class='main-button' id='" + t(e(this.optionToId(s) + "_radio")) + "' type='radio' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label class='main-label' for='" + t(e(this.optionToId(s) + "_radio")) + "' data-main-text='" + t(e(this.t("merge_places.name.main"))) + "' data-set-main-text='" + t(e(this.t("merge_places.name.set_main"))) + "'></label>\n</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'>"),
                            i = 0,
                            r = (a = this.options).length; i < r; i++)
                            s = a[i],
                            n.push("<div class='option-container'>\n<input id='" + t(e(this.optionToId(s))) + "' type='checkbox' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='selection-container waze-radio-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'></div>"),
                            i = 0,
                            r = (a = this.options).length; i < r; i++)
                            s = a[i],
                            n.push("<div class='option-container'>\n<input class='" + t(e(this.isEmpty(s) ? "empty" : void 0)) + "' id='" + t(e(this.optionToId(s))) + "' type='radio' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='merge-item'>\n<div class='icon-container'>\n<div class='" + ["icon", "" + t(e(this.categoryClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='badge-tooltip error-badge lock' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.lock_tooltip", {
                                rank: this.lockRank
                            }))) + "'></div>\n<div class='badge-tooltip error-badge purs' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.purs_tooltip", {
                                count: this.pursCount
                            }))) + "'></div>\n<div class='badge-tooltip error-badge new-badge' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.new_landmark_tooltip"))) + "'></div>\n</div>\n<div class='point-icon'></div>\n<div class='polygon-icon'></div>\n<div class='do-remove'></div>\n<div class='content'>\n<div class='landmark-name'>"),
                            n.push("" + e(this.name)),
                            n.push("</div>\n<div class='details'>"),
                            this.createdBy && n.push("<div class='text'>" + e(this.safe_t("edit.merge_landmark.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            n.push("</div>\n</div>\n<div class='do-merge waze-btn waze-btn-white'>"),
                            n.push("" + e(this.t("edit.merge_landmark.merge"))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='merge-landmarks separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.merge_landmark.title", {
                                count: this.numVenues
                            }))) + "</span>\n</div>\n<div class='alert alert-gray header-alert pending-changes-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.unresolved_message")))),
                            n.push("</div>\n<div class='ad-lock-alert alert alert-gray header-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.ad_locked")))),
                            n.push("</div>\n<div class='alert alert-gray header-alert lock-level-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.lock_message")))),
                            n.push("</div>\n<div class='alert alert-gray header-alert parking-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.parking_message")))),
                            n.push("</div>\n<div class='alert alert-gray count-alert header-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.count_message", {
                                count: this.maxLandmarksCount
                            })))),
                            n.push("</div>\n<div class='alert alert-gray distance-alert header-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.distance_message")))),
                            n.push("</div>\n<div class='tab-content'>\n<div class='active tab-pane'>\n<div id='mergeLandmarksCollection'></div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            null != this.updatedBy && t.push("<li>" + e(this.safe_t("edit.updated", {
                                time: this.h.dateOnlyString(this.updatedOn),
                                user: this.h.userProfile(this.updatedBy)
                            })) + "</li>"),
                            null != this.createdBy && t.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</li>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", {
                                createdBy: this.createdBy,
                                updatedBy: this.updatedBy
                            }))),
                            this.id && n.push("<li>" + t(e(this.t("edit.id", {
                                num: this.id
                            }))) + "</li>"),
                            n.push("</ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='alt-street' data-id='" + t(e(this.id)) + "'>\n<div class='city-name'>" + t(e(this.cityName)) + "</div>\n<div class='street-name'>" + t(e(this.streetName)) + "</div>\n<a class='alt-street-delete' href='#'></a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='alt-street-form-template new-alt-street'>\n<div class='alt-street-block'>"),
                            n.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            n.push("<div class='city-block form-group toggleable-input'>\n<label class='control-label'>" + t(e(this.t("edit.address.city"))) + "</label>\n<div class='controls-container'>"),
                            i = _.uniqueId("alt_street_empty_city"),
                            n.push("<input class='alt-address empty-city' id='" + t(e(i)) + "' type='checkbox'>\n<label for='" + t(e(i)) + "'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n<div class='city-container'>\n<label></label>\n<input class='city-name form-control' type='text' autocomplete='off' title='" + t(e(this.t("edit.address.city"))) + "' maxlength='100'>\n</div>\n</div>\n<div class='form-group street-block toggleable-input'>\n<label class='control-label'>" + t(e(this.t("edit.address.street"))) + "</label>\n<input class='form-control street-name' type='text' autocomplete='off' title='" + t(e(this.t("edit.address.street"))) + "' maxlength='100'>\n</div>\n<a class='alt-street-delete' href='#'></a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r, s, a, o, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            r = n(89).CITY_NAME_PATTERN,
                            i.push("<div class='clearfix preview'>\n<div class='full-address-container'>\n<span class='full-address'></span>\n<div class='quota-tooltip waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.address.quota_exceeded", {
                                quota: this.maxAllowedStreetNamesChanges
                            }))) + "'></div>\n</div>"),
                            null != this.altStreets && this.altStreets.length > 0) {
                            for (i.push("<ul class='alt-street-list list-unstyled'>"),
                                a = 0,
                                o = (l = this.altStreets.models).length; a < o; a++)
                                s = l[a],
                                i.push("<li class='alt-street'>"),
                                i.push("" + t(e(s.get("streetName") + ", " + (s.get("cityName") || this.t("edit.address.no_city"))))),
                                i.push("</li>");
                            i.push("</ul>")
                        }
                        return i.push("</div>\n<form class='address-form clearfix inner-form'>"),
                            i.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            this.showStreetInput && (i.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                                i.push("" + t(e(this.t("edit.address.street")))),
                                i.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-street' id='empty-street' type='checkbox'>\n<label for='empty-street'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='" + ["controls", "" + t(e(this.enableTTS ? "input-group" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='form-control street-name tts-input' autocomplete='off' type='text' maxlength='" + t(e(this.MAX_LENGTH.STREET_NAME)) + "'>"),
                                this.enableTTS && i.push("<span class='input-group-btn tts-playback-region'></span>"),
                                i.push("</div>\n</div>")),
                            this.showHouseNumberInput && i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.houseNumber"))) + "</label>\n<div class='controls'>\n<input class='form-control house-number' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.HOUSE_NUMBER)) + "' type='text'>\n</div>\n</div>"),
                            i.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("edit.address.city")))),
                            i.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-city' id='empty-city' type='checkbox'>\n<label for='empty-city'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls'>"),
                            this.showCitySelect ? i.push("<select class='city-id form-control' required></select>") : i.push("<input class='city-name form-control' type='text' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.CITY_NAME)) + "' pattern='" + t(e(r)) + "'>"),
                            i.push("</div>\n</div>"),
                            this.showStatesSelection && i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.state"))) + "</label>\n<div class='controls'>\n<select class='form-control state-id' required></select>\n</div>\n</div>"),
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.country"))) + "</label>\n<div class='controls'>\n<select class='country-id form-control' required></select>\n</div>\n</div>"),
                            this.showAltStreets && i.push("<div class='add-alt-street-form'>\n<div class='alt-streets'></div>\n<div class='alt-streets-actions'>\n<a class='add-alt-street-btn' href='#'>" + t(e("+ " + this.t("edit.segment.actions.add_alt_street"))) + "</a>\n</div>\n<div class='new-alt-streets'></div>\n</div>"),
                            i.push("<div class='action-buttons'>\n<button class='save-button waze-btn waze-btn-blue waze-btn-smaller' type='submit'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='archive-panel'>\n<div class='header'>\n<a class='close-panel'></a>"),
                            n.push("" + t(e(this.t("archive_panel.title")))),
                            n.push("</div>\n<div class='body'>"),
                            null != this.fromAddress && (n.push("<div class='from-address'>\n<strong>" + t(e(this.t("archive_panel.from") + ":")) + "</strong>"),
                                n.push("" + t(e(this.formatAddress(this.fromAddress)))),
                                n.push("</div>")),
                            null != this.toAddress && (n.push("<div class='to-address'>\n<strong>" + t(e(this.t("archive_panel.to") + ":")) + "</strong>"),
                                n.push("" + t(e(this.formatAddress(this.toAddress)))),
                                n.push("</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            _.isEmpty(this.sessions))
                            n.push("<p class='message'>\n<strong>"),
                            n.push("" + t(e(this.t("user.drives.no_drives")))),
                            n.push("</strong>\n</p>\n<p class='message'>"),
                            n.push("" + t(e(this.t("user.drives.no_drives_explanation")))),
                            n.push("</p>");
                        else {
                            for (n.push("<p class='message'>"),
                                n.push("" + t(e(this.t("user.drives.subtitle") + ":"))),
                                n.push("</p>\n<ul class='result-list' id='archive-sessions'>"),
                                i = 0,
                                r = (s = this.sessions).length; i < r; i++)
                                a = s[i],
                                n.push("<li class='" + ["result", "session", "" + t(e(a.hasFullSession ? "session-available" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-id='" + t(e(a.id)) + "'>\n<p class='title'>" + t(e(this.h.localizeDateString("date.formats.long_with_time", a.startTime))) + "</p>\n<p class='additional-info clearfix'>\n<span>" + t(e(this.h.lengthString(a.totalRoadMeters))) + "</span>\n<span>" + t(e(this.h.durationString(a.startTime, a.endTime))) + "</span>\n</p>\n</li>");
                            n.push("</ul>")
                        }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='big-junction separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.big_junction.title"))) + "</span>\n</div>\n<div class='alert alert-danger header-alert size-alert'>" + t(e(this.t("edit.big_junction.validation_errors.area_too_big", {
                                size: this.MAX_POLYGON_SIZE_DEGREES
                            }))) + "</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='big-junction-edit-general'>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text'>\n</div>\n</div>\n</form>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.entrances"))) + "</label>\n<div class='junction-entry-list-region'></div>\n</div>\n<div class='form-group side-panel-section'>\n<div class='controls junction-actions'>\n<button class='action-button select-short-segments waze-btn waze-btn-smaller waze-btn-white'>" + t(e(this.t("edit.big_junction.select_segments"))) + "</button>\n</div>\n</div>\n<div class='lock-edit'></div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='segment-count'></li>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li class='feature-id'></li>\n</ul>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='camera separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.camera.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='camera-edit-general'></div>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.type_label"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='type'></select>\n</div>\n</div>\n<div class='controls-container form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.speed")))),
                            n.push("" + t(e(this.h.speedString()))),
                            n.push("</label>\n<div class='controls'>\n<input class='form-control' type='number' name='speed' maxlength='4'>\n</div>\n</div>\n<div class='lock-edit'></div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li class='feature-id'></li>\n</ul>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div style='display:none'>\n<input type='text' name='PreventChromeAutocomplete' autocomplete='address-level4'>\n</div>"),
                            e.join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r, s, a, o, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            r = n(392),
                            _.isEmpty(this.areas))
                            i.push("<p class='message'>" + t(e(this.t("user.areas.no_areas"))) + "</p>");
                        else {
                            for (i.push("<p class='message'>" + t(e(this.t("user.areas.subtitle") + ":")) + "</p>\n<ul class='result-list'>"),
                                a = 0,
                                o = (l = this.areas).length; a < o; a++)
                                s = l[a],
                                i.push("<li class='area result' data-index='" + t(e(s.get("num"))) + "'>"),
                                s.get("type") === r.prototype.TYPE.DRIVE ? i.push("<p class='title'>" + t(e(this.t("user.areas.area", {
                                    num: s.get("num") + 1
                                }))) + "</p>") : i.push("<p class='title'>" + t(e(this.t("user.areas.managed_area"))) + "</p>"),
                                i.push("<p class='additional-info clearfix'>\n<span>" + t(e(this.h.areaString(s.get("area")))) + "</span>\n</p>\n</li>");
                            i.push("</ul>")
                        }
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='focus-buttons'>\n<a class='focus' title='" + t(e(this.t("geolocation.focus-btn"))) + "'></a>\n<a class='street-view-btn' title='" + t(e(this.t("geolocation.street-view-btn"))) + "'></a>\n<a class='street-view-tooltip tooltip' title='" + t(e(this.t("geolocation.street-view-btn-disabled"))) + "' data-toggle='tooltip' data-placement='bottom'></a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["content", "" + t(e("valid-" + this.valid + " forced-" + this.forced))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='uneditable-number'>" + t(e(this.number)) + "</div>\n<div class='drag-handle'></div>\n<div class='" + ["input-wrapper", "" + t(e("side-" + (this.isLeft ? "left" : "right")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='number-preview'>" + t(e(this.number)) + "</div>\n<input class='number' value='" + t(e(this.number)) + "' type='text' placeholder='" + t(e(this.t("edit.segment.house_numbers.no_number"))) + "'>\n<div class='delete-button'>x</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='content'>\n<div class='header'>\n<div class='title'>" + t(e(this.address)) + "</div>\n<div class='loading-animation not-shown'></div>\n</div>\n<div class='success-message' style='display: none;'>" + t(e(this.t("edit.house_numbers.save.success"))) + "</div>\n<div class='error-message' style='display: none;'>Error loading house numbers</div>\n<div class='save-error-message' style='display: none;'>Error saving, please try again later\n<br>\n<button class='continue-editing waze-btn waze-btn-smaller waze-btn-white'>OK</button>\n</div>"),
                            this.pm.editingAllowedInZoom() || n.push("<div class='zoom-message'>" + t(e(this.t("edit.house_numbers.zoom_to_edit"))) + "</div>"),
                            n.push("<div class='last-edited'>\nLast edited by\n<span class='username'>" + t(e(this.h.formatUserName(null != (i = this.pm.selectedNumber) ? i.model.updatedBy : void 0))) + "</span>\n</div>\n<div class='force-message' style='display: none;'>"),
                            n.push("" + t(e(this.t("edit.house_numbers.save.invalid")))),
                            n.push("<br>"),
                            this.pm.canForcedInvalid() && (n.push("" + t(e(this.t("edit.house_numbers.force.title")))),
                                n.push("<br>\n<button class='force-invalid waze-btn waze-btn-red waze-btn-smaller'>" + t(e(this.t("edit.house_numbers.force.action"))) + "</button>")),
                            n.push("<button class='continue-editing waze-btn waze-btn-smaller waze-btn-white'>" + t(e(this.t("edit.house_numbers.force.continue"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='instruction-override-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<h3>" + t(e(this.t("instruction_override.title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control opcode-select'></select>\n</div>\n<div class='controls'>\n<button class='apply-button btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, n, i, r, s, a, o, l, u, d;
                        for (s in n = this.__htmlEscape,
                            t = this.__cleanValue,
                            i = [],
                            u = this.groups)
                            if (e.call(u, s)) {
                                for (r = u[s],
                                    i.push("<section class='shortcut-action-group'>"),
                                    null != r.members && i.push("<h2>" + n(t(this.t("keyboard_shortcuts.groups." + s + ".description"))) + "</h2>"),
                                    a = 0,
                                    o = (d = r.members).length; a < o; a++)
                                    (l = d[a]).changeable && (i.push("<p class='" + ["shortcut-action", "" + n(t(l.enabled ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-action='" + n(t(l.id)) + "'>"),
                                        null == l.shortcut || _.isEmpty(l.shortcut) ? i.push("<kbd class='no-shotcut'>None</kbd>") : (i.push("" + t(this.h.shortcutMaskToKeys(l.shortcut))),
                                            i.push("<kbd>" + n(t(this.h.getShortcutKey(l.shortcut))) + "</kbd>")),
                                        i.push("" + n(t(this.t("keyboard_shortcuts.groups." + s + ".members." + l.name)))),
                                        i.push("</p>"));
                                i.push("</section>")
                            }
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='shortcuts-dialog'>\n<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<button class='close' data-dismiss='modal' type='button'>×</button>\n<h3 class='modal-title'>" + t(e(this.t("keyboard_shortcuts.title"))) + "</h3>\n</div>\n<div class='modal-body'>"),
                            n.push("" + e(this.renderPartial("templates/keyboard_shortcuts/list", {
                                groups: this.groups
                            }))),
                            n.push("</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control lock-level-displayer waze-radio-container'>"),
                            n.push("" + e(this.h.radio({
                                label: " ",
                                name: "lockRankDisplay",
                                enable: !1,
                                forceChecked: !0
                            }))),
                            n.push("</div>\n<div class='form-control lock-level-selector waze-radio-container'>"),
                            n.push("" + e(this.h.radio({
                                label: this.t("edit.multiple_values"),
                                value: "MIXED",
                                name: "lockRank"
                            }))),
                            n.push("" + e(this.h.radio({
                                label: " ",
                                className: "automatic",
                                value: "AUTO",
                                name: "lockRank"
                            }))),
                            r = i = 0,
                            s = this.userRank; 0 <= s ? i <= s : i >= s; r = 0 <= s ? ++i : --i)
                            n.push("" + e(this.h.radio({
                                label: this.h.formatRank(r),
                                value: r,
                                name: "lockRank"
                            })));
                        return n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='footer-message map-message sandbox-message'>\n<div class='map-message-icon'></div>\n<div class='title'>" + t(e(this.t("play_mode.title"))) + "</div>\n<div class='description'>" + t(e(this.t("play_mode.description"))) + "</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div id='map'>\n<div id='map-overlay'></div>\n<div id='overlay-buttons'></div>\n<div id='popup-overlay'></div>\n<div id='map-lightbox'>\n<div class='overlay'></div>\n<div class='content'></div>\n</div>\n<div>\n<div id='topbar-container'></div>\n<div id='panel-container'></div>\n<div id='street-view-container'>\n<div class='panorama view-area'></div>\n<a class='close-button'>\n<i class='fa fa-remove'></i>\n</a>\n</div>\n<div class='view-area' id='WazeMap' tabindex='1'>\n<div class='snapshot-message'></div>\n<div id='sandbox-message'></div>\n</div>\n</div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='node separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.node.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='node-edit-general'>\n<div class='form-group side-panel-section'>\n<div class='big-junction-error'>\n<span class='error'>" + t(e(this.t("edit.node.permissions.big_junction.title"))) + "</span>"),
                            n.push("" + t(e(this.t("edit.node.permissions.big_junction.description")))),
                            n.push("</div>\n<div class='connections-edit'>\n<p class='connectionStatus'></p>\n<button class='allow-connections btn btn-default'>" + t(e(this.t("edit.node.turns.allow_all"))) + "</button>\n<button class='btn btn-default disallow-connections'>" + t(e(this.t("edit.node.turns.disallow_all"))) + "</button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='feature-id'></li>\n</ul>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-content'>\n<div class='modal-header'>\n<h3 class='modal-title'>" + t(e(this.t("edit.landmark.opening_hours.add_title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<form class='add-opening-hour' action='#' method='post'>\n<div class='days section'>"),
                            n.push("" + e(this.renderPartial("templates/util/day-checkboxes", {
                                cb: this.dayCallback
                            }))),
                            n.push("" + e(this.renderPartial("templates/util/toggle-checkboxes"))),
                            n.push("</div>\n<div class='hours section'>\n<div class='clearfix'>\n<div class='labels'>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='on' checked='" + t(e(!1)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.all_day")))),
                            n.push("</label>\n</div>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='off' checked='" + t(e(!0)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.from") + ":"))),
                            n.push("</label>\n</div>\n</div>\n<div class='inputs'>\n<div class='col-xs-4'>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control from-time time-selector' type='text' name='fromTime' value='" + t(e(this.defaultFromTime)) + "'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='col-xs-4'>\n<div class='pull-left to-label'>"),
                            n.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.to") + ":"))),
                            n.push("</div>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control time-selector to-time' type='text' name='toTime' value='" + t(e(this.defaultToTime)) + "'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class='validation-errors'></div>\n<div class='bottom'>\n<button class='waze-btn waze-btn-blue waze-btn-smaller'>" + t(e(this.t("edit.add"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + t(e(this.h.formatOpeningHour(this.model)))),
                            this.isEditable && n.push("<a class='delete' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<div class='control-label'>" + t(e(this.t("edit.landmark.opening_hours.title"))) + "</div>\n</div>\n<ul class='list'></ul>"),
                            this.isEditable && n.push("<a class='add waze-btn waze-btn-white' href='#'>" + t(e(this.t("edit.landmark.opening_hours.add"))) + "</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["actions", "approve-intent-" + t(e(this.getApproveActionIntent())) + " " + t(e(this.model.get("updateType")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            this.model.isPlaceAdLocked() ? n.push("<div class='alert alert-danger'>" + t(e(I18n.t("venues.update_requests.panel.needs_staff_approval"))) + "</div>") : this.model.isEditableByUser() ? (n.push("<form class='controls-container'>"),
                                this.isOpened() ? (n.push("" + e(this.h.radio({
                                        label: this.getRejectActionName(),
                                        name: "approved",
                                        dataType: "boolean",
                                        value: !1,
                                        currentValue: this.model.get("approved"),
                                        className: "reject"
                                    }))),
                                    n.push("" + e(this.h.radio({
                                        label: this.getApproveActionName(),
                                        name: "approved",
                                        dataType: "boolean",
                                        value: !0,
                                        currentValue: this.model.get("approved"),
                                        className: "approve"
                                    })))) : this.isApproved() ? (n.push("<div class='approved status'>"),
                                    n.push("" + e(this.getApprovedLabel())),
                                    n.push("</div>")) : this.isRejected() && (n.push("<div class='rejected status'>"),
                                    n.push("" + e(this.getRejectedLabel())),
                                    n.push("</div>")),
                                n.push("</form>")) : n.push("<div class='alert alert-danger'>" + t(e(this.getNoPermissionsMessage())) + "</div>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<div class='add-details'>"),
                            this.dateAdded && t.push("<div class='date small'>" + e(this.safe_t("venues.update_requests.panel.added_on", {
                                added_on_title: this.t("venues.update_requests.panel." + this.type),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"),
                            !this.hideUserDetails && this.createdBy && t.push("<div class='small user'>" + e(this.safe_t("venues.update_requests.panel.added_by", {
                                added_by_title: this.t("venues.update_requests.panel.added_by_title"),
                                username: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return e = this.__cleanValue,
                            t = [],
                            n = this.model.getAddedImage(),
                            t.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: n
                            }))),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !1,
                                dateAdded: n.get("date"),
                                createdBy: n.get("creatorUserId")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o, l, u, d;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.shouldShowName() && n.push("<div class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</div>"),
                            n.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n<div class='images'>\n<div class='carousel slide' id='" + t(e(this.getCarouselUniqueId())) + "' data-ride='carousel' data-interval='false'>\n<div class='carousel-inner' role='listbox'>"),
                            s = i = 0,
                            o = (u = this.getNewPlaceImages()).length; i < o; s = ++i)
                            r = u[s],
                            n.push("<div class='" + ["item", "" + t(e(0 === s ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: r
                            }))),
                            n.push("</div>");
                        if (n.push("</div>"),
                            this.shouldShowCarousel()) {
                            for (n.push("<ol class='carousel-indicators list-unstyled'>"),
                                s = a = 0,
                                l = (d = this.getNewPlaceImages()).length; a < l; s = ++a)
                                r = d[s],
                                n.push("<li class='" + t(e(0 === s ? "active" : void 0)) + "' data-target='" + t(e("#" + this.getCarouselUniqueId())) + "' data-slide-to='" + t(e(s)) + "'></li>");
                            n.push("</ol>")
                        }
                        return n.push("</div>\n</div>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r, s, a, o, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (i = []).push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            this.isGeometry)
                            i.push("" + t(e(this.t("venues.update_requests.panel.change.hover")))),
                            i.push("<div class='current location-button'>"),
                            i.push("" + t(e(this.t("venues.update_requests.panel.change.current")))),
                            i.push("<i class='fa fa-crosshairs'></i>\n</div>\n<div class='location-button suggested'>"),
                            i.push("" + t(e(this.t("venues.update_requests.panel.change.suggested")))),
                            i.push("<i class='fa fa-crosshairs'></i>\n</div>");
                        else if ("images" === this.fieldName) {
                            for (r = n(105).SIZE,
                                i.push("<div class='removed-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>\n<div class='remove-images'>"),
                                s = 0,
                                o = (l = this.getRemovedImages()).length; s < o; s++)
                                a = l[s],
                                i.push("<img class='image-preview' src='" + t(e(a.getUrl(r.WEB))) + "' data-image-id='" + t(e(a.id)) + "'>");
                            i.push("</div>")
                        } else
                            i.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this)));
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.showChangeList)
                            if (this.isExternalProvider)
                                n.push("<div class='external-providers-view'></div>");
                            else {
                                for (n.push("<ul class='diff-list list-unstyled'>"),
                                    i = 0,
                                    s = (a = this.changeList).length; i < s; i++)
                                    r = a[i],
                                    n.push("<li class='" + ["diff", "" + t(e(r.changeType.toLowerCase()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<span class='name'>" + t(e(r.name)) + "</span>\n</li>");
                                n.push("</ul>")
                            }
                        else
                            this.currentValue && (this.removing ? n.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>") : n.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.current"))) + "</div>"),
                                n.push("<div class='current'>" + t(e(this.currentValue)) + "</div>")),
                            this.removing || n.push("<div class='suggested-title'>" + t(e(this.t("venues.update_requests.panel.change.suggested"))) + "</div>\n<div class='suggested'>" + t(e(this.suggestedValue)) + "</div>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.parking.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<h3>" + t(e(I18n.t("venues.update_requests.panel.place_deleted"))) + "</h3>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='anchor fa fa-crosshairs'></div>\n<div class='id span'>" + t(e(this.uuid)) + "</div>\n<a class='external-provider-link name' href='" + t(e(this.url)) + "' target='_blank'>" + t(e(this.name)) + "</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<ul class='diff-list external-providers-list list-unstyled'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            n.push("<div class='body'>\n<div class='scrollable'>\n<div class='request-details'>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                            this.showImage ? (n.push("" + e(this.renderPartial("templates/place_updates/image", {
                                    image: this.image
                                }))),
                                this.image && n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "picture_added_on_title",
                                    hideUserDetails: !this.showAddingUser,
                                    dateAdded: this.image.get("date"),
                                    createdBy: this.image.get("creatorUserId")
                                })))) : n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !this.showAddingUser,
                                dateAdded: this.venue.attributes.createdOn
                            }))),
                            n.push("</div>\n<div class='changes'>\n<div class='small'>" + t(e(I18n.t("venues.update_requests.panel.flag_reason"))) + "</div>\n<h3>" + t(e(this.t("venues.update_requests.flags." + this.model.get("type")))) + "</h3>"),
                            this.showComment && n.push("<div class='flag-comment'>" + t(e(this.model.get("comment"))) + "</div>"),
                            this.model.get("createdBy") && (n.push("<div class='reported-by small'>"),
                                n.push("" + e(this.safe_t("edit.reported", {
                                    time: this.h.dateOnlyString(this.model.get("dateAdded")),
                                    user: this.h.userProfile(this.model.get("createdBy"))
                                }))),
                                n.push("</div>")),
                            n.push("</div>"),
                            this.showDuplicateVenue && (n.push("<div class='duplicate request-details'>"),
                                n.push("" + e(this.renderPartial("templates/place_updates/place_details", _.defaults({
                                    venue: this.model.getDuplicateVenue()
                                }, this)))),
                                n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "added_on_title",
                                    hideUserDetails: !0,
                                    dateAdded: this.model.getDuplicateVenue().attributes.createdOn
                                }))),
                                n.push("</div>")),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            r = n(105).SIZE,
                            this.image ? i.push("<a>\n<img class='image-preview' src='" + t(e(this.image.getUrl(r.MOBILE))) + "' data-image-id='" + t(e(this.image.id)) + "'>\n</a>") : i.push("<div class='missing-image'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-dialog venue-image-dialog'>\n<div class='modal-content'>\n<div class='" + ["prev-button", "waze-icon-full-arrow-left", "" + t(e(this.hasPrev ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='" + ["next-button", "waze-icon-full-arrow-right", "" + t(e(this.hasNext ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='modal-header'>\n<div class='close' data-dismiss='modal' type='button'>×</div>\n<div class='venue-name'>" + t(e(this.h.formatVenueName(this.venueName))) + "</div>\n</div>\n<div class='modal-body'>\n<img src='" + t(e(this.imageUrl)) + "'>\n<div class='details'>\n<div class='date small'>" + e(this.safe_t("venues.images.added_on", {
                                added_on_title: this.h.contentTag("strong", this.t("venues.images.added_on_title")),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"),
                            this.addingUserId && n.push("<div class='small user'>" + e(this.safe_t("venues.images.added_by", {
                                added_by_title: this.h.contentTag("strong", this.t("venues.images.added_by_title")),
                                username: this.h.userProfile(this.addingUserId)
                            })) + "</div>"),
                            n.push("<div class='delete-button waze-icon-trash'>" + t(e(this.t("venues.images.delete"))) + "</div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            t.push("<div class='body'>\n<div class='scrollable'>"),
                            this.hidePlaceDetails || (t.push("<div class='request-details'>"),
                                t.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                                t.push("</div>")),
                            t.push("<div class='changes'>"),
                            t.push("" + e(this.renderPartial(this.getChangesTemplate(), this))),
                            t.push("</div>\n</div>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='place-update'></div>\n<div class='navigation'>"),
                            this.showNextButton ? (n.push("<div class='next waze-plain-btn'>"),
                                n.push("" + t(e(this.nextButtonString))),
                                n.push("</div>")) : this.showNextVenueButton ? (n.push("<div class='next-venue waze-plain-btn'>"),
                                n.push("" + t(e(this.t("venues.update_requests.panel.next_venue")))),
                                n.push("</div>")) : (n.push("<div class='done waze-plain-btn'>"),
                                n.push("" + t(e(this.t("venues.update_requests.panel.done")))),
                                n.push("</div>")),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<a class='close-panel'></a>\n<div class='header'>\n<div class='dot'></div>\n<div class='main-title'>" + t(e(this.t("venues.update_requests.panel.title.MAIN_TITLE"))) + "</div>\n<div class='title'>" + t(e(this.getTitle()))),
                            n.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            n.push("</div>\n<div class='reported'></div>"),
                            this.showDebug && n.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.h.formatVenueUpdateRequestId(this.model.id)
                            }))) + "</div>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='place-details'>"),
                            this.shouldShowName() && n.push("<h3 class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</h3>"),
                            n.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<ul class='changed-fields list-unstyled'></ul>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='settings side-panel-section'>\n<h4>" + t(e(this.t("user.prefs.subtitle"))) + "</h4>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.two_way"), "twoWayRoad", "on"))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.turns_allowed"), "turnsAllowed", "on"))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.require_deselect"), "requireDeselect", "on"))),
                            n.push("</div>\n</div>\n<div class='form-group'>\n<div class='controls'>\n<label class='control-label'>" + t(e(this.t("user.prefs.units.title"))) + "</label>\n<div class='btn-group units-group waze-radio-container' data-type='boolean'>\n<input class='units-check' id='settings-units-imperial' type='radio' name='units-radio' value='true'>\n<label for='settings-units-imperial'>"),
                            n.push("" + t(e(this.t("user.prefs.units.imperial")))),
                            n.push("</label>\n<input class='units-check' id='settings-units-metric' type='radio' name='units-radio' value='false'>\n<label for='settings-units-metric'>"),
                            n.push("" + t(e(this.t("user.prefs.units.metric")))),
                            n.push("</label>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("envs.title")))),
                            n.push("</label>\n<div class='controls' id='env-select'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("user.prefs.language")))),
                            n.push("</label>\n<select class='form-control language-select'>"),
                            i = 0,
                            s = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"].length; i < s; i++)
                            r = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"][i],
                            n.push("<option value='" + t(e(r)) + "' selected='" + t(e(r === I18n.currentLocale())) + "'>"),
                            n.push("" + t(e({
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español América Latina",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "อังกฤษ"
                            } ["" + r]))),
                            n.push("</option>");
                        return n.push("</select>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("user.prefs.turn_arrows")))),
                            n.push("</label>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.spread_turn_arrows"), "spreadTurnArrows", "on"))),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.show_transparent_turn_arrows"), "showTransparentTurnArrows", "on"))),
                            n.push("</div>\n</div>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<label class='control-label'>" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "</label>\n<div class='controls'>\n<div class='controls-container'>"),
                            (this.segment.mixed.fwdDirection || this.segment.attributes.fwdDirection) && n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "fwdSpeedCamera"
                            }))),
                            n.push("</div>\n<div class='controls-container'>"),
                            (this.segment.mixed.revDirection || this.segment.attributes.revDirection) && n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "revSpeedCamera"
                            }))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='hide-walking-trail'>\n<div class='form-group'>\n<div class='hint routing-road-type-message'></div>\n<div class='controls'>\n<div class='controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "unpaved"
                            }))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "tunnel"
                            }))),
                            n.push("</div>\n<div class='controls-container headlights-reminder'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "headlights",
                                disabledTooltip: this.t("objects.common.rank_too_low")
                            }))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "nearbyHOV"
                            }))),
                            n.push("<i class='waze-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.segment.tooltips.nearbyHOV"))) + "'></i>\n</div>\n</div>\n</div>\n<div class='form-group routing-road-type-select'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='routingRoadType'></select>\n</div>\n</div>\n<div class='form-group toll-road-message'>\n<i class='waze-tooltip'></i>\n<span>" + t(e(this.t("edit.segment.fields.toll"))) + "</span>\n</div>\n<div class='form-group mixed-toll-road-message'>\n<i class='waze-tooltip'></i>\n<span>" + t(e(this.t("edit.segment.fields.mixed_toll"))) + "</span>\n</div>\n<div class='form-group restriction-editing'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.restriction"))) + "</label>\n<div class='restriction-list'>\n<div>\n<a class='restriction-count' href='#' data-restriction-type='driving'>\n<span class='number'></span>\n<span class='title'>" + t(e(this.t("edit.segment.restrictions.driving_restrictions"))) + "</span>\n</a>\n</div>\n<div>\n<a class='restriction-count' href='#' data-restriction-type='pickup'>\n<span class='number'></span>\n<span class='title'>" + t(e(this.t("edit.segment.restrictions.pickup_restrictions"))) + "</span>\n</a>\n</div>\n</div>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-white'></button>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.direction"))) + "</label>\n<div class='controls waze-radio-container'>"),
                            n.push("" + e(this.h.directionRadio(-1))),
                            n.push("" + e(this.h.directionRadio(3))),
                            n.push("" + e(this.h.directionRadio(1))),
                            n.push("" + e(this.h.directionRadio(2))),
                            n.push("" + e(this.h.directionRadio(0))),
                            n.push("</div>\n</div>\n<div class='form-group speed-limits'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.speed_limit"))) + "</label>\n<div class='clearfix controls speed-limit'>"),
                            n.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                direction: "fwd"
                            }))),
                            n.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                direction: "rev"
                            }))),
                            n.push("</div>\n</div>\n</div>\n<div class='lock-edit'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.level"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='level'></select>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o, l, u;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='segment separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.segment.title", {
                                count: this.numSegments
                            }))) + "</span>\n</div>\n<div class='inconsistent-direction segment-alert'>\n<i class='fa fa-info-circle'></i>"),
                            n.push("" + t(e(this.t("edit.segment.alerts.op_direction")))),
                            n.push("</div>\n<div class='inconsistent-driving-types segment-alert'>\n<i class='fa fa-info-circle'></i>"),
                            n.push("" + t(e(this.t("edit.segment.alerts.different_driving_types")))),
                            n.push("</div>\n<div class='segment-details'>\n<span class='error'>" + t(e(this.segmentErrorTitle)) + "</span>"),
                            n.push("" + t(e(this.segmentErrorDescription))),
                            n.push("</div>\n<section class='tabs-container'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#segment-edit-general'>" + t(e(this.t("edit.segment.tabs.general"))) + "</a>\n</li>\n<li>\n<a class='closures-tab' data-toggle='tab' href='#segment-edit-closures'>"),
                            n.push("" + t(e(this.t("edit.segment.tabs.closures")))),
                            n.push("</a>\n</li>\n<li class='lanes-tab-list-item'>\n<a class='lanes-tab' data-toggle='tab' href='#segment-edit-lanes'>"),
                            n.push("" + t(e(this.t("edit.segment.tabs.lanes")))),
                            n.push("</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='segment-edit-general'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.address"))) + "</label>\n<div class='address-edit'></div>\n<form class='attributes-form side-panel-section'>\n<div class='junction-exit-list-region'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.road_type"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='roadType'></select>\n</div>\n</div>"),
                            n.push("" + e(this.renderPartial("templates/segment/edit-panel-attributes-form", this))),
                            n.push("</form>\n<div class='form-group more-actions'>\n<button class='action-button select-entire-roundabout waze-btn waze-btn-white'>"),
                            n.push("" + t(e(this.t("edit.segment.actions.select_entire_roundabout")))),
                            n.push("</button>\n<button class='action-button select-entire-street waze-btn waze-btn-white'>"),
                            n.push("" + t(e(this.t("edit.segment.actions.select_entire_street")))),
                            n.push("</button>\n<div class='edit-house-numbers-btn-wrapper waze-tooltip' data-toggle='tooltip'>\n<button class='action-button edit-house-numbers waze-btn waze-btn-white'></button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='length-attribute'>\n<span class='name'>" + t(e(this.t("edit.segment.fields.length") + ":")) + "</span>\n<span class='value'></span>\n</li>"),
                            null != this.updatedOn)
                            if (1 === this.numSegments)
                                n.push("<li>" + e(this.safe_t("edit.updated", {
                                    time: this.h.dateOnlyString(this.updatedOn),
                                    user: this.h.userProfile(this.updatedBy)
                                })) + "\n&lrm;\n</li>");
                            else if (this.mixedUpdatedBy) {
                            for (n.push("<li>"),
                                n.push("" + t(e(this.t("edit.segment.fields.updated_by") + ":"))),
                                n.push("<ul class='list-unstyled updated-by-list'>"),
                                i = 0,
                                s = (o = this.updatedBy).length; i < s; i++)
                                u = o[i],
                                n.push("<li>" + e(this.h.userProfile(u)) + "\n&lrm;\n</li>");
                            n.push("</ul>\n</li>")
                        } else
                            n.push("<li>\n<span class='name'>" + t(e(this.t("edit.segment.fields.updated_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.updatedBy)) + "</span>\n</li>");
                        if (1 === this.numSegments)
                            null != this.createdBy && n.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "\n&lrm;\n</li>");
                        else if (this.mixedCreatedBy) {
                            for (n.push("<li>"),
                                n.push("" + t(e(this.t("edit.segment.fields.created_by") + ":"))),
                                n.push("<ul class='created-by-list list-unstyled'>"),
                                r = 0,
                                a = (l = this.createdBy).length; r < a; r++)
                                u = l[r],
                                n.push("<li>" + e(this.h.userProfile(u)) + "\n&lrm;\n</li>");
                            n.push("</ul>\n</li>")
                        } else
                            n.push("<li>\n<span>" + t(e(this.t("edit.segment.fields.created_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.createdBy)) + "</span>\n</li>");
                        return n.push("<li class='feature-id'></li>\n</ul>\n<div class='element-history-region'></div>\n</div>\n<div class='tab-pane' id='segment-edit-closures'>\n<div class='closures'></div>\n</div>\n<div class='tab-pane' id='segment-edit-lanes'>\n<div class='lanes'></div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            i = this.attribute + "Checkbox",
                            n.push("<input id='" + t(e(i)) + "' name='" + t(e(this.attribute)) + "' type='checkbox'>\n<label for='" + t(e(i)) + "'>" + t(e(this.t("edit.segment.fields." + this.attribute))) + "</label>"),
                            this.disabledTooltip && n.push("<div class='waze-flag-locked-toolip waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("objects.common.rank_too_low"))) + "'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.junction_exits"))) + "</label>\n<div class='list'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["arrow", "fa", "fa-arrow-right", "" + t(e(this.isTurnAllowed ? "allowed" : "disallowed"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<span class='street-name'>" + t(e(this.streetName)) + "</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='routingRoadType' data-nullable>"),
                            this.segment.mixed.routingRoadType && n.push("<option value='' data-mixed-indicator='" + t(e(!0)) + "'>" + t(e(this.t("edit.multiple_values"))) + "</option>"),
                            n.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.prev"), this.routingRoadTypes.prev, this.segment.attributes.routingRoadType, !1, this.prevRouteRankDisabled))),
                            n.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.current"), null, this.segment.attributes.routingRoadType))),
                            n.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.next"), this.routingRoadTypes.next, this.segment.attributes.routingRoadType, !1, this.nextRouteRankDisabled))),
                            n.push("</select>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='speed-limit-" + this.direction + "'>\n<div class='speed-limit'>\n<div class='direction-label'>" + t(e(this.t("edit.segment.speed_limit." + this.direction + "MaxSpeed"))) + "</div>\n<input class='form-control' type='number' name='" + t(e(this.direction)) + "MaxSpeed' maxlength='4'>\n<i class='auto-speed-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.segment.speed_limit.added_automatically"))) + "'></i>\n<div class='unit-label'>"),
                            n.push("" + t(e(this.h.speedString()))),
                            n.push("</div>\n<div class='average-speed-camera controls-container'>\n<input id='speedCamera" + this.direction + "' name='" + t(e(this.direction)) + "SpeedCamera' type='checkbox'>\n<label for='speedCamera" + t(e(this.direction)) + "'>" + e("&nbsp;") + "</label>\n<div class='camera-icon waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "'></div>\n<div class='waze-camera-tooltip waze-lock-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("objects.common.rank_too_low"))) + "'></div>\n</div>\n</div>\n<div class='verify-buttons' data-direction='" + t(e(this.direction)) + "'>\n<button class='verify-btn waze-btn waze-btn-green waze-btn-small'>" + t(e(this.t("edit.segment.speed_limit.verify_speed_limit"))) + "</button>\n<button class='edit-btn waze-btn waze-btn-small waze-btn-white'>" + t(e(this.t("edit.segment.speed_limit.edit"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<select class='form-control language-select locale-select'>"),
                            i = 0,
                            r = (a = this.locales).length; i < r; i++)
                            s = (o = a[i]).locale,
                            l = o.tts,
                            n.push("<option value='" + t(e(l)) + "'>" + t(e({
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español América Latina",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "อังกฤษ"
                            } [s] || s || l)) + "</option>");
                        return n.push("</select>\n<buttton class='play-button waze-btn waze-btn-blue waze-btn-smaller'>" + t(e(this.t("tts.play"))) + "</buttton>\n<a class='report-problem-link' href='" + t(e(this.t("internal.tts_report_problem_url"))) + "' target='_blank'>"),
                            n.push("" + t(e(this.t("tts.report_problem")))),
                            n.push("</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<button class='tts-button' type='button' disabled='" + t(e(this.ttsDisabled)) + "'>\n<i class='fa fa-volume-up'></i>\n</button>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='list-unstyled'>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>" + t(e(this.t("footer.wiki"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>" + t(e(this.t("footer.forum"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.status_page_link"))) + "' target='_blank'>" + t(e(this.t("footer.status"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='#keyboard-dialog' data-toggle='modal'>\n<kbd>?</kbd>"),
                            n.push("" + t(e(this.t("footer.keyboard_shortcuts")))),
                            n.push("</a>\n</li>\n</ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='overlay'></div>\n<div id='user-info'></div>\n<div id='edit-panel'>\n<div class='contents'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='user-profile'>\n<a class='" + ["level-icon", "level-icon-" + t(e(this.normalizedLevel))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='" + t(e(this.h.userProfileLink({
                                userName: this.userName
                            }))) + "' target='_blank'></a>\n<div class='user-about'>\n<h3>\n<a class='profile-link' href='" + t(e(this.h.userProfileLink({
                                userName: this.userName
                            }))) + "' target='_blank'>"),
                            n.push("" + t(e(this.userName))),
                            n.push("</a>\n</h3>\n<div class='level'>"),
                            this.isStaff ? n.push("" + e(this.safe_t("user.info.staff_level_name"))) : n.push("" + e(this.safe_t("user.info.level_name", {
                                level: this.normalizedLevel
                            }))),
                            n.push("</div>\n<div class='user-stats'>\n<div class='stat'>"),
                            n.push("" + e(this.t("user.info.points", {
                                points: I18n.toNumber(this.totalPoints, {
                                    precision: 0
                                })
                            }))),
                            n.push("<div class='separator'>/</div>\n</div>\n<div class='stat'>"),
                            n.push("" + e(this.t("user.info.edits", {
                                edits: I18n.toNumber(this.totalEdits, {
                                    precision: 0
                                })
                            }))),
                            n.push("</div>\n<i class='waze-tooltip' id='permissions-info' data-toggle='tooltip'></i>\n</div>\n<a class='logout-link waze-gray-link' href='#'>" + t(e(this.t("user.logout"))) + "</a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<section id='user-box'>\n<div id='user-details'></div>\n</section>\n<section id='user-tabs'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#sidepanel-feed'>" + t(e(this.t("user.feed.title"))) + "\n<span class='fa fa-repeat feed-refresh nav-tab-icon'></span>\n</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-drives'>" + t(e(this.t("user.drives.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-areas'>" + t(e(this.t("user.areas.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-prefs'>\n<span class='fa fa-gear'></span>\n</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='sidepanel-feed'></div>\n<div class='tab-pane' id='sidepanel-drives'>\n<div class='loading-animation'></div>\n<div class='error hide'>"),
                            n.push("" + t(e(this.t("user.drives.error")))),
                            n.push("</div>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-areas'>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-prefs'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            r = n(85).UNIT,
                            W.Config.user_editing_enabled ? (i.push("" + t(e(this.t("user.info.edit_area.title", {
                                    distance: this.h.lengthString(this.editableMiles, {
                                        units: r.MILE,
                                        translationKey: "user.info.edit_area"
                                    })
                                })))),
                                this.isCountryManager ? i.push("" + t(e(this.t("user.info.country_manager")))) : this.isAreaManager && i.push("" + t(e(this.t("user.info.area_manager"))))) : i.push("" + e(this.safe_t("user.info.editing_restricted", {
                                forum_link: this.h.link(this.t("user.info.forum"), this.t("internal.ur_forum_link"))
                            }))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='sandbox'>\n<div class='welcome-container'>\n<div class='sandbox-logo'></div>\n<h2>"),
                            n.push("" + e(this.t("play_mode.sidebar.hey"))),
                            n.push("</h2>\n<div class='welcome-text'>" + t(e(this.t("play_mode.sidebar.join"))) + "</div>\n<div class='sign-in-button waze-btn waze-btn-blue waze-btn-medium' href=''>" + t(e(this.t("play_mode.sidebar.login_link"))) + "</div>\n<a class='help-link' href='/forgot_password' target='_blank'>" + t(e(this.t("play_mode.sidebar.help"))) + "</a>\n</div>\n<div class='links'>\n<a class='tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='title'>" + t(e(this.t("welcome.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.tutorial.description"))) + "</div>\n</a>\n<a class='wiki' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.wiki.title"))) + "</div>\n</a>\n<a class='forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.forum.title"))) + "</div>\n</a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='map-message snapshot-message-inner'>\n<div class='map-message-icon'></div>\n<div class='title'>" + t(e(this.t("snapshot.title"))) + "</div>\n<div class='description'>" + t(e(this.t("snapshot.description"))) + "</div>\n<a class='return-to-edit-mode'>" + t(e(this.t("snapshot.back_to_editing"))) + "</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.isOn ? n.push("<a class='toggler'>" + t(e(this.t("snapshot.exit"))) + "</a>") : n.push("<a class='toggler' disabled='" + t(e(!this.canToggleOn)) + "'>" + t(e(this.t("snapshot.enter"))) + "</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (i = []).push("<div class='clearfix hidable-message' id='show-tutorial-lightbox'>\n<div class='fa fa-times-circle hide-message' data-hide-message='tips/watch-tutorial'></div>\n<a data-toggle='modal' href='#tutorial-dialog'>\n<img src='" + t(e(n(1044))) + "'>"),
                            i.push("" + t(e(this.t("tutorial.title")))),
                            i.push("</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = n.p + "img/video-notext00f564d3d1e7b4eaa9f30c473da6a09f.png"
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            r = i = 0,
                            s = (a = this.timeFrames).length; i < s; r = ++i)
                            o = a[r],
                            n.push("" + t(e(o))),
                            r !== this.timeFrames.length - 1 && n.push("<br>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='turn-arrow-tooltip'>\n<div class='turn-header'>" + t(e(this.toStreet ? this.t("turn_tooltip.turn_to_street", {
                                street: this.toStreet
                            }) : "")) + "</div>\n<div class='tooltip-control'>"),
                            this.ioEditingDisabled = this.pathSelectorOnly || !this.canEditInstructionOverride,
                            n.push("<label class='" + t(e(this.ioEditingDisabled ? "disabled" : void 0)) + "' for='opcode-select'>" + t(e(this.t("turn_tooltip.instruction_override.title"))) + "</label>\n<select class='form-control opcode-select' id='opcode-select' disabled='" + t(e(this.ioEditingDisabled)) + "'></select>\n</div>\n<div class='tooltip-control'>\n<label class='" + t(e(this.pathSelectorOnly ? "disabled" : void 0)) + "'>" + t(e(this.t("turn_tooltip.restrictions"))) + "</label>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-warning waze-btn-white' disabled='" + t(e(this.pathSelectorOnly)) + "'>"),
                            this.allowRestrictionEditing ? this.hasRestrictions ? n.push("" + t(e(this.t("edit.segment.actions.restrictions.edit")))) : n.push("" + t(e(this.t("edit.segment.actions.restrictions.add")))) : n.push("" + t(e(this.t("edit.segment.actions.restrictions.view")))),
                            n.push("</button>\n</div>"),
                            this.hasMultiplePaths && n.push("<div class='tooltip-control'>\n<label>" + t(e(this.t("turn_tooltip.switch_route"))) + "</label>\n<div class='path-switcher'>\n<button class='prev-path-button waze-btn waze-btn-small waze-btn-white'></button>\n<button class='next-path-button waze-btn waze-btn-small waze-btn-white'></button>\n<span class='path-progress'></span>\n</div>\n</div>"),
                            n.push("<div class='tooltip-control'>\n<label id='difficult_label'>" + t(e(this.t("turn_tooltip.difficult_turn"))) + "</label>\n<div class='difficult-turn waze-radio-container'>\n<input id='" + t(e("difficult_false")) + "' type='radio' name='isDifficult' value='false'>\n<label for='difficult_false'>" + t(e(this.t("formats.boolean.is_false"))) + "</label>\n<input id='" + t(e("difficult_true")) + "' type='radio' name='isDifficult' value='true'>\n<label for='difficult_true'>" + t(e(this.t("formats.boolean.is_true"))) + "</label>\n<div class='time-based-restrictions-button' data-toggle='tooltip' data-placement='top'></div>"),
                            this.canEditDifficultTurns || n.push("<div class='waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom'></div>"),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='arrow-tooltip'></div>\n<div class='" + ["arrow", "" + t(e(this.arrowClasses))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' style='transform: rotate(" + t(e(this.angle)) + "deg'>"),
                            this.hasRestrictions && this.turnAllowed && n.push("<div class='restriction-badge' style='transform: rotate(" + t(e(-this.angle)) + "deg'></div>"),
                            this.turnAllowed || n.push("<div class='closed-badge' style='transform: rotate(" + t(e(-this.angle)) + "deg'></div>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='clearfix modal-body'>\n<div class='header'>" + t(e(this.t("tutorial.header"))) + "</div>\n<ul class='video-menu' style='display: none;'>"),
                            s = 0,
                            i = 0,
                            r = (a = this.videos).length; i < r; i++)
                            o = a[i],
                            s++,
                            n.push("<li class='video-link' data-video-key='" + t(e(o)) + "'>\n<div class='number'>" + t(e(s + ".")) + "</div>\n<div class='text'>" + t(e(this.t("tutorial.videos." + o + ".title"))) + "</div>\n</li>");
                        return n.push("</ul>\n<div id='tutorial-player'></div>\n<a class='dialog-close-button' href='#'></a>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<h2>" + e(this.safe_t("user.info.greeting", {
                                username: this.h.contentTag("strong", this.userName)
                            })) + "</h2>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container'>"),
                            r = 0,
                            a = (o = W.Config.week_days_order).length; r < a; r++)
                            s = "day-checkbox-" + (i = o[r]),
                            n.push("<input id='" + t(e(s)) + "' type='checkbox' name='days' value='" + t(e(i)) + "' checked='" + t(e(this.cb(i))) + "'>\n<label class='checkbox-inline' for='" + t(e(s)) + "'>" + t(e(this.t("date.abbr_day_names")[i])) + "</label>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='toggle'>\n<a class='select-all' href='#'>" + t(e(this.t("edit.select.all"))) + "</a>\n/\n<a class='select-none' href='#'>" + t(e(this.t("edit.select.none"))) + "</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<input class='alias-name form-control' type='text' value='" + t(e(this.name)) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='list list-unstyled'></ul>\n<a class='" + ["add", "waze-link", "" + t(e(this.hideAddButton ? "hidden" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#'>"),
                            n.push("" + t(e(this.t("edit.landmark.aliases.add")))),
                            n.push("</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='category' data-category='" + t(e(this.category)) + "'>"),
                            n.push("" + t(e(this.t("venues.categories." + this.category)))),
                            this.hideClose || n.push("<a class='remove-choice select2-search-choice-close' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<input class='uuid' value='" + t(e(this.uuid)) + "' type='hidden' placeholder='" + t(e(this.t("edit.landmark.external_providers.search"))) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>\n<a class='url' href='" + t(e(this.url)) + "' target='_blank'>\n<i class='fa fa-link'></i>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='list list-unstyled'></ul>\n<a class='add waze-btn waze-btn-smaller waze-btn-white' href='#'>"),
                            n.push("" + t(e(this.t("edit.landmark.external_providers.add")))),
                            n.push("</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (e = this.__cleanValue,
                            (t = []).push("<ul class='clearfix list-unstyled'>"),
                            i = 0,
                            r = (s = this.view.getSuggestedCategories()).length; i < r; i++)
                            n = s[i],
                            this.categoryMap[n] || (t.push("<li class='select2-search-choice suggested-category'>"),
                                t.push("" + e(this.renderPartial("templates/venue/category-tag", {
                                    category: n,
                                    hideClose: !0
                                }))),
                                t.push("</li>"));
                        return t.push("</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<input name='categories' data-placeholder='" + t(e(this.t("edit.landmark.select_categories"))) + "' type='hidden'>\n<div class='suggested-categories'>"),
                            n.push("" + e(this.renderPartial("templates/venue/suggested-categories", this))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a, o, l, u, d, c;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = function(e) {
                                return e.replace(/\n/g, "&#x000A;")
                            },
                            (n = []).push("<form class='attributes-form side-panel-section'>"),
                            this.landmark.attributes.residential || n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text' value='" + t(e(this.landmark.attributes.name)) + "'>\n<div class='aliases-view'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>" + t(e(this.t("edit.landmark.fields.categories"))) + "</label>\n<i class='categories-tooltip waze-tooltip' data-toggle='tooltip'></i>\n<div class='categories controls'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.description"))) + "</label>\n<div class='controls'>\n<textarea class='form-control' name='description' maxlength='" + t(e(300)) + "'>" + i(t(e(this.landmark.attributes.description))) + "</textarea>\n</div>\n</div>"),
                            n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.navigation_points"))) + "</label>\n<div class='controls'>\n<div class='navigation-point-region'></div>\n</div>\n</div>"),
                            !this.landmark.attributes.residential) {
                            if (n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control waze-radio-container'>"),
                                this.landmark.arePropertiesEditable())
                                for (s = 0,
                                    o = (d = this.lockRankRange).length; s < o; s++)
                                    u = d[s],
                                    n.push("" + e(this.h.venueRankOption(this.landmark, u, this.landmark.attributes.lockRank)));
                            else
                                n.push("" + e(this.h.formatRank(this.landmark.attributes.lockRank)));
                            for (n.push("</div>\n</div>\n</div>\n<div class='" + ["form-group", "brand", "" + t(e(this.brands.length ? void 0 : "not-shown"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                                this.landmark.isParkingLot() ? n.push("<label class='control-label'>" + t(e(this.t("edit.landmark.parking.operator"))) + "</label>") : n.push("<label class='control-label'>" + t(e(this.t("edit.landmark.fields.brand"))) + "</label>"),
                                n.push("<div class='controls'>\n<select class='form-control select2style' name='brand'>"),
                                a = 0,
                                l = (c = this.brands).length; a < l; a++)
                                r = c[a],
                                n.push("" + e(this.h.option(r, r, this.landmark.attributes.brand, !0)));
                            n.push("</select>\n</div>"),
                                this.landmark.isParkingLot() && n.push("<a class='add-brand-link waze-link' href='" + t(e(this.t("internal.add_operator_form"))) + "' target='_blank'>" + t(e(this.t("edit.landmark.add_operator.text"))) + "</a>"),
                                n.push("</div>"),
                                this.canEditType && (n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.type"))) + "</label>\n<div class='controls'>"),
                                    this.landmark.isParkingLot() ? (n.push("<div class='btn btn-block btn-default convert-to-polygon'>"),
                                        n.push("" + t(e(this.t("edit.landmark.type.convert_to_area")))),
                                        n.push("</div>")) : (n.push("<div class='btn-group' data-toggle='buttons'>\n<label class='" + ["btn", "btn-default", "point-btn", "" + t(e(this.landmark.isPoint() ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(this.landmark.isPoint())) + "' value='true'>"),
                                        n.push("" + t(e(this.t("edit.landmark.type.point")))),
                                        n.push("</label>\n<label class='" + ["btn", "btn-default", "area-btn", "" + t(e(this.landmark.isPoint() ? void 0 : "active"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(!this.landmark.isPoint())) + "' value='false'>"),
                                        n.push("" + t(e(this.t("edit.landmark.type.area")))),
                                        n.push("</label>\n</div>")),
                                    n.push("</div>\n</div>")),
                                this.showExternalProviderView && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.external_providers.title"))) + "</label>\n<div class='controls'>\n<div class='external-providers-view'></div>\n</div>\n</div>")
                        }
                        return this.landmark.isParkingLot() || (n.push("<div class='form-group'>\n<div class='controls'>"),
                                this.landmark.attributes.residential ? this.landmark.canConvertToPublic() && (n.push("<button class='btn-link toggle-residential waze-link' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "' type='button'>"),
                                    n.push("" + t(e(this.t("edit.landmark.residential.convert_from")))),
                                    n.push("</button>")) : this.hasHouseNumber ? (n.push("<button class='btn-link toggle-residential waze-link' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "' type='button'>"),
                                    n.push("" + t(e(this.t("edit.landmark.residential.convert_to")))),
                                    n.push("</button>")) : (n.push("<div class='btn-link residential-tooltip toggle-residential waze-link' data-toggle='tooltip' title='" + t(e(this.t("objects.venue.residential_tooltip"))) + "'>"),
                                    n.push("" + t(e(this.t("edit.landmark.residential.convert_to")))),
                                    n.push("</div>")),
                                n.push("</div>\n</div>")),
                            n.push("</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='url' type='text' value='" + t(e(this.landmark.attributes.url)) + "'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.phone"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='phone' type='tel' value='" + t(e(this.landmark.attributes.phone)) + "'>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r, s, a, o, l, u, d, c, h, f, p, g, v, m;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            r = n(142),
                            i.push("<form class='attributes-form'>\n<fieldset class='controls-container'>\n<div class='side-panel-section'>\n<div class='form-group'>\n<template class='hidden parkingType-tooltip-template'>\n<ul class='list-unstyled parkingType-tooltip-content'>"),
                            s = 0,
                            u = (f = r.PARKING_TYPE).length; s < u; s++)
                            m = f[s],
                            i.push("<li>\n<span class='parkingType-tooltip-header'>"),
                            i.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + m)))),
                            i.push("</span>\n<span>-</span>\n<span>"),
                            i.push("" + t(e(this.t("edit.landmark.parking.titles.parkingType." + m)))),
                            i.push("</span>\n</li>");
                        for (i.push("</ul>\n</template>\n<label class='control-label control-label-inline'>"),
                            i.push("" + t(e(this.t("edit.landmark.parking.fields.parkingType")))),
                            i.push("</label>\n<i class='parkingType-tooltip waze-tooltip'></i>"),
                            a = 0,
                            d = (p = r.PARKING_TYPE).length; a < d; a++)
                            m = p[a],
                            i.push("<div class='parking-type-option'>\n<input id='parking-type-" + m + "' type='radio' name='parkingType' value='" + t(e(m)) + "'>\n<label for='parking-type-" + t(e(m)) + "'>"),
                            i.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + m)))),
                            i.push("</label>\n</div>");
                        for (i.push("</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>"),
                            i.push("" + t(e(this.t("edit.landmark.parking.fields.hasTBR")))),
                            i.push("</label>\n<i class='hasTBR-tooltip waze-tooltip' title='" + t(e(this.t("edit.landmark.parking.titles.hasTBR"))) + "'></i>\n<input id='has-tbr' type='checkbox' name='hasTBR'>\n<label for='has-tbr'>"),
                            i.push("" + t(e(this.t("edit.landmark.parking.general.yes")))),
                            i.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='opening-hours'></div>\n<div class='controls-container form-group'>\n<input id='can-exit-checkbox' type='checkbox' name='canExitWhileClosed'>\n<label for='can-exit-checkbox'>"),
                            i.push("" + e(this.t("edit.landmark.parking.fields.canExitWhileClosed"))),
                            i.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.costType"))) + "</label>\n<select class='form-control' name='costType'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.paymentType"))) + "</label>"),
                            o = 0,
                            c = (g = r.PAYMENT_TYPE).length; o < c; o++)
                            m = g[o],
                            i.push("<div class='payment-checkbox'>\n<input id='payment-checkbox-" + m + "' type='checkbox' name='paymentType' value='" + t(e(m)) + "'>\n<label for='payment-checkbox-" + t(e(m)) + "'>"),
                            i.push("" + e(this.t("edit.landmark.parking.types.paymentType." + m))),
                            i.push("</label>\n</div>");
                        for (i.push("</div>\n<div class='form-group'>"),
                            i.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-services", this))),
                            i.push("</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.estimatedNumberOfSpots"))) + "</label>\n<select class='form-control' name='estimatedNumberOfSpots'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.lotType"))) + "</label>"),
                            l = 0,
                            h = (v = r.LOT_TYPE).length; l < h; l++)
                            m = v[l],
                            i.push("<div class='lot-checkbox'>\n<input id='lot-checkbox-" + m + "' type='checkbox' name='lotType' value='" + t(e(m)) + "'>\n<label for='lot-checkbox-" + t(e(m)) + "'>"),
                            i.push("" + e(this.t("edit.landmark.parking.types.lotType." + m))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n</div>\n<div class='side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-contact", this))),
                            i.push("</div>\n</fieldset>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='sub-section-header'>" + t(e(this.t("edit.landmark.fields.services"))) + "</div>\n<div class='controls-container form-group'>"),
                            i = 0,
                            r = (s = this.serviceTypes).length; i < r; i++)
                            a = s[i],
                            n.push("<div class='service-checkbox'>\n<input id='service-checkbox-" + a + "' type='checkbox' name='services' data-multiple='" + t(e(!0)) + "' value='" + t(e(a)) + "' checked='" + t(e(null != this.serviceSet[a])) + "'>\n<label for='service-checkbox-" + t(e(a)) + "'>" + t(e(this.t("venues.services." + a))) + "</label>\n</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<form class='attributes-form'>\n<div class='side-panel-section'>"),
                            t.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-contact", this))),
                            t.push("</div>\n<div class='side-panel-section'>"),
                            t.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-services", this))),
                            t.push("</div>"),
                            this.landmark.attributes.residential || t.push("<div class='opening-hours side-panel-section'></div>"),
                            t.push("</form>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r, s, a, o, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (i = []).push("<div class='" + ["landmark", "sidebar-column", "separator-line", "" + t(e(this.categoryClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.landmark.title"))) + "</span>"),
                            i.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            i.push("</div>"),
                            this.showUnapprovedAlert ? (i.push("<div class='alert alert-danger header-alert pending-changes-alert'>"),
                                i.push("" + t(e(this.t("edit.landmark.update_requests.unapproved")))),
                                i.push("</div>")) : this.showPendingChangesAlert && (i.push("<div class='alert alert-danger header-alert pending-changes-alert'>"),
                                i.push("" + t(e(this.t("edit.landmark.update_requests.pending")))),
                                i.push("</div>")),
                            this.showAdLockedAlert ? (i.push("<div class='alert alert-danger header-alert'>"),
                                i.push("" + t(e(this.t("edit.landmark.update_requests.ad_locked")))),
                                i.push("</div>")) : this.showRequiresModerationAlert && (i.push("<div class='alert alert-danger header-alert'>"),
                                i.push("" + t(e(this.t("edit.landmark.update_requests.moderation")))),
                                i.push("</div>")),
                            this.showPendingMergeNote && (i.push("<div class='alert alert-info header-alert'>"),
                                i.push("" + t(e(this.t("edit.landmark.merge.pending")))),
                                i.push("</div>")),
                            i.push("<div class='tabs-container'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#landmark-edit-general'>" + t(e(this.t("edit.landmark.tabs.general"))) + "</a>\n</li>"),
                            this.landmark.attributes.residential || i.push("<li>\n<a data-toggle='tab' href='#landmark-edit-more-info'>" + t(e(this.t("edit.landmark.tabs.more_info"))) + "</a>\n</li>"),
                            i.push("<li>\n<a data-toggle='tab' href='#landmark-edit-photos'>"),
                            i.push("" + t(e(this.t("edit.landmark.tabs.photos") + " (" + this.imageCount + ")"))),
                            i.push("</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='landmark-edit-general'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>"),
                            i.push("" + e(this.renderPartial("templates/venue/venue-edit-general", this))),
                            i.push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.landmark.attributes))),
                            i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.landmark.getID()
                            }))) + "</li>\n</ul>\n<div class='element-history-region'></div>\n</div>"),
                            this.landmark.attributes.residential || i.push("<div class='more-info tab-pane' id='landmark-edit-more-info'></div>"),
                            i.push("<div class='tab-pane' id='landmark-edit-photos'>\n<div class='image-view'>"),
                            this.hasImages || i.push("<em>" + t(e(this.t("edit.landmark.no_photos"))) + "</em>"),
                            r = n(105).SIZE,
                            s = 0,
                            o = (l = this.images).length; s < o; s++)
                            a = l[s],
                            i.push("<div class='image-preview-container' data-id='" + t(e(a.id)) + "'>\n<div class='image-container'>\n<img class='image-preview' src='" + t(e(a.getUrl(r.WEB))) + "'>\n</div>\n<button class='image-delete-button'></button>\n<button class='btn fa fa-search image-enlarge-button'></button>\n</div>");
                        return i.push("</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    "use strict";
    var i = F(n(393)),
        r = F(n(394)),
        s = F(n(399)),
        a = F(n(151)),
        o = F(n(123)),
        l = F(n(149)),
        u = F(n(124)),
        d = F(n(73)),
        c = F(n(91)),
        h = F(n(400)),
        f = F(n(152)),
        p = F(n(92)),
        g = F(n(108)),
        v = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(401)),
        m = F(n(204)),
        _ = F(n(202)),
        y = F(n(402)),
        b = F(n(74)),
        w = F(n(107)),
        k = F(n(205)),
        E = F(n(106)),
        M = F(n(203)),
        S = F(n(403)),
        T = F(n(22)),
        I = F(n(150)),
        C = F(n(31)),
        A = F(n(143)),
        O = F(n(37)),
        x = F(n(384)),
        D = F(n(125)),
        R = F(n(41)),
        L = F(n(88)),
        P = F(n(109)),
        N = F(n(34)),
        V = F(n(404)),
        U = F(n(93)),
        j = F(n(86));

    function F(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    window.Waze = new Proxy(window.W, {
        get: function(e, t) {
            return console.warn("window.Waze is deprecated and will be removed soon, use window.W instead"),
                e[t]
        }
    });
    j.default.prototype.get = function(e) {
            return console.warn("repository get method is deprecated and will be removed soon, use getObjectById instead"),
                this.getObjectById(e)
        },
        window.require = function(e) {
            var t = {
                "Waze/Action/AddAlternateStreet": i.default,
                "Waze/Action/AddIntersection": r.default,
                "Waze/Action/AddLandmark": s.default,
                "Waze/Action/AddNode": a.default,
                "Waze/Action/AddOrGetCity": o.default,
                "Waze/Action/AddOrGetStreet": l.default,
                "Waze/Action/AddSegment": u.default,
                "Waze/Action/ConnectSegment": d.default,
                "Waze/Action/CreateObject": c.default,
                "Waze/Action/CreateRoundabout": h.default,
                "Waze/Action/DeleteObject": f.default,
                "Waze/Action/DeleteSegment": p.default,
                "Waze/Action/DisconnectSegment": g.default,
                "Waze/Action/HouseNumber": v,
                "Waze/Action/MergeSegments": m.default,
                "Waze/Action/ModifyAllConnections": _.default,
                "Waze/Action/MoveNode": y.default,
                "Waze/Action/MultiAction": b.default,
                "Waze/Action/SplitSegments": w.default,
                "Waze/Action/UpdateFeatureAddress": k.default,
                "Waze/Action/UpdateFeatureGeometry": E.default,
                "Waze/Action/UpdateHouseNumber": M.default,
                "Waze/Action/UpdateHouseNumberGeometry": S.default,
                "Waze/Action/UpdateObject": T.default,
                "Waze/Action/UpdateSegmentGeometry": I.default,
                "Waze/DivIcon": C.default,
                "Waze/Feature/Vector/Landmark": A.default,
                "Waze/Feature/Vector/Segment": O.default,
                "Waze/Feature/Vector/UpdateRequest": x.default,
                "Waze/Handler/DragElement": D.default,
                "Waze/Model/Graph/Actions/SetTurn": R.default,
                "Waze/Model/Graph/TurnData": L.default,
                "Waze/Model/Graph/TurnGraph": P.default,
                "Waze/Model/Graph/Vertex": N.default,
                "Waze/Modules/Closures/Models/ClosureActionBuilder": V.default,
                "Waze/Modules/Closures/Models/SharedClosure": U.default
            } [e];
            if (null != t)
                return t;
            throw new Error("Cannot find module " + e)
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(11)),
        u = c(n(1067)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                r.default)(this, t);
            var s = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, n));
            return s._node = e,
                s
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this,
                        t = this._getSegments(this._node.getSegmentIds());
                    this._getSegmentsWithLanes(t).forEach(function(t) {
                        var n = d.getIncomingLaneDirection(t, e._node);
                        e.doSubAction(new u.default(t, n))
                    })
                }
            }, {
                key: "_getSegments",
                value: function(e) {
                    var t = this;
                    return e.map(function(e) {
                        return t.model.segments.getObjectById(e)
                    })
                }
            }, {
                key: "_getSegmentsWithLanes",
                value: function(e) {
                    var t = this;
                    return e.filter(function(e) {
                        var n = d.getIncomingLaneDirection(e, t._node);
                        return e.hasLanes(n)
                    })
                }
            }]),
            t
    }(l.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(15)),
        r = f(n(6)),
        s = f(n(2)),
        a = f(n(0)),
        o = f(n(1)),
        l = f(n(3)),
        u = f(n(4)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54)),
        c = f(n(11)),
        h = f(n(398));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t(e, n) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                a.default)(this, t);
            var r = (0,
                l.default)(this, (t.__proto__ || (0,
                s.default)(t)).call(this, i));
            return r._segment = e,
                r._direction = n,
                r
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "doAction",
                value: function() {
                    this._segment.getID();
                    var e = this._getAngleCalculator(),
                        t = d.lanesDirectionToVertex(this._segment.getID(), this._direction),
                        n = this.model.getTurnGraph().getTurnsFrom(t),
                        i = this._getCalculatedTurnLaneDatas(n, e);
                    this.doSubAction(new h.default(this._segment, this._direction, {
                        turnLaneDatas: i
                    }))
                }
            }, {
                key: "_getAngleCalculator",
                value: function() {
                    var e = d.getLaneAngleCalculator(this.model, this._segment, this._direction);
                    return e.snapAngles(),
                        e
                }
            }, {
                key: "_getCalculatedTurnLaneDatas",
                value: function(e, t) {
                    var n = this;
                    return e.reduce(function(e, s) {
                        var a = s.getToVertex(),
                            o = n._getCalculatedTurnLaneData(s, t.getSnappedAngle(a));
                        return (0,
                            r.default)({}, e, (0,
                            i.default)({}, a, o))
                    }, {})
                }
            }, {
                key: "_getCalculatedTurnLaneData",
                value: function(e, t) {
                    return e.getTurnData().getLaneData().withAngle(t)
                }
            }]),
            t
    }(c.default);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(6)),
        r = h(n(2)),
        s = h(n(0)),
        a = h(n(1)),
        o = h(n(3)),
        l = h(n(4)),
        u = h(n(11)),
        d = h(n(41)),
        c = h(n(34));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e, n, i, a) {
            (0,
                s.default)(this, t);
            var l = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, a));
            return l._forwardVertex = c.default.forwardOf(e),
                l._reverseVertex = c.default.reverseOf(e),
                l._firstSplitID = i,
                l._lastSplitID = n,
                l
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this.model.getTurnGraph();
                    e.getTurnsTo(this._forwardVertex).forEach(function(t) {
                            t = t.withToVertex(c.default.forwardOf(this._firstSplitID)),
                                this.doSubAction(new d.default(e, t, {
                                    dontSerialize: !0
                                }))
                        }, this),
                        e.getTurnsFrom(this._forwardVertex).forEach(function(t) {
                            t = t.withFromVertex(c.default.forwardOf(this._lastSplitID)),
                                this.doSubAction(new d.default(e, t, {
                                    dontSerialize: !0
                                }))
                        }, this),
                        e.getTurnsFrom(this._reverseVertex).forEach(function(t) {
                            t = t.withFromVertex(c.default.reverseOf(this._firstSplitID)),
                                this.doSubAction(new d.default(e, t, {
                                    dontSerialize: !0
                                }))
                        }, this),
                        e.getTurnsTo(this._reverseVertex).forEach(function(t) {
                            t = t.withToVertex(c.default.reverseOf(this._lastSplitID)),
                                this.doSubAction(new d.default(e, t, {
                                    dontSerialize: !0
                                }))
                        }, this)
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(f.prototype, {
        CLASS_NAME: "Waze.Model.Graph.Actions.SplitTurns"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, (0,
                    i.default)({
                    dontSerialize: !0
                }, e)))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    this.model.loginManager.user.incrementSegmentStreetChangeCount()
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.model.loginManager.user.decrementSegmentStreetChangeCount()
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.model.loginManager.user.incrementSegmentStreetChangeCount()
                }
            }]),
            t
    }(u(n(20)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(20)),
        u = n(14),
        d = n(40);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e, n, s) {
            (0,
                r.default)(this, t);
            var o = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, s));
            return o.closure = e,
                o.segment = n,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "serialize",
                value: function() {
                    return {
                        _objectType: u.ROAD_CLOSURE,
                        action: l.default.TYPE.ADD,
                        attributes: {
                            reason: this.closure.reason,
                            location: this.closure.location,
                            segID: this.closure.segID,
                            id: this.closure.getID(),
                            startDate: this.closure.startDate,
                            endDate: this.closure.endDate,
                            forward: this.closure.forward,
                            permanent: this.closure.permanent,
                            eventId: this.closure.eventId
                        }
                    }
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment]
                }
            }, {
                key: "doAction",
                value: function() {
                    W.model.repos.roadClosures.put(this.closure)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.doAction()
                }
            }, {
                key: "undoAction",
                value: function() {
                    W.model.repos.roadClosures.remove(this.closure)
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.closure.getUniqueID(), this.segment.getUniqueID()]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = (0,
                        d.formatActionAddressDescription)(this.segment, "AddRoadClosure")
                }
            }]),
            t
    }(l.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(20)),
        u = n(14);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e, n) {
            (0,
                r.default)(this, t);
            var s = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, n));
            return s.closure = e,
                s
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "serialize",
                value: function() {
                    return {
                        _objectType: u.ROAD_CLOSURE,
                        action: l.default.TYPE.UPDATE,
                        attributes: {
                            reason: this.closure.reason,
                            location: this.closure.location,
                            segID: this.closure.segID,
                            id: this.closure.id,
                            startDate: this.closure.startDate,
                            endDate: this.closure.endDate,
                            forward: this.closure.forward,
                            permanent: this.closure.permanent,
                            eventId: this.closure.eventId
                        }
                    }
                }
            }, {
                key: "doAction",
                value: function() {}
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.model.segments.getObjectById(this.closure.segID).getUniqueID(), this.closure.getUniqueID()]
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.model.segments.getObjectById(this.closure.segID)]
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(20)),
        u = n(14);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e, n, s) {
            (0,
                r.default)(this, t);
            var o = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, s));
            return o.closure = e,
                o.segment = n,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.segment]
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: u.ROAD_CLOSURE,
                        action: l.default.TYPE.DELETE,
                        attributes: {
                            id: this.closure.getID(),
                            segID: this.closure.segID
                        }
                    }
                }
            }, {
                key: "doAction",
                value: function() {
                    W.model.repos.roadClosures.remove(this.closure)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.doAction()
                }
            }, {
                key: "undoAction",
                value: function() {
                    W.model.repos.roadClosures.put(this.closure)
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.closure.getUniqueID(), this.segment.getUniqueID()]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.DeleteRoadClosure")
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    $.fn.booleanVal = function() {
        var e = this.val();
        return "null" === e ? null : "true" === e
    }
}, function(e, t, n) {
    "use strict";
    var i, r = n(6),
        s = (i = r) && i.__esModule ? i : {
            default: i
        },
        a = n(30);
    Backbone.ajax = function(e) {
        !e.method && e.type && (e = (0,
            s.default)({}, e, {
            method: e.type
        }));
        var t = (0,
            a.httpRequest)(e.url, e.data, e);
        return t.then(function(t) {
            return e.success && e.success.call(e.context, t),
                t
        }).catch(function(n) {
            e.error && e.error.call(e.context, t, null, n.errorString)
        })
    }
}, function(e, t, n) {
    "use strict";
    var i = function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }(n(24));
    Marionette.View.prototype.renderOnceLater = function() {
        var e = this;
        this.__alreadyRenderedInCurrentTask || (this.__alreadyRenderedInCurrentTask = !0,
            i.runLater(function() {
                e.__alreadyRenderedInCurrentTask = !1,
                    e.render()
            }))
    }
}, function(e, t, n) {
    "use strict";
    W.Rule = OL.Class(OL.Rule, {
            getContext: function(e) {
                return e
            },
            CLASS_NAME: "Waze.Rule"
        }),
        W.rule = function(e, t, n) {
            return new W.Rule({
                filter: new OL.Filter({
                    evaluate: function(n) {
                        null != n.model && (n = n.model);
                        var i = n[e];
                        return _.isFunction(i) && (i = i.apply(n)),
                            i === t
                    }
                }),
                symbolizer: n
            })
        },
        W.defaultRule = function(e) {
            return new W.Rule({
                filter: new OL.Filter({
                    evaluate: function(e) {
                        return !0
                    }
                }),
                symbolizer: e
            })
        }
}, function(e, t, n) {
    "use strict";
    var i = "dimension1",
        r = function(e, t, n, i) {
            e = "wme_" + e,
                W.Config.reporting.enable && ga("send", "event", e, t, n, i)
        };
    W.Report = {
        feedAction: function(e, t) {
            r("feed", e, t)
        },
        changesLogAction: function(e, t, n) {
            r("changes_log", e, t, n)
        },
        loginAction: function(e, t) {
            r("login", e, t)
        },
        generalAction: function(e, t) {
            r("general", e, t)
        },
        mapProblemAction: function(e, t, n) {
            r("map_problem", e, t, n)
        },
        updateRequestAction: function(e, t, n) {
            r("update_request", e, t, n)
        },
        placeUpdateRequestAction: function(e, t, n) {
            r("place_update_request", e, t, n)
        },
        chatAction: function(e, t) {
            r("chat", e, t)
        },
        elementHistoryAction: function(e, t) {
            r("element_history", e, t)
        },
        focusAction: function(e, t, n) {
            r("focus_on_item", e, t, n)
        },
        setUserRank: function(e) {
            null != e && ga("set", i, "" + e)
        },
        searchAction: function(e, t, n) {
            r("wme_search", e, t, n)
        },
        saveError: function(e) {
            r("save_error", e)
        },
        save: function(e, t, n) {
            r("save", e, t, n)
        }
    }
}, function(e, t, n) {
    "use strict";
    I18n.pluralization.ru = function(e) {
            return [e % 10 == 1 && e % 100 != 11 ? "one" : [2, 3, 4].indexOf(e % 10) >= 0 && [12, 13, 14].indexOf(e % 100) < 0 ? "few" : e % 10 == 0 || [5, 6, 7, 8, 9].indexOf(e % 10) >= 0 || [11, 12, 13, 14].indexOf(e % 100) >= 0 ? "many" : "other"]
        },
        I18n.pluralization.oneRule = function(e) {
            return ["other"]
        },
        ["ko", "ja", "ms", "zh", "zh", "zh-TW"].forEach(function(e) {
            I18n.pluralization[e] = I18n.pluralization.oneRule
        });
    var i = I18n.pluralization.get;
    I18n.pluralization.get = function() {
        var e = i.apply(this, arguments);
        return function() {
            var t = e.apply(void 0, arguments);
            return t.push("other"),
                t
        }
    }
}, function(e, t, n) {
    "use strict";
    var i = d(n(1080)),
        r = d(n(186)),
        s = d(n(1434)),
        a = n(1435),
        o = n(72),
        l = n(1436),
        u = n(154);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function c(e) {
        var t = e.descartesClient;
        W.prefs = new s.default,
            W.prefs.fetch(),
            W.app = new i.default,
            W.app.start({
                descartesClient: t
            })
    }

    function h(e) {
        (0,
            a.init)(e)
    }

    function f() {
        var e = new r.default;
        return (0,
            o.init)(e), {
            descartesClient: e
        }
    }
    $(document).ready(function() {
        (0,
            l.getAndSetRegionAndLocaleCodes)().then(function(e) {
            var t = e.regionCode;
            return function(e) {
                    var t = (0,
                        l.isValidLocaleCode)(e);
                    !(0,
                        u.documentLocaleMatches)(e) && t && (0,
                        u.redirectToLocalePage)(e)
                }(e.localeCode),
                t
        }).then(h).catch(function(e) {
            console.error("Error loading local configuration", e)
        }).then(f).catch(function(e) {
            console.error("Error loading server configuration", e),
                (0,
                    u.redirectToErrorPage)()
        }).then(c)
    })
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(19)),
        r = n(153),
        s = c(n(1081)),
        a = c(n(406)),
        o = c(n(1090)),
        l = c(n(1270)),
        u = n(154),
        d = n(207);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = Backbone.Model.extend({
        defaults: {
            loading: !0,
            loadingFeatures: !1,
            loggedIn: null,
            sandbox: !1,
            sessionExpired: !1,
            editing: !1,
            featureSelected: !1,
            user: null,
            mode: a.default.DEFAULT,
            descartes: null
        },
        layout: null,
        modeController: null,
        initialize: function() {
            this._urlParams = OL.Util.getParameters(window.location.href)
        },
        start: function(e) {
            var t = this,
                n = e.descartesClient;
            this.layout = new s.default({
                    model: this
                }),
                this.modeController = new l.default({
                    model: this,
                    layout: this.layout
                }),
                this.listenTo(this.modeController, r.STATE_CHANGED, this.trigger.bind(this, r.STATE_CHANGED)),
                (new o.default).heft({
                    app: this,
                    descartesClient: n
                }).then(function() {
                    return t._onDependenciesReady()
                })
        },
        changeAppLocale: function(e) {
            (0,
                u.setLocaleAndRedirect)(e)
        },
        changeAppRegion: function(e) {
            (0,
                u.setRegionCodeAndReload)(e)
        },
        getAppRegionCode: function() {
            return (0,
                d.getRegionCode)()
        },
        _onDependenciesReady: function() {
            var e = this;
            return this.loginManager = W.loginManager,
                this.loginManager.events.on({
                    login: this._onLoginChanged,
                    sessionExpired: this._onSessionExpired,
                    logout: this._onLogout,
                    scope: this
                }),
                this.loginManager.getLoggedInUser().catch(function(e) {
                    return console.error("Error getting logged in user", e)
                }).finally(function() {
                    e.set("loading", !1),
                        e.layout.render(),
                        e._setLoggedInUser(),
                        $(window).on("beforeunload", e._onBeforeUnload.bind(e)),
                        e.modeController.activate(),
                        e._restoreState(),
                        e._setupBindings()
                })
        },
        _onBeforeUnload: function(e) {
            if (!this.modeController.canExitMode() && !this.isSandboxMode()) {
                var t = e || window.event;
                return t && (t.returnValue = I18n.t("edit.unsaved_changes")),
                    I18n.t("edit.unsaved_changes")
            }
        },
        _onLoginChanged: function(e) {
            return this.get("sessionExpired") ? this._processRelogin() : (this._setLoggedInUser(),
                this._setSandboxMode(!1))
        },
        _processRelogin: function() {
            return this.loginManager.returningUser ? this._setSessionExpired(!1) : this._onLogout()
        },
        _onSessionExpired: function(e) {
            return this._setSessionExpired(!0)
        },
        _onLogout: function() {
            return W.model.actionManager.clear(),
                window.location.reload()
        },
        _setEditing: function() {
            var e = this.isSandboxMode() || this.loginManager.isLoggedIn();
            return this.set("editing", e)
        },
        _setSandboxMode: function(e) {
            this.get("sandbox") !== e && (this.set("sandbox", e),
                this._setEditing(),
                W.model.actionManager.clear(),
                W.controller.reload())
        },
        _setSessionExpired: function(e) {
            if (this.get("sessionExpired") !== e)
                return this.set("sessionExpired", e),
                    this._setEditing()
        },
        _setLoggedInUser: function() {
            var e = this.loginManager.isLoggedIn();
            this.set({
                    user: this.loginManager.user,
                    loggedIn: e
                }),
                this.loginManager.isFirstLogin() && this._onFirstLogin(),
                this._setAnalyticsContext(),
                this._setEditing(),
                e && W.controller.reload()
        },
        _onFirstLogin: function() {
            var e = this.loginManager.user && this.loginManager.user.address;
            if (e && e.x && e.y) {
                var t = W.map.getPannable(),
                    n = e.toLonLat();
                t.panTo(n)
            }
        },
        _setAnalyticsContext: function() {
            var e = this.loginManager.user;
            null != e && W.Report.setUserRank(e.rank)
        },
        isLoggedIn: function() {
            return this.get("loggedIn")
        },
        isEditingMode: function() {
            return this.get("editing")
        },
        isSandboxMode: function() {
            return this.get("sandbox")
        },
        activateSandboxMode: function() {
            this._setSandboxMode(!0)
        },
        disableSandboxMode: function() {
            this._setSandboxMode(!1)
        },
        requestModeChange: function(e) {
            var t = this;
            return new i.default(function(n, i) {
                t.modeController.canExitMode() ? (W.Report.generalAction("mode_changed", e),
                    n(t.set({
                        mode: e
                    }))) : (W.Report.generalAction("mode_changed", -1),
                    i(t.modeController.getExitError()))
            })
        },
        getState: function() {
            var e = this.get("mode"),
                t = {};
            return e !== a.default.DEFAULT && (t.mode = e),
                _.extend(t, this.modeController.getState())
        },
        _restoreState: function() {
            this._restoreMode()
        },
        _restoreMode: function() {
            if (this._urlParams.mode) {
                var e = parseInt(this._urlParams.mode, 10);
                a.default.isValid(e) && this.set("mode", e)
            }
            return this.modeController.restore(this._urlParams)
        },
        _setupBindings: function() {
            W.controller.bindToMap(W.map)
        }
    });
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(206),
        r = l(n(1082)),
        s = l(n(1083)),
        a = n(1085),
        o = n(30);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.default = Marionette.View.extend({
            el: "body",
            template: !1,
            ui: {
                descartesVersion: "#debug .version.descrates"
            },
            regions: {
                toolbarRegion: "#toolbar",
                topbarRegion: "#topbar-container",
                advancedToolsRegion: "#advanced-tools",
                sidebarRegion: "#sidebarContent",
                sandboxMessageRegion: "#sandbox-message",
                linksRegions: "#links",
                dialogRegion: {
                    regionClass: i.DialogRegion
                }
            },
            bindings: {
                ".app-loading": {
                    observe: "loading",
                    visible: !0
                },
                ".app": {
                    classes: {
                        "show-sidebar": "editing",
                        "not-visible": {
                            observe: "loading"
                        }
                    }
                },
                "#sidebar": {
                    observe: "editing",
                    visible: !0,
                    classes: {
                        "not-shown": {
                            observe: "editing",
                            onGet: function(e) {
                                return this._resizeMap(),
                                    !e
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                this.listenTo(this.model, "change:user", this._renderStaffRegion),
                    this.listenTo(this.model, "change:sandbox", this._renderSandboxMessage),
                    this.listenTo(this.model, "change:editing", this._toggleLoginView),
                    this.listenTo(this.getRegion("topbarRegion"), "show", this._resizeMap)
            },
            onRender: function() {
                var e = this;
                this.stickit(),
                    this._renderDescartesVersion(),
                    this.addRegions({
                        mapDialogRegion: {
                            regionClass: r.default,
                            el: "#map-lightbox",
                            map: W.map
                        }
                    }),
                    this.showChildView("linksRegions", new Marionette.View({
                        tagName: "waze-links",
                        template: "templates/sidebar/links"
                    })),
                    W.loginManager.events.register("beforeloginchanged", null, function(t) {
                        if (!e.model.isSandboxMode() && W.model.actionManager.canUndo())
                            return window.confirm(I18n.t("edit.unsaved_changes"))
                    }),
                    this._toggleLoginView()
            },
            _resizeMap: function() {
                return W.map.resize()
            },
            _renderStaffRegion: function() {
                var e = this.model.get("user");
                if (this.getRegion("advancedToolsRegion").empty(),
                    e.rank >= W.Config.advanced_tools.minRank)
                    return this.showChildView("advancedToolsRegion", new s.default({
                        editingMediator: W.editingMediator
                    }))
            },
            _renderSandboxMessage: function() {
                this.getRegion("sandboxMessageRegion").empty(),
                    this.model.get("sandbox") && this.showChildView("sandboxMessageRegion", new Marionette.View({
                        template: "templates/login/sandbox-message"
                    }))
            },
            _toggleLoginView: function() {
                var e = this.getRegion("dialogRegion");
                if (this.model.get("editing"))
                    e.empty();
                else {
                    var t = new a.LoginMainView({
                        app: W.app,
                        loginManager: W.loginManager
                    });
                    e.show(t, {
                        keyboard: !1,
                        backdrop: !1,
                        modalDialogClass: "modal-dialog-login"
                    })
                }
            },
            _renderDescartesVersion: function() {
                var e = this;
                return (0,
                    o.httpGet)(W.Config.paths.version).then(function(t) {
                    return $(e.ui.descartesVersion).text(t.version)
                })
            }
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "el",
                value: function() {
                    return "#map-lightbox"
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._map = e.map
                }
            }, {
                key: "onShow",
                value: function() {
                    this._map.$el.addClass("lightboxShown")
                }
            }, {
                key: "onEmpty",
                value: function() {
                    this._map.$el.removeClass("lightboxShown")
                }
            }]),
            t
    }(Marionette.Region);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(3)),
        a = d(n(1)),
        o = d(n(4)),
        l = d(n(1084)),
        u = n(154);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n._editingMediator = e.editingMediator,
                n._viewModel = new Backbone.Model({
                    editingHouseNumbers: n._editingMediator.get("editingHouseNumbers")
                }),
                n.listenTo(n._editingMediator, "change:editingHouseNumbers", n._onEditingHouseNumbersChanged),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        snapShotToggleRegion: "#snapshot-toggler"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .env-link": "onRegionChanged"
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Sidebar/templates/advanced-tools"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "bindings",
                value: function() {
                    return {
                        ".waze-staff-tools": {
                            classes: {
                                "editing-house-numbers": {
                                    observe: "editingHouseNumbers"
                                }
                            }
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.showChildView("snapShotToggleRegion", new l.default({
                            snapshotManager: W.snapshotManager
                        })),
                        this.stickit(this._viewModel, this.bindings())
                }
            }, {
                key: "templateContext",
                value: function() {
                    var e = W.app.getAppRegionCode();
                    return {
                        currentRegionName: I18n.t("envs")[e],
                        getURLForLocale: u.getURLForLocale
                    }
                }
            }, {
                key: "_onEditingHouseNumbersChanged",
                value: function() {
                    this._viewModel.set("editingHouseNumbers", this._editingMediator.get("editingHouseNumbers"))
                }
            }, {
                key: "onRegionChanged",
                value: function(e) {
                    e.preventDefault();
                    var t = $(e.target).data("env");
                    W.app.changeAppRegion(t)
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "templates/snapshot-toggler",
        ui: {
            toggler: ".toggler"
        },
        events: {
            "click @ui.toggler": "_onSnapshotClicked"
        },
        initialize: function() {
            return this.snapshotManager = this.options.snapshotManager,
                this.listenTo(this.snapshotManager, "change:state change:togglable", this.render)
        },
        onRender: function() {
            if (!this.snapshotManager.canToggleOn())
                return this.ui.toggler.tooltip({
                    title: "Save changes first",
                    placement: "bottom"
                })
        },
        serializeData: function() {
            return {
                canToggleOn: this.snapshotManager.canToggleOn(),
                isOn: this.snapshotManager.isSnapshotOn()
            }
        },
        onBeforeDestroy: function() {
            return this.ui.toggler.tooltip("destroy")
        },
        _onSnapshotClicked: function() {
            return this.snapshotManager.isSnapshotOn() ? this.snapshotManager.toggle(!1) : this.snapshotManager.canToggleOn() ? this.snapshotManager.toggle(!0) : void 0
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.LoginMainView = void 0;
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1086)),
        u = d(n(1089));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.LoginMainView = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        contentRegion: ".modal-content"
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        app: null,
                        loginManager: null
                    };
                    this._app = e.app,
                        this._loginManager = e.loginManager
                }
            }, {
                key: "onRender",
                value: function() {
                    this._showLoginView()
                }
            }, {
                key: "onChildviewLoginFormSuccess",
                value: function() {
                    this._needsEmailVerfication() && this._showEmailVerificationView()
                }
            }, {
                key: "onChildviewLoginVerificationBack",
                value: function() {
                    this._showLoginView()
                }
            }, {
                key: "_needsEmailVerfication",
                value: function() {
                    return this._loginManager.isAuthenticated() && !this._loginManager.isVerifiedEmail()
                }
            }, {
                key: "_showLoginView",
                value: function() {
                    this.showChildView("contentRegion", new l.default({
                        app: this._app,
                        loginManager: this._loginManager
                    }))
                }
            }, {
                key: "_showEmailVerificationView",
                value: function() {
                    this.showChildView("contentRegion", new u.default({
                        loginManager: this._loginManager
                    }))
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Login/templates/login_main"
                }
            }]),
            t
    }(Marionette.View)
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(1087)),
        u = n(405),
        d = n(154);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .playmode": "_onPlaymodeClicked",
                        "click .change-language": "_onChangeLanguageClicked",
                        "submit form": "_onSubmit"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        form: "form",
                        grecaptcha: ".g-recaptcha"
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        app: null,
                        loginManager: null
                    };
                    this._app = e.app,
                        this._loginManager = e.loginManager,
                        this._recaptchaClient = new l.default;
                    var t = W.loginManager.expired;
                    this._viewModel = new Backbone.Model({
                        username: "",
                        password: "",
                        loading: !1,
                        errorMessage: "",
                        expired: t,
                        title: t ? I18n.t("session.expired.description") : I18n.t("login.subtitle")
                    })
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        "input[name=username]": "username",
                        "input[name=password]": "password",
                        ".error-message": "errorMessage",
                        ".title-text": "title",
                        ".loading": {
                            observe: "loading",
                            visible: !0
                        },
                        ".expired-warning": {
                            observe: "expired",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this._viewModel),
                        this._renderRecaptcha()
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        getURLForLocale: d.getURLForLocale
                    }
                }
            }, {
                key: "_renderRecaptcha",
                value: function() {
                    this._recaptchaClient.render(this.ui.grecaptcha[0], {
                        callback: this._submitLoginForm.bind(this)
                    })
                }
            }, {
                key: "_onSubmit",
                value: function(e) {
                    e.preventDefault(),
                        this._recaptchaClient.execute()
                }
            }, {
                key: "_submitLoginForm",
                value: function() {
                    var e = this;
                    this._viewModel.set({
                        loading: !0,
                        errorMessage: ""
                    });
                    var t = this._viewModel.get("username"),
                        n = this._viewModel.get("password"),
                        i = this._recaptchaClient.getResponse();
                    this._loginManager.login(t, n, i).then(function() {
                            e.triggerMethod("login:form:success")
                        }).catch(function(t) {
                            var n = e._getLoginErrorMessage(t);
                            e._viewModel.set("errorMessage", n)
                        }).finally(function() {
                            e._viewModel.set({
                                    loading: !1
                                }),
                                e._recaptchaClient.reset()
                        }),
                        W.Report.loginAction("login_tap")
                }
            }, {
                key: "_getLoginErrorMessage",
                value: function(e) {
                    return e instanceof u.InvalidLoginError ? I18n.t("login.form.error") : I18n.t("login.form.server_error")
                }
            }, {
                key: "_onPlaymodeClicked",
                value: function(e) {
                    e.preventDefault(),
                        this._app.activateSandboxMode()
                }
            }, {
                key: "_onChangeLanguageClicked",
                value: function(e) {
                    e.preventDefault();
                    var t = $(e.target).data("locale");
                    this._app.changeAppLocale(t)
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Login/templates/login_view"
                }
            }]),
            t
    }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = "//www.google.com/recaptcha/api.js?render=explicit&hl=" + I18n.locale + "&onload=onRecaptchaLoad";
    $.getScript(o);
    var l = function() {
        function e() {
            (0,
                r.default)(this, e),
            this._widgetID = null
        }
        return (0,
                s.default)(e, [{
                key: "render",
                value: function(t) {
                    var n = this,
                        r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        s = (0,
                            i.default)({
                            sitekey: "6LfLjVIUAAAAAEJ5rgYY151d5Zy1qD46Gvc8MP42",
                            callback: function() {},
                            "error-callback": function() {
                                console.error("RecaptchaClient: error")
                            },
                            "expired-callback": function() {
                                console.error("RecaptchaClient: expired")
                            }
                        }, r);
                    null == this._widgetID && e.loadDeferred.then(function() {
                        n._widgetID = grecaptcha.render(t, s)
                    })
                }
            }, {
                key: "execute",
                value: function() {
                    return grecaptcha.execute(this._widgetID)
                }
            }, {
                key: "reset",
                value: function() {
                    if (null != this._widgetID)
                        return grecaptcha.reset(this._widgetID)
                }
            }, {
                key: "getResponse",
                value: function() {
                    return null != this._widgetID ? grecaptcha.getResponse(this._widgetID) : null
                }
            }], [{
                key: "load",
                value: function() {
                    e.loadDeferred.resolve()
                }
            }]),
            e
    }();
    l.loadDeferred = $.Deferred(),
        window.onRecaptchaLoad = function() {
            l.load()
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(6)),
        r = p(n(2)),
        s = p(n(0)),
        a = p(n(1)),
        o = p(n(3)),
        l = p(n(4)),
        u = p(n(17)),
        d = p(n(103)),
        c = p(n(392)),
        h = n(37),
        f = n(72);

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = {
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 4,
            6: 4
        },
        v = 1,
        m = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = arguments[1];
                (0,
                    s.default)(this, t);
                var a = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, (0,
                    i.default)({
                    isFirstLogin: !1,
                    userLimits: null,
                    emailVerified: !1,
                    unverifiedEmail: null
                }, e), n));
                return a._parseLegacyEditableAreas(),
                    a.normalizedLevel = d.default.prototype.NormalizedLevels[a.rank],
                    a.editableMiles = g[a.normalizedLevel],
                    a
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "_parseLegacyEditableAreas",
                    value: function() {
                        if (this.editableAreasMeters) {
                            var e = this.editableAreasMeters.map(function(e, t) {
                                    return new c.default({
                                        geometry: this.editableAreas.components[t],
                                        area: e,
                                        type: c.default.prototype.TYPE.DRIVE
                                    })
                                }, this),
                                t = this.managedAreasMeters.map(function(e, t) {
                                    return new c.default({
                                        geometry: this.managedAreas.components[t],
                                        area: e,
                                        type: c.default.prototype.TYPE.MANAGED
                                    })
                                }, this);
                            this.areas = e.concat(t)
                        }
                    }
                }, {
                    key: "isCountryManager",
                    value: function() {
                        return this.editableCountryIDs && !_.isEmpty(this.editableCountryIDs)
                    }
                }, {
                    key: "isVerifiedEmail",
                    value: function() {
                        return this.emailVerified
                    }
                }, {
                    key: "isEmailAddressMissing",
                    value: function() {
                        return !this.emailVerified && null == this.unverifiedEmail
                    }
                }, {
                    key: "getUnverifiedEmail",
                    value: function() {
                        return this.unverifiedEmail
                    }
                }, {
                    key: "resetUserLimits",
                    value: function(e) {
                        this.userLimits = _.clone(e)
                    }
                }, {
                    key: "incrementDeleteSegmentCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.segmentDeletionCount && this.userLimits.segmentDeletionCount++
                    }
                }, {
                    key: "decrementDeleteSegmentCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.segmentDeletionCount && this.userLimits.segmentDeletionCount--
                    }
                }, {
                    key: "incrementSegmentStreetChangeCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.streetNameChangeCount && this.userLimits.streetNameChangeCount++
                    }
                }, {
                    key: "decrementSegmentStreetChangeCount",
                    value: function() {
                        this.userLimits && null != this.userLimits.streetNameChangeCount && this.userLimits.streetNameChangeCount--
                    }
                }, {
                    key: "canDeleteSegments",
                    value: function() {
                        var e = (0,
                                f.getServerConfig)(),
                            t = e.minRankForDeletingSegment,
                            n = e.maxAllowedSegmentDeletions;
                        if (this.rank < t)
                            return h.SEGMENT_DELETION_REJECTION.USER_RANK_TOO_LOW;
                        if (this.userLimits) {
                            var i = this.userLimits.segmentDeletionCount;
                            if (null == i || i >= n)
                                return h.SEGMENT_DELETION_REJECTION.USER_QUOTA_EXCEEDED
                        }
                        return h.SEGMENT_DELETION_REJECTION.NOT_REJECTED
                    }
                }, {
                    key: "canEditDifficultTurns",
                    value: function() {
                        return this.isAllowed(v)
                    }
                }, {
                    key: "canChangeStreetName",
                    value: function() {
                        var e = (0,
                            f.getServerConfig)().maxAllowedStreetNamesChanges;
                        if (this.userLimits) {
                            var t = this.userLimits.streetNameChangeCount;
                            return null == t || t < e
                        }
                        return !0
                    }
                }]),
                t
        }(u.default);
    (0,
        i.default)(m.prototype, {
        CLASS_NAME: "Waze.Feature.Vector.LoggedInUser",
        nested: {
            editableAreas: OL.Geometry,
            managedAreas: OL.Geometry,
            areas: c.default,
            address: OL.Geometry
        }
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = n(30);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "bindings",
                value: function() {
                    return {
                        ".step-email-missing": {
                            observe: "stepEmailMissing",
                            visible: !0
                        },
                        ".step-verification": {
                            observe: "stepDoVerification",
                            visible: !0
                        },
                        ".step-verification-done": {
                            observe: "stepVerificationDone",
                            visible: !0
                        },
                        ".step-verification .verification-alert": {
                            observe: "emailFailed",
                            visible: !0
                        },
                        ".emailSending": {
                            observe: "emailSending",
                            visible: !0
                        },
                        ".do-send-verification-email": {
                            attributes: [{
                                name: "disabled",
                                observe: "emailSending"
                            }]
                        }
                    }
                }
            }, {
                key: "triggers",
                value: function() {
                    return {
                        "click .do-back-to-login": "login:verification:back"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .do-send-verification-email": "_doSendVerificationEmail"
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        loginManager: null
                    };
                    this._loginManager = e.loginManager;
                    var t = this._loginManager.isUserEmailAddressMissing();
                    this.model = new Backbone.Model({
                        stepEmailMissing: t,
                        stepDoVerification: !t,
                        stepVerificationDone: !1,
                        emailFailed: !1,
                        emailSending: !1
                    })
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        recipient: this._loginManager.getUserVerificationEmailAddress(),
                        dashboardURL: W.Config.login.paths.dashboard
                    }
                }
            }, {
                key: "_doSendVerificationEmail",
                value: function() {
                    var e = this;
                    return this.model.set({
                            emailFailed: !1,
                            emailSending: !0
                        }),
                        (0,
                            l.httpPost)(W.Config.login.paths.email_verification, {
                            locale: I18n.currentLocale(),
                            channel: "waze_map_editor"
                        }).then(function() {
                            e.model.set({
                                stepVerificationDone: !0,
                                stepDoVerification: !1
                            })
                        }).catch(function() {
                            e.model.set({
                                emailFailed: !0
                            })
                        }).finally(function() {
                            e.model.set({
                                emailSending: !1
                            })
                        })
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Login/templates/email_verification"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = R(n(19)),
        r = R(n(0)),
        s = R(n(1)),
        a = n(1091),
        o = R(n(1094)),
        l = R(n(110)),
        u = R(n(407)),
        d = R(n(1108)),
        c = R(n(1109)),
        h = R(n(1120)),
        f = R(n(413)),
        p = R(n(1121)),
        g = R(n(1122)),
        v = R(n(1123)),
        m = R(n(405)),
        _ = R(n(1125)),
        y = R(n(1187)),
        b = R(n(1188)),
        w = R(n(1199)),
        k = R(n(1213)),
        E = R(n(1220)),
        M = R(n(1221)),
        S = R(n(1222)),
        T = R(n(1227)),
        I = R(n(44)),
        C = R(n(1228)),
        A = R(n(1230)),
        O = R(n(1249)),
        x = R(n(218)),
        D = R(n(1256));

    function R(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var L = function() {
        function e() {
            (0,
                r.default)(this, e)
        }
        return (0,
                s.default)(e, [{
                key: "heft",
                value: function(e) {
                    var t = e.app,
                        n = e.descartesClient;
                    W.vent = new Backbone.Wreqr.EventAggregator,
                        W.commands = new Backbone.Wreqr.Commands,
                        W.reqres = new Backbone.Wreqr.RequestResponse,
                        W.model = new u.default,
                        W.model.loginManager = W.loginManager = new m.default,
                        W.accelerators = new f.default,
                        this._initKeyboard();
                    var r = new _.default({
                        app: t
                    });
                    W.map = r,
                        W.map.registerAccelerators(W.accelerators),
                        W.togglerTree = A.default.create();
                    var s = new d.default;
                    W.editingMediator = s;
                    var a = r.layers.filter(function(e) {
                            return e.selectable
                        }),
                        o = new O.default(W.map, a, {
                            boxSelectionLayers: [r.segmentLayer]
                        });
                    W.selectionManager = new E.default(W.model, a, o),
                        W.geometryEditing = new c.default(W.selectionManager, W.editingMediator, W.map, W.model);
                    var l = new S.default({
                        map: W.map,
                        selectionManager: W.selectionManager
                    });
                    return W.streetViewController = l,
                        new w.default({
                            mediator: W.editingMediator,
                            mapLayers: [W.map.problemLayer, W.map.updateRequestLayer],
                            streetViewController: W.streetViewController
                        }),
                        this._initPlaceUpdateControl({
                            map: r,
                            editingMediator: s,
                            streetViewController: l
                        }),
                        new T.default($("#tutorial-dialog")),
                        new C.default(W.model).activate(),
                        this._heftController(n),
                        this._heftMarx(),
                        this._heftModules(),
                        i.default.resolve()
                }
            }, {
                key: "_initKeyboard",
                value: function() {
                    return W.accelerators.registerDefaultShortcuts(),
                        W.accelerators.restore(),
                        new h.default,
                        W.accelerators.activate()
                }
            }, {
                key: "_heftController",
                value: function(e) {
                    W.snapshotManager = new M.default(W.model.actionManager),
                        W.map.setSnapshotManager(W.snapshotManager),
                        W.controller = new l.default({
                            descartesClient: e,
                            snapshotManager: W.snapshotManager
                        }),
                        new k.default({
                            controller: W.controller,
                            mediator: W.editingMediator
                        }),
                        W.saveController = new x.default({
                            actionManager: W.model.actionManager,
                            controller: W.controller,
                            editingMediator: W.editingMediator
                        }),
                        W.changesLogController = new D.default({
                            actionManager: W.model.actionManager,
                            map: W.map,
                            selectionManager: W.selectionManager,
                            saveController: W.saveController
                        }),
                        W.editingMediator.activate(),
                        W.map.initMapState(W.selectionManager, W.app, W.togglerTree),
                        W.map.setEditingMediator(W.editingMediator)
                }
            }, {
                key: "_heftMarx",
                value: function() {
                    if (W.Config.chat.enable) {
                        var e = new y.default({
                                app: W.app,
                                authCookieName: W.loginManager.getAuthCookieName()
                            }),
                            t = new p.default(W.model, e, W.map),
                            n = new g.default(W.model, e, t);
                        new v.default({
                            model: n,
                            map: W.map
                        });
                        var i = new a.Chat(W.model, e);
                        new o.default({
                                model: i,
                                marx: e,
                                map: W.map
                            }),
                            W.model.chat = i,
                            W.model.liveUsers = n
                    }
                }
            }, {
                key: "_heftModules",
                value: function() {
                    var e = {
                        map: W.map,
                        selectionManager: W.selectionManager
                    };
                    return I.default.getEntryPoints().forEach(function(t) {
                        return t(e)
                    })
                }
            }, {
                key: "_initPlaceUpdateControl",
                value: function(e) {
                    var t = e.map,
                        n = void 0 === t ? null : t,
                        i = e.editingMediator,
                        r = void 0 === i ? null : i,
                        s = e.streetViewController,
                        a = void 0 === s ? null : s;
                    n.getPlaceUpdateLayers().forEach(function(e) {
                        new b.default({
                            map: n,
                            mediator: r,
                            mapLayer: e,
                            streetViewController: a
                        })
                    })
                }
            }]),
            e
    }();
    t.default = L,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ChatRooms = t.ChatRoom = t.Chat = void 0;
    var i = f(n(7)),
        r = f(n(2)),
        s = f(n(0)),
        a = f(n(1)),
        o = f(n(3)),
        l = f(n(4)),
        u = f(n(1092)),
        d = h(n(1093)),
        c = h(n(24));

    function h(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = void 0,
        g = void 0,
        v = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "initialize",
                    value: function(e, t) {
                        this._wazeModel = e,
                            this._marx = t,
                            this.messages = new d.Collection,
                            this.users = new Backbone.Collection([], {
                                model: u.default,
                                comparator: function(e, t) {
                                    return t.get("rank") - e.get("rank")
                                }
                            }),
                            this.rooms = new g,
                            this._refreshRooms(),
                            this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                            this._marx.on("reconnect", this._onMarxReconnect, this),
                            this._marx.on("disconnect", this._onMarxDisconnect, this),
                            this._registerWazeModelEvents(),
                            this.set({
                                room: this._getTopRoom(),
                                currentUser: null,
                                active: !1,
                                visible: null,
                                open: !1
                            }),
                            this._loadFromLocalStorage(),
                            this.on("change:room", this._onRoomChange, this),
                            this.on("change:visible", this._onVisibilityChanged, this),
                            this.on("change:open", this._onOpenChanged, this)
                    }
                }, {
                    key: "_loadFromLocalStorage",
                    value: function() {
                        var e = c.localStorage.get("chatSettings");
                        null != e && this.set(e)
                    }
                }, {
                    key: "_saveToLocalStorage",
                    value: function() {
                        c.localStorage.set("chatSettings", {
                            visible: this.get("visible"),
                            open: this.get("open")
                        })
                    }
                }, {
                    key: "_onMarxFirstConnect",
                    value: function() {
                        this._registerSocketEvents(),
                            this._activate()
                    }
                }, {
                    key: "_onMarxReconnect",
                    value: function() {
                        this._activate()
                    }
                }, {
                    key: "_onMarxDisconnect",
                    value: function() {
                        this._deactivate()
                    }
                }, {
                    key: "_canActivate",
                    value: function() {
                        var e = this._wazeModel.loginManager.user;
                        return null != e && this._canUserChat(e)
                    }
                }, {
                    key: "_canUserChat",
                    value: function(e) {
                        return !W.Config.chat.staffOnly || e.isStaff
                    }
                }, {
                    key: "_getDefaultVisibility",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "_activate",
                    value: function(e) {
                        if (this._canActivate()) {
                            var t = this.get("visible");
                            null == t && (t = this._getDefaultVisibility()),
                                this._refreshRooms();
                            var n = this.get("room") || this._getTopRoom();
                            return this.set({
                                    currentUser: this._createMyUser(),
                                    visible: t,
                                    active: this._canActivate(),
                                    room: n
                                }),
                                null == this.get("visible") && (t = this._getDefaultVisibility()),
                                null != n && this._onRoomChange(),
                                this._onVisibilityChanged()
                        }
                    }
                }, {
                    key: "_createMyUser",
                    value: function() {
                        var e = this._wazeModel.loginManager.user;
                        return new u.default({
                            id: e.id,
                            rank: e.rank,
                            name: e.userName
                        })
                    }
                }, {
                    key: "_registerWazeModelEvents",
                    value: function() {
                        return this._wazeModel.events.on({
                            mergeend: this._onMergeEnd,
                            scope: this
                        })
                    }
                }, {
                    key: "_registerSocketEvents",
                    value: function() {
                        return this._marx.socket.on("room:userJoin", this._onRoomUserJoin.bind(this)),
                            this._marx.socket.on("room:userLeave", this._onRoomUserLeave.bind(this)),
                            this._marx.socket.on("room:userPan", this._onRoomUserPan.bind(this)),
                            this._marx.socket.on("room:userEdit", this._onRoomUserEdit.bind(this)),
                            this._marx.socket.on("room:newMessage", this._onMessage.bind(this)),
                            this._marx.socket.on("me:newMessage", this._onMessageFromOtherTab.bind(this)),
                            this._marx.socket.on("me:change:room", this._onMeChangeRoom.bind(this)),
                            this._marx.socket.on("me:change:visible", this._onMeChangeVisible.bind(this))
                    }
                }, {
                    key: "_onMergeEnd",
                    value: function() {
                        this.get("active") && (this._refreshRooms(),
                            null == this.get("room") && this.set("room", this._getTopRoom()))
                    }
                }, {
                    key: "_getTopRoom",
                    value: function() {
                        return null != this._wazeModel.countries.top ? this.rooms.findById(this._wazeModel.countries.top.id) : this.rooms[0]
                    }
                }, {
                    key: "_refreshRooms",
                    value: function() {
                        var e = this._wazeModel.countries.objects || {};
                        return this.rooms.update(e)
                    }
                }, {
                    key: "_deactivate",
                    value: function() {
                        this.users.reset([]),
                            this.set({
                                active: !1
                            })
                    }
                }, {
                    key: "_onMeChangeVisible",
                    value: function(e) {
                        this._silent = !0,
                            this.set("visible", e.visible),
                            this._silent = !1
                    }
                }, {
                    key: "_onMeChangeRoom",
                    value: function(e) {
                        var t = e.room;
                        this.users.reset(t.users || []),
                            this.set({
                                room: this._findOrCreateRoom(t.name)
                            }, {
                                pushToServer: !1
                            }),
                            this.messages.add({
                                type: "system",
                                body: "Joined room " + t.name,
                                from: {},
                                ownMessage: !1
                            }),
                            this._showOrHideMeInUsersList()
                    }
                }, {
                    key: "_findOrCreateRoom",
                    value: function(e) {
                        var t = this.rooms.findWhere({
                            name: e
                        });
                        return null == t && (t = new p({
                                    name: e
                                }),
                                this.rooms.add(t)),
                            t
                    }
                }, {
                    key: "_onRoomUserJoin",
                    value: function(e) {
                        null == this.getUserById(e.user.id) && this.users.add(e.user)
                    }
                }, {
                    key: "_onRoomUserLeave",
                    value: function(e) {
                        var t = this.getUserById(e.user.id);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_onRoomUserPan",
                    value: function(e) {
                        this.getUserById(e.user.id).set(e.user)
                    }
                }, {
                    key: "_onRoomUserEdit",
                    value: function(e) {
                        this.getUserById(e.user.id).set(e.user)
                    }
                }, {
                    key: "_onMessage",
                    value: function(e) {
                        var t = this.get("currentUser");
                        e.ownMessage = t && e.from && e.from.id === t.id,
                            this.messages.add(e),
                            W.Report.chatAction("chat_message")
                    }
                }, {
                    key: "_onMessageFromOtherTab",
                    value: function(e) {
                        e.from = this.get("currentUser").toJSON(),
                            e.ownMessage = !0,
                            this.messages.add(e)
                    }
                }, {
                    key: "getUserById",
                    value: function(e) {
                        return this.users.findWhere({
                            id: e
                        })
                    }
                }, {
                    key: "_onRoomChange",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                        this.set({
                                roomName: this._getCurrentRoomName()
                            }),
                            n = _.defaults(n, {
                                pushToServer: !0
                            }),
                            this.get("active") && n.pushToServer && this._marx.socket.emit("user:change:roomName", {
                                roomName: this.get("roomName")
                            })
                    }
                }, {
                    key: "_getCurrentRoomName",
                    value: function() {
                        var e = this.get("room");
                        return e && e.get ? e.get("name") : null
                    }
                }, {
                    key: "_onVisibilityChanged",
                    value: function() {
                        this.get("active") && (this._saveToLocalStorage(),
                            this._silent || this._sendVisibilityChangedMessage(),
                            this._showOrHideMeInUsersList())
                    }
                }, {
                    key: "_showOrHideMeInUsersList",
                    value: function() {
                        return this.get("visible") ? this._addMeToUsers() : this._removeMeFromUsers()
                    }
                }, {
                    key: "_addMeToUsers",
                    value: function() {
                        var e = this.get("currentUser");
                        if (null == this.getUserById(e.get("id")))
                            return this.users.add(e)
                    }
                }, {
                    key: "_removeMeFromUsers",
                    value: function() {
                        var e = this.get("currentUser").get("id"),
                            t = this.getUserById(e);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_onOpenChanged",
                    value: function() {
                        this.get("active") && this._saveToLocalStorage()
                    }
                }, {
                    key: "_sendVisibilityChangedMessage",
                    value: function() {
                        return this._marx.socket.emit("user:change:visible", {
                            visible: this.get("visible")
                        })
                    }
                }, {
                    key: "sendMessage",
                    value: function(e) {
                        var t = this.get("currentUser"),
                            n = {
                                body: e
                            };
                        this._marx.socket.emit("user:newMessage", n);
                        var i = {
                            body: e,
                            from: {
                                id: t.get("id"),
                                name: t.get("name")
                            },
                            ownMessage: !0
                        };
                        return this.messages.add(i)
                    }
                }]),
                t
        }(Backbone.Model);
    t.ChatRoom = p = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getName",
                value: function() {
                    return this.attributes.name
                }
            }, {
                key: "equals",
                value: function(e) {
                    return null != e && this.getName() === e.getName()
                }
            }, {
                key: "matchesId",
                value: function(e) {
                    return -1 !== (this.get("ids") || []).indexOf(e)
                }
            }, {
                key: "addId",
                value: function(e) {
                    var t = this.get("ids") || [];
                    if (-1 === t.indexOf(e))
                        return t.push(e),
                            this.set({
                                ids: t
                            })
                }
            }]),
            t
    }(Backbone.Model);
    var m = {
        Belgium: "Benelux",
        Netherlands: "Benelux",
        Luxembourg: "Benelux",
        "Palestinian Territory": "Israel",
        "West Bank": "Israel",
        "Gaza Strip": "Israel"
    };
    t.ChatRooms = g = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "update",
                    value: function(e) {
                        for (var t = this, n = {}, r = 0; r < this.models.length; r++) {
                            var s = this.models[r];
                            n[s.getName()] = s
                        }
                        (0,
                            i.default)(e).forEach(function(i) {
                            var r = e[i],
                                s = t._getRoomNameByCountry(r),
                                a = n[s];
                            null != a ? a.addId(r.id) : (a = new p({
                                    name: s,
                                    ids: [r.id]
                                }),
                                n[s] = a,
                                t.add(a))
                        })
                    }
                }, {
                    key: "_getRoomNameByCountry",
                    value: function(e) {
                        return m[e.name] || e.name
                    }
                }, {
                    key: "findById",
                    value: function(e) {
                        for (var t = 0; t < this.models.length; t++) {
                            var n = this.models[t];
                            if (n.matchesId(e))
                                return n
                        }
                        return null
                    }
                }, {
                    key: "model",
                    get: function() {
                        return p
                    }
                }]),
                t
        }(Backbone.Collection),
        t.Chat = v,
        t.ChatRoom = p,
        t.ChatRooms = g
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getCenter",
                value: function() {
                    var e = this.get("center");
                    return null != e ? new OL.LonLat(e.lon, e.lat) : null
                }
            }]),
            t
    }(Backbone.Model);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.Collection = t.ChatMessage = void 0;
    var i = u(n(8)),
        r = u(n(2)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(3)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            ownMessage: !1
                        }
                    }
                }, {
                    key: "getSenderID",
                    value: function() {
                        return this.get("from").id
                    }
                }, {
                    key: "addLine",
                    value: function(e) {
                        var t = this.get("body") + "\n" + e;
                        return this.set("body", t)
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return this.get("type") || "normal"
                    }
                }, {
                    key: "isSystem",
                    value: function() {
                        return "normal" !== this.getType()
                    }
                }, {
                    key: "isOwnMessage",
                    value: function() {
                        return !0 === this.get("ownMessage")
                    }
                }]),
                t
        }(Backbone.Model),
        c = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "add",
                    value: function(e) {
                        e instanceof this.model || (e = new this.model(e));
                        var n = this.last();
                        if (null != n && n.getSenderID() === e.getSenderID())
                            return this.trigger("beforeMessageUpdated", n),
                                n.addLine(e.get("body")),
                                void this.trigger("messageUpdated", n);
                        (0,
                            i.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "add", this).call(this, e)
                    }
                }, {
                    key: "model",
                    get: function() {
                        return d
                    }
                }]),
                t
        }(Backbone.Collection);
    t.ChatMessage = d,
        t.Collection = c
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1095)),
        u = d(n(1096));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .toggle": "toggleOpen",
                        "click .minimize": "toggleOpen",
                        "keypress .message-input": "_onMessageInputClicked",
                        "click ul.visibility a": "_toggleVisibility",
                        "click .header": "_onHeaderClicked",
                        "click .unread-messages-notification": "_onUnreadMessagesNotificationClicked",
                        "click .rooms a": "_onRoomClicked"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        toggle: ".toggle",
                        roomName: ".room-name",
                        popup: "#chat",
                        messages: ".message-list",
                        users: ".user-list",
                        rooms: ".rooms",
                        messageInput: ".message-input",
                        status: ".status",
                        visibleButton: ".visibility-visible",
                        invisibleButton: ".visibility-invisible",
                        unreadMessagesNotification: ".unread-messages-notification"
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    var t = this;
                    this._map = e.map,
                        this._marx = e.marx,
                        this.$el.attr({
                            id: "chat-overlay"
                        }).appendTo($(this._map.$el)),
                        this.$el.on("click mousedown dragstart", "input", function(e) {
                            return e.stopPropagation()
                        }),
                        this.model.users.on("reset", this._onUsersReset, this),
                        this.model.users.on("add", this._addUser, this),
                        this.model.users.on("remove", this._onUserRemoved, this),
                        this.model.on("change:open", this._onOpenChanged, this),
                        this.model.on("change:active", this._onActiveChanged, this),
                        this.model.on("change:visible", this._updateStatus, this),
                        this.model.on("change:roomName", function() {
                            return t.ui.roomName.text(t.model.get("roomName") || I18n.t("chat.connecting")),
                                t.$el.toggleClass("connected", null != t.model.get("roomName")),
                                t._resetRooms()
                        }),
                        this.model.messages.on("add", this._addMessage, this),
                        this.model.messages.on("reset", this._resetMessages, this),
                        this.model.messages.on("beforeMessageUpdated", function() {
                            t._wasScrolledToBottom = t._isScrolledToBottomMessage()
                        }),
                        this.model.messages.on("messageUpdated", function(e) {
                            if (!e.isSystem())
                                return t._afterContentAdded(t._wasScrolledToBottom)
                        }),
                        this.model.rooms.on("reset", this._resetRooms, this),
                        this.model.rooms.on("add", this._resetRooms, this),
                        this.userViews = {},
                        this.render(),
                        this.ui.messages.on("scroll", function() {
                            return t._hideUnreadMessagesNotification()
                        }),
                        this._updateStatus(),
                        this._onOpenChanged(),
                        W.accelerators.events.on({
                            toggleChat: this.toggleOpen,
                            scope: this
                        })
                }
            }, {
                key: "_onHeaderClicked",
                value: function(e) {
                    $(e.target).hasClass("header") && this.toggleOpen()
                }
            }, {
                key: "_onUsersReset",
                value: function() {
                    var e = this;
                    this.ui.users.empty(),
                        this.model.users.models.map(function(t) {
                            return e._addUser(t)
                        })
                }
            }, {
                key: "_addUser",
                value: function(e) {
                    var t = new l.default({
                        model: e,
                        map: this._map,
                        marx: this._marx,
                        currentUser: this.model.get("currentUser")
                    });
                    t.render(),
                        this.userViews[e.get("id")] = t;
                    var n = this.model.users.models.indexOf(e),
                        i = this.ui.users.children().eq(n);
                    i.length ? t.$el.insertBefore(i) : t.$el.appendTo(this.ui.users)
                }
            }, {
                key: "_onUserRemoved",
                value: function(e) {
                    var t = e.get("id"),
                        n = ".user[data-id='" + t + "']";
                    this.ui.users.find(n).remove(),
                        delete this.userViews[t]
                }
            }, {
                key: "_onOpenChanged",
                value: function() {
                    var e = !0 === this.model.get("open");
                    this.$el.toggleClass("open", e),
                        e && (this._scrollToBottomMessage(),
                            this._hideUnreadMessagesNotification())
                }
            }, {
                key: "_onActiveChanged",
                value: function() {
                    var e = this.model.get("active");
                    this.$el.toggle(e),
                        this.ui.toggle.toggle(e)
                }
            }, {
                key: "_onRoomClicked",
                value: function(e) {
                    e.preventDefault();
                    var t = $(e.target).data("room");
                    this.model.set("room", t)
                }
            }, {
                key: "_updateStatus",
                value: function() {
                    var e = this.model.get("visible");
                    this.ui.status.text(this._getStatusText()),
                        this.ui.visibleButton.toggleClass("checked", e),
                        this.ui.invisibleButton.toggleClass("checked", !e),
                        this.$el.toggleClass("visible-true", e),
                        this.$el.toggleClass("visible-false", !e)
                }
            }, {
                key: "toggleOpen",
                value: function() {
                    var e = this.model.get("open");
                    e || W.Report.chatAction("chat_open"),
                        this.model.set("open", !e)
                }
            }, {
                key: "_toggleVisibility",
                value: function(e) {
                    e && e.preventDefault(),
                        this.model.set("visible", !this.model.get("visible"))
                }
            }, {
                key: "_onMessageInputClicked",
                value: function(e) {
                    if (13 === e.keyCode) {
                        var t = $.trim(this.ui.messageInput.val());
                        return null != this.model.get("room") && "" !== t && (this.model.sendMessage(t),
                                this.ui.messageInput.val("")),
                            !1
                    }
                }
            }, {
                key: "_addMessage",
                value: function(e) {
                    var t = new u.default({
                        model: e
                    });
                    t.render();
                    var n = this._isScrolledToBottomMessage();
                    if (this.ui.messages.append(t.$el),
                        !e.isSystem())
                        return this._afterContentAdded(n)
                }
            }, {
                key: "_afterContentAdded",
                value: function(e) {
                    e ? this._scrollToBottomMessage() : this._showUnreadMessagesNotification(),
                        this.model.get("open") || this.$el.addClass("has-unread-messages")
                }
            }, {
                key: "_showUnreadMessagesNotification",
                value: function() {
                    this._unreadMessagesCount || (this._unreadMessagesCount = 0),
                        this._unreadMessagesCount++,
                        this.ui.unreadMessagesNotification.text(I18n.t("chat.unread", {
                            count: this._unreadMessagesCount
                        })).show()
                }
            }, {
                key: "_onUnreadMessagesNotificationClicked",
                value: function(e) {
                    e.preventDefault && e.preventDefault(),
                        this._scrollToBottomMessage(),
                        this._hideUnreadMessagesNotification()
                }
            }, {
                key: "_hideUnreadMessagesNotification",
                value: function() {
                    this._unreadMessagesCount = 0,
                        this.ui.unreadMessagesNotification.hide(),
                        this.$el.removeClass("has-unread-messages")
                }
            }, {
                key: "_isScrolledToBottomMessage",
                value: function() {
                    var e = this.ui.messages;
                    return e.scrollTop() + e.outerHeight() >= e[0].scrollHeight
                }
            }, {
                key: "_scrollToBottomMessage",
                value: function() {
                    this.ui.messages.scrollTop(this.ui.messages[0].scrollHeight)
                }
            }, {
                key: "_resetMessages",
                value: function(e) {
                    var t = this;
                    this.ui.messages.empty(),
                        this.model.messages.models.map(function(e) {
                            return t._addMessage(e)
                        })
                }
            }, {
                key: "_resetRooms",
                value: function(e) {
                    var t = this;
                    return this.ui.rooms.empty(),
                        this.model.rooms.models.map(function(e) {
                            return t._addRoom(e)
                        })
                }
            }, {
                key: "_addRoom",
                value: function(e) {
                    var t = this.model.get("room"),
                        n = this._createRoomMenuItem(e);
                    e.equals(t) && n.addClass("checked"),
                        n.appendTo(this.ui.rooms),
                        this.$el.toggleClass("multiple-rooms", this.model.rooms.models.length > 1)
                }
            }, {
                key: "_createRoomMenuItem",
                value: function(e) {
                    var t = e.getName(),
                        n = $("<li>");
                    return $("<a>").attr({
                            href: "#"
                        }).text(t).data({
                            room: e
                        }).appendTo(n),
                        n
                }
            }, {
                key: "serializeData",
                value: function() {
                    var e = this.model.toJSON();
                    return e.status = this._getStatusText(),
                        e
                }
            }, {
                key: "_getStatusText",
                value: function() {
                    return this.model.get("visible") ? I18n.t("chat.visible") : I18n.t("chat.invisible")
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Chat/View/chat"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function(e) {
                    this._map = e.map,
                        this._marx = e.marx,
                        this._currentUser = e.currentUser
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .user": "_onClick"
                    }
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        className: this._isCurrentUser() ? "current-user" : ""
                    }
                }
            }, {
                key: "_isCurrentUser",
                value: function() {
                    return this.model.get("id").toString() === this._currentUser.get("id").toString()
                }
            }, {
                key: "_onClick",
                value: function(e) {
                    e.preventDefault();
                    var t = this._transformFromMarx(this.model.getCenter());
                    return this._map.setCenter(t),
                        W.Report.chatAction("chat_user_clicked")
                }
            }, {
                key: "_transformFromMarx",
                value: function(e) {
                    return e.transform(this._marx.displayProjection, this._map.getProjectionObject())
                }
            }, {
                key: "tagName",
                get: function() {
                    return "li"
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Chat/View/chat_user"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return "message " + this.model.getType() + "-message " + (this.model.isOwnMessage() ? "own-message" : "")
                }
            }, {
                key: "modelEvents",
                value: function() {
                    return {
                        "change:body": "render"
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.$el.find(".body div").autoRTL()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Chat/View/chat_message"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(63)),
        r = l(n(0)),
        s = l(n(1)),
        a = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        o = l(n(13));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e() {
            (0,
                r.default)(this, e),
            this.currentContainer = {},
                this.currentContainer._subActions = [],
                this.root = this.currentContainer,
                this.previousContainers = []
        }
        return (0,
                s.default)(e, [{
                key: "visit",
                value: function(e) {
                    this.addAction(e)
                }
            }, {
                key: "beforeEnter",
                value: function(e) {
                    if (!e.dontSerialize) {
                        var t = {};
                        this.previousContainers.push(this.currentContainer),
                            this.currentContainer._subActions.push(t),
                            this.currentContainer = t,
                            t.name = e.constructor.name,
                            t._subActions = []
                    }
                    return !e.dontSerialize
                }
            }, {
                key: "afterLeave",
                value: function(e) {
                    e.dontSerialize || (this.currentContainer = this.previousContainers.pop())
                }
            }, {
                key: "addAction",
                value: function(e) {
                    var t = void 0;
                    e.dontSerialize || (t = e.serialize(),
                        null !== (t = a.deepClone(t)) && (t instanceof Array ? (t = this.serializeGeometries(t),
                            this.currentContainer._subActions = this.currentContainer._subActions.concat(t)) : (t = this.serializeGeometries(t),
                            this.currentContainer._subActions.push(t))))
                }
            }, {
                key: "serializeGeometries",
                value: function(e) {
                    if ("object" === (void 0 === e ? "undefined" : (0,
                            i.default)(e)) && null !== e) {
                        if (Array.isArray(e)) {
                            for (var t = 0; t < e.length; t++)
                                e[t] = this.serializeGeometries(e[t]);
                            return e
                        }
                        if (e instanceof OL.Geometry)
                            return e = o.default.unproject(e),
                                o.default.toGeoJSON(e);
                        for (var n in e)
                            e.hasOwnProperty(n) && (e[n] = this.serializeGeometries(e[n]));
                        return e
                    }
                    return e
                }
            }, {
                key: "getResult",
                value: function() {
                    return this.root._subActions[0]
                }
            }]),
            e
    }();
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(7)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t, n, s) {
            (0,
                r.default)(this, e),
            this._name = t,
                this._attributeBitNumbers = s,
                this._categoryOrder = n,
                this._attributes = n.map(function() {
                    return (0,
                        i.default)(s).reduce(function(e, t) {
                        return e[t] = !1,
                            e
                    }, {})
                })
        }
        return (0,
                s.default)(e, [{
                key: "getName",
                value: function() {
                    return this._name
                }
            }, {
                key: "setAttribute",
                value: function(e, t, n) {
                    var i = this._categoryOrder.indexOf(e);
                    n !== this._attributes[i][t] && (this._attributes[i][t] = n,
                        this.trigger("change"))
                }
            }, {
                key: "_attributesToBitField",
                value: function(e) {
                    var t = this;
                    return (0,
                        i.default)(e).reduce(function(n, i) {
                        return e[i] && (n |= 1 << t._attributeBitNumbers[i]),
                            n
                    }, 0)
                }
            }, {
                key: "isEmpty",
                value: function() {
                    return this._attributes.map(this._attributesToBitField.bind(this)).every(function(e) {
                        return 0 === e
                    })
                }
            }, {
                key: "serialize",
                value: function() {
                    return this._attributes.map(this._attributesToBitField.bind(this)).join(",")
                }
            }]),
            e
    }();
    _.extend(o.prototype, Backbone.Events),
        t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(19)),
        r = p(n(6)),
        s = p(n(2)),
        a = p(n(0)),
        o = p(n(1)),
        l = p(n(3)),
        u = p(n(8)),
        d = p(n(4)),
        c = p(n(86)),
        h = p(n(87)),
        f = n(30);

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
        function t(e, n) {
            (0,
                a.default)(this, t);
            var i = (0,
                l.default)(this, (t.__proto__ || (0,
                s.default)(t)).call(this, e, n));
            return i.serializer = new h.default,
                i
        }
        return (0,
                d.default)(t, e),
            (0,
                o.default)(t, [{
                key: "getAsync",
                value: function(e, n, a, o) {
                    var l = this,
                        d = {},
                        c = void 0;
                    return null !== e && (Array.isArray(e) ? d = {
                            ids: e.join(",")
                        } : (c = (0,
                                u.default)(t.prototype.__proto__ || (0,
                                s.default)(t.prototype), "getObjectById", this).call(this, e),
                            d = {
                                id: e
                            })),
                        this.model.loginManager.isLoggedIn() || (d.sandbox = !0),
                        null == c ? ((0,
                                r.default)(d, n),
                            (0,
                                f.httpGet)(this.url, d).then(function(t) {
                                return l.serializer.read(t),
                                    l.mergeOnDemandObjects(t, e)
                            })) : i.default.resolve(c)
                }
            }, {
                key: "mergeOnDemandObjects",
                value: function(e, t) {
                    e.users && this.model.users.mergeObjects(e.users, null, new OL.Bounds);
                    var n = (e = e[this.objectType + "s"]).objects;
                    return delete e.objects,
                        this.put(n),
                        this.additionalInfo = e,
                        n
                }
            }]),
            t
    }(c.default);
    (0,
        r.default)(g.prototype, {
        CLASS_NAME: "Waze.Model.OnDemandRepository"
    }),
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(6)),
        r = h(n(7)),
        s = h(n(2)),
        a = h(n(0)),
        o = h(n(1)),
        l = h(n(3)),
        u = h(n(4)),
        d = h(n(86)),
        c = h(n(1101));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e, n) {
            (0,
                a.default)(this, t);
            var i = (0,
                l.default)(this, (t.__proto__ || (0,
                s.default)(t)).call(this, e, n));
            return i.zoomToRoadType = W.Config.segments.zoomToRoadType,
                i.topCityID = null,
                i.roadTypeBounds = {},
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "destroy",
                value: function() {
                    this.roadTypeBounds = null,
                        d.default.prototype.destroy.apply(this, arguments)
                }
            }, {
                key: "updateDataExtent",
                value: function(e, t, n) {
                    var i = this,
                        s = this.zoomToRoadType[n] || [],
                        a = [];
                    return -1 === s && (s = W.Config.segments.allTypes),
                        (0,
                            r.default)(this.zoomToRoadType).forEach(function(t) {
                            t = parseInt(t, 10);
                            var n = s.includes(t);
                            i.roadTypeBounds[t] && i.roadTypeBounds[t].containsBounds(e) || n && a.push(t)
                        }),
                        _.isEmpty(a) ? null : {
                            roadTypes: s.toString()
                        }
                }
            }, {
                key: "getDirectedSegment",
                value: function(e) {
                    var t = this.getObjectById(e.getSegmentID());
                    return null == t ? null : new c.default(e, t)
                }
            }, {
                key: "mergeObjects",
                value: function(e, t, n, i, r) {
                    this.currentDataBounds = n.clone(),
                        (e.roadTypes || []).forEach(function(e) {
                            this.roadTypeBounds[e] = n
                        }, this),
                        this.calcTopCity(e),
                        d.default.prototype.mergeObjects.apply(this, arguments)
                }
            }, {
                key: "calcTopCity",
                value: function(e) {
                    var t = {},
                        n = void 0,
                        i = void 0,
                        r = void 0,
                        s = void 0,
                        a = 0;
                    this.topCityID = null,
                        e.objects.forEach(function(e) {
                            (s = this.model.streets.getObjectById(e.attributes.primaryStreetID)) && (r = s.cityID,
                                (i = this.model.cities.getObjectById(r)) && !i.isEmpty() && (n = t[r] || 0,
                                    t[r] = n++,
                                    n >= a && (a = n,
                                        this.topCityID = r)))
                        }, this)
                }
            }, {
                key: "clear",
                value: function(e) {
                    this.roadTypeBounds = {},
                        d.default.prototype.clear.apply(this, arguments)
                }
            }]),
            t
    }(d.default);
    (0,
        i.default)(f.prototype, {
        CLASS_NAME: "Waze.Model.SegmentRepository"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n) {
            (0,
                i.default)(this, e),
            this._vertex = t,
                this._segment = n
        }
        return (0,
                r.default)(e, [{
                key: "getVertex",
                value: function() {
                    return this._vertex
                }
            }, {
                key: "getSegment",
                value: function() {
                    return this._segment
                }
            }, {
                key: "getNode",
                value: function() {
                    return this._segment.model.nodes.getObjectById(this.getNodeID())
                }
            }, {
                key: "_getDirectedAttribute",
                value: function(e) {
                    var t = this._vertex.isForward() ? "fwd" : "rev";
                    return this._segment.attributes[t + e]
                }
            }, {
                key: "_getEdgeAttribute",
                value: function(e) {
                    var t = this._vertex.isForward() ? "to" : "from";
                    return this._segment.attributes[t + e]
                }
            }, {
                key: "isDirectionAllowed",
                value: function() {
                    return this._getDirectedAttribute("Direction")
                }
            }, {
                key: "getDrivingRestrictions",
                value: function() {
                    var e = this._segment.getBidiDrivingRestrictions();
                    return (this._vertex.isForward() ? this._segment.getForwardDrivingRestrictions() : this._segment.getReverseDrivingRestrictions()).concat(e)
                }
            }, {
                key: "getNodeID",
                value: function() {
                    return this._getEdgeAttribute("NodeID")
                }
            }, {
                key: "hasBigJunction",
                value: function() {
                    return this._getEdgeAttribute("Crossroads").length > 0
                }
            }, {
                key: "getBigJunction",
                value: function() {
                    var e = this._getEdgeAttribute("Crossroads")[0];
                    return null == e ? null : this._segment.model.bigJunctions.getObjectById(e)
                }
            }, {
                key: "areTurnsLocked",
                value: function() {
                    return this._getDirectedAttribute("TurnsLocked")
                }
            }, {
                key: "isDrivable",
                value: function() {
                    return this._segment.isDrivable()
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(86));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e, n));
            return i.landmarkBounds = n.landmarkBounds || null,
                i.venueLevel = n.venueLevel || null,
                i.zoomToSize = W.Config.venues.zoomToSize,
                i.categoryBrands = {},
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "destroy",
                value: function() {
                    this.landmarkBounds = null,
                        this.updateRequestBounds(),
                        u.default.prototype.destroy.apply(this, arguments)
                }
            }, {
                key: "updateDataExtent",
                value: function(e, t, n) {
                    var i = this.zoomToSize[n],
                        r = {};
                    return i ? (this._areLandmarksInBounds(e) && this.venueLevel === i || this.filter.isEmpty() || (r.venueLevel = i,
                            r[this.filter.getName()] = this.filter.serialize()),
                        r) : r
                }
            }, {
                key: "_areLandmarksInBounds",
                value: function(e) {
                    return this.landmarkBounds && this.landmarkBounds.containsBounds(e)
                }
            }, {
                key: "mergeObjects",
                value: function(e, t, n, i, r) {
                    this.landmarkBounds = n.clone(),
                        this.venueLevel = e.venueLevel,
                        this.categoryBrands = e.categoryBrands || {},
                        u.default.prototype.mergeObjects.apply(this, arguments)
                }
            }, {
                key: "clear",
                value: function() {
                    this.landmarkBounds = null,
                        this.venueLevel = null,
                        u.default.prototype.clear.apply(this, arguments)
                }
            }]),
            t
    }(u.default);
    (0,
        i.default)(c.prototype, {
        CLASS_NAME: "Waze.Model.LandmarkRepository"
    }),
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(86)),
        u = d(n(388));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getInvalidEnvs",
                value: function() {
                    var e = this;
                    return this.getObjectArray(function(t) {
                        var n = t.attributes.geometry.getArea() / e.currentDataBounds.toGeometry().getArea();
                        return t.attributes.type === u.default.TYPE.INVALID_ENV && n >= .9
                    })
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(7)),
        r = h(n(9)),
        s = h(n(6)),
        a = h(n(0)),
        o = h(n(1)),
        l = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        u = h(n(11)),
        d = h(n(408)),
        c = h(n(1105));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function() {
        function e(t, n) {
            (0,
                a.default)(this, e),
            this._savingEnabled = !0,
                (0,
                    s.default)(this, n),
                this.model = t,
                this._undoStack = [],
                this._redoStack = [],
                this.events = new OpenLayers.Events(this),
                this._groupsSet = new c.default
        }
        return (0,
                o.default)(e, [{
                key: "add",
                value: function(e) {
                    if ((e.undoSupported() || !1 !== this.events.triggerEvent("beforeclearactions")) && !1 !== this.events.triggerEvent("beforeaction", {
                            action: e
                        })) {
                        var t = this.unsavedActionsNum();
                        e.setModel(this.model),
                            e.undoSupported() ? this._undoStack.push(e) : (this._clearActions(),
                                this._triggerAfterClearActions(e));
                        var n = !1;
                        l.protect("doing action:", function() {
                                !1 !== e.doAction() && (n = !0)
                            }, this),
                            l.protect("generate action string", function() {
                                e.generateDescription()
                            }, null, !0);
                        var i = _.uniq(_.compact(e.getAffectedUniqueIds()));
                        this._groupsSet.addAndUnion([].concat((0,
                            r.default)(i), [e]));
                        var s = this.getActionGroupId(e);
                        this._clearRedoStackOfGroup(s) && this._triggerAfterClearActions(e),
                            n || this._undoStack.pop(),
                            0 === t && this.events.triggerEvent("hasActions"),
                            this.events.triggerEvent("afteraction", {
                                action: e
                            })
                    }
                }
            }, {
                key: "canUndo",
                value: function() {
                    return this._undoStack.length > 0
                }
            }, {
                key: "canSave",
                value: function() {
                    return this.canUndo() && this.isAllowedToSave()
                }
            }, {
                key: "canRedo",
                value: function() {
                    return this._redoStack.length > 0
                }
            }, {
                key: "unsavedActionsNum",
                value: function() {
                    return this._undoStack.length
                }
            }, {
                key: "getActionsNum",
                value: function() {
                    return this._undoStack.length + this._redoStack.length
                }
            }, {
                key: "undo",
                value: function() {
                    if (!this.canUndo())
                        return !1;
                    var e = this._undoStack[this._undoStack.length - 1];
                    return this._undoAction(e),
                        W.Report.generalAction("undo_clicked"),
                        !0
                }
            }, {
                key: "canUndoAction",
                value: function(e) {
                    return this._undoStack.includes(e)
                }
            }, {
                key: "_undoAction",
                value: function(e) {
                    return !!this.canUndoAction(e) && (!1 !== this.events.triggerEvent("beforeundoaction", {
                        action: e
                    }) && (l.protect("undoing action:", function() {
                            e.undoAction()
                        }, this),
                        this._undoStack.splice(this._undoStack.indexOf(e), 1),
                        this._redoStack.push(e),
                        this.events.triggerEvent("afterundoaction", {
                            action: e
                        }),
                        void(0 === this.unsavedActionsNum() && this.events.triggerEvent("noActions"))))
                }
            }, {
                key: "redo",
                value: function() {
                    if (!this.canRedo())
                        return !1;
                    var e = this._redoStack[this._redoStack.length - 1];
                    return this._redoAction(e),
                        !0
                }
            }, {
                key: "canRedoAction",
                value: function(e) {
                    return this._redoStack.includes(e)
                }
            }, {
                key: "_redoAction",
                value: function(e) {
                    if (!this.canRedoAction(e))
                        return !1;
                    if (!1 === this.events.triggerEvent("beforeaction", {
                            action: e
                        }))
                        return !1;
                    var t = this.unsavedActionsNum();
                    this._redoStack.splice(this._redoStack.indexOf(e), 1),
                        this._undoStack.push(e),
                        l.protect("redoing action:", function() {
                            e.redoAction()
                        }, this),
                        this.events.triggerEvent("afteraction", {
                            action: e
                        }),
                        0 === t && this.events.triggerEvent("hasActions")
                }
            }, {
                key: "undoGroupAction",
                value: function(e) {
                    if (!this.canUndoAction(e))
                        return 0;
                    for (var t = this.getActionGroupId(e), n = this._undoStack, i = this._filterActionsByGroupId(n, t), r = i.indexOf(e), s = i.length - 1; s >= r; s--) {
                        var a = i[s];
                        this._undoAction(a)
                    }
                    return i.length - r
                }
            }, {
                key: "redoGroupAction",
                value: function(e) {
                    if (!this.canRedoAction(e))
                        return 0;
                    for (var t = this.getActionGroupId(e), n = this._redoStack, i = this._filterActionsByGroupId(n, t), r = i.indexOf(e), s = i.length - 1; s >= r; s--) {
                        var a = i[s];
                        this._redoAction(a)
                    }
                    return i.length - r
                }
            }, {
                key: "undoEntireGroupById",
                value: function(e) {
                    var t = this._filterActionsByGroupId(this._undoStack, e);
                    t.length > 0 && this.undoGroupAction(t[0])
                }
            }, {
                key: "redoEntireGroupById",
                value: function(e) {
                    var t = this._filterActionsByGroupId(this._redoStack, e);
                    t.length > 0 && this.redoGroupAction(t[0])
                }
            }, {
                key: "clear",
                value: function() {
                    this._clearActions(),
                        this._triggerAfterClearActions()
                }
            }, {
                key: "_clearActions",
                value: function() {
                    this._undoStack.forEach(function(e) {
                            return e.destroy()
                        }),
                        this._redoStack.forEach(function(e) {
                            return e.destroy()
                        }),
                        this._groupsSet.clear(),
                        this._undoStack = [],
                        this._redoStack = []
                }
            }, {
                key: "_clearRedoStackOfGroup",
                value: function(e) {
                    return this._removeActionsFromStackByGroupId(this._redoStack, e)
                }
            }, {
                key: "_removeActionsFromStackByGroupId",
                value: function(e, t) {
                    for (var n = !1, i = e.length - 1; i >= 0; i--)
                        this.getActionGroupId(e[i]) === t && (e[i].destroy(),
                            e.splice(i, 1),
                            n = !0);
                    return n
                }
            }, {
                key: "clearGroupsWithOnlyRevertedChanges",
                value: function() {
                    var e = this._getGroupsWithOnlyRevertedChanges();
                    this._clearGroupsByIds(e) && this._triggerAfterClearActions()
                }
            }, {
                key: "_getGroupsWithOnlyRevertedChanges",
                value: function() {
                    var e = this,
                        t = this._redoStack,
                        n = this._groupActions(t);
                    return (0,
                        i.default)(n).filter(function(t) {
                        return n[t].every(function(t) {
                            return e.canRedoAction(t)
                        })
                    })
                }
            }, {
                key: "_triggerAfterClearActions",
                value: function(e) {
                    this.events.triggerEvent("afterclearactions", {
                            action: e
                        }),
                        0 === this._undoStack.length && this.events.triggerEvent("noActions")
                }
            }, {
                key: "clearGroupsOfActions",
                value: function(e) {
                    var t = this.getActionsGroupIds(e);
                    this._clearGroupsByIds(t) && this._triggerAfterClearActions()
                }
            }, {
                key: "_clearGroupById",
                value: function(e) {
                    var t = !1;
                    return this._removeActionsFromStackByGroupId(this._redoStack, e) && (t = !0),
                        this._removeActionsFromStackByGroupId(this._undoStack, e) && (t = !0),
                        this._groupsSet.removeGroup(e),
                        t
                }
            }, {
                key: "_clearGroupsByIds",
                value: function(e) {
                    var t = this,
                        n = !1;
                    return e.forEach(function(e) {
                            t._clearGroupById(e) && (n = !0)
                        }),
                        n
                }
            }, {
                key: "getActionsGroupIds",
                value: function(e) {
                    return (0,
                        i.default)(this._groupActions(e))
                }
            }, {
                key: "getChangesBounds",
                value: function() {
                    var e = new u.default;
                    return e.subActions = this._undoStack.concat(),
                        e.getBounds()
                }
            }, {
                key: "getActions",
                value: function(e) {
                    return e ? this._undoStack.concat(this._redoStack.concat().reverse()) : this._undoStack.concat()
                }
            }, {
                key: "toggleSavingEnabled",
                value: function(e) {
                    this._savingEnabled = e
                }
            }, {
                key: "isAllowedToSave",
                value: function() {
                    return this.model.loginManager.isLoggedIn() && this._savingEnabled
                }
            }, {
                key: "getFlatActions",
                value: function() {
                    return _.flatten(this.getActions().map(function(e) {
                        return e.flat()
                    }))
                }
            }, {
                key: "hasPendingMerge",
                value: function(e) {
                    var t = this.getFlatActions();
                    return _.some(t, function(t) {
                        return t instanceof d.default && t._toVenue.getID() === e
                    })
                }
            }, {
                key: "getActionsByGroupsIds",
                value: function(e) {
                    return this._groupActions(this.getActions(e))
                }
            }, {
                key: "getActionsByGroupId",
                value: function(e, t) {
                    return this._filterActionsByGroupId(this.getActions(t), e)
                }
            }, {
                key: "_filterActionsByGroupId",
                value: function(e, t) {
                    var n = this;
                    return e.filter(function(e) {
                        return n.getActionGroupId(e) === t
                    })
                }
            }, {
                key: "_groupActions",
                value: function(e) {
                    var t = this;
                    return _.groupBy(e, function(e) {
                        return t.getActionGroupId(e)
                    })
                }
            }, {
                key: "isActionDone",
                value: function(e) {
                    return this._undoStack.includes(e)
                }
            }, {
                key: "getActionGroupId",
                value: function(e) {
                    return this._groupsSet.find(e)
                }
            }, {
                key: "getActionById",
                value: function(e) {
                    return this.getActions(!0).filter(function(t) {
                        return t.getID() === e
                    })[0]
                }
            }]),
            e
    }();
    (0,
        s.default)(f.prototype, {
        CLASS_NAME: "Waze.ActionManager"
    }),
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(7)),
        r = o(n(120)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            (0,
                s.default)(this, e),
            this._autoIncId = 1,
                this._parentMap = new r.default,
                this._size = new r.default,
                this._objects = []
        }
        return (0,
                a.default)(e, [{
                key: "add",
                value: function(e) {
                    if (!this.has(e)) {
                        var t = this.generateUniqueId();
                        this._parentMap.set(e, t),
                            this._parentMap.set(t, t),
                            this._size.set(t, 1),
                            this._objects.push(e)
                    }
                }
            }, {
                key: "remove",
                value: function(e) {
                    if (this.has(e)) {
                        var t = this.find(e);
                        this._parentMap.delete(e);
                        var n = this._size.get(t);
                        n <= 1 ? (this._parentMap.delete(t),
                            this._size.delete(t)) : this._size.set(t, n - 1);
                        var i = this._objects.indexOf(e);
                        this._objects.splice(i, 1)
                    }
                }
            }, {
                key: "removeGroup",
                value: function(e) {
                    for (var t = this._objects.length - 1; t >= 0; t--) {
                        var n = this._objects[t];
                        this.find(n) === e && this.remove(n)
                    }
                }
            }, {
                key: "has",
                value: function(e) {
                    return this._parentMap.has(e)
                }
            }, {
                key: "addAndUnion",
                value: function(e) {
                    if (e.length > 0) {
                        this.add(e[0]);
                        for (var t = this.find(e[0]), n = 1; n < e.length; n++)
                            this.has(e[n]) ? t = this.union(e[n], t) : (this._parentMap.set(e[n], t),
                                this._size.set(t, this._size.get(t) + 1),
                                this._objects.push(e[n]))
                    }
                }
            }, {
                key: "find",
                value: function(e) {
                    for (var t = e, n = this._parentMap.get(t); n !== t;)
                        t = n,
                        n = this._parentMap.get(n);
                    return this._parentMap.set(e, n),
                        n
                }
            }, {
                key: "isConnected",
                value: function(e, t) {
                    return this.find(e) === this.find(t)
                }
            }, {
                key: "union",
                value: function(e, t) {
                    var n = this.find(e),
                        i = this.find(t);
                    if (n === i)
                        return n;
                    var r = this._size.get(n),
                        s = this._size.get(i);
                    return r > s ? (this._parentMap.set(i, n),
                        this._size.set(n, r + s),
                        n) : (this._parentMap.set(n, i),
                        this._size.set(i, r + s),
                        i)
                }
            }, {
                key: "generateUniqueId",
                value: function() {
                    return "__disjId:" + this._autoIncId++
                }
            }, {
                key: "getSets",
                value: function() {
                    for (var e, t = {}, n = 0; n < this._objects.length; n++)
                        t[e = this.find(this._objects[n])] || (t[e] = []),
                        t[e].push(this._objects[n]);
                    for (var r = [], s = (0,
                            i.default)(t), a = 0; a < s.length; a++)
                        r.push(t[s[a]]);
                    return r
                }
            }, {
                key: "getGroupSize",
                value: function(e) {
                    return this._size.get(e)
                }
            }, {
                key: "clear",
                value: function() {
                    this._autoIncId = 1,
                        this._parentMap.clear(),
                        this._size.clear(),
                        this._objects = []
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(0)),
        r = a(n(1)),
        s = a(n(34));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t, n) {
            (0,
                i.default)(this, e),
            this._nodeRepository = t,
                this._segmentRepository = n
        }
        return (0,
                r.default)(e, [{
                key: "getConnectedVertices",
                value: function(e) {
                    var t = this.getVertexNodeID(e),
                        n = null;
                    return null !== t && (n = this._nodeRepository.getObjectById(t)),
                        null === n ? [] : this._getNodeConnectedVertices(n).filter(function(t) {
                            return !t.equals(e)
                        })
                }
            }, {
                key: "_getNodeConnectedVertices",
                value: function(e) {
                    var t = this,
                        n = [],
                        i = e.getID();
                    return e.attributes.segIDs.forEach(function(e) {
                            var r = t._segmentRepository.getObjectById(e);
                            r && (r.attributes.fromNodeID === i && n.push(s.default.forwardOf(e)),
                                r.attributes.toNodeID === i && n.push(s.default.reverseOf(e)))
                        }),
                        n
                }
            }, {
                key: "getVertexNodeID",
                value: function(e) {
                    var t = this._segmentRepository.getObjectById(e.getSegmentID());
                    return e.isForward() ? t.attributes.toNodeID : t.attributes.fromNodeID
                }
            }, {
                key: "toJSON",
                value: function() {
                    var e = this,
                        t = {};
                    return this._nodeRepository.getObjectArray().forEach(function(n) {
                            n.isDeleted() || (t[n.getID()] = e._getNodeConnectedVertices(n).map(function(e) {
                                return e.getOpposite().toString()
                            }))
                        }),
                        t
                }
            }, {
                key: "isTurnLegal",
                value: function(e, t) {
                    var n = this._segmentRepository.getDirectedSegment(e),
                        i = this._segmentRepository.getDirectedSegment(t);
                    return n.isDirectionAllowed() && i.isDirectionAllowed() && i.isDrivable()
                }
            }, {
                key: "areVerticesConnected",
                value: function(e, t) {
                    var n = this._segmentRepository.getDirectedSegment(e),
                        i = this._segmentRepository.getDirectedSegment(t.getOpposite());
                    return n.getNodeID() === i.getNodeID()
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.DeleteSegments", {
                        count: this.subActions.length
                    })
                }
            }]),
            t
    }(l(n(74)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function() {
                    this._editingLocks = {},
                        this.set({
                            drawing: !1,
                            editingEnabled: !1,
                            saving: !1,
                            navigation: !1,
                            advancedTools: !1,
                            editingHouseNumbers: !1
                        })
                }
            }, {
                key: "activate",
                value: function() {
                    return this.model = W.app,
                        this.model.on("change:editing", this._onEditingChanged, this)
                }
            }, {
                key: "lockEditing",
                value: function() {
                    var e = _.uniqueId("editingLock_");
                    return this._editingLocks[e] = !0,
                        this.set("editingEnabled", !1),
                        e
                }
            }, {
                key: "releaseEditing",
                value: function(e) {
                    return delete this._editingLocks[e],
                        this.set("editingEnabled", _.isEmpty(this._editingLocks))
                }
            }, {
                key: "_onEditingChanged",
                value: function() {
                    var e = this.model.get("loggedIn"),
                        t = this.model.get("user"),
                        n = this.model.get("editing");
                    this.set({
                        editingEnabled: n,
                        advancedTools: e && t.isStaff,
                        navigation: n
                    })
                }
            }, {
                key: "setDrawingInProgress",
                value: function() {
                    return this.set("drawing", !0)
                }
            }, {
                key: "setDrawingDone",
                value: function() {
                    return this.set("drawing", !1)
                }
            }, {
                key: "enterEditingHouseNumbers",
                value: function() {
                    this.set("editingHouseNumbers", !0)
                }
            }, {
                key: "exitEditingHouseNumbers",
                value: function() {
                    this.set("editingHouseNumbers", !1)
                }
            }]),
            t
    }(Backbone.Model);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = v(n(15)),
        s = v(n(6)),
        a = v(n(0)),
        o = v(n(1)),
        l = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        u = v(n(1110)),
        d = v(n(411)),
        c = v(n(1118)),
        h = v(n(1119)),
        f = v(n(209)),
        p = n(14),
        g = v(n(44));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function() {
        function e(t, n, i, r) {
            var s = this;
            (0,
                a.default)(this, e),
            this.modifyControl = null,
                this.editors = null,
                this.activeEditor = null,
                this.selectionManager = t,
                this.editingMediator = n,
                this.map = i,
                this.dataModel = r,
                this._typeToEditorClass = _.clone(this.TYPE_TO_EDITOR_CLASS),
                this._typeToEditorOptions = {},
                g.default.getLayers().forEach(function(e) {
                    var t = e.options;
                    t.geometryEditing && t.geometryEditing.enable && (s._typeToEditorClass[t.objectType] = f.default),
                        t.geometryEditing && t.geometryEditing.options && (s._typeToEditorOptions[t.objectType] = t.geometryEditing.options)
                }),
                this.selectionManager.events.register("selectionchanged", this, this.onSelectionChanged),
                this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this)
        }
        return (0,
                o.default)(e, [{
                key: "destroy",
                value: function() {
                    this.selectionManager.events.unregister("selectionchanged", this, this.onSelectionChanged),
                        this.editingMediator.un("change:editingEnabled", this._onEditingEnabledChanged, this)
                }
            }, {
                key: "_createGeometryEditor",
                value: function(e, t) {
                    var n = e[0].model.type;
                    if (n === p.SEGMENT || n === p.NODE)
                        return this._createSegmentGeometryEditor(e, t);
                    var i = this._typeToEditorClass[n];
                    if (!i)
                        return null;
                    var r = this.dataModel.getRepository(n);
                    return new i(e[0], (0,
                        s.default)({
                        virtualStyle: d.default.virtualVertices,
                        repo: r,
                        model: this.dataModel,
                        map: this.map
                    }, this._typeToEditorOptions[n]))
                }
            }, {
                key: "_createSegmentGeometryEditor",
                value: function(e, t) {
                    return new u.default(e, t, this.dataModel, this.map.sketchLayer, this.map.segmentLayer, this.map.nodeLayer, {
                        mode: OpenLayers.Control.ModifyFeature.RESHAPE,
                        virtualStyle: d.default.virtualVertices,
                        standalone: !0,
                        selectionManager: this.selectionManager,
                        map: this.map
                    })
                }
            }, {
                key: "_onEditingEnabledChanged",
                value: function() {
                    this.editingMediator.get("editingEnabled") ? (this.selectionManager.enable(),
                        this._createGeometryEditorForSelection()) : (this.selectionManager.disable(),
                        this._destroyGeometryEditor())
                }
            }, {
                key: "onSelectionChanged",
                value: function(e) {
                    this._createGeometryOnceLater()
                }
            }, {
                key: "_createGeometryOnceLater",
                value: function() {
                    this._schedualRun || (this._schedualRun = !0,
                        l.runLater(this._createGeometryEditorForSelection.bind(this)))
                }
            }, {
                key: "_createGeometryEditorForSelection",
                value: function() {
                    this._destroyGeometryEditor();
                    var e = this.selectionManager.getSelectedFeatures(),
                        t = this.selectionManager.getReversedSegments();
                    e.length > 0 && (this.activeEditor = this._createGeometryEditor(e, t)),
                        this._schedualRun = !1
                }
            }, {
                key: "_destroyGeometryEditor",
                value: function() {
                    this.activeEditor && (this.activeEditor.destroy(),
                        this.activeEditor = null)
                }
            }]),
            e
    }();
    (0,
        s.default)(m.prototype, {
        TYPE_TO_EDITOR_CLASS: (i = {},
            (0,
                r.default)(i, p.VENUE, h.default),
            (0,
                r.default)(i, p.SPEED_CAMERA, c.default),
            i)
    }),
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(6)),
        r = v(n(7)),
        s = v(n(1111)),
        a = n(32),
        o = n(119),
        l = n(14),
        u = v(n(150)),
        d = v(n(402)),
        c = v(n(1116)),
        h = v(n(410)),
        f = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        p = v(n(13)),
        g = v(n(1117));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = OpenLayers.Class(s.default, {
        model: null,
        origGeometries: null,
        initialize: function(e, t, n, i, r, a, o) {
            this.features = e.concat(),
                this.reverseSegments = t,
                this.model = n,
                s.default.prototype.initialize.apply(this, [i, r, a, o]),
                this.origGeometries = {},
                this._registerEvents(),
                this.map.addControl(this),
                this.activate(),
                this.selectFeature(this.feature)
        },
        destroy: function() {
            this._unregisterEvents(),
                this.unselectFeature(),
                this.deactivate(),
                s.default.prototype.destroy.apply(this, arguments)
        },
        _registerEvents: function() {
            this.model.segments.on(a.CHANGED, this.onFeatureUpdated, this),
                this.model.nodes.on(a.CHANGED, this.onFeatureUpdated, this),
                this.model.events.register("mergeend", this, this.onFeaturesMerge)
        },
        _unregisterEvents: function() {
            this.model.events.unregister("mergeend", this, this.onFeaturesMerge),
                this.model.segments.off(a.CHANGED, this.onFeatureUpdated, this),
                this.model.nodes.off(a.CHANGED, this.onFeatureUpdated, this)
        },
        onFeatureUpdated: function(e) {
            this.resetVertices()
        },
        clickOnDragPoint: function(e) {
            var t = null;
            if (e.parent && e.parent.model.type === l.NODE)
                t = e.parent;
            else if (e.parent && e.parent.model.type === l.SEGMENT) {
                var n = e.parent.geometry.getVertices(!0);
                e.geometry.equals(n[0]) && e.parent.model.attributes.fromNodeID ? t = this.map.nodeLayer.getVector(this.model.nodes.getObjectById(e.parent.model.attributes.fromNodeID)) : e.geometry.equals(n[1]) && e.parent.model.attributes.toNodeID && (t = this.map.nodeLayer.getVector(this.model.nodes.getObjectById(e.parent.model.attributes.toNodeID)))
            }
            t && (this.selectionManager.unselectAll(),
                this.selectionManager.selectFeature(t))
        },
        getFeaturesArray: function(e, t) {
            return e[t.getID()] || (e[t.getID()] = []),
                e[t.getID()]
        },
        _getArrowVector: function(e, t, n) {
            var i = void 0,
                r = void 0;
            e.isOneWay() ? (r = t ? "arrowOneWayRestricted" : "arrowOneWayStandard",
                i = 360 - p.default.radToDeg(_.last(n)),
                !0 === e.attributes.revDirection && (i -= 180)) : r = "arrowTwoWayRestricted";
            var s = new OpenLayers.Feature.Vector(n[0], {
                angle: i
            });
            return s["_" + r] = !0,
                s
        },
        collectVerticesFromFeatures: function(e, t, n, i) {
            var s = this,
                a = this.calculateNodesToParents(e);
            (0,
                r.default)(a).forEach(function(e) {
                var t = a[e],
                    n = s.model.nodes.getObjectById(e);
                if (t && t[0] && t[0].model.isAllowed(o.Nodes.EDIT_GEOMETRY) && t.allPresent) {
                    var r = new h.default(s.getFeatureGeometries(t), null);
                    r._sketch = !0,
                        r._nodeDragPoint = !0,
                        n.isVirtual() ? r._virtualNodeDragPoint = !0 : r._regularNodeDragPoint = !0,
                        r.parents = t,
                        r.parent = r.parents[0],
                        r.uneditable = !n.isAllowedToMoveNode(),
                        s.getFeaturesArray(i, r.parent.model).push(r)
                }
            });
            for (var u = 0; u < e.length; u++) {
                var d = e[u],
                    c = e[u].model;
                if (c.type === l.SEGMENT) {
                    var f = c.getDrivingRestrictionCount();
                    (f || c.isOneWay()) && (this.directionArrows[c.getID()] = c.getArrowPoints(42 * this.map.getResolution(), 20 * this.map.getResolution(), 20 * this.map.getResolution()).map(_.partial(this._getArrowVector, c, f))),
                    this._createDragHandles(c, d, t, a, i, n)
                }
            }
        },
        _createDragHandles: function(e, t, n, i, r, s) {
            var a = new OL.Feature.Vector(e.geometry.clone(), null),
                l = e.getID();
            a.parent = t,
                a._highlightPlaceHolder = !0,
                this.dragPointsPaddingVertices.push(a);
            for (var u = e.isAllowed(o.Segments.EDIT_GEOMETRY) && !e.outOfScope, d = this.getFeaturesArray(n, e), c = this.getFeaturesArray(r, e), h = e.geometry, f = null, p = e.attributes.fromNodeID && i[e.attributes.fromNodeID] ? 1 : 0, g = h.components.length - (e.attributes.toNodeID && i[e.attributes.toNodeID] ? 1 : 0), v = p; v < g; ++v) {
                var m = h.components[v];
                if ("OpenLayers.Geometry.Point" === m.CLASS_NAME) {
                    var _ = new OL.Feature.Vector(m, null);
                    if (f)
                        if (f.geometry.distanceTo(_.geometry) / this.map.getResolution() < 3 && v > 0 && v < h.components.length - 1)
                            continue;
                    f = _,
                        _._sketch = !0,
                        _._virtualParent = a,
                        _.renderIntent = "sketch",
                        _.parent = t,
                        _.parents = [t];
                    var y = void 0;
                    0 === v && e.attributes.fromNodeID || v === h.components.length - 1 && e.attributes.toNodeID ? (0 === v ? (y = this.model.nodes.getObjectById(e.attributes.fromNodeID),
                            _[this.reverseSegments[l] ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0) : v === h.components.length - 1 && (y = this.model.nodes.getObjectById(e.attributes.toNodeID),
                            _[this.reverseSegments[l] ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0),
                        _.uneditable = !y || !y.isAllowedToMoveNode() || !u,
                        c.push(_)) : (_.uneditable = !u,
                        0 === v ? (_[this.reverseSegments[l] ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0,
                            c.push(_)) : v === h.components.length - 1 ? (_[this.reverseSegments[l] ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0,
                            c.push(_)) : (_._dragPoint = !0,
                            u && d.push(_)))
                }
            }
            u && this._createVirtualVertices(e, h, t, a, s)
        },
        _createVirtualVertices: function(e, t, n, i, r) {
            var s = this.getFeaturesArray(r, e);
            if ("OpenLayers.Geometry.MultiPoint" !== t.CLASS_NAME)
                for (var a = 0; a < t.components.length - 1; ++a) {
                    var o = t.components[a],
                        l = t.components[a + 1];
                    if ("OpenLayers.Geometry.Point" === o.CLASS_NAME && "OpenLayers.Geometry.Point" === l.CLASS_NAME) {
                        if (o.distanceTo(l) / this.map.getResolution() < 20)
                            continue;
                        var u = (o.x + l.x) / 2,
                            d = (o.y + l.y) / 2,
                            c = new OL.Feature.Vector(new OpenLayers.Geometry.Point(u, d));
                        c._virtualParent = i,
                            c.parent = n,
                            c.parents = [n],
                            c._index = a + 1,
                            c._sketch = !0,
                            c._middleDragPoint = !0,
                            c.virtual = !0,
                            s.push(c)
                    }
                }
        },
        getFeatureGeometries: function(e) {
            var t = [],
                n = e[0].model;
            t.push(n.geometry);
            for (var i = 1; i < e.length; i++) {
                var r = e[i].model;
                if (r.isVirtuallyConnectedToNode(n)) {
                    var s = r.attributes.geometry.components.find(function(e) {
                        return e.equals(n.attributes.geometry)
                    });
                    null != s && t.push(s)
                } else
                    r.attributes.fromNodeID === n.getID() ? t.push(r.geometry.components[0]) : r.attributes.toNodeID === n.getID() && t.push(r.geometry.components[r.geometry.components.length - 1])
            }
            return t
        },
        calculateNodesToParents: function(e) {
            for (var t = this, n = {}, i = {}, r = 0; r < e.length; r++) {
                var s = e[r].model;
                if (s.type === l.SEGMENT) {
                    var a = s.attributes.fromNodeID,
                        o = s.attributes.toNodeID;
                    a && !n[a] && (i[a] ? (n[a] = this.getNodeIDParents(a),
                            delete i[a]) : i[a] = !0),
                        o && !n[o] && (i[o] ? (n[o] = this.getNodeIDParents(o),
                            delete i[o]) : i[o] = !0),
                        s.attributes.virtualNodeIDs.forEach(function(e) {
                            return n[e] = t.getNodeIDParents(e)
                        })
                } else
                    s.type === l.NODE && (n[s.getID()] || (n[s.getID()] = this.getNodeIDParents(s.getID())))
            }
            return n
        },
        getNodeIDParents: function(e) {
            var t = this.model.nodes.getObjectById(e);
            if (!f.defined(t))
                return null;
            var n = [this.map.nodeLayer.getVector(t)];
            n.allPresent = !0;
            for (var i = 0; i < t.attributes.segIDs.length; i++) {
                var r = t.attributes.segIDs[i],
                    s = this.model.segments.getObjectById(r);
                s ? (s = this.map.segmentLayer.getVector(s),
                    n.push(s)) : n.allPresent = !1
            }
            return n
        },
        onModificationStart: function(e) {
            var t = this;
            e.parents && e.parents.forEach(function(e) {
                var n = e.model.type + e.model.getID();
                t.origGeometries[n] || (t.origGeometries[n] = e.geometry.clone())
            })
        },
        onModificationComplete: function(e) {
            var t = void 0,
                n = {},
                i = this.snapControl.snappedFeature;
            if (i && !i.feature.model.outOfScope && (i.feature = i.feature.model,
                    n.snappedFeatures = i),
                1 === e.parents.length) {
                if (e.parent.model.type === l.SEGMENT) {
                    var r = e.parent.model.getID(),
                        s = e.parent.model;
                    t = this.origGeometries["segment" + r],
                        n.createNodes = !0,
                        t && this.model.actionManager.add(new u.default(s, t.clone(), e.parent.geometry, n))
                }
            } else {
                for (var a = {}, o = e.parent.model, d = 0; d < o.attributes.segIDs.length; d++) {
                    var c = o.attributes.segIDs[d];
                    this.model.segments.getObjectById(c) && (a[c] = this.origGeometries["segment" + c].clone())
                }
                this._handleMoveNode(o, e, a, n)
            }
            for (var h = 0; h < this.origGeometries.length; h++)
                this.origGeometries[h].destroy();
            this.origGeometries = {}
        },
        _isSnappingFeature: function() {
            return null != this.snapControl.snappedFeature
        },
        _isSnappingNode: function() {
            return this._isSnappingFeature() && this._getSnappedFeature().type === l.NODE
        },
        _getSnappedFeature: function() {
            return this._isSnappingFeature() ? this.snapControl.snappedFeature.feature : null
        },
        _handleMoveNode: function(e, t, n, r) {
            var s = this._isSnappingNode(),
                a = new d.default(e, this.origGeometries["node" + e.getID()].clone(), t.parent.geometry, n, (0,
                    i.default)({}, r, {
                    dontSerialize: s
                })),
                o = [a];
            if (s) {
                var l = new c.default(e, this._getSnappedFeature());
                o.push(l),
                    this.model.actionManager.add(new g.default(o))
            } else
                this.model.actionManager.add(a)
        },
        onFeaturesMerge: function() {
            this.verifySelectionValidity()
        },
        verifySelectionValidity: function() {
            this.resetVertices()
        },
        CLASS_NAME: "Waze.Control.ModifyModelFeature"
    });
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(7)),
        r = c(n(53)),
        s = c(n(48)),
        a = c(n(1112)),
        o = c(n(409)),
        l = c(n(410)),
        u = c(n(1114)),
        d = c(n(1115));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = OpenLayers.Class(OpenLayers.Control, s.default, {
        geometryTypes: null,
        clickout: !0,
        toggle: !0,
        toggleKey: null,
        multiple: !1,
        multipleKey: null,
        standalone: !1,
        sketchLayer: null,
        segmentLayer: null,
        nodeLayer: null,
        draggingIntent: "drag",
        features: null,
        dragHandles: null,
        nodeDragHandles: null,
        virtualDragHandles: null,
        directionArrows: null,
        dragPointsPaddingVertices: null,
        selectionManager: null,
        featureHover: null,
        dragControl: null,
        snapControl: null,
        handlers: null,
        deleteCodes: null,
        verticesStyle: null,
        mode: null,
        modified: [],
        radiusHandle: null,
        dragHandle: null,
        initialize: function(e, t, n, i) {
            this.sketchLayer = e,
                this.segmentLayer = t,
                this.nodeLayer = n,
                this.dragHandles = {},
                this.nodeDragHandles = {},
                this.virtualDragHandles = {},
                this.directionArrows = {},
                this.dragPointsPaddingVertices = [],
                this.deleteCodes = [68],
                this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                OpenLayers.Control.prototype.initialize.apply(this, [i]),
                this.bridgeCreator = new d.default(this.features.map(function(e) {
                    return e.model
                }), i.map.getDrawingContext(), this.model),
                this.nodeCreator = new u.default(this.features.map(function(e) {
                    return e.model
                }), i.map.getDrawingContext(), this.model),
                this.deleteCodes instanceof Array || (this.deleteCodes = [this.deleteCodes]),
                W.accelerators.events.register("toggleMultipleSelection", this, this.toggleMultipleSelection);
            var r = this;
            this.featureHover = new a.default(this, this.selectionManager.selectionMediator.getLayer(), {
                over: function(e) {
                    var t = e.parent;
                    !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t) && (this.drawSegmentDraggingHandles(t),
                        this.sketchLayer.removeFeatures(this.directionArrows[t.model.getID()] || [], {
                            silent: !0
                        }))
                },
                out: function(e) {
                    var t = e.parent;
                    !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t) && (this.removeAllFeatures(this.virtualDragHandles),
                        this.removeAllFeatures(this.dragHandles),
                        this.sketchLayer.addFeatures(this.directionArrows[t.model.getID()] || [], {
                            silent: !0
                        }))
                },
                click: function(e) {
                    var t = e.parent;
                    if (!this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t))
                        return this.selectionManager.unselectFeature(t),
                            !1
                }
            });
            var s = {
                geometryTypes: ["OpenLayers.Geometry.Point"],
                snappingOptions: this.snappingOptions,
                onStart: function(e, t) {
                    r.dragStart.apply(r, [e, t])
                },
                onDrag: function(e, t) {
                    r.dragVertex.apply(r, [e, t])
                },
                onComplete: function(e) {
                    r.dragComplete.apply(r, [e])
                },
                featureCallbacks: {
                    over: function(e) {
                        e._sketch && r.dragControl.overFeature.apply(r.dragControl, [e])
                    },
                    click: function(e) {
                        r.clickOnDragPoint.apply(r, [e])
                    }
                },
                dragCallbacks: {}
            };
            this.dragControl = new OpenLayers.Control.DragFeature(this.sketchLayer, s),
                this.dragControl.handlers.feature.geometryTypeMatches = function(e) {
                    return OpenLayers.Handler.Feature.prototype.geometryTypeMatches.apply(this, arguments) && !e.uneditable
                };
            var l = {
                keydown: this.handleKeypress
            };
            this.handlers = {
                    keyboard: new OpenLayers.Handler.Keyboard(this, l)
                },
                this.snapControl = new o.default({
                    layer: this.sketchLayer,
                    targets: [{
                        layer: this.nodeLayer,
                        filter: {
                            evaluate: function(e) {
                                return !e.model.isConnectedToBigJunction()
                            }
                        }
                    }, {
                        layer: this.segmentLayer,
                        filter: {
                            evaluate: function(e) {
                                return !e.model.outOfScope && e.model.isGeometryEditable()
                            }
                        }
                    }]
                });
            var c = function(e) {
                this.dragControl.feature && this.dragControl.feature._nodeDragPoint && this.dragControl.feature.geometry.translate(e.point.x, e.point.y)
            };
            this.snapControl.events.on({
                unsnap: c,
                snap: c,
                scope: this
            })
        },
        destroy: function() {
            this.dragControl.destroy(),
                this.snapControl.destroy(),
                this.bridgeCreator.destroy(),
                this.nodeCreator.destroy(),
                this.featureHover.destroy(),
                this.map.events.un({
                    zoomend: this.resetVertices,
                    scope: this
                }),
                W.accelerators.events.unregister("toggleMultipleSelection", this, this.toggleMultipleSelection),
                OpenLayers.Control.prototype.destroy.apply(this, [])
        },
        activate: function() {
            return this.standalone || this.selectionManager.enable(),
                this.handlers.keyboard.activate() && this.featureHover.activate() && this.snapControl.activate() && OpenLayers.Control.prototype.activate.apply(this, arguments)
        },
        deactivate: function() {
            var e = !1;
            return OpenLayers.Control.prototype.deactivate.apply(this, arguments) && (this.removeAllFeatures(this.dragHandles),
                    this.removeAllFeatures(this.virtualDragHandles),
                    this.dragHandles = [],
                    this.dragControl.deactivate(),
                    this.handlers.keyboard.deactivate(),
                    this.featureHover.deactivate(),
                    this.snapControl.deactivate(),
                    e = !0),
                e
        },
        removeAllFeatures: function(e) {
            var t = this;
            (0,
                r.default)(e).forEach(function(e) {
                t.sketchLayer.removeFeatures(e, {
                    silent: !0
                })
            })
        },
        addAllFeatures: function(e) {
            var t = this;
            (0,
                r.default)(e).forEach(function(e) {
                t.sketchLayer.addFeatures(e, {
                    silent: !0
                })
            })
        },
        selectFeature: function() {
            this.features.forEach(function(e) {
                    this.drawSegmentDraggingHandles(e)
                }, this),
                this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                this.resetVertices(),
                this.dragControl.activate()
        },
        unselectFeature: function(e) {
            e || (e = this.features),
                e instanceof Array || (e = [e]),
                e.concat().forEach(function(e) {
                    e._highlightPlaceHolder && (e = e.parent),
                        this.features.includes(e) && (OpenLayers.Util.removeItem(this.features, e),
                            e.layer && (e.layer.events.triggerEvent("afterfeaturemodified", {
                                    feature: e,
                                    modified: OpenLayers.Util.indexOf(this.modified, e) >= 0
                                }),
                                e._sketch && (delete e._sketch,
                                    e.layer.drawFeature(e))),
                            OpenLayers.Util.removeItem(this.modified, e))
                }, this),
                0 === this.features.length && this.dragControl.deactivate(),
                this.resetVertices()
        },
        clickOnDragPoint: function(e) {},
        dragStart: function(e, t) {
            var n = this;
            this.onModificationStart(e),
                e.parents.forEach(function(e) {
                    n.sketchLayer.removeFeatures(n.directionArrows[e.model.getID()], {
                        silent: !0
                    })
                }),
                OpenLayers.Util.indexOf(this.features, e) < 0 && !e.virtual && e !== this.dragHandle && e !== this.radiusHandle && (null !== this.geometryTypes && -1 === OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) || (this.dragControl.overFeature.apply(this.dragControl, [e]),
                        this.dragControl.lastPixel = t,
                        this.dragControl.handlers.drag.started = !0,
                        this.dragControl.handlers.drag.start = t,
                        this.dragControl.handlers.drag.last = t),
                    e.parents.forEach(function(e) {
                        e._sketch = !0
                    }))
        },
        dragVertex: function(e, t) {
            if (this.modified = !0,
                e.parent && "OpenLayers.Geometry.Point" === e.parent.geometry.CLASS_NAME)
                this.sketchLayer.events.triggerEvent("vertexmodified", {
                    vertex: e.geometry,
                    feature: e,
                    pixel: t
                });
            else if (e._index) {
                var n = e.parent.model.getID(),
                    r = e.parentGeom;
                r || (r = e.parent.geometry),
                    r.addComponent(e.geometry, e._index),
                    delete e._index,
                    OpenLayers.Util.removeItem(this.virtualDragHandles[n], e),
                    this.dragHandles[n].push(e)
            } else
                e === this.dragHandle ? (this.removeAllFeatures(this.dragHandles),
                    this.dragHandles = {},
                    this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                            silent: !0
                        }),
                        this.radiusHandle = null)) : e !== this.radiusHandle && this.sketchLayer.events.triggerEvent("vertexmodified", {
                    vertex: e.geometry,
                    feature: e.parent,
                    pixel: t
                });
            (0,
                i.default)(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                    this.virtualDragHandles = []),
                e.parents.forEach(function(e) {
                    e.layer && e.layer.drawFeature(e, this.draggingIntent)
                }, this),
                this.sketchLayer.drawFeature(e)
        },
        dragComplete: function(e) {
            this.onModificationComplete(e),
                this.sketchLayer.events.triggerEvent("featuremodified", {
                    feature: e
                });
            for (var t = 0, n = e.parents.length; t < n; t++) {
                var i = e.parents[t];
                delete i._sketch,
                    i.layer && (this.selectionManager.recalculateStyle(e.parents[t]),
                        i.layer.events.triggerEvent("featuremodified", {
                            feature: e.parents[t]
                        }))
            }
            this.resetVertices(),
                e.parent && (this.sketchLayer.removeFeatures(this.directionArrows[e.parent.model.getID()], {
                        silent: !0
                    }),
                    this.drawSegmentDraggingHandles(e.parent))
        },
        drawSegmentDraggingHandles: function(e) {
            e && (this.sketchLayer.addFeatures(this.virtualDragHandles[e.model.getID()] || []),
                this.sketchLayer.addFeatures(this.dragHandles[e.model.getID()] || []))
        },
        isSelected: function(e) {
            return e.layer && OpenLayers.Util.indexOf(e.layer.selectedFeatures, e) >= 0
        },
        resetVertices: function() {
            this.dragControl.feature && this.dragControl.outFeature(this.dragControl.feature),
                (0,
                    i.default)(this.dragHandles).length > 0 && (this.removeAllFeatures(this.dragHandles),
                    this.dragHandles = {}),
                (0,
                    i.default)(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                    this.virtualDragHandles = {}),
                (0,
                    i.default)(this.nodeDragHandles).length > 0 && (this.removeAllFeatures(this.nodeDragHandles),
                    this.nodeDragHandles = {}),
                (0,
                    i.default)(this.directionArrows).length > 0 && (this.removeAllFeatures(this.directionArrows),
                    this.directionArrows = {}),
                this.dragPointsPaddingVertices.length > 0 && (this.sketchLayer.removeFeatures(this.dragPointsPaddingVertices, {
                        silent: !0
                    }),
                    this.dragPointsPaddingVertices = []),
                this.dragHandle && (this.sketchLayer.destroyFeatures([this.dragHandle, this.dragBoundry], {
                        silent: !0
                    }),
                    this.dragHandle = null,
                    this.dragBoundry = null),
                this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                        silent: !0
                    }),
                    this.radiusHandle = null),
                this.features.length > 0 && (this.mode & OpenLayers.Control.ModifyFeature.DRAG && this.collectDragHandle(),
                    this.mode & (OpenLayers.Control.ModifyFeature.ROTATE | OpenLayers.Control.ModifyFeature.RESIZE) && this.collectRadiusHandle(),
                    this.mode & OpenLayers.Control.ModifyFeature.RESHAPE && (this.mode & OpenLayers.Control.ModifyFeature.RESIZE || this.collectVertices())),
                this.bridgeCreator.drawBridgeMarker(),
                this.nodeCreator.drawNodeMarker()
        },
        toggleMultipleSelection: function() {
            this.selectionManager.toggleMultipleSelection()
        },
        handleKeypress: function(e) {
            var t = e.keyCode;
            if (this.features.length > 0 && -1 !== OpenLayers.Util.indexOf(this.deleteCodes, t)) {
                var n = this.dragControl.feature;
                n && n._dragPoint && !this.dragControl.handlers.drag.dragging && n.parent && (this.onModificationStart(n),
                    n.parentGeom ? n.parentGeom.removeComponent(n.geometry) : n.parent.geometry.removeComponent(n.geometry),
                    n.parent.layer.drawFeature(n.parent, this.selectionManager.selectionMediator._selectRenderIntent),
                    this.onModificationComplete(n),
                    this.sketchLayer.events.triggerEvent("featuremodified", {
                        feature: n
                    }))
            }
        },
        createGeometryCollection: function() {
            for (var e = [], t = 0, n = this.features.length; t < n; t++)
                e.push(this.features[t].geometry);
            return new OpenLayers.Geometry.Collection(e)
        },
        collectVertices: function() {
            this.dragHandles = {},
                this.virtualDragHandles = {},
                this.nodeDragHandles = {},
                this.directionArrows = {},
                this.dragPointsPaddingVertices = [],
                this.collectVerticesFromFeatures(this.features, this.dragHandles, this.virtualDragHandles, this.nodeDragHandles),
                this.sketchLayer.addFeatures(this.dragPointsPaddingVertices, {
                    silent: !0
                }),
                this.addAllFeatures(this.directionArrows),
                this.addAllFeatures(this.nodeDragHandles)
        },
        collectComponentVertices: function(e, t, n) {
            var i = void 0,
                r = void 0,
                s = void 0,
                a = void 0,
                o = e.geometry;
            if ("OpenLayers.Geometry.Point" === o.CLASS_NAME)
                (r = new l.default([o], null, this.verticesStyle))._sketch = !0,
                r.parent = e,
                t.push(r);
            else {
                var u = o.components.length;
                for ("OpenLayers.Geometry.LinearRing" === o.CLASS_NAME && (u -= 1),
                    i = 0; i < u; ++i)
                    "OpenLayers.Geometry.Point" === (s = o.components[i]).CLASS_NAME ? ((r = new OL.Feature.Vector(s, null, this.verticesStyle))._sketch = !0,
                        r.renderIntent = "sketch",
                        r.parent = e,
                        t.push(r)) : this.collectComponentVertices(r, t, n);
                if ("OpenLayers.Geometry.MultiPoint" !== o.CLASS_NAME)
                    for (i = 0,
                        a = o.components.length; i < a - 1; ++i) {
                        var d = o.components[i],
                            c = o.components[i + 1];
                        if ("OpenLayers.Geometry.Point" === d.CLASS_NAME && "OpenLayers.Geometry.Point" === c.CLASS_NAME) {
                            var h = (d.x + c.x) / 2,
                                f = (d.y + c.y) / 2,
                                p = new OL.Feature.Vector(new OpenLayers.Geometry.Point(h, f));
                            p.parent = e,
                                p._index = i + 1,
                                p._sketch = !0,
                                p._middleDragPoint = !0,
                                p.virtual = !0,
                                n.push(p)
                        }
                    }
            }
        },
        collectVerticesFromFeatures: function(e, t, n) {
            for (var i = 0, r = e.length; i < r; i++)
                this.collectComponentVertices(e[i], t, n)
        },
        setMap: function(e) {
            this.dragControl.setMap(e),
                this.featureHover.setMap(e),
                this.snapControl.setMap(e),
                e.events.on({
                    zoomend: this.resetVertices,
                    scope: this
                }),
                OpenLayers.Control.prototype.setMap.apply(this, arguments)
        },
        onModificationStart: function(e) {},
        onModificationComplete: function(e) {},
        CLASS_NAME: "Waze.Control.ModifyFeature"
    });
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = OpenLayers.Class(OpenLayers.Handler, {
        EVENTMAP: {
            mousemove: { in: "over",
                out: "out"
            },
            click: { in: "click"
            },
            dblclick: { in: "dblclick",
                out: null
            }
        },
        feature: null,
        lastFeature: null,
        geometryTypes: null,
        initialize: function(e, t, n, i) {
            OpenLayers.Handler.prototype.initialize.apply(this, [e, n, i]),
                this.layer = t
        },
        mousemove: function(e) {
            return !this.callbacks.over && !this.callbacks.out || (this.handle(e),
                !0)
        },
        click: function(e) {
            return !this.handle(e) || !this.stopClick
        },
        geometryTypeMatches: function(e) {
            return null === this.geometryTypes || OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) > -1
        },
        handle: function(e) {
            this.feature && !this.feature.layer && (this.feature = null);
            var t = e.type,
                n = !1,
                i = Boolean(this.feature);
            if (this.feature = this.layer.getFeatureFromEvent(e),
                this.feature && !this.feature.layer && (this.feature = null),
                this.lastFeature && !this.lastFeature.layer && (this.lastFeature = null),
                this.feature) {
                var r = this.feature !== this.lastFeature,
                    s = r && this.feature._virtualParent === this.lastFeature,
                    a = "click" === t || "dblclick" === t || "touchstart" === t;
                this.geometryTypeMatches(this.feature) && this.feature.layer && !this.feature.layer.featuresNonSelectable ? (i && r && !s ? (this.lastFeature && this.triggerCallback(t, "out", [this.lastFeature]),
                        this.triggerCallback(t, "in", [this.feature])) : i && !a || this.triggerCallback(t, "in", [this.feature]),
                    this.lastFeature = this.feature,
                    n = !0) : (this.lastFeature && i && r && this.triggerCallback(t, "out", [this.lastFeature]),
                    this.feature = null)
            } else
                this.lastFeature && i && this.triggerCallback(t, "out", [this.lastFeature]);
            return n
        },
        triggerCallback: function(e, t, n) {
            var i = this.EVENTMAP[e][t];
            i && this.callback(i, n)
        },
        activate: function() {
            var e = !1;
            return OpenLayers.Handler.prototype.activate.apply(this, arguments) && (this.moveLayerToTop(),
                    this.map.events.on({
                        removelayer: this.handleMapEvents,
                        changelayer: this.handleMapEvents,
                        scope: this
                    }),
                    e = !0),
                e
        },
        deactivate: function() {
            var e = !1;
            return OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.moveLayerBack(),
                    this.feature = null,
                    this.lastFeature = null,
                    this.down = null,
                    this.up = null,
                    this.map.events.un({
                        removelayer: this.handleMapEvents,
                        changelayer: this.handleMapEvents,
                        scope: this
                    }),
                    e = !0),
                e
        },
        handleMapEvents: function(e) {
            e.property && "order" !== e.property || this.moveLayerToTop()
        },
        moveLayerToTop: function() {
            var e = Math.max(this.map.Z_INDEX_BASE.Feature - 1, this.layer.getZIndex()) + 1;
            this.layer.setZIndex(e)
        },
        moveLayerBack: function() {
            var e = this.layer.getZIndex() - 1;
            e >= this.map.Z_INDEX_BASE.Feature ? this.layer.setZIndex(e) : this.map.setLayerZIndex(this.layer, this.map.getLayerIndex(this.layer))
        },
        CLASS_NAME: "Waze.Handler.Feature"
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = OpenLayers.Class(OpenLayers.Geometry.Point, {
        points: null,
        initialize: function(e) {
            OpenLayers.Geometry.Point.prototype.initialize.apply(this, [e[0].x, e[0].y]),
                this.points = e
        },
        clone: function() {
            return new i(this.points)
        },
        calculateBounds: function() {
            OpenLayers.Geometry.Point.prototype.calculateBounds.apply(this);
            for (var e = 0; e < this.points.length; e++)
                this.points[e].calculateBounds()
        },
        move: function(e, t) {
            OpenLayers.Geometry.Point.prototype.move.apply(this, arguments);
            for (var n = 0; n < this.points.length; n++)
                this.points[n].move(e, t)
        },
        translate: function(e, t) {
            this.x = e,
                this.y = t,
                this.clearBounds(),
                this.points.forEach(function(n) {
                    n.x = e,
                        n.y = t,
                        n.clearBounds()
                })
        },
        rotate: function(e, t) {
            OpenLayers.Geometry.Point.prototype.rotate.apply(this, arguments);
            for (var n = 0; n < this.points.length; n++)
                this.points[n].rotate(e, t)
        },
        resize: function(e, t, n) {
            OpenLayers.Geometry.Point.prototype.resize.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].resize(e, t, n)
        },
        transform: function(e, t) {
            OpenLayers.Geometry.Point.prototype.transform.apply(this, arguments);
            for (var n = 0; n < this.points.length; n++)
                this.points[n].transform(e, t)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(0)),
        r = l(n(1)),
        s = l(n(394)),
        a = l(n(31)),
        o = n(119);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this._segments = t,
                this._drawingContext = n,
                this._dataModel = r,
                this._splits = this._generateSplits(this._segments)
        }
        return (0,
                r.default)(e, [{
                key: "destroy",
                value: function() {
                    this._drawingContext.destroy()
                }
            }, {
                key: "_onMarkerClicked",
                value: function() {
                    this._dataModel.actionManager.add(new s.default(this._segments, this._splits))
                }
            }, {
                key: "_generateSplits",
                value: function(e) {
                    if (2 !== e.length)
                        return null;
                    var t = e[0],
                        n = e[1];
                    return t.geometry.bounds && n.geometry.bounds ? t.attributes.level !== n.attributes.level ? null : t.geometry.bounds.intersectsBounds(n.geometry.bounds) ? t.geometry.split(n.geometry, {
                        edge: !0,
                        mutual: !0
                    }) : null : null
                }
            }, {
                key: "drawNodeMarker",
                value: function() {
                    if ((this._drawingContext.clear(),
                            null !== this._splits && 2 === this._splits[0].length && 2 === this._splits[1].length) && this._segments.every(function(e) {
                            return e.isAllowed(o.Segments.EDIT_GEOMETRY)
                        })) {
                        var e = _.last(_.last(this._splits)).components[0],
                            t = new OL.Marker(new OL.LonLat(e.x, e.y), new a.default("add-junction"));
                        t.events.register("click", this, this._onMarkerClicked),
                            this._drawingContext.addMarkers([t])
                    }
                }
            }]),
            e
    }();
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(0)),
        r = l(n(1)),
        s = l(n(204)),
        a = l(n(31)),
        o = n(119);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this._segments = t,
                this._node = this._findConnectingNode(this._segments),
                this._drawingContext = n,
                this._dataModel = r
        }
        return (0,
                r.default)(e, [{
                key: "destroy",
                value: function() {
                    this._drawingContext.destroy()
                }
            }, {
                key: "_onMarkerClicked",
                value: function() {
                    this._dataModel.actionManager.add(new s.default(this._segments, this._node))
                }
            }, {
                key: "_findConnectingNode",
                value: function(e) {
                    if (2 !== e.length)
                        return null;
                    var t = e[0].getFromNode();
                    return t ? (e[1].isConnectedToNode(t) || (t = e[0].getToNode(),
                            e[1].isConnectedToNode(t) || (t = null)),
                        t) : null
                }
            }, {
                key: "drawBridgeMarker",
                value: function() {
                    if ((this._drawingContext.clear(),
                            null !== this._node && this._node.areSegmentsBridgable(this._segments)) && this._segments.every(function(e) {
                            return e.isAllowed(o.Segments.EDIT_GEOMETRY)
                        })) {
                        var e = new OL.Marker(new OL.LonLat(this._node.geometry.x, this._node.geometry.y), new a.default("add-bridge"));
                        e.events.register("click", this, this._onMarkerClicked),
                            this._drawingContext.addMarkers([e])
                    }
                }
            }]),
            e
    }();
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = _(n(9)),
        r = _(n(2)),
        s = _(n(0)),
        a = _(n(1)),
        o = _(n(3)),
        l = _(n(8)),
        u = _(n(4)),
        d = _(n(11)),
        c = _(n(396)),
        h = _(n(92)),
        f = _(n(108)),
        p = _(n(73)),
        g = n(14),
        v = _(n(395)),
        m = _(n(20));

    function _(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var y = function(e) {
        function t(e, n, i) {
            (0,
                s.default)(this, t);
            var a = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, i));
            return a.node = e,
                a.mergeNode = n,
                a
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "considerMerging",
                value: function() {
                    return !(!this.mergeNode || !this.mergeNode.geometry.equals(this.node.geometry)) && (this.node.isVirtual() && this.doSubAction(new v.default(this.node)),
                        this.mergeNode.isVirtual() && this.doSubAction(new v.default(this.mergeNode)),
                        this.node.attributes.segIDs.every(function(e) {
                            var t = this.model.segments.getObjectById(e);
                            return !this.mergeNode.isConnectedToSegment(t) || t.isPoint()
                        }, this))
                }
            }, {
                key: "moveSegments",
                value: function() {
                    this.node.attributes.segIDs.concat().forEach(function(e) {
                        var t = this.model.segments.getObjectById(e);
                        t.isPoint() ? this.doSubAction(new h.default(t, {
                            dontSerialize: !0
                        })) : (this.doSubAction(new f.default(t, this.node, {
                                deleteNode: !1,
                                dontSerialize: !0,
                                keepTurns: !0
                            })),
                            this.doSubAction(new p.default(this.mergeNode, t, {
                                dontSerialize: !0
                            })))
                    }, this)
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.mergeNode]
                }
            }, {
                key: "doAction",
                value: function() {
                    if (!this.considerMerging())
                        return !1;
                    this.node.getID(),
                        this.mergeNode.getID(),
                        this.moveSegments(),
                        this.doSubAction(new c.default(this.node))
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = {
                        sourceNodeID: this.node.getID(),
                        sourceNodeVersion: this.node.attributes.version,
                        destNodeID: this.mergeNode.getID(),
                        destNodeVersion: this.node.attributes.version
                    };
                    return {
                        _objectType: g.MERGED_NODE,
                        action: m.default.TYPE.ADD,
                        attributes: e
                    }
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.MergeNode")
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.node.getUniqueID(), this.mergeNode.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }]),
            t
    }(d.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return this.subActions[0].getFocusFeatures()
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.MergeNode")
                }
            }]),
            t
    }(l(n(74)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(2)),
        r = f(n(6)),
        s = f(n(0)),
        a = f(n(1)),
        o = f(n(3)),
        l = f(n(8)),
        u = f(n(4)),
        d = f(n(209)),
        c = f(n(22)),
        h = f(n(13));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t),
            n = (0,
                r.default)({}, {
                mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.ROTATE
            }, n);
            var a = (0,
                o.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e, n));
            return a.isDragging = !1,
                a.originalAngle = a.feature.model.attributes.azymuth,
                a
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "destroy",
                value: function() {
                    this._removeDragBoundary(),
                        this._removeRadiusHandle(),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "destroy", this).apply(this, arguments)
                }
            }, {
                key: "resetVertices",
                value: function() {
                    this.isDragging && (this.isDragging = !1),
                        this._removeDragBoundary(),
                        this._removeRadiusHandle(),
                        this.feature && (this._cameraDraggable() && this.collectDragHandle(),
                            this.feature.model.isGeometryEditable() && this._collectRadiusHandle())
                }
            }, {
                key: "_removeDragBoundary",
                value: function() {
                    this.dragBoundary && (this.layer.destroyFeatures([this.dragBoundary], {
                            silent: !0
                        }),
                        this.dragBoundary = null)
                }
            }, {
                key: "_removeRadiusHandle",
                value: function() {
                    this.radiusHandle && (this.layer.destroyFeatures([this.radiusHandle], {
                            silent: !0
                        }),
                        this.radiusHandle = null)
                }
            }, {
                key: "_cameraDraggable",
                value: function() {
                    return this.feature.model.isGeometryEditable() && this.map.getZoom() >= W.Config.cameras.minDragZoom
                }
            }, {
                key: "collectDragHandle",
                value: function() {
                    var e = this.feature.geometry,
                        t = this.map.getResolution(),
                        n = new OL.Geometry.Point(e.x, e.y);
                    this.feature.model.attributes.originalPosition || (this.feature.model.attributes.originalPosition = new OL.Geometry.Point(e.x, e.y));
                    var i = this.feature.model.attributes.originalPosition;
                    this._removeDragBoundary(),
                        this.dragBoundary = new OL.Feature.Vector(i.clone(), {}, {
                            pointRadius: 150 / t,
                            fillOpacity: .2,
                            pointerEvents: "none",
                            graphicZIndex: 0
                        });
                    var r = this;
                    return e.move = function(t, s) {
                            r.isDragging = !0,
                                r.onDragVertex(),
                                n.x = this.x + t,
                                n.y = this.y + s;
                            var a = n.x - i.x,
                                o = n.y - i.y,
                                l = Math.sqrt(Math.pow(a, 2) + Math.pow(o, 2));
                            return OL.Geometry.Point.prototype.move.apply(this, arguments),
                                l >= 150 ? (e.x = i.x + 150 * a / l,
                                    e.y = i.y + 150 * o / l,
                                    e.clearBounds()) : (e.x = n.x,
                                    e.y = n.y,
                                    e.clearBounds())
                        },
                        this.layer.addFeatures([this.dragBoundary], {
                            silent: !0
                        })
                }
            }, {
                key: "_collectRadiusHandle",
                value: function() {
                    var e = this.map,
                        t = this.feature,
                        n = t.geometry,
                        i = h.default.degToRad(t.model.attributes.azymuth - 90),
                        r = new OL.Geometry.Point(n.x, n.y),
                        s = new OL.Geometry.Point(n.x + 50 * e.getResolution() * Math.cos(i), n.y - 50 * e.getResolution() * Math.sin(i)),
                        a = new OL.Feature.Vector(s),
                        o = new OL.Geometry.Point(s.x, s.y);
                    s.move = function(n, s) {
                            o.x = this.x + n,
                                o.y = this.y + s;
                            var a = o.x - r.x,
                                l = o.y - r.y,
                                u = 50 * e.getResolution(),
                                d = Math.sqrt(Math.pow(a, 2) + Math.pow(l, 2));
                            OL.Geometry.Point.prototype.move.call(this, n, s),
                                d >= u ? (this.x = r.x + a * u / d,
                                    this.y = r.y + l * u / d) : (this.x = o.x,
                                    this.y = o.y),
                                i = Math.atan2(l, a),
                                t.model.attributes.azymuth = 450 - h.default.radToDeg(i),
                                t.layer.drawFeature(t)
                        },
                        a._sketch = !0,
                        a._cameraRotator = !0,
                        this._removeRadiusHandle(),
                        this.radiusHandle = a,
                        this.layer.addFeatures([this.radiusHandle], {
                            silent: !0
                        })
                }
            }, {
                key: "onDragVertex",
                value: function(e, t) {
                    return this.isDragging && this._removeRadiusHandle(),
                        this.layer.drawFeature(this.feature)
                }
            }, {
                key: "dragComplete",
                value: function(e) {
                    if (e === this.radiusHandle) {
                        var t = this.feature.model.attributes.azymuth;
                        this.feature.model.attributes.azymuth = this.originalAngle,
                            this.originalAngle = t,
                            this.model.actionManager.add(new c.default(this.feature.model, {
                                azymuth: t
                            }))
                    } else
                        this.onModification(this.feature);
                    return this.resetVertices()
                }
            }]),
            t
    }(d.default);
    (0,
        r.default)(p.prototype, {
        CLASS_NAME: "Waze.Control.GeometryEditing.Camera"
    }),
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            return (0,
                    r.default)(this, t),
                n.mode = OL.Control.ModifyFeature.RESHAPE | OL.Control.ModifyFeature.DRAG,
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, e, n))
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "handleKeypress",
                value: function(e) {
                    return this.deleteCodes.includes(e.keyCode) ? this.feature.model.isPoint() || this.feature.model.geometry.components[0].components.length > 4 ? (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "handleKeypress", this).call(this, e) : void 0 : (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "handleKeypress", this).call(this, e)
                }
            }]),
            t
    }(u(n(209)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(6)),
        r = u(n(7)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(413)),
        l = n(43);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function() {
        function e() {
            (0,
                s.default)(this, e),
            this.currentAction = null,
                this.active = !1;
            var t = this;
            this.$element = $("#keyboard-dialog"),
                this.events = new OpenLayers.Events(this),
                W.accelerators.events.register("showShortcutsDialog", this, function() {
                    this.show()
                }),
                $(window).bind("keydown.shortcut-editor", this.onKeyDown.bind(this)),
                $(window).bind("keyup.shortcut-editor", this.onKeyUp.bind(this)),
                this.$element.delegate(".shortcut-action", "click", function() {
                    t.onActionClicked(this.dataset.action)
                }),
                this.$element.on("hide.bs.modal", this.onDialogClose.bind(this)),
                this.$element.on("show.bs.modal", function() {
                    t.activate()
                })
        }
        return (0,
                a.default)(e, [{
                key: "activate",
                value: function() {
                    this.render(),
                        this.active = !0
                }
            }, {
                key: "show",
                value: function() {
                    this.activate(),
                        this.$element.modal("show")
                }
            }, {
                key: "onDialogClose",
                value: function() {
                    this.active = !1
                }
            }, {
                key: "render",
                value: function() {
                    this.$element.html((0,
                        l.getHTML)("templates/keyboard_shortcuts/modal", {
                        groups: W.accelerators.Groups
                    }))
                }
            }, {
                key: "renderList",
                value: function() {
                    this.$element.find(".modal-body").html((0,
                        l.getHTML)("templates/keyboard_shortcuts/list", {
                        groups: W.accelerators.Groups
                    }))
                }
            }, {
                key: "onActionClicked",
                value: function(e) {
                    var t = this.$element.find(".shortcut-action[data-action=" + e + "]");
                    t.hasClass("disabled") || (this.currentAction && this.currentAction.removeClass("selected"),
                        this.currentAction = t,
                        this.currentAction.addClass("selected"))
                }
            }, {
                key: "onKeyDown",
                value: function(e) {
                    var t = String.fromCharCode(e.which),
                        n = e.which;
                    if (this.active && this.currentAction)
                        return e.stopImmediatePropagation(),
                            (t.match(/^[a-zA-Z0-9]+/) || (0,
                                r.default)(W.accelerators.SpecialKeys).includes(n.toString())) && (W.accelerators.registerShortcut(new o.default.KeyStroke(e).toString(), this.currentAction.get(0).dataset.action, !0),
                                this.currentAction.removeClass("selected"),
                                W.accelerators.persist(),
                                this.currentAction = null,
                                this.renderList()),
                            !1
                }
            }, {
                key: "onKeyUp",
                value: function(e) {
                    this.active && this.currentAction && e.stopImmediatePropagation()
                }
            }, {
                key: "getModifiersString",
                value: function(e) {
                    var t = "";
                    return e.shiftKey && (t += "Shift+"),
                        e.ctrlKey && !e.metaKey && (t += "Control+"),
                        e.altKey && (t += "Alt+"),
                        e.metaKey && (t += "Command+"),
                        t
                }
            }, {
                key: "getShortcutCode",
                value: function(e, t) {
                    var n = "";
                    return e.shiftKey && (n += "S"),
                        (e.ctrlKey || e.metaKey) && (n += "C"),
                        e.altKey && (n += "A"),
                        n + "+" + t
                }
            }, {
                key: "destroy",
                value: function() {
                    this.events.destroy()
                }
            }]),
            e
    }();
    (0,
        i.default)(d.prototype, {
        CLASS_NAME: "Waze.View.KeyboardShortcutEditor"
    }),
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            return (0,
                    i.default)(this, e),
                this._wazeModel = t,
                this._marx = n,
                this._map = r,
                this.events = new OL.Events,
                this._active = !1,
                this
        }
        return (0,
                r.default)(e, [{
                key: "activate",
                value: function() {
                    if (!this._active)
                        return this._active = !0,
                            this._wazeModel.actionManager.events.on({
                                afteraction: this._onEditAreaChange,
                                afterundoaction: this._onEditAreaChange,
                                afterclearactions: this._onEditAreaChange,
                                scope: this
                            }),
                            this._map.events.on({
                                moveend: this._onViewAreaChange,
                                scope: this
                            })
                }
            }, {
                key: "deactivate",
                value: function() {
                    this._active && (this._wazeModel.actionManager.events.un({
                            afteraction: this._onEditAreaChange,
                            afterundoaction: this._onEditAreaChange,
                            afterclearactions: this._onEditAreaChange,
                            scope: this
                        }),
                        this._map.events.un({
                            moveend: this._onViewAreaChange,
                            scope: this
                        }),
                        this._active = !1)
                }
            }, {
                key: "_onEditAreaChange",
                value: function() {
                    return this.events.triggerEvent("change:editArea", {
                        editArea: this.getEditArea()
                    })
                }
            }, {
                key: "_onViewAreaChange",
                value: function() {
                    return this.events.triggerEvent("change:viewArea", {
                        viewArea: this.getViewArea()
                    })
                }
            }, {
                key: "getEditArea",
                value: function() {
                    var e = this._wazeModel.actionManager.getChangesBounds();
                    return this.convertToMarx(e)
                }
            }, {
                key: "getCenter",
                value: function() {
                    return this.convertToMarx(this._map.getCenter())
                }
            }, {
                key: "getViewArea",
                value: function() {
                    return this.convertToMarx(this._map.getExtent())
                }
            }, {
                key: "convertToMarx",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    return null != (e = this.parseGeometry(e)) && (e = e.transform(this._map.getProjectionObject(), this._marx.displayProjection)),
                        e
                }
            }, {
                key: "convertFromMarx",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    return null != (e = this.parseGeometry(e)) && (e = e.transform(this._marx.displayProjection, this._map.getProjectionObject())),
                        e
                }
            }, {
                key: "parseGeometry",
                value: function(e) {
                    return null != e && (e instanceof OL.LonLat || (e instanceof OL.Bounds ? 0 === e.getWidth() && 0 === e.getHeight() && (e = null) : null != e.lon && null != e.lat && (e = new OL.LonLat(e.lon, e.lat)))),
                        e
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = void 0,
        d = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "initialize",
                    value: function(e, t, n) {
                        this._wazeModel = e,
                            this._marx = t,
                            this._adapter = n,
                            this.users = new Backbone.Collection([], {
                                model: u
                            }),
                            this.throttleUserPanMessage = _.throttle(this.sendUserPanMessage, 3e3, {
                                leading: !1
                            }),
                            this.throttleUserEditMessage = _.throttle(this.sendUserEditMessage, 3e3, {
                                leading: !1
                            }),
                            this._connected = !1,
                            this._adapter.events.on({
                                "change:editArea": this._onEditAreaChange,
                                "change:viewArea": this._onViewAreaChange,
                                scope: this
                            }),
                            this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                            this._marx.on("reconnect", this._onMarxReconnect, this),
                            this._marx.on("disconnect", this._onMarxDisconnect, this)
                    }
                }, {
                    key: "_onMarxFirstConnect",
                    value: function() {
                        this._isUserAuthorized() && this._registerMarxEvents(),
                            this._activate()
                    }
                }, {
                    key: "_registerMarxEvents",
                    value: function() {
                        return this._marx.socket.on("viewport:userPan", this._onUserPan.bind(this)),
                            this._marx.socket.on("viewport:userEdit", this._onUserEdit.bind(this)),
                            this._marx.socket.on("viewport:userLeave", this._onUserLeave.bind(this)),
                            this._marx.socket.on("viewport:reset", this._onViewportReset.bind(this))
                    }
                }, {
                    key: "_onMarxReconnect",
                    value: function() {
                        this._activate()
                    }
                }, {
                    key: "_activate",
                    value: function() {
                        return this._connected || (this._connected = !0,
                                this._adapter.activate()),
                            this.sendUserPanMessage()
                    }
                }, {
                    key: "_onUserPan",
                    value: function(e) {
                        return this._mergeUser(e.user)
                    }
                }, {
                    key: "_onUserEdit",
                    value: function(e) {
                        return this._mergeUser(e.user)
                    }
                }, {
                    key: "_onUserLeave",
                    value: function(e) {
                        var t = this.findUserById(e.user.id);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_isUserAuthorized",
                    value: function() {
                        return !W.Config.chat.staffOnly || this._wazeModel.loginManager.user.isStaff
                    }
                }, {
                    key: "_onMarxDisconnect",
                    value: function() {
                        this._connected && (this._adapter.deactivate(),
                            this._connected = !1)
                    }
                }, {
                    key: "_onViewportReset",
                    value: function(e) {
                        return this.mergeUsers(e)
                    }
                }, {
                    key: "mergeUsers",
                    value: function(e) {
                        var t = this;
                        return this._removeUsersNotIn(e),
                            e.map(function(e) {
                                return t._mergeUser(e)
                            })
                    }
                }, {
                    key: "_mergeUser",
                    value: function(e) {
                        e = $.extend({}, e),
                            this._transformCenterFromMarx(e);
                        var t = this.findUserById(e.id);
                        return null != t ? t.set(e) : this.users.add(e)
                    }
                }, {
                    key: "_removeUsersNotIn",
                    value: function(e) {
                        var t = e.reduce(function(e, t) {
                                return e[t.id] = !0,
                                    e
                            }, {}),
                            n = this.users.filter(function(e) {
                                return !t[e.get("id")]
                            });
                        this.users.remove(n)
                    }
                }, {
                    key: "_transformCenterFromMarx",
                    value: function(e) {
                        if (null != e.center) {
                            var t = e.center;
                            t = new OL.LonLat(t.lon, t.lat),
                                e.center = this._adapter.convertFromMarx(t)
                        }
                    }
                }, {
                    key: "findUserById",
                    value: function(e) {
                        return this.users.findWhere({
                            id: e
                        })
                    }
                }, {
                    key: "_onEditAreaChange",
                    value: function(e) {
                        return this.throttleUserEditMessage()
                    }
                }, {
                    key: "sendUserEditMessage",
                    value: function() {
                        var e = {
                            editArea: this._adapter.getEditArea()
                        };
                        return this._marx.socket.emit("user:edit", e)
                    }
                }, {
                    key: "_onViewAreaChange",
                    value: function(e) {
                        return this.throttleUserPanMessage()
                    }
                }, {
                    key: "sendUserPanMessage",
                    value: function() {
                        if (null != this._marx.socket) {
                            var e = {
                                center: this._adapter.getCenter(),
                                viewArea: this._adapter.getViewArea()
                            };
                            return this._marx.socket.emit("user:pan", e)
                        }
                    }
                }]),
                t
        }(Backbone.Model);
    u = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "initialize",
                    value: function() {
                        this.on("change:center", this._onCenterChanged, this)
                    }
                }, {
                    key: "_onCenterChanged",
                    value: function(e) {
                        if (null != e.newValue && null != e.oldValue && e.newValue.lon !== e.oldValue.lon && e.newValue.lat !== e.oldValue.lat)
                            return this.trigger("moved")
                    }
                }]),
                t
        }(Backbone.Model),
        t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(0)),
        r = a(n(1)),
        s = a(n(1124));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this._map = t.map,
                this._model = t.model,
                this._model.users.on("add", this._addUser, this),
                this._model.users.on("remove", this._onRemoveUser, this),
                this._layer = this._map.liveUsersLayer,
                this._markersByUserId = {}
        }
        return (0,
                r.default)(e, [{
                key: "_addUser",
                value: function(e) {
                    var t = new s.default(e, this._map, this._layer);
                    return this._markersByUserId[e.get("id")] = t,
                        this._layer.addMarker(t),
                        t.render()
                }
            }, {
                key: "_onRemoveUser",
                value: function(e) {
                    var t = e.get("id");
                    this._removeMarker(t)
                }
            }, {
                key: "_removeMarker",
                value: function(e) {
                    var t = this._markersByUserId[e];
                    t.destroy(),
                        this._layer.removeMarker(t),
                        delete this._markersByUserId[e]
                }
            }, {
                key: "centerUser",
                value: function(e) {
                    this._markersByUserId[e] && this._markersByUserId[e].center()
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(31),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OL.Class(OL.Marker, {
        initialize: function(e, t, n) {
            this.model = e,
                this.map = t,
                this.layer = n;
            var i = new s.default("live-user-marker", !0);
            OL.Marker.prototype.initialize.call(this, this.getLonLat(), i),
                this.icon.$div.addClass("rank" + this.model.attributes.rank),
                this.model.on("moved", this._onMoved, this)
        },
        render: function() {
            return this.icon.$div.tooltip({
                title: this.model.get("name")
            })
        },
        getLonLat: function() {
            return this.model.get("center")
        },
        _onMoved: function() {
            var e = this;
            return this.icon.$div.one("transitionend", function() {
                    return e.icon.$div.removeClass("moving")
                }),
                this.lonlat = this.getLonLat(),
                this.icon.$div.addClass("moving"),
                this.layer.drawMarker(this)
        },
        center: function() {
            return this.map.setCenter(this.getLonLat())
        },
        destroy: function() {
            return this.icon.$div.tooltip("destroy")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(127),
        r = p(n(1172)),
        s = p(n(1173)),
        a = p(n(1175)),
        o = p(n(1176)),
        l = p(n(1177)),
        u = p(n(1178)),
        d = p(n(1179)),
        c = p(n(1180)),
        h = n(43),
        f = p(n(1181));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = OpenLayers.Class(OL.Map, i.MapLayers, {
        DefaultPanInPixel: 20,
        navigationControl: null,
        mapState: null,
        navigationEnabled: !0,
        $el: null,
        $map: null,
        zoomMethod: null,
        initialize: function(e) {
            var t = this;
            e = e || {},
                $("#editor-container").html((0,
                    h.getHTML)("templates/map")),
                this.app = e.app,
                this.$el = $("#map"),
                this.$map = $("#WazeMap"),
                this.popupOverlay = $("#popup-overlay"),
                this.resize(),
                this.navigationControl = new OpenLayers.Control.Navigation({
                    dragPanOptions: {
                        enableKinetic: {
                            delay: 100,
                            deceleration: .005
                        }
                    }
                }),
                this.footerControl = new OpenLayers.Control({
                    displayClass: "WazeMapFooter"
                }),
                this.footerMessages = new OpenLayers.Control({
                    displayClass: "footer-messages"
                }),
                e.controls = [this.navigationControl, this.footerControl, this.footerMessages],
                e.projection = new OpenLayers.Projection(W.Config.map.projection.local),
                e.displayProjection = new OpenLayers.Projection(W.Config.map.projection.remote),
                e.theme = null,
                OpenLayers.Map.prototype.initialize.apply(this, ["WazeMap", e]),
                this.panelRegion = new d.default({
                    map: this
                }),
                $(this.viewPortDiv).on("mouseup", function(e) {
                    "INPUT" !== e.target.tagName && t.focus()
                }),
                $(window).on("resize", this.resize.bind(this)),
                this.initializeLayers({
                    regionCode: this.app.getAppRegionCode()
                })
        },
        initMapState: function(e, t, n) {
            this.mapState = new s.default(this, e, t, n),
                new l.default({
                    app: this.app,
                    regionCode: this.app.getAppRegionCode(),
                    mapState: this.mapState,
                    el: $("<div/>").addClass("WazeControlPermalink").appendTo(this.footerControl.div)
                }).render(),
                this._addFooterControls(),
                this._addButtonsOverlayView()
        },
        registerAccelerators: function(e) {
            e.events.on({
                panUp: this.panUp,
                panRight: this.panRight,
                panDown: this.panDown,
                panLeft: this.panLeft,
                zoomIn: this.zoomIn,
                zoomOut: this.zoomOut,
                scope: this
            })
        },
        _addFooterControls: function() {
            this.addFooterControl({
                    displayClass: "olControlAttribution",
                    control: new OpenLayers.Control.Attribution
                }),
                new u.default({
                    map: this,
                    el: $("<div/>").addClass("WazeControlMousePosition").appendTo(this.footerControl.div)
                }).render(),
                this.addFooterControl({
                    displayClass: "olControlScaleLine",
                    control: new OpenLayers.Control.ScaleLine
                }),
                this.addControl(new r.default({
                    div: $("<div/>").appendTo(this.footerMessages.div)
                })),
                new a.default({
                    dataModel: W.model,
                    mapState: this.mapState,
                    regionCode: this.app.getAppRegionCode(),
                    el: $("<div/>").appendTo(this.footerMessages.div)
                })
        },
        _addButtonsOverlayView: function() {
            this.buttonsOverlay = new f.default({
                    el: $("#overlay-buttons"),
                    map: W.map,
                    streetViewController: W.streetViewController
                }),
                this.buttonsOverlay.show(),
                this.buttonsOverlay.render()
        },
        addFooterControl: function(e) {
            var t = $("<div>").addClass(e.displayClass);
            t.appendTo(this.footerControl.div),
                e.control.div = t[0],
                this.addControl(e.control)
        },
        focus: function() {
            $(this.div).focus()
        },
        panLeft: function() {
            this.navigationEnabled && this.pan(-this.DefaultPanInPixel, 0, {
                animate: !1
            })
        },
        panRight: function() {
            this.navigationEnabled && this.pan(this.DefaultPanInPixel, 0, {
                animate: !1
            })
        },
        panUp: function() {
            this.navigationEnabled && this.pan(0, -this.DefaultPanInPixel, {
                animate: !1
            })
        },
        panDown: function() {
            this.navigationEnabled && this.pan(0, this.DefaultPanInPixel, {
                animate: !1
            })
        },
        zoomIn: function() {
            this.navigationEnabled && OL.Map.prototype.zoomIn.apply(this, arguments)
        },
        zoomOut: function() {
            this.navigationEnabled && OL.Map.prototype.zoomOut.apply(this, arguments)
        },
        showOverlay: function() {
            $("#map-overlay").show()
        },
        hideOverlay: function() {
            $("#map-overlay").hide()
        },
        setEditingMediator: function(e) {
            W.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                W.editingMediator.on("change:navigation", this._onNavigationChanged, this),
                this._onNavigationChanged()
        },
        setSnapshotManager: function(e) {
            this.snapshotManager = e,
                this.snapshotManager.on("change:state", this._refreshRoadLayers, this),
                this._createSnapshotMessage()
        },
        _createSnapshotMessage: function() {
            var e = $(this.div).find(".snapshot-message").css({
                zIndex: this.Z_INDEX_BASE.Control
            });
            new o.default({
                el: e,
                snapshotManager: this.snapshotManager
            }).render()
        },
        _onEditingEnabledChanged: function() {
            var e = W.editingMediator.get("editingEnabled");
            this.$el.toggleClass("editing-disabled", !e),
                e || this.panelRegion.empty()
        },
        _onNavigationChanged: function() {
            W.editingMediator.get("navigation") ? (this.buttonsOverlay.show(),
                this.popupOverlay.hide(),
                this.navigationEnabled = !0) : (this.buttonsOverlay.hide(),
                this.popupOverlay.show(),
                this.navigationEnabled = !1)
        },
        toggleSVMode: function(e) {
            this.$el.toggleClass("street-view-mode", e),
                this.updateSize()
        },
        resize: function() {
            var e = parseInt(this.$map.css("max-height"), 10),
                t = parseInt(this.$map.css("min-height"), 10),
                n = $(window).height() - this.$map.offset().top;
            n > e ? n = e : n < t && (n = t),
                this.$el.find(".view-area").css("height", n),
                null !== this.div && (this.updateSize(),
                    this.events.triggerEvent("resize", {
                        height: n
                    }))
        },
        getHeight: function() {
            return this.$map.height()
        },
        moveLayerToTop: function(e) {
            e.setZIndex(this.Z_INDEX_BASE.TopLayer)
        },
        setLayerZIndex: function(e, t) {
            var n = Boolean(e.markers);
            e.setZIndex(this.Z_INDEX_BASE[e.isBaseLayer ? "BaseLayer" : n ? "MarkerOverlay" : "Overlay"] + 5 * t)
        },
        getLayerVisibility: function(e) {
            var t = this.getLayersBy("uniqueName", e)[0];
            return t ? t.getVisibility() : null
        },
        setLayerVisibility: function(e, t) {
            var n = this.getLayersBy("uniqueName", e)[0];
            n && n.setVisibility(t)
        },
        getPannable: function() {
            var e = this;
            return {
                panTo: function(t, n, i) {
                    return e.moveTo(t, n, i)
                },
                getZoom: function() {
                    return e.getZoom()
                }
            }
        },
        getDrawingContext: function(e) {
            return new c.default(this, e)
        },
        toggleLayerSwitcherPinned: function(e) {
            this.$el.toggleClass("layer-switcher-pinned", e)
        },
        CLASS_NAME: "Waze.Map"
    });
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        fontFamily: "WazeFont",
        unicodeMap: {
            ".waze-icon-area": 61696,
            ".waze-icon-arrow-down": 61697,
            ".waze-icon-arrow-left": 61698,
            ".waze-icon-arrow-right": 61699,
            ".waze-icon-arrow-up": 61700,
            ".waze-icon-attach": 61701,
            ".waze-icon-bubble": 61702,
            ".waze-icon-c-alert": 61703,
            ".waze-icon-c-arrow-down": 61704,
            ".waze-icon-c-arrow-left": 61705,
            ".waze-icon-c-arrow-right": 61706,
            ".waze-icon-c-arrow-up": 61707,
            ".waze-icon-calendar": 61708,
            ".waze-icon-check": 61709,
            ".waze-icon-clock": 61710,
            ".waze-icon-close": 61711,
            ".waze-icon-closed-issue": 61712,
            ".waze-icon-closure": 61713,
            ".waze-icon-crosshair": 61714,
            ".waze-icon-detach": 61715,
            ".waze-icon-edit": 61716,
            ".waze-icon-envelope": 61717,
            ".waze-icon-event": 61718,
            ".waze-icon-full-arrow-down": 61719,
            ".waze-icon-full-arrow-left": 61720,
            ".waze-icon-full-arrow-right": 61721,
            ".waze-icon-full-arrow-two-sided": 61722,
            ".waze-icon-full-arrow-up": 61723,
            ".waze-icon-hive": 61724,
            ".waze-icon-house": 61725,
            ".waze-icon-km": 61726,
            ".waze-icon-layers": 61727,
            ".waze-icon-map": 61728,
            ".waze-icon-pin": 61729,
            ".waze-icon-place": 61730,
            ".waze-icon-place-car": 61731,
            ".waze-icon-place-culture": 61732,
            ".waze-icon-place-food-drink": 61733,
            ".waze-icon-place-lodging": 61734,
            ".waze-icon-place-natural": 61735,
            ".waze-icon-place-other": 61736,
            ".waze-icon-place-outdoors": 61737,
            ".waze-icon-place-professional": 61738,
            ".waze-icon-place-shopping": 61739,
            ".waze-icon-place-transportation": 61740,
            ".waze-icon-plus": 61741,
            ".waze-icon-plus_neg": 61742,
            ".waze-icon-redo": 61743,
            ".waze-icon-reload": 61744,
            ".waze-icon-road": 61745,
            ".waze-icon-route": 61746,
            ".waze-icon-save": 61747,
            ".waze-icon-star": 61748,
            ".waze-icon-trash": 61749,
            ".waze-icon-undo": 61750,
            ".waze-icon-view": 61751,
            ".waze-icon-visible": 61752
        },
        toUnicode: function(e) {
            var t = this.unicodeMap["." + e];
            return String.fromCharCode(t)
        }
    };
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: [W.defaultRule({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillOpacity: 0
                }), W.rule("isUnchanged", !1, {
                    fillColor: "#ff8383",
                    fillOpacity: 1
                })]
            }),
            highlight: new OpenLayers.Style(null, {
                rules: [W.defaultRule({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillColor: "#00ece3",
                    fillOpacity: 1
                }), W.rule("isUnchanged", !1, {
                    fillOpacity: 1,
                    fillColor: "#eb7171"
                })]
            })
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = [W.rule("_cameraRotator", !0, {
            pointRadius: 7,
            strokeOpacity: 1,
            strokeColor: "#aaaaaa",
            fillColor: "#ff3300",
            fillOpacity: 1,
            strokeWidth: 2,
            externalGraphic: null,
            graphicZIndex: 1
        }), W.rule("type", "camera", {})],
        r = function(e) {
            return new OpenLayers.Style(e, {
                rules: i,
                context: {
                    getAzymuth: function(e) {
                        if (e.model)
                            return e.model.attributes.azymuth
                    },
                    getImageURL: function(e) {
                        var t = e.model;
                        if (t)
                            return n(1129)("./camera" + t.attributes.type + ".png")
                    }
                }
            })
        };
    t.default = new OpenLayers.StyleMap({
            default: r({
                externalGraphic: "${getImageURL}",
                pointRadius: 18,
                rotation: "${getAzymuth}",
                graphicZIndex: 1
            }),
            highlight: r({
                pointRadius: 22
            }),
            select: r({
                pointRadius: 22
            }),
            highlightselected: r({
                pointRadius: 22
            }),
            drag: r({
                pointRadius: 22
            })
        }),
        e.exports = t.default
}, function(e, t, n) {
    var i = {
        "./camera2.png": 1130,
        "./camera3.png": 1131,
        "./camera4.png": 1132
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 1129
}, function(e, t, n) {
    e.exports = n.p + "img/camera2afd04923e745ff85f9b132ce1d08e73c.png"
}, function(e, t, n) {
    e.exports = n.p + "img/camera35aab8ac3d52b67ac2b4ef5f22667e317.png"
}, function(e, t, n) {
    e.exports = n.p + "img/camera419787cc5b17be6328baa0f706e30764c.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
            strokeColor: "#ffc62e",
            fillColor: "#ffc62e",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        r = function(e) {
            var t = W.defaultRule({
                Polygon: i
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        s = W.defaultRule({
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        a = W.defaultRule({
            Polygon: {
                fill: !1,
                strokeDashstyle: "dash",
                strokeColor: "#ff8383"
            }
        }),
        o = W.rule("isUnchanged", !1, {
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        l = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        });
    t.default = new OL.StyleMap({
            default: r([l, o]),
            highlight: r([W.defaultRule({
                Polygon: {
                    strokeColor: "#fed15a",
                    fillColor: "#fed15a"
                }
            }), l, o]),
            select: r([s]),
            highlightselected: r([s]),
            delete: r([a]),
            highlightdeleted: r([a])
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(7)),
        r = o(n(414)),
        s = o(n(1135)),
        a = o(n(1136));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = {
            dragPoint: {
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 6,
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 1
            },
            middleDragPoint: {
                strokeWidth: 2,
                fillOpacity: .6,
                strokeColor: "#00ece3",
                pointRadius: 4,
                fillColor: "white",
                graphicZIndex: 1
            },
            fromNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "A",
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 2
            },
            toNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "B",
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 2
            },
            regularNodeDragPoint: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "white",
                fillColor: "#00ece3",
                fillOpacity: 1,
                strokeWidth: 3,
                graphicZIndex: 2
            },
            virtualNodeDragPoint: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "white",
                fillColor: "#00ece3",
                fillOpacity: 1,
                strokeWidth: 3,
                strokeDashstyle: "3,5",
                graphicZIndex: 2
            },
            cameraRotator: {
                pointRadius: 7,
                strokeOpacity: 1,
                strokeColor: "#aaaaaa",
                fillColor: "#ff3300",
                fillOpacity: 1,
                strokeWidth: 2
            },
            highlightPlaceHolder: {
                strokeColor: "transparent",
                strokeOpacity: 0,
                strokeWidth: 30,
                graphicZIndex: 0
            },
            arrowOneWayStandard: {
                externalGraphic: r.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            },
            arrowOneWayRestricted: {
                externalGraphic: s.default,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            },
            arrowTwoWayRestricted: {
                externalGraphic: a.default,
                rotation: "${angle}",
                graphicWidth: 5,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            }
        },
        u = (0,
            i.default)(l).map(function(e) {
            return W.rule("_" + e, !0, l[e])
        });
    u.push(W.rule("uneditable", !0, {
            fillColor: "#cecece",
            strokeColor: "#aeaeae"
        })),
        t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: u
            }),
            highlight: new OpenLayers.Style(null, {
                rules: u
            })
        }),
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-restricted12d401d9920318fa515cfbd84b8bd91c.png"
}, function(e, t, n) {
    e.exports = n.p + "img/two-way-restrictedd655660f966eee861e57842c3b34c64f.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(155),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(s.default, {
        colorEmptyStreetSegments: !1,
        initialize: function() {
            s.default.prototype.initialize.apply(this, arguments),
                W.accelerators.events.register("colorEmptyStreets", this, this.colorEmptyStreetsToggled)
        },
        colorEmptyStreetsToggled: function() {
            this.colorEmptyStreetSegments = !this.colorEmptyStreetSegments,
                this.redraw()
        },
        CLASS_NAME: "Waze.Layer.SegmentLayer"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(6)),
        r = s(n(155));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OpenLayers.Class(r.default, {
        nodeDisplayMaxScale: 1e4,
        shouldDisplayFeature: function(e) {
            return !0
        },
        onNodesAdded: function(e) {
            this.onFeaturesAdded(e)
        },
        onNodesChanged: function(e) {
            this.onFeaturesChanged(e)
        },
        onNodesRemoved: function(e) {
            this.onFeaturesRemoved(e)
        },
        onDisplayChanged: function(e) {
            this.displayedNodes = e.scale <= this.nodeDisplayMaxScale
        },
        updateDisplayedFeatures: function(e) {
            r.default.prototype.updateDisplayedFeatures.apply(this, [(0,
                i.default)({}, e.nodes)])
        },
        CLASS_NAME: "Waze.Layer.NodeLayer"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(75)),
        r = a(n(212)),
        s = a(n(213));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = OpenLayers.Class(OpenLayers.Layer.Vector, {
        rendererOptions: {
            zIndexing: !0
        },
        renderers: [i.default],
        styleMap: r.default,
        initialize: function(e, t) {
            OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments),
                this.driveRenderer = new s.default(this),
                this.styleMap.styles.select = new OpenLayers.Style({
                    strokeColor: "black",
                    strokeWidth: 10,
                    pointerEvents: "none"
                }),
                this.styleMap.styles.highlight = new OpenLayers.Style({
                    strokeWidth: 10,
                    strokeOpacity: 1
                })
        },
        setMap: function(e) {
            OpenLayers.Layer.Vector.prototype.setMap.apply(this, arguments),
                this.map.events.on({
                    zoomend: this.onZoomEnd,
                    scope: this
                })
        },
        destroy: function() {
            OpenLayers.Layer.Vector.prototype.destroy.apply(this, arguments),
                this.map && this.map.events.un({
                    zoomend: this.onZoomEnd
                })
        },
        onZoomEnd: function() {
            this.redraw()
        },
        drawDrive: function() {
            this.clearDrive();
            var e = this.pm.currentSessionData;
            e && e.driveParts.forEach(function(e) {
                e.isMatched() ? this.driveRenderer.drawUserDrive(e.geometry) : this.driveRenderer.drawDisconnect(e.geometry)
            }, this)
        },
        clearDrive: function() {
            this.removeAllFeatures()
        },
        zoomToDrive: function() {
            var e = this.pm.currentSessionData;
            if (e) {
                var t = e.getDriveBounds(),
                    n = this.map.getZoomForExtent(t);
                this.map.setCenter(t.getCenterLonLat(), n)
            }
        },
        redraw: function() {
            this.pm && this.drawDrive()
        },
        CLASS_NAME: "Waze.Layer.ArchiveLayer"
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-drivee7f57df07fa6d5f61eee9b71ae5e18b1.png"
}, function(e, t, n) {
    e.exports = n.p + "img/problem-pinA1d99ad1e8cd947bcea5969fff69d2eb8.png"
}, function(e, t, n) {
    e.exports = n.p + "img/problem-pinBafa0a6c37d9eba8278e82a3a97088206.png"
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-routed9aa340910f8fc7a0fd2285fa0aab968.png"
}, function(e, t, n) {
    var i = {
        "./big_direction_end.png": 1145,
        "./big_direction_exit_left.png": 1146,
        "./big_direction_exit_right.png": 1147,
        "./big_direction_forward.png": 1148,
        "./big_direction_left.png": 1149,
        "./big_direction_right.png": 1150,
        "./big_direction_u.png": 1151,
        "./big_directions_roundabout.png": 1152,
        "./big_directions_roundabout_UK.png": 1153,
        "./big_directions_roundabout_UK_l.png": 1154,
        "./big_directions_roundabout_UK_s.png": 1155,
        "./big_directions_roundabout_l.png": 1156,
        "./big_directions_roundabout_r.png": 1157,
        "./big_directions_roundabout_r_UK.png": 1158,
        "./big_directions_roundabout_s.png": 1159,
        "./big_directions_roundabout_u.png": 1160,
        "./big_directions_roundabout_u_UK.png": 1161,
        "./unknown.png": 1162
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 1144
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_end25226c71aed0efd3a2db41978066febc.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_exit_left1c1498a6dec9582bae81d34ec9e6dc3b.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_exit_rightba4fee1380f556a8570252c6745f1442.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_forwardc0958c4d4c5c79bcb656d34f3afb3ea2.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_left5b94fa33f945d46ab1bdd1131ac0457e.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_right2d403871f04763260a40c537e231897e.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_u63cf785b68a57e8663020098cd07ed76.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout9f9bf37022d431be50fecc457cd6e3df.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_UK7dce607d7359326a799fd9d3ad8542aa.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_UK_ldc86a0b99cfcd4ed03b0192d5b350c70.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_UK_s01ea5c47f4e08b20532505d84b3271e0.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_l54dc48b91e36549b26bae30135462780.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_rc114740b6cafc42177a53aa6c803c14d.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_r_UKc34794c4d01ec8a9fa012150d2f1e02a.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_sffadf4fd7b277b8ef2f21688e79b9351.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_u3634283a7d740f30eb18c203f6a357be.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_u_UKba204c8a12885976f9bc5b07165b8644.png"
}, function(e, t, n) {
    e.exports = n.p + "img/unknownb34dd18530431d8e3b14a4750cbe4352.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(155)),
        r = s(n(75));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OL.Class(i.default, {
        fogOfWar: null,
        renderers: [r.default],
        styleMap: new OL.StyleMap({
            default: new OL.Style({
                fillOpacity: .3,
                strokeOpacity: 1,
                strokeWidth: 6,
                fillColor: "white"
            })
        }),
        setMap: function() {
            i.default.prototype.setMap.apply(this, arguments)
        },
        setVisibility: function() {
            i.default.prototype.setVisibility.apply(this, arguments),
                this.getVisibility() ? (this.map.events.register("moveend", this, this._refreshFogOfWar),
                    this._updateUserAreas()) : this.map.events.unregister("moveend", this, this._refreshFogOfWar)
        },
        _refreshFogOfWar: function() {
            this.removeFeatures(this.fogOfWar),
                this._createFogOfWar(),
                this.addFeatures(this.fogOfWar),
                this.redraw()
        },
        onFeaturesAdded: function() {
            this._updateUserAreas()
        },
        _updateUserAreas: function() {
            if (this.removeAllFeatures(),
                this.getVisibility()) {
                var e = [];
                this.model.userAreas.getObjectArray().forEach(function(t) {
                        this._createEditableAreaVector(e, t.geometry)
                    }, this),
                    this._createFogOfWar(),
                    this.addFeatures(e),
                    this.addFeatures(this.fogOfWar)
            }
        },
        _createEditableAreaVector: function(e, t) {
            e.push(new OL.Feature.Vector(t, {}, {
                    maskID: "editableAreaMask",
                    fillColor: "#000000",
                    fillOpacity: 1
                })),
                e.push(new OL.Feature.Vector(t.clone(), {}, {
                    fillColor: "transparent",
                    fillOpacity: 0,
                    strokeColor: "gray",
                    strokeWidth: 1
                }))
        },
        _createFogOfWar: function() {
            this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                fillColor: "black",
                fillOpacity: .5,
                strokeWidth: 0,
                mask: "url(#editableAreaMask)"
            })
        },
        CLASS_NAME: "Waze.Layer.UserLayer"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(6),
        s = (i = r) && i.__esModule ? i : {
            default: i
        },
        a = n(30);
    var o = OpenLayers.Class(OpenLayers.Layer.XYZ, {
        key: null,
        tileUrl: "https://www.googleapis.com/tile/v1/tiles/${z}/${x}/${y}?session=${session}&key=${key}",
        type: "satellite",
        language: "en-US",
        region: "us",
        sessionKey: null,
        gettingSession: !1,
        sessionError: !1,
        attributionRequest: null,
        ATTRIBUTION_THROTTLE: 1e3,
        initialize: function(e) {
            (0,
                s.default)(e, {
                sphericalMercator: !0
            }, e);
            var t = [e.name || "Google " + (e.type || this.type), null, e];
            OpenLayers.Layer.XYZ.prototype.initialize.apply(this, t),
                this.tileOptions = (0,
                    s.default)({
                    crossOriginKeyword: null
                }, this.options.tileOptions),
                this.getSessionKey(),
                this.updateAttribution = _.debounce(this.updateAttribution, this.ATTRIBUTION_THROTTLE)
        },
        getSessionKey: function() {
            var e = this;
            if (!this.gettingSession && !this.sessionError) {
                var t = this;
                this.gettingSession = !0,
                    (0,
                        a.httpPost)("https://www.googleapis.com/tile/v1/createSession?key=" + this.key, {
                        mapType: this.type,
                        language: this.language,
                        region: this.region
                    }, {
                        dataType: "json"
                    }).then(function(n) {
                        e.sessionKey = n.session,
                            window.setTimeout(t.onSessionExpire.bind(e), 72e6),
                            t.redraw(),
                            t.updateAttribution()
                    }).catch(function() {
                        t.sessionError = !0,
                            t.events.triggerEvent("loaderror")
                    }).finally(function() {
                        t.gettingSession = !1
                    })
            }
        },
        onSessionExpire: function() {
            this.map.events.register("movestart", this, this.renewSessionKey)
        },
        renewSessionKey: function() {
            this.map.events.unregister("movestart", this, this.renewSessionKey),
                this.sessionKey = null,
                this.getSessionKey()
        },
        getURL: function(e) {
            if (this.sessionKey) {
                var t = this.getXYZ(e);
                return t.session = this.sessionKey,
                    t.key = this.key,
                    OpenLayers.String.format(this.tileUrl, t)
            }
        },
        updateAttribution: function() {
            if (null !== this.sessionKey) {
                null !== this.attributionRequest && this.attributionRequest.abort();
                var e = this.map.getExtent(),
                    t = this;
                null !== e && (e.transform(this.map.getProjectionObject(), new OpenLayers.Projection("EPSG:4326")),
                    this.attributionRequest = (0,
                        a.httpGet)("https://www.googleapis.com/tile/v1/viewport", {
                        key: this.key,
                        session: this.sessionKey,
                        zoom: this.getServerZoom(),
                        north: e.top,
                        south: e.bottom,
                        east: e.right,
                        west: e.left
                    }).then(function(e) {
                        t.attribution = "<a href='http://www.google.com/intl/en-US_US/help/terms_maps.html' target='_blank'  class='waze-black-link'>Terms</a>\n           <a href='https://www.waze.com/legal/notices' target='_blank' class='waze-black-link'>Notices</a>\n           <span>" + e.copyright + "</span>"
                    }).catch(function() {
                        t.attribution = ""
                    }).finally(function() {
                        t.attributionRequest = null,
                            t.map.events.triggerEvent("changelayer", {
                                layer: t,
                                property: "attribution"
                            })
                    }))
            }
        },
        setMap: function() {
            OpenLayers.Layer.XYZ.prototype.setMap.apply(this, arguments),
                this.updateAttribution(),
                this.map.events.register("moveend", this, this.updateAttribution)
        },
        clone: function(e) {
            return null === e && (e = new OpenLayers.Layer.Google(this.options)),
                e = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [e])
        },
        destroy: function() {
            this.map && this.map.events.unregister("moveend", this, this.updateAttribution),
                OpenLayers.Layer.XYZ.prototype.destroy.apply(this, arguments)
        },
        CLASS_NAME: "OpenLayers.Layer.Google"
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = OL.Class(OL.Layer, {
        $div: null,
        isFixed: !0,
        setMap: function() {
            OL.Layer.prototype.setMap.apply(this, arguments),
                this.$div = $(this.div),
                this.$div.addClass("satellite-overlay")
        },
        CLASS_NAME: "W.Layer.AerialOverlayLayer"
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(416),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OL.Class(s.default, {
        initialize: function(e) {
            s.default.prototype.initialize.apply(this, arguments)
        },
        render: function() {
            if (s.default.prototype.render.apply(this, arguments),
                this.icon.$div.addClass("user-generated"),
                this.model.attributes.hasComments)
                return this.icon.$div.addClass("has-comments")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(31),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OL.Class(OL.Marker, {
        model: null,
        initialize: function(e) {
            this.model = e;
            var t = new s.default("place-update"),
                n = this._getLocation();
            OL.Marker.prototype.initialize.call(this, n, t),
                this.render(),
                this.icon.$div.data("model", this.model),
                this.icon.$div.attr("data-id", this.model.getID())
        },
        render: function() {
            var e = this.icon.$div,
                t = e.hasClass("selected");
            return e.removeClass(),
                e.addClass("place-update"),
                this._hasMultipleUpdates() ? (e.addClass("multiple"),
                    e.attr("data-update-count", this._getUpdateCount())) : e.addClass(this._getUpdateType()),
                this.model.hasOpenUpdateRequests() || e.addClass("approved"),
                t && e.addClass("selected"),
                e.addClass(this._getSeverity()),
                this._reposition(this._getLocation())
        },
        _reposition: function(e) {
            if (!e.equals(this.lonlat))
                return this.lonlat = e,
                    this.moveTo(this.map.getLayerPxFromLonLat(this.lonlat))
        },
        _getLocation: function() {
            return this.model.geometry.getBounds().getCenterLonLat()
        },
        _hasMultipleUpdates: function() {
            return this.model.attributes.venueUpdateRequests.length > 1
        },
        _getUpdateCount: function() {
            return this.model.attributes.venueUpdateRequests.length
        },
        _getUpdateType: function() {
            return this.model.attributes.venueUpdateRequests[0].get("updateType").toLowerCase()
        },
        _getSeverity: function() {
            return this.model.attributes.venueUpdateRequests[0].getSeverity()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(31)),
        r = s(n(13));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OL.Class(OL.Marker, {
        model: null,
        initialize: function(e) {
            this.model = e;
            var t = new i.default("road-closure"),
                n = this._getCenter();
            OL.Marker.prototype.initialize.call(this, n.lonlat, t),
                this.icon.$div.data("model", this.model),
                this._createArrow(n.angle).appendTo(this.icon.$div),
                this.render()
        },
        _createArrow: function(e) {
            var t = 360 - r.default.radToDeg(e),
                n = "forward";
            return this.model.forward || (t -= 180,
                    n = "backward"),
                this.arrow = $("<div>").addClass("arrow").addClass(n).css({
                    transform: "rotate(" + t + "deg)"
                }),
                this.arrow
        },
        _getCenter: function() {
            var e = this.model.geometry.getLength(),
                t = r.default.getPointAlongLine(this.model.geometry.getVertices(), e / 2),
                n = t.point;
            return {
                angle: t.angle,
                lonlat: new OL.LonLat(n.x, n.y)
            }
        },
        render: function() {
            return this.icon.$div.toggleClass("inactive", !this.model.active)
        },
        toggle: function(e) {
            return this.icon.$div.toggle(e)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(7)),
        r = s(n(25));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OL.Class(OL.Layer, {
        isBaseLayer: !1,
        markers: null,
        repo: null,
        drawn: !1,
        $div: null,
        className: null,
        markerClass: OL.Marker,
        filter: null,
        initialize: function(e, t, n) {
            OL.Layer.prototype.initialize.apply(this, [e, n]),
                this.markers = {},
                this.repo = t,
                n.className && (this.className = n.className),
                this._registerEvents()
        },
        destroy: function() {
            return this.clearMarkers(),
                this.markers = null,
                this._unregisterEvents(),
                OL.Layer.prototype.destroy.apply(this, arguments)
        },
        _registerEvents: function() {
            return this.div.addEventListener("click", this._onDivClick.bind(this)),
                this._registerRepoEvents()
        },
        _unregisterEvents: function() {
            return this.div.removeEventListener("click", this._onDivClick),
                this._unregisterRepoEvents()
        },
        _registerRepoEvents: function() {
            var e = this;
            return this.repo.map(function(t) {
                return t.on("objectsadded", e.onFeaturesAdded, e),
                    t.on("objectschanged", e.onFeaturesChanged, e),
                    t.on("objectsremoved", e.onFeaturesRemoved, e)
            })
        },
        _unregisterRepoEvents: function() {
            var e = this;
            return this.repo.map(function(t) {
                return t.off("objectsadded", e.onFeaturesAdded, e),
                    t.off("objectschanged", e.onFeaturesChanged, e),
                    t.off("objectsremoved", e.onFeaturesRemoved, e)
            })
        },
        shouldAddFeature: function(e) {
            return !this.filter || this.filter(e)
        },
        onFeaturesAdded: function(e) {
            for (var t = 0; t < e.length; t++) {
                var n = e[t];
                if (this.shouldAddFeature(n)) {
                    var i = new this.markerClass(n);
                    this.addMarker(i, n.getID())
                }
            }
        },
        onFeaturesChanged: function(e) {
            for (var t = 0; t < e.length; t++) {
                var n = e[t],
                    i = this._findMarker(n);
                null != i ? this.shouldAddFeature(n) ? (this.drawMarker(i),
                    i.render()) : this.removeMarker(i) : this.shouldAddFeature(n) && (i = new this.markerClass(n),
                    this.addMarker(i, n.getID()))
            }
        },
        _findMarker: function(e) {
            return this.markers[e.getID()] || this._findMarkerByOldID(e)
        },
        _findMarkerByOldID: function(e) {
            if (null != e._prevID) {
                var t = this.markers[e._prevID];
                if (null != t)
                    return t.id = e.getID(),
                        this.markers[t.id] = t,
                        delete this.markers[e._prevID],
                        t
            }
            return null
        },
        onFeaturesRemoved: function(e) {
            for (var t = 0; t < e.length; t++) {
                var n = e[t],
                    i = this.markers[n.getID()];
                null != i && this.removeMarker(i)
            }
        },
        setOpacity: function(e) {
            if (e !== this.opacity) {
                this.opacity = e;
                var t = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, o = (0,
                            r.default)((0,
                            i.default)(this.markers)); !(t = (a = o.next()).done); t = !0) {
                        var l = a.value;
                        this.markers[l].setOpacity(this.opacity)
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
            }
        },
        moveTo: function(e, t, n) {
            if (OL.Layer.prototype.moveTo.apply(this, arguments),
                t || !this.drawn) {
                var s = !0,
                    a = !1,
                    o = void 0;
                try {
                    for (var l, u = (0,
                            r.default)((0,
                            i.default)(this.markers)); !(s = (l = u.next()).done); s = !0) {
                        var d = l.value,
                            c = this.markers[d];
                        this.drawMarker(c)
                    }
                } catch (e) {
                    a = !0,
                        o = e
                } finally {
                    try {
                        !s && u.return && u.return()
                    } finally {
                        if (a)
                            throw o
                    }
                }
                this.drawn = !0
            }
        },
        addMarker: function(e, t) {
            if (this.markers[t] = e,
                e.id = t,
                this.map && this.map.getExtent())
                return e.map = this.map,
                    this.drawMarker(e)
        },
        getMarker: function(e) {
            return this.markers[e]
        },
        removeMarker: function(e) {
            if (this.markers)
                return e.erase(),
                    delete this.markers[e.id]
        },
        clearMarkers: function() {
            var e = !0,
                t = !1,
                n = void 0;
            try {
                for (var s, a = (0,
                        r.default)((0,
                        i.default)(this.markers)); !(e = (s = a.next()).done); e = !0) {
                    var o = s.value,
                        l = this.markers[o];
                    this.removeMarker(l)
                }
            } catch (e) {
                t = !0,
                    n = e
            } finally {
                try {
                    !e && a.return && a.return()
                } finally {
                    if (t)
                        throw n
                }
            }
        },
        drawMarker: function(e) {
            var t = this.map.getLayerPxFromLonLat(e.lonlat);
            if (null == t)
                return e.display(!1);
            if (!e.isDrawn()) {
                var n = e.draw(t);
                return n.classList.add("map-marker"),
                    this.div.appendChild(n)
            }
            return e.icon ? e.icon.moveTo(t) : void 0
        },
        setMap: function() {
            if (OL.Layer.prototype.setMap.apply(this, arguments),
                this.$div = $(this.div),
                this.$div.addClass("marker-layer"),
                this.className)
                return this.$div.addClass(this.className)
        },
        getDataExtent: function() {
            var e = null;
            if (this.markers) {
                e = new OL.Bounds;
                var t = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, o = (0,
                            r.default)((0,
                            i.default)(this.markers)); !(t = (a = o.next()).done); t = !0) {
                        var l = a.value,
                            u = this.markers[l];
                        e.extend(u.lonlat)
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
            }
            return e
        },
        getContainer: function() {
            return this.div
        },
        _onDivClick: function(e) {
            if (e.target.classList.contains("map-marker"))
                return this.events.triggerEvent("markerclick", e),
                    !1
        },
        CLASS_NAME: "W.Layer.Markers"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = OL.Class(OL.Layer.XYZ, {
        getURL: function(e) {
            var t = OL.Layer.XYZ.prototype.getURL.apply(this, arguments),
                n = OL.Util.getParameterString(this.params);
            return OL.Util.urlAppend(t, n)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(412),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    t.default = new OpenLayers.StyleMap({
            default: new OL.Style({
                externalGraphic: s.default,
                graphicYOffset: -53,
                graphicWidth: 37,
                graphicHeight: 53
            })
        }),
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = OL.Class(OL.Control, {
        googleAerialLayer: null,
        $div: null,
        $link: null,
        destroy: function() {
            return this.map.events.un({
                    changelayer: this.toggleVisibility,
                    scope: this
                }),
                OL.Control.prototype.destroy.apply(this, arguments)
        },
        draw: function() {
            return OL.Control.prototype.draw.apply(this, arguments),
                this.map.events.on({
                    changelayer: this.toggleVisibility,
                    scope: this
                }),
                this.$div = $(this.div).addClass("google-permalink"),
                this.$link = $("<a/>").attr({
                    target: "blank",
                    href: "http://maps.google.com"
                }).appendTo(this.$div),
                this.div
        },
        toggleVisibility: function() {
            var e = this.map.baseLayer,
                t = e && e.getVisibility();
            return this.$div.toggle(t)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(7)),
        r = f(n(25)),
        s = f(n(2)),
        a = f(n(0)),
        o = f(n(1)),
        l = f(n(3)),
        u = f(n(4)),
        d = f(n(411)),
        c = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(24)),
        h = f(n(1174));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t() {
            return (0,
                    a.default)(this, t),
                (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).apply(this, arguments))
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "initialize",
                value: function(e, t, n, i) {
                    this.map = e,
                        this.selectionManager = t,
                        this.app = n,
                        this.togglers = i,
                        this.urlParams = null,
                        this.mapLocation = null,
                        this.isMapLocationChanged = !1,
                        this.selectedProblem = null,
                        this.preselectedProblem = null,
                        this.mapSelection = {},
                        this.marker = !1,
                        this.locationsPerEnv = {},
                        this._restore(),
                        this.map.events.on({
                            moveend: this._onMapLocationChanged,
                            scope: this
                        }),
                        this.selectionManager.events.on({
                            selectionchanged: this._onSelectionChanged,
                            scope: this
                        }),
                        this.app.on("change:loggedIn", this._onUserChanged, this),
                        W.vent.on({
                            "problems:shown": this._onProblemShown,
                            "problems:closed": this._onProblemClosed
                        }, this),
                        this.togglers.on("change", this._triggerStateChanged, this)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.map.events.un({
                            moveend: this._onMapLocationChanged,
                            scope: this
                        }),
                        this.selectionManager.events.un({
                            selectionchanged: this._onSelectionChanged,
                            scope: this
                        }),
                        this.togglers.off("change", this._onTogglersChanged, this)
                }
            }, {
                key: "_onMapLocationChanged",
                value: function() {
                    return this.updateMapLocation()
                }
            }, {
                key: "_onUserChanged",
                value: function() {
                    if (this.app.get("loggedIn") && !this.isMapLocationChanged)
                        return this._setLocationToUserDrive(this.app.get("user"))
                }
            }, {
                key: "_setLocationToUserDrive",
                value: function(e) {
                    var t = e.editableAreas ? e.editableAreas.components : [];
                    if (0 !== t.length) {
                        var n = t[0].getBounds(),
                            i = this.map.getZoomForExtent(n),
                            r = n.getCenterLonLat();
                        return r.zoom = i,
                            this.mapLocation = r,
                            this._setMapLocation()
                    }
                }
            }, {
                key: "_setLocalStorage",
                value: function(e, t) {
                    if (!W.app.isSandboxMode())
                        return c.localStorage.set(e, t)
                }
            }, {
                key: "updateMapLocation",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.app.getAppRegionCode(),
                        n = this.map.getCenter(),
                        i = this.map.getZoom();
                    if (null != n)
                        return n.zoom = i,
                            this.mapLocation = n,
                            this.locationsPerEnv[e] = n,
                            this._setLocalStorage(t.LOCAL_STORAGE_MAP_LOCATION, this.locationsPerEnv),
                            this.isMapLocationChanged = !0,
                            this._triggerStateChanged(),
                            !0
                }
            }, {
                key: "_getSelectedFeaturesByType",
                value: function() {
                    var e = {};
                    return this.selectionManager.getSelectedFeatures().forEach(function(t) {
                            if (!t.model.isNew()) {
                                var n = e[t.model.type + "s"] || [];
                                e[t.model.type + "s"] = n,
                                    n.push(t.model.getID())
                            }
                        }),
                        this.selectedProblem && (e[this.selectedProblem.type] = this.selectedProblem.getID()),
                        e
                }
            }, {
                key: "_onSelectionChanged",
                value: function(e) {
                    return this._updateMapSelection(),
                        !0
                }
            }, {
                key: "_onProblemShown",
                value: function(e) {
                    return this.selectedProblem = e,
                        this._updateMapSelection()
                }
            }, {
                key: "_onProblemClosed",
                value: function() {
                    return this.selectedProblem = null,
                        this._updateMapSelection()
                }
            }, {
                key: "_updateMapSelection",
                value: function() {
                    return this.mapSelection = this._getSelectedFeaturesByType(),
                        this._triggerStateChanged()
                }
            }, {
                key: "_triggerStateChanged",
                value: function() {
                    return this.trigger("statechanged", {
                        center: this._getProjectedCenter(),
                        selection: this.mapSelection,
                        marker: this.marker,
                        s: this.togglers.serialize()
                    })
                }
            }, {
                key: "_getProjectedCenter",
                value: function() {
                    var e = this.mapLocation.zoom,
                        t = this.mapLocation.clone();
                    return t.transform(this.map.getProjectionObject(), this.map.displayProjection),
                        t.zoom = e,
                        t
                }
            }, {
                key: "_isTogglerTreeParamPresent",
                value: function() {
                    return null != this.urlParams.s && /^\d+$/.test(this.urlParams.s)
                }
            }, {
                key: "_restoreLayerVisibility",
                value: function() {
                    var e = new h.default(this.urlParams);
                    this._isTogglerTreeParamPresent() ? this.togglers.setStateFromBitfield(this.urlParams.s) : e.isLayerParamPresent() ? this.togglers.setState(e.getTogglersState()) : this.togglers.readFromLocalStorage(),
                        this.togglers.writeStateToApp({
                            map: this.map,
                            dataModel: W.model
                        })
                }
            }, {
                key: "_restoreMapLocation",
                value: function() {
                    this.locationsPerEnv = c.localStorage.get(t.LOCAL_STORAGE_MAP_LOCATION),
                        null == this.locationsPerEnv && (this.locationsPerEnv = {});
                    var e = this.app.getAppRegionCode(),
                        n = this.locationsPerEnv[e];
                    if (this.urlParams.lat && this.urlParams.lon) {
                        var i = new OL.LonLat(parseFloat(this.urlParams.lon), parseFloat(this.urlParams.lat));
                        if (i.transform(this.map.displayProjection, this.map.getProjectionObject()),
                            this.urlParams.zoom) {
                            var r = parseFloat(this.urlParams.zoom);
                            i.zoom = r
                        }
                        this.mapLocation = i,
                            this.isMapLocationChanged = !0
                    } else if (null != n) {
                        var s = new OL.LonLat(n.lon, n.lat);
                        s.zoom = n.zoom,
                            this.mapLocation = s,
                            this.isMapLocationChanged = !0
                    }
                }
            }, {
                key: "_restoreMarker",
                value: function() {
                    this.marker = this.urlParams.marker
                }
            }, {
                key: "_restoreSelection",
                value: function() {
                    var e = this;
                    this.selectionManager.getSelectableRepos().forEach(function(t) {
                        var n = e.urlParams[t.name];
                        n && (n instanceof Array || (n = [n]),
                            e.mapSelection[t.name] = n)
                    })
                }
            }, {
                key: "_selectObjects",
                value: function() {
                    if (W.model.events.unregister("mergeend", this, this._selectObjects),
                        this.mapSelection) {
                        var e = [],
                            t = !0,
                            n = !1,
                            s = void 0;
                        try {
                            for (var a, o = (0,
                                    r.default)((0,
                                    i.default)(this.mapSelection)); !(t = (a = o.next()).done); t = !0) {
                                var l = a.value,
                                    u = this.mapSelection[l],
                                    d = W.model[l];
                                if (u && d)
                                    for (var c = 0; c < u.length; c++) {
                                        var h = u[c],
                                            f = d.getObjectById(h);
                                        f && e.push(f)
                                    }
                            }
                        } catch (e) {
                            n = !0,
                                s = e
                        } finally {
                            try {
                                !t && o.return && o.return()
                            } finally {
                                if (n)
                                    throw s
                            }
                        }
                        _.isEmpty(e) || this.selectionManager.setSelectedModels(e)
                    }
                    return this._selectProblem()
                }
            }, {
                key: "_restoreProblemSelection",
                value: function() {
                    for (var e = [W.model.mapUpdateRequests, W.model.problems], t = 0; t < e.length; t++) {
                        var n = e[t],
                            i = n.objectType,
                            r = this.urlParams[i];
                        if (null != r)
                            return void(this.preselectedProblem = {
                                repo: n,
                                problemID: r
                            })
                    }
                }
            }, {
                key: "_selectProblem",
                value: function() {
                    if (this.preselectedProblem) {
                        var e = this.preselectedProblem.repo.getObjectById(this.preselectedProblem.problemID);
                        e && W.commands.execute("problems:show", e)
                    }
                }
            }, {
                key: "_setupMap",
                value: function() {
                    if (this._setMapLocation(),
                        this.marker) {
                        var e = new OL.Layer.Vector("PermalinkMarker", {
                                styleMap: d.default.permalinkMarker
                            }),
                            t = void 0;
                        t = this.mapLocation ? this.mapLocation.clone() : this.map.getCenter();
                        var n = new OL.Geometry.Point(t.lon, t.lat),
                            i = new OL.Feature.Vector(n);
                        this.map.addLayer(e),
                            e.addFeatures(i)
                    }
                    return W.model.events.register("mergeend", this, this._selectObjects)
                }
            }, {
                key: "_setMapLocation",
                value: function() {
                    if (this.mapLocation) {
                        var e = this.mapLocation.clone();
                        return this.map.setCenter(e, this.mapLocation.zoom)
                    }
                }
            }, {
                key: "_restore",
                value: function() {
                    return this.urlParams = OL.Util.getParameters(window.location.href),
                        this._restoreMapLocation(),
                        this._restoreMarker(),
                        this._restoreSelection(),
                        this._restoreProblemSelection(),
                        this._restoreLayerVisibility(),
                        this._setupMap()
                }
            }]),
            t
    }(Backbone.Model);
    _.extend(p, {
            LOCAL_STORAGE_MAP_LOCATION: "mapLocation"
        }),
        t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r, s, a = p(n(7)),
        o = p(n(6)),
        l = p(n(0)),
        u = p(n(1)),
        d = p(n(15)),
        c = n(127),
        h = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(214)),
        f = p(n(117));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = c.LAYER_UNIQUE_NAMES,
        v = (i = {},
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.SATELLITE_IMAGERY, 0),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.ROADS, 2),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.GPS_POINTS, 3),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.AREA_MANAGERS, 4),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.LANDMARKS, 5),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.SPEED_CAMERAS, 6),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.PROBLEMS, 7),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.UPDATE_REQUESTS, 8),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.EDITABLE_AREAS, 9),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.LIVE_USERS, 10),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.PLACE_UPDATES, 11),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.BIG_JUNCTIONS, 12),
            (0,
                d.default)(i, c.LAYER_UNIQUE_NAMES.CLOSURES, 13),
            i),
        m = (r = {},
            (0,
                d.default)(r, g.SATELLITE_IMAGERY, h.ITEM_SATELLITE_IMAGERY),
            (0,
                d.default)(r, g.ROADS, h.ITEM_ROAD),
            (0,
                d.default)(r, g.GPS_POINTS, h.ITEM_GPS_POINTS),
            (0,
                d.default)(r, g.AREA_MANAGERS, h.ITEM_AREA_MANAGERS),
            (0,
                d.default)(r, g.LANDMARKS, h.ITEM_VENUES),
            (0,
                d.default)(r, g.SPEED_CAMERAS, h.ITEM_SPEED_CAMERAS),
            (0,
                d.default)(r, g.PROBLEMS, h.ITEM_MAP_PROBLEMS),
            (0,
                d.default)(r, g.UPDATE_REQUESTS, h.ITEM_UPDATE_REQUESTS),
            (0,
                d.default)(r, g.EDITABLE_AREAS, h.ITEM_EDITABLE_AREAS),
            (0,
                d.default)(r, g.LIVE_USERS, h.ITEM_LIVE_USERS),
            (0,
                d.default)(r, g.PLACE_UPDATES, h.ITEM_PLACE_UPDATE_REQUESTS),
            (0,
                d.default)(r, g.BIG_JUNCTIONS, h.ITEM_JUNCTION_BOXES),
            (0,
                d.default)(r, g.CLOSURES, h.ITEM_CLOSURES),
            r),
        _ = (s = {},
            (0,
                d.default)(s, h.GROUP_ISSUES, !0),
            (0,
                d.default)(s, h.GROUP_MAP_ISSUES, !0),
            (0,
                d.default)(s, h.GROUP_PLACES, !0),
            (0,
                d.default)(s, h.GROUP_ROAD, !0),
            (0,
                d.default)(s, h.GROUP_DISPLAY, !0),
            s),
        y = function() {
            function e(t) {
                (0,
                    l.default)(this, e),
                this._urlParams = t
            }
            return (0,
                    u.default)(e, [{
                    key: "isLayerParamPresent",
                    value: function() {
                        return null != this._urlParams.layers && /^\d+$/.test(this._urlParams.layers)
                    }
                }, {
                    key: "getTogglersState",
                    value: function() {
                        var e = (0,
                                o.default)({}, _),
                            t = new f.default(this._urlParams.layers);
                        return (0,
                                a.default)(m).forEach(function(n) {
                                var i = 1 << v[n];
                                e[m[n]] = t.isEnabled(i)
                            }),
                            e
                    }
                }]),
                e
        }();
    t.default = y,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = n(32);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click a": "_onLocationLinkClicked",
                        "click .close": "_onCloseClicked"
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._dataModel = e.dataModel,
                        this._mapState = e.mapState,
                        this._regionCode = e.regionCode,
                        this._otherEnv = null,
                        this._dataModel.restrictedAreas.on(l.UPDATED, this._onRestrictedAreasChanged, this),
                        this._onRestrictedAreasChanged()
                }
            }, {
                key: "_onRestrictedAreasChanged",
                value: function() {
                    var e = this,
                        t = this._dataModel.restrictedAreas.getInvalidEnvs();
                    (t = _.filter(t, function(t) {
                        return t.attributes.env !== e._regionCode
                    })).length > 0 ? (this._otherEnv = t[0].attributes.env,
                        this.render(),
                        this.show()) : this.hide()
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        otherEnv: this._otherEnv
                    }
                }
            }, {
                key: "_onLocationLinkClicked",
                value: function(e) {
                    e.preventDefault();
                    var t = $(e.target).data("env");
                    this._mapState.updateMapLocation(t),
                        W.app.changeAppRegion(t)
                }
            }, {
                key: "_onCloseClicked",
                value: function() {
                    this.hide(),
                        this._dataModel.restrictedAreas.off(l.UPDATED, this.onRestrictedAreasChanged, this)
                }
            }, {
                key: "hide",
                value: function() {
                    this.$el.hide()
                }
            }, {
                key: "show",
                value: function() {
                    this.$el.show()
                }
            }, {
                key: "template",
                get: function() {
                    return "MapEditor/UI/Map/templates/location-message"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        className: "snapshot-message",
        template: "templates/snapshot-message",
        events: {
            "click .return-to-edit-mode": "_onReturnToEditModeClicked"
        },
        initialize: function() {
            return this.snapshotManager = this.options.snapshotManager,
                this.listenTo(this.snapshotManager, "change:state", this.render)
        },
        onRender: function() {
            return this.$el.toggle(this.snapshotManager.isSnapshotOn())
        },
        _onReturnToEditModeClicked: function() {
            return this.snapshotManager.toggle(!1)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(153),
        s = n(417),
        a = (i = s) && i.__esModule ? i : {
            default: i
        };
    var o = Backbone.Model.extend({
            defaults: function() {
                return {
                    env: null,
                    lon: null,
                    lat: null,
                    zoom: null,
                    marker: !1,
                    appState: {},
                    selection: {},
                    s: 0
                }
            },
            hrefAttributes: ["env", "lon", "lat", "s", "zoom", "marker"],
            initialize: function(e) {
                return this.app = e.app,
                    this.mapState = e.mapState,
                    this._bindEvents(),
                    this._setAppState(),
                    this
            },
            onDestroy: function() {
                return this._unbindEvents()
            },
            _bindEvents: function() {
                this.listenTo(this.app, "change:mode", this._setAppState),
                    this.listenTo(this.app, r.STATE_CHANGED, this._setAppState),
                    this.mapState.on("statechanged", this._setMapState, this)
            },
            _unbindEvents: function() {
                return this.mapState.off("statechanged", this._setMapState, this)
            },
            _setAppState: function() {
                this.set({
                    appState: this.app.getState()
                })
            },
            _setMapState: function(e) {
                return this.set({
                    lon: e.center.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: e.center.lat.toFixed(W.Config.units.lonLatPrecision),
                    s: e.s,
                    zoom: e.center.zoom,
                    marker: !!e.marker || void 0,
                    selection: e.selection
                })
            },
            getHref: function() {
                var e = _.pick(this.attributes, this.hrefAttributes);
                _.extend(e, this.get("appState")),
                    _.extend(e, this.get("selection"));
                var t = OL.Util.getParameterString(e);
                return "" + window.location.origin + window.location.pathname + "?" + t
            }
        }),
        l = Marionette.View.extend({
            template: "Waze/MapEditor/UI/Map/MapControls/templates/permalink",
            mapState: null,
            marker: null,
            clipboard: null,
            ui: {
                permalink: ".permalink",
                livemapLink: ".livemap-link"
            },
            events: {
                "click @ui.permalink": "_onPermalinkClick",
                "mouseover @ui.permalink": "_onPermalinkMouseOver"
            },
            initialize: function(e) {
                return Marionette.View.prototype.initialize.apply(this, arguments),
                    this.mapState = e.mapState,
                    this.mapState.on("statechanged", this._setLivemapLink, this),
                    this.permalinkModel = new o({
                        app: e.app,
                        mapState: e.mapState,
                        env: e.regionCode
                    }),
                    this.listenTo(this.permalinkModel, "change", this._setPermalinkLink),
                    this.clipboard = new a.default,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }),
                    !0
            },
            _onPermalinkClick: function(e) {
                return e.stopPropagation(),
                    W.Report.generalAction("permalink_clicked")
            },
            _onPermalinkMouseOver: function(e) {
                return this.clipboard.set($(e.target).attr("href"))
            },
            _onClipboardCopied: function(e) {
                return this.ui.permalink.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.link_copied"))
            },
            _setPermalinkLink: function() {
                var e = this.permalinkModel.getHref();
                return this.ui.permalink.attr("href", e)
            },
            _setLivemapLink: function(e) {
                var t = e.center,
                    n = t.zoom + W.Config.livemap.zoom_offset;
                n = Math.min(W.Config.livemap.max_zoom, n);
                var i = $.param({
                    lon: t.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: t.lat.toFixed(W.Config.units.lonLatPrecision),
                    zoom: n
                });
                return this.ui.livemapLink.attr("href", W.Config.livemap.url + "?" + i)
            },
            onRender: function() {
                return this.ui.permalink.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.permalink)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(417)),
        r = s(n(13));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.View.extend({
        granularity: 10,
        numDigits: 5,
        lastXy: null,
        mouseOver: !1,
        clipboard: null,
        template: "Waze/MapEditor/UI/Map/MapControls/templates/mouse_position",
        ui: {
            mousePosition: ".mouse-position"
        },
        events: {
            "mouseover @ui.mousePosition": "_onMouseOver",
            "mouseout @ui.mousePosition": "_onMouseOut"
        },
        initialize: function(e) {
            return this.map = e.map,
                this.map.events.register("mousemove", this, this._onMapMouseMove),
                this.clipboard = new i.default,
                this.clipboard.events.on({
                    copied: this._onClipboardCopied,
                    scope: this
                }),
                !0
        },
        onDestroy: function() {
            return this.map.events.unregister("mousemove", this, this._onMapMouseMove),
                this.clipboard.events.un({
                    copied: this._onClipboardCopied,
                    scope: this
                })
        },
        onRender: function() {
            return this.ui.mousePosition.tooltip({
                    placement: "top"
                }),
                this.clipboard.setEl(this.ui.mousePosition)
        },
        _formatOutput: function(e) {
            var t = parseInt(this.numDigits, 10);
            return e.lon.toFixed(t) + " " + e.lat.toFixed(t)
        },
        _onMouseOver: function(e) {
            this.mouseOver = !0;
            var t = this.map.getExtent().getCenterLonLat();
            return r.default.unproject(t),
                this._updateHtmlFromLonLat(t),
                this.clipboard.set(this.ui.mousePosition.html())
        },
        _onMouseOut: function(e) {
            this.mouseOver = !1
        },
        _onClipboardCopied: function(e) {
            return this.ui.mousePosition.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.coords_copied"))
        },
        _updateHtmlFromLonLat: function(e) {
            var t = this._formatOutput(e);
            if (t !== this.ui.mousePosition.html())
                return this.ui.mousePosition.html(t)
        },
        _onMapMouseMove: function(e) {
            if (null != e && !this.mouseOver) {
                (null == this.lastXy || Math.abs(e.xy.x - this.lastXy.x) > this.granularity || Math.abs(e.xy.y - this.lastXy.y) > this.granularity) && (this.lastXy = e.xy);
                var t = this.map.getLonLatFromPixel(e.xy);
                if (null == t)
                    return;
                r.default.unproject(t),
                    this._updateHtmlFromLonLat(t),
                    this.lastXy = e.xy
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(19),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.Region.extend({
        el: "#panel-container",
        mapHeight: null,
        initialize: function(e) {
            return e.map.events.register("resize", this, this._onMapResize),
                this._bindCloseButtons()
        },
        onShow: function(e, t) {
            return this._ensureElement(),
                t.$el.addClass("panel"),
                s.default.resolve().then(function() {
                    t.$el.addClass("show")
                }),
                this._setViewHeight()
        },
        _bindCloseButtons: function() {
            var e = this;
            return this.$el.on("click", ".close-panel, .done", function(t) {
                return e.trigger("closeClicked"),
                    e.empty()
            })
        },
        _onMapResize: function(e) {
            return this.mapHeight = e.height,
                this._setViewHeight()
        },
        _setViewHeight: function(e) {
            if (this.currentView && !this.currentView.isDestroyed()) {
                var t = this.mapHeight;
                t -= parseInt(this.currentView.$el.css("marginTop"), 10),
                    t -= parseInt(this.currentView.$el.css("marginBottom"), 10),
                    this.currentView.setMaxHeight && this.currentView.setMaxHeight(t)
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(0)),
        r = o(n(1)),
        s = o(n(75)),
        a = o(n(31));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            (0,
                i.default)(this, e),
            this._map = t,
                this._options = n,
                this._vectorLayer = null,
                this._markerLayer = null,
                this._styleMap = null,
                this._map.events.register("zoomend", this, this._onMapZoomed)
        }
        return (0,
                r.default)(e, [{
                key: "destroy",
                value: function() {
                    null !== this._vectorLayer && (this._map.removeLayer(this._vectorLayer),
                            this._vectorLayer.destroy()),
                        null !== this._markerLayer && (this._map.removeLayer(this._markerLayer),
                            this._markerLayer.destroy()),
                        this._map.events.unregister("zoomend", this, this._onMapZoomed)
                }
            }, {
                key: "addFeatures",
                value: function(e) {
                    this._getVectorLayer().addFeatures(e)
                }
            }, {
                key: "redrawFeature",
                value: function(e) {
                    this._getVectorLayer().drawFeature(e)
                }
            }, {
                key: "addGeometry",
                value: function(e) {
                    this.addFeatures([new OL.Feature.Vector(e.clone())])
                }
            }, {
                key: "createMarker",
                value: function(e, t, n) {
                    return new OpenLayers.Marker(new OL.LonLat(e, t), n)
                }
            }, {
                key: "createIconMarker",
                value: function(e, t, n) {
                    return this.createMarker(e, t, new a.default(n))
                }
            }, {
                key: "addMarkers",
                value: function(e) {
                    var t = this;
                    e.forEach(function(e) {
                        t._getMarkerLayer().addMarker(e),
                            e.layer = t._getMarkerLayer()
                    })
                }
            }, {
                key: "clear",
                value: function() {
                    this.removeAllFeatures(),
                        this.removeAllMarkers()
                }
            }, {
                key: "removeAllMarkers",
                value: function() {
                    if (null !== this._markerLayer && null !== this._markerLayer.markers) {
                        var e = this._markerLayer.markers.slice();
                        this._markerLayer.clearMarkers(),
                            e.forEach(function(e) {
                                return e.destroy()
                            })
                    }
                }
            }, {
                key: "removeAllFeatures",
                value: function() {
                    null !== this._vectorLayer && this._vectorLayer.removeAllFeatures()
                }
            }, {
                key: "setStyleMap",
                value: function(e) {
                    this._styleMap = e,
                        null !== this._vectorLayer && (this._vectorLayer.styleMap = e)
                }
            }, {
                key: "moveLayerToTop",
                value: function() {
                    this._map.moveLayerToTop(this._getVectorLayer()),
                        this._map.moveLayerToTop(this._getMarkerLayer())
                }
            }, {
                key: "_getVectorLayer",
                value: function() {
                    return null === this._vectorLayer && this._initVectorLayer(),
                        this._vectorLayer
                }
            }, {
                key: "_getMarkerLayer",
                value: function() {
                    return null === this._markerLayer && (this._markerLayer = new OL.Layer.Markers(_.uniqueId("marker_drawing_context_")),
                            this._map.addLayer(this._markerLayer)),
                        this._markerLayer
                }
            }, {
                key: "_initVectorLayer",
                value: function() {
                    var e = {
                        styleMap: this._styleMap
                    };
                    this._options.extendedMode && (e.renderers = [s.default]),
                        this._vectorLayer = new OL.Layer.Vector(_.uniqueId("vector_drawing_context_"), e),
                        this._map.addLayer(this._vectorLayer)
                }
            }, {
                key: "_onMapZoomed",
                value: function() {
                    this.trigger("zoomend")
                }
            }, {
                key: "pixelToMapUnits",
                value: function(e) {
                    return this._map.getResolution() * e
                }
            }, {
                key: "mapUnitsToPixel",
                value: function(e) {
                    return e / this._map.getResolution()
                }
            }, {
                key: "getMapZoom",
                value: function() {
                    return this._map.getZoom()
                }
            }, {
                key: "getMapExtent",
                value: function() {
                    return this._map.getExtent()
                }
            }]),
            e
    }();
    _.extend(l.prototype, Backbone.Events),
        t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(2)),
        r = h(n(0)),
        s = h(n(1)),
        a = h(n(3)),
        o = h(n(4)),
        l = h(n(1182)),
        u = h(n(1183)),
        d = h(n(1184)),
        c = h(n(1185));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "dblclick click mousedown dragstart": "_stopPropagation"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        streetViewRegion: ".street-view-region",
                        geoLocationRegion: ".geo-location-region",
                        zoomBarRegion: ".zoom-bar-region"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".overlay-buttons-container": {
                            observe: "visible",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._geoLocationProvider = u.default,
                        this._streetViewController = e.streetViewController,
                        this._map = e.map,
                        this.model = new Backbone.Model({
                            visible: !1
                        })
                }
            }, {
                key: "_stopPropagation",
                value: function(e) {
                    e.stopPropagation()
                }
            }, {
                key: "onRender",
                value: function() {
                    this.showChildView("geoLocationRegion", new l.default({
                            geoLocationProvider: this._geoLocationProvider,
                            map: this._map
                        })),
                        this.showChildView("streetViewRegion", new c.default({
                            streetViewController: this._streetViewController,
                            map: this._map
                        })),
                        this.showChildView("zoomBarRegion", new d.default({
                            map: this._map
                        })),
                        this.stickit()
                }
            }, {
                key: "hide",
                value: function() {
                    this.model.set({
                        visible: !1
                    })
                }
            }, {
                key: "show",
                value: function() {
                    this.model.set({
                        visible: !0
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Map/MapControls/templates/overlay-buttons"
                }
            }]),
            t
    }(Marionette.View);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(13));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .pan-button": "_onPanClicked"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        panButton: ".pan-button",
                        loading: ".loading"
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.geoLocationProvider = e.geoLocationProvider,
                        this.map = e.map
                }
            }, {
                key: "toggleGeoLocated",
                value: function(e) {
                    return this.ui.panButton.toggleClass("geo-located", e)
                }
            }, {
                key: "toggleLoading",
                value: function(e) {
                    return this.ui.loading.toggle(e),
                        this.ui.panButton.toggle(!e)
                }
            }, {
                key: "_onMapMoved",
                value: function() {
                    return this.toggleGeoLocated(!1),
                        this.map.events.unregister("moveend", this, this._onMapMoved)
                }
            }, {
                key: "_onPanClicked",
                value: function() {
                    var e = this;
                    return this.toggleLoading(!0),
                        this.geoLocationProvider.getLonLat(1e4).then(function(t) {
                            return t = t.clone(),
                                l.default.project(t),
                                e.map.setCenter(t),
                                e.map.events.register("moveend", e, e._onMapMoved),
                                e.toggleGeoLocated(!0)
                        }).catch(function(e) {
                            console.error("Error getting location", e)
                        }).finally(function() {
                            return e.toggleLoading(!1)
                        })
                }
            }, {
                key: "onRender",
                value: function() {
                    return this.toggleLoading(!1),
                        this.ui.panButton.tooltip({
                            title: I18n.t("geolocation.tooltip"),
                            placement: "left",
                            container: "body",
                            delay: {
                                show: 750
                            }
                        })
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/GeoLocation/templates/pan_button"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(19)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e() {
            (0,
                r.default)(this, e),
            this._cachedLonLat = null
        }
        return (0,
                s.default)(e, [{
                key: "getLonLat",
                value: function(e) {
                    var t = this;
                    return new i.default(function(n, i) {
                        null !== t._cachedLonLat ? n(t._cachedLonLat) : (t._getLonLatFromBrowser(e, n, i),
                            window.setTimeout(function() {
                                return t._onTimeoutExpired(n, i)
                            }, e))
                    })
                }
            }, {
                key: "_getLonLatFromBrowser",
                value: function(e, t, n) {
                    var i = this;
                    return window.navigator.geolocation.getCurrentPosition(function(e) {
                        return i._onGetPostionSuccess(e, t)
                    }, function(e) {
                        return i._onGetPositionError(e, n)
                    }, {
                        timeout: e
                    })
                }
            }, {
                key: "_onGetPostionSuccess",
                value: function(e, t) {
                    var n = e.coords;
                    return this._cachedLonLat = new OL.LonLat(n.longitude, n.latitude),
                        t(this._cachedLonLat)
                }
            }, {
                key: "_onGetPositionError",
                value: function(e, t) {
                    return t({
                        code: e.code
                    })
                }
            }, {
                key: "_onTimeoutExpired",
                value: function(t, n) {
                    n({
                        code: e.ERROR_CODES.USER_TIMEOUT
                    })
                }
            }]),
            e
    }();
    o.ERROR_CODES = {
            PERMISSION_DENIED: 1,
            POSITION_UNAVAILABLE: 2,
            TIMEOUT: 3,
            USER_TIMEOUT: 4
        },
        t.default = new o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        get template() {
            return "Waze/MapEditor/UI/Map/MapControls/templates/zoombar"
        },
        events: {
            "click .zoom-plus-button": "_onPlusClicked",
            "click .zoom-minus-button": "_onMinusClicked"
        },
        initialize: function(e) {
            this._map = e.map
        },
        _onPlusClicked: function() {
            this._map.zoomIn()
        },
        _onMinusClicked: function() {
            this._map.zoomOut()
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1186)),
        u = d(n(13));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "mousedown .street-view-control": "_onStreetViewControlMouseDown"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".street-view-control": {
                            observe: "visible",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._streetViewController = e.streetViewController,
                        this.scene = this._streetViewController.getScene(),
                        this.map = e.map,
                        this.model = new Backbone.Model({
                            visible: !0
                        }),
                        this._bindEvents(),
                        this._setupMap()
                }
            }, {
                key: "_bindEvents",
                value: function() {
                    this.listenTo(this.scene, "change:cameraLongLat", this._onSceneCameraPositionChanged.bind(this)),
                        this.listenTo(this.scene, "change:cameraHeading", this._onCameraHeadingChanged.bind(this)),
                        this.listenTo(this._streetViewController, "stateChanged", this._onStateChanged.bind(this))
                }
            }, {
                key: "_unbindEvents",
                value: function() {
                    this.map.events.unregister("moveend", this, this._onMoveEnd)
                }
            }, {
                key: "_onStateChanged",
                value: function(e) {
                    e ? this._onSVActivated() : this._onSVDeactivated()
                }
            }, {
                key: "setState",
                value: function(e) {
                    e ? this._onSVActivated() : this._onSVDeactivated()
                }
            }, {
                key: "_onSVActivated",
                value: function() {
                    this._toggleButtonAndPin(!1)
                }
            }, {
                key: "_onSVDeactivated",
                value: function() {
                    this._toggleButtonAndPin(!0)
                }
            }, {
                key: "_onSceneCameraPositionChanged",
                value: function(e, t) {
                    this.pin.setCrosshairLonlat(t),
                        this.pin.setPanoAvailable(!0)
                }
            }, {
                key: "_onCameraHeadingChanged",
                value: function(e, t) {
                    this.pin.setCrosshairAngle(t)
                }
            }, {
                key: "_setupMap",
                value: function() {
                    this.markerLayer = new OL.Layer.Markers("streetViewPin"),
                        this.map.addLayer(this.markerLayer),
                        this.pin = new l.default(this.map.getCenter() || new OL.LonLat(0, 0), this.map),
                        this.pin.toggleVisibility(!1),
                        this.markerLayer.addMarker(this.pin),
                        this.pin.layer = this.markerLayer,
                        this.markerLayer.div.classList.add("street-view-layer");
                    var e = _.throttle(this._onPinDrag, 200);
                    this.pin.events.on({
                            dragStart: function() {
                                this._toggleButtonAndPin(!1)
                            },
                            drag: function(t) {
                                return e.call(this, t)
                            },
                            dragCancel: function(e) {
                                this._streetViewController.isActive() || this._toggleButtonAndPin(!0)
                            },
                            dragDone: this._onPinDragDone,
                            scope: this
                        }),
                        this.map.events.register("moveend", this, this._onMoveEnd)
                }
            }, {
                key: "_onMoveEnd",
                value: function() {
                    var e = this.map.getExtent().containsLonLat(this.pin.lonlat);
                    this._streetViewController.isActive() && (e ? this._toggleButtonAndPin(!1) : this._toggleButtonAndPin(!0))
                }
            }, {
                key: "_onPinDrag",
                value: function(e) {
                    var t = this;
                    return this._streetViewController.getPanorama(e.svLonlat.clone(), this._getAvailabilityRadius()).then(function(e) {
                        return t.pin.setPanoAvailable(Boolean(e))
                    })
                }
            }, {
                key: "_onPinDragDone",
                value: function(e) {
                    var t = this,
                        n = u.default.unproject(this.pin.lonlat.clone());
                    this._streetViewController.getPanorama(n, this._getAvailabilityRadius()).then(function(e) {
                        e ? t._streetViewController.lookAtCurrentItem(e) : t._handleNoPanorama()
                    }).catch(function() {
                        t._handleNoPanorama()
                    })
                }
            }, {
                key: "_handleNoPanorama",
                value: function() {
                    var e = this._streetViewController.getCurrentCameraLonLat();
                    this._streetViewController.isActive() && e ? (this.pin.setCrosshairLonlat(e.clone()),
                        this.pin.setPanoAvailable(!0)) : this._toggleButtonAndPin(!0)
                }
            }, {
                key: "_onStreetViewControlMouseDown",
                value: function() {
                    return this.pin.setCrosshairLonlat(new OL.LonLat(0, 0)),
                        this.pin.setPanoAvailable(!1),
                        this.pin.dragging.forceStart(!0),
                        !1
                }
            }, {
                key: "_getAvailabilityRadius",
                value: function() {
                    return this.pin.getGeodesicCrosshairRadius()
                }
            }, {
                key: "_toggleButtonAndPin",
                value: function(e) {
                    e ? (this._showButton(),
                        this.pin.toggleVisibility(!1)) : (this._hideButton(),
                        this.pin.toggleVisibility(!0))
                }
            }, {
                key: "_hideButton",
                value: function() {
                    this.model.set({
                        visible: !1
                    })
                }
            }, {
                key: "_showButton",
                value: function() {
                    this.model.set({
                        visible: !0
                    })
                }
            }, {
                key: "onRender",
                value: function() {
                    this.$el.tooltip({
                            title: I18n.t("street_view.tooltip"),
                            placement: "left",
                            container: "body",
                            delay: {
                                show: 750
                            }
                        }),
                        this.stickit()
                }
            }, {
                key: "destroy",
                value: function() {
                    this._unbindEvents()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/StreetView/templates/street-view-button"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(31)),
        r = s(n(125));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OL.Class(OL.Marker, {
        DRAG_POINT_RADIUS: 7,
        CROSSHAIR_RADIUS: 22,
        initialize: function(e) {
            var t = this,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
            OL.Marker.prototype.initialize.call(this, e, new i.default("pin", !0));
            var s = (this.CROSSHAIR_RADIUS + this.DRAG_POINT_RADIUS) / Math.sqrt(2);
            this.crossHairOffset = new OL.Pixel(-s, -s),
                this.svProjection = new OpenLayers.Projection("EPSG:4326"),
                this.map = n,
                this.render();
            var a = this.icon.$div;
            this.dragging = new r.default(this.map),
                this.moved = !1,
                this.dragging.down = function(e) {
                    return t.moved = !1,
                        a.addClass("dragging"),
                        t.events.triggerEvent("dragStart", {
                            xy: e.xy,
                            marker: t
                        })
                },
                this.dragging.force = function(e) {
                    return t.moved = !1,
                        a.addClass("dragging"),
                        t.events.triggerEvent("dragStart", {
                            marker: t
                        })
                },
                this.dragging.move = function(e) {
                    t.moved = !0,
                        t.lonlat = t.map.getLonLatFromViewPortPx(e.xy.offset(t.crossHairOffset));
                    var n = t.lonlat.clone().transform(t.map.getProjectionObject(), t.svProjection);
                    return t.layer.drawMarker(t),
                        t.events.triggerEvent("drag", {
                            xy: e.xy,
                            marker: t,
                            svLonlat: n
                        })
                },
                this.dragging.up = function(e) {
                    t.moved || (a.removeClass("dragging"),
                        t.events.triggerEvent("dragCancel", {}))
                },
                this.dragging.done = function(e) {
                    if (t.moved)
                        return t.icon.$div.removeClass("dragging"),
                            t.events.triggerEvent("dragDone", {
                                xy: e.xy,
                                marker: t
                            })
                },
                this.dragging.activate(this.dragHandle)
        },
        render: function() {
            this.crossHair = $("<div />").addClass("crosshair").appendTo(this.icon.$div),
                this.dragHandle = $("<div />").addClass("drag-handle").appendTo(this.icon.$div),
                this.arrow = $("<div/>").append($("<i/>").addClass("fa fa-arrow-up arrow")).appendTo(this.crossHair)
        },
        setPanoAvailable: function(e) {
            return this.icon.$div.toggleClass("pano-available", e)
        },
        setCrosshairAngle: function(e) {
            return this.arrow.css({
                transform: "rotate(" + e + "deg)"
            })
        },
        setCrosshairLonlat: function(e) {
            return this.lonlat = e.clone().transform(this.svProjection, this.map.getProjectionObject()),
                this.layer.drawMarker(this)
        },
        toggleVisibility: function(e) {
            return this.icon.display(e)
        },
        getGeodesicCrosshairRadius: function() {
            return this.CROSSHAIR_RADIUS * this.map.getGeodesicPixelSize().h * 1e3
        },
        getCrosshairRadius: function() {
            return this.CROSSHAIR_RADIUS * this.map.resolution
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = 0,
        r = 1,
        s = 2,
        a = Backbone.Model.extend({
            socket: null,
            displayProjection: new OpenLayers.Projection("EPSG:4326"),
            initialize: function(e) {
                var t = e.app,
                    n = void 0 === t ? null : t,
                    r = e.authCookieName,
                    s = void 0 === r ? "" : r;
                this._app = n,
                    this._authCookieName = s,
                    this._mode = i,
                    this._app.on("change:loggedIn", this._onLoginChanged, this)
            },
            _onLoginChanged: function() {
                if (this._app.get("loggedIn"))
                    return this.activate()
            },
            activate: function() {
                var e = this;
                if (null == this.socket) {
                    var t = {},
                        n = void 0;
                    try {
                        n = $.cookie(this._authCookieName)
                    } catch (e) {
                        console.error("Marx error reading cookie", e)
                    }
                    t.sessionId = n;
                    var a = W.Config.marx.server + "/chat?" + $.param(t);
                    return this.socket = io.connect(a, {
                            "try multiple transports": !1
                        }),
                        this.socket.on("connect", function() {
                            return e._mode === i ? (e._mode = r,
                                e.trigger("firstConnect")) : (e._mode = s,
                                e.trigger("reconnect"))
                        }),
                        this.socket.on("disconnect", function() {
                            return e.trigger("disconnect")
                        })
                }
            },
            CLASS_NAME: "Waze.Model.Marx"
        });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(0)),
        r = u(n(1)),
        s = u(n(1189)),
        a = u(n(1190)),
        o = u(n(1198)),
        l = u(n(422));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function() {
        function e(t) {
            return (0,
                    i.default)(this, e),
                this.mediator = t.mediator,
                this.map = t.map,
                this.mapLayer = t.mapLayer,
                this.streetViewController = t.streetViewController,
                this.pannable = this.map.getPannable(),
                this.layer = new s.default({
                    $el: this.mapLayer.$div,
                    mediator: t.mediator
                }),
                W.commands.setHandler("place_updates:list", this._showVenue.bind(this)),
                W.reqres.setHandler("updaterequests:browse", this._browseUpdateRequest.bind(this))
        }
        return (0,
                r.default)(e, [{
                key: "_showVenue",
                value: function(e) {
                    var t = {
                        venue: e,
                        venueIterator: function() {
                            var t = e.model.venues.getObjectArray(),
                                n = new o.default(t);
                            return n.sortByDistanceFrom(e),
                                n
                        }
                    };
                    return this._createBrowser(t).show()
                }
            }, {
                key: "_browseUpdateRequest",
                value: function(e) {
                    var t = e.updateRequest.get("place");
                    e = {
                        venue: t,
                        updateRequests: [e.updateRequest],
                        showNext: e.showNext,
                        nextButtonString: e.nextButtonString,
                        venueIterator: function() {
                            return new o.default([t])
                        }
                    };
                    var n = this._createBrowser(e);
                    n.show(),
                        this._showLayers(t);
                    var i = new l.default;
                    return n.on("nextClicked", function() {
                            return i.next()
                        }),
                        i
                }
            }, {
                key: "_createBrowser",
                value: function(e) {
                    var t = this;
                    _.defaults(e, {
                        showDebug: this.mediator.get("advancedTools"),
                        pannable: this.pannable,
                        streetViewController: this.streetViewController
                    });
                    var n = new a.default(e);
                    return n.on("close", function() {
                            return t.layer.unhighlightAllMarkers()
                        }),
                        n.on("show", function(e) {
                            return t.layer.highlightMarker(e)
                        }),
                        n
                }
            }, {
                key: "_showLayers",
                value: function(e) {
                    return this.map.showLayerByObjectType(e.type),
                        this.mapLayer.setVisibility(!0)
                }
            }]),
            e
    }();
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        initialize: function(e) {
            this.mediator = e.mediator,
                this.setElement(e.$el)
        },
        events: {
            "click .place-update": "_onMarkerClicked"
        },
        _onMarkerClicked: function(e) {
            if (this.mediator.get("editingEnabled")) {
                var t = $(e.target).data("model");
                return W.commands.execute("place_updates:list", t)
            }
        },
        _findMarkerByVenueId: function(e) {
            return this.$el.find("[data-id='" + e + "']")
        },
        highlightMarker: function(e) {
            this.$el.addClass("highlight-selected");
            var t = this._findMarkerByVenueId(e.getID());
            return t.addClass("selected"),
                this._moveToTop(t)
        },
        _moveToTop: function(e) {
            return e.detach().appendTo(this.$el)
        },
        unhighlightAllMarkers: function() {
            return this.$el.removeClass("highlight-selected"),
                this.$el.find(".place-update").removeClass("selected")
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1191),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.Object.extend({
        _nextVenue: null,
        initialize: function(e) {
            return this.venue = e.venue,
                this.pannable = e.pannable,
                this.streetViewController = e.streetViewController,
                this.dataModel = this.venue.model,
                this._generateIterator(),
                this.dataModel.events.register("mergeend", this, this._onVenuesChanged)
        },
        _generateIterator: function() {
            this.iterator = new this.options.venueIterator
        },
        show: function() {
            var e = this;
            this._getNextVenue();
            var t = new s.default({
                model: this.venue,
                nextVenue: this._nextVenue,
                updateRequests: this.options.updateRequests,
                showNext: this.options.showNext,
                showDebug: this.options.showDebug,
                nextButtonString: this.options.nextButtonString,
                streetViewController: this.streetViewController
            });
            return t.on("showNextVenueClicked", this._onNextVenueClicked.bind(this)),
                t.on("nextClicked", this._onNextClicked.bind(this)),
                t.on("destroy", this._close, this),
                t.on("focusClicked", function() {
                    return e._focusVenue(W.Config.place_updates.focusZoom)
                }),
                t.on("streetViewClicked", function() {
                    e._streetViewVenue()
                }),
                W.map.panelRegion.show(t),
                this._focusVenue(),
                this.trigger("show", this.venue)
        },
        _onVenuesChanged: function() {
            return this._generateIterator(),
                this._getNextVenue()
        },
        _onNextVenueClicked: function() {
            return this.venue = this._nextVenue,
                this.show()
        },
        _onNextClicked: function() {
            return this.trigger("nextClicked")
        },
        _close: function() {
            return this.dataModel.events.unregister("mergeend", this, this._onVenuesChanged),
                this.trigger("close")
        },
        _getNextVenue: function() {
            this._nextVenue = this.iterator.getNext(),
                null !== this._nextVenue && this._nextVenue.getID() === this.venue.getID() && (this._nextVenue = this.iterator.getNext())
        },
        _focusVenue: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.pannable.getZoom();
            this.pannable.panTo(this.venue.geometry.getBounds().getCenterLonLat(), e),
                W.Report.focusAction("locate", "pu_locate_clicked")
        },
        _streetViewVenue: function() {
            this.streetViewController.lookAtPlace(this.venue),
                W.Report.focusAction("streetview", "pu_streetview_clicked")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(418)),
        r = a(n(1197)),
        s = n(32);

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.View.extend({
        template: "templates/place_updates/layout",
        regions: {
            placeUpdate: ".place-update"
        },
        events: {
            "click .next": "_onNextClicked"
        },
        triggers: {
            "click .next-venue": "showNextVenueClicked"
        },
        ui: {
            navigation: ".navigation"
        },
        className: "place-update-edit",
        currentIndex: 0,
        dataModel: null,
        maxHeight: null,
        initialize: function() {
            return this.dataModel = this.model.model,
                this._setUpdateRequests(),
                this.listenTo(this.dataModel.venues, s.CHANGED, this._onVenuesChanged),
                this.listenTo(this.dataModel.venues, s.REMOVED, this._onVenuesDeleted),
                this.model.setSelected(!0)
        },
        _setUpdateRequests: function() {
            this.updateRequests = this.options.updateRequests,
                null == this.updateRequests && (this.updateRequests = _(this.model.attributes.venueUpdateRequests).sortBy(function(e) {
                    return e.get("dateAdded")
                }))
        },
        _onVenuesChanged: function(e) {
            var t = this;
            if (e.some(function(e) {
                    return e.getID() === t.model.getID() && e.isDeleted()
                }))
                return this.destroy()
        },
        _onVenuesDeleted: function(e) {
            var t = this;
            if (e.some(function(e) {
                    return e.getID() === t.model.getID()
                }))
                return this.destroy()
        },
        onDestroy: function() {
            return this.model.setSelected(!1)
        },
        serializeData: function() {
            var e = this._hasMoreUpdates();
            return {
                showNextButton: e || this.options.showNext || !1,
                showNextVenueButton: !e && null !== this.options.nextVenue,
                showNextIssueButton: this.options.showNextIssueButton,
                nextButtonString: this.options.nextButtonString || I18n.t("venues.update_requests.panel.next"),
                nextButtonClass: this.options.nextButtonClass
            }
        },
        onRender: function() {
            return this._showCurrentUpdateView(),
                this._setHeight()
        },
        _showCurrentUpdateView: function() {
            var e = this,
                t = this.updateRequests[this.currentIndex],
                n = i.default;
            "flag" === t.get("updateType") && (n = r.default);
            var s = new n({
                model: t,
                venue: this.model,
                showDebug: this.options.showDebug,
                streetViewController: this.options.streetViewController
            });
            return this.listenTo(s, "focusClicked", function() {
                    e.trigger("focusClicked")
                }),
                this.listenTo(s, "streetViewClicked", function() {
                    e.trigger("streetViewClicked")
                }),
                this.showChildView("placeUpdate", s)
        },
        _hasMoreUpdates: function() {
            return this.currentIndex < this.updateRequests.length - 1
        },
        _onNextClicked: function() {
            return this._hasMoreUpdates() && (this.currentIndex++,
                    this.render()),
                this.trigger("nextClicked")
        },
        setMaxHeight: function(e) {
            return this.maxHeight = e,
                this._setHeight()
        },
        _setHeight: function() {
            return this.$el.css({
                    maxHeight: this.maxHeight
                }),
                this.getChildView("placeUpdate").setMaxHeight(this.maxHeight - this.ui.navigation.outerHeight())
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(382)),
        r = a(n(419)),
        s = a(n(1195));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.CollectionView.extend({
        childView: function(e) {
            return e instanceof i.default ? s.default : r.default
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1194),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CompositeView.extend({
        template: "templates/place_updates/external_provider/list",
        childView: s.default,
        childViewContainer: ".diff-list",
        initialize: function() {
            this.venue = this.options.venue;
            var e = this.venue.attributes.externalProviderIDs.map(function(e) {
                return e.clone()
            });
            this.collection = new Backbone.Collection(e)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(13)),
        r = s(n(420));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.View.extend({
        template: "templates/place_updates/external_provider/item",
        tagName: "li",
        behaviors: {
            ToolTip: {
                behaviorClass: r.default,
                layerClassName: "suggested-geometry-layer"
            }
        },
        events: {
            "mouseover .anchor": "_onAnchorOver",
            "mouseout .anchor": "_onAnchorOut"
        },
        bindings: {
            ".external-provider-link": {
                observe: "name",
                attributes: [{
                    name: "href",
                    observe: "url"
                }]
            }
        },
        onRender: function() {
            this.model.getDetails(),
                this.stickit(this.model, this.bindings)
        },
        _onAnchorOver: function() {
            var e = this.model.get("location");
            if (e) {
                var t = new OpenLayers.Geometry.Point(e.lng, e.lat);
                i.default.project(t);
                var n = new OL.Feature.Vector(t, {}, {
                    pointRadius: 6,
                    fillColor: "#c290c6",
                    strokeWidth: 3,
                    strokeColor: "#00ece3"
                });
                this.triggerMethod("show:tooltip", t.getBounds().getCenterLonLat(), this.model.get("name"), "", n)
            }
        },
        _onAnchorOut: function() {
            this.triggerMethod("hide:tooltip")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(419)),
        r = s(n(16));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function(e, t) {
            var n = t.attributes.categoryAttributes;
            if (n && n.PARKING_LOT)
                return n.PARKING_LOT[e]
        },
        o = function(e, t) {
            var n = a(e, t);
            return null !== n && void 0 !== n ? _.isArray(n) ? n.map(function(t) {
                return I18n.t("edit.landmark.parking.types." + e + "." + t)
            }) : I18n.t("edit.landmark.parking.types." + e + "." + n) : null
        },
        l = i.default.extend({
            template: "templates/place_updates/changed_field_parking_lot",
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : a(t, e)
            },
            valueGetters: {
                canExitWhileClosed: function(e) {
                    return r.default.formatYesNo(a("canExitWhileClosed", e))
                },
                estimatedNumberOfSpots: function(e) {
                    return o("estimatedNumberOfSpots", e)
                },
                costType: function(e) {
                    return o("costType", e)
                },
                lotType: function(e) {
                    return o("lotType", e)
                },
                paymentType: function(e) {
                    return o("paymentType", e)
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t(e, n, s, o) {
            (0,
                r.default)(this, t);
            var l = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, o));
            return l.venue = e,
                l.request = n,
                l.approved = s,
                l.prevApproved = null,
                l
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    return this.prevApproved = this.request.get("approved"),
                        this.request.set({
                            approved: this.approved
                        }),
                        this.model.venues.changed(this.venue)
                }
            }, {
                key: "undoAction",
                value: function() {
                    return this.request.set({
                            approved: this.prevApproved
                        }),
                        this.model.venues.changed(this.venue)
                }
            }, {
                key: "redoAction",
                value: function() {
                    return this.request.set({
                            approved: this.approved
                        }),
                        this.model.venues.changed(this.venue)
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: "venueUpdateRequest",
                        action: "UPDATE",
                        attributes: {
                            venueID: this.venue.getID(),
                            id: this.request.id,
                            approve: this.approved
                        }
                    }
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.venue.getUniqueID()]
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.venue]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    !0 === this.approved ? this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.approved") : !1 === this.approved ? this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.rejected") : null === this.approved && (this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.reopened"))
                }
            }]),
            t
    }(l(n(20)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(418),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend({
        template: "templates/place_updates/flag",
        APPROVE_ACTION_NAMES: {
            default: I18n.t("venues.update_requests.panel.action.solved"),
            DUPLICATE: I18n.t("venues.update_requests.panel.action.merge"),
            CLOSED: I18n.t("venues.update_requests.panel.action.delete")
        },
        APPROVE_ACTION_INTENT: {
            CLOSED: "danger"
        },
        COMMENT_TYPES: {
            WRONG_DETAILS: !0,
            CLOSED: !0,
            INAPPROPRIATE: !0
        },
        serializeData: function() {
            var e = this.model.isImage(),
                t = e ? this.model.getImage() : null;
            return {
                model: this.model,
                venue: this.options.venue,
                showImage: e,
                image: t,
                showAddingUser: e,
                showComment: this.COMMENT_TYPES[this.model.get("type")],
                showDuplicateVenue: this.model.get("type") === this.model.TYPE.DUPLICATE,
                showDebug: this.options.showDebug
            }
        },
        templateContext: _({}).extend(s.default.prototype.templateContext, {
            getTitle: function() {
                var e = this.model.get("subject");
                return I18n.t("venues.update_requests.panel.flag_title." + e)
            },
            getApproveActionName: function() {
                if (this.model.isVenue()) {
                    var e = a.prototype.APPROVE_ACTION_NAMES;
                    return e[this.model.get("type")] || e.default
                }
                return I18n.t("venues.update_requests.panel.action.delete_picture")
            },
            getApproveActionIntent: function() {
                return this.model.isImage() ? "danger" : a.prototype.APPROVE_ACTION_INTENT[this.model.get("type")] || "default"
            },
            getRejectActionName: function() {
                return I18n.t("venues.update_requests.panel.action.reject_flag")
            },
            getRejectedLabel: function() {
                return I18n.t("venues.update_requests.panel.ignored")
            },
            getApprovedLabel: function() {
                return I18n.t("venues.update_requests.panel.solved")
            }
        })
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this._currentIndex = 0,
                this._venues = _.filter(t, function(e) {
                    return e.areUpdateRequestsEditable() && e.hasOpenUpdateRequests() && !e.attributes.residential && !e.attributes.adLocked
                })
        }
        return (0,
                r.default)(e, [{
                key: "sortByDistanceFrom",
                value: function(e) {
                    this.reset();
                    var t = e.geometry.getBounds().getCenterLonLat();
                    this._venues = _(this._venues).sortBy(function(e) {
                        var n = e.geometry.getBounds().getCenterLonLat(),
                            i = t.lon - n.lon,
                            r = t.lat - n.lat;
                        return i * i + r * r
                    })
                }
            }, {
                key: "getNext",
                value: function() {
                    return this._currentIndex >= this._venues.length ? null : this._venues[this._currentIndex++]
                }
            }, {
                key: "reset",
                value: function() {
                    this._currentIndex = 0
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(0)),
        r = l(n(1)),
        s = l(n(422)),
        a = l(n(1200)),
        o = l(n(1201));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this.editController = null,
                this.mediator = t.mediator,
                this.mapLayers = t.mapLayers,
                this.streetViewController = t.streetViewController,
                this._listenToLayerClicks(),
                W.commands.setHandler("problems:show", this.showProblem, this),
                W.reqres.setHandler("problems:browse", this.browseProblem, this)
        }
        return (0,
                r.default)(e, [{
                key: "showProblem",
                value: function(e) {
                    var t = this,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    return this.editController && this.editController.destroy(),
                        this.editController = new o.default({
                            problem: e,
                            showDebug: this.mediator.get("advancedTools"),
                            showNext: n.showNext,
                            nextButtonString: n.nextButtonString,
                            streetViewController: this.streetViewController
                        }),
                        this.editController.on("destroy", function() {
                            return t.editController = null,
                                W.vent.trigger("problems:closed")
                        }),
                        W.vent.trigger("problems:shown", e)
                }
            }, {
                key: "browseProblem",
                value: function(e) {
                    var t = e.problem;
                    this.showProblem(t, e),
                        this._showLayer(t);
                    var n = new s.default;
                    return e.showNext && this.editController.on("nextClicked", function() {
                            return n.next()
                        }),
                        n
                }
            }, {
                key: "showProblemStream",
                value: function(e) {
                    var t = this;
                    if (e.hasNext()) {
                        var n = e.next(),
                            i = e.hasNext();
                        return this.showProblem(n, {
                                showNext: i
                            }),
                            i ? this.editController.on("nextClicked", function() {
                                return t.showProblemStream(e)
                            }) : void 0
                    }
                }
            }, {
                key: "_showLayer",
                value: function(e) {
                    return W.map.showLayerByObjectType(e.type)
                }
            }, {
                key: "_listenToLayerClicks",
                value: function() {
                    var e = this;
                    this.mapLayers.forEach(function(t) {
                        return $(t.div).on("click", ".map-problem", e._onProblemMarkerClicked.bind(e))
                    })
                }
            }, {
                key: "_onProblemMarkerClicked",
                value: function(e) {
                    if (this.mediator.get("editingEnabled")) {
                        var t = $(e.target).data("model"),
                            n = new a.default(t.type).sortByDistance(t);
                        return this.showProblemStream(n)
                    }
                }
            }]),
            e
    }();
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t) {
            (0,
                i.default)(this, e);
            var n = this._getRepository(t);
            this.problems = n.getObjectArray()
        }
        return (0,
                r.default)(e, [{
                key: "_getRepository",
                value: function(e) {
                    var t = this.TYPE_TO_REPO[e];
                    return W.model[t]
                }
            }, {
                key: "sortByDistance",
                value: function(e) {
                    return this.problems = _.sortBy(this.problems, function(t) {
                            return -1 * e.geometry.distanceTo(t.geometry)
                        }),
                        this
                }
            }, {
                key: "next",
                value: function() {
                    return this.problems.pop()
                }
            }, {
                key: "hasNext",
                value: function() {
                    return this.problems && this.problems.length > 0
                }
            }]),
            e
    }();
    a.prototype.TYPE_TO_REPO = {
            mapProblem: "problems",
            mapUpdateRequest: "mapUpdateRequests"
        },
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(1202)),
        r = l(n(1203)),
        s = l(n(1210)),
        a = n(32),
        o = l(n(1212));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = Marionette.Object.extend({
        initialize: function() {
            return this.problem = this.options.problem,
                this.streetViewController = this.options.streetViewController,
                this.adapter = r.default.createAdapter(this.problem),
                null != this.options.nextButtonString && this.adapter.setNextButtonString(this.options.nextButtonString),
                this.viewModel = new o.default({
                    adapter: this.adapter,
                    streetViewController: this.streetViewController
                }),
                this.mapView = new s.default({
                    map: W.map,
                    markerLayer: this.adapter.getMarkerLayer(),
                    adapter: this.adapter,
                    viewModel: this.viewModel
                }),
                this.mapView.centerProblem(),
                this.listenTo(this.viewModel, "change:problemState", this._onProblemStateChanged),
                this.listenTo(this.adapter.getRepository(), a.CHANGED, this._repositoryChanged),
                this.listenTo(this.adapter.getRepository(), a.ADDED, this._onProblemsAdded),
                this.editView = new i.default({
                    model: this.viewModel,
                    adapter: this.adapter,
                    showDebug: this.options.showDebug,
                    showNext: this.options.showNext
                }),
                this.listenTo(this.editView, "destroy", this.destroy),
                this.listenTo(this.editView, "focusClicked", this._onFocusClicked),
                this.listenTo(this.editView, "streetViewClicked", this._onStreetViewClicked),
                this.listenTo(this.editView, "nextClicked", this.trigger.bind(this, "nextClicked")),
                W.map.panelRegion.show(this.editView)
        },
        _onProblemStateChanged: function(e, t, n) {
            n.fromRepository || (this.adapter.setState(this.viewModel.get("problemState")),
                this.adapter.reportStateChanged())
        },
        _repositoryChanged: function() {
            return this.viewModel.set("problemState", this.adapter.getState(), {
                fromRepository: !0
            })
        },
        _onProblemsAdded: function() {
            var e = this.adapter.problem.getID(),
                t = this.adapter.getRepository().getObjectById(e);
            return null != t && (this.adapter.problem = t),
                this.mapView.selectMarker()
        },
        _onFocusClicked: function() {
            this.mapView.focusProblem(),
                W.Report.focusAction("locate", "mp_locate_clicked", this.adapter.problem.type)
        },
        _onStreetViewClicked: function() {
            this.streetViewController.lookAtPlace(this.adapter.problem),
                W.Report.focusAction("streetview", "mp_streetview_clicked", this.adapter.problem.type)
        },
        onDestroy: function() {
            return this.editView.destroy(),
                this.mapView.destroy()
        }
    });
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(391)),
        r = a(n(16)),
        s = n(14);

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.View.extend({
        maxHeight: null,
        template: "Waze/MapEditor/UI/Modules/Problems/templates/edit",
        events: {
            "click .done": "destroy",
            "click .title": "_onSectionTitleClicked",
            "click .focus": "_onFocusClicked",
            "click .street-view-btn": "_onStreetViewClicked"
        },
        triggers: {
            "click .next": "nextClicked"
        },
        regions: {
            conversationRegion: ".conversation-region"
        },
        ui: {
            problemData: ".problem-data",
            topSection: ".top-section",
            actions: ".actions",
            header: ".header",
            tooltips: ".tooltip"
        },
        bindings: {
            "input[name=state]": "problemState",
            ".more-info": {
                observe: "loadingMoreInfo",
                update: function(e, t) {
                    return e.toggleClass("loading", t)
                }
            },
            ".conversation": {
                observe: "loadingConversation",
                update: function(e, t) {
                    return e.toggleClass("loading", t)
                }
            },
            ".problem-edit": {
                observe: "problemState",
                update: function(e, t) {
                    return e.attr("data-state", t)
                }
            },
            ".not-available": {
                observe: "moreInfoAvailable",
                update: function(e, t) {
                    return e.toggle(!t)
                }
            },
            ".street-view-btn": {
                observe: "streetViewAvailable",
                visible: !0
            },
            ".street-view-tooltip": {
                observe: "streetViewAvailable",
                visible: !0,
                onGet: _.negate(Boolean)
            }
        },
        className: function() {
            return this.options.adapter.problem.type
        },
        initialize: function() {
            this.adapter = this.options.adapter
        },
        _bindMoreInfo: function() {
            var e = this,
                t = void 0;
            return this.adapter.getMoreInfoTypes().map(function(n) {
                return t = n.get("name"),
                    e.addBinding(n, "input[name=" + t + "]", "visible"),
                    e.addBinding(n, ".more-info-" + t + "-checkbox", {
                        observe: "available",
                        update: function(e, t) {
                            return e.toggle(t)
                        }
                    })
            })
        },
        _getMainTitle: function() {
            return this.adapter.problem.type === s.UPDATE_REQUEST ? I18n.t("problems.panel.titles.map_update_request") : I18n.t("problems.panel.titles.map_problem")
        },
        serializeData: function() {
            return {
                mainTitle: this._getMainTitle(),
                adapter: this.adapter,
                showDebug: this.options.showDebug,
                showNext: this.options.showNext,
                model: this.model
            }
        },
        onRender: function() {
            return this.adapter.isConversationAvailable() && this._renderConversationView(),
                this._bindMoreInfo(),
                this.stickit(),
                this.ui.tooltips.tooltip(),
                this._setHeight()
        },
        _renderConversationView: function() {
            var e = this;
            return this.adapter.getConversation().then(function(t) {
                return e.conversationView = new i.default({
                        commentable: t.getCommentable(),
                        enabled: e.adapter.allowCommenting()
                    }),
                    e.stickit(e.conversationView.viewModel, {
                        ".comment-count-badge": "commentCount"
                    }),
                    e.showChildView("conversationRegion", e.conversationView)
            })
        },
        _onSectionTitleClicked: function(e) {
            return $(e.target).parent(".section").toggleClass("collapsed")
        },
        _onFocusClicked: function(e) {
            return e.preventDefault(),
                this.trigger("focusClicked")
        },
        _onStreetViewClicked: function(e) {
            e.preventDefault(),
                this.trigger("streetViewClicked")
        },
        setMaxHeight: function(e) {
            return this.maxHeight = e,
                this._setHeight()
        },
        _setHeight: function() {
            var e = this.maxHeight - this.ui.actions.outerHeight();
            return this.ui.topSection.css({
                maxHeight: e
            })
        },
        templateContext: {
            showMoreInfoSection: function() {
                return this.adapter.getMoreInfoTypes().length > 0
            },
            showCloseDetails: function() {
                return !this.adapter.problem.editable
            },
            getCloseDate: function() {
                var e = this.adapter.problem.attributes.resolvedOn,
                    t = I18n.t("problems.panel.closed.not_available");
                return null != e && (t = I18n.l("date.formats.long", e)),
                    r.default.safe_t("problems.panel.closed.date", {
                        date_title: r.default.contentTag("strong", I18n.t("problems.panel.closed.date_title")),
                        date: t
                    })
            },
            getClosingUser: function() {
                var e = this.adapter.problem.attributes.resolvedBy,
                    t = I18n.t("problems.panel.closed.not_available");
                return null != e && (t = r.default.userProfile(e)),
                    r.default.safe_t("problems.panel.closed.user", {
                        user_title: r.default.contentTag("strong", I18n.t("problems.panel.closed.user_title")),
                        username: t
                    })
            }
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = c(n(15)),
        s = c(n(104)),
        a = c(n(1204)),
        o = c(n(1206)),
        l = c(n(1208)),
        u = c(n(378)),
        d = n(14);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = {},
        f = c(n(121)).default.prototype.TYPE,
        p = (i = {},
            (0,
                r.default)(i, f.DISCONNECTION, s.default),
            (0,
                r.default)(i, f.TURN, o.default),
            (0,
                r.default)(i, f.DATA, a.default),
            (0,
                r.default)(i, f.ROAD_CLOSURE, l.default),
            i);
    h.createAdapter = function(e) {
            return new(e.type === d.UPDATE_REQUEST ? u.default : p[e.attributes.problemType])(e)
        },
        t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(19)),
        r = s(n(1205));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = s(n(104)).default.extend({
        MORE_INFO_DEFAULTS: [],
        createMoreInfoRenderer: function(e, t, n) {
            return new r.default(e, t, n)
        },
        getMoreInfo: function() {
            var e = this;
            return null != this.moreInfo ? i.default.resolve(this.moreInfo) : this.problem.getSessions().then(function(t) {
                return e.moreInfo = t
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this.info = t,
                this.layer = n,
                this.displayOptions = r
        }
        return (0,
                r.default)(e, [{
                key: "drawMoreInfo",
                value: function() {
                    return this.layer.removeAllFeatures({
                            silent: !0
                        }),
                        this._drawSegments(),
                        this._drawVenue()
                }
            }, {
                key: "_drawSegments",
                value: function() {
                    if (null != this.info.segmentGeom && this.layer.driveRenderer.drawShortSegment(this.info.segmentGeom),
                        null != this.info.secondarySegmentGeom)
                        return this.layer.driveRenderer.drawShortSegment(this.info.secondarySegmentGeom)
                }
            }, {
                key: "_drawVenue",
                value: function() {
                    if (null != this.info.venueGeom)
                        return this.layer.driveRenderer.drawVenue(this.info.venueGeom)
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(19)),
        r = s(n(1207));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = s(n(104)).default.extend({
        MORE_INFO_DEFAULTS: [],
        createMoreInfoRenderer: function(e, t, n) {
            return new r.default(e, t, n)
        },
        getMoreInfo: function() {
            var e = this;
            return null != this.moreInfo ? i.default.resolve(this.moreInfo) : this.problem.getSessions().then(function(t) {
                return e.moreInfo = t,
                    t
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this.info = t,
                this.layer = n,
                this.displayOptions = r
        }
        return (0,
                r.default)(e, [{
                key: "drawMoreInfo",
                value: function() {
                    return this.layer.removeAllFeatures({
                            silent: !0
                        }),
                        this._drawSuggestedRoute(),
                        this._drawAlternatives()
                }
            }, {
                key: "_drawSuggestedRoute",
                value: function() {
                    return this.layer.driveRenderer.drawSuggestedRoute(this.info.routePrevSeg),
                        this.layer.driveRenderer.drawSuggestedRoute(this.info.routeNextSeg)
                }
            }, {
                key: "_drawAlternatives",
                value: function() {
                    for (var e = _.last(this.info.routePrevSeg.components).clone(), t = 0; t < this.info.alternatives.length; t++) {
                        var n = this.info.alternatives[t];
                        this.layer.driveRenderer.drawUserDrive(n.averageGeom),
                            this.layer.driveRenderer.drawDriveWeightPoint(e, n.averageGeom, n.numDrives.toString())
                    }
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(19)),
        r = a(n(104)),
        s = a(n(1209));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = r.default.extend({
        MORE_INFO_DEFAULTS: [],
        getTitle: function() {
            return I18n.t("problems.panel.closure.title")
        },
        getReportedString: function() {
            return I18n.t("problems.panel.closure.reported")
        },
        hasDescription: function() {
            return !0
        },
        getDescriptionTemplate: function() {
            return "Waze/MapEditor/UI/Modules/Problems/templates/closure_description"
        },
        getMoreInfo: function() {
            return i.default.resolve([this.problem])
        },
        createMoreInfoRenderer: function(e, t, n) {
            return new s.default(e, t, n)
        },
        getSolvedStateString: function() {
            return I18n.t("problems.panel.closure.states.solved")
        },
        getNotIdentifiedStateString: function() {
            return I18n.t("problems.panel.closure.states.not_identified")
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this.info = null,
                this.closureProblem = t,
                this.layer = n,
                this.displayOptions = r
        }
        return (0,
                r.default)(e, [{
                key: "drawMoreInfo",
                value: function() {
                    return this.layer.removeAllFeatures({
                            silent: !0
                        }),
                        this._drawPins()
                }
            }, {
                key: "_drawPins",
                value: function() {
                    if (this.closureProblem.hasEndPoint())
                        return this.layer.driveRenderer.drawPin(this.closureProblem.attributes.geometry, "A"),
                            this.layer.driveRenderer.drawPin(this.closureProblem.attributes.endPoint, "B")
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1211),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.Object.extend({
        layer: null,
        info: null,
        viewModel: null,
        initialize: function() {
            this.viewModel = this.options.viewModel,
                this.map = this.options.map,
                this.markerLayer = this.options.markerLayer,
                this.adapter = this.options.adapter,
                this.layer = new s.default("problemMoreInfo"),
                this.viewModel.get("loadingMoreInfo") ? this.listenTo(this.viewModel, "change:loadingMoreInfo", this._onMoreInfoLoaded) : this._onMoreInfoLoaded();
            for (var e = this.adapter.getMoreInfoTypes(), t = 0; t < e.length; t++) {
                var n = e[t];
                this.listenTo(n, "change:visible", this._drawMoreInfo)
            }
            this.selectMarker()
        },
        centerProblem: function() {
            var e = this.adapter.getGeometry(),
                t = new OL.LonLat(e.x, e.y);
            return this.map.setCenter(t)
        },
        focusProblem: function() {
            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                t = this.adapter.getBounds(),
                n = t.getCenterLonLat();
            return e ? (e = this.map.getZoomForExtent(t),
                    e = Math.min(e, W.Config.problems.maxDetailsZoom),
                    e = Math.max(e, W.Config.problems.minDetailsZoom)) : e = this.map.getZoom(),
                this.map.setCenter(n, e)
        },
        onDestroy: function() {
            return null != this.layer.map && this.map.removeLayer(this.layer),
                this.map.events.unregister("zoomend", this, this._drawMoreInfo),
                this._unselectMarker()
        },
        _onMoreInfoLoaded: function() {
            var e = this;
            return this.map.addLayer(this.layer),
                this.map.events.register("zoomend", this, this._drawMoreInfo),
                this.adapter.getMoreInfo().then(function(t) {
                    return e.info = t[0],
                        e._drawMoreInfo()
                })
        },
        _getDisplayOptions: function() {
            for (var e = {}, t = this.adapter.getMoreInfoTypes(), n = 0; n < t.length; n++) {
                var i = t[n];
                e[i.get("name")] = i.get("visible") && i.get("available")
            }
            return e
        },
        _drawMoreInfo: function() {
            return this.layer.removeAllFeatures({
                    silent: !0
                }),
                this.renderer = this.adapter.createMoreInfoRenderer(this.info, this.layer, this._getDisplayOptions()),
                this.renderer.drawMoreInfo()
        },
        selectMarker: function() {
            return this._toggleMarkerSelection(!0)
        },
        _unselectMarker: function() {
            return this._toggleMarkerSelection(!1)
        },
        _toggleMarkerSelection: function(e) {
            var t = this.adapter.problem.getID();
            return $(this.markerLayer.div).find("[data-id='" + t + "']").toggleClass("selected", e),
                $(this.map.div).toggleClass("problem-selected", e)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(213)),
        r = a(n(75)),
        s = a(n(212));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = OL.Class(OL.Layer.Vector, {
        rendererOptions: {
            zIndexing: !0
        },
        renderers: [r.default],
        styleMap: s.default,
        initialize: function() {
            OL.Layer.Vector.prototype.initialize.apply(this, arguments),
                this.driveRenderer = new i.default(this)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            loadingMoreInfo: !0,
            loadingConversation: !0,
            moreInfoAvailable: !0,
            streetViewAvailable: !1
        },
        initialize: function() {
            var e = this;
            this.adapter = this.get("adapter"),
                this.streetViewController = this.get("streetViewController"),
                this.set({
                    problemState: this.adapter.getState()
                }),
                this.adapter.getMoreInfo().then(function() {
                    return e.set({
                            loadingMoreInfo: !1
                        }),
                        e.set({
                            loadingConversation: !1
                        }),
                        e.set({
                            moreInfoAvailable: e.adapter.isMoreInfoAvailable()
                        })
                }),
                this._checkStreetViewAvailability()
        },
        _checkStreetViewAvailability: function() {
            var e = this;
            this.streetViewController && this.streetViewController.hasPlacePanaorama(this.adapter.problem).then(function(t) {
                e.set({
                    streetViewAvailable: t
                })
            })
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(423)),
        r = a(n(424)),
        s = n(110);

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.Object.extend({
        initialize: function(e) {
            this.controller = e.controller,
                this.mediator = e.mediator,
                this._setDefaultHandler(),
                W.commands.setHandler("save:restoreDefaultHandler", this._setDefaultHandler, this),
                W.commands.setHandler("save:setHandler", this._setHandler, this),
                this.savePopoverRegion = new r.default({
                    saveButtonSelector: "#toolbar .waze-icon-save"
                })
        },
        _startSave: function() {
            var e = this,
                t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = this.controller.save(t);
            null != this.flowController && this.flowController.destroy(),
                this.flowController = new i.default({
                    map: W.map,
                    mediator: this.mediator,
                    popoverRegion: this.savePopoverRegion
                }),
                n.then(function(t) {
                    e.flowController.success(t)
                }).catch(function(t) {
                    if (!(t instanceof s.SaveError))
                        throw t;
                    e.flowController.fail(t.errors)
                }),
                this.flowController.on("resave", function() {
                    e._startSave({
                        ignoreWarnings: !0
                    })
                })
        },
        _setDefaultHandler: function() {
            this._setHandler(this._startSave, this)
        },
        _setHandler: function(e, t) {
            W.commands.setHandler("save:start", e, t)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1215),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = new OpenLayers.StyleMap({
        default: new OpenLayers.Style({
            pointerEvents: "none",
            strokeLinecap: "square",
            strokeWidth: 5
        })
    });
    a.addUniqueValueRules("default", "type", {
            homePin: {
                pointerEvents: "visiblePainted",
                externalGraphic: s.default,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            }
        }),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/home-pin274fef96719c46ce1a4cf43e3b4a86b9.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(216),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Backbone.Collection.extend({
        model: s.default,
        isIgnorable: function() {
            return this.all(function(e) {
                return e.get("ignorable")
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1218),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CompositeView.extend({
        childView: s.default,
        childViewContainer: ".list",
        template: "Waze/MapEditor/UI/Modules/Save/templates/error_list",
        events: {
            "click .save": "_onSaveClicked",
            "click .edit": "destroy",
            "click .close-button": "destroy"
        },
        childViewEvents: function() {
            return {
                "click:focus": this._onChildFocusClicked
            }
        },
        _onChildFocusClicked: function(e) {
            return this.trigger("click:focus", e.model)
        },
        _onSaveClicked: function() {
            return this.trigger("click:save")
        },
        serializeData: function() {
            return {
                collection: this.collection
            }
        },
        templateContext: {
            getTitle: function() {
                return this.collection.isIgnorable() ? I18n.t("save.error.title_ignorable") : I18n.t("save.error.title")
            },
            showActionTitle: function() {
                return this.collection.isIgnorable()
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(216),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Save/templates/error_item",
        tagName: "li",
        className: "error-item",
        events: {
            "click .focus": "_onFocusClicked"
        },
        _onFocusClicked: function() {
            return this.trigger("click:focus")
        },
        serializeData: function() {
            var e = Marionette.View.prototype.serializeData.apply(this, arguments);
            e.title = this._getTranslatedTitle() || this._getServerTitle() || this._getDefaultTitle(),
                e.solution = this._getSolution(),
                e.showPanButton = null !== this.model.get("geometry");
            var t = this.model.get("collatedCount");
            return null != t && t > 1 && (e.collated = I18n.t("save.error.collated", {
                    count: t
                })),
                e
        },
        _getTranslationsByCode: function(e) {
            return I18n.t("save.error_types")[e]
        },
        _getDefaultTitle: function() {
            var e = s.default.prototype.defaults.code,
                t = this._getTranslationsByCode(e);
            if (t)
                return t.title
        },
        _getServerTitle: function() {
            return this.model.get("details")
        },
        _getTranslatedTitle: function() {
            var e = this._getTranslationsByCode(this.model.get("code"));
            if (e)
                return e.title
        },
        _getSolution: function() {
            var e = this._getTranslationsByCode(this.model.get("code"));
            return e && e.solution ? e.solution : I18n.t("save.default_solution")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(16),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        CLOSE_TIMEOUT_MILLIS: 2e3,
        template: "Waze/MapEditor/UI/Modules/Save/templates/success",
        serializeData: function() {
            return {
                venueNames: this._getVenueNames(),
                model: this.model
            }
        },
        _getVenueNames: function() {
            var e = this.model.pendingEdits.venues.map(function(e) {
                return e.attributes.name
            });
            return _.compact(e),
                e.join(", ")
        },
        onRender: function() {
            return window.setTimeout(_.bind(this.destroy, this), this.CLOSE_TIMEOUT_MILLIS)
        },
        templateContext: function() {
            return {
                showPendingVenues: function() {
                    return this.model.pendingEdits.venues.length > 0
                },
                getSaveCountTextFor: function(e) {
                    var t = this.model.saveCount[e];
                    return t < 1 ? "" : s.default.contentTag("div", I18n.t("save.success.change_count." + e, {
                        count: t
                    }))
                }
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(10)),
        r = u(n(0)),
        s = u(n(1)),
        a = n(14),
        o = u(n(217)),
        l = n(72);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function() {
        function e(t, n, i) {
            var s = this;
            (0,
                r.default)(this, e),
            this.model = t,
                this.events = new OpenLayers.Events(this),
                this._selectedFeatures = [],
                this._requireDeselect = W.prefs.get("requireFeatureDeselect"),
                this._layers = n,
                this._objectTypeToLayer = {},
                this._deselectOnToggle = !0,
                this._mouseInFeature = null,
                this._layers.forEach(function(e) {
                    return s._objectTypeToLayer[e.featureType] = e
                }),
                this._enabled = !0,
                this.selectionMediator = i,
                this._bindEvents()
        }
        return (0,
                s.default)(e, [{
                key: "_bindEvents",
                value: function() {
                    var e = this;
                    this._layers.forEach(function(t) {
                            t.events.on({
                                visibilitychanged: e._layerVisibilityChanged,
                                scope: e
                            })
                        }),
                        W.prefs.on("change:requireFeatureDeselect", function(e, t) {
                            this._requireDeselect = t
                        }, this),
                        this._bindSelectionMediatorEvents()
                }
            }, {
                key: "_bindSelectionMediatorEvents",
                value: function() {
                    this._toggleMediatorEvents(!0)
                }
            }, {
                key: "_unbindSelectionMediatorEvents",
                value: function() {
                    this._toggleMediatorEvents(!1)
                }
            }, {
                key: "_toggleMediatorEvents",
                value: function(e) {
                    var t = e ? "on" : "off";
                    this.selectionMediator[t]("map:selection:pathSelect", this._onSelectPath, this),
                        this.selectionMediator[t]("map:selection:featureClick", this._onFeatureClicked, this),
                        this.selectionMediator[t]("map:selection:featureIn", this._onFeatureIn, this),
                        this.selectionMediator[t]("map:selection:featureOut", this._onFeatureOut, this),
                        this.selectionMediator[t]("map:selection:clickOut", this._onClickOut, this),
                        this.selectionMediator[t]("map:selection:featureBoxSelection", this._onFeatureBoxSelection, this),
                        this.selectionMediator[t]("map:selection:deselectKey", this._onDeselectKey, this)
                }
            }, {
                key: "_onDeselectKey",
                value: function() {
                    this.unselectAll()
                }
            }, {
                key: "_onFeatureClicked",
                value: function(e) {
                    var t = e.feature;
                    if (t.model && !t.model.isDeleted() && t) {
                        if (this.isSelected(t) && this._deselectOnToggle)
                            return void(e.addSelection && this._selectedFeatures.length > 1 ? this.unselectFeatures(t, !1) : this.unselectAll());
                        if (!e.addSelection || !this._canAddSelection(t)) {
                            if (this._requireDeselect && this._selectedFeatures.length > 0)
                                return;
                            this.unselectAll(!1)
                        }
                        this.selectFeatures(t, !1)
                    }
                }
            }, {
                key: "_onFeatureIn",
                value: function(e) {
                    this._mouseInFeature = e,
                        this.highlight(e)
                }
            }, {
                key: "_onFeatureOut",
                value: function(e) {
                    this._mouseInFeature = null,
                        this.unhighlight(e)
                }
            }, {
                key: "highlight",
                value: function(e) {
                    this._isFeatureHighlightable(e) && this.selectionMediator.highlight(e, this.isSelected(e), e.model.isDeleted())
                }
            }, {
                key: "unhighlight",
                value: function(e) {
                    this._isFeatureHighlightable(e) && this.selectionMediator.unhighlight(e, this.isSelected(e), e.model.isDeleted())
                }
            }, {
                key: "_isFeatureHighlightable",
                value: function(e) {
                    return Boolean(e.model)
                }
            }, {
                key: "recalculateStyle",
                value: function(e) {
                    e === this._mouseInFeature ? this.highlight(e) : this.unhighlight(e)
                }
            }, {
                key: "_onClickOut",
                value: function() {
                    this.unselectAll(!1)
                }
            }, {
                key: "_onFeatureBoxSelection",
                value: function(e) {
                    e && e.length > 0 && (this._canAddSelection(e[0]) || this.unselectAll(!1),
                        this.selectFeatures(e, !1))
                }
            }, {
                key: "_layerVisibilityChanged",
                value: function(e) {
                    var t = e.object;
                    t.getVisibility() || this._selectedFeatures.filter(function(e) {
                        return e.layer === t
                    }).forEach(this.unselectFeature.bind(this))
                }
            }, {
                key: "isSelected",
                value: function(e) {
                    return this._selectedFeatures.includes(e)
                }
            }, {
                key: "selectFeature",
                value: function(e) {
                    return !(!e || this.isSelected(e)) && (this._selectedFeatures.push(e),
                        e.model && e.model.setSelected(!0),
                        !0)
                }
            }, {
                key: "unselectFeature",
                value: function(e, t) {
                    if (e && this.isSelected(e)) {
                        var n = this._selectedFeatures.indexOf(e);
                        this._selectedFeatures.splice(n, 1),
                            e.model && e.model.setSelected(!1),
                            this._triggerUnSelected([e], t),
                            this._triggerSelectionChanged(t)
                    }
                }
            }, {
                key: "unselectAll",
                value: function(e) {
                    if (this._selectedFeatures.length > 0) {
                        var t = this._selectedFeatures;
                        t.forEach(function(e) {
                                e.model.setSelected(!1)
                            }),
                            this._selectedFeatures = [],
                            this._triggerUnSelected(t, e),
                            this._triggerSelectionChanged(e)
                    }
                }
            }, {
                key: "selectFeatures",
                value: function(e, t) {
                    if (Array.isArray(e) || (e = [e]),
                        0 !== e.length) {
                        for (var n = [], i = 0; i < e.length; i++) {
                            var r = e[i];
                            this.selectFeature(r) && n.push(r)
                        }
                        n.length > 0 && (this._triggerSelected(n, t),
                            this._triggerSelectionChanged(t))
                    }
                }
            }, {
                key: "setSelectedModels",
                value: function(e, t) {
                    var n = this;
                    this.unselectAll(),
                        Array.isArray(e) || (e = [e]);
                    var i = e.map(function(e) {
                        return n._objectTypeToLayer[e.type].getVector(e)
                    });
                    i = _.compact(i),
                        this.selectFeatures(i, t)
                }
            }, {
                key: "setSelection",
                value: function(e, t) {
                    for (var n = !1, i = this._selectedFeatures.length - 1; i >= 0; i--) {
                        var r = this._selectedFeatures[i];
                        e.contains(r) || (this.unselectFeature(r, !0),
                            n = !0)
                    }
                    for (var s = 0; s < e.length; s++) {
                        var a = e[s];
                        this._selectedFeatures.contains(a) || (this.selectFeature(a, !0),
                            n = !0)
                    }
                    n && this._triggerSelectionChanged(t)
                }
            }, {
                key: "_triggerSelectionChanged",
                value: function(e) {
                    e || this.events.triggerEvent("selectionchanged", {
                        selected: this._selectedFeatures
                    })
                }
            }, {
                key: "_triggerSelected",
                value: function(e, t) {
                    e.forEach(this.recalculateStyle.bind(this)),
                        t || this.events.triggerEvent("app:selection:featureselected", {
                            selection: this._selectedFeatures,
                            features: e
                        })
                }
            }, {
                key: "_triggerUnSelected",
                value: function(e, t) {
                    t || this.events.triggerEvent("app:selection:featureunselected", {
                            selection: this._selectedFeatures,
                            features: e
                        }),
                        e.forEach(this.recalculateStyle.bind(this))
                }
            }, {
                key: "destroy",
                value: function() {
                    var e = this;
                    this._layers.forEach(function(t) {
                        return t.events.un({
                            visibilitychanged: e._layerVisibilityChanged,
                            scope: e
                        })
                    })
                }
            }, {
                key: "_onSelectPath",
                value: function(e) {
                    var t = e.feature;
                    if (0 !== this._selectedFeatures.length) {
                        var n = this._selectedFeatures[0].model,
                            r = t.model;
                        if (!(this._selectedFeatures.length > 1 || n.type !== a.SEGMENT)) {
                            var s = function(e) {
                                    return e.getID() === r.getID()
                                },
                                l = o.default.bfs(n, function(e) {
                                    return e.attributes.primaryStreetID === n.attributes.primaryStreetID
                                }, s),
                                u = (0,
                                    i.default)(l, 2),
                                d = u[0],
                                c = u[1];
                            if (null === d) {
                                var h = o.default.bfs(n, function() {
                                    return !0
                                }, s);
                                c = (0,
                                    i.default)(h, 2)[1]
                            }
                            var f = this._getPathFromVisitedSegments(c, n, r);
                            return f.length <= 25 ? this.setSelectedModels(f) : void 0
                        }
                    } else
                        this.selectFeature(t)
                }
            }, {
                key: "_getPathFromVisitedSegments",
                value: function(e, t, n) {
                    for (var i = n.getID(), r = t.getID(), s = []; i !== r && null != i;)
                        s.push(i),
                        i = e[i];
                    return s.push(t.getID()),
                        s.map(function(e) {
                            return W.model.segments.getObjectById(e)
                        })
                }
            }, {
                key: "_getSelectionCountByType",
                value: function() {
                    var e = this._selectedFeatures.map(function(e) {
                        return e.model.type
                    });
                    return _.countBy(e, _.identity)
                }
            }, {
                key: "unselectFeatures",
                value: function(e, t, n) {
                    if (Array.isArray(e) || (e = [e]),
                        0 !== e.length) {
                        for (var i = !1, r = [], s = e.length - 1; s >= 0; s--) {
                            var a = e[s];
                            _.contains(this._selectedFeatures, a) && (this.unselectFeature(a, !0),
                                r.push(a),
                                i = !0)
                        }
                        r.length > 0 && this._triggerUnSelected(r, n),
                            i && this._triggerSelectionChanged(t, n)
                    }
                }
            }, {
                key: "_canAddSelection",
                value: function(e) {
                    var t = e.model.type,
                        n = this._selectedFeatures[0] && this._selectedFeatures[0].model.type !== t,
                        i = e.model.isResidential && e.model.isResidential() || this._selectedFeatures[0] && this._selectedFeatures[0].model.isResidential && this._selectedFeatures[0].model.isResidential(),
                        r = t === a.SEGMENT || t === a.VENUE && (0,
                            l.isFeatureFlagEnabled)(l.FEATURE_FLAGS.MERGE_PLACES);
                    return !(i || n || !r)
                }
            }, {
                key: "hasSelectedFeatures",
                value: function() {
                    return !_.isEmpty(this._selectedFeatures)
                }
            }, {
                key: "getReversedSegments",
                value: function() {
                    var e = _(this._selectedFeatures.filter(function(e) {
                        return e.model.type === a.SEGMENT
                    })).pluck("model");
                    return o.default.getReversedSegments(e)
                }
            }, {
                key: "toggleMultipleSelection",
                value: function() {
                    this.selectionMediator.toggleMultipleSelection()
                }
            }, {
                key: "getSelectableRepos",
                value: function() {
                    return this._layers.map(function(e) {
                        return e.repo
                    }).filter(function(e) {
                        return void 0 !== e
                    }).map(function(e) {
                        return e[0]
                    })
                }
            }, {
                key: "getSelectedFeatures",
                value: function() {
                    return this._selectedFeatures.concat()
                }
            }, {
                key: "disable",
                value: function() {
                    this._enabled && (this.selectionMediator.resetState(),
                        this._unbindSelectionMediatorEvents(),
                        this._enabled = !1)
                }
            }, {
                key: "enable",
                value: function() {
                    this._enabled || (this._bindSelectionMediatorEvents(),
                        this._enabled = !0)
                }
            }]),
            e
    }();
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this._snapshot = !1,
                this._actionManager = t,
                this._actionManager.events.on({
                    hasActions: this._onActionsChanged,
                    noActions: this._onActionsChanged,
                    scope: this
                })
        }
        return (0,
                r.default)(e, [{
                key: "isSnapshotOn",
                value: function() {
                    return this._snapshot
                }
            }, {
                key: "canToggleOn",
                value: function() {
                    return !this._actionManager.canSave()
                }
            }, {
                key: "toggle",
                value: function(e) {
                    if (e !== this._snapshot)
                        return !1 === e && this._actionManager.clear(),
                            this._snapshot = e,
                            this._actionManager.toggleSavingEnabled(!e),
                            this.trigger("change:state")
                }
            }, {
                key: "_onActionsChanged",
                value: function() {
                    return this.trigger("change:togglable")
                }
            }]),
            e
    }();
    _.extend(a.prototype, Backbone.Events),
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(2)),
        r = f(n(0)),
        s = f(n(1)),
        a = f(n(3)),
        o = f(n(4)),
        l = f(n(1223)),
        u = f(n(1224)),
        d = f(n(1225)),
        c = f(n(13)),
        h = f(n(1226));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.panoramaProvider = new l.default,
                n.map = e.map,
                n.scene = new u.default,
                n.headingFinder = new h.default,
                n.model = new Backbone.Model({
                    isActive: !1
                }),
                n._streetViewWindowView = new d.default({
                    el: "#street-view-container",
                    streetViewController: n,
                    scene: n.scene,
                    map: n.map
                }),
                e.selectionManager.events.register("selectionchanged", n, n._onSelectionChanged),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getScene",
                value: function() {
                    return this.scene
                }
            }, {
                key: "isActive",
                value: function() {
                    return this.model.get("isActive")
                }
            }, {
                key: "activateStreetView",
                value: function() {
                    this._toggleStreetView(!0)
                }
            }, {
                key: "deactivateStreetView",
                value: function() {
                    this._toggleStreetView(!1)
                }
            }, {
                key: "_toggleStreetView",
                value: function(e) {
                    this.isActive() !== e && (this.model.set("isActive", e),
                        this.triggerMethod("stateChanged", e),
                        this._streetViewWindowView.setState(e),
                        this.map.toggleSVMode(e),
                        e ? W.Report.generalAction("streeview_started") : W.Report.generalAction("streeview_ended"))
                }
            }, {
                key: "lookAtPlace",
                value: function(e) {
                    var t = this,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50;
                    this.getPlacePanaorama(e, n).then(function(i) {
                        i && (t.activateStreetView(),
                            t.scene.set({
                                panorama: i,
                                features: [e]
                            }),
                            t.rotateHeadingTo(e, n))
                    })
                }
            }, {
                key: "rotateHeadingTo",
                value: function(e, t) {
                    var n = this.scene.getPanoramaProjectedLonlat(),
                        i = this.headingFinder.find(n, [e], t);
                    this.scene.set({
                        cameraHeading: i
                    })
                }
            }, {
                key: "lookAtCurrentItem",
                value: function(e, t) {
                    if (e) {
                        this.activateStreetView(),
                            this.scene.set({
                                panorama: e
                            });
                        var n = this.scene.get("features");
                        n.length > 0 && this.rotateHeadingTo(n[0], t)
                    }
                }
            }, {
                key: "_getItemLonLat",
                value: function(e) {
                    return c.default.unproject(e.geometry.getCentroid().clone()).toLonLat()
                }
            }, {
                key: "getPlacePanaorama",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50,
                        n = this._getItemLonLat(e);
                    return this.getPanorama(n, t)
                }
            }, {
                key: "hasPlacePanaorama",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50,
                        n = this._getItemLonLat(e);
                    return this.hasPanorama(n, t)
                }
            }, {
                key: "hasPanorama",
                value: function(e, t) {
                    return this.getPanorama(e, t).then(function(e) {
                        return Boolean(e)
                    }).catch(function() {
                        return !1
                    })
                }
            }, {
                key: "getPanorama",
                value: function(e, t) {
                    return this.panoramaProvider.getPanorama(e, t)
                }
            }, {
                key: "_onSelectionChanged",
                value: function(e) {
                    var t = _.pluck(e.selected, "model");
                    return this.scene.set({
                        features: t
                    })
                }
            }, {
                key: "getCurrentCameraLonLat",
                value: function() {
                    var e = this.scene.get("cameraLongLat");
                    return e ? e.clone() : null
                }
            }]),
            t
    }(Marionette.Object);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(19)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            (0,
                s.default)(this, e),
            this._streetViewProvider = null
        }
        return (0,
                a.default)(e, [{
                key: "getPanorama",
                value: function(e) {
                    var t = this,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.DEFAULT_SEARCH_RADIUS_METERS,
                        i = new google.maps.LatLng(e.lat, e.lon);
                    n *= this.SEARCH_RADIUS_PADDING_FACTOR,
                        n = Math.floor(n);
                    var s = google.maps.StreetViewStatus;
                    return new r.default(function(e, r) {
                        t._getStreetViewProvider().getPanoramaByLocation(i, n, function(t, n) {
                            switch (n) {
                                case s.OK:
                                    return e(t);
                                case s.ZERO_RESULTS:
                                    return e(null);
                                case s.UNKNOWN_ERROR:
                                    return r(new Error)
                            }
                        })
                    })
                }
            }, {
                key: "_getStreetViewProvider",
                value: function() {
                    return this._streetViewProvider || (this._streetViewProvider = new google.maps.StreetViewService)
                }
            }]),
            e
    }();
    (0,
        i.default)(l.prototype, {
        DEFAULT_SEARCH_RADIUS_METERS: 50,
        SEARCH_RADIUS_PADDING_FACTOR: 2
    }),
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(13));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        panorama: null,
                        cameraHeading: 0,
                        cameraLongLat: null,
                        features: []
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = this;
                    this.on("change:panorama", function() {
                        var t = e._getPanoramaLonLat();
                        e.set({
                            cameraLongLat: t
                        })
                    })
                }
            }, {
                key: "getPanoramaProjectedLonlat",
                value: function() {
                    return l.default.project(this._getPanoramaLonLat())
                }
            }, {
                key: "_getPanoramaLonLat",
                value: function() {
                    var e = this.get("panorama");
                    return e ? new OL.LonLat(e.location.latLng.lng(), e.location.latLng.lat()) : null
                }
            }]),
            t
    }(Backbone.Model);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(13));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .close-button": "_closePanoramaView"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        panoramaEl: ".panorama"
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.el = "#street-view-container",
                        this.panoramaView = null,
                        this._streetViewController = e.streetViewController,
                        this.scene = e.scene,
                        this.map = e.map,
                        W.accelerators.events.register("closeStreetView", this, this._closePanoramaView),
                        this._bindEvents()
                }
            }, {
                key: "_bindEvents",
                value: function() {
                    var e = this;
                    this.listenTo(this.scene, "change:panorama", function(t, n, i) {
                            i && i.ignore || e._updatePositionAndHeading()
                        }),
                        this.listenTo(this.scene, "change:cameraHeading", function(t, n, i) {
                            i && i.ignore || e._updatePositionAndHeading()
                        })
                }
            }, {
                key: "setState",
                value: function(e) {
                    e ? this._onSVActivated() : this._onSVDeactivated()
                }
            }, {
                key: "_onSVActivated",
                value: function() {
                    this._getPanoramaView({
                        forceNew: !1
                    }).setVisible(!0)
                }
            }, {
                key: "_onSVDeactivated",
                value: function() {
                    this._getPanoramaView({
                        forceNew: !1
                    }).setVisible(!1)
                }
            }, {
                key: "_updatePositionAndHeading",
                value: function() {
                    if (this._streetViewController.isActive()) {
                        var e = this.scene.get("panorama"),
                            t = this.scene.get("cameraHeading");
                        e && null != t && this._setLocationAndHeading(e.location, t)
                    }
                }
            }, {
                key: "_setLocationAndHeading",
                value: function(e, t) {
                    this._getPanoramaView({
                            forceNew: !0
                        }).setPano(e.pano),
                        this._getPanoramaView({
                            forceNew: !1
                        }).setPov({
                            heading: t,
                            pitch: 0
                        }),
                        this._getPanoramaView({
                            forceNew: !1
                        }).setVisible(!0)
                }
            }, {
                key: "_getPanoramaView",
                value: function() {
                    var e = this,
                        t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).forceNew,
                        n = void 0 !== t && t;
                    return null == this.panoramaView || n ? (this.panoramaView = new google.maps.StreetViewPanorama(this.ui.panoramaEl.get(0), {
                            panControl: !0,
                            panControlOptions: {
                                position: google.maps.ControlPosition.TOP_RIGHT
                            },
                            zoomControl: !0,
                            zoomControlOptions: {
                                position: google.maps.ControlPosition.TOP_RIGHT
                            },
                            enableCloseButton: !1,
                            addressControl: !1,
                            visible: !0
                        }),
                        google.maps.event.addListener(this.panoramaView, "position_changed", function() {
                            var t = e.panoramaView.getPosition();
                            if (t) {
                                var n = new OL.LonLat(t.lng(), t.lat());
                                e.scene.set({
                                    cameraLongLat: n
                                }, {
                                    ignore: !0
                                });
                                var i = l.default.project(n.clone());
                                if (!e.map.getExtent().containsLonLat(i))
                                    return e.map.setCenter(i)
                            }
                        }),
                        google.maps.event.addListener(this.panoramaView, "pov_changed", function() {
                            var t = e.panoramaView.getPov().heading;
                            e.scene.set({
                                cameraHeading: t
                            }, {
                                ignore: !0
                            })
                        }),
                        google.maps.event.addListener(this.panoramaView, "visible_changed", function() {
                            if (!e.panoramaView.getVisible())
                                return e._streetViewController.deactivateStreetView()
                        }),
                        this.panoramaView) : this.panoramaView
                }
            }, {
                key: "_closePanoramaView",
                value: function() {
                    this.panoramaView.setVisible(!1)
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/StreetView/templates/street-view"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(0)),
        s = o(n(1)),
        a = o(n(13));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            (0,
                r.default)(this, e)
        }
        return (0,
                s.default)(e, [{
                key: "find",
                value: function(e, t, n) {
                    if (0 === t.length)
                        return this.DEFAULT_HEADING;
                    var i = void 0;
                    return null === (i = "segment" === t[0].type ? this._getAngleOfClosestEdge(e, t, n) : this._getContentCentroidAngle(e, t)) ? this.DEFAULT_HEADING : a.default.radToDeg(this._angleToHeading(i))
                }
            }, {
                key: "_getContentCentroidAngle",
                value: function(e, t) {
                    var n = t[0].geometry.getCentroid();
                    return Math.atan2(e.lat - n.y, e.lon - n.x)
                }
            }, {
                key: "_getAngleOfClosestEdge",
                value: function(e, t, n) {
                    var i = this._getClosestSegmentInfo(e, t);
                    if (i.distance > n)
                        return null;
                    var r = i.segment,
                        s = new OL.Geometry.Point(i.x0, i.y0),
                        o = a.default.getPointEdge(r.geometry.components, s),
                        l = r.geometry.components[o],
                        u = r.geometry.components[o + 1],
                        d = Math.atan2(l.y - u.y, l.x - u.x);
                    return r.isOneWay() && r.attributes.revDirection && (d += Math.PI),
                        d
                }
            }, {
                key: "_getClosestSegmentInfo",
                value: function(e, t) {
                    var n = new OL.Geometry.Point(e.lon, e.lat),
                        i = t.map(function(e) {
                            var t = e.geometry.distanceTo(n, {
                                details: !0
                            });
                            return t.segment = e,
                                t
                        });
                    return _.min(i, function(e) {
                        return e.distance
                    })
                }
            }, {
                key: "_angleToHeading",
                value: function(e) {
                    return 3 * Math.PI / 2 - e
                }
            }]),
            e
    }();
    (0,
        i.default)(l.prototype, {
        DEFAULT_HEADING: 0
    }),
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(19)),
        s = l(n(0)),
        a = l(n(1)),
        o = n(43);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t) {
            (0,
                s.default)(this, e),
            this.videos = ["intro", "segments", "attributes", "turns", "house_numbers", "permalinks", "places_points", "places_areas"],
                this.player = null,
                this.currentVideo = null;
            var n = this;
            this.$element = t,
                this.videoDetails = I18n.t("tutorial.videos"),
                this.$element.delegate(".video-menu .video-link", "click", function() {
                    n.onVideoSectionClicked(this.dataset.videoKey)
                }),
                this.$element.delegate(".dialog-close-button", "click", function() {
                    n.$element.modal("hide"),
                        n.onDialogClose()
                }),
                this.$element.on("show.bs.modal", function() {
                    n.initPlayer()
                })
        }
        return (0,
                a.default)(e, [{
                key: "initPlayer",
                value: function() {
                    var e = this,
                        t = this.videos[0],
                        n = this.videoDetails[t].video_id;
                    this.getYoutubePlayer().then(function(i) {
                        e.$element.find(".video-menu").show(),
                            e.setSelectedVideoLink(t),
                            e.$element.data("bs.modal").isShown ? i.loadVideoById(n) : i.cueVideoById(n)
                    })
                }
            }, {
                key: "onDialogClose",
                value: function() {
                    this.player && this.player.stopVideo()
                }
            }, {
                key: "render",
                value: function() {
                    return this.$element.html((0,
                        o.getHTML)("templates/tutorial-lightbox", {
                        videos: this.videos
                    }))
                }
            }, {
                key: "onVideoSectionClicked",
                value: function(e) {
                    this.setSelectedVideoLink(e),
                        this.player.loadVideoById(this.videoDetails[e].video_id)
                }
            }, {
                key: "setSelectedVideoLink",
                value: function(e) {
                    this.currentVideo = e,
                        this.$element.find(".video-link").removeClass("active"),
                        this.$element.find(".video-link[data-video-key=" + e + "]").addClass("active")
                }
            }, {
                key: "onPlayerStateChanged",
                value: function(e) {
                    e.data === this.YoutubePlayerStates.End && this.playNextVideo()
                }
            }, {
                key: "playNextVideo",
                value: function() {
                    var e = this.videos.indexOf(this.currentVideo) + 1;
                    e >= this.videos.length && (e = 0);
                    var t = this.videos[e],
                        n = this.videoDetails[t].video_id;
                    this.setSelectedVideoLink(t),
                        0 === e ? this.player.cueVideoById(n) : this.player.loadVideoById(n)
                }
            }, {
                key: "_loadScript",
                value: function(e) {
                    var t = document.createElement("script");
                    document.body.appendChild(t),
                        t.async = !0,
                        t.src = e
                }
            }, {
                key: "getYoutubePlayer",
                value: function() {
                    var e = this,
                        t = this;
                    return null !== this.player ? r.default.resolve(this.player) : (this.render(),
                        new r.default(function(n, i) {
                            e._loadScript("https://www.youtube.com/iframe_api"),
                                window.onYouTubeIframeAPIReady = function() {
                                    delete window.onYouTubeIframeAPIReady,
                                        new window.YT.Player("tutorial-player", {
                                            height: "481",
                                            width: "800",
                                            playerVars: {
                                                wmode: "transparent",
                                                modestbranding: 1,
                                                rel: 0,
                                                showinfo: 0,
                                                showsearch: 0
                                            },
                                            events: {
                                                onReady: function(e) {
                                                    t.player = e.target,
                                                        n(t.player)
                                                },
                                                onStateChange: t.onPlayerStateChanged.bind(t)
                                            }
                                        })
                                }
                        }))
                }
            }]),
            e
    }();
    (0,
        i.default)(u.prototype, {
        YoutubePlayerStates: {
            End: 0
        },
        CLASS_NAME: "Waze.View.Tutorial"
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(1229)),
        o = n(32);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t, n) {
            (0,
                r.default)(this, e),
            (0,
                i.default)(this, n),
            this.model = t,
                this.flashService = new a.default
        }
        return (0,
                s.default)(e, [{
                key: "destroy",
                value: function() {
                    this.flashService.destroy()
                }
            }, {
                key: "activate",
                value: function() {
                    this.model.segments.on(o.CHANGED, this.onSegmentsChanged, this),
                        this.model.segments.on(o.ADDED, this.onSegmentsAdded, this)
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.model.segments.off(o.CHANGED, this.onSegmentsChanged, this),
                        this.model.segments.off(o.ADDED, this.onSegmentsAdded, this)
                }
            }, {
                key: "flash",
                value: function(e) {
                    e instanceof Array ? this.flashService.addFeatures(e) : this.flashService.addFeature(e)
                }
            }, {
                key: "onSegmentsChanged",
                value: function(e) {
                    for (var t = [], n = 0, i = e.length; n < i; n++)
                        e[n].state || t.push(e[n]);
                    t.length > 0 && this.flash(t)
                }
            }, {
                key: "onSegmentsAdded",
                value: function(e) {
                    for (var t = [], n = 0; n < 2; n++)
                        for (var i = 0, r = e.length; i < r; i++)
                            e[i].state === OpenLayers.State.INSERT && e[i].attributes.origIDs && t.push(e[i]);
                    t.length > 0 && this.flash(t)
                }
            }]),
            e
    }();
    (0,
        i.default)(u.prototype, {
        CLASS_NAME: "Waze.Service.Services"
    }),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this.currentIntent = null,
                this.flashTimeMillis = 100,
                this.flashIntent = "flash",
                (0,
                    i.default)(this, t),
                this.pendingFeatures = [],
                this.current = null
        }
        return (0,
                s.default)(e, [{
                key: "destroy",
                value: function() {
                    this.pendingFeatures.splice(0, this.pendingFeatures.length)
                }
            }, {
                key: "addFeature",
                value: function(e) {
                    this.pendingFeatures.push(e),
                        this.current || this.flash()
                }
            }, {
                key: "addFeatures",
                value: function(e) {
                    this.pendingFeatures = this.pendingFeatures.concat(e),
                        this.current || this.flash()
                }
            }, {
                key: "flash",
                value: function() {
                    if (this.current && this.current.layer && this.current.renderIntent === this.flashIntent && this.current.layer.drawFeature(this.current, this.currentIntent),
                        0 !== this.pendingFeatures.length) {
                        if (this.current = this.pendingFeatures.shift(),
                            this.current = W.map.segmentLayer.getVector(this.current),
                            this.current) {
                            this.currentIntent = this.current.renderIntent,
                                this.current.layer && this.current.layer.drawFeature(this.current, this.flashIntent);
                            var e = this;
                            window.setTimeout(function() {
                                e.flash()
                            }, this.flashTimeMillis)
                        }
                    } else
                        this.current = null
                }
            }]),
            e
    }();
    (0,
        i.default)(o.prototype, {
        CLASS_NAME: "Waze.Service.FlashService"
    }),
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = b(n(6)),
        s = b(n(7)),
        a = b(n(0)),
        o = b(n(1)),
        l = b(n(15)),
        u = b(n(44)),
        d = n(127),
        c = y(n(24)),
        h = b(n(147)),
        f = b(n(389)),
        p = b(n(1231)),
        g = b(n(199)),
        v = b(n(1232)),
        m = y(n(214)),
        _ = b(n(1248));

    function y(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }

    function b(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var w = (i = {},
            (0,
                l.default)(i, m.GROUP_ISSUES, !0),
            (0,
                l.default)(i, m.GROUP_MAP_ISSUES, !1),
            (0,
                l.default)(i, m.ITEM_MAP_PROBLEMS, !0),
            (0,
                l.default)(i, m.ITEM_CLOSED_MAP_PROBLEMS, !1),
            (0,
                l.default)(i, m.ITEM_UPDATE_REQUESTS, !0),
            (0,
                l.default)(i, m.ITEM_CLOSED_UPDATE_REQUESTS, !1),
            (0,
                l.default)(i, m.ITEM_PLACE_UPDATE_REQUESTS, !1),
            (0,
                l.default)(i, m.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, !1),
            (0,
                l.default)(i, m.GROUP_PARKING_ISSUES, !1),
            (0,
                l.default)(i, m.ITEM_PARKING_MAP_PROBLEMS, !0),
            (0,
                l.default)(i, m.ITEM_PARKING_CLOSED_MAP_PROBLEMS, !1),
            (0,
                l.default)(i, m.ITEM_PARKING_PLACE_UPDATE_REQUESTS, !0),
            (0,
                l.default)(i, m.GROUP_PLACES, !0),
            (0,
                l.default)(i, m.ITEM_VENUES, !0),
            (0,
                l.default)(i, m.ITEM_RESIDENTIAL_PLACES, !1),
            (0,
                l.default)(i, m.ITEM_PARKING_PLACES, !1),
            (0,
                l.default)(i, m.GROUP_ROAD, !0),
            (0,
                l.default)(i, m.ITEM_ROAD, !0),
            (0,
                l.default)(i, m.ITEM_JUNCTION_BOXES, !1),
            (0,
                l.default)(i, m.ITEM_CLOSURES, !1),
            (0,
                l.default)(i, m.ITEM_SPEED_CAMERAS, !1),
            (0,
                l.default)(i, m.GROUP_DISPLAY, !0),
            (0,
                l.default)(i, m.ITEM_SATELLITE_IMAGERY, !0),
            (0,
                l.default)(i, m.ITEM_AREA_MANAGERS, !1),
            (0,
                l.default)(i, m.ITEM_GPS_POINTS, !1),
            (0,
                l.default)(i, m.ITEM_LIVE_USERS, !1),
            (0,
                l.default)(i, m.ITEM_EDITABLE_AREAS, !1),
            (0,
                l.default)(i, m.ITEM_EDITABLE_AREAS, !1),
            i),
        k = function() {
            function e(t) {
                (0,
                    a.default)(this, e),
                this._LOCAL_STORAGE_KEY = "togglersState",
                    this._tree = t,
                    this._togglers = this._getTogglersMap(),
                    this._bitFieldSerializer = new _.default
            }
            return (0,
                    o.default)(e, [{
                    key: "_getTogglersMap",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t) {
                                e[t.getId()] = t
                            }),
                            e
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        var t = this;
                        (0,
                            s.default)(e).forEach(function(n) {
                                var i = e[n];
                                t._togglers[n].setState(i)
                            }),
                            this.trigger("change")
                    }
                }, {
                    key: "writeStateToApp",
                    value: function(e) {
                        this._eachToggler(this._tree, !0, function(t, n) {
                            t.writeStateToApp(n && t.getState(), e)
                        })
                    }
                }, {
                    key: "getState",
                    value: function() {
                        var e = (0,
                            r.default)({}, this._togglers);
                        return (0,
                                s.default)(e).forEach(function(t) {
                                e[t] = e[t].getState()
                            }),
                            e
                    }
                }, {
                    key: "append",
                    value: function(e, t) {
                        this._togglers[e].appendChild(t),
                            this._togglers = this._getTogglersMap()
                    }
                }, {
                    key: "_eachToggler",
                    value: function(e, t, n) {
                        var i = this;
                        e.getChildren().forEach(function(e) {
                            n(e, t),
                                e.isLeaf() || i._eachToggler(e, t && e.getState(), n)
                        })
                    }
                }, {
                    key: "getTreeState",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t, n) {
                                e[t.getId()] = n
                            }),
                            e
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return this._bitFieldSerializer.convertStateToBitfield(this.getState())
                    }
                }, {
                    key: "setStateFromBitfield",
                    value: function(e) {
                        var t = this._bitFieldSerializer.convertBitFieldToState(e);
                        this.setState(t)
                    }
                }, {
                    key: "readFromLocalStorage",
                    value: function() {
                        var e = c.localStorage.get(this._LOCAL_STORAGE_KEY);
                        null != e && this.setStateFromBitfield(e)
                    }
                }, {
                    key: "writeToLocalStorage",
                    value: function() {
                        c.localStorage.set(this._LOCAL_STORAGE_KEY, this.serialize())
                    }
                }], [{
                    key: "create",
                    value: function() {
                        var t = d.LAYER_UNIQUE_NAMES,
                            n = m,
                            i = new e(f.default.of("ROOT", [f.default.of(n.GROUP_ISSUES, [f.default.of(n.GROUP_MAP_ISSUES, [h.default.of(n.ITEM_MAP_PROBLEMS, new p.default("problems", "ALL", "OPEN")), h.default.of(n.ITEM_CLOSED_MAP_PROBLEMS, new p.default("problems", "ALL", "CLOSED")), h.default.of(n.ITEM_UPDATE_REQUESTS, new p.default("mapUpdateRequests", "ALL", "OPEN")), h.default.of(n.ITEM_CLOSED_UPDATE_REQUESTS, new p.default("mapUpdateRequests", "ALL", "CLOSED"))]), h.default.of(n.ITEM_PLACE_UPDATE_REQUESTS, [new p.default("venues", "ALL", "UPDATE_REQUEST"), new g.default(t.PLACE_UPDATES)]), h.default.of(n.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, [new p.default("venues", "RESIDENTIAL", "UPDATE_REQUEST"), new g.default("RESIDENTIAL_PLACE_UPDATES")]), f.default.of(n.GROUP_PARKING_ISSUES, [h.default.of(n.ITEM_PARKING_MAP_PROBLEMS, new p.default("problems", "PARKING", "OPEN")), h.default.of(n.ITEM_PARKING_CLOSED_MAP_PROBLEMS, new p.default("problems", "PARKING", "CLOSED")), h.default.of(n.ITEM_PARKING_PLACE_UPDATE_REQUESTS, [new p.default("venues", "PARKING", "UPDATE_REQUEST"), new g.default("PARKING_PLACE_UPDATES")])])]), f.default.of(n.GROUP_PLACES, [h.default.of(n.ITEM_VENUES, new p.default("venues", "ALL", "SHOW")), h.default.of(n.ITEM_RESIDENTIAL_PLACES, new p.default("venues", "RESIDENTIAL", "SHOW")), h.default.of(n.ITEM_PARKING_PLACES, new p.default("venues", "PARKING", "SHOW"))]), f.default.of(n.GROUP_ROAD, [h.default.of(n.ITEM_ROAD, new g.default(t.ROADS)), h.default.of(n.ITEM_JUNCTION_BOXES, new g.default(t.BIG_JUNCTIONS)), h.default.of(n.ITEM_CLOSURES, new g.default(t.CLOSURES)), h.default.of(n.ITEM_SPEED_CAMERAS, new g.default(t.SPEED_CAMERAS))]), f.default.of(n.GROUP_DISPLAY, [h.default.of(n.ITEM_SATELLITE_IMAGERY, new g.default(t.SATELLITE_IMAGERY)), h.default.of(n.ITEM_AREA_MANAGERS, new g.default(t.AREA_MANAGERS)), h.default.of(n.ITEM_GPS_POINTS, new g.default(t.GPS_POINTS)), h.default.of(n.ITEM_EDITABLE_AREAS, new g.default(t.EDITABLE_AREAS)), h.default.of(n.ITEM_LIVE_USERS, new g.default(t.LIVE_USERS)), h.default.of(n.ITEM_DISALLOWED_TURNS, new v.default)])])),
                            s = u.default.getLayerSwitcherConfig(),
                            a = (0,
                                r.default)({}, w);
                        return s.forEach(function(e) {
                                e.togglers.forEach(function(e) {
                                        return i.append(e.parent, e.toggler)
                                    }),
                                    (0,
                                        r.default)(a, e.defaultVisibility)
                            }),
                            i.setState(a),
                            i
                    }
                }]),
                e
        }();
    (0,
        r.default)(k.prototype, Backbone.Events),
    t.default = k,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this._repoName = t,
                this._categoryName = n,
                this._attributeName = r
        }
        return (0,
                r.default)(e, [{
                key: "writeStateToApp",
                value: function(e, t) {
                    t.dataModel[this._repoName].filter.setAttribute(this._categoryName, this._attributeName, e)
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(0)),
        r = a(n(1)),
        s = a(n(1233));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t, n, r) {
            (0,
                i.default)(this, e),
            this._disallowedTurnsEditor = null
        }
        return (0,
                r.default)(e, [{
                key: "writeStateToApp",
                value: function(e, t) {
                    !1 === e ? null !== this._disallowedTurnsEditor && (this._disallowedTurnsEditor.destroy(),
                        this._disallowedTurnsEditor = null) : null === this._disallowedTurnsEditor && (this._disallowedTurnsEditor = new s.default(t.map.getDrawingContext(), t.dataModel, W.prefs),
                        this._disallowedTurnsEditor.draw())
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(9)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(425)),
        o = n(109);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t, n, i) {
            (0,
                r.default)(this, e),
            this._drawingContext = t,
                this._dataModel = n,
                this._appPreferences = i,
                this._turnArrowViewGenerator = new a.default(this._drawingContext, this._dataModel, this._appPreferences, {
                    includeJunctionTurns: !1,
                    includeUturns: !1,
                    includeOnlyDisallowedTurns: !0
                }),
                this._drawingContext.on("zoomend", this.draw, this),
                this._appPreferences.on("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                this._dataModel.getTurnGraph().on(o.CHANGE_EVENT, this.draw, this)
        }
        return (0,
                s.default)(e, [{
                key: "draw",
                value: function() {
                    var e, t = this;
                    this._drawingContext.clear();
                    var n = this._getAllVisibleSegment().map(function(e) {
                        return t._turnArrowViewGenerator.generate(e)
                    });
                    (e = []).concat.apply(e, (0,
                        i.default)(n)).forEach(function(e) {
                        return e.render()
                    })
                }
            }, {
                key: "_getAllVisibleSegment",
                value: function() {
                    var e = this;
                    return this._dataModel.segments.getObjectArray(function(t) {
                        return !t.isDeleted() && t.isDrivable() && t.geometry.bounds.intersectsBounds(e._drawingContext.getMapExtent())
                    })
                }
            }, {
                key: "destroy",
                value: function() {
                    this._drawingContext.off("zoomend", this.draw, this),
                        this._drawingContext.destroy(),
                        this._appPreferences.off("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                        this._dataModel.getTurnGraph().off(o.CHANGE_EVENT, this.draw, this)
                }
            }]),
            e
    }();
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = m(n(6)),
        r = m(n(2)),
        s = m(n(0)),
        a = m(n(1)),
        o = m(n(3)),
        l = m(n(4)),
        u = m(n(31)),
        d = m(n(41)),
        c = m(n(426)),
        h = m(n(1235)),
        f = m(n(1245)),
        p = n(429),
        g = m(n(430)),
        v = m(n(13));

    function m(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var _ = function(e) {
        function t(e) {
            (0,
                s.default)(this, t);
            var n = new u.default("turn-arrow disabled");
            e.el = n.div;
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e));
            return i._divIcon = n,
                i
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "initialize",
                value: function() {
                    this._turnArrow = this.options.turnArrow,
                        this._drawingContext = this.options.drawingContext,
                        this._marker = null,
                        this._dataModel = this.options.dataModel,
                        this._offset = 0
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        arrow: ".arrow"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "mouseenter .arrow": "_onArrowMouseEnter",
                        "mouseleave .arrow": "_onArrowMouseLeave",
                        "click .arrow": "_onArrowClicked",
                        "click .restrictions": "_onRestrictionsClicked",
                        "click .instruction-override-button": "_onInstructionOverrideClicked",
                        "click .segment-path-button": "_onSegmentPathClicked"
                    }
                }
            }, {
                key: "setOffset",
                value: function(e) {
                    this._offset = e
                }
            }, {
                key: "getTurnArrow",
                value: function() {
                    return this._turnArrow
                }
            }, {
                key: "doOver",
                value: function() {
                    this._onArrowMouseEnter(),
                        this.trigger("bigtooltip:show")
                }
            }, {
                key: "doOut",
                value: function() {
                    this._onArrowMouseLeave(),
                        this.trigger("bigtooltip:hide")
                }
            }, {
                key: "_calculateArrowPixel",
                value: function(e) {
                    var t = new OpenLayers.LonLat(e.getPoint().x, e.getPoint().y);
                    return W.map.getPixelFromLonLat(t)
                }
            }, {
                key: "calculateArrowLonlat",
                value: function(e) {
                    var n = this._drawingContext.pixelToMapUnits(e.getDistanceFromPoint() + t.ARROW_HEIGHT_IN_PIXELS * this._offset),
                        i = v.default.degToRad(e.getAngle()),
                        r = new OpenLayers.LonLat(e.getPoint().x + Math.cos(i) * n, e.getPoint().y + Math.sin(i) * n);
                    if (e.getTurn().isUturn()) {
                        var s = i - Math.PI / 2,
                            a = this._drawingContext.pixelToMapUnits(t.UTURN_ARROW_OFFSET_IN_PIXELS);
                        this.options.isLeftHand && (s += Math.PI),
                            r.lon += Math.cos(s) * a,
                            r.lat += Math.sin(s) * a
                    }
                    return r
                }
            }, {
                key: "_onArrowMouseEnter",
                value: function() {
                    this.ui.arrow.addClass("hover"),
                        this.$el.addClass("hover"),
                        this.trigger("mouseenter", this)
                }
            }, {
                key: "_onArrowMouseLeave",
                value: function() {
                    this.ui.arrow.removeClass("hover"),
                        this.$el.removeClass("hover"),
                        this.trigger("mouseleave")
                }
            }, {
                key: "templateContext",
                value: function() {
                    var e = this._turnArrow,
                        t = e.getTurn(),
                        n = t.getTurnData().isNonDifficultTimeRestricted(),
                        i = t.getTurnData().isAllowed(),
                        r = [];
                    return this.options.transparent && r.push("disabled"),
                        this.options.isLeftHand && r.push("lefthand"),
                        t.getTurnData().isDifficult() && r.push("difficult"),
                        e.getTurn().isUturn() && r.push("uturn"),
                        i ? (r.push("open"),
                            n && r.push("restricted")) : r.push("closed"), {
                            angle: (450 - e.getAngle()) % 360,
                            turnAllowed: i,
                            arrowClasses: r.join(" ")
                        }
                }
            }, {
                key: "onTooltipEnter",
                value: function() {
                    this.doOver()
                }
            }, {
                key: "onTooltipLeave",
                value: function() {
                    this.doOut()
                }
            }, {
                key: "_createTooltipView",
                value: function() {
                    var e = this.options.turnArrow,
                        t = {
                            turnArrow: e,
                            editable: e.isEditable(),
                            dataModel: this._dataModel
                        },
                        n = null;
                    return e.getTurn().getTurnData().isAllowed() ? n = new h.default(t) : e.hasMultiplePaths() && (n = new h.default((0,
                            i.default)({}, t, {
                            pathSelectorOnly: !0
                        }))),
                        n
                }
            }, {
                key: "onRender",
                value: function() {
                    null === this._marker && (this._marker = new OL.Marker(this.calculateArrowLonlat(this._turnArrow), this._divIcon),
                        this._drawingContext.addMarkers([this._marker]))
                }
            }, {
                key: "_onArrowClicked",
                value: function(e) {
                    if (e.stopPropagation(),
                        this._turnArrow.isEditable()) {
                        var t = new c.default(this._turnArrow.getTurn());
                        this._dataModel.actionManager.add(t)
                    }
                }
            }, {
                key: "_onSegmentPathClicked",
                value: function(e) {
                    e.stopPropagation(),
                        this._dataModel.actionManager.add(new d.default(this._dataModel.getTurnGraph(), this._turnArrow.getNextPossibleTurn()))
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/turn-arrow"
                }
            }, {
                key: "behaviors",
                get: function() {
                    var e = this;
                    return [{
                        behaviorClass: f.default,
                        size: {
                            w: W.map.size.w,
                            h: W.map.size.h
                        },
                        padding: {
                            top: 30,
                            bottom: 30,
                            left: 50,
                            right: 50
                        },
                        hoverElement: ".arrow",
                        getView: this._createTooltipView.bind(this),
                        getPosition: function() {
                            return e._calculateArrowPixel(e.options.turnArrow)
                        },
                        getVerticalPlacement: function() {
                            var t = e.options.turnArrow;
                            if (t instanceof g.default) {
                                var n = t.getAngle();
                                if (n >= -135 && n <= -45)
                                    return p.BIG_TOOLTIP_VERT_PLACEMENTS.BOTTOM
                            }
                            return null
                        },
                        getHorizontalPlacement: function() {
                            var t = e.options.turnArrow;
                            if (t instanceof g.default) {
                                var n = t.getAngle();
                                if (n >= -45 && n <= 45)
                                    return p.BIG_TOOLTIP_HORIZ_PLACEMENTS.RIGHT;
                                if (n >= 135 || n <= -135)
                                    return p.BIG_TOOLTIP_HORIZ_PLACEMENTS.LEFT
                            }
                            return null
                        }
                    }]
                }
            }]),
            t
    }(Marionette.View);
    _.ARROW_HEIGHT_IN_PIXELS = 40,
        _.ARROW_DISTANCE_FROM_NODE_IN_PIXELS = 20,
        _.UTURN_ARROW_OFFSET_IN_PIXELS = 18,
        t.default = _,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(7)),
        r = g(n(10)),
        s = g(n(2)),
        a = g(n(0)),
        o = g(n(1)),
        l = g(n(3)),
        u = g(n(4)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(1236)),
        c = g(n(1237)),
        h = g(n(41)),
        f = n(118),
        p = n(43);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e) {
            (0,
                a.default)(this, t);
            var n = (0,
                l.default)(this, (t.__proto__ || (0,
                s.default)(t)).call(this, e));
            n._turnArrow = e.turnArrow,
                n._turn = n._turnArrow.getTurn(),
                n._dataModel = n.options.dataModel,
                n._editable = e.editable,
                n._restrictions = n._turn.getTurnData().getRestrictions();
            var i = n._turnArrow.hasMultiplePaths();
            return n.model = new Backbone.Model({
                    opcode: n._turn.getTurnData().getInstructionOpcode(),
                    editable: n._editable,
                    hasRestrictions: n._turn.getTurnData().isNonDifficultTimeRestricted(),
                    hasMultiplePaths: i,
                    tbrTooltip: n._getTBRTooltip()
                }),
                i && n._updateCounts(),
                n
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "templateContext",
                value: function() {
                    var e = this._dataModel.segments.getObjectById(this._turn.getToVertex().getSegmentID()).getAddress(),
                        t = null;
                    return null != e && (t = e.getStreetName()), {
                        toStreet: t,
                        pathSelectorOnly: Boolean(this.options.pathSelectorOnly),
                        canEditDifficultTurns: this._canEditDifficultTurn(),
                        canEditInstructionOverride: this._shouldAllowIOEditing(),
                        allowRestrictionEditing: this._shouldAllowRestrictionEditing()
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click @ui.editRestrictionsButton": "_editRestrictions",
                        "click @ui.prevPathButton": "_selectPrevPath",
                        "click @ui.nextPathButton": "_selectNextPath",
                        "click @ui.tbrButton": "_openTimeBasedRestrictions"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        editRestrictionsButton: ".edit-restrictions",
                        prevPathButton: ".prev-path-button",
                        nextPathButton: ".next-path-button",
                        tbrButton: ".time-based-restrictions-button",
                        difficultFalseLabel: "label[for=difficult_false]"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    var e = this;
                    return {
                        ".opcode-select": {
                            observe: "opcode",
                            onGet: function() {
                                return this._turn.getTurnData().getInstructionOpcode()
                            },
                            onSet: function(e) {
                                var t = this._turn.getTurnData().withInstructionOpcode(e),
                                    n = new h.default(this._dataModel.getTurnGraph(), this._turn.withTurnData(t));
                                this._dataModel.actionManager.add(n)
                            },
                            selectOptions: {
                                collection: this._getOpcodeOptions,
                                defaultOption: {
                                    label: I18n.t("turn_tooltip.instruction_override.no_opcode"),
                                    value: null
                                }
                            }
                        },
                        "[name=isDifficult]": {
                            observe: "isDifficult",
                            onGet: function() {
                                return this._turn.getTurnData().isDifficult() ? "true" : "false"
                            },
                            onSet: function(e) {
                                this._updateIsTurnDifficult("true" === e)
                            },
                            attributes: [{
                                name: "disabled",
                                onGet: function() {
                                    return !this._canEditDifficultTurn()
                                }
                            }]
                        },
                        "#difficult_false": {
                            attributes: [{
                                name: "disabled",
                                onGet: function() {
                                    return !e._canEditDifficultTurn() || e._hasDifficultTimeBasedRestrictions()
                                }
                            }]
                        },
                        "#difficult_label": {
                            classes: {
                                disabled: {
                                    onGet: function() {
                                        return !this._canEditDifficultTurn()
                                    }
                                }
                            }
                        },
                        ".path-progress": {
                            observe: ["currentPathNum", "pathCount"],
                            onGet: function(e) {
                                var t = (0,
                                    r.default)(e, 2);
                                return t[0] + 1 + "/" + t[1]
                            }
                        },
                        ".time-based-restrictions-button": {
                            onGet: function() {
                                return this._turn.getTurnData().isDifficult()
                            },
                            visible: !0,
                            visibleFn: function(e, t) {
                                e.toggleClass("hidden", !t)
                            },
                            classes: {
                                "has-tbrs": {
                                    onGet: function() {
                                        return this._hasDifficultTimeBasedRestrictions()
                                    }
                                },
                                disabled: {
                                    onGet: function() {
                                        return !this._canOpenTimeBasedRestrictionDialog()
                                    }
                                }
                            }
                        }
                    }
                }
            }, {
                key: "_hasDifficultTimeBasedRestrictions",
                value: function() {
                    return this._turn.getTurnData().isDifficultTimeRestricted()
                }
            }, {
                key: "_canOpenTimeBasedRestrictionDialog",
                value: function() {
                    return this._canEditDifficultTurn() || this._hasDifficultTimeBasedRestrictions()
                }
            }, {
                key: "_canEditDifficultTurn",
                value: function() {
                    return this._turnArrow.isEditable() && W.loginManager.user.canEditDifficultTurns() && !this.options.pathSelectorOnly
                }
            }, {
                key: "_getCantEditReason",
                value: function() {
                    return this._turn.getTurnData().hasSegmentPath() ? null : this._turnArrow.isLockedByHigherRank() || !W.loginManager.user.canEditDifficultTurns() ? I18n.t("turn_tooltip.cant_edit_difficult_turn") : I18n.t("turn_tooltip.cant_edit_difficult_turn_area")
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit();
                    var e = this._getCantEditReason();
                    e && this.$(".waze-lock-tooltip").tooltip({
                            container: "body",
                            title: e
                        }),
                        this._canEditDifficultTurn() && (this.ui.tbrButton.tooltip({
                                container: "body",
                                title: this._getTBRTooltip(),
                                html: !0
                            }),
                            this._hasDifficultTimeBasedRestrictions() && this.ui.difficultFalseLabel.tooltip({
                                container: "body",
                                title: I18n.t("turn_tooltip.remove_tbrs_first")
                            }))
                }
            }, {
                key: "_getOpcodeOptions",
                value: function() {
                    var e = I18n.t("turn_tooltip.instruction_override.opcodes");
                    return (0,
                        i.default)(d).map(function(t) {
                        return {
                            value: t,
                            label: e[t]
                        }
                    })
                }
            }, {
                key: "_editRestrictions",
                value: function() {
                    W.app.layout.getRegion("dialogRegion").show(new c.default({
                        turn: this._turn,
                        dataModel: this._dataModel,
                        canEditRestrictions: this._editable
                    }))
                }
            }, {
                key: "_updateIsTurnDifficult",
                value: function(e) {
                    var t = this._turn.getTurnData().withoutDifficultRestrictions().withSimpleDifficulty(e),
                        n = this._turn.withTurnData(t);
                    this._dataModel.actionManager.add(new h.default(this._dataModel.getTurnGraph(), n))
                }
            }, {
                key: "_shouldAllowRestrictionEditing",
                value: function() {
                    return W.Config.restrictions.allowEditing && this._turnArrow.isEditable()
                }
            }, {
                key: "_shouldAllowIOEditing",
                value: function() {
                    return this._turnArrow.isEditable()
                }
            }, {
                key: "_updateCounts",
                value: function() {
                    this.model.set({
                        currentPathNum: this._turnArrow.getCurrentPossibleTurnIndex(),
                        pathCount: this._turnArrow.getPossibleTurnCount()
                    })
                }
            }, {
                key: "_selectPrevPath",
                value: function() {
                    this._dataModel.actionManager.add(new h.default(this._dataModel.getTurnGraph(), this._turnArrow.getPrevPossibleTurn())),
                        this._updateCounts()
                }
            }, {
                key: "_selectNextPath",
                value: function() {
                    this._dataModel.actionManager.add(new h.default(this._dataModel.getTurnGraph(), this._turnArrow.getNextPossibleTurn())),
                        this._updateCounts()
                }
            }, {
                key: "_openTimeBasedRestrictions",
                value: function() {
                    if (this._canOpenTimeBasedRestrictionDialog()) {
                        var e = null,
                            t = this._turn.getTurnData().getRestrictions();
                        1 === t.length && t[0].isSimplyDifficult() && (e = t[0]),
                            W.app.layout.getRegion("dialogRegion").show(new c.default({
                                turn: this._turn,
                                dataModel: this._dataModel,
                                canEditRestrictions: this._editable,
                                editingDifficultTurn: !0,
                                restrictionToEdit: e
                            }))
                    }
                }
            }, {
                key: "_getTBRTooltip",
                value: function() {
                    if (!this._hasDifficultTimeBasedRestrictions())
                        return I18n.t("turn_tooltip.no_tbr_tooltip");
                    var e = this._turn.getTurnData().getRestrictions().filter(function(e) {
                        return e.isDifficult()
                    }).map(function(e) {
                        var t = new f.TimeFrameViewHelpers({
                            timeFrame: e.getTimeFrame()
                        });
                        return t.formatWeekdays() + " " + t.formatHours()
                    });
                    return (0,
                        p.getHTML)("templates/turn-arrow-tooltip-timeframes", {
                        timeFrames: e
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/turn-arrow-tooltip"
                }
            }]),
            t
    }(Marionette.View);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.NONE = "NONE",
        t.TURN_LEFT = "TURN_LEFT",
        t.TURN_RIGHT = "TURN_RIGHT",
        t.KEEP_LEFT = "KEEP_LEFT",
        t.KEEP_RIGHT = "KEEP_RIGHT",
        t.CONTINUE = "CONTINUE",
        t.EXIT_LEFT = "EXIT_LEFT",
        t.EXIT_RIGHT = "EXIT_RIGHT",
        t.UTURN = "UTURN"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(2)),
        r = v(n(0)),
        s = v(n(1)),
        a = v(n(3)),
        o = v(n(4)),
        l = v(n(41)),
        u = n(69),
        d = v(n(188)),
        c = v(n(47)),
        h = n(118),
        f = v(n(427)),
        p = v(n(1244)),
        g = n(206);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        contentRegion: {
                            el: ".modal-content",
                            regionClass: g.DialogContentRegion,
                            onEscapeKeydown: this._onEscapeKeydown.bind(this)
                        }
                    }
                }
            }, {
                key: "_onEscapeKeydown",
                value: function(e) {
                    if (this.getChildView("contentRegion") instanceof f.default)
                        return e.preventDefault(),
                            this._showSummaryView(),
                            !1
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._dataModel = e.dataModel,
                        this._turn = e.turn,
                        this._canEditRestrictions = e.canEditRestrictions,
                        this._restrictions = this._turn.getTurnData().getRestrictions(),
                        this._viewHelpers = new h.TurnRestrictionViewHelpers({
                            turn: this._turn,
                            dataModel: this._dataModel
                        })
                }
            }, {
                key: "_restrictionDisplayFilter",
                value: function(e) {
                    return this.options.editingDifficultTurn ? e.getDefaultType() === u.RESTRICTION_TYPE.DIFFICULT : e.getDefaultType() !== u.RESTRICTION_TYPE.DIFFICULT
                }
            }, {
                key: "_shouldShowSummaryView",
                value: function() {
                    return !this.options.canEditRestrictions || null == this.options.restrictionToEdit && this._restrictions.some(this._restrictionDisplayFilter.bind(this))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.options.restrictionToEdit ? this._showEditView({
                        restriction: this.options.restrictionToEdit,
                        isNewRestriction: !1
                    }) : this._shouldShowSummaryView() ? this._showSummaryView() : this._showCreateTurnRestrictionView()
                }
            }, {
                key: "onChildviewRestrictionItemEdit",
                value: function(e) {
                    this._showEditView({
                        restriction: e,
                        isNewRestriction: !1
                    })
                }
            }, {
                key: "onChildviewRestrictionItemDelete",
                value: function(e) {
                    var t = this._restrictions.indexOf(e);
                    this._restrictions.splice(t, 1),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionEditCancel",
                value: function() {
                    this._shouldShowSummaryView() ? this._showSummaryView() : this.destroy()
                }
            }, {
                key: "onChildviewRestrictionEditUpdate",
                value: function(e, t) {
                    var n = this._restrictions.indexOf(e);
                    this._restrictions.splice(n, 1, t),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionEditCreate",
                value: function(e) {
                    this._restrictions.every(function(t) {
                            return !t.equals(e)
                        }) && this._restrictions.push(e),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionSummaryClose",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "onChildviewRestrictionSummaryCreate",
                value: function() {
                    this._showCreateTurnRestrictionView()
                }
            }, {
                key: "onChildviewRestrictionSummaryApply",
                value: function(e) {
                    this._updateTurnGraph(),
                        this.destroy()
                }
            }, {
                key: "_showSummaryView",
                value: function() {
                    var e = this._turn.getTurnData().withRestrictions(this._restrictions.filter(this._restrictionDisplayFilter.bind(this))),
                        t = this._turn.withTurnData(e);
                    this.showChildView("contentRegion", new p.default({
                        turn: t,
                        canEditRestrictions: this._canEditRestrictions,
                        subscriptions: this._dataModel.getRestrictionSubscriptions(),
                        title: this.options.editingDifficultTurn ? this._viewHelpers.getDifficultSummaryTitle() : this._viewHelpers.getSummaryTitle()
                    }))
                }
            }, {
                key: "_showEditView",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.restriction,
                        n = e.isNewRestriction,
                        i = void 0 !== n && n;
                    this.showChildView("contentRegion", new f.default({
                        restriction: t,
                        isNewRestriction: i,
                        canEditRestrictions: this._canEditRestrictions,
                        canAddTollRestriction: !1,
                        subscriptions: this._dataModel.getRestrictionSubscriptions(),
                        editingTitle: this._viewHelpers.getEditingTitle(t)
                    }))
                }
            }, {
                key: "_showCreateTurnRestrictionView",
                value: function() {
                    var e = this._turn.getTurnData().hasSegmentPath(),
                        t = void 0,
                        n = this.options.editingDifficultTurn ? u.RESTRICTION_TYPE.DIFFICULT : u.RESTRICTION_TYPE.FREE;
                    t = e ? new c.default({
                            direction: null,
                            defaultType: n
                        }) : new d.default({
                            defaultType: n
                        }),
                        this._showEditView({
                            restriction: t,
                            isNewRestriction: !0
                        })
                }
            }, {
                key: "_updateTurnGraph",
                value: function() {
                    var e = this._turn.getTurnData().withRestrictions(this._restrictions),
                        t = this._turn.withTurnData(e);
                    this._dataModel.actionManager.add(new l.default(this._dataModel.getTurnGraph(), t))
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main"
                }
            }]),
            t
    }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "template",
                    value: function(e) {
                        return e.message
                    }
                }, {
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "restriction-validation-error"
                    }
                }]),
                t
        }(Marionette.View),
        d = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return u
                    }
                }]),
                t
        }(Marionette.CollectionView),
        c = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            errorMessages: []
                        }).errorMessages.map(function(e) {
                            return new Backbone.Model({
                                message: e
                            })
                        });
                        this.collection = new Backbone.Collection(e)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("collectionRegion", new d({
                            collection: this.collection
                        }))
                    }
                }, {
                    key: "isValid",
                    value: function() {
                        return 0 === this.collection.length
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_validation"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(7)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = n(47);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "getSegmentData",
                    value: function() {
                        var e = this.attributes;
                        return {
                            laneType: e.laneType,
                            disposition: e.disposition
                        }
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            disposition: e.getDisposition(),
                            laneType: e.getLaneType()
                        })
                    }
                }]),
                t
        }(Backbone.Model),
        h = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=laneType]": {
                                observe: "laneType",
                                selectOptions: {
                                    collection: "this._laneTypeOptions",
                                    defaultOption: {
                                        value: null,
                                        label: I18n.t("restrictions.editing.segment.laneType.NONE")
                                    }
                                }
                            },
                            "[name=disposition]": {
                                observe: "disposition",
                                selectOptions: {
                                    collection: "this._dispositionOptions"
                                }
                            },
                            select: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._laneTypeOptions = this._getLaneTypeOptions(),
                            this._dispositionOptions = this._getDispositionOptions()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.getSegmentData()
                    }
                }, {
                    key: "_getLaneTypeOptions",
                    value: function() {
                        var e = (0,
                            i.default)(u.RESTRICTION_SEGMENT_LANE_TYPE).map(function(e) {
                            return {
                                value: u.RESTRICTION_SEGMENT_LANE_TYPE[e],
                                label: I18n.t("restrictions.editing.segment.laneType." + e)
                            }
                        });
                        return _.sortBy(e, "label")
                    }
                }, {
                    key: "_getDispositionOptions",
                    value: function() {
                        return (0,
                            i.default)(u.RESTRICTION_SEGMENT_DISPOSITION).map(function(e) {
                            return {
                                value: u.RESTRICTION_SEGMENT_DISPOSITION[e],
                                label: I18n.t("restrictions.editing.segment.disposition." + e)
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_segment"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "segment-restriction-edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).restrictionEditable,
                            i = void 0 !== n && n,
                            r = c.for(e);
                        return r.set({
                                restrictionEditable: i
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ViewModel = void 0;
    var i = p(n(15)),
        r = p(n(7)),
        s = p(n(10)),
        a = p(n(2)),
        o = p(n(0)),
        l = p(n(1)),
        u = p(n(3)),
        d = p(n(4)),
        c = n(69),
        h = n(139),
        f = p(h);

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        u.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    d.default)(t, e),
                (0,
                    l.default)(t, [{
                    key: "getDriveProfileData",
                    value: function() {
                        return {
                            vehicleTypes: this.isAllVehicles() ? [] : this.attributes.vehicleTypes
                        }
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return this.attributes.isAllVehicles
                    }
                }, {
                    key: "hasVehicleTypes",
                    value: function() {
                        return this.attributes.vehicleTypes.length > 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.isAllVehicles() || this.hasVehicleTypes() || e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            isAllVehicles: e.isAllVehicles(),
                            vehicleTypes: e.getVehicleTypes()
                        })
                    }
                }]),
                t
        }(Backbone.Model),
        v = function(e) {
            function t() {
                return (0,
                        o.default)(this, t),
                    (0,
                        u.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    d.default)(t, e),
                (0,
                    l.default)(t, [{
                    key: "getHelpMessage",
                    value: function() {
                        return this.model.isAllVehicles() ? I18n.t("restrictions.editing.driving.no_vehicles_allowed") : I18n.t("restrictions.editing.driving.other_vehicles_allowed")
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:isAllVehicles": "_onAllVehiclesChange"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=isAllVehicles]": {
                                observe: "isAllVehicles",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".vehicle-type": {
                                observe: "vehicleTypes",
                                onGet: function(e) {
                                    return e.map(function(e) {
                                        return e.toString()
                                    })
                                },
                                onSet: function(e) {
                                    return e.map(function(e) {
                                        return parseInt(e, 10)
                                    })
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllVehicles", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                s.default)(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return n || !i
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onAllVehiclesChange",
                    value: function() {
                        this.triggerMethod("change:helpMessage")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getVehicleTypes: function() {
                                return (0,
                                    r.default)(h.VEHICLE_TYPES).sort().map(function(e) {
                                    return {
                                        key: e,
                                        value: h.VEHICLE_TYPES[e]
                                    }
                                })
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.isAllVehicles() ? {
                            defaultType: c.RESTRICTION_TYPE.BLOCKED,
                            driveProfiles: {}
                        } : {
                            defaultType: c.RESTRICTION_TYPE.FREE,
                            driveProfiles: (0,
                                i.default)({}, c.RESTRICTION_TYPE.BLOCKED, [this.model.getDriveProfileData()])
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_blocked_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).restrictionEditable,
                            i = void 0 !== n && n,
                            r = e.getDriveProfileList(c.RESTRICTION_TYPE.BLOCKED).getDriveProfiles(),
                            s = void 0;
                        if (0 === r.length)
                            s = new f.default;
                        else {
                            if (1 !== r.length)
                                throw new TypeError("Expected 1 driveProfile (got " + r.length + ")");
                            s = r[0]
                        }
                        var a = g.for(s);
                        return a.set({
                                restrictionEditable: i
                            }),
                            new t({
                                model: a
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = v,
        t.ViewModel = g
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DriveProfileItemViewModel = void 0;
    var i = g(n(15)),
        r = g(n(10)),
        s = g(n(7)),
        a = g(n(6)),
        o = g(n(9)),
        l = g(n(2)),
        u = g(n(0)),
        d = g(n(1)),
        c = g(n(3)),
        h = g(n(4)),
        f = n(69),
        p = n(139);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = p.VEHICLE_TYPES.PRIVATE,
        m = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        l.default)(t)).apply(this, arguments))
            }
            return (0,
                    h.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            restrictionEditable: !1,
                            vehicleType: null,
                            numPassengers: null,
                            subscription: null
                        }
                    }
                }, {
                    key: "getDriveProfileData",
                    value: function() {
                        var e = this.attributes,
                            t = e.vehicleType,
                            n = e.numPassengers,
                            i = e.subscription,
                            r = {};
                        return null != t && (r.vehicleTypes = [t]),
                            null != n && (r.numPassengers = n),
                            null != i && (r.subscriptions = [i]),
                            r
                    }
                }, {
                    key: "hasVehicleType",
                    value: function() {
                        return null != this.attributes.vehicleType
                    }
                }, {
                    key: "hasNumPassengers",
                    value: function() {
                        var e = this.attributes.numPassengers;
                        return null != e && e > 0
                    }
                }, {
                    key: "hasSubscription",
                    value: function() {
                        return null != this.attributes.subscription
                    }
                }, {
                    key: "isBlank",
                    value: function() {
                        return !this.hasVehicleType() && !this.hasNumPassengers() && !this.hasSubscription()
                    }
                }, {
                    key: "isExhaustive",
                    value: function() {
                        return this.hasVehicleType() && this.hasNumPassengers() && this.hasSubscription()
                    }
                }], [{
                    key: "modelsFor",
                    value: function(e) {
                        var n, i = e.getNumPassengers(),
                            r = e.getVehicleTypes(),
                            s = e.getSubscriptions();
                        return 0 === i && (i = null),
                            0 === r.length && (r = [null]),
                            0 === s.length && (s = [null]),
                            (n = []).concat.apply(n, (0,
                                o.default)(r.map(function(e) {
                                return s.map(function(t) {
                                    return (0,
                                        a.default)({
                                        vehicleType: e,
                                        subscription: t,
                                        numPassengers: i
                                    })
                                })
                            }))).map(function(e) {
                                return new t(e)
                            })
                    }
                }]),
                t
        }(Backbone.Model),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        l.default)(t)).apply(this, arguments))
            }
            return (0,
                    h.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "className",
                    value: function() {
                        var e = ["drive-profile-item"];
                        return 0 === this.model.collection.indexOf(this.model) && e.push("drive-profile-item-sticky"),
                            e.join(" ")
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-init-vehicle-type": "_doInitVehicleType",
                            "click .do-init-num-passengers": "_doInitNumPassengers",
                            "click .do-init-subscription": "_doInitSubscription",
                            "click .do-set-vehicle-type": "_doSetVehicleType",
                            "click .do-set-num-passengers": "_doSetNumPassengers",
                            "click .do-set-subscription": "_doSetSubscription",
                            "click .do-delete-vehicle-type": "_doDeleteVehicleType",
                            "click .do-delete-num-passengers": "_doDeleteNumPassengers",
                            "click .do-delete-subscription": "_doDeleteSubscription"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-delete-item": "item:delete"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".drive-profile-item-action": {
                                observe: "restrictionEditable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {},
                            supportsNumPassengers: !1,
                            supportsSubscriptions: !1
                        };
                        this._subscriptions = e.subscriptions,
                            this._subscriptionsAvailable = !_.isEmpty(e.subscriptions),
                            this._supportsNumPassengers = e.supportsNumPassengers,
                            this._supportsSubscriptions = e.supportsSubscriptions
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.vehicleType,
                            n = e.numPassengers,
                            i = e.subscription,
                            r = void 0,
                            a = void 0,
                            o = void 0;
                        null == t ? r = "" : (a = _.invert(p.VEHICLE_TYPES)[t],
                            r = I18n.t("restrictions.vehicle_types." + a));
                        var l = _.omit(p.VEHICLE_TYPES, a);
                        o = this._subscriptions.hasOwnProperty(i) ? this._subscriptions[i] : i;
                        var u = _.reject(this._getSortedSubscriptionsArray(), function(e) {
                            var t = e.value;
                            e.name;
                            return t === i
                        });
                        return {
                            numPassengersRange: _.range(2, n).concat(_.range(n + 1, 5)),
                            subscriptionName: o,
                            vehicleName: r,
                            vehicleTypes: l,
                            vehicleTypesNames: (0,
                                s.default)(l).sort(function(e, t) {
                                return e.localeCompare(t)
                            }),
                            subscriptionOptions: u,
                            supportsSubscriptions: this._supportsSubscriptions,
                            subscriptionsAvailable: this._subscriptionsAvailable,
                            supportsNumPassengers: this._supportsNumPassengers,
                            isBlank: this.model.isBlank(),
                            isExhaustive: this.model.isExhaustive(),
                            hasVehicleType: this.model.hasVehicleType(),
                            hasNumPassengers: this.model.hasNumPassengers(),
                            hasSubscription: this.model.hasSubscription()
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            change: "render"
                        }
                    }
                }, {
                    key: "_getSortedSubscriptionsArray",
                    value: function() {
                        return _.pairs(this._subscriptions).map(function(e) {
                            var t = (0,
                                r.default)(e, 2);
                            return {
                                value: t[0],
                                name: t[1]
                            }
                        }).sort(function(e, t) {
                            var n = e.name,
                                i = void 0 === n ? "" : n,
                                r = t.name,
                                s = void 0 === r ? "" : r;
                            return i.localeCompare(s)
                        })
                    }
                }, {
                    key: "_doInitVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: v
                        })
                    }
                }, {
                    key: "_doInitNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: 2
                        })
                    }
                }, {
                    key: "_doInitSubscription",
                    value: function() {
                        if (this._supportsSubscriptions) {
                            var e = this._getSortedSubscriptionsArray()[0];
                            this.model.set({
                                subscription: e.value
                            })
                        }
                    }
                }, {
                    key: "_doSetVehicleType",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            vehicleType: t
                        })
                    }
                }, {
                    key: "_doSetNumPassengers",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            numPassengers: t
                        })
                    }
                }, {
                    key: "_doSetSubscription",
                    value: function(e) {
                        var t = e.target.dataset.value;
                        this.model.set({
                            subscription: t
                        })
                    }
                }, {
                    key: "_doDeleteVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: null
                        })
                    }
                }, {
                    key: "_doDeleteNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: null
                        })
                    }
                }, {
                    key: "_doDeleteSubscription",
                    value: function() {
                        this.model.set({
                            subscription: null
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_item"
                    }
                }]),
                t
        }(Marionette.View),
        b = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        l.default)(t)).apply(this, arguments))
            }
            return (0,
                    h.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "childView",
                    value: function() {
                        return y
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.collection.indexOf(e.model) > 0 && this.collection.remove(e.model)
                    }
                }]),
                t
        }(Marionette.CollectionView),
        w = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        l.default)(t)).apply(this, arguments))
            }
            return (0,
                    h.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "isBlank",
                    value: function() {
                        return this.models.every(function(e) {
                            return e.isBlank()
                        })
                    }
                }, {
                    key: "hasBlank",
                    value: function() {
                        return this.models.some(function(e) {
                            return e.isBlank()
                        })
                    }
                }]),
                t
        }(Backbone.Collection),
        k = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        l.default)(t)).apply(this, arguments))
            }
            return (0,
                    h.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .do-add-item": "_doAddBlankItem"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add-drive-profile-item": {
                                observe: "canAddBlankItem",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e, t = this,
                            n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                driveProfileList: null,
                                restrictionEditable: !1,
                                subscriptions: {},
                                supportsNumPassengers: !1,
                                supportsSubscriptions: !1
                            };
                        this._driveProfileList = n.driveProfileList,
                            this._restrictionEditable = n.restrictionEditable,
                            this._subscriptions = n.subscriptions,
                            this._supportsSubscriptions = n.supportsSubscriptions,
                            this._supportsNumPassengers = n.supportsNumPassengers;
                        var i = (e = []).concat.apply(e, (0,
                            o.default)(this._driveProfileList.getDriveProfiles().map(function(e) {
                            return m.modelsFor(e)
                        })));
                        i.forEach(function(e) {
                                return e.set({
                                    restrictionEditable: t._restrictionEditable
                                })
                            }),
                            this.collection = new w(i),
                            0 === this.collection.length && this._doAddBlankItem(),
                            this.model = new Backbone.Model({
                                canAddBlankItem: this._canAddBlankItem()
                            }),
                            this.collection.on("all", function() {
                                return t.model.set({
                                    canAddBlankItem: t._canAddBlankItem()
                                })
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("collectionRegion", new b({
                                collection: this.collection,
                                subscriptions: this._subscriptions,
                                supportsNumPassengers: this._supportsNumPassengers,
                                supportsSubscriptions: this._supportsSubscriptions
                            }))
                    }
                }, {
                    key: "_canAddBlankItem",
                    value: function() {
                        return this._restrictionEditable && !this.collection.hasBlank()
                    }
                }, {
                    key: "_doAddBlankItem",
                    value: function() {
                        this._canAddBlankItem() && this.collection.push(new m({
                            restrictionEditable: this._restrictionEditable
                        }))
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            driveProfiles: (0,
                                i.default)({}, f.RESTRICTION_TYPE.FREE, this.collection.models.filter(function(e) {
                                return !e.isBlank()
                            }).map(function(e) {
                                return e.getDriveProfileData()
                            }))
                        }
                    }
                }, {
                    key: "getHelpMessage",
                    value: function(e) {
                        return e === f.RESTRICTION_MODALITY.DRIVING_ALLOWED ? I18n.t("restrictions.editing.driving.other_vehicles_restricted") : e === f.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? I18n.t("restrictions.editing.driving.other_vehicles_pay_toll") : void 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.collection.isBlank() && e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = n.restrictionEditable,
                            r = void 0 !== i && i,
                            s = n.subscriptions,
                            a = void 0 === s ? {} : s;
                        return new t({
                            driveProfileList: e.getDriveProfileList(f.RESTRICTION_TYPE.FREE),
                            restrictionEditable: r,
                            subscriptions: a,
                            supportsNumPassengers: e.supportsNumPassengers(),
                            supportsSubscriptions: e.supportsSubscriptions()
                        })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = k,
        t.DriveProfileItemViewModel = m
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "validate",
                value: function() {
                    return []
                }
            }, {
                key: "getRestrictionData",
                value: function() {
                    return {}
                }
            }, {
                key: "getHelpMessage",
                value: function() {
                    return ""
                }
            }, {
                key: "template",
                get: function() {
                    return !1
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ViewModel = void 0;
    var i = p(n(10)),
        r = p(n(7)),
        s = p(n(2)),
        a = p(n(0)),
        o = p(n(1)),
        l = p(n(3)),
        u = p(n(4)),
        d = p(n(372)),
        c = n(189),
        h = p(n(122)),
        f = p(n(16));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = moment(),
        v = moment().add(1, "month"),
        m = new d.default,
        _ = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "toggleAllWeekdays",
                    value: function(e) {
                        var t = e ? (0,
                            r.default)(c.WEEKDAYS) : [];
                        this.set({
                            weekdays: t
                        })
                    }
                }, {
                    key: "getWeekdaysValue",
                    value: function() {
                        var e = c.RestrictionTimeFrame.getWeekdaysBitValue(this.attributes.weekdays);
                        return 0 === e ? null : e
                    }
                }, {
                    key: "getTimeFrameData",
                    value: function() {
                        var e = this.attributes,
                            t = e.fromTime,
                            n = e.toTime,
                            i = e.startDate,
                            r = e.endDate;
                        this.attributes.isAllDay && (t = n = null),
                            this.attributes.isDuringDates ? (i = i.format(c.DATE_FORMAT),
                                r = r.format(c.DATE_FORMAT)) : i = r = null;
                        var s = this.getWeekdaysValue();
                        return 0 === s && (s = null), {
                            weekdays: s,
                            fromTime: t,
                            toTime: n,
                            startDate: i,
                            endDate: r
                        }
                    }
                }, {
                    key: "isOvernight",
                    value: function() {
                        var e = this.attributes,
                            t = e.isAllDay,
                            n = e.fromTime,
                            i = e.toTime;
                        return !t && 1 === m.compareTimes(n, i)
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = this.attributes,
                            t = [];
                        return 0 === e.weekdays.length && t.push(I18n.t("restrictions.editing.validation.weekdays")),
                            !1 === e.isAllDay && (m.isValidTime(e.fromTime) || t.push(I18n.t("restrictions.editing.validation.fromTime")),
                                m.isValidTime(e.toTime) || t.push(I18n.t("restrictions.editing.validation.toTime"))),
                            e.isDuringDates && (f.default.isBlank(e.startDate) ? t.push(I18n.t("restrictions.editing.validation.startDate")) : e.startDate.isBefore(moment(), "day") && t.push(I18n.t("restrictions.editing.validation.startDate_in_past")),
                                f.default.isBlank(e.endDate) && t.push(I18n.t("restrictions.editing.validation.endDate"))),
                            t
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = void 0,
                            i = void 0,
                            r = void 0,
                            s = void 0;
                        return e.isDuringDates() ? (n = moment(e.getStartDate(), c.DATE_FORMAT),
                                i = moment(e.getEndDate(), c.DATE_FORMAT)) : (n = g,
                                i = v),
                            e.isAllDay() ? (r = "8:00",
                                s = "17:00") : (r = e.getFromTime(),
                                s = e.getToTime()),
                            new t({
                                restrictionEditable: !1,
                                fromTime: r,
                                toTime: s,
                                startDate: n,
                                endDate: i,
                                weekdays: e.getWeekdays(),
                                isAllDay: e.isAllDay(),
                                isDuringDates: e.isDuringDates()
                            })
                    }
                }]),
                t
        }(Backbone.Model),
        y = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .do-toggle-weekdays-all": function() {
                                e.model.toggleAllWeekdays(!0)
                            },
                            "click .do-toggle-weekdays-none": function() {
                                e.model.toggleAllWeekdays(!1)
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            bootstrapTimepickers: ".bootstrap-timepicker input",
                            timepickerFromTime: ".timepicker-from-time",
                            timepickerToTime: ".timepicker-to-time",
                            datepicker: ".datepicker"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".weekday": "weekdays",
                            ".timeframe-overnight-message": {
                                observe: ["fromTime", "toTime", "isAllDay"],
                                onGet: "_isOvernight",
                                visible: !0
                            },
                            "[name=fromTime]": "fromTime",
                            "[name=toTime]": "toTime",
                            "[name=isAllDay]": "isAllDay",
                            "[name=isDuringDates]": {
                                observe: "isDuringDates",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".timepicker input": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllDay", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                i.default)(e, 2),
                                            n = t[0],
                                            r = t[1];
                                        return n || !r
                                    }
                                }]
                            },
                            ".datepicker": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isDuringDates", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                i.default)(e, 2),
                                            n = t[0],
                                            r = t[1];
                                        return !n || !r
                                    }
                                }]
                            },
                            ".timeframe-weekdays-toggle": {
                                observe: "restrictionEditable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._renderTimePickers(),
                            this._renderDatePickers(),
                            this.stickit()
                    }
                }, {
                    key: "onBeforeDetach",
                    value: function() {
                        this._detachTimePickers(),
                            this._detachDatePickers()
                    }
                }, {
                    key: "_renderTimePickers",
                    value: function() {
                        this.getUI("bootstrapTimepickers").timepicker(h.default.prototype.timepickerOptions);
                        var e = this.model.attributes,
                            t = e.fromTime,
                            n = e.toTime;
                        null != t && this.getUI("timepickerFromTime").timepicker("setTime", t),
                            null != n && this.getUI("timepickerToTime").timepicker("setTime", n)
                    }
                }, {
                    key: "_detachTimePickers",
                    value: function() {
                        this.getUI("timepickerFromTime").data("timepicker").remove(),
                            this.getUI("timepickerToTime").data("timepicker").remove()
                    }
                }, {
                    key: "_renderDatePickers",
                    value: function() {
                        var e = this;
                        this.getUI("datepicker").daterangepicker({
                            autoApply: !0,
                            startDate: this.model.attributes.startDate,
                            endDate: this.model.attributes.endDate
                        }, function(t, n) {
                            e.model.set({
                                startDate: t,
                                endDate: n
                            })
                        })
                    }
                }, {
                    key: "_detachDatePickers",
                    value: function() {
                        this.getUI("datepicker").data("daterangepicker").remove()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getWeekdayFromOrdinal: function(e) {
                                return c.WEEKDAY_ORDINALS[e]
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            timeFrames: [this.model.getTimeFrameData()]
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "_isOvernight",
                    value: function() {
                        return this.model.isOvernight()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/timeframe_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).restrictionEditable,
                            i = void 0 !== n && n,
                            r = _.for(e);
                        return r.set({
                                restrictionEditable: i
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = y,
        t.ViewModel = _
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(428));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return "restrictions-summary restrictions-summary-turn"
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        listRegion: {
                            el: ".restrictions-list-region tbody",
                            replaceElement: !0
                        }
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .do-apply": "_onApplyChanges"
                    }
                }
            }, {
                key: "triggers",
                value: function() {
                    return {
                        "click .do-close": "restriction:summary:close",
                        "click .do-create": "restriction:summary:create"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".restrictions-list-region": {
                            observe: "hasRestrictions",
                            visible: !0
                        },
                        "input, .do-create, .do-apply": {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditRestrictions",
                                onGet: function(e) {
                                    return !e
                                }
                            }]
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        turn: null,
                        viewHelpers: null,
                        canEditRestrictions: !1,
                        subscriptions: {}
                    };
                    this._turn = e.turn,
                        this._canEditRestrictions = e.canEditRestrictions,
                        this._subscriptions = e.subscriptions,
                        this._title = e.title,
                        this._restrictions = this._turn.getTurnData().getRestrictions(),
                        this.model = new Backbone.Model({
                            hasRestrictions: this._restrictions.length > 0,
                            canEditRestrictions: this._canEditRestrictions
                        })
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        summaryTitle: this._title
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this.showChildView("listRegion", new l.default({
                            restrictions: this._restrictions,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._subscriptions
                        }))
                }
            }, {
                key: "_onApplyChanges",
                value: function() {
                    this.triggerMethod("restriction:summary:apply")
                }
            }, {
                key: "onChildviewItemEdit",
                value: function(e) {
                    this.triggerMethod("restriction:item:edit", e.getRestriction())
                }
            }, {
                key: "onChildviewItemDelete",
                value: function(e) {
                    this.triggerMethod("restriction:item:delete", e.getRestriction())
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_turn"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(6)),
        r = h(n(15)),
        s = h(n(2)),
        a = h(n(0)),
        o = h(n(1)),
        l = h(n(3)),
        u = h(n(4)),
        d = n(429),
        c = h(d);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = d.BIG_TOOLTIP_VERT_PLACEMENTS.TOP,
        p = function(e) {
            function t(e, n) {
                (0,
                    a.default)(this, t);
                var i = (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).call(this, e, n));
                return i.listenTo(n, "bigtooltip:show", function() {
                        i._actuallyShow()
                    }),
                    i.listenTo(n, "bigtooltip:hide", function() {
                        i._actuallyHide()
                    }),
                    i
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "events",
                    value: function() {
                        var e;
                        return e = {},
                            (0,
                                r.default)(e, "mouseover " + this.options.hoverElement, "_onHoverElementEnter"),
                            (0,
                                r.default)(e, "mouseout " + this.options.hoverElement, "_onHoverElementExit"),
                            e
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.view.addRegions({
                            bigTooltipRegion: {
                                regionClass: c.default
                            }
                        });
                        var e = this.view.getRegion("bigTooltipRegion");
                        this.listenTo(e, "tooltip:mouseenter", this._onElementEnter),
                            this.listenTo(e, "tooltip:mouseleave", this._onElementExit)
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this._clearAllTimers(),
                            this._actuallyHide(),
                            this.view.removeRegion("bigTooltipRegion")
                    }
                }, {
                    key: "_clearAllTimers",
                    value: function() {
                        clearTimeout(this._showTimeoutHandle),
                            clearTimeout(this._hideTimeoutHandle)
                    }
                }, {
                    key: "_calcVerticalPlacement",
                    value: function(e) {
                        var t = this.options,
                            n = t.getVerticalPlacement,
                            i = t.size,
                            r = t.padding,
                            s = t.hoverElement,
                            a = n(),
                            o = this.$(s),
                            l = 230 + this.tooltipView.$el.height() + o.height();
                        return e.y - l < r.top ? d.BIG_TOOLTIP_VERT_PLACEMENTS.BOTTOM : e.y + l > i.h - r.bottom ? d.BIG_TOOLTIP_VERT_PLACEMENTS.TOP : a || f
                    }
                }, {
                    key: "_calcHorizontalPlacement",
                    value: function(e) {
                        var t = this.options,
                            n = t.getHorizontalPlacement,
                            i = t.size,
                            r = n();
                        if (e.x + 157.5 > i.w)
                            return d.BIG_TOOLTIP_HORIZ_PLACEMENTS.LEFT;
                        if (e.x - 157.5 < 0)
                            return d.BIG_TOOLTIP_HORIZ_PLACEMENTS.RIGHT;
                        if (!r)
                            return d.BIG_TOOLTIP_HORIZ_PLACEMENTS.MIDDLE;
                        var s = e.x + 315 < i.w,
                            a = e.x - 315 > 0;
                        return r === d.BIG_TOOLTIP_HORIZ_PLACEMENTS.LEFT && a || r === d.BIG_TOOLTIP_HORIZ_PLACEMENTS.RIGHT && s ? r : void 0
                    }
                }, {
                    key: "_isOutOfBounds",
                    value: function(e) {
                        var t = this.options,
                            n = t.size,
                            i = t.padding;
                        return e.x < i.left || e.x > n.w - i.right || (e.y < i.top || e.y > n.h - i.bottom)
                    }
                }, {
                    key: "_actuallyShow",
                    value: function() {
                        if (!this._shown) {
                            var e = this.options,
                                t = e.getView,
                                n = (0,
                                    e.getPosition)(),
                                r = t();
                            if (r) {
                                this.tooltipView = r;
                                var s = this.$(this.options.hoverElement),
                                    a = s.offset(),
                                    o = (0,
                                        i.default)({}, this.options);
                                if (o.screenPosition = {
                                        top: a.top + s.height() / 2,
                                        left: a.left + s.width() / 2
                                    },
                                    !this._isOutOfBounds(n)) {
                                    var l = [],
                                        u = this._calcVerticalPlacement(n),
                                        c = this._calcHorizontalPlacement(n);
                                    u === d.BIG_TOOLTIP_VERT_PLACEMENTS.BOTTOM ? o.screenPosition.top += s.height() / 2 : o.screenPosition.top -= s.height() / 2,
                                        l.push(u),
                                        l.push(c),
                                        o.placements = l,
                                        this.view.showChildView("bigTooltipRegion", this.tooltipView, o),
                                        this._shown = !0
                                }
                            }
                        }
                    }
                }, {
                    key: "_actuallyHide",
                    value: function() {
                        this._shown = !1;
                        var e = this.view.getRegion("bigTooltipRegion");
                        e && e.empty()
                    }
                }, {
                    key: "_onHoverElementEnter",
                    value: function() {
                        var e = this;
                        this._showTimeoutHandle = setTimeout(function() {
                            e._actuallyShow(e.position, e.size),
                                e._showTimeoutHandle = null
                        }, 250)
                    }
                }, {
                    key: "_onHoverElementExit",
                    value: function() {
                        null != this._showTimeoutHandle && (clearTimeout(this._showTimeoutHandle),
                                this._showTimeoutHandle = null),
                            this._hide()
                    }
                }, {
                    key: "_onElementEnter",
                    value: function() {
                        this._hideTimeoutHandle && (clearTimeout(this._hideTimeoutHandle),
                                this._hideTimeoutHandle = null),
                            this.view.triggerMethod("tooltip:enter")
                    }
                }, {
                    key: "_onElementExit",
                    value: function() {
                        this._hide(),
                            this.view.triggerMethod("tooltip:leave")
                    }
                }, {
                    key: "_hide",
                    value: function() {
                        var e = this;
                        this._shown && (this._hideTimeoutHandle = setTimeout(function() {
                            e._actuallyHide(),
                                e.hideTimeoutHandle = null
                        }, 150))
                    }
                }]),
                t
        }(Marionette.Behavior);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e(t, n, r, s) {
            (0,
                i.default)(this, e),
            this._fromSegment = t,
                this._toSegment = n,
                this._node = r,
                this._turn = s
        }
        return (0,
                r.default)(e, [{
                key: "getAngle",
                value: function() {
                    return this._node.getAngleToSegment(this._toSegment)
                }
            }, {
                key: "getNode",
                value: function() {
                    return this._node
                }
            }, {
                key: "getFromSegment",
                value: function() {
                    return this._fromSegment
                }
            }, {
                key: "getToSegment",
                value: function() {
                    return this._toSegment
                }
            }, {
                key: "getTurn",
                value: function() {
                    return this._turn
                }
            }, {
                key: "getPoint",
                value: function() {
                    return this._node.attributes.geometry
                }
            }, {
                key: "getDistanceFromPoint",
                value: function() {
                    return 35
                }
            }, {
                key: "hasMultiplePaths",
                value: function() {
                    return !1
                }
            }, {
                key: "isLockedByHigherRank",
                value: function() {
                    return this._fromSegment.isLockedByHigherRank()
                }
            }, {
                key: "isEditable",
                value: function() {
                    return this._fromSegment.isFromNode(this._node) && this._fromSegment.canEditFromConnections() || this._fromSegment.isToNode(this._node) && this._fromSegment.canEditToConnections()
                }
            }, {
                key: "getSegmentPathGeometry",
                value: function() {
                    return new OL.Geometry.LineString([])
                }
            }]),
            e
    }();
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(0)),
        r = s(n(1));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = function() {
        function e() {
            (0,
                i.default)(this, e)
        }
        return (0,
                r.default)(e, [{
                key: "calculate",
                value: function(e, t) {
                    var n = t.isLeftHand,
                        i = void 0 !== n && n,
                        r = t.offsetRegularTurns,
                        s = void 0 !== r && r;
                    0 !== e.length && (this._calculateUturnOffset(e, i),
                        s && this._calculateTurnArrowOffsets(e))
                }
            }, {
                key: "_calculateMaxAngles",
                value: function(e) {
                    var t = e[0].getTurnArrow().getNode(),
                        n = e[0].getTurnArrow().getFromSegment(),
                        i = t.getAngleToSegment(n),
                        r = null,
                        s = null;
                    return e.filter(function(e) {
                        return !e.getTurnArrow().getTurn().isUturn()
                    }).forEach(function(e) {
                        var a = e.getTurnArrow(),
                            o = Math.abs(i - a.getAngle());
                        o > 180 && o <= 360 && (o = 360 - o),
                            o < 90 && (t.getDirectionBetweenSegments(n, a.getToSegment()) ? (null === r || o < r) && (r = o) : (null === s || o < s) && (s = o))
                    }), {
                        maxLeftAngle: r,
                        maxRightAngle: s
                    }
                }
            }, {
                key: "_calculateTurnArrowOffsets",
                value: function(t) {
                    var n = t.filter(function(e) {
                        return !e.getTurnArrow().getTurn().isUturn()
                    }).sort(function(e, t) {
                        return e.getTurnArrow().getAngle() - t.getTurnArrow().getAngle()
                    });
                    if (0 !== n.length) {
                        var i = 0,
                            r = 1 === n.length ? Number.MAX_VALUE : _.last(n).getTurnArrow().getAngle();
                        n.forEach(function(t, s) {
                            var a = t.getTurnArrow(),
                                o = Math.abs(a.getAngle() - r);
                            o > 180 && o <= 360 && (o = 360 - o),
                                o < e.MINIMAL_ARROW_ANGLE && (s !== n.length - 1 || 2 !== n.length) ? i++ : (i = 0,
                                    r = a.getAngle()),
                                t.setOffset(i),
                                r = a.getAngle()
                        })
                    }
                }
            }, {
                key: "_calculateUturnOffset",
                value: function(e, t) {
                    var n = this._calculateMaxAngles(e),
                        i = n.maxLeftAngle,
                        r = n.maxRightAngle,
                        s = 0;
                    t && null !== r && (s = (90 - r) / 90),
                        t || null === i || (s = (90 - i) / 90),
                        e.filter(function(e) {
                            return e.getTurnArrow().getTurn().isUturn()
                        }).forEach(function(e) {
                            e.setOffset(s)
                        })
                }
            }]),
            e
    }();
    a.MINIMAL_ARROW_ANGLE = 25,
        t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = c(n(7)),
        s = c(n(6)),
        a = c(n(0)),
        o = c(n(1)),
        l = c(n(15)),
        u = c(n(44)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(214));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = (i = {},
            (0,
                l.default)(i, d.GROUP_ISSUES, 0),
            (0,
                l.default)(i, d.GROUP_MAP_ISSUES, 1),
            (0,
                l.default)(i, d.ITEM_MAP_PROBLEMS, 2),
            (0,
                l.default)(i, d.ITEM_CLOSED_MAP_PROBLEMS, 3),
            (0,
                l.default)(i, d.ITEM_UPDATE_REQUESTS, 4),
            (0,
                l.default)(i, d.ITEM_CLOSED_UPDATE_REQUESTS, 5),
            (0,
                l.default)(i, d.ITEM_PLACE_UPDATE_REQUESTS, 6),
            (0,
                l.default)(i, d.GROUP_PARKING_ISSUES, 7),
            (0,
                l.default)(i, d.ITEM_PARKING_MAP_PROBLEMS, 8),
            (0,
                l.default)(i, d.ITEM_PARKING_CLOSED_MAP_PROBLEMS, 9),
            (0,
                l.default)(i, d.ITEM_PARKING_PLACE_UPDATE_REQUESTS, 10),
            (0,
                l.default)(i, d.GROUP_PLACES, 11),
            (0,
                l.default)(i, d.ITEM_VENUES, 12),
            (0,
                l.default)(i, d.ITEM_RESIDENTIAL_PLACES, 13),
            (0,
                l.default)(i, d.ITEM_PARKING_PLACES, 14),
            (0,
                l.default)(i, d.GROUP_ROAD, 15),
            (0,
                l.default)(i, d.ITEM_ROAD, 16),
            (0,
                l.default)(i, d.ITEM_JUNCTION_BOXES, 17),
            (0,
                l.default)(i, d.ITEM_CLOSURES, 18),
            (0,
                l.default)(i, d.ITEM_SPEED_CAMERAS, 19),
            (0,
                l.default)(i, d.GROUP_DISPLAY, 20),
            (0,
                l.default)(i, d.ITEM_SATELLITE_IMAGERY, 21),
            (0,
                l.default)(i, d.ITEM_AREA_MANAGERS, 22),
            (0,
                l.default)(i, d.ITEM_GPS_POINTS, 23),
            (0,
                l.default)(i, d.ITEM_LIVE_USERS, 24),
            (0,
                l.default)(i, d.ITEM_EDITABLE_AREAS, 25),
            (0,
                l.default)(i, d.ITEM_DISALLOWED_TURNS, 29),
            (0,
                l.default)(i, d.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, 30),
            i),
        f = function() {
            function e() {
                var t = this;
                (0,
                    a.default)(this, e),
                this._togglerBitNumber = (0,
                        s.default)({}, h),
                    u.default.getLayerSwitcherConfig().forEach(function(e) {
                        (0,
                            s.default)(t._togglerBitNumber, e.bitNumbers)
                    })
            }
            return (0,
                    o.default)(e, [{
                    key: "convertStateToBitfield",
                    value: function(e) {
                        var t = this;
                        return (0,
                            r.default)(e).reduce(function(n, i) {
                            return e[i] && (n |= 1 << t._togglerBitNumber[i]),
                                n
                        }, 0)
                    }
                }, {
                    key: "convertBitFieldToState",
                    value: function(e) {
                        var t = this;
                        return (0,
                            r.default)(this._togglerBitNumber).reduce(function(n, i) {
                            return n[i] = 0 != (e & 1 << t._togglerBitNumber[i]),
                                n
                        }, {})
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(431));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = 27,
        h = function(e) {
            function t(e, n, a) {
                (0,
                    s.default)(this, t);
                var l = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this));
                return l._map = e,
                    l._layers = n,
                    l._rootContainerLayer = null,
                    l._listenToKeys = ["shiftKey", "metaKey", "ctrlKey", "altKey"],
                    l._xy = null,
                    l._downFeature = null,
                    l._hadMouseDown = !1,
                    l._hadMouseUp = !1,
                    l._lastOverFeature = null,
                    l._duringBoxSelection = !1,
                    l._boxHandler = null,
                    l._keyboardShortcuts = null,
                    l._downKeys = [],
                    l._deselectKey = c,
                    l._selectRenderIntent = "select",
                    l._highlightRenderIntent = "highlight",
                    l._highlightSelectedRenderIntent = "highlightselected",
                    l._deletedRenderIntent = "delete",
                    l._highlightDeletedRenderIntent = "highlightdeleted",
                    l._clickOut = !0,
                    l._multipleSelectMode = !1,
                    l.clickTolerance = 4,
                    l.stopClick = !0,
                    l.supportedGeometryTypes = null,
                    l.boxSelectionLayers = null,
                    l.multipleKeys = ["metaKey", "ctrlKey"],
                    l.pathKeys = ["altKey"],
                    (0,
                        i.default)(l, a),
                    l._initLayers(n),
                    l._bindEvents(),
                    l
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "_initLayers",
                    value: function(e) {
                        this._rootContainerLayer = new OpenLayers.Layer.Vector.RootContainer(this.id + "_container", {
                                layers: e
                            }),
                            this._map.addLayer(this._rootContainerLayer),
                            this._moveContainerLayerToTop()
                    }
                }, {
                    key: "_moveContainerLayerToTop",
                    value: function() {
                        var e = Math.max(this._map.Z_INDEX_BASE.Feature - 1, this._rootContainerLayer.getZIndex()) + 1;
                        this._rootContainerLayer.setZIndex(e)
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._map.events.registerPriority("mousedown", this, this._onMouseDown),
                            this._map.events.registerPriority("mouseup", this, this._onMouseUp),
                            this._map.events.registerPriority("click", this, this._onMouseClick),
                            this._map.events.registerPriority("touchstart", this, this._onTouchStart),
                            this._map.events.registerPriority("mousemove", this, this._onMouseMove),
                            this._map.events.on({
                                removelayer: this._handleMapEvents,
                                changelayer: this._handleMapEvents,
                                scope: this
                            }),
                            this._boxHandler = new OpenLayers.Handler.Box(new OpenLayers.Control({
                                map: this._map,
                                layer: this._rootContainerLayer
                            }), {
                                down: this._onBoxSelectionStart.bind(this),
                                done: this._onBoxSelectionDone.bind(this)
                            }, {
                                boxDivClassName: "olHandlerBoxSelectFeature",
                                keyMask: OpenLayers.Handler.MOD_CTRL | OpenLayers.Handler.MOD_SHIFT
                            }),
                            this._boxHandler.activate(),
                            this._keyboardShortcuts = new u.default(this, {
                                keydown: this._onKeyDown
                            }),
                            this._keyboardShortcuts.activate()
                    }
                }, {
                    key: "_getSupportedFeatureFromEvent",
                    value: function(e) {
                        var t = this._rootContainerLayer.getFeatureFromEvent(e);
                        if (t && this._isGeometryTypeSupported(t))
                            return t;
                        return null
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        this._deselectKey === e.keyCode && this._onDeselectKey()
                    }
                }, {
                    key: "_onMouseDown",
                    value: function(e) {
                        if (this._hadMouseDown = !0,
                            this._setDownKeysFromEvent(e),
                            this._xy = e.xy,
                            OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) {
                            this._xy = e.xy;
                            var t = this._getSupportedFeatureFromEvent(e);
                            t && (this._downFeature = t)
                        }
                    }
                }, {
                    key: "_onMouseUp",
                    value: function(e) {
                        this._setDownKeysFromEvent(e),
                            this._hadMouseUp = !0
                    }
                }, {
                    key: "_onMouseClick",
                    value: function(e) {
                        this._setDownKeysFromEvent(e);
                        var t = this._getSupportedFeatureFromEvent(e),
                            n = this._downFeature;
                        (this._downFeature = null,
                            this._hadMouseDown && this._hadMouseUp) && (Math.sqrt(Math.pow(e.xy.x - this._xy.x, 2) + Math.pow(e.xy.y - this._xy.y, 2)) <= this.clickTolerance && (t ? n === t && this._onFeatureClick(t) : this._clickOut && this._onClickOut()));
                        return this._resetMouseState(),
                            this._handleStopClick(t)
                    }
                }, {
                    key: "_resetMouseState",
                    value: function() {
                        this._hadMouseDown = !1,
                            this._hadMouseUp = !1,
                            this._downFeature = null
                    }
                }, {
                    key: "_onTouchStart",
                    value: function(e) {
                        var t = this._getSupportedFeatureFromEvent(e),
                            n = null != t,
                            i = this._clickOut;
                        n ? this._onFeatureClick(t) : i && this._onClickOut()
                    }
                }, {
                    key: "_handleStopClick",
                    value: function(e) {
                        if (this.stopClick && e)
                            return !1
                    }
                }, {
                    key: "_onMouseMove",
                    value: function(e) {
                        this._setDownKeysFromEvent(e);
                        var t = this._getSupportedFeatureFromEvent(e);
                        t && !t.layer && (t = null),
                            t ? (t !== this._lastOverFeature && (this._lastOverFeature && this._onFeatureOut(this._lastOverFeature),
                                    this._onFeatureIn(t)),
                                this._lastOverFeature = t) : this._lastOverFeature && (this._onFeatureOut(this._lastOverFeature),
                                this._lastOverFeature = null)
                    }
                }, {
                    key: "_onBoxSelectionStart",
                    value: function() {
                        this._duringBoxSelection = !0
                    }
                }, {
                    key: "_onBoxSelectionDone",
                    value: function(e) {
                        if (e instanceof OpenLayers.Bounds) {
                            for (var t = this._map.getLonLatFromPixel(new OpenLayers.Pixel(e.left, e.bottom)), n = this._map.getLonLatFromPixel(new OpenLayers.Pixel(e.right, e.top)), i = new OpenLayers.Bounds(t.lon, t.lat, n.lon, n.lat).toGeometry(), r = this.boxSelectionLayers || this._rootContainerLayer.layers || [this._rootContainerLayer], s = void 0, a = [], o = 0; o < r.length; ++o)
                                for (var l = 0, u = (s = r[o]).features.length; l < u; ++l) {
                                    var d = s.features[l];
                                    d.getVisibility() && this._isGeometryTypeSupported(d) && i.intersects(d.geometry) && a.push(d)
                                }
                            this._duringBoxSelection = !1,
                                this.triggerMethod("map:selection:featureBoxSelection", a)
                        }
                    }
                }, {
                    key: "_onDeselectKey",
                    value: function() {
                        this.triggerMethod("map:selection:deselectKey")
                    }
                }, {
                    key: "_onFeatureIn",
                    value: function(e) {
                        this.triggerMethod("map:selection:featureIn", e)
                    }
                }, {
                    key: "_onFeatureOut",
                    value: function(e) {
                        this.triggerMethod("map:selection:featureOut", e)
                    }
                }, {
                    key: "_onFeatureClick",
                    value: function(e) {
                        this._isPathSelect() ? this.triggerMethod("map:selection:pathSelect", {
                            feature: e
                        }) : this.triggerMethod("map:selection:featureClick", {
                            feature: e,
                            addSelection: this._isMultiSelect()
                        })
                    }
                }, {
                    key: "_onClickOut",
                    value: function() {
                        this._isMultiSelect() || this.triggerMethod("map:selection:clickOut", {
                            addSelection: this._isMultiSelect()
                        })
                    }
                }, {
                    key: "_setDownKeysFromEvent",
                    value: function(e) {
                        this._downKeys = this._listenToKeys.filter(function(t) {
                            return Boolean(e[t])
                        })
                    }
                }, {
                    key: "_isMultiSelect",
                    value: function() {
                        var e = this;
                        return this._multipleSelectMode || this._downKeys.some(function(t) {
                            return e.multipleKeys.indexOf(t) > -1
                        })
                    }
                }, {
                    key: "_isPathSelect",
                    value: function() {
                        var e = this;
                        return this._downKeys.some(function(t) {
                            return e.pathKeys.indexOf(t) > -1
                        })
                    }
                }, {
                    key: "highlight",
                    value: function(e, t, n) {
                        var i = e.layer,
                            r = this.selectStyle;
                        r || (r = n ? this._highlightDeletedRenderIntent : t ? this._duringBoxSelection ? this._selectRenderIntent : this._highlightSelectedRenderIntent : this._highlightRenderIntent),
                            i.drawFeature(e, r)
                    }
                }, {
                    key: "unhighlight",
                    value: function(e, t, n) {
                        var i = e.layer;
                        if (i) {
                            var r = this.selectStyle;
                            r || (r = n ? this._deletedRenderIntent : t ? this._selectRenderIntent : e.layer.style || "default"),
                                i.drawFeature(e, r)
                        }
                    }
                }, {
                    key: "_isGeometryTypeSupported",
                    value: function(e) {
                        return null === this.supportedGeometryTypes || this.supportedGeometryTypes.indexOf(e.geometry.CLASS_NAME) > -1
                    }
                }, {
                    key: "toggleMultipleSelection",
                    value: function() {
                        this._multipleSelectMode = !this._multipleSelectMode,
                            this._clickOut = !this._multipleSelectMode
                    }
                }, {
                    key: "getLayer",
                    value: function() {
                        return this._rootContainerLayer
                    }
                }, {
                    key: "resetState",
                    value: function() {
                        this._downKeys = [],
                            this._resetMouseState()
                    }
                }, {
                    key: "_handleMapEvents",
                    value: function() {
                        this._moveContainerLayerToTop()
                    }
                }]),
                t
        }(Marionette.Object);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    n(101),
        n(55),
        n(67),
        n(1251),
        n(1252),
        n(1253),
        n(1254),
        e.exports = n(12).Set
}, function(e, t, n) {
    "use strict";
    var i = n(373),
        r = n(194);
    e.exports = n(374)("Set", function(e) {
        return function() {
            return e(this, arguments.length > 0 ? arguments[0] : void 0)
        }
    }, {
        add: function(e) {
            return i.def(r(this, "Set"), e = 0 === e ? 0 : e, e)
        }
    }, i)
}, function(e, t, n) {
    var i = n(21);
    i(i.P + i.R, "Set", {
        toJSON: n(375)("Set")
    })
}, function(e, t, n) {
    n(376)("Set")
}, function(e, t, n) {
    n(377)("Set")
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(9)),
        r = o(n(19)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e() {
            var t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).maxParallel,
                n = void 0 === t ? 10 : t;
            (0,
                s.default)(this, e),
            this.maxParallel = n,
                this._currentRunningTasksCount = 0,
                this._taskQueue = []
        }
        return (0,
                a.default)(e, [{
                key: "_runTask",
                value: function(e) {
                    var t = this;
                    this._currentRunningTasksCount++;
                    var n = e.fn,
                        s = e.args,
                        a = e.resolve,
                        o = e.reject;
                    try {
                        return r.default.resolve(n.apply(void 0, (0,
                            i.default)(s || []))).then(function(e) {
                            return e
                        }).catch(function(e) {
                            throw e
                        }).finally(function() {
                            t._onTaskFinish()
                        }).then(a).catch(o)
                    } catch (e) {
                        return this._onTaskFinish(),
                            r.default.reject(e)
                    }
                }
            }, {
                key: "_runNextTasks",
                value: function() {
                    for (; this._currentRunningTasksCount < this.maxParallel && this._taskQueue.length > 0;)
                        this._runNextTask()
                }
            }, {
                key: "_onTaskFinish",
                value: function() {
                    this._currentRunningTasksCount--,
                        this._runNextTasks()
                }
            }, {
                key: "_runNextTask",
                value: function() {
                    var e = this._taskQueue.shift();
                    e && this._runTask(e)
                }
            }, {
                key: "addFunction",
                value: function(e, t) {
                    var n = this;
                    return new r.default(function(i, r) {
                        n._taskQueue.push({
                                fn: e,
                                args: t,
                                resolve: i,
                                reject: r
                            }),
                            n._runNextTasks()
                    })
                }
            }, {
                key: "all",
                value: function(e) {
                    var t = this,
                        n = e.map(function(e) {
                            return t.addFunction(e)
                        });
                    return r.default.all(n)
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(2)),
        r = f(n(0)),
        s = f(n(1)),
        a = f(n(3)),
        o = f(n(4)),
        l = f(n(1257)),
        u = n(218),
        d = f(n(215)),
        c = n(1263),
        h = f(n(1269));

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function(e) {
                    this._actionManager = e.actionManager,
                        this._map = e.map,
                        this._selectionManager = e.selectionManager,
                        this._saveController = e.saveController,
                        this._changesLogViewModel = (0,
                            c.createChangesLogViewModel)(this._actionManager, this._saveController),
                        this._changesLogHighlighter = new h.default(this._map),
                        this._bindEvents()
                }
            }, {
                key: "_bindEvents",
                value: function() {
                    this._actionManager.events.on({
                            scope: this,
                            afteraction: this._onDoAction,
                            afterundoaction: this._onUndoAction,
                            afterclearactions: this._onActionsChanged
                        }),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.GROUP_SET_ERRORS, this._onGroupErrors),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.GROUP_REMOVE_ERRORS, this._onRemoveGroupErrors),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.SAVE_GROUP_START, this._onSaveGroupStart),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.SAVE_GROUP_SUCCESS, this._onSaveGroupSuccess),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.SAVE_GROUP_FAIL, this._onSaveGroupFail),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.SAVE_START, this._onSaveStart),
                        this.listenTo(this._saveController, u.SAVE_EVENTS.SAVE_END, this._onSaveEnd)
                }
            }, {
                key: "_onDoAction",
                value: function(e) {
                    var t = e.action,
                        n = this._getActionViewModel(t);
                    !n ? this._rebuildGroupsCollectionData() : (n.setDoneState(!0),
                        this._calculateGroupUndoRedoState(t))
                }
            }, {
                key: "_onUndoAction",
                value: function(e) {
                    var t = e.action;
                    this._getActionViewModel(t).setDoneState(!1),
                        this._calculateGroupUndoRedoState(t)
                }
            }, {
                key: "_calculateGroupUndoRedoState",
                value: function(e) {
                    var t = this._actionManager.getActionGroupId(e);
                    this._changesLogViewModel.getGroupViewModelByGroupId(t).calculateGroupRedoUndoState()
                }
            }, {
                key: "_getActionViewModel",
                value: function(e) {
                    var t = this._actionManager.getActionGroupId(e);
                    return this._changesLogViewModel.getActionViewModelByGroupAndActionId(t, e.getID())
                }
            }, {
                key: "_onGroupErrors",
                value: function(e) {
                    var t = e.groupId,
                        n = this._saveController.getGroupSaveErrors(t);
                    this._changesLogViewModel.setGroupErrors(t, n)
                }
            }, {
                key: "_onRemoveGroupErrors",
                value: function(e) {
                    this._changesLogViewModel.setGroupErrors(e, [])
                }
            }, {
                key: "_onSaveGroupStart",
                value: function(e) {
                    this._changesLogViewModel.setGroupSavingStatus(e, {
                        saving: !0
                    })
                }
            }, {
                key: "_onSaveGroupSuccess",
                value: function(e) {
                    this._changesLogViewModel.setGroupSavingStatus(e, {
                        success: !0
                    })
                }
            }, {
                key: "_onSaveGroupFail",
                value: function(e) {
                    this._changesLogViewModel.setGroupSavingStatus(e, {
                        fail: !0
                    })
                }
            }, {
                key: "_onActionsChanged",
                value: function() {
                    this._rebuildGroupsCollectionData()
                }
            }, {
                key: "_onSaveStart",
                value: function() {
                    this._changesLogViewModel.set("saving", !0)
                }
            }, {
                key: "_onSaveEnd",
                value: function() {
                    this._changesLogViewModel.set("saving", !1)
                }
            }, {
                key: "_rebuildGroupsCollectionData",
                value: function() {
                    var e = (0,
                        c.createGroupsData)(this._actionManager, this._saveController);
                    this._changesLogViewModel.setGroupsCollectionData(e)
                }
            }, {
                key: "saveAllGroups",
                value: function() {
                    return this.saveController.save()
                }
            }, {
                key: "saveGroup",
                value: function(e, t) {
                    return this.saveController.saveGroup(e, t)
                }
            }, {
                key: "createChangesLogView",
                value: function() {
                    this._rebuildGroupsCollectionData();
                    var e = new l.default({
                        model: this._changesLogViewModel,
                        actionManager: this._actionManager,
                        map: this._map,
                        selectionManager: this._selectionManager,
                        saveController: this._saveController,
                        childViewTriggers: {
                            "action:toggle": "action:toggle",
                            "action:toggle:highlight": "action:toggle:highlight",
                            "action:toggle:unhighlight": "action:toggle:unhighlight",
                            "action:featureId:click": "action:featureId:click",
                            "action:featureId:enter": "action:featureId:enter",
                            "action:featureId:leave": "action:featureId:leave",
                            "save:ignore:click": "save:ignore:click",
                            "error:focus:click": "error:focus:click",
                            "group:undoAll:click": "group:undoAll:click",
                            "group:redoAll:click": "group:redoAll:click"
                        }
                    });
                    return this.listenTo(e, "action:toggle", this._onActionToggleClick.bind(this)),
                        this.listenTo(e, "action:toggle:highlight", this.__onActionToggleHighlight.bind(this)),
                        this.listenTo(e, "action:toggle:unhighlight", this.__onActionToggleUnhighlight.bind(this)),
                        this.listenTo(e, "action:featureId:click", this._onItemFeatureIdClick.bind(this)),
                        this.listenTo(e, "action:featureId:enter", this._onItemFeatureIdEnter.bind(this)),
                        this.listenTo(e, "action:featureId:leave", this._onItemFeatureIdLeave.bind(this)),
                        this.listenTo(e, "save:ignore:click", this._onSaveIgnoreClick.bind(this)),
                        this.listenTo(e, "error:focus:click", this._onErrorFocusClick.bind(this)),
                        this.listenTo(e, "group:undoAll:click", this._onGroupUndoAllClick.bind(this)),
                        this.listenTo(e, "group:redoAll:click", this._onGroupRedoAllClick.bind(this)),
                        this.listenTo(e, "destroy", this._onDestoryChangesLogView.bind(this)),
                        e
                }
            }, {
                key: "_onActionToggleClick",
                value: function(e) {
                    var t = this._actionManager.getActionById(e);
                    if (this._actionManager.isActionDone(t)) {
                        var n = this._actionManager.undoGroupAction(t);
                        W.Report.changesLogAction("undo_multiple", n)
                    } else {
                        var i = this._actionManager.redoGroupAction(t);
                        W.Report.changesLogAction("redo_multiple", i)
                    }
                    this._updateGoingToChange(t)
                }
            }, {
                key: "__onActionToggleHighlight",
                value: function(e) {
                    var t = this._actionManager.getActionById(e);
                    this._updateGoingToChange(t)
                }
            }, {
                key: "__onActionToggleUnhighlight",
                value: function(e) {
                    var t = this._actionManager.getActionById(e),
                        n = this._actionManager.getActionGroupId(t),
                        i = this._changesLogViewModel.getGroupViewModelByGroupId(n).getActionsCollection();
                    this._resetDotsState(i)
                }
            }, {
                key: "_updateGoingToChange",
                value: function(e) {
                    var t = this._actionManager.getActionGroupId(e),
                        n = this._changesLogViewModel.getGroupViewModelByGroupId(t).getActionsCollection(),
                        i = this._getActionViewModel(e),
                        r = n.indexOf(i);
                    this._resetDotsState(n),
                        this._actionManager.canUndoAction(e) ? this._setGoingToUndo(n, 0, r + 1) : this._setGoingToRedo(n, r, n.length)
                }
            }, {
                key: "_setGoingToRedo",
                value: function(e, t, n) {
                    for (var i = t; i < n; i++) {
                        var r = e.at(i),
                            s = this._actionManager.getActionById(r.get("actionId"));
                        this._actionManager.canRedoAction(s) && r.set("goingToEnable", !0)
                    }
                }
            }, {
                key: "_setGoingToUndo",
                value: function(e, t, n) {
                    for (var i = t; i < n; i++) {
                        var r = e.at(i),
                            s = this._actionManager.getActionById(r.get("actionId"));
                        this._actionManager.canUndoAction(s) && r.set("goingToDisable", !0)
                    }
                }
            }, {
                key: "_resetDotsState",
                value: function(e) {
                    e.forEach(function(e) {
                        e.set("goingToDisable", !1),
                            e.set("goingToEnable", !1)
                    })
                }
            }, {
                key: "_onItemFeatureIdClick",
                value: function(e) {
                    var t = e.featureUniqueId,
                        n = e.actionId,
                        i = this._getFocusFeatureByActionIdAndUniqueId(t, n);
                    if (i) {
                        var r = i.geometry;
                        if (r) {
                            var s = r.getBounds().clone();
                            this._map.setCenter(s.getCenterLonLat()),
                                this._selectionManager.setSelectedModels([i])
                        }
                        W.Report.changesLogAction("focus_on_id", i.attributes.type)
                    }
                }
            }, {
                key: "_onItemFeatureIdEnter",
                value: function(e) {
                    var t = e.featureUniqueId,
                        n = e.actionId,
                        i = this._getFocusFeatureByActionIdAndUniqueId(t, n);
                    i && this._changesLogHighlighter.highlightFeature(i)
                }
            }, {
                key: "_onItemFeatureIdLeave",
                value: function() {
                    this._changesLogHighlighter.removeAllFeatures()
                }
            }, {
                key: "_getFocusFeatureByActionIdAndUniqueId",
                value: function(e, t) {
                    return this._actionManager.getActionById(t).getFocusFeatures().find(function(t) {
                        return t.getUniqueID() === e
                    })
                }
            }, {
                key: "_onSaveIgnoreClick",
                value: function(e) {
                    this._saveController.isIgnorable(e) && (this._saveController.saveGroup(e, {
                            ignoreWarnings: !0
                        }),
                        W.Report.changesLogAction("save_and_ignore"))
                }
            }, {
                key: "_onErrorFocusClick",
                value: function(e) {
                    var t = this,
                        n = e.get("geometry");
                    this._overlayRenderer && this._overlayRenderer.destroy(),
                        this._overlayRenderer = new d.default(this._map),
                        this._overlayRenderer.drawOverlay(),
                        this._overlayRenderer.drawAndFocusSpotlightAtPoint(n),
                        W.Report.changesLogAction("focus_on_error"),
                        setTimeout(function() {
                            t._overlayRenderer && (t._overlayRenderer.destroy(),
                                t._overlayRenderer = null)
                        }, 800)
                }
            }, {
                key: "_onGroupUndoAllClick",
                value: function(e) {
                    this._actionManager.undoEntireGroupById(e),
                        W.Report.changesLogAction("undo_all")
                }
            }, {
                key: "_onGroupRedoAllClick",
                value: function(e) {
                    this._actionManager.redoEntireGroupById(e),
                        W.Report.changesLogAction("redo_all")
                }
            }, {
                key: "_onDestoryChangesLogView",
                value: function() {
                    this._changesLogHighlighter.destroyDrawingContext()
                }
            }]),
            t
    }(Marionette.Object);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(3)),
        a = u(n(1)),
        o = u(n(4)),
        l = u(n(1258));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.map = e.map,
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        changesList: ".groups-list-region"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".save-loading": {
                            observe: "saving",
                            visible: !0
                        },
                        ".title": "title"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        mouseleave: "_onMouseleave",
                        click: "_onMouseClick"
                    }
                }
            }, {
                key: "className",
                value: function() {
                    return "changes-log-container"
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ChangesLog/templates/changes-log-view"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "_showGroupsView",
                value: function() {
                    this.showChildView("changesList", new Marionette.CollectionView({
                        collection: this.model.getGroupsCollection(),
                        childView: l.default,
                        childViewTriggers: {
                            "action:toggle": "action:toggle",
                            "action:toggle:highlight": "action:toggle:highlight",
                            "action:toggle:unhighlight": "action:toggle:unhighlight",
                            "action:featureId:click": "action:featureId:click",
                            "action:featureId:enter": "action:featureId:enter",
                            "action:featureId:leave": "action:featureId:leave",
                            "save:ignore:click": "save:ignore:click",
                            "error:focus:click": "error:focus:click",
                            "group:undoAll:click": "group:undoAll:click",
                            "group:redoAll:click": "group:redoAll:click"
                        }
                    }))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this._showGroupsView()
                }
            }, {
                key: "_onMouseClick",
                value: function(e) {
                    e.preventDefault(),
                        e.stopPropagation()
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(3)),
        a = d(n(1)),
        o = d(n(4)),
        l = d(n(1259)),
        u = d(n(1261));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.groupId = n.model.get("groupId"),
                n.actionManager = n.model.get("actionManager"),
                n.model.calculateGroupRedoUndoState(),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .undo-all": "_onUndoAllClick",
                        "click .redo-all": "_onRedoAllClick"
                    }
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        "action:toggle": "action:toggle",
                        "action:toggle:highlight": "action:toggle:highlight",
                        "action:toggle:unhighlight": "action:toggle:unhighlight",
                        "action:featureId:click": "action:featureId:click",
                        "action:featureId:enter": "action:featureId:enter",
                        "action:featureId:leave": "action:featureId:leave",
                        "save:ignore:click": "save:ignore:click",
                        "error:focus:click": "error:focus:click"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        actionsRegion: ".actions-items-list-region",
                        saveErrorActionRegion: ".save-error-actions-region"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".undo-all": {
                            observe: "showUndoAll",
                            visible: !0
                        },
                        ".redo-all": {
                            observe: "showRedoAll",
                            visible: !0
                        },
                        ":el": {
                            classes: {
                                "has-error": {
                                    observe: "hasError"
                                },
                                "has-warning": {
                                    observe: "hasWarning"
                                },
                                saving: {
                                    observe: "saving"
                                }
                            }
                        },
                        ".save-error-actions-region": {
                            observe: "showErrorsRegion",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "errorsViewModelBindings",
                value: function() {
                    return {
                        ":el": {
                            classes: {
                                "has-error": {
                                    observe: "hasError"
                                },
                                "has-warning": {
                                    observe: "hasWarning"
                                }
                            }
                        },
                        ".save-error-actions-region": {
                            observe: "showErrorsRegion",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        tooltips: ".tooltip-item"
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ChangesLog/templates/group-view"
                }
            }, {
                key: "className",
                get: function() {
                    return "actions-group-container"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "onRender",
                value: function() {
                    this._showActions(),
                        this._showErrors(),
                        this.stickit(),
                        this.stickit(this.model.getErrorsViewModel(), this.errorsViewModelBindings()),
                        this.ui.tooltips.tooltip()
                }
            }, {
                key: "_showActions",
                value: function() {
                    this.showChildView("actionsRegion", new Marionette.CollectionView({
                        collection: this.model.getActionsCollection(),
                        childView: l.default,
                        childViewTriggers: {
                            "action:toggle": "action:toggle",
                            "action:toggle:highlight": "action:toggle:highlight",
                            "action:toggle:unhighlight": "action:toggle:unhighlight",
                            "action:featureId:click": "action:featureId:click",
                            "action:featureId:enter": "action:featureId:enter",
                            "action:featureId:leave": "action:featureId:leave"
                        }
                    }))
                }
            }, {
                key: "_showErrors",
                value: function() {
                    var e = this.model.getErrorsViewModel();
                    this.showChildView("saveErrorActionRegion", new u.default({
                        groupId: this.groupId,
                        model: e,
                        collection: e.getErrorsCollection(),
                        childViewTriggers: {
                            "save:ignore:click": "save:ignore:click",
                            "error:focus:click": "error:focus:click"
                        }
                    }))
                }
            }, {
                key: "_onUndoAllClick",
                value: function() {
                    this.triggerMethod("group:undoAll:click", this.groupId)
                }
            }, {
                key: "_onRedoAllClick",
                value: function() {
                    this.triggerMethod("group:redoAll:click", this.groupId)
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1260)),
        u = d(n(16));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "bindings",
                value: function() {
                    return {
                        ":el": {
                            classes: {
                                reverted: {
                                    observe: "done",
                                    onGet: _.negate(_.identity)
                                },
                                going_to_disable: {
                                    observe: "goingToDisable"
                                },
                                going_to_enable: {
                                    observe: "goingToEnable"
                                }
                            }
                        },
                        ".undo-tooltip": {
                            observe: "done",
                            visible: !0
                        },
                        ".redo-tooltip": {
                            observe: "done",
                            visible: !0,
                            onGet: _.negate(_.identity)
                        },
                        ".title": {
                            observe: "description",
                            onGet: function(e) {
                                return e || I18n.t("save.changes_log.unknown_action")
                            }
                        },
                        ".timestamp": {
                            observe: "timestamp",
                            onGet: function(e) {
                                return u.default.timeString(e)
                            }
                        }
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        tooltip: ".tooltip-item"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .dot-container": "_onDotClick",
                        "mouseenter .dot-container": "_onDotEnter",
                        "mouseleave .dot-container": "_onDotLeave"
                    }
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        "action:featureId:click": "action:featureId:click",
                        "action:featureId:enter": "action:featureId:enter",
                        "action:featureId:leave": "action:featureId:leave"
                    }
                }
            }, {
                key: "className",
                value: function() {
                    return "action-item"
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        idsRegion: ".ids-region"
                    }
                }
            }, {
                key: "_onDotClick",
                value: function() {
                    this.triggerMethod("action:toggle", this.model.get("actionId"))
                }
            }, {
                key: "_onDotEnter",
                value: function() {
                    this.triggerMethod("action:toggle:highlight", this.model.get("actionId"))
                }
            }, {
                key: "_onDotLeave",
                value: function() {
                    this.triggerMethod("action:toggle:unhighlight", this.model.get("actionId"))
                }
            }, {
                key: "onRender",
                value: function() {
                    this._showIdsList(),
                        this.stickit(),
                        this.ui.tooltip.tooltip()
                }
            }, {
                key: "_showIdsList",
                value: function() {
                    var e = this._createFeatureIdsCollectionView();
                    this.showChildView("idsRegion", e)
                }
            }, {
                key: "_createFeatureIdsCollectionView",
                value: function() {
                    var e = new Marionette.CollectionView({
                        collection: this.model.getIdsCollection(),
                        childView: l.default
                    });
                    return this.listenTo(e, "childview:action:featureId:click", this._onItemFeatureIdClick.bind(this)),
                        this.listenTo(e, "childview:action:featureId:enter", this._onItemFeatureIdEnter.bind(this)),
                        this.listenTo(e, "childview:action:featureId:leave", this._onItemFeatureIdLeave.bind(this)),
                        e
                }
            }, {
                key: "_onItemFeatureIdClick",
                value: function(e) {
                    this.triggerMethod("action:featureId:click", {
                        featureUniqueId: e,
                        actionId: this.model.get("actionId")
                    })
                }
            }, {
                key: "_onItemFeatureIdEnter",
                value: function(e) {
                    this.triggerMethod("action:featureId:enter", {
                        featureUniqueId: e,
                        actionId: this.model.get("actionId")
                    })
                }
            }, {
                key: "_onItemFeatureIdLeave",
                value: function(e) {
                    this.triggerMethod("action:featureId:leave", {
                        featureUniqueId: e,
                        actionId: this.model.get("actionId")
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ChangesLog/templates/action-view"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        mouseenter: "_onMouseenter",
                        mouseleave: "_onMouseleave",
                        click: "_onFeatureIdClick"
                    }
                }
            }, {
                key: "className",
                value: function() {
                    return "feature-id"
                }
            }, {
                key: "_onFeatureIdClick",
                value: function() {
                    this.triggerMethod("action:featureId:click", this.model.get("featureUniqueId"))
                }
            }, {
                key: "_onMouseenter",
                value: function() {
                    this.triggerMethod("action:featureId:enter", this.model.get("featureUniqueId"))
                }
            }, {
                key: "_onMouseleave",
                value: function() {
                    this.triggerMethod("action:featureId:leave", this.model.get("featureUniqueId"))
                }
            }, {
                key: "template",
                get: function() {
                    var e = this;
                    return function() {
                        return e.model.get("featureUniqueId")
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(3)),
        a = u(n(1)),
        o = u(n(4)),
        l = u(n(1262));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.groupId = e.groupId,
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .save-and-ignore": "_onSaveAndIgnoreClicked"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        listRegion: ".list-region"
                    }
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        "error:focus:click": "error:focus:click"
                    }
                }
            }, {
                key: "_onChildFocusClicked",
                value: function(e) {
                    this.trigger("error:focus:click", e.model)
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".save-and-ignore": {
                            observe: "isIgnoreable",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-list-view"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "onRender",
                value: function() {
                    this.showChildView("listRegion", new Marionette.CollectionView({
                            collection: this.collection,
                            childView: l.default,
                            childViewTriggers: function() {
                                return {
                                    "error:focus:click": "error:focus:click"
                                }
                            }
                        })),
                        this.stickit()
                }
            }, {
                key: "_onSaveAndIgnoreClicked",
                value: function() {
                    this.triggerMethod("save:ignore:click", this.groupId)
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return "error-item"
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .focus": "_onFocusClicked"
                    }
                }
            }, {
                key: "_onFocusClicked",
                value: function() {
                    this.triggerMethod("error:focus:click", this.model)
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".title": "title",
                        ".solution": "solutionText",
                        ".pan-button": {
                            observe: "geometry",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-view"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.createGroupsData = t.createChangesLogViewModel = void 0;
    var i = o(n(10)),
        r = o(n(61)),
        s = o(n(62)),
        a = o(n(1264));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function l(e, t) {
        var n = function(e) {
                return e.getActions(!0).sort(function(e, t) {
                    return t.getTimestamp() - e.getTimestamp()
                }).map(function(t) {
                    return {
                        groupId: e.getActionGroupId(t),
                        actionId: t.getID(),
                        done: e.isActionDone(t),
                        idsList: t.getFocusFeatures().map(function(e) {
                            return e.getUniqueID()
                        }),
                        description: t.getDescription(),
                        timestamp: t.getTimestamp()
                    }
                })
            }(e),
            a = _.groupBy(n, function(e) {
                return e.groupId
            }),
            o = t.getAllErrorsByGroupsIds();
        return (0,
            s.default)((0,
            r.default)(a)).map(function(e) {
            var t = (0,
                    i.default)(e, 2),
                n = t[0];
            return {
                groupId: n,
                actionsData: t[1],
                errors: o[n]
            }
        })
    }
    t.createChangesLogViewModel = function(e, t) {
            return new a.default({
                actionsCount: e.getActionsNum(),
                groupsCollectionData: l(e, t)
            })
        },
        t.createGroupsData = l
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1265));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        saving: !1,
                        actionsCount: 0,
                        failedActionsCount: 0,
                        title: ""
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._groupsCollection = new Backbone.Collection([], {
                            model: l.default,
                            comparator: function(e, t) {
                                return t.getFirstActionTimestamp() - e.getFirstActionTimestamp()
                            }
                        }),
                        this.setGroupsCollectionData(e.groupsCollectionData),
                        this._initializeTitle()
                }
            }, {
                key: "_initializeTitle",
                value: function() {
                    this.on("change:actionsCount change:failedActionsCount", this._buildTitle.bind(this)),
                        this._buildTitle()
                }
            }, {
                key: "_buildTitle",
                value: function() {
                    var e = this.get("failedActionsCount"),
                        t = this.get("actionsCount"),
                        n = "";
                    n = e > 0 ? I18n.t("save.changes_log.failed_title", {
                            count: e
                        }) : I18n.t("save.changes_log.title", {
                            count: t
                        }),
                        this.set("title", n)
                }
            }, {
                key: "setGroupSavingStatus",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        n = t.saving,
                        i = void 0 !== n && n,
                        r = t.success,
                        s = void 0 !== r && r,
                        a = t.fail,
                        o = void 0 !== a && a,
                        l = this.getGroupViewModelByGroupId(e);
                    l && (l.setSaving(i),
                        l.setSuccess(s),
                        l.setFailed(o))
                }
            }, {
                key: "setGroupsCollectionData",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    this._groupsCollection.reset(e),
                        this._calculateActionsCount(),
                        this._calculateFailedActionsCount()
                }
            }, {
                key: "_calculateActionsCount",
                value: function() {
                    var e = this._groupsCollection.reduce(function(e, t) {
                        return e + t.getActionsCollection().size()
                    }, 0);
                    this.set("actionsCount", e)
                }
            }, {
                key: "_calculateFailedActionsCount",
                value: function() {
                    var e = this._groupsCollection.reduce(function(e, t) {
                        return e + t.getFailedActionsCount()
                    }, 0);
                    this.set("failedActionsCount", e)
                }
            }, {
                key: "setGroupErrors",
                value: function(e, t) {
                    var n = this.getGroupViewModelByGroupId(e);
                    n && (n.getErrorsViewModel().setErrors(t),
                        this._calculateFailedActionsCount())
                }
            }, {
                key: "getGroupViewModelByGroupId",
                value: function(e) {
                    return this._groupsCollection.findWhere({
                        groupId: e
                    })
                }
            }, {
                key: "getActionViewModelByGroupAndActionId",
                value: function(e, t) {
                    var n = this.getGroupViewModelByGroupId(e);
                    if (!n)
                        return null;
                    var i = n.getActionsCollection();
                    return i && i.length > 0 ? i.findWhere({
                        actionId: t
                    }) : void 0
                }
            }, {
                key: "getGroupsCollection",
                value: function() {
                    return this._groupsCollection
                }
            }]),
            t
    }(Backbone.Model);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1266)),
        u = d(n(1267));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        groupId: 0,
                        showRedoAll: !1,
                        showUndoAll: !1,
                        saving: !1
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._actionsCollection = new Backbone.Collection([], {
                            model: l.default
                        }),
                        this._errors = e.errors || [],
                        this._errorsViewModel = new u.default,
                        this._errorsViewModel.setErrors(this._errors),
                        this._actionsCollection.reset(e.actionsData)
                }
            }, {
                key: "calculateGroupRedoUndoState",
                value: function() {
                    var e = this._actionsCollection.every(function(e) {
                            return !e.get("done")
                        }),
                        t = this._actionsCollection.some(function(e) {
                            return e.get("done")
                        });
                    this.set({
                        showRedoAll: e,
                        showUndoAll: t
                    })
                }
            }, {
                key: "getActionsCollection",
                value: function() {
                    return this._actionsCollection
                }
            }, {
                key: "getErrorsViewModel",
                value: function() {
                    return this._errorsViewModel
                }
            }, {
                key: "getFailedActionsCount",
                value: function() {
                    var e = this.getErrorsViewModel(),
                        t = e.get("hasError"),
                        n = e.get("hasWarning");
                    return t || n ? this.getActionsCollection().size() : 0
                }
            }, {
                key: "getFirstActionTimestamp",
                value: function() {
                    var e = this._actionsCollection.first();
                    return e ? e.get("timestamp") : 0
                }
            }, {
                key: "setSaving",
                value: function(e) {
                    this.set("saving", e)
                }
            }, {
                key: "setFailed",
                value: function(e) {
                    this.set("failed", e)
                }
            }, {
                key: "setSuccess",
                value: function(e) {
                    this.set("success", e)
                }
            }]),
            t
    }(Backbone.Model);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        groupId: null,
                        actionId: null,
                        done: !1,
                        goingToDisable: !1,
                        goingToEnable: !1,
                        description: "",
                        timestamp: 0
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._idsCollection = new Backbone.Collection(e.idsList.map(function(e) {
                        return {
                            featureUniqueId: e
                        }
                    }))
                }
            }, {
                key: "getIdsCollection",
                value: function() {
                    return this._idsCollection
                }
            }, {
                key: "setDoneState",
                value: function(e) {
                    this.set("done", e)
                }
            }]),
            t
    }(Backbone.Model);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1268));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        isIgnoreable: !1,
                        hasError: !1,
                        hasWarning: !1,
                        showErrorsRegion: !1
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this._errorsCollection = new Backbone.Collection([], {
                        model: l.default
                    })
                }
            }, {
                key: "setErrors",
                value: function(e) {
                    var t = e.map(function(e) {
                        return l.default.fromErrorModel(e)
                    });
                    this._errorsCollection.reset(t),
                        this.set("showErrorsRegion", this._errorsCollection.length > 0),
                        this.set("hasError", this._hasError()),
                        this.set("hasWarning", this._hasWarning()),
                        this.set("isIgnoreable", this._isIgnorable())
                }
            }, {
                key: "_isIgnorable",
                value: function() {
                    return this._errorsCollection.all(function(e) {
                        return e.get("ignorable")
                    })
                }
            }, {
                key: "_hasError",
                value: function() {
                    var e = this._errorsCollection;
                    return e.size() > 0 && e.some(function(e) {
                        return !e.get("ignorable")
                    })
                }
            }, {
                key: "_hasWarning",
                value: function() {
                    var e = this._errorsCollection;
                    return e.size() > 0 && e.every(function(e) {
                        return e.get("ignorable")
                    })
                }
            }, {
                key: "getErrorsCollection",
                value: function() {
                    return this._errorsCollection
                }
            }]),
            t
    }(Backbone.Model);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(216));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        ignorable: !1,
                        code: 0,
                        details: "",
                        geometry: null,
                        collatedCount: 0,
                        solution: "",
                        title: "",
                        solutionText: "",
                        collatedText: ""
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    var t = this._getTitle(),
                        n = this._getSolution(),
                        i = this._getCollatedText();
                    this.set({
                        title: t,
                        solutionText: n,
                        collatedText: i
                    })
                }
            }, {
                key: "_getTitle",
                value: function() {
                    return this._getTranslatedTitle() || this._getServerTitle() || this._getDefaultTitle()
                }
            }, {
                key: "_getCollatedText",
                value: function() {
                    var e = this.get("collatedCount"),
                        t = "";
                    return null != e && e > 1 && (t = I18n.t("save.error.collated", {
                            count: e
                        })),
                        t
                }
            }, {
                key: "_getTranslationsByCode",
                value: function(e) {
                    return I18n.t("save.error_types")[e]
                }
            }, {
                key: "_getDefaultTitle",
                value: function() {
                    var e = l.default.prototype.defaults.code,
                        t = this._getTranslationsByCode(e);
                    if (t)
                        return t.title
                }
            }, {
                key: "_getServerTitle",
                value: function() {
                    return this.get("details")
                }
            }, {
                key: "_getTranslatedTitle",
                value: function() {
                    var e = this._getTranslationsByCode(this.get("code"));
                    if (e)
                        return e.title
                }
            }, {
                key: "_getSolution",
                value: function() {
                    var e = this._getTranslationsByCode(this.get("code"));
                    return e && e.solution ? e.solution : I18n.t("save.default_solution")
                }
            }], [{
                key: "fromErrorModel",
                value: function(e) {
                    return new t(e.attributes)
                }
            }]),
            t
    }(Backbone.Model);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(0)),
        r = a(n(1)),
        s = a(n(211));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this._map = t
        }
        return (0,
                r.default)(e, [{
                key: "highlightFeature",
                value: function(e) {
                    this._getDrawingContext().addGeometry(e.geometry)
                }
            }, {
                key: "removeAllFeatures",
                value: function() {
                    this._getDrawingContext().removeAllFeatures()
                }
            }, {
                key: "destroyDrawingContext",
                value: function() {
                    null != this._drawingContext && (this._drawingContext.destroy(),
                        this._drawingContext = null)
                }
            }, {
                key: "_getDrawingContext",
                value: function() {
                    return null == this._drawingContext && (this._drawingContext = this._map.getDrawingContext(),
                            this._drawingContext.setStyleMap(s.default),
                            this._drawingContext.moveLayerToTop()),
                        this._drawingContext
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = u(n(15)),
        s = u(n(406)),
        a = n(153),
        o = u(n(1271)),
        l = u(n(1414));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = Marionette.Object.extend({
        MODE_TO_CLASS: (i = {},
            (0,
                r.default)(i, s.default.DEFAULT, o.default),
            (0,
                r.default)(i, s.default.MTE, l.default),
            i),
        initialize: function(e) {
            this.model = e.model,
                this.sidebarRegion = e.layout.getRegion("sidebarRegion"),
                this.toolbarRegion = e.layout.getRegion("toolbarRegion"),
                this.topbarRegion = e.layout.getRegion("topbarRegion")
        },
        activate: function() {
            return this.model.on("change:mode change:sandbox change:user", this._onModeChange, this),
                W.prefs.on("change:isImperial", this._onModeChange, this),
                this._onModeChange("activate")
        },
        restore: function(e) {
            this.mode.restore && this.mode.restore(e)
        },
        canExitMode: function() {
            return this.mode && !this.mode.blockingExit()
        },
        getExitError: function() {
            if (this.mode)
                return this.mode.blockingExitReason()
        },
        getState: function() {
            if (this.mode && this.mode.getState)
                return this.mode.getState()
        },
        _onModeChange: function() {
            return this._setMode(this.model.get("mode"))
        },
        _setMode: function(e) {
            this.mode && (this.mode.exit(),
                this.mode.off(a.STATE_CHANGED, this._onModeStateChange, this));
            var t = this.MODE_TO_CLASS[e];
            return this.mode = new t,
                this.toolbarRegion.show(this.mode.getToolbarLayout()),
                this.topbarRegion.show(this.mode.getTopbarLayout()),
                this.sidebarRegion.show(this.mode.getSidebarLayout()),
                this.mode.enter(),
                this.mode.on(a.STATE_CHANGED, this._onModeStateChange, this)
        },
        _onModeStateChange: function() {
            return this.trigger(a.STATE_CHANGED)
        }
    });
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(1272)),
        r = o(n(1298)),
        s = o(n(1385)),
        a = o(n(1408));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = Marionette.Object.extend({
        sidebarLayout: null,
        feedControl: null,
        initialize: function() {
            this.feedControl = this._createFeed(),
                this.sidebarLayout = new r.default({
                    model: W.app,
                    selectionManager: W.selectionManager,
                    editingMediator: W.editingMediator,
                    dataModel: W.model,
                    sandbox: W.app.isSandboxMode(),
                    loggedIn: W.app.isLoggedIn(),
                    feedControl: this.feedControl,
                    streetViewController: W.streetViewController
                }),
                this.toolbarController = new s.default({
                    actionManager: W.model.actionManager,
                    togglerTree: W.togglerTree,
                    app: W.app,
                    controller: W.controller,
                    dataModel: W.model,
                    loginManager: W.loginManager,
                    map: W.map,
                    mediator: W.editingMediator,
                    selectionManager: W.selectionManager,
                    saveController: W.saveController
                }),
                this.topbarController = new a.default({
                    dataModel: W.model,
                    globalVent: W.vent,
                    managedAreasRepository: W.model.managedAreas,
                    map: W.map
                })
        },
        _onEditingHouseNumbersChanged: function() {
            this.toolbarController.onEditingHouseNumbersChanged(),
                this.sidebarLayout.onEditingHouseNumbersChanged()
        },
        getSidebarLayout: function() {
            return this.sidebarLayout
        },
        getToolbarLayout: function() {
            return this.toolbarController.toolbarLayout
        },
        getTopbarLayout: function() {
            return this.topbarController.layout
        },
        enter: function() {
            this.feedControl && W.app.loginManager.isLoggedIn() && (W.app.loginManager.isFirstLogin() ? this.feedControl.startFirstTimePolling() : this.feedControl.refresh()),
                W.editingMediator.on("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this)
        },
        exit: function() {
            return this.feedControl && this.feedControl.destroy(),
                this.toolbarController.destroy(),
                this.topbarController.destroy(),
                W.editingMediator.off("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this),
                W.selectionManager.unselectAll()
        },
        blockingExit: function() {
            return W.model.actionManager.canUndo()
        },
        blockingExitReason: function() {
            return I18n.t("modes.exit.save_changes")
        },
        _createFeed: function() {
            return this.feedControl = new i.default({
                    container: W.map.panelRegion,
                    startNotificationId: W.app._urlParams.notification,
                    app: W.app
                }),
                this.feedControl
        }
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(1273)),
        r = c(n(1279)),
        s = c(n(1280)),
        a = c(n(434)),
        o = c(n(1287)),
        l = c(n(1289)),
        u = c(n(1293)),
        d = c(n(1296));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = Marionette.Object.extend({
        browser: null,
        initialize: function(e) {
            this.model = new i.default,
                this.container = e.container,
                this.app = e.app,
                this.startNotificationId = e.startNotificationId
        },
        render: function(e) {
            this.layout = new r.default({
                    el: e.el,
                    model: this.model
                }),
                this.layout.render(),
                this._createViews(),
                this._bindEvents(),
                this._showViews(),
                this._loadAppState()
        },
        refresh: function() {
            return this.model.refresh()
        },
        startFirstTimePolling: function() {
            this.model.startFirstTimePolling()
        },
        destroy: function() {
            this.layout && this.layout.destroy(),
                this.browser && this.browser.destroy()
        },
        _createViews: function() {
            this.views = {
                notifications: new a.default({
                    collection: this.model.notifications
                }),
                messages: new o.default({
                    collection: this.model.messages
                }),
                issues: new l.default({
                    collection: this.model.issues
                }),
                firstTimeMessages: new u.default({
                    collection: this.model.firstTimeMessages
                }),
                mentoringMessages: new d.default({
                    collection: this.model.mentoringMessages
                })
            }
        },
        _showViews: function() {
            this.layout.showChildView("firstTimeMessages", this.views.firstTimeMessages),
                this.layout.showChildView("notifications", this.views.notifications),
                this.layout.showChildView("mentoringMessages", this.views.mentoringMessages),
                this.layout.showChildView("messages", this.views.messages),
                this.layout.showChildView("issues", this.views.issues)
        },
        _loadAppState: function() {
            var e = this,
                t = this.startNotificationId;
            if (t) {
                var n = [this.model.messages, this.model.notifications, this.model.mentoringMessages];
                this.listenTo(this.model, "change:loading", function(i, r) {
                    if (!r)
                        for (var s = 0, a = null, o = 0; s < n.length; s++)
                            if (a = n[s].models,
                                (o = _.findIndex(a, function(e) {
                                    return e.get("id") === t
                                })) > -1)
                                return e._browseItemByIndex(n[s], o)
                })
            }
        },
        _browseItemByIndex: function(e, t) {
            -1 !== t && (this._browseCollection(e),
                this.browser.browse(t))
        },
        _browseCollection: function(e) {
            this.browser = new s.default({
                collection: e,
                container: this.container,
                app: this.app
            })
        },
        _bindEvents: function() {
            return this.listenTo(this.views.issues, "issues:click", this._onItemClick),
                this.listenTo(this.views.messages, "messages:click", this._onItemClick),
                this.listenTo(this.views.mentoringMessages, "mentoring:click", this._onItemClick),
                this.listenTo(this.views.notifications, "notifications:click", this._onItemClick)
        },
        _onItemClick: function(e) {
            this.browser && this.browser.destroy();
            var t = e.model,
                n = t.collection,
                i = n.indexOf(t);
            this._browseCollection(n),
                this.browser.browse(i),
                this.listenTo(this.browser, "destroy", function() {
                    this.browser = null
                })
        }
    });
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(10)),
        r = f(n(19)),
        s = f(n(87)),
        a = f(n(156)),
        o = f(n(1274)),
        l = f(n(1275)),
        u = f(n(1276)),
        d = f(n(1277)),
        c = f(n(1278)),
        h = n(30);

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = Backbone.Model.extend({
        defaults: {
            empty: !0,
            loading: !1,
            loadingMore: !1,
            lastIssueId: null,
            firstTimePolling: !1
        },
        initialize: function() {
            return this.serializer = new s.default,
                this.notifications = new a.default,
                this.notifications.on("all", this._updateSelf, this),
                this.messages = new o.default,
                this.messages.on("all", this._updateSelf, this),
                this.firstTimeMessages = new l.default,
                this.firstTimeMessages.on("all", this._updateSelf, this),
                this.mentoringMessages = new u.default,
                this.mentoringMessages.on("all", this._updateSelf, this),
                this.issues = new d.default,
                this.issues.on("all", this._updateSelf, this)
        },
        startFirstTimePolling: function() {
            var e = this;
            this.set("firstTimePolling", !0),
                this.notificationsPolling = new c.default({
                    intervalTime: 3e3,
                    maxCount: 4,
                    task: function() {
                        return (0,
                            h.httpGet)(W.Config.paths.notifications).then(function(t) {
                            e._onNotificationsResponse(t)
                        })
                    },
                    repeatUntil: function() {
                        return e.firstTimeMessages.length > 0
                    }
                }),
                this.issuesPolling = new c.default({
                    intervalTime: 5e3,
                    maxCount: 4,
                    task: function() {
                        return e.issues.fetch({
                            reset: !0
                        })
                    },
                    repeatUntil: function() {
                        return e.issues.length > 0
                    }
                });
            var t = this.notificationsPolling.startLoop(),
                n = this.issuesPolling.startLoop();
            r.default.all([t, n]).then(function() {
                e.set("firstTimePolling", !1)
            }, function() {
                e.set("firstTimePolling", !1)
            })
        },
        refresh: function() {
            var e = this;
            if (!this.attributes.loading) {
                this.set("loading", !0);
                var t = (0,
                        h.httpGet)(W.Config.paths.notifications),
                    n = this.issues.fetch({
                        reset: !0
                    });
                return r.default.all([t, n]).then(function(t) {
                    var n = (0,
                            i.default)(t, 2),
                        r = n[0],
                        s = n[1];
                    return e._onNotificationsResponse(r),
                        e.notificationsPolling && e.notificationsPolling.checkAndStopIfFinished(),
                        e.set("lastIssueId", s.lastIssueId)
                }).finally(function() {
                    return e.set("loading", !1)
                })
            }
        },
        _onNotificationsResponse: function(e) {
            var t = this;
            if (this.serializer.read(e),
                e.notifications) {
                var n = e.notifications.objects,
                    i = _.filter(n, function(e) {
                        return e.isNotification()
                    }),
                    r = _.filter(n, function(e) {
                        return e.isForumMessage()
                    }),
                    s = _.filter(n, function(e) {
                        return e.isMentoringMessage()
                    }),
                    a = n.filter(function(e) {
                        return e.isFirstTimeMessage()
                    }).filter(function(e) {
                        return e.attributes.type !== e.TYPE.CHECK_YOUR_NEIGHBORHOOD || t._hasHome(e)
                    });
                this.notifications.reset(i),
                    this.messages.reset(r),
                    this.firstTimeMessages.reset(a),
                    this.mentoringMessages.reset(s)
            }
        },
        _hasHome: function(e) {
            return Boolean(e.attributes.parameters.address)
        },
        loadMore: function() {
            var e = this;
            if (!this.attributes.loadingMore)
                return this.set("loadingMore", !0),
                    r.default.resolve(this.issues.fetch({
                        remove: !1,
                        data: {
                            lastIssueId: this.get("lastIssueId")
                        }
                    })).then(function(t) {
                        return e.set("lastIssueId", t.lastIssueId)
                    }).finally(function() {
                        return e.set("loadingMore", !1)
                    })
        },
        _updateSelf: function() {
            var e = this.notifications.length + this.messages.length + this.firstTimeMessages.length + this.issues.length === 0;
            return this.set("empty", e)
        }
    });
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(156);
    var s = ((i = r) && i.__esModule ? i : {
        default: i
    }).default.extend({
        parse: function(e) {
            return this.serializer.read(e),
                _.filter(e.notifications.objects, function(e) {
                    return e.isForumMessage()
                })
        }
    });
    t.default = s,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "parse",
                value: function(e) {
                    return this.serializer.read(e),
                        _.filter(e.notifications.objects, function(e) {
                            return e.isFirstTimeMessage()
                        })
                }
            }]),
            t
    }(l(n(156)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "parse",
                value: function(e) {
                    return this.serializer.read(e),
                        _.filter(e.notifications.objects, function(e) {
                            return e.isMentoringMessage()
                        })
                }
            }]),
            t
    }(l(n(156)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(7)),
        r = o(n(87)),
        s = o(n(70)),
        a = n(32);

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = s.default.prototype.TYPE,
        u = Backbone.Collection.extend({
            model: s.default,
            initialize: function() {
                this.dataModel = W.model,
                    this.dataModelRefs = {},
                    this.serializer = new r.default
            },
            url: function() {
                return W.Config.paths.issues
            },
            parse: function(e) {
                if (!e.issues || !e.issues.objects)
                    return [];
                this.serializer.read(e),
                    this.dataModel.putPersistent(e);
                var t = this._setReferences(e.issues.objects);
                return this._setListeners(),
                    t
            },
            _setReferences: function(e) {
                for (var t = [], n = 0; n < e.length; n++) {
                    var i = e[n],
                        r = void 0,
                        s = void 0,
                        a = void 0,
                        o = {};
                    switch (i.attributes.type) {
                        case l.MAP_PROBLEM:
                            s = null != (r = this._getProblem(i)),
                                o = {
                                    problem: r
                                };
                            break;
                        case l.UPDATE_REQUEST:
                            s = null != (r = this._getUpdateRequest(i)),
                                o = {
                                    updateRequest: r
                                };
                            break;
                        case l.VENUE_UPDATE_REQUEST:
                            r = this._getVenue(i),
                                a = this._getVenueUpdateRequest(i),
                                s = null != r && null != a,
                                o = {
                                    venue: r,
                                    updateRequest: a,
                                    initialApproved: a ? a.get("approved") : void 0
                                }
                    }
                    var u = this._getKey(r);
                    s && null != u ? (i.set(o),
                        this.dataModelRefs[u] || (this.dataModelRefs[u] = []),
                        this.dataModelRefs[u].push(i),
                        t.push(i)) : console.error("invalid issue: " + i.get("type") + " " + i.get("id"))
                }
                return t
            },
            _setListeners: function() {
                return this._bindRepositoryEvents(this.dataModel.problems),
                    this._bindRepositoryEvents(this.dataModel.mapUpdateRequests),
                    this._bindRepositoryEvents(this.dataModel.venues)
            },
            _bindRepositoryEvents: function(e) {
                var t = this,
                    n = {};
                n[a.CHANGED] = this._makeTrigger("onModelChanged"),
                    n[a.REMOVED] = this._makeTrigger("onModelRemoved"),
                    n[a.SYNCED] = this._makeTrigger("onModelSynced"),
                    (0,
                        i.default)(n).forEach(function(i) {
                        var r = n[i];
                        e.on(i, r, t)
                    })
            },
            _makeTrigger: function(e) {
                var t = this;
                return function(n) {
                    for (var i = 0; i < n.length; i++) {
                        var r = n[i],
                            s = t._getIssues(r);
                        null != s && s.forEach(function(t) {
                            return t[e].call(t)
                        })
                    }
                }
            },
            _getProblem: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.problems.getObjectById(t)
            },
            _getUpdateRequest: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.mapUpdateRequests.getObjectById(t)
            },
            _getVenue: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.venues.getObjectById(t)
            },
            _getVenueUpdateRequest: function(e) {
                var t = this._getVenue(e).attributes.venueUpdateRequests,
                    n = e.attributes.venueUpdateRequestId;
                return _(t).findWhere({
                    id: n
                })
            },
            _getKey: function(e) {
                if (e)
                    return e.type + "_" + e.getID()
            },
            _getIssues: function(e) {
                var t = this._getKey(e);
                return this.dataModelRefs[t]
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(19)),
        r = o(n(6)),
        s = o(n(0)),
        a = o(n(1));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            var n = this;
            (0,
                s.default)(this, e),
            this.intervalTime = 5e3,
                this.count = 0,
                this.maxCount = 3,
                this.task = function() {},
                this.repeatUntil = function() {
                    return !1
                },
                (0,
                    r.default)(this, t),
                this._lastTaskResult = null,
                this._timeout = 0,
                this.reject = null,
                this.resolve = null,
                this._stopped = !1,
                this._started = !1,
                this._promise = new i.default(function(e, t) {
                    n.resolve = e,
                        n.reject = t
                })
        }
        return (0,
                a.default)(e, [{
                key: "startLoop",
                value: function() {
                    return this._started ? this._promise : (this._started = !0,
                        this._pollingLoop(),
                        this._promise)
                }
            }, {
                key: "_resolve",
                value: function(e) {
                    this._stopPollingLoop(),
                        this._stopped || (this._stopped = !0,
                            this.resolve(e))
                }
            }, {
                key: "_reject",
                value: function(e) {
                    this._stopPollingLoop(),
                        this._stopped || (this._stopped = !0,
                            this.reject(e))
                }
            }, {
                key: "breakLoop",
                value: function() {
                    this._reject(!1)
                }
            }, {
                key: "_stopPollingLoop",
                value: function() {
                    this._timeout && (window.clearTimeout(this._timeout),
                        this._timeout = 0)
                }
            }, {
                key: "_pollingLoop",
                value: function() {
                    var e = this;
                    if (!this._stopped)
                        if (this.count >= this.maxCount)
                            this._reject(!1);
                        else {
                            var t = this.intervalTime;
                            0 === this.count && (t = 0),
                                this._timeout = window.setTimeout(function() {
                                    e.count++;
                                    var t = e.task();
                                    i.default.resolve(t).catch(function() {}).then(e._responseCallback.bind(e))
                                }, t)
                        }
                }
            }, {
                key: "_responseCallback",
                value: function(e) {
                    this._lastTaskResult = e,
                        this._next()
                }
            }, {
                key: "_next",
                value: function() {
                    this._stopPollingLoop(),
                        this.checkAndStopIfFinished() || this._pollingLoop()
                }
            }, {
                key: "checkAndStopIfFinished",
                value: function() {
                    return !!this.repeatUntil(this._lastTaskResult) && (this._resolve(!0),
                        !0)
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(10),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Feed/templates/feed",
        events: {
            "click .feed-load-more": "_onLoadMoreClick"
        },
        regions: {
            notifications: ".feed-notifications",
            firstTimeMessages: ".feed-first-time-messages",
            messages: ".feed-messages",
            mentoringMessages: ".feed-mentoring",
            issues: ".feed-issues"
        },
        bindings: {
            ".feed-loading": {
                observe: "loading",
                visible: !0
            },
            ".feed-content": {
                observe: "loading",
                visible: function(e) {
                    return !e
                }
            },
            ".feed-empty": {
                observe: ["empty", "loading"],
                visible: function(e) {
                    var t = (0,
                            s.default)(e, 2),
                        n = t[0],
                        i = t[1];
                    return n && !i
                }
            },
            ".feed-load-more": {
                observe: ["loading", "loadingMore"],
                visible: function(e) {
                    var t = (0,
                            s.default)(e, 2),
                        n = t[0],
                        i = t[1];
                    return !n && !i
                }
            },
            ".feed-loading-more": {
                observe: "loadingMore",
                visible: !0
            },
            ".feed-load-section": {
                observe: "firstTimePolling",
                visible: _.negate(_.identity)
            },
            ".feed-first-time-load": {
                observe: "firstTimePolling",
                visible: !0
            }
        },
        onRender: function() {
            return this.stickit()
        },
        _onLoadMoreClick: function() {
            return this.model.loadMore(),
                W.Report.feedAction("load_more")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(144)),
        r = o(n(433)),
        s = o(n(1286)),
        a = o(n(70));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = i.default.prototype.TYPE,
        u = a.default.prototype.TYPE,
        d = Marionette.Object.extend({
            initialize: function(e) {
                return this.currentFeedItem = null,
                    this.collection = e.collection,
                    this.container = e.container,
                    this.app = e.app,
                    this.listenTo(this.container, "closeClicked", this.destroy),
                    W.accelerators.events.register("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.register("prevFeedItem", this, this._prevItemClicked)
            },
            browse: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return this._setCurrent(this.collection.at(e)),
                    this._show(this.currentFeedItem)
            },
            showNext: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_next", this.currentFeedItem),
                    this._setCurrent(this.collection.at(++e)),
                    this._show(this.currentFeedItem)
            },
            showPrev: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_prev", this.currentFeedItem),
                    this._setCurrent(this.collection.at(--e)),
                    this._show(this.currentFeedItem)
            },
            _reportEvent: function(e, t) {
                var n = t.get("type");
                return W.Report.feedAction(e, n)
            },
            _nextItemClicked: function() {
                if (!this._isDone())
                    return this.showNext()
            },
            _prevItemClicked: function() {
                if (!this._isAtBeginning())
                    return this.showPrev()
            },
            onDestroy: function() {
                return this._clearCurrent(),
                    W.accelerators.events.unregister("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.unregister("prevFeedItem", this, this._prevItemClicked)
            },
            _show: function(e) {
                return e instanceof i.default ? this._showNotification(e) : this._showIssue(e),
                    W.Report.feedAction("show", e.get("type"))
            },
            _showNotification: function(e) {
                var t = new(e.get("type") === l.PRIVATE_FORUM_MESSAGE ? s.default : r.default)({
                    model: e,
                    user: this.app.get("user"),
                    hasNext: !this._isDone()
                });
                return this.listenTo(t, "nextClicked", this.showNext),
                    this.container.show(t)
            },
            _showIssue: function(e) {
                var t = {
                        showNext: !this._isDone(),
                        nextButtonString: I18n.t("feed.issues.next")
                    },
                    n = void 0;
                switch (e.get("type")) {
                    case u.MAP_PROBLEM:
                        n = W.reqres.request("problems:browse", _.extend(t, {
                            problem: e.get("problem")
                        }));
                        break;
                    case u.UPDATE_REQUEST:
                        n = W.reqres.request("problems:browse", _.extend(t, {
                            problem: e.get("updateRequest")
                        }));
                        break;
                    case u.VENUE_UPDATE_REQUEST:
                        n = W.reqres.request("updaterequests:browse", _.extend(t, {
                            updateRequest: e.get("updateRequest")
                        }))
                }
                return n.on("next", this.showNext.bind(this))
            },
            _isDone: function() {
                return this.currentFeedItem === this.collection.last()
            },
            _isAtBeginning: function() {
                return this.currentFeedItem === this.collection[0]
            },
            _onItemDestroy: function() {
                return this._isDone() ? (this._clearCurrent(),
                    this.container.empty()) : this.showNext()
            },
            _setCurrent: function(e) {
                return this._clearCurrent(),
                    this.currentFeedItem = e,
                    this.currentFeedItem.set("selected", !0),
                    this.currentFeedItem.on("destroy", this._onItemDestroy, this)
            },
            _clearCurrent: function() {
                this.currentFeedItem && (this.currentFeedItem.set("selected", !1),
                        this.currentFeedItem.off("destroy", this._onItemDestroy)),
                    this.currentFeedItem = null
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    e.exports = n.p + "img/level0233d12d7a41f4890f6dd1ee9088ac84e6.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level032896edee403d97e81128b54ed81cf668.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level0482dfdf79740aa5d92aae015abc6660fc.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level050754532211b9f1d2a6bef279e237217f.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level06d91ac1e234d4a0b11bec9fd0635882ca.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(433),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend({
        className: "notification-detail notification-detail-pm",
        serializeData: function() {
            return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                type: "pm",
                sender: this.model.getParameter("sender"),
                senderURL: this.model.getParameter("senderURL")
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(434)),
        r = s(n(1288));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = i.default.extend({
        childView: r.default,
        childViewEventPrefix: "messages",
        collapseItemsMessage: "feed.messages.collapsed_message"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(219),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = s.default.extend({
        className: "feed-item feed-notification-pm",
        template: "Waze/MapEditor/UI/Modules/Feed/templates/message_item",
        serializeData: function() {
            return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                title: this.model.getParameter("subject"),
                sender: this.model.getParameter("sender")
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = d(n(15)),
        s = d(n(70)),
        a = d(n(158)),
        o = d(n(1290)),
        l = d(n(1291)),
        u = d(n(1292));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = s.default.prototype.TYPE,
        h = Marionette.CollectionView.extend({
            TYPE_TO_VIEW: (i = {},
                (0,
                    r.default)(i, c.MAP_PROBLEM, o.default),
                (0,
                    r.default)(i, c.UPDATE_REQUEST, l.default),
                (0,
                    r.default)(i, c.VENUE_UPDATE_REQUEST, u.default),
                i),
            tagName: "ul",
            className: "feed-list",
            childView: a.default,
            childViewEventPrefix: "issues",
            buildChildView: function(e, t, n) {
                var i = e.attributes.type;
                return new(0,
                    this.TYPE_TO_VIEW[i])({
                    model: e
                })
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "className", this).call(this) + " feed-issue-mp " + this._getSeverityClass()
                }
            }, {
                key: "getType",
                value: function() {
                    var e = this.model.attributes.problem;
                    return I18n.t("problems.types." + e.attributes.subType + ".title")
                }
            }]),
            t
    }(u(n(158)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "className", this).call(this) + " feed-issue-ur " + this._getSeverityClass()
                }
            }, {
                key: "getType",
                value: function() {
                    return this.model.attributes.updateRequest.getTypeText()
                }
            }]),
            t
    }(u(n(158)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "className", this).call(this) + " feed-issue-pu " + this._getSeverityClass() + " " + this.getTypeClass()
                }
            }, {
                key: "getType",
                value: function() {
                    var e = this.model.attributes.updateRequest,
                        t = e.get("subject"),
                        n = e.get("updateType");
                    return "flag" === n ? I18n.t("venues.update_requests.panel.flag_title." + t) : I18n.t("venues.update_requests.panel.title." + n)
                }
            }, {
                key: "getTypeClass",
                value: function() {
                    return this.model.attributes.updateRequest.get("updateType").toLowerCase()
                }
            }]),
            t
    }(u(n(158)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(1294)),
        r = s(n(1295));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.CollectionView.extend({
        className: "feed-group list-unstyled",
        tagName: "ul",
        childView: i.default,
        childViewEventPrefix: "first-time",
        initialize: function() {
            this.cyclesTimeout = new r.default({
                numberOfCycles: 3,
                cyclesIntervalTime: 3e4,
                itemIntervalTime: 5e3,
                startDelay: 3e3,
                handler: this._cycleAnimationLoop.bind(this)
            })
        },
        _cycleAnimationLoop: function() {
            if (this.cyclesTimeout) {
                var e = this.cyclesTimeout.getCurrentIndex(),
                    t = this.children.toArray();
                if (e < this.children.length)
                    t[this.cyclesTimeout.getCurrentIndex()].$el.addClass("animate").siblings().removeClass("animate");
                else
                    this.cyclesTimeout.stopCycle()
            }
        },
        onRender: function() {
            this.cyclesTimeout.start()
        },
        onDestroy: function() {
            this.cyclesTimeout.stop()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(2)),
        r = h(n(0)),
        s = h(n(1)),
        a = h(n(3)),
        o = h(n(8)),
        l = h(n(4)),
        u = h(n(157)),
        d = h(n(13)),
        c = h(n(215));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = I18n.t("internal.editing_local_forum_link"),
        p = I18n.t("internal.wiki_link"),
        g = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            o.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "className", this).call(this) + " feed-first-time type-" + this.model.attributes.type.toLowerCase()
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .inner": "_onClick",
                            "click .delete": "_onClickDelete"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.overlayRenderer = null
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return _.extend(u.default.prototype.serializeData.apply(this, arguments), {
                            title: this._getValueOrTemplate("title"),
                            shortMessage: this._getValueOrTemplate("shortMessage"),
                            linkUrl: this._getValueOrTemplate("linkUrl")
                        })
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        var e = this.model.TYPE,
                            t = this.model.attributes.type;
                        switch (W.Report.feedAction("show", t),
                            W.Report.feedAction("click_on_card", t),
                            t) {
                            case e.DISCOVER_COMMUNITY_FORUM:
                                this._openUrl(f);
                                break;
                            case e.DISCOVER_LOCAL_WIKI:
                                this._openUrl(p);
                                break;
                            case e.FIRST_TIME_VIDEOS:
                                this._openVideoTutorial();
                                break;
                            case e.CHECK_YOUR_NEIGHBORHOOD:
                                this._goToNeighborhood()
                        }
                    }
                }, {
                    key: "_openVideoTutorial",
                    value: function() {
                        $("#tutorial-dialog").modal("show")
                    }
                }, {
                    key: "_goToNeighborhood",
                    value: function() {
                        var e = this.model.attributes.parameters.address;
                        if (e) {
                            var t = Number(e.split(",")[0]),
                                n = Number(e.split(",")[1]),
                                i = new OL.LonLat(t, n);
                            d.default.project(i),
                                this._animateSpotLight(i)
                        }
                    }
                }, {
                    key: "_animateSpotLight",
                    value: function(e) {
                        this.overlayRenderer && this.overlayRenderer.destroy(),
                            this.overlayRenderer = new c.default(W.map),
                            this.overlayRenderer.drawOverlay(),
                            this.overlayRenderer.animateHome(e)
                    }
                }, {
                    key: "_openUrl",
                    value: function(e) {
                        e && window.open(e, "_blank")
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this.overlayRenderer && this.overlayRenderer.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Feed/templates/notification_item"
                    }
                }]),
                t
        }(u.default);
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(0)),
        s = a(n(1));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this.startDelay = 0,
                this.numberOfCycles = 3,
                this.cyclesIntervalTime = 3e4,
                this.itemIntervalTime = 5e3,
                this.handler = null,
                (0,
                    i.default)(this, t),
                this._currentCycle = 0,
                this._nextItemTimeout = 0,
                this._cyclesTimeout = 0,
                this._isRuning = !1,
                this._currentIndex = -1
        }
        return (0,
                s.default)(e, [{
                key: "start",
                value: function() {
                    this.stop(),
                        this._isRuning = !0,
                        this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.startDelay)
                }
            }, {
                key: "stop",
                value: function() {
                    this._isRuning && (this._cyclesTimeout && window.clearTimeout(this._cyclesTimeout),
                        this.stopCycle(),
                        this._cyclesTimeout = 0,
                        this._isRuning = !1)
                }
            }, {
                key: "_animationLoop",
                value: function() {
                    this._currentCycle < this.numberOfCycles ? (this._currentCycle++,
                        this._startCycle(),
                        this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.cyclesIntervalTime)) : this.stop()
                }
            }, {
                key: "_startCycle",
                value: function() {
                    this.stopCycle(),
                        this._currentIndex = -1,
                        this._cycleAnimationLoop()
                }
            }, {
                key: "stopCycle",
                value: function() {
                    this._nextItemTimeout && (window.clearTimeout(this._nextItemTimeout),
                        this._nextItemTimeout = 0)
                }
            }, {
                key: "_cycleAnimationLoop",
                value: function() {
                    this._currentIndex++,
                        "function" == typeof this.handler && this.handler(),
                        this._nextItemTimeout = window.setTimeout(this._cycleAnimationLoop.bind(this), this.itemIntervalTime)
                }
            }, {
                key: "setHandler",
                value: function(e) {
                    "function" == typeof e && (this.handler = e)
                }
            }, {
                key: "getCurrentIndex",
                value: function() {
                    return this._currentIndex
                }
            }]),
            e
    }();
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1297),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CollectionView.extend({
        className: "feed-group list-unstyled",
        tagName: "ul",
        childView: s.default,
        childViewEventPrefix: "mentoring",
        initialize: function() {}
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(8)),
        l = u(n(4));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return (0,
                        o.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "className", this).call(this) + " feed-mentoring type-" + this.model.attributes.type.toLowerCase()
                }
            }]),
            t
    }(u(n(157)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(1299)),
        r = a(n(1376)),
        s = a(n(1384));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.View.extend({
        template: "templates/sidebar/sidebar",
        className: "sidebar-layout",
        regions: {
            editRegion: "#edit-panel .contents",
            userRegion: "#user-info"
        },
        ui: {
            overlay: ".overlay"
        },
        bindings: {
            "#edit-panel": {
                observe: "featureSelected",
                visible: !0,
                visibleFn: function(e, t, n) {
                    if (t && this._storeScroll(),
                        e.toggle(t),
                        t)
                        return this.$el.scrollTop(0)
                }
            },
            "#user-info": {
                observe: "featureSelected",
                visible: !0,
                onGet: function(e) {
                    return !e
                },
                visibleFn: function(e, t, n) {
                    if (e.toggle(t),
                        t)
                        return this._restoreScroll()
                }
            }
        },
        scrollTop: null,
        initialize: function(e) {
            this.dataModel = e.dataModel,
                this.selectionManager = e.selectionManager,
                this.editingMediator = e.editingMediator,
                this.streetViewController = e.streetViewController,
                this.featureEditorFactory = new i.default({
                    selectionManager: this.selectionManager,
                    dataModel: this.dataModel,
                    streetViewController: this.streetViewController
                }),
                this.scrollTop = 0,
                this.listenTo(this.model, "selectionChanged", this._onSelectionChanged),
                this.editingMediator.on("change:editingEnabled", this._toggleEditing, this)
        },
        onDestroy: function() {
            this.editingMediator.off("change:editingEnabled", this._toggleEditing, this)
        },
        onRender: function() {
            this._renderUserInfo(),
                this._toggleEditing(),
                this._toggleHouseNumbers(),
                this.stickit()
        },
        _onSelectionChanged: function(e) {
            return e.selection.length ? (this.editView = this.featureEditorFactory.create(),
                this.showChildView("editRegion", this.editView),
                this._toggleEditing()) : this.getRegion("editRegion").empty()
        },
        _toggleEditing: function() {
            var e = this.editingMediator.get("editingEnabled");
            this.ui.overlay.toggleClass("editingDisabled", !e),
                this.getChildView("editRegion") && this.getChildView("editRegion").toggleEnabled(e)
        },
        _toggleHouseNumbers: function() {
            var e = this.editingMediator.get("editingHouseNumbers");
            this.ui.overlay.toggleClass("houseNumbersVisible", e)
        },
        onEditingHouseNumbersChanged: function() {
            this._toggleHouseNumbers()
        },
        _renderUserInfo: function() {
            return this.options.sandbox ? this.showChildView("userRegion", new s.default({
                app: this.model
            })) : this.options.loggedIn ? this.showChildView("userRegion", new r.default({
                model: this.model,
                feedControl: this.options.feedControl
            })) : this.getRegion("userRegion").empty()
        },
        _storeScroll: function() {
            this.scrollTop = this.$el.scrollTop()
        },
        _restoreScroll: function() {
            return this.$el.scrollTop(this.scrollTop)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(15)),
        r = p(n(0)),
        s = p(n(1)),
        a = p(n(1300)),
        o = p(n(1315)),
        l = p(n(1316)),
        u = p(n(1341)),
        d = n(14),
        c = p(n(1342)),
        h = p(n(1367)),
        f = p(n(44));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function() {
        function e(t) {
            var n = this;
            (0,
                r.default)(this, e),
            this.options = t,
                this.singleTypeToEditorClass = _.clone(this.SINGLE_SELECTION.TYPE_TO_EDITOR_CLASS),
                this.multiTypeToEditorClass = _.clone(this.MULTI_SELECTION.TYPE_TO_EDITOR_CLASS),
                f.default.getFeatureEditors().map(function(e) {
                    var t = e.featureType,
                        i = e.featureEditorClass;
                    return n.singleTypeToEditorClass[t] = i
                })
        }
        return (0,
                s.default)(e, [{
                key: "SINGLE_SELECTION",
                get: function() {
                    var e, t;
                    return {
                        TYPE_TO_EDITOR_CLASS: (e = {},
                            (0,
                                i.default)(e, d.SEGMENT, c.default),
                            (0,
                                i.default)(e, d.VENUE, l.default),
                            (0,
                                i.default)(e, d.NODE, u.default),
                            (0,
                                i.default)(e, d.SPEED_CAMERA, o.default),
                            (0,
                                i.default)(e, d.BIG_JUNCTION, a.default),
                            e),
                        TYPE_TO_OPTIONS: (t = {},
                            (0,
                                i.default)(t, d.SEGMENT, function() {
                                return {
                                    selectionManager: this.options.selectionManager,
                                    reversedSegments: this.options.selectionManager.getReversedSegments()
                                }
                            }),
                            (0,
                                i.default)(t, d.VENUE, function() {
                                return {
                                    streetViewController: this.options.streetViewController
                                }
                            }),
                            (0,
                                i.default)(t, d.BIG_JUNCTION, function() {
                                return {
                                    selectionManager: this.options.selectionManager
                                }
                            }),
                            t)
                    }
                }
            }, {
                key: "MULTI_SELECTION",
                get: function() {
                    return {
                        TYPE_TO_EDITOR_CLASS: (0,
                            i.default)({}, d.VENUE, h.default),
                        TYPE_TO_OPTIONS: (0,
                            i.default)({}, d.VENUE, function() {
                            return {
                                selectionManager: this.options.selectionManager
                            }
                        })
                    }
                }
            }]),
            (0,
                s.default)(e, [{
                key: "create",
                value: function() {
                    var e = this.options.selectionManager,
                        t = this.options.dataModel,
                        n = _(e.getSelectedFeatures()).pluck("model"),
                        i = n[0].type,
                        r = this.singleTypeToEditorClass[i],
                        s = {};
                    return this.SINGLE_SELECTION.TYPE_TO_OPTIONS[i] && (s = this.SINGLE_SELECTION.TYPE_TO_OPTIONS[i].call(this)),
                        n.length > 1 && this.multiTypeToEditorClass[i] && (r = this.multiTypeToEditorClass[i],
                            this.MULTI_SELECTION.TYPE_TO_OPTIONS && this.MULTI_SELECTION.TYPE_TO_OPTIONS[i] && (s = this.MULTI_SELECTION.TYPE_TO_OPTIONS[i].call(this))),
                        new r(_.defaults({
                            dataModel: t,
                            selection: n,
                            map: W.map
                        }, s))
                }
            }]),
            e
    }();
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(2)),
        r = g(n(6)),
        s = g(n(0)),
        a = g(n(3)),
        o = g(n(1)),
        l = g(n(4)),
        u = g(n(8)),
        d = g(n(159)),
        c = g(n(1302)),
        h = g(n(160)),
        f = g(n(221)),
        p = n(187);

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t() {
            (0,
                s.default)(this, t);
            var e = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).apply(this, arguments));
            return e.selectionManager = e.options.selectionManager,
                e
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "events",
                value: function() {
                    return (0,
                        r.default)({}, (0,
                        u.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "events", this).call(this), {
                        "click .select-short-segments": "_selectShortSegments"
                    })
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        addressEdit: ".address-edit",
                        lockEdit: ".lock-edit",
                        junctionEntryList: ".junction-entry-list-region"
                    }
                }
            }, {
                key: "templateContext",
                value: function() {
                    return (0,
                        r.default)({}, (0,
                        u.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "templateContext", this).apply(this, arguments), {
                        MAX_POLYGON_SIZE_DEGREES: p.MAX_POLYGON_SIZE_DEGREES
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/big-junction-edit"
                }
            }]),
            (0,
                o.default)(t, [{
                key: "featureToViewModel",
                value: function(e) {
                    return {
                        isSizeLegal: e.isPolygonAreaLegal(),
                        name: e.attributes.name,
                        segmentCount: e.getSegmentCount(),
                        rank: e.attributes.rank
                    }
                }
            }, {
                key: "viewModelToFeature",
                value: function() {
                    return {
                        name: this.simpleAttribute("name"),
                        lockEditable: !1
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return (0,
                        r.default)({}, (0,
                        u.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "bindings", this).call(this), {
                        ".size-alert": {
                            observe: "isSizeLegal",
                            visible: !0,
                            onGet: _.negate(_.identity)
                        },
                        "[name=name]": {
                            observe: "name",
                            events: ["blur"]
                        },
                        ".segment-count": {
                            observe: "segmentCount",
                            onGet: function(e) {
                                return I18n.t("edit.big_junction.segments", {
                                    segments: e
                                })
                            }
                        }
                    })
                }
            }, {
                key: "_selectShortSegments",
                value: function() {
                    var e = this.getFeature(),
                        t = this._dataModel.segments.getByIds(e.attributes.segIDs);
                    return this.selectionManager.setSelectedModels(t)
                }
            }, {
                key: "onRender",
                value: function() {
                    var e = this.getFeature();
                    this.showChildView("addressEdit", new h.default({
                            addressModel: e.getAddress(),
                            dataModel: this._dataModel,
                            feature: e,
                            editable: e.arePropertiesEditable(),
                            editStreet: !1
                        })),
                        this.showChildView("junctionEntryList", new c.default({
                            junction: e,
                            drawingContext: this.options.map.getDrawingContext(),
                            selectionManager: this.selectionManager
                        })),
                        this.showChildView("lockEdit", new f.default({
                            model: this.viewModel,
                            propertiesEditableAttribute: "lockEditable"
                        })),
                        (0,
                            u.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "onRender", this).apply(this, arguments)
                }
            }]),
            t
    }(d.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(74)),
        u = n(140);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "generateDescription",
                value: function() {
                    var e = this.subActions.length,
                        t = this.subActions[0];
                    this._description = (0,
                        u.generateUpdateActionDescription)(t, e)
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1303));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return "junction-entry-view"
                }
            }, {
                key: "initialize",
                value: function() {
                    this._junction = this.options.junction,
                        this._drawingContext = this.options.drawingContext,
                        this._drawingContext.moveLayerToTop(),
                        this._selectionManager = this.options.selectionManager
                }
            }, {
                key: "_getEntryModels",
                value: function() {
                    var e = this,
                        t = this._junction.getShortestTurns();
                    return (t = _.uniq(t, !1, function(e) {
                        return e.getFromVertex().getID()
                    })).map(function(t) {
                        return new Backbone.Model({
                            vertex: t.getFromVertex(),
                            junction: e._junction,
                            segment: e._junction.model.segments.getObjectById(t.getFromVertex().getSegmentID())
                        })
                    })
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        list: ".list"
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.showChildView("list", new Marionette.CollectionView({
                        childView: l.default,
                        childViewOptions: {
                            dataModel: this._junction.model,
                            drawingContext: this._drawingContext
                        },
                        collection: new Backbone.Collection(this._getEntryModels()),
                        onChildviewClick: this._onItemClicked.bind(this)
                    }))
                }
            }, {
                key: "_onItemClicked",
                value: function(e) {
                    this._selectionManager.setSelectedModels([e.getSegment()])
                }
            }, {
                key: "onDestroy",
                value: function() {
                    this._drawingContext.destroy()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-layout"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(31));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function() {
                    var e = this.model.get("junction"),
                        t = this.model.get("segment").geometry,
                        n = new l.default("junction-entry-marker fa fa-arrow-right");
                    n.div.style = "transform: rotate(" + (180 - e.getAngleAtIntersection(t)) + "deg)";
                    var i = e.getIntersectionPoint(t);
                    this._marker = new OL.Marker(new OL.LonLat(i.x, i.y), n),
                        this._marker.events.on({
                            click: this._onMarkerClick,
                            mouseover: this._onMouseOver,
                            mouseout: this._onMouseOut,
                            scope: this
                        }),
                        this._drawingContext = this.options.drawingContext
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        mouseover: "_onMouseOver",
                        mouseout: "_onMouseOut"
                    }
                }
            }, {
                key: "triggers",
                value: function() {
                    return {
                        click: "click"
                    }
                }
            }, {
                key: "_onMarkerClick",
                value: function() {
                    this.trigger("click", this)
                }
            }, {
                key: "_onMouseOver",
                value: function() {
                    this._drawingContext.addFeatures([new OL.Feature.Vector(this.getSegment().geometry.clone(), {}, {
                        strokeColor: "#00ece3",
                        strokeWidth: 6
                    })])
                }
            }, {
                key: "_onMouseOut",
                value: function() {
                    this._drawingContext.removeAllFeatures()
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        streetName: this.model.get("segment").getAddress().getStreetName()
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this._drawingContext.addMarkers([this._marker])
                }
            }, {
                key: "getSegment",
                value: function() {
                    return this.model.get("segment")
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-item"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.MAX_LENGTH = void 0;
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "defaults",
                value: function() {
                    return {
                        houseNumber: "",
                        streetName: "",
                        emptyStreet: !1,
                        cityName: "",
                        emptyCity: !1,
                        cityID: null,
                        stateID: null,
                        countryID: null,
                        addressFormShown: !1,
                        editable: !0,
                        fullAddress: "",
                        ttsLocales: [W.Config.tts.default_locale],
                        altStreets: new Backbone.Collection,
                        newAltStreets: new Backbone.Collection
                    }
                }
            }, {
                key: "_createAltStreetModel",
                value: function(e) {
                    return new Backbone.Model({
                        id: e.getStreet().id,
                        streetName: e.getStreetName({
                            emptyString: ""
                        }),
                        cityName: e.getCityName({
                            emptyString: ""
                        })
                    })
                }
            }, {
                key: "populateFromAddressModel",
                value: function(e) {
                    var t = this;
                    if (!e.isEmpty()) {
                        this.set({
                            streetName: e.getStreetName({
                                emptyString: ""
                            }),
                            emptyStreet: e.isEmptyStreet(),
                            cityID: e.getCity() && e.getCity().getID(),
                            cityName: e.getCityName({
                                emptyString: ""
                            }),
                            emptyCity: e.getCity() && e.getCity().isEmpty(),
                            stateID: e.getState() && e.getState().getID(),
                            countryID: e.getCountry() && e.getCountry().getID(),
                            houseNumber: e.attributes.houseNumber,
                            ttsDisabled: e.isEmptyStreet()
                        });
                        var n = e.get("altStreets");
                        if (null != n) {
                            var i = n.map(function(e) {
                                return t._createAltStreetModel(e)
                            });
                            this.set({
                                altStreets: new Backbone.Collection(i),
                                newAltStreets: new Backbone.Collection
                            })
                        }
                        var r = e.getCountry();
                        return null != r && r.ttsLocales && this.set({
                                ttsLocales: r.ttsLocales
                            }),
                            this
                    }
                }
            }, {
                key: "addNewAltStreet",
                value: function(e) {
                    this.attributes.newAltStreets.add({
                        cityID: this.attributes.cityID,
                        cityName: this.attributes.cityName,
                        emptyCity: e,
                        streetName: ""
                    })
                }
            }, {
                key: "getTTSLocales",
                value: function() {
                    return this.attributes.ttsLocales
                }
            }], [{
                key: "fromAddress",
                value: function(e, n) {
                    if (e.isEmpty()) {
                        var i = n.segments.topCityID;
                        if (null != i) {
                            var r = n.cities.getObjectById(i),
                                s = r.attributes.countryID,
                                a = r.attributes.stateID;
                            return new t({
                                cityID: i,
                                cityName: r.attributes.name,
                                countryID: s,
                                stateID: a
                            })
                        }
                        var o = n.countries.top,
                            l = n.states.top;
                        return new t({
                            countryID: o ? o.getID() : void 0,
                            stateID: l ? l.getID() : void 0
                        })
                    }
                    var u = new t;
                    return u.populateFromAddressModel(e),
                        u
                }
            }]),
            t
    }(Backbone.Model);
    t.MAX_LENGTH = {
            STREET_NAME: 100,
            CITY_NAME: 100,
            HOUSE_NUMBER: 20
        },
        t.default = u
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.getAndConfirmCityChange = function(e, t, n) {
            return W.model.cities.getCityExists(e, t, n).then(function(t) {
                var n = !0;
                return t.isDistant ? n = window.confirm(I18n.t("edit.segment.city_confirm.distant", {
                        city_name: e
                    })) : null === t.existingCity && (n = window.confirm(I18n.t("edit.segment.city_confirm.no_city", {
                        city_name: e
                    }))),
                    n
            })
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        sum: function(e, t) {
            return (e || 0) + (t || 0)
        },
        max: function(e, t) {
            return Math.max(e, t)
        },
        logical: {
            and: function(e, t) {
                return e && t
            },
            or: function(e, t) {
                return e || t
            }
        },
        bitwise: {
            and: function(e, t) {
                return e & t
            },
            or: function(e, t) {
                return e | t
            },
            xor: function(e, t) {
                return e ^ t
            }
        }
    };
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(62)),
        s = d(n(432)),
        a = d(n(0)),
        o = d(n(1)),
        l = d(n(3)),
        u = d(n(4));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                n = arguments[1];
            (0,
                a.default)(this, t);
            var o = new s.default,
                u = new s.default,
                d = new s.default,
                c = new s.default,
                h = [],
                f = new s.default;
            e.forEach(function(e) {
                e.isEmpty() || (o.add(e.getStreet().id),
                    u.add(e.getCity().attributes.id),
                    d.add(e.getState().id),
                    c.add(e.getCountry().id),
                    e.attributes.altStreets.forEach(function(e) {
                        var t = e.getStreet().id;
                        f.has(t) || (h.push(e),
                            f.add(t))
                    }))
            });
            var p = (0,
                    r.default)(o).map(function(e) {
                    return n.streets.getObjectById(e)
                }),
                g = (0,
                    r.default)(u).map(function(e) {
                    return n.cities.getObjectById(e)
                }),
                v = (0,
                    r.default)(d).map(function(e) {
                    return n.states.getObjectById(e)
                }),
                m = (0,
                    r.default)(c).map(function(e) {
                    return n.countries.getObjectById(e)
                }),
                _ = (0,
                    l.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, {
                    isEmpty: 0 === p.length,
                    street: p.length > 1 ? null : p[0],
                    city: g.length > 1 ? null : g[0],
                    state: v.length > 1 ? null : v[0],
                    country: m.length > 1 ? null : m[0],
                    altStreets: h
                }));
            return _.streets = p,
                _.cities = g,
                _.states = v,
                _.countries = m,
                _.addresses = e,
                _
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "hasMixedStreets",
                value: function() {
                    return this.streets.length > 1
                }
            }, {
                key: "hasMixedCities",
                value: function() {
                    return this.cities.length > 1
                }
            }, {
                key: "hasMixedStates",
                value: function() {
                    return this.states.length > 1
                }
            }, {
                key: "hasMixedCountries",
                value: function() {
                    return this.countries.length > 1
                }
            }, {
                key: "getStreetName",
                value: function(e) {
                    return this.hasMixedStreets() ? null : this.addresses[0].getStreetName(e)
                }
            }, {
                key: "isEmptyStreet",
                value: function() {
                    return !this.hasMixedStreets() && this.addresses[0].isEmptyStreet()
                }
            }, {
                key: "getCityName",
                value: function(e) {
                    return this.hasMixedCities() ? null : this.addresses[0].getCityName(e)
                }
            }, {
                key: "getStateName",
                value: function() {
                    return this.hasMixedStates() ? null : this.addresses[0].getStateName()
                }
            }, {
                key: "getCountryName",
                value: function() {
                    return this.hasMixedCountries() ? null : this.addresses[0].getCountryName()
                }
            }, {
                key: "format",
                value: function() {
                    if (this.isEmpty())
                        return I18n.t("edit.landmark.no_address");
                    var e = this.hasMixedStates() ? I18n.t("edit.segment.no_common.state") : this.getStateName(),
                        t = this.hasMixedCountries() ? I18n.t("edit.segment.no_common.country") : this.getCountryName();
                    return [this.hasMixedStreets() ? I18n.t("edit.segment.no_common.street") : this.getStreetName(), this.hasMixedCities() ? I18n.t("edit.segment.no_common.city") : this.getCityName(), this.hasState() ? e : t].join(", ")
                }
            }, {
                key: "hasSingleNonEmptyStreet",
                value: function() {
                    return 1 === this.streets.length && !this.isEmptyStreet()
                }
            }]),
            t
    }(d(n(89)).default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1309));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "childView",
                value: function(e) {
                    return e.get("deleted") ? null : l.default
                }
            }]),
            t
    }(Marionette.CollectionView);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .alt-street-delete": "onDeleteClick"
                    }
                }
            }, {
                key: "onDeleteClick",
                value: function() {
                    var e = this;
                    this.$el.fadeOut("fast", function() {
                        e.model.set({
                            deleted: !0
                        })
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/address/alt-street"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1311));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "childView",
                value: function() {
                    return l.default
                }
            }, {
                key: "childViewOptions",
                value: function() {
                    return {
                        dataModel: this.options.dataModel
                    }
                }
            }]),
            t
    }(Marionette.CollectionView);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(128)),
        u = n(32);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .alt-street-delete": "onDeleteClick"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".street-name": {
                            observe: "streetName"
                        },
                        ".city-name": {
                            observe: "cityName",
                            attributes: l.default.requireAndEnableIfNot("emptyCity")
                        },
                        ".empty-city": "emptyCity"
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        streetNameInput: ".street-name",
                        cityNameInput: ".city-name"
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this.ui.streetNameInput.typeahead({
                            source: this.streetNames
                        }),
                        this.ui.cityNameInput.typeahead({
                            source: this.cityNames
                        })
                }
            }, {
                key: "onDeleteClick",
                value: function() {
                    this.model.collection.remove(this.model)
                }
            }, {
                key: "initialize",
                value: function() {
                    this._initStreetInput(),
                        this._initCityInput()
                }
            }, {
                key: "_generateStreetNames",
                value: function() {
                    this.streetNames = _.chain(this.options.dataModel.streets.objects).pluck("name").compact().value()
                }
            }, {
                key: "_generateCityNames",
                value: function() {
                    this.cityNames = this.options.dataModel.cities.getValidCities().map(function(e) {
                        return e.attributes.name
                    })
                }
            }, {
                key: "_initStreetInput",
                value: function() {
                    var e = this;
                    return this._generateStreetNames(),
                        this.listenTo(this.options.dataModel.streets, u.UPDATED, function() {
                            e._generateStreetNames(),
                                e.ui.streetNameInput.data && e.ui.streetNameInput.data("typeahead") && (e.ui.streetNameInput.data("typeahead").source = e.streetNames)
                        })
                }
            }, {
                key: "_initCityInput",
                value: function() {
                    var e = this;
                    return this._generateCityNames(),
                        this.listenTo(this.options.dataModel.cities, u.UPDATED, function() {
                            e._generateCityNames(),
                                e.ui.cityNameInput.data && e.ui.cityNameInput.data("typeahead") && (e.ui.cityNameInput.data("typeahead").source = e.cityNames)
                        })
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/address/edit-alt-street"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1313)),
        u = n(43);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            (0,
                r.default)(this, t);
            var e = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).apply(this, arguments));
            return e._ttsPlayer = new l.default,
                e
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return "tts-playback"
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        ttsButton: ".tts-button"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .play-button": "_playButtonClicked"
                    }
                }
            }, {
                key: "modelEvents",
                value: function() {
                    return {
                        "change:ttsDisabled": "render",
                        "change:country": "render"
                    }
                }
            }, {
                key: "_playButtonClicked",
                value: function() {
                    var e = this._getSelectedTTSLocale();
                    return this._ttsPlayer.sayStreetName(this.model.attributes.streetName, this.options.lonlat, e)
                }
            }, {
                key: "_getSelectedTTSLocale",
                value: function() {
                    return this.$el.find(".locale-select option:selected").val()
                }
            }, {
                key: "onRender",
                value: function() {
                    var e = this.model.getTTSLocales();
                    this.ui.ttsButton.popover({
                        html: !0,
                        content: (0,
                            u.getHTML)("templates/segment/tts-playback-popover", {
                            locales: e
                        }),
                        placement: "bottom"
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/segment/tts-playback"
                }
            }], [{
                key: "fromAddress",
                value: function(e, n) {
                    return new t({
                        model: e,
                        lonlat: n.toLonLat()
                    })
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(0)),
        r = a(n(1)),
        s = a(n(13));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = function() {
        function e() {
            (0,
                i.default)(this, e)
        }
        return (0,
                r.default)(e, [{
                key: "sayStreetName",
                value: function(t, n, i) {
                    if (null === t || 0 !== t.length) {
                        var r = {
                            text: " " + t + " ",
                            lang: i
                        };
                        null != n && _.extend(r, this._getLocationOptions(n)),
                            r = _.defaults(r, W.Config.tts.options);
                        var s = W.Config.tts.url + "?" + $.param(r);
                        return e._getCachedAudioElement().attr("src", s)
                    }
                }
            }, {
                key: "_getLocationOptions",
                value: function(e) {
                    return e = e.clone(),
                        s.default.unproject(e), {
                            lon: e.lon,
                            lat: e.lat
                        }
                }
            }]),
            e
    }();
    o._cachedAudioElement = null,
        o._getCachedAudioElement = function() {
            return null != this._cachedAudioElement ? this._cachedAudioElement : this._cachedAudioElement = $("<audio />").attr("autoplay", !0)
        },
        t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(74)),
        u = d(n(205));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "generateDescription",
                value: function() {
                    var e = (this.subActions[0].feature || this.subActions[0].segment).type,
                        t = this.subActions.filter(function(e) {
                            return e instanceof u.default
                        }).length;
                    1 === t ? this._description = I18n.t("save.changes_log.actions.UpdateFeatureAddress", {
                        objectType: e
                    }) : t > 1 && (this._description = I18n.t("save.changes_log.actions.MultiUpdateFeatureAddress", {
                        count: t,
                        objectType: e
                    }))
                }
            }]),
            t
    }(l.default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(53)),
        r = v(n(6)),
        s = v(n(2)),
        a = v(n(0)),
        o = v(n(1)),
        l = v(n(3)),
        u = v(n(8)),
        d = v(n(4)),
        c = v(n(159)),
        h = v(n(197)),
        f = v(n(16)),
        p = v(n(85)),
        g = v(n(221));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t() {
            return (0,
                    a.default)(this, t),
                (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).apply(this, arguments))
        }
        return (0,
                d.default)(t, e),
            (0,
                o.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        lockEditRegion: ".lock-edit"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return (0,
                        r.default)({}, (0,
                        u.default)(t.prototype.__proto__ || (0,
                        s.default)(t.prototype), "bindings", this).call(this), {
                        "[name=type]": {
                            observe: "type",
                            selectOptions: {
                                collection: (0,
                                    i.default)(h.default.prototype.TYPES).map(function(e) {
                                    return {
                                        name: I18n.t("edit.camera.fields.type." + e),
                                        type: e
                                    }
                                }),
                                labelPath: "name",
                                valuePath: "type"
                            }
                        },
                        "[name=speed]": {
                            observe: "speed",
                            events: ["blur"]
                        }
                    })
                }
            }, {
                key: "viewModelToFeature",
                value: function() {
                    return {
                        speed: function(e, t) {
                            t.speed = p.default.getOriginalValue(e, h.default.prototype.UNITS.speed)
                        },
                        type: this.simpleAttribute("type"),
                        lockRank: this.simpleAttribute("lockRank")
                    }
                }
            }, {
                key: "featureToViewModel",
                value: function(e) {
                    return {
                        speed: f.default.getDisplayUnitValue(e.attributes.speed, h.default.prototype.UNITS.speed, !0),
                        type: e.attributes.type,
                        rank: e.attributes.rank,
                        lockRank: e.attributes.lockRank,
                        lockRankMixed: !1,
                        allowDefaultRank: !0
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    (0,
                        u.default)(t.prototype.__proto__ || (0,
                        s.default)(t.prototype), "onRender", this).apply(this, arguments),
                        this._renderLockEdit()
                }
            }, {
                key: "_renderLockEdit",
                value: function() {
                    var e = new g.default({
                        model: this.viewModel
                    });
                    this.showChildView("lockEditRegion", e)
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/camera-edit"
                }
            }]),
            t
    }(c.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = A(n(2)),
        r = A(n(0)),
        s = A(n(3)),
        a = A(n(1)),
        o = A(n(4)),
        l = A(n(8)),
        u = A(n(198)),
        d = A(n(1317)),
        c = A(n(1318)),
        h = A(n(22)),
        f = A(n(106)),
        p = A(n(1321)),
        g = A(n(1322)),
        v = A(n(421)),
        m = n(435),
        y = A(n(1323)),
        b = A(n(1325)),
        w = A(n(436)),
        k = A(n(160)),
        E = A(n(437)),
        M = A(n(1328)),
        S = A(n(438)),
        T = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(90)),
        I = A(n(1335)),
        C = A(n(16));

    function A(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var O = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n.streetViewController = e.streetViewController,
                n.previousGeometry = null,
                n.model.isPoint() || (n.previousGeometry = n.model.geometry),
                n.viewModel = new Backbone.Model({
                    streetViewAvailable: !1
                }),
                n._toggleStreetViewButton(),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "behaviors",
                value: function() {
                    return {
                        restoreLastTab: {
                            behaviorClass: w.default
                        }
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        tooltips: ".tooltip",
                        residentialTooltip: ".residential-tooltip",
                        categoriesTooltip: ".categories-tooltip",
                        brandInput: ".form-control[name=brand]"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return _.extend({}, (0,
                        l.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "events", this).call(this), {
                        "click .image-delete-button": "_onDeleteImageClicked",
                        "click .image-preview-container": "_onImagePreviewClicked",
                        "click .pending-changes-alert": "_onPendingChangesAlertClicked",
                        "click .toggle-residential": "_onResidentialToggled",
                        "click .convert-to-polygon": "_onConvertToPolygonClicked",
                        "click .focus": "_onLocateButtonClicked",
                        "click .street-view-btn": "_onLocateStreetViewButtonClicked"
                    })
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        categoriesRegion: ".categories",
                        openingHoursRegion: ".opening-hours",
                        aliasesRegion: ".aliases-view",
                        externalProvidersRegion: ".external-providers-view",
                        moreInfoRegion: ".more-info",
                        addressEdit: ".address-edit",
                        historyRegion: ".element-history-region",
                        navigationPointRegion: ".navigation-point-region"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".street-view-btn": {
                            observe: "streetViewAvailable",
                            visible: !0
                        },
                        ".street-view-tooltip": {
                            observe: "streetViewAvailable",
                            visible: !0,
                            onGet: _.negate(Boolean)
                        }
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/venue/venue-edit"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "_toggleStreetViewButton",
                value: function() {
                    var e = this,
                        t = this.model;
                    this.streetViewController && this.streetViewController.hasPlacePanaorama(t).then(function(t) {
                        e.viewModel.set("streetViewAvailable", t)
                    })
                }
            }, {
                key: "_hasHouseNumber",
                value: function() {
                    return this.model.getAddress().has("houseNumber")
                }
            }, {
                key: "serializeData",
                value: function() {
                    var e = this._getApprovedImages();
                    return {
                        landmark: this.model,
                        dataModel: this.dataModel,
                        canEditType: this._canEditType(),
                        hasHouseNumber: this._hasHouseNumber(),
                        showStatesSelection: this.dataModel.hasStates(),
                        showExternalProviderView: this._isExternalProviderEditingAllowed(),
                        lockRankRange: this._getLockRankRange(),
                        imageCount: e.length,
                        hasImages: e.length > 0,
                        showUnapprovedAlert: !this.model.attributes.approved,
                        showPendingMergeNote: this.model.hasPendingMerge(),
                        showPendingChangesAlert: this.model.hasUpdateRequests(),
                        showRequiresModerationAlert: this.model.requiresModeration(),
                        showAdLockedAlert: this.model.attributes.adLocked,
                        brands: this._getBrands(),
                        categoryClass: this._getCategoryClassName(),
                        images: e
                    }
                }
            }, {
                key: "_getServiceTypes",
                value: function() {
                    return this.model.isParkingLot() ? g.default.PARKING_LOT : g.default.GENERAL
                }
            }, {
                key: "_getBrands",
                value: function() {
                    var e = void 0;
                    return this.model.isGasStation() && (e = this.dataModel.venues.categoryBrands.GAS_STATION),
                        this.model.isParkingLot() && (e = this.dataModel.venues.categoryBrands.PARKING_LOT),
                        Array.isArray(e) ? e.sort(function(e, t) {
                            return e.localeCompare(t)
                        }) : []
                }
            }, {
                key: "_getCategoryClassName",
                value: function() {
                    var e = this.options.selection[0].getMainCategory() || "";
                    return "venue-category-" + C.default.categoryToClassName(e)
                }
            }, {
                key: "_canEditType",
                value: function() {
                    return !this.model.isParkingLot() || this.model.isPoint()
                }
            }, {
                key: "_getApprovedImages",
                value: function() {
                    return _.filter(this.model.attributes.images, function(e) {
                        return e.get("approved")
                    })
                }
            }, {
                key: "_getLockRankRange",
                value: function() {
                    var e = this.dataModel.loginManager.getUserRank(),
                        t = this.model.attributes.lockRank,
                        n = Math.max(e, t);
                    return _.range(0, n + 1)
                }
            }, {
                key: "_isExternalProviderEditingAllowed",
                value: function() {
                    return this.model.areExternalProvidersEditable()
                }
            }, {
                key: "_onPendingChangesAlertClicked",
                value: function() {
                    return W.commands.execute("place_updates:list", this.model)
                }
            }, {
                key: "_onConvertToPolygonClicked",
                value: function(e) {
                    return $(e.target).attr("disabled", !0),
                        this.isPointChanged(!1)
                }
            }, {
                key: "isPointChanged",
                value: function(e) {
                    var t = this.model,
                        n = void 0;
                    n = "true" === e ? t.getPointGeometry() : this.previousGeometry ? this.previousGeometry.clone() : t.getPolygonGeometry();
                    var i = new f.default(t, this.dataModel.venues, t.geometry, n);
                    this.dataModel.actionManager.add(i)
                }
            }, {
                key: "categoriesChanged",
                value: function(e) {
                    _.isArray(e) || (e = _(e.split(",")).compact()),
                        e = this._handleParkingLotCategoryLogic(e),
                        this.changed({
                            categories: e
                        }),
                        this.suggestedCategoriesView && this.suggestedCategoriesView.categoriesChanged(e)
                }
            }, {
                key: "_handleParkingLotCategoryLogic",
                value: function(e) {
                    return this.model.isParkingLot() ? e.length > 1 && (e = e.filter(function(e) {
                            return e !== T.PARKING_LOT
                        })) : _.contains(e, T.PARKING_LOT) && (e = [T.PARKING_LOT]),
                        e
                }
            }, {
                key: "onFeaturesChanged",
                value: function(e) {
                    (0,
                        l.default)(t.prototype.__proto__ || (0,
                        i.default)(t.prototype), "onFeaturesChanged", this).call(this, e),
                        this.hasEditedModelChanged(e) && !this.model.isPoint() && (this.previousGeometry = this.model.geometry)
                }
            }, {
                key: "_onCategoryClicked",
                value: function(e) {
                    var t = this.model.attributes.categories,
                        n = _.without(t.concat(), e.category);
                    if (e.isSuggested)
                        n.pop(),
                        n.push(e.category);
                    else {
                        if (t.length > 0 && t[0] === e.category)
                            return;
                        n.unshift(e.category)
                    }
                    return this.categoriesChanged(n)
                }
            }, {
                key: "onOpeningHoursChanged",
                value: function() {
                    var e = {
                        openingHours: this.openingHoursLayout.collection.toJSON()
                    };
                    this.dataModel.actionManager.add(new h.default(this.model, e))
                }
            }, {
                key: "_onDeleteImageClicked",
                value: function(e) {
                    var t = $(e.target).parent(".image-preview-container").data("id");
                    return this._deleteImageById(t),
                        !1
                }
            }, {
                key: "_deleteImageById",
                value: function(e) {
                    var t = {
                        images: _(this.model.attributes.images).reject(function(t) {
                            return t.id === e
                        })
                    };
                    this.dataModel.actionManager.add(new h.default(this.model, t))
                }
            }, {
                key: "_onImagePreviewClicked",
                value: function(e) {
                    var t = this,
                        n = $(e.currentTarget).data("id"),
                        i = new v.default({
                            venue: this.model,
                            imageId: n
                        });
                    i.on("deleteImageClicked", function(e) {
                            t._deleteImageById(e),
                                0 === t.model.attributes.images.length && W.app.layout.getRegion("dialogRegion").empty()
                        }),
                        W.app.layout.getRegion("dialogRegion").show(i),
                        e.preventDefault && e.preventDefault()
                }
            }, {
                key: "_onAliasesChanged",
                value: function() {
                    var e = {
                        aliases: this.aliasesLayout.collection.removeEmpty().map(function(e) {
                            return e.get("name")
                        })
                    };
                    return this.dataModel.actionManager.add(new h.default(this.model, e))
                }
            }, {
                key: "_onResidentialToggled",
                value: function(e) {
                    e.preventDefault();
                    var t = this.model.attributes.residential;
                    if (this._hasHouseNumber() || t)
                        return this.dataModel.actionManager.add(new p.default(this.model, !t))
                }
            }, {
                key: "_initAliasesView",
                value: function() {
                    var e = this.model.attributes.aliases.map(function(e) {
                        return new m.Item({
                            name: e
                        })
                    });
                    return this.aliasesLayout = new y.default({
                            collection: new m.Collection(e),
                            editable: this.model.arePropertiesEditable()
                        }),
                        this.listenTo(this.aliasesLayout.collection, "remove change", this._onAliasesChanged),
                        this.showChildView("aliasesRegion", this.aliasesLayout)
                }
            }, {
                key: "_initExternalProvidersView",
                value: function() {
                    this.showChildView("externalProvidersRegion", new b.default({
                        venue: this.model
                    }))
                }
            }, {
                key: "onChildviewExternalProvidersListChange",
                value: function(e) {
                    this.changed({
                        externalProviderIDs: e
                    })
                }
            }, {
                key: "_initOpeningHoursView",
                value: function() {
                    return this.openingHoursLayout = new c.default({
                            collection: this.model.getOpeningHours(),
                            editable: this.model.arePropertiesEditable()
                        }),
                        this.listenTo(this.openingHoursLayout.collection, "remove add change", this.onOpeningHoursChanged),
                        this.showChildView("openingHoursRegion", this.openingHoursLayout)
                }
            }, {
                key: "_initCategoriesView",
                value: function() {
                    return this.suggestedCategoriesView = new d.default({
                            venue: this.model,
                            editable: this.model.arePropertiesEditable()
                        }),
                        this.listenTo(this.suggestedCategoriesView, "categoryClicked", this._onCategoryClicked),
                        this.showChildView("categoriesRegion", this.suggestedCategoriesView)
                }
            }, {
                key: "_initMoreInfoTab",
                value: function() {
                    var e = this.model.isParkingLot() ? M.default : E.default;
                    return this.moreInfoView = new e({
                            model: this.model,
                            serviceTypes: this._getServiceTypes(),
                            serviceSet: this.model.getServiceSet()
                        }),
                        this.listenTo(this.moreInfoView, "change", this._onMoreInfoChanged),
                        this.showChildView("moreInfoRegion", this.moreInfoView)
                }
            }, {
                key: "_onMoreInfoChanged",
                value: function(e) {
                    return this.changed(e.newAttributes)
                }
            }, {
                key: "onRender",
                value: function() {
                    this.ui.categoriesTooltip.tooltip({
                            placement: "bottom",
                            title: I18n.t(this.model.isParkingLot() ? "edit.landmark.tooltip.parking_lot" : "edit.landmark.tooltip.categories")
                        }),
                        this.model.isResidential() || (this._initCategoriesView(),
                            this._initMoreInfoTab(),
                            this._initOpeningHoursView(),
                            this._initAliasesView(),
                            this._isExternalProviderEditingAllowed() && this._initExternalProvidersView()),
                        this._renderAddressEdit(),
                        this._renderElementHistory(),
                        (this.model.isParkingLot() || this.model.isGasStation()) && this._initBrandAutoComplete(),
                        this._renderNavigationPoints(),
                        this.stickit(this.viewModel),
                        this.ui.tooltips.tooltip(),
                        this._hasHouseNumber() || this.ui.residentialTooltip.tooltip(),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "onRender", this).call(this)
                }
            }, {
                key: "_initBrandAutoComplete",
                value: function() {
                    this.ui.brandInput.select2({
                        allowClear: !0
                    })
                }
            }, {
                key: "_renderAddressEdit",
                value: function() {
                    this.showChildView("addressEdit", new k.default({
                        addressModel: this.model.getAddress(),
                        dataModel: this.dataModel,
                        feature: this.model,
                        editable: this.model.arePropertiesEditable(),
                        editHouseNumber: !0
                    }))
                }
            }, {
                key: "_renderElementHistory",
                value: function() {
                    this.showChildView("historyRegion", new S.default({
                        map: this.options.map,
                        model: this.options.selection[0]
                    }))
                }
            }, {
                key: "_renderNavigationPoints",
                value: function() {
                    var e = new I.default({
                        landmark: this.model,
                        drawingContext: this.options.map.getDrawingContext(),
                        actionManager: this.dataModel.actionManager
                    });
                    this.showChildView("navigationPointRegion", e)
                }
            }, {
                key: "onBeforeDestroy",
                value: function() {
                    if (this.model.isParkingLot() || this.model.isGasStation())
                        return this.ui.brandInput.select2("destroy")
                }
            }, {
                key: "_onLocateButtonClicked",
                value: function() {
                    var e = W.map.getPannable(),
                        t = this.model.geometry.getCentroid().clone().toLonLat();
                    e.panTo(t),
                        W.Report.focusAction("locate", "venue_locate_clicked", this.model.attributes.categories[0])
                }
            }, {
                key: "_onLocateStreetViewButtonClicked",
                value: function() {
                    this.streetViewController.lookAtPlace(this.model),
                        W.Report.focusAction("streetview", "venue_streetview_clicked", this.model.attributes.categories[0])
                }
            }]),
            t
    }(u.default);
    t.default = O,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(90)),
        r = n(43);
    var s = Marionette.View.extend({
        template: "templates/venue/venue-categories",
        events: {
            "click .category": "onSuggestCategoryClicked"
        },
        ui: {
            select: "[name=categories]",
            suggestedCategories: ".suggested-categories"
        },
        initialize: function(e) {
            this.venue = e.venue,
                this.editable = e.editable,
                this.mainCategories = i.mainCategories,
                this.categoryMap = this.venue.getCategorySet()
        },
        serializeData: function() {
            return {
                view: this,
                categoryMap: this.categoryMap
            }
        },
        getSuggestedCategories: function() {
            if (!this.editable)
                return [];
            var e = this.venue.attributes.categories;
            return _.isEmpty(e) ? this.mainCategories : 1 === e.length && this.isMainCategory(e[0]) ? W.Config.venues.subcategories[e[0]] : []
        },
        isMainCategory: function(e) {
            return i.mainCategoryMap[e]
        },
        categoriesChanged: function(e, t) {
            return this.categoryMap = this.venue.getCategorySet(),
                this.setSelectedCategories(),
                this.ui.suggestedCategories.hide(),
                this.ui.suggestedCategories.html((0,
                    r.getHTML)("templates/venue/suggested-categories", this.serializeData())),
                this.ui.suggestedCategories.fadeIn("fast")
        },
        onRender: function() {
            var e = this;

            function t(e) {
                return I18n.t("venues.categories." + e.id)
            }
            this.ui.select.select2({
                    width: "100%",
                    formatResult: t,
                    formatSelection: function(t) {
                        return (0,
                            r.getHTML)("templates/venue/category-tag", {
                            category: t.id,
                            hideClose: !e.editable
                        })
                    },
                    data: {
                        results: i.allCategories,
                        text: t
                    },
                    multiple: !0,
                    sortResults: function(e, n, i) {
                        return e.sort(function(e, n) {
                            return t(e).localeCompare(t(n))
                        })
                    }
                }),
                this._bindCategoryClickEvent(),
                this.setSelectedCategories()
        },
        _bindCategoryClickEvent: function() {
            this.$el.find(".select2-choices").on("click", ".category", this.onCategoryClicked.bind(this))
        },
        setSelectedCategories: function() {
            return this.ui.select.select2("data", _(this.venue.attributes.categories).map(function(e) {
                return {
                    id: e
                }
            }))
        },
        onSuggestCategoryClicked: function(e) {
            this._categoryClickHelper(e, !0)
        },
        onCategoryClicked: function(e) {
            this._categoryClickHelper(e, !1)
        },
        _categoryClickHelper: function(e, t) {
            e.preventDefault();
            var n = $(e.target).data("category");
            return this.trigger("categoryClicked", {
                category: n,
                isSuggested: t
            })
        }
    });
    t.default = s,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(1319)),
        r = s(n(1320));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.CompositeView.extend({
        template: "templates/opening_hours/layout",
        childView: i.default,
        childViewContainer: ".list",
        events: {
            "click .add": "onAddClicked"
        },
        childViewOptions: function() {
            return {
                editable: this.options.editable
            }
        },
        onAddClicked: function(e) {
            return e.preventDefault(),
                this.showAddDialog()
        },
        showAddDialog: function() {
            var e = new r.default({
                collection: this.collection
            });
            return W.app.layout.getRegion("dialogRegion").show(e)
        },
        serializeData: function() {
            return {
                isEditable: this.options.editable
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        tagName: "li",
        template: "templates/opening_hours/item",
        events: {
            "click .delete": "onDelete"
        },
        serializeData: function() {
            return {
                model: this.model,
                isEditable: this.options.editable
            }
        },
        onDelete: function() {
            return this.model.collection.remove(this.model)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(193),
        s = n(122),
        a = (i = s) && i.__esModule ? i : {
            default: i
        };
    var o = Marionette.View.extend({
        template: "templates/opening_hours/add",
        ui: {
            form: "form",
            timeSelectors: ".time-selector",
            fromTime: "input[name=fromTime]",
            toTime: "input[name=toTime]",
            dayCheckboxes: "input[name=days]",
            validationErrors: ".validation-errors"
        },
        events: {
            submit: "onSubmit",
            "click .select-all": "selectAllDays",
            "click .select-none": "deselectAllDays",
            "change input[name=allDay]": "onTimeToggled"
        },
        HOUR_FORMAT: "H:mm",
        selectAllDays: function(e) {
            return e.preventDefault(),
                this.toggleDayCheckboxes(!0)
        },
        deselectAllDays: function(e) {
            return e.preventDefault(),
                this.toggleDayCheckboxes(!1)
        },
        onTimeToggled: function() {
            return this.toggleTimeSelectors(!this.isAllDaySelected())
        },
        isAllDaySelected: function() {
            return "on" === this.$("input[name=allDay]:checked").val()
        },
        toggleTimeSelectors: function(e) {
            return this.ui.timeSelectors.prop({
                disabled: !e,
                required: e
            })
        },
        toggleDayCheckboxes: function(e) {
            return this.ui.dayCheckboxes.prop("checked", e)
        },
        onRender: function() {
            return this.ui.timeSelectors.timepicker(a.default.prototype.timepickerOptions)
        },
        onBeforeDestroy: function() {
            return this.$el.remove(),
                this.ui.timeSelectors.timepicker("remove")
        },
        serializeData: function() {
            var e = r.OpeningHour.prototype.defaults();
            return {
                dayCallback: this.isDayCheckedByDefault,
                defaultFromTime: e.fromHour,
                defaultToTime: e.toHour
            }
        },
        isDayCheckedByDefault: function(e) {
            return r.OpeningHour.prototype.defaultDays.includes(e)
        },
        onSubmit: function(e) {
            e.preventDefault();
            var t = this.ui.fromTime.val(),
                n = this.ui.toTime.val(),
                i = this.readDays();
            if (this._clearValidationErrors(),
                this._vaildate(t, n, i)) {
                var s = new r.OpeningHour({
                    days: i,
                    fromHour: t,
                    toHour: n
                });
                return this.isAllDaySelected() && s.setAllDay(),
                    this.collection.add(s),
                    this.destroy()
            }
        },
        _vaildate: function(e, t, n) {
            var i = [];
            if (0 === n.length && i.push(I18n.t("edit.landmark.opening_hours.errors.days")),
                e = Date.parseExact(e, this.HOUR_FORMAT),
                t = Date.parseExact(t, this.HOUR_FORMAT),
                this.isAllDaySelected() || (null === e && i.push(I18n.t("edit.landmark.opening_hours.errors.fromHour")),
                    null === t && i.push(I18n.t("edit.landmark.opening_hours.errors.toHour")),
                    Number(e) === Number(t) && i.push(I18n.t("edit.landmark.opening_hours.errors.same"))),
                i.length > 0) {
                var r = i.map(function(e) {
                    return $("<div/>").text(e)
                });
                this.ui.validationErrors.append(r)
            }
            return 0 === i.length
        },
        _clearValidationErrors: function() {
            return this.ui.validationErrors.empty()
        },
        readDays: function() {
            return this.ui.form.find("input[name=days]:checked").toArray().map(function(e) {
                return parseInt($(e).val(), 10)
            })
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(11)),
        u = c(n(22)),
        d = c(n(106));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e, n) {
            var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            (0,
                r.default)(this, t);
            var o = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, s));
            return o._venue = e,
                o._toResidential = n,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this._venue;
                    if (this._toResidential && !e.isPoint()) {
                        var t = e.getPointGeometry(),
                            n = new d.default(e, e.model.venues, e.geometry, t);
                        this.doSubAction(n)
                    }
                    return this.doSubAction(new u.default(this._venue, {
                            residential: this._toResidential
                        })),
                        !0
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this._venue]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.UpdateLandmarkResidential." + Boolean(this._toResidential))
                }
            }]),
            t
    }(l.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
            GENERAL: ["VALLET_SERVICE", "DRIVETHROUGH", "WI_FI", "RESTROOMS", "CREDIT_CARDS", "RESERVATIONS", "OUTSIDE_SEATING", "AIR_CONDITIONING", "PARKING_FOR_CUSTOMERS", "DELIVERIES", "TAKE_AWAY", "WHEELCHAIR_ACCESSIBLE"],
            PARKING_LOT: ["RESERVATIONS", "DISABILITY_PARKING", "CARPOOL_PARKING", "EV_CHARGING_STATION", "VALLET_SERVICE", "CAR_WASH", "SECURITY", "AIRPORT_SHUTTLE"]
        },
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(435),
        s = n(1324),
        a = (i = s) && i.__esModule ? i : {
            default: i
        };
    var o = Marionette.CompositeView.extend({
        MAX_ALIASES: 4,
        template: "templates/venue/aliases-layout",
        childView: a.default,
        childViewContainer: ".list",
        events: {
            "click .add": "_onAddClicked"
        },
        ui: {
            addButton: ".add"
        },
        initialize: function() {
            return this.collection.on("add remove", this._toggleAddButton, this)
        },
        serializeData: function() {
            return {
                hideAddButton: this._shouldHideAddButton()
            }
        },
        _onAddClicked: function(e) {
            return e.preventDefault && e.preventDefault(),
                this.collection.add(new r.Item({
                    name: ""
                }))
        },
        _shouldHideAddButton: function() {
            return this.collection.length >= this.MAX_ALIASES || !this.options.editable
        },
        _toggleAddButton: function() {
            return this.ui.addButton.toggleClass("hidden", this._shouldHideAddButton())
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "templates/venue/alias",
        tagName: "li",
        ui: {
            name: ".alias-name"
        },
        events: {
            "click .delete": "_onDeleteClicked",
            "change .alias-name": "_onNameChanged"
        },
        _onNameChanged: function() {
            return this.model.set("name", this.ui.name.val())
        },
        _onDeleteClicked: function() {
            return this.model.collection.remove(this.model)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(1326)),
        u = c(n(1327)),
        d = c(n(196));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        list: ".list"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .add": "_onAddClicked"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".add": {
                            observe: "showAddButton",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "collectionEvents",
                value: function() {
                    return {
                        "remove change:uuid": "_onCollectionChanged"
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    this.venue = this.options.venue,
                        this.collection = new Backbone.Collection(this.venue.attributes.externalProviderIDs.map(function(e) {
                            return e.clone()
                        })),
                        this.viewModel = new u.default(null, {
                            collection: this.collection
                        })
                }
            }, {
                key: "_onCollectionChanged",
                value: function() {
                    var e = this.collection.models.filter(function(e) {
                        return e.get("uuid").length
                    });
                    this.triggerMethod("externalProvidersList:change", e)
                }
            }, {
                key: "onRender",
                value: function() {
                    var e = this;
                    this.showChildView("list", new Marionette.CollectionView({
                            childView: l.default,
                            collection: this.collection,
                            childViewOptions: {
                                venueCentroid: this.venue.geometry.getCentroid()
                            },
                            onChildviewExternalProviderItemDelete: function(t) {
                                e.collection.remove(t.model)
                            }
                        })),
                        this.stickit(this.viewModel)
                }
            }, {
                key: "_onAddClicked",
                value: function(e) {
                    return e.preventDefault && e.preventDefault(),
                        this.collection.add(new d.default({
                            uuid: ""
                        }))
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/venue/external-provider/list"
                }
            }]),
            t
    }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(13));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = 3,
        c = 250,
        h = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "external-provider-item"
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .delete": "externalProviderItem:delete"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "change .uuid": "_onUuidChanged"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            uuid: ".uuid"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".url": {
                                observe: "url",
                                update: function(e, t) {
                                    e.attr("href", t)
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._initAutoComplete()
                    }
                }, {
                    key: "_onUuidChanged",
                    value: function(e) {
                        e.stopPropagation(),
                            this.model.set({
                                uuid: this.ui.uuid.val(),
                                name: null,
                                url: null
                            }),
                            null !== this.model.get("uuid") && (this.model.getDetails(this._placesApiSessionToken),
                                this._generatePlacesApiSessionToken())
                    }
                }, {
                    key: "_initAutoComplete",
                    value: function() {
                        var e = this;
                        this._generatePlacesApiSessionToken();
                        var t = l.default.unproject(this.options.venueCentroid.clone()),
                            n = t.y + "," + t.x;
                        return this.ui.uuid.select2({
                            minimumInputLength: d,
                            initSelection: this._getInitialSelection.bind(this),
                            ajax: {
                                url: W.Config.places_api.url.autocomplete,
                                data: function(t, i) {
                                    return {
                                        input: t,
                                        key: "AIzaSyDf-q2MCay0AE7RF6oIMrDPrjBwxVtsUuI",
                                        sessiontoken: e._placesApiSessionToken,
                                        location: n,
                                        radius: 5
                                    }
                                },
                                dataType: "json",
                                quietMillis: c,
                                results: this._parseAutoCompleteResults
                            }
                        })
                    }
                }, {
                    key: "_generatePlacesApiSessionToken",
                    value: function() {
                        this._placesApiSessionToken = uuidGenerator.v1()
                    }
                }, {
                    key: "_parseAutoCompleteResults",
                    value: function(e) {
                        return {
                            results: e.predictions.map(function(e) {
                                return {
                                    id: e.place_id,
                                    text: e.description
                                }
                            })
                        }
                    }
                }, {
                    key: "_getInitialSelection",
                    value: function(e, t) {
                        var n = this;
                        return this.model.getDetails().then(function(e) {
                            return t({
                                id: n.model.get("uuid"),
                                text: e.name
                            })
                        })
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        return this.ui.uuid.select2("close")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/external-provider/item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        MAX_ITEMS: 4,
        defaults: {
            showAddButton: !0
        },
        initialize: function(e, t) {
            this.collection = t.collection,
                this.listenTo(this.collection, "add remove", this._onCollectionChanged),
                this.set({
                    showAddButton: this._shouldShowAddButton()
                })
        },
        _onCollectionChanged: function() {
            return this.set({
                showAddButton: this._shouldShowAddButton()
            })
        },
        _shouldShowAddButton: function() {
            return this.collection.length < this.MAX_ITEMS
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(437)),
        r = o(n(128)),
        s = n(142),
        a = o(n(141));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = i.default.extend({
        template: "templates/venue/venue-edit-more-info-parking-lot",
        ui: {
            parkingTypeTooltip: ".parkingType-tooltip",
            parkingTypeTooltipTemplate: ".parkingType-tooltip-template",
            hasTBRTooltip: ".hasTBR-tooltip"
        },
        bindings: {
            "[name=canExitWhileClosed]": "canExitWhileClosed",
            "[name=lotType]": "lotType",
            "[name=parkingType]": "parkingType",
            "[name=hasTBR]": "hasTBR",
            "[name=paymentType]": r.default.checkboxList("paymentType"),
            "[name=estimatedNumberOfSpots]": {
                observe: "estimatedNumberOfSpots",
                selectOptions: r.default.selectOptionsFromList(s.SPOTS_ESTIMATE.map(function(e) {
                    return e.value
                }), function(e) {
                    return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots." + e)
                })
            },
            "[name=costType]": {
                observe: "costType",
                selectOptions: {
                    collection: s.COST_TYPE.map(function(e) {
                        return {
                            value: e,
                            label: I18n.t("edit.landmark.parking.types.costType." + e)
                        }
                    }),
                    defaultOption: {
                        value: s.UNKNOWN,
                        label: ""
                    }
                }
            }
        },
        initialize: function() {
            var e = $.extend(!0, {}, this.model.attributes.categoryAttributes.PARKING_LOT);
            this.viewModel = new a.default(e),
                this.viewModel.on("change", this._onViewModelChange.bind(this))
        },
        onRender: function() {
            this.ui.hasTBRTooltip.tooltip(),
                this.ui.parkingTypeTooltip.tooltip({
                    title: this.ui.parkingTypeTooltipTemplate.html(),
                    html: !0,
                    placement: "right",
                    container: "body"
                }),
                this.stickit(this.viewModel)
        },
        _onViewModelChange: function() {
            var e = $.extend(!0, {}, this.model.attributes.categoryAttributes);
            return e.PARKING_LOT = this.viewModel.attributes,
                this.trigger("change", {
                    newAttributes: {
                        categoryAttributes: e
                    }
                })
        }
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1330));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "childView",
                value: function() {
                    return l.default
                }
            }, {
                key: "childViewOptions",
                value: function() {
                    return this.options
                }
            }, {
                key: "initialize",
                value: function() {
                    this.collection = new Backbone.Collection
                }
            }, {
                key: "tagName",
                get: function() {
                    return "ul"
                }
            }]),
            t
    }(Marionette.CollectionView);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(9)),
        r = v(n(2)),
        s = v(n(0)),
        a = v(n(1)),
        o = v(n(3)),
        l = v(n(4)),
        u = v(n(1331)),
        d = n(40),
        c = n(14),
        h = v(n(146)),
        f = v(n(439)),
        p = v(n(1332)),
        g = v(n(1333));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "tagName",
                value: function() {
                    return "li"
                }
            }, {
                key: "className",
                value: function() {
                    return "element-history-item closed"
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .tx-header": "_toggleClosed"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        mainObjectRegion: ".main-object-region",
                        relatedObjectsRegion: ".related-objects-region"
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    this._map = this.options.map,
                        this._historyDataModel = this.options.historyDataModel,
                        this._historyChangesBuilder = new u.default(this._historyDataModel),
                        this._objectType = this.options.objectType,
                        this._objectID = this.options.objectID,
                        this._actionType = this.model.attributes.actionType;
                    var e = this._getMainObject(),
                        t = this._getRelatedObjects(),
                        n = null != e && this._actionType === h.default.ACTIONS.UPDATE;
                    if (this._hasRelated = t.length > 0,
                        this._hasContent = n || this._hasRelated,
                        n) {
                        var i = this._getMainObjectViewClass();
                        this._mainObjectView = new i({
                            map: this._map,
                            model: e,
                            historyChangesBuilder: this._historyChangesBuilder
                        })
                    }
                    t.length && (this._relatedObjectsView = new g.default({
                        historyChangesBuilder: this._historyChangesBuilder,
                        collection: new Backbone.Collection(t)
                    }))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.el.classList.toggle("tx-has-content", this._hasContent),
                        this.el.classList.toggle("tx-has-related", this._hasRelated),
                        this.el.dataset.transactionID = this.model.attributes.transactionID,
                        null != this._mainObjectView && this.showChildView("mainObjectRegion", this._mainObjectView),
                        null != this._relatedObjectsView && this.showChildView("relatedObjectsRegion", this._relatedObjectsView)
                }
            }, {
                key: "_toggleClosed",
                value: function() {
                    this.el.classList.toggle("closed")
                }
            }, {
                key: "_getMainObjectViewClass",
                value: function() {
                    switch (this._objectType) {
                        case c.VENUE:
                            return p.default;
                        default:
                            return f.default
                    }
                }
            }, {
                key: "_getMainObject",
                value: function() {
                    return this.model.getObject(this._objectType, this._objectID)
                }
            }, {
                key: "_getRelatedObjects",
                value: function() {
                    var e = this;
                    return this.model.attributes.objects.filter(function(t) {
                        return t.attributes.objectID !== e._objectID
                    })
                }
            }, {
                key: "templateContext",
                value: function() {
                    var e = this.model.attributes,
                        t = e.date,
                        n = e.userID;
                    return {
                        date: t,
                        userProfile: this._historyChangesBuilder.userProfile(n),
                        previewItems: this._serializeChangesPreview(),
                        mainObjectAction: this._serializeMainObjectAction()
                    }
                }
            }, {
                key: "_serializeChangesPreview",
                value: function() {
                    var e = [];
                    if (null != this._mainObjectView && e.push.apply(e, (0,
                            i.default)(this._mainObjectView.getChangedAttributesNames())),
                        null != this._relatedObjectsView) {
                        var t = this._relatedObjectsView.collection.map(function(e) {
                            return (0,
                                d.formatObjectName)(e.attributes.objectType)
                        });
                        e.push.apply(e, (0,
                            i.default)(t))
                    }
                    if (e.length > 1)
                        return I18n.t("element_history.multiple_changes");
                    if (1 === e.length) {
                        var n = "element_history.preview_actions." + this._actionType;
                        return I18n.t(n, {
                            field: e[0]
                        })
                    }
                    return null
                }
            }, {
                key: "_serializeMainObjectAction",
                value: function() {
                    var e = this._getMainObject();
                    return null == e ? null : this._objectType === c.SEGMENT ? this._serializeSegmentAction(e) : this._objectType === c.VENUE ? this._serializeVenueAction(e) : this._serializeAction()
                }
            }, {
                key: "_serializeSegmentAction",
                value: function(e) {
                    return e.isSegmentSplit() ? I18n.t("element_history.segment_created_by_split") : e.isSegmentMerge() ? I18n.t("element_history.segment_created_by_merge") : this._serializeAction()
                }
            }, {
                key: "_serializeVenueAction",
                value: function(e) {
                    return e.isVenueMerge() ? I18n.t("element_history.venue_updated_by_merge") : this._serializeAction()
                }
            }, {
                key: "_serializeAction",
                value: function() {
                    var e = void 0,
                        t = (0,
                            d.formatObjectName)(this._objectType);
                    return this._actionType === h.default.ACTIONS.ADD ? e = "element_history.object_created" : this._actionType === h.default.ACTIONS.DELETE && (e = "element_history.object_deleted"),
                        null != e ? I18n.t(e, {
                            object: t
                        }) : ""
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_item"
                }
            }]),
            t
    }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(0)),
        r = o(n(1)),
        s = n(40),
        a = n(140);

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            (0,
                i.default)(this, e),
            this.dataModel = t
        }
        return (0,
                r.default)(e, [{
                key: "buildChanges",
                value: function(e, t, n) {
                    return (0,
                        a.buildChanges)(this.dataModel, e, t, n)
                }
            }, {
                key: "userProfile",
                value: function(e) {
                    return (0,
                        s.userProfile)(e, this.dataModel)
                }
            }]),
            e
    }();
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(13)),
        d = c(n(439));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "events",
                value: function() {
                    return (0,
                        i.default)({}, _.result(d.default.prototype, "events"), {
                        "mouseenter .ca-entryExitPoints .ca-value-new": this._showNewEntryExitPoints,
                        "mouseenter .ca-entryExitPoints .ca-value-old": this._showOldExtryExitPoints
                    })
                }
            }, {
                key: "_drawEntryExitPoints",
                value: function(e) {
                    var t = e.filter(function(e) {
                        return null != e.point
                    }).map(function(e) {
                        return u.default.parse(e.point)
                    }).map(function(e) {
                        return new OL.Feature.Vector(e.clone())
                    });
                    this._getDrawingContext().addFeatures(t)
                }
            }, {
                key: "_showNewEntryExitPoints",
                value: function() {
                    this._drawEntryExitPoints(this.model.attributes.newValue.entryExitPoints)
                }
            }, {
                key: "_showOldExtryExitPoints",
                value: function() {
                    this._drawEntryExitPoints(this.model.attributes.oldValue.entryExitPoints)
                }
            }]),
            t
    }(d.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = h(n(2)),
        s = h(n(0)),
        a = h(n(1)),
        o = h(n(3)),
        l = h(n(4)),
        u = h(n(15)),
        d = n(14),
        c = n(1334);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = (i = {},
            (0,
                u.default)(i, d.HOUSE_NUMBER, c.HouseNumberChangeView),
            (0,
                u.default)(i, d.VENUE_UPDATE_REQUEST, c.VenueUpdateRequestView),
            i),
        p = function(e) {
            function t() {
                return (0,
                        s.default)(this, t),
                    (0,
                        o.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    l.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "childView",
                    value: function(e) {
                        var t = e.attributes.objectType,
                            n = f[t];
                        return null == n && (n = c.DefaultChangeView),
                            n
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.VenueUpdateRequestView = t.HouseNumberChangeView = t.DefaultChangeView = void 0;
    var i = h(n(6)),
        r = h(n(8)),
        s = h(n(2)),
        a = h(n(0)),
        o = h(n(1)),
        l = h(n(3)),
        u = h(n(4)),
        d = h(n(146)),
        c = n(40);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "tx-changed-ro"
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._actionType = this.model.attributes.actionType,
                            this._objectType = this.model.attributes.objectType,
                            this._historyChangesBuilder = this.options.historyChangesBuilder
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            displayName: (0,
                                c.formatObjectName)(this._objectType),
                            displayValue: null,
                            actionText: this._getActionText()
                        }
                    }
                }, {
                    key: "_getActionText",
                    value: function() {
                        var e = "element_history.actions." + this._objectType + "." + this._actionType;
                        return I18n.lookup(e) ? I18n.t(e) : I18n.t("element_history.actions.default." + this._actionType)
                    }
                }, {
                    key: "_getByActionType",
                    value: function(e) {
                        var t = null;
                        return this._actionType === d.default.ACTIONS.ADD && this.model.attributes.newValue ? t = this.model.attributes.newValue[e] : this._actionType === d.default.ACTIONS.DELETE && this.model.attributes.oldValue && (t = this.model.attributes.oldValue[e]),
                            t
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_related"
                    }
                }]),
                t
        }(Marionette.View),
        p = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        return (0,
                            i.default)((0,
                            r.default)(t.prototype.__proto__ || (0,
                            s.default)(t.prototype), "serializeData", this).call(this), {
                            displayValue: this._getByActionType("number")
                        })
                    }
                }]),
                t
        }(f),
        g = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        l.default)(this, (t.__proto__ || (0,
                        s.default)(t)).apply(this, arguments))
            }
            return (0,
                    u.default)(t, e),
                (0,
                    o.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        var e = (0,
                            r.default)(t.prototype.__proto__ || (0,
                            s.default)(t.prototype), "serializeData", this).call(this);
                        return null != this.isApproved && (e.actionText = this.isApproved ? I18n.t("element_history.approved") : I18n.t("element_history.rejected")),
                            e
                    }
                }, {
                    key: "isApproved",
                    get: function() {
                        var e = null;
                        return this._actionType === d.default.ACTIONS.DELETE && this.model.attributes.oldValue && (e = this.model.attributes.oldValue.approve),
                            e
                    }
                }]),
                t
        }(f);
    t.DefaultChangeView = f,
        t.HouseNumberChangeView = p,
        t.VenueUpdateRequestView = g
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = f(n(2)),
        r = f(n(0)),
        s = f(n(1)),
        a = f(n(3)),
        o = f(n(4)),
        l = f(n(1336)),
        u = f(n(1339)),
        d = n(440),
        c = f(n(383)),
        h = n(1340);

    function f(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function(e) {
                    var t = e.landmark,
                        n = e.drawingContext,
                        i = e.actionManager;
                    this._landmark = t,
                        this._drawingContext = n,
                        this._actionManager = i,
                        this._navigationPointDecorators = this._createNavigationPointDecorators(this._landmark),
                        this._viewModel = new Backbone.Model({
                            enableAddButton: this._shouldEnableAddButton()
                        })
                }
            }, {
                key: "className",
                value: function() {
                    return "navigation-point-view"
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .add-button": "_onAddClicked"
                    }
                }
            }, {
                key: "childViewEvents",
                value: function() {
                    return {
                        listItemMouseEnter: "_onListItemMouseEnter",
                        listItemMouseLeave: "_onListItemMouseLeave",
                        listItemSubmitClicked: "_onNavigationPointChanged",
                        listItemDeleteClicked: "_onDeleteClicked"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        listRegion: ".list-region"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".add-button": {
                            attributes: [{
                                name: "disabled",
                                observe: "enableAddButton",
                                onGet: _.negate(_.identity)
                            }]
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this._viewModel),
                        this._showListView(),
                        this._drawNavigationPoints(null)
                }
            }, {
                key: "_shouldEnableAddButton",
                value: function() {
                    var e = (this._landmark.isPoint(),
                        1);
                    return this._landmark.arePropertiesEditable() && this._navigationPointDecorators.every(function(e) {
                        return !e.isLocatedAtCentroid()
                    }) && this._landmark.getNavigationPoints().length < e
                }
            }, {
                key: "_createNavigationPointDecorators",
                value: function(e) {
                    return e.getNavigationPoints().map(function(t, n) {
                        return new d.Decorator(t, e, n)
                    }).sort(function(e, t) {
                        return t.getNavigationPoint().isPrimary() - e.getNavigationPoint().isPrimary()
                    })
                }
            }, {
                key: "_showListView",
                value: function() {
                    var e = new Backbone.Collection(this._navigationPointDecorators.map(function(e) {
                            return new Backbone.Model({
                                decorator: e
                            })
                        })),
                        t = new l.default({
                            collection: e,
                            editable: this._landmark.arePropertiesEditable()
                        });
                    this.showChildView("listRegion", t)
                }
            }, {
                key: "_onListItemMouseEnter",
                value: function(e) {
                    this._drawNavigationPoints(e)
                }
            }, {
                key: "_onListItemMouseLeave",
                value: function() {
                    this._drawNavigationPoints(null)
                }
            }, {
                key: "_drawNavigationPoints",
                value: function(e) {
                    var t = this;
                    this._drawingContext.clear(),
                        this._navigationPointDecorators.forEach(function(n, i) {
                            var r = {
                                transparent: !1,
                                highlight: !1
                            };
                            null !== e && (e.getIndex() === i ? r.highlight = !0 : r.transparent = !0),
                                new u.default(n, t._drawingContext, r).on("navigationPointDragged", t._onNavigationPointChanged, t)
                        })
                }
            }, {
                key: "_onDeleteClicked",
                value: function(e) {
                    var t = e.model.get("decorator"),
                        n = new h.DeleteNavigationPoint(this._landmark, t.getIndex());
                    this._actionManager.add(n)
                }
            }, {
                key: "_onAddClicked",
                value: function() {
                    var e = new c.default({
                            point: this._landmark.geometry.getCentroid(),
                            primary: 0 === this._landmark.getNavigationPoints().length
                        }),
                        t = new h.AddNavigationPoint(e, this._landmark);
                    this._actionManager.add(t)
                }
            }, {
                key: "_onNavigationPointChanged",
                value: function(e, t) {
                    var n = new h.UpdateNavigationPoint(t, this._landmark, e.getIndex());
                    this._actionManager.add(n)
                }
            }, {
                key: "onDestroy",
                value: function() {
                    this._drawingContext.destroy()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/layout"
                }
            }]),
            t
    }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1337));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function(e) {
                    this._editable = e.editable
                }
            }, {
                key: "childView",
                value: function() {
                    return l.default
                }
            }, {
                key: "childViewOptions",
                value: function() {
                    return {
                        editable: this._editable
                    }
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        mouseEnter: "listItemMouseEnter",
                        mouseLeave: "listItemMouseLeave",
                        submitClicked: "listItemSubmitClicked",
                        deleteClicked: "listItemDeleteClicked"
                    }
                }
            }]),
            t
    }(Marionette.CollectionView);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1338));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function(e) {
                    this._navigationPointDecorator = e.model.get("decorator"),
                        this._viewModel = new Backbone.Model({
                            showDeleteButton: e.editable,
                            showEditButton: !1,
                            arrowIconClass: this._navigationPointDecorator.getArrowIconClass(),
                            isPrimary: this._navigationPointDecorator.getNavigationPoint().isPrimary(),
                            name: this._navigationPointDecorator.getName()
                        })
                }
            }, {
                key: "className",
                value: function() {
                    return "navigation-point-list-item"
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".name": "name",
                        ".edit-button": {
                            observe: "showEditButton",
                            visible: !0
                        },
                        ".delete-button": {
                            observe: "showDeleteButton",
                            visible: !0
                        },
                        ".arrow-icon": {
                            attributes: [{
                                name: "class",
                                observe: "arrowIconClass"
                            }]
                        },
                        ".preview": {
                            attributes: [{
                                name: "class",
                                observe: "isPrimary",
                                onGet: function(e) {
                                    return e ? "primary" : ""
                                }
                            }]
                        }
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        editRegion: ".edit-region"
                    }
                }
            }, {
                key: "triggers",
                value: function() {
                    return {
                        "click .delete-button": "deleteClicked",
                        mouseleave: "mouseLeave"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        mouseenter: "_onMouseEnter"
                    }
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        submit: "submitClicked"
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this._viewModel)
                }
            }, {
                key: "_onMouseEnter",
                value: function() {
                    this.trigger("mouseEnter", this._navigationPointDecorator)
                }
            }, {
                key: "_onEditClicked",
                value: function() {
                    this.showChildView("editRegion", new l.default({
                        navigationPointDecorator: this._navigationPointDecorator
                    }))
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/item"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = n(440);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "initialize",
                value: function(e) {
                    this._navigationPointDecorator = e.navigationPointDecorator;
                    var t = this._navigationPointDecorator.getNavigationPoint();
                    this.model = new Backbone.Model({
                        name: t.getName(),
                        isPrimary: t.isPrimary(),
                        entry: t.getEntry(),
                        exit: t.getExit()
                    })
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        "[name=name]": "name",
                        "[name=is-primary]": "isPrimary",
                        "[name=type]": {
                            observe: ["entry", "exit"],
                            onGet: function(e, t) {
                                return t.view._navigationPointDecorator.getType()
                            },
                            onSet: function(e) {
                                var t = !0,
                                    n = !0;
                                return e === l.NAVIGATION_POINT_TYPE.EXIT && (t = !1),
                                    e === l.NAVIGATION_POINT_TYPE.ENTRY && (n = !1),
                                    [t, n]
                            }
                        }
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "submit form": "_onFormSubmit",
                        "click .cancel-button": "destroy"
                    }
                }
            }, {
                key: "_onFormSubmit",
                value: function(e) {
                    e.preventDefault();
                    var t = this._navigationPointDecorator.getNavigationPoint().with(this.model.toJSON());
                    this.trigger("submit", this._navigationPointDecorator, t)
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        NAVIGATION_POINT_TYPE: l.NAVIGATION_POINT_TYPE,
                        isPrimaryInputId: "navigation-point-is-primary-" + this._navigationPointDecorator.getIndex()
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/edit"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(6)),
        r = h(n(2)),
        s = h(n(0)),
        a = h(n(1)),
        o = h(n(3)),
        l = h(n(8)),
        u = h(n(4)),
        d = h(n(125)),
        c = h(n(31));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e, n) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                a = i.transparent,
                l = void 0 !== a && a,
                u = i.highlight,
                d = void 0 !== u && u;
            (0,
                s.default)(this, t);
            var h = e.getNavigationPoint().getPoint().toLonLat(),
                f = new c.default("navigation-point"),
                p = (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, h, f));
            return p._navigationPointDecorator = e,
                p._drawingContext = n,
                p._highlight = d,
                p._dragBounds = p._calcDragBounds(p._navigationPointDecorator.getLandmarkGeometry()),
                p._dragHandler = null,
                p._addMarkerClasses(),
                p._navigationPointDecorator.isLocatedAtCentroid() || p._rotateToCentoid(),
                p._lineToCentroid = p._createLineToCentroid(),
                p._dragBoundaryVector = new OL.Feature.Vector(p._dragBounds.toGeometry(), null, {
                    fillOpacity: 0,
                    strokeDashstyle: "dash",
                    pointerEvents: "none"
                }),
                !0 === l && p._makeTransparent(),
                p._drawingContext.addMarkers([p]),
                p._drawingContext.addFeatures([p._lineToCentroid]),
                p
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "_makeTransparent",
                value: function() {
                    this._lineToCentroid.style.strokeOpacity = .06,
                        this.icon.$div.addClass("transparent")
                }
            }, {
                key: "_createLineToCentroid",
                value: function() {
                    var e = this._navigationPointDecorator.getNavigationPoint().isPrimary();
                    return new OL.Feature.Vector(new OL.Geometry.LineString([this._navigationPointDecorator.getLandmarkCentroid(), this._navigationPointDecorator.getNavigationPoint().getPoint().clone()]), null, {
                        strokeWidth: 2,
                        strokeColor: "white",
                        strokeOpacity: e || this._highlight ? 1 : .24,
                        strokeLinecap: "square",
                        strokeDashstyle: "dash"
                    })
                }
            }, {
                key: "_addMarkerClasses",
                value: function() {
                    this._navigationPointDecorator.isLocatedAtCentroid() ? (this.icon.$div.addClass("centered"),
                            this.icon.$div.append($("<div/>").addClass("arrow-up waze-icon-full-arrow-up"), $("<div/>").addClass("arrow-down waze-icon-full-arrow-up"), $("<div/>").addClass("arrow-left waze-icon-full-arrow-up"), $("<div/>").addClass("arrow-right waze-icon-full-arrow-up"))) : this.icon.$div.addClass(this._navigationPointDecorator.getArrowIconClass()),
                        this.icon.$div.toggleClass("primary", this._navigationPointDecorator.getNavigationPoint().isPrimary()),
                        this._navigationPointDecorator.isEditable() && this.icon.$div.addClass("draggable")
                }
            }, {
                key: "_calcDragBounds",
                value: function(e) {
                    var t = e.getBounds().clone();
                    return t.left -= 500,
                        t.right += 500,
                        t.top += 500,
                        t.bottom -= 500,
                        t
                }
            }, {
                key: "draw",
                value: function(e) {
                    return this._navigationPointDecorator.isEditable() && this._initDragHandler(),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "draw", this).call(this, e)
                }
            }, {
                key: "_rotateToCentoid",
                value: function() {
                    var e = this._getAngleToCentroid();
                    this.icon.$div.css({
                        transform: "rotate(" + (Math.PI - e) + "rad)"
                    })
                }
            }, {
                key: "_initDragHandler",
                value: function() {
                    this._dragHandler = new d.default(this.map),
                        this._dragHandler.down = this._onDragStart.bind(this),
                        this._dragHandler.move = this._onDragMove.bind(this),
                        this._dragHandler.done = this._onDragDone.bind(this),
                        this._dragHandler.activate(this.icon.$div)
                }
            }, {
                key: "_onDragStart",
                value: function() {
                    this.icon.$div.addClass("dragging"),
                        this._drawingContext.addFeatures([this._dragBoundaryVector])
                }
            }, {
                key: "_onDragMove",
                value: function(e) {
                    var t = this.map.getLonLatFromViewPortPx(e.xy);
                    this.icon.$div.removeClass("centered"),
                        t.lon = Math.max(t.lon, this._dragBounds.left),
                        t.lon = Math.min(t.lon, this._dragBounds.right),
                        t.lat = Math.max(t.lat, this._dragBounds.bottom),
                        t.lat = Math.min(t.lat, this._dragBounds.top),
                        this.lonlat = t,
                        this.layer.drawMarker(this),
                        this._rotateToCentoid(),
                        this._updateLineToCentroid()
                }
            }, {
                key: "_onDragDone",
                value: function() {
                    this.icon.$div.removeClass("dragging");
                    var e = this._navigationPointDecorator.getNavigationPoint().with({
                        point: this.lonlat.toPoint()
                    });
                    this.trigger("navigationPointDragged", this._navigationPointDecorator, e)
                }
            }, {
                key: "_getAngleToCentroid",
                value: function() {
                    var e = this._navigationPointDecorator.getLandmarkCentroid();
                    return Math.atan2(this.lonlat.lat - e.y, this.lonlat.lon - e.x)
                }
            }, {
                key: "_updateLineToCentroid",
                value: function() {
                    this._lineToCentroid.geometry.components[1].x = this.lonlat.lon,
                        this._lineToCentroid.geometry.components[1].y = this.lonlat.lat,
                        this._drawingContext.redrawFeature(this._lineToCentroid)
                }
            }, {
                key: "destroy",
                value: function() {
                    (0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "destroy", this).call(this),
                        null !== this._dragHandler && this._dragHandler.deactivate()
                }
            }]),
            t
    }(OL.Marker);
    (0,
        i.default)(f.prototype, Backbone.Events),
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.DeleteNavigationPoint = t.AddNavigationPoint = t.UpdateNavigationPoint = void 0;
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(4)),
        l = c(n(11)),
        u = c(n(22)),
        d = n(140);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
            function t(e, n, s) {
                (0,
                    r.default)(this, t);
                var o = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this));
                return o._navigationPoint = e,
                    o._landmark = n,
                    o._navigationPointIndex = s,
                    o
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        this._navigationPoint.isPrimary() && this._makeAllPointsNonPrimary(e),
                            e[this._navigationPointIndex] = this._navigationPoint,
                            this.doSubAction(new u.default(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "_makeAllPointsNonPrimary",
                    value: function(e) {
                        e.forEach(function(t, n) {
                            t.isPrimary() && (e[n] = t.with({
                                primary: !1
                            }))
                        })
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name,
                            t = this.subActions[0],
                            n = t.newAttributes.entryExitPoints,
                            i = t.oldAttributes.entryExitPoints;
                        if (n.length === i.length) {
                            for (var r = null, s = null, a = 0, o = 0; o < n.length; o++)
                                _.isEqual(n[o], i[o]) || (r = n[o],
                                    s = i[o],
                                    a++);
                            if (1 === a) {
                                var l = (0,
                                    d.buildChanges)(this.model, "entryExitPoints", r.toJSON(), s.toJSON());
                                if (1 === l.length) {
                                    var u = l[0],
                                        c = u.name,
                                        h = u.newValue,
                                        f = u.displayName;
                                    this._description = "point" === c ? e ? I18n.t("save.changes_log.actions.UpdateNavigationPoint.moved.has_name", {
                                        venueName: e
                                    }) : I18n.t("save.changes_log.actions.UpdateNavigationPoint.moved.default") : I18n.t("save.changes_log.actions.UpdateNavigationPoint.single", {
                                        propertyName: f,
                                        value: h
                                    })
                                } else
                                    this._description = I18n.t("save.changes_log.actions.UpdateNavigationPoint.multiple")
                            }
                        }
                    }
                }]),
                t
        }(l.default),
        f = function(e) {
            function t(e, n) {
                (0,
                    r.default)(this, t);
                var s = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this));
                return s._navigationPoint = e,
                    s._landmark = n,
                    s
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        e.push(this._navigationPoint),
                            this.doSubAction(new u.default(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name;
                        this._description = e ? I18n.t("save.changes_log.actions.AddNavigationPoint.has_name", {
                            venueName: e
                        }) : I18n.t("save.changes_log.actions.AddNavigationPoint.default")
                    }
                }]),
                t
        }(l.default),
        p = function(e) {
            function t(e, n) {
                (0,
                    r.default)(this, t);
                var s = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this));
                return s._landmark = e,
                    s._navigationPointIndex = n,
                    s
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        e.splice(this._navigationPointIndex, 1),
                            this.doSubAction(new u.default(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name;
                        this._description = e ? I18n.t("save.changes_log.actions.DeleteNavigationPoint.has_name", {
                            venueName: e
                        }) : I18n.t("save.changes_log.actions.DeleteNavigationPoint.default")
                    }
                }]),
                t
        }(l.default);
    t.UpdateNavigationPoint = h,
        t.AddNavigationPoint = f,
        t.DeleteNavigationPoint = p
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(10)),
        r = v(n(2)),
        s = v(n(6)),
        a = v(n(0)),
        o = v(n(3)),
        l = v(n(1)),
        u = v(n(4)),
        d = v(n(8)),
        c = v(n(159)),
        h = v(n(202)),
        f = v(n(161)),
        p = n(32),
        g = n(109);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t(e) {
            var n = e.dataModel,
                i = void 0 === n ? null : n;
            e.selection;
            (0,
                a.default)(this, t);
            var s = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            s.dataModel = i,
                s.listenTo(s.dataModel.segments, p.CHANGED, s.onSegmentsChanged);
            var l = s.dataModel.getTurnGraph();
            return s.listenTo(l, g.CHANGE_EVENT, s.onTurnGraphChanged),
                s
        }
        return (0,
                u.default)(t, e),
            (0,
                l.default)(t, [{
                key: "behaviors",
                value: function() {
                    return {
                        accelerators: {
                            behaviorClass: f.default
                        }
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .disallow-connections": "_disallowAllConnections",
                        "click .allow-connections": "_allowAllConnections"
                    }
                }
            }, {
                key: "accelerators",
                value: function() {
                    return {
                        disallowAllConnections: "_disallowAllConnections",
                        allowAllConnections: "_allowAllConnections"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return (0,
                        s.default)({}, (0,
                        d.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "bindings", this).call(this), {
                        ".big-junction-error": {
                            observe: "isInBigJunction",
                            visible: !0
                        },
                        ".connections-edit": {
                            observe: ["isConnectedToBigJunction", "connectionsExist"],
                            onGet: function(e) {
                                var t = (0,
                                        i.default)(e, 2),
                                    n = t[0],
                                    r = t[1];
                                return !n && r
                            },
                            visible: !0
                        },
                        ".connectionStatus": {
                            observe: ["areAllConnectionsEnabled", "areAllConnectionsDisabled"],
                            onGet: function(e) {
                                var t = (0,
                                        i.default)(e, 2),
                                    n = t[0],
                                    r = t[1];
                                return n ? I18n.t("edit.node.turns.all_allowed") : r ? I18n.t("edit.node.turns.all_disallowed") : void 0
                            }
                        },
                        "button.allow-connections": {
                            observe: "areAllConnectionsEnabled",
                            visible: !0,
                            onGet: _.negate(_.identity),
                            attributes: [{
                                attributes: {
                                    name: "disabled",
                                    observe: "areConnectionsEditable",
                                    onGet: _.negate(_.identity)
                                }
                            }]
                        },
                        "button.disallow-connections": {
                            observe: "areAllConnectionsDisabled",
                            visible: !0,
                            onGet: _.negate(_.identity),
                            attributes: [{
                                attributes: {
                                    name: "disabled",
                                    observe: "areConnectionsEditable",
                                    onGet: _.negate(_.identity)
                                }
                            }]
                        }
                    })
                }
            }, {
                key: "featureToViewModel",
                value: function(e) {
                    return {
                        isConnectedToBigJunction: e.isConnectedToBigJunction(),
                        connectionsExist: e.connectionsExist(),
                        areAllConnectionsEnabled: e.areAllConnectionsEnabled(),
                        areAllConnectionsDisabled: e.areAllConnectionsDisabled()
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/node-edit"
                }
            }]),
            (0,
                l.default)(t, [{
                key: "onTurnGraphChanged",
                value: function(e) {
                    if (e) {
                        var t = this.getFeature(),
                            n = t.attributes.segIDs;
                        (n.includes(e.getFromVertex().getSegmentID()) || n.includes(e.getToVertex().getSegmentID())) && this.onFeaturesChanged([t])
                    }
                }
            }, {
                key: "onSegmentsChanged",
                value: function(e) {
                    var t = this.getFeature();
                    e.some(function(e) {
                        return t.isConnectedToSegment(e)
                    }) && this.onFeaturesChanged([t])
                }
            }, {
                key: "_setAllConnections",
                value: function(e, t) {
                    e.areConnectionsEditable() && this.dataModel.actionManager.add(new h.default(e, t))
                }
            }, {
                key: "hasEditedModelChanged",
                value: function(e) {
                    if ((0,
                            d.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "hasEditedModelChanged", this).apply(this, arguments))
                        return !0
                }
            }, {
                key: "_allowAllConnections",
                value: function() {
                    var e = this.getFeature();
                    e.areAllConnectionsEnabled() || this._setAllConnections(e, !0)
                }
            }, {
                key: "_disallowAllConnections",
                value: function() {
                    var e = this.getFeature();
                    e.areAllConnectionsDisabled() || this._setAllConnections(e, !1)
                }
            }]),
            t
    }(c.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = V(n(7)),
        r = V(n(9)),
        s = V(n(10)),
        a = V(n(15)),
        o = V(n(2)),
        l = V(n(6)),
        u = V(n(0)),
        d = V(n(3)),
        c = V(n(1)),
        h = V(n(4)),
        f = V(n(8)),
        p = V(n(159)),
        g = V(n(220)),
        v = n(37),
        m = V(v),
        y = V(n(16)),
        b = V(n(441)),
        w = V(n(436)),
        k = V(n(161)),
        E = V(n(1348)),
        M = V(n(1350)),
        S = V(n(443)),
        T = V(n(444)),
        I = V(n(117)),
        C = V(n(438)),
        A = V(n(1354)),
        O = V(n(160)),
        x = V(n(128)),
        D = V(n(85)),
        R = V(n(221)),
        L = V(n(1360)),
        P = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54)),
        N = n(71);

    function V(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var U = ["highways", "streets", "other_drivable", "non_drivable"],
        j = {
            highways: v.HIGHWAY_ROAD_TYPES,
            streets: [v.ROAD_TYPES.PRIMARY_STREET, v.ROAD_TYPES.STREET, v.ROAD_TYPES.ALLEY],
            other_drivable: [v.ROAD_TYPES.OFF_ROAD, v.ROAD_TYPES.PARKING_LOT_ROAD, v.ROAD_TYPES.PRIVATE_ROAD, v.ROAD_TYPES.FERRY],
            non_drivable: [v.ROAD_TYPES.RAILROAD, v.ROAD_TYPES.RUNWAY_TAXIWAY]
        },
        F = function(e) {
            function t(e) {
                e.dataModel;
                var n = e.selection,
                    i = void 0 === n ? [] : n;
                (0,
                    u.default)(this, t);
                var r = (0,
                    d.default)(this, (t.__proto__ || (0,
                    o.default)(t)).apply(this, arguments));
                return r.segmentIDs = i.map(function(e) {
                        return e.getID()
                    }),
                    r._toggleEvents(!0),
                    r.selectionManager = r.options.selectionManager,
                    r
            }
            return (0,
                    h.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            restoreLastTab: {
                                behaviorClass: w.default
                            },
                            accelerators: {
                                behaviorClass: k.default
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return (0,
                            l.default)({}, (0,
                            f.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "events", this).call(this), {
                            "click .segment .select-entire-street": "selectEntireStreetClicked",
                            "click .segment .select-entire-roundabout": "selectEntireRoundaboutClicked",
                            "click .segment .edit-house-numbers": "editHouseNumbersClicked",
                            "click .segment .edit-restrictions": "editRestrictionsClicked",
                            "click .segment .restriction-count": "editRestrictionTypeClicked",
                            "click .verify-buttons .verify-btn": "verifySpeedButtonClicked",
                            "click .verify-buttons .edit-btn": "editSpeedButtonClicked"
                        })
                    }
                }, {
                    key: "accelerators",
                    value: function() {
                        return {
                            toggleSegmentDirection: "toggleDirection",
                            editSegmentAddress: "editSegmentShortcutClicked",
                            editHouseNumbers: "editHouseNumbersShortcutClicked",
                            editRestrictions: "editRestrictionsShortcutClicked",
                            selectEntireStreet: "selectEntireStreet",
                            increaseSegmentLevel: "increaseSegmentLevel",
                            decreaseSegmentLevel: "decreaseSegmentLevel",
                            editClosures: "editClosures"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            closuresRegion: ".closures",
                            lanesRegion: ".lanes",
                            historyRegion: ".element-history-region",
                            junctionExitListRegion: ".junction-exit-list-region",
                            addressEditRegion: ".address-edit",
                            lockEditRegion: ".lock-edit"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            closuresTab: "a[href='#segment-edit-closures']"
                        }
                    }
                }, {
                    key: "_getRegularRoadTypeOptions",
                    value: function() {
                        var e = U.map(function(e) {
                                return I18n.t("segment.categories." + e)
                            }),
                            t = U.reduce(function(e, t) {
                                var n = I18n.t("segment.categories." + t);
                                return (0,
                                    l.default)({}, e, (0,
                                    a.default)({}, n, j[t].map(function(e) {
                                    return {
                                        label: I18n.t("segment.road_types." + e),
                                        value: e
                                    }
                                })))
                            }, {
                                opt_labels: e
                            });
                        return this.viewModel.attributes.mixedRoadType && (t[I18n.t("edit.multiple_values")] = [{
                                    label: I18n.t("edit.multiple_values"),
                                    value: -1
                                }],
                                t.opt_labels.unshift(I18n.t("edit.multiple_values"))),
                            t
                    }
                }, {
                    key: "_getWalkingRoadTypeOptions",
                    value: function() {
                        var e = v.WALKING_ROAD_TYPES.map(function(e) {
                            return {
                                label: I18n.t("segment.road_types." + e),
                                value: e
                            }
                        });
                        return this.viewModel.attributes.mixedRoadType && e.push([{
                                label: I18n.t("edit.multiple_values"),
                                value: -1
                            }]),
                            e
                    }
                }, {
                    key: "_getRoadTypeOptions",
                    value: function() {
                        return this.viewModel.attributes.isWalkingRoadType ? this._getWalkingRoadTypeOptions() : this._getRegularRoadTypeOptions()
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return (0,
                            l.default)({}, (0,
                            f.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "bindings", this).call(this), {
                            ".segment": {
                                classes: {
                                    roundabout: "isEntireRoundabout"
                                }
                            },
                            ".inconsistent-direction": {
                                observe: "consistentDirection",
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            ".inconsistent-driving-types": {
                                observe: "consistentDrivability",
                                visible: !0,
                                onGet: _.negate(_.identity)
                            },
                            ".segment-details": {
                                visible: !0,
                                observe: ["segmentErrorTitle", "segmentErrorDescription"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return Boolean(n) || Boolean(i)
                                },
                                classes: {
                                    "junction-box-message": "isInBigJunction"
                                }
                            },
                            ".closures-tab": {
                                classes: {
                                    disabled: {
                                        observe: "isClosuresSupported",
                                        onGet: _.negate(_.identity)
                                    }
                                }
                            },
                            ".lanes-tab-list-item": {
                                observe: "showLanesTab",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "flex" : "none")
                                }
                            },
                            "select[name=roadType]": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["consistentDrivability", "propertiesEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                s.default)(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return !n || !i
                                    }
                                }],
                                observe: "roadType",
                                selectOptions: {
                                    collection: this._getRoadTypeOptions
                                }
                            },
                            "button.select-entire-roundabout": {
                                observe: ["isInRoundabout", "isEntireRoundabout"],
                                visible: !0,
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                }
                            },
                            "button.select-entire-street": {
                                observe: "showSelectEntireStreetButton",
                                visible: !0
                            },
                            ".edit-house-numbers-btn-wrapper": {
                                observe: "showHouseNumbersButton",
                                visible: !0,
                                attributes: [{
                                    name: "title",
                                    observe: "houseNumberTitle"
                                }]
                            },
                            "button.edit-house-numbers": {
                                observe: "canEditHouseNumbers",
                                onGet: function(e) {
                                    return e ? I18n.t("edit.segment.actions.edit_house_numbers") : I18n.t("edit.segment.actions.view_house_numbers")
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditHouseNumbers",
                                    onGet: _.negate(_.identity)
                                }]
                            },
                            ".length-attribute": {
                                visible: !0,
                                observe: "length"
                            },
                            ".length-attribute .value": {
                                observe: "length",
                                onGet: function(e) {
                                    return null != e && y.default.lengthString(e)
                                }
                            },
                            ".routing-road-type-message": (0,
                                l.default)({}, x.default.contentsAndVisiblity("routingRoadTypeMessage", "shouldShowRoutingRoadTypeMessage"), {
                                updateMethod: "html"
                            }),
                            ".hide-walking-trail": {
                                observe: "isWalkingRoadType",
                                onGet: _.negate(_.identity),
                                visible: !0
                            }
                        }, this._checkboxBinding("unpaved", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditUnpaved",
                                onGet: _.negate(_.identity)
                            }]
                        }), this._checkboxBinding("tunnel", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditTunnel",
                                onGet: _.negate(_.identity)
                            }]
                        }), {
                            ".headlights-reminder": {
                                observe: "shouldShowHeadlightsReminder",
                                visible: !0
                            }
                        }, this._checkboxBinding("headlights", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditHeadlightsReminder",
                                onGet: _.negate(_.identity)
                            }]
                        }), this._checkboxBinding("nearbyHOV", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditNearbyHOV",
                                onGet: _.negate(_.identity)
                            }]
                        }), {
                            ".routing-road-type-select": {
                                observe: "shouldShowRoutingSelect",
                                visible: !0
                            },
                            "select[name=routingRoadType]": {
                                observe: "routingRoadType",
                                selectOptions: {
                                    collection: function() {
                                        var t = e.viewModel.get("routingRoadTypes"),
                                            n = [{
                                                label: I18n.t("edit.segment.routing.road_type.prev"),
                                                value: t.prev,
                                                disabled: null === t.prev
                                            }, {
                                                label: I18n.t("edit.segment.routing.road_type.current"),
                                                value: -1
                                            }, {
                                                label: I18n.t("edit.segment.routing.road_type.next"),
                                                value: t.next,
                                                disabled: null === t.next
                                            }];
                                        return e.viewModel.get("routingRoadTypeMixed") && n.unshift({
                                                label: I18n.t("edit.multiple_values"),
                                                value: ""
                                            }),
                                            n
                                    }
                                }
                            },
                            ".toll-road-message": {
                                observe: ["isTollRoad", "isTollRoadMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                },
                                visible: !0
                            },
                            ".mixed-toll-road-message": {
                                observe: "isTollRoadMixed",
                                onGet: function(e) {
                                    return e
                                },
                                visible: !0
                            },
                            ".restriction-editing": {
                                observe: "showRestrictionEditing",
                                visible: !0
                            },
                            "button.edit-restrictions": {
                                observe: ["allowRestrictionEditing", "restrictionCounts"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n ? i.driving + i.pickup > 0 ? I18n.t("edit.segment.actions.restrictions.edit") : I18n.t("edit.segment.actions.restrictions.add") : I18n.t("edit.segment.actions.restrictions.view")
                                }
                            },
                            ".restriction-list": {
                                visible: !0,
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving + e.pickup > 0
                                }
                            },
                            "a.restriction-count[data-restriction-type='driving']": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving > 0
                                },
                                visible: !0
                            },
                            "a.restriction-count[data-restriction-type='driving'] .number": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving
                                }
                            },
                            "a.restriction-count[data-restriction-type='pickup']": {
                                observe: ["restrictionCounts", "supportsPickupRestrictions"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0];
                                    return t[1] && n.pickup > 0
                                },
                                visible: !0
                            },
                            "a.restriction-count[data-restriction-type='pickup'] .number": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.pickup
                                }
                            },
                            "input[name='direction']": {
                                observe: ["direction", "directionMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0];
                                    return t[1] ? -1 : n
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditDirection",
                                    onGet: _.negate(_.identity)
                                }]
                            },
                            "input[name='direction'][value='-1'] + label": {
                                observe: "directionMixed",
                                visible: !0
                            },
                            "input[name='direction'][value='0'] + label": {
                                observe: ["allowNoDirection", "allowNoDirectionMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                },
                                visible: !0
                            },
                            ".speed-limits": {
                                observe: "allowSpeedLimit",
                                visible: !0
                            }
                        }, this._speedBindings("fwd"), this._speedBindings("rev"), {
                            "select[name=level]": {
                                observe: "level",
                                selectOptions: {
                                    collection: function() {
                                        var t = _.range(m.default.prototype.MaxLevel, m.default.prototype.MinLevel, -1).map(function(e) {
                                            return {
                                                label: I18n.t("edit.segment.levels")[e] || e,
                                                value: e
                                            }
                                        });
                                        return e.viewModel.attributes.levelMixed && t.unshift({
                                                label: I18n.t("edit.multiple_values"),
                                                value: null
                                            }),
                                            t
                                    }
                                }
                            }
                        })
                    }
                }, {
                    key: "_speedBindings",
                    value: function(e) {
                        var t, n, i = "fwd" === e ? "Fwd" : "Rev";
                        return (0,
                            l.default)((t = {},
                            (0,
                                a.default)(t, ".speed-limit-" + e, {
                                observe: [e + "Direction", e + "DirectionMixed"],
                                onGet: function(e) {
                                    var t = (0,
                                            s.default)(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n || i
                                },
                                visible: !0
                            }),
                            (0,
                                a.default)(t, "input[name=" + e + "MaxSpeed]", {
                                observe: e + "MaxSpeed",
                                events: ["blur"],
                                onSet: function(e) {
                                    return "" === e ? null : Number(e)
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEdit" + i + "MaxSpeed",
                                    onGet: _.negate(_.identity)
                                }]
                            }),
                            (0,
                                a.default)(t, ".speed-limit-" + e + " .auto-speed-tooltip", {
                                observe: e + "MaxSpeedUnverified",
                                visible: !0
                            }),
                            (0,
                                a.default)(t, ".speed-limit-" + e + " .verify-buttons", {
                                observe: "canChange" + i + "MaxSpeedUnverified",
                                visible: !0
                            }),
                            (0,
                                a.default)(t, ".speed-limit-" + e + " .average-speed-camera", {
                                observe: "shouldShowAverageSpeedCamera",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "inline-block" : "none")
                                },
                                classes: {
                                    locked: {
                                        observe: "canEditAverageSpeedCamera",
                                        onGet: _.negate(_.identity)
                                    }
                                }
                            }),
                            t), this._checkboxBinding(e + "SpeedCamera", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditAverageSpeedCamera",
                                onGet: _.negate(_.identity)
                            }]
                        }), (n = {},
                            (0,
                                a.default)(n, "input[name=" + e + "SpeedCamera] + label", {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditAverageSpeedCamera",
                                    onGet: _.negate(_.identity)
                                }]
                            }),
                            (0,
                                a.default)(n, ".speed-limit-" + e + " .waze-camera-tooltip", {
                                observe: "canEditAverageSpeedCamera",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "inline-block" : "none")
                                },
                                onGet: _.negate(_.identity)
                            }),
                            n))
                    }
                }, {
                    key: "_checkboxBinding",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e + "Mixed";
                        return (0,
                            a.default)({}, "input[name='" + e + "']", (0,
                            l.default)({
                            observe: [e, n],
                            onGet: function(e) {
                                var t = (0,
                                        s.default)(e, 2),
                                    n = t[0],
                                    i = t[1];
                                return n && !i
                            },
                            onSet: function(e) {
                                return [e, !1]
                            },
                            attributes: [{
                                name: "mixed",
                                observe: n
                            }].concat((0,
                                r.default)(t.attributes || []))
                        }, _.without(t, "attributes")))
                    }
                }, {
                    key: "_getSegmentError",
                    value: function(e) {
                        var t = void 0,
                            n = void 0;
                        return e.arePropertiesEditable() ? e.isInBigJunction() && (t = I18n.t("edit.segment.permissions.big_junction.title"),
                            n = I18n.t("edit.segment.permissions.big_junction.description")) : e.children.length > 1 ? (t = I18n.t("edit.segment.permissions.multiple.title"),
                            n = I18n.t("edit.segment.permissions.multiple.description")) : e.hasClosures() ? (t = I18n.t("edit.segment.permissions.has_closures.title"),
                            n = I18n.t("edit.segment.permissions.has_closures.description")) : e.isLockedByHigherRank() && e.canEditClosures() ? (t = I18n.t("edit.segment.permissions.locked_except_closures.title"),
                            n = I18n.t("edit.segment.permissions.locked_except_closures.description", {
                                lockLevel: y.default.formatRank(e.getLockRank())
                            })) : e.isLockedByHigherRank() ? (t = I18n.t("edit.segment.permissions.locked.title"),
                            n = I18n.t("edit.segment.permissions.locked.description", {
                                lockLevel: y.default.formatRank(e.getLockRank())
                            })) : (t = I18n.t("edit.segment.permissions.area.title"),
                            n = I18n.t("edit.segment.permissions.area.description")), {
                            segmentErrorTitle: t,
                            segmentErrorDescription: n
                        }
                    }
                }, {
                    key: "_getSegmentFlags",
                    value: function(e) {
                        return (0,
                            i.default)(e.FLAG_ATTRIBUTES).reduce(function(t, n) {
                            var i;
                            return (0,
                                l.default)({}, t, (i = {},
                                (0,
                                    a.default)(i, n + "Mixed", e.mixed[n]),
                                (0,
                                    a.default)(i, n, e.getFlagAttribute(n)),
                                i))
                        }, {})
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        var t = e.mixed.roadType;
                        return (0,
                            l.default)({
                            numSegments: e.children.length,
                            consistentDirection: 0 === this.options.reversedSegments.numReversed && !this.options.reversedSegments.multipleConnectedComponents,
                            consistentDrivability: e.hasConsistentDrivability(),
                            consistentWalkability: e.hasConsistentWalkability(),
                            isInBigJunction: e.isInBigJunction(),
                            isClosuresSupported: e.isClosuresSupported(),
                            isWalkingRoadType: e.isWalkingRoadType(),
                            mixedRoadType: e.mixed.roadType,
                            roadType: t ? -1 : e.getRoadType(),
                            isInRoundabout: e.isInRoundabout(),
                            isEntireRoundabout: e.isEntireRoundabout(),
                            showSelectEntireStreetButton: this.shouldShowSelectEntireStreetButton(e),
                            showHouseNumbersButton: this.shouldShowHouseNumbersButton(e),
                            canEditHouseNumbers: this.canEditHouseNumbers(e),
                            canEditUnpaved: e.canEditUnpaved(),
                            canEditTunnel: e.canEditTunnel(),
                            canEditNearbyHOV: e.canEditNearbyHOV(),
                            canEditDirection: e.canEditDirection(),
                            canEditFwdMaxSpeed: e.canEditMaxSpeed("fwd"),
                            canEditRevMaxSpeed: e.canEditMaxSpeed("rev"),
                            houseNumberTitle: this.getHouseNumberTitle(),
                            length: e.attributes.length,
                            mixedUpdatedBy: e.mixed.updatedBy,
                            mixedCreatedBy: e.mixed.createdBy,
                            shouldShowRoutingRoadTypeMessage: this._shouldShowRoutingRoadTypeMessage(e),
                            routingRoadTypeMessage: this.getRoutingRoadTypeMessage(e),
                            shouldShowHeadlightsReminder: this.shouldShowHeadlightsReminder(e),
                            canEditHeadlightsReminder: e.canEditHeadlightsReminder(),
                            shouldShowRoutingSelect: this.shouldShowRoutingSelect(e),
                            routingRoadTypes: e.getRoutingRoadTypes(),
                            routingRoadType: e.attributes.routingRoadType || -1,
                            routingRoadTypeMixed: e.mixed.routingRoadType,
                            isTollRoad: e.isTollRoad(),
                            isTollRoadMixed: e.isTollRoadMixed(),
                            showRestrictionEditing: this._shouldShowRestrictionEditing(),
                            allowRestrictionEditing: this._shouldAllowRestrictionEditing(e) && e.isDrivable(),
                            restrictionCounts: {
                                driving: e.getDrivingRestrictionCount(),
                                pickup: e.getPickupRestrictionCount()
                            },
                            supportsPickupRestrictions: e.supportsPickupRestrictions(),
                            showLanesTab: this.shouldShowLanesTab(e),
                            direction: e.attributes.direction,
                            directionMixed: e.mixed.direction,
                            fwdDirection: e.attributes.fwdDirection,
                            revDirection: e.attributes.revDirection,
                            fwdDirectionMixed: e.mixed.fwdDirection,
                            revDirectionMixed: e.mixed.revDirection,
                            allowNoDirection: e.attributes.allowNoDirection,
                            allowNoDirectionMixed: e.mixed.allowNoDirection,
                            allowSpeedLimit: W.Config.speed_limit.enable,
                            fwdMaxSpeed: y.default.getDisplayUnitValue(e.attributes.fwdMaxSpeed, g.default.prototype.UNITS.speed, !0),
                            revMaxSpeed: y.default.getDisplayUnitValue(e.attributes.revMaxSpeed, g.default.prototype.UNITS.speed, !0),
                            fwdMaxSpeedUnverified: e.isSpeedUnverified("fwdMaxSpeedUnverified"),
                            revMaxSpeedUnverified: e.isSpeedUnverified("revMaxSpeedUnverified"),
                            canChangeFwdMaxSpeedUnverified: e.canChangeMaxSpeedUnverified("fwdMaxSpeedUnverified"),
                            canChangeRevMaxSpeedUnverified: e.canChangeMaxSpeedUnverified("revMaxSpeedUnverified"),
                            shouldShowAverageSpeedCamera: this.shouldShowAverageSpeedCamera(e),
                            canEditAverageSpeedCamera: e.canEditAverageSpeedCamera(),
                            rank: e.attributes.rank,
                            lockRank: e.attributes.lockRank,
                            lockRankMixed: e.mixed.lockRank,
                            allowDefaultRank: e.canUserSetDefaultRank(W.model.loginManager.getUserRank()),
                            levelMixed: e.mixed.level,
                            level: e.attributes.level
                        }, this._getSegmentFlags(e), this._getSegmentError(e))
                    }
                }, {
                    key: "_flagsViewModelToFeature",
                    value: function() {
                        var e = this;
                        return (0,
                            i.default)(m.default.prototype.FLAG_ATTRIBUTES).reduce(function(t, n) {
                            var i;
                            return (0,
                                l.default)({}, t, (i = {},
                                (0,
                                    a.default)(i, n, function(t, i) {
                                    _.extend(i, e._getSegmentChangedFlagAttributes((0,
                                        a.default)({}, n, t)))
                                }),
                                (0,
                                    a.default)(i, n + "Mixed", function(t, i) {
                                    !1 === t && _.extend(i, e._getSegmentChangedFlagAttributes((0,
                                        a.default)({}, n, t)))
                                }),
                                i))
                        }, {})
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return (0,
                            l.default)({
                            roadType: function(e, t) {
                                -1 !== e && (t.roadType = e,
                                    t.routingRoadType = null)
                            }
                        }, this._flagsViewModelToFeature(), {
                            routingRoadType: function(e, t) {
                                t.routingRoadType = -1 === e ? null : e
                            },
                            direction: function(e, t) {
                                e >= 0 && (t.fwdDirection = 0 != (1 & e),
                                    t.revDirection = 0 != (2 & e))
                            },
                            fwdMaxSpeed: function(e, t) {
                                t.fwdMaxSpeed = D.default.getOriginalValue(e, g.default.prototype.UNITS.speed)
                            },
                            revMaxSpeed: function(e, t) {
                                t.revMaxSpeed = D.default.getOriginalValue(e, g.default.prototype.UNITS.speed)
                            },
                            fwdMaxSpeedUnverified: this.simpleAttribute("fwdMaxSpeedUnverified"),
                            revMaxSpeedUnverified: this.simpleAttribute("revMaxSpeedUnverified"),
                            lockRank: this.simpleAttribute("lockRank"),
                            level: this.simpleAttribute("level")
                        })
                    }
                }, {
                    key: "getFeature",
                    value: function() {
                        var e = this.repository.getByIds(this.segmentIDs);
                        return new g.default(e, this._dataModel, this.options.reversedSegments)
                    }
                }, {
                    key: "_getRepositoryObjectsToUpdate",
                    value: function() {
                        var e = this.repository.getByIds(this.segmentIDs),
                            t = _.partition(e, function(e) {
                                return null == e
                            }),
                            n = (0,
                                s.default)(t, 2),
                            i = n[0],
                            r = n[1];
                        i.length > 0 && console.error("Cannot update a non-existing objects with ids [" + this.segmentIDs.join(",") + "] and type " + this.repository.objectType);
                        var a = this._makeModelAttributes(this.viewModel),
                            o = function() {
                                return !0
                            };
                        return a.hasOwnProperty("fwdMaxSpeedUnverified") ? o = function(e) {
                                return e.canChangeMaxSpeedUnverified("fwdMaxSpeedUnverified")
                            } :
                            a.hasOwnProperty("revMaxSpeedUnverified") && (o = function(e) {
                                return e.canChangeMaxSpeedUnverified("revMaxSpeedUnverified")
                            }),
                            r.filter(o)
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return (0,
                            l.default)({}, (0,
                            f.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "templateContext", this).call(this), _.pick(this.viewModel.attributes, "segmentErrorTitle", "segmentErrorDescription", "numSegments", "length", "mixedUpdatedBy", "mixedCreatedBy"))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/edit-panel"
                    }
                }]),
                (0,
                    c.default)(t, [{
                    key: "_shouldShowBigJunctionExits",
                    value: function() {
                        var e = this.getFeature();
                        return !(e.children.length > 1) && e.children[0].isJunctionEntry()
                    }
                }, {
                    key: "_toggleEvents",
                    value: function(e) {
                        var t = e ? "on" : "off",
                            n = e ? "on" : "un";
                        this._dataModel.roadClosures[t]("change:active", this.renderOnceLater, this),
                            this._dataModel.actionManager.events[n]({
                                hasActions: this.onActionsChanged,
                                noActions: this.onActionsChanged,
                                scope: this
                            })
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._toggleEvents(!1)
                    }
                }, {
                    key: "selectEntireStreetClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.selectEntireStreet()
                    }
                }, {
                    key: "selectEntireStreet",
                    value: function() {
                        this.selectionManager.setSelectedModels(this.getFeature().children[0].getEntireStreet(this._dataModel))
                    }
                }, {
                    key: "isEntireStreetSelected",
                    value: function(e) {
                        return e.children[0].getEntireStreet(this._dataModel).every(function(e) {
                            return e.selected
                        })
                    }
                }, {
                    key: "selectEntireRoundaboutClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this._selectEntireRoundabout()
                    }
                }, {
                    key: "_selectEntireRoundabout",
                    value: function() {
                        var e = this.getFeature().children[0].getRoundabout();
                        null !== e && this.selectionManager.setSelectedModels(e.getAllSegments())
                    }
                }, {
                    key: "shouldShowHeadlightsReminder",
                    value: function(e) {
                        return null != (e.getAddress().getCountry() || {}).allowHeadlightsReminderRank
                    }
                }, {
                    key: "shouldShowAverageSpeedCamera",
                    value: function(e) {
                        return null != (e.getAddress().getCountry() || {}).allowAverageSpeedCamerasRank
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        (0,
                            f.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "onRender", this).apply(this, arguments),
                            this._renderAndShowChildViews(),
                            this.$(".waze-tooltip, .waze-lock-tooltip").tooltip({
                                container: "body"
                            })
                    }
                }, {
                    key: "_renderAndShowChildViews",
                    value: function() {
                        this._renderClosuresTab(),
                            this._renderLanesTab(),
                            this._renderElementHistory(),
                            this._renderAndShowRepositoryBoundChildViews()
                    }
                }, {
                    key: "_renderAndShowRepositoryBoundChildViews",
                    value: function() {
                        this._renderAddressEdit(),
                            this._renderTurnView(),
                            this._renderLockEdit()
                    }
                }, {
                    key: "_reflectRepositoryChanges",
                    value: function() {
                        (0,
                            f.default)(t.prototype.__proto__ || (0,
                            o.default)(t.prototype), "_reflectRepositoryChanges", this).call(this),
                            this._renderAndShowRepositoryBoundChildViews()
                    }
                }, {
                    key: "_renderTurnView",
                    value: function() {
                        var e = this.getFeature(),
                            t = new E.default({
                                selection: e.children,
                                map: this.options.map,
                                dataModel: this._dataModel,
                                showExitList: this._shouldShowBigJunctionExits()
                            });
                        this.showChildView("junctionExitListRegion", t)
                    }
                }, {
                    key: "_renderElementHistory",
                    value: function() {
                        var e = this.getFeature();
                        this.showChildView("historyRegion", new C.default({
                            map: this.options.map,
                            model: e.children[0]
                        }))
                    }
                }, {
                    key: "_renderClosuresTab",
                    value: function() {
                        var e = this.getFeature();
                        new b.default({
                            region: this.getRegion("closuresRegion"),
                            pannable: W.map.getPannable(),
                            compositeSegment: e,
                            repoActive: this._dataModel.roadClosures.active,
                            canSaveClosures: !this._dataModel.actionManager.canSave(),
                            canAdd: !0,
                            dataModel: this._dataModel,
                            editViewConfig: S.default.SEGMENT,
                            listViewConfig: T.default.SEGMENT
                        }).showClosures()
                    }
                }, {
                    key: "_renderLanesTab",
                    value: function() {
                        var e = this.getFeature(),
                            t = new L.default({
                                dataModel: this._dataModel,
                                segmentId: e.children[0].getID()
                            });
                        this.showChildView("lanesRegion", t)
                    }
                }, {
                    key: "_renderAddressEdit",
                    value: function() {
                        var e = this.getFeature(),
                            t = new O.default({
                                addressModel: e.getAddress(),
                                dataModel: this._dataModel,
                                feature: e,
                                editable: e.arePropertiesEditable(),
                                editStreet: !0,
                                streetIDField: "primaryStreetID",
                                editAltStreets: !0,
                                disableEmptyStreet: this.shouldDisableEmptyStreet(e),
                                disableEmptyCity: this.shouldDisableEmptyCity(e),
                                enableTTS: !0,
                                emptyCityForAltStreets: e.isHighway()
                            });
                        this.showChildView("addressEditRegion", t)
                    }
                }, {
                    key: "_renderLockEdit",
                    value: function() {
                        var e = new R.default({
                            model: this.viewModel
                        });
                        this.showChildView("lockEditRegion", e)
                    }
                }, {
                    key: "shouldShowSelectEntireStreetButton",
                    value: function(e) {
                        return e.hasSingleNonEmptyStreet() && !this.isEntireStreetSelected(e)
                    }
                }, {
                    key: "_maxSpeedChanged",
                    value: function(e, t) {
                        var n = {};
                        n[e] = t,
                            n[e + "Unverified"] = !1,
                            this.viewModel.set(n)
                    }
                }, {
                    key: "_maxSpeedUnverfiedChanged",
                    value: function(e, t) {
                        var n = e + "MaxSpeedUnverified";
                        this.viewModel.set((0,
                            a.default)({}, n, t))
                    }
                }, {
                    key: "verifySpeedButtonClicked",
                    value: function(e) {
                        var t = $(e.target).parent().data("direction");
                        this._maxSpeedUnverfiedChanged(t, !1),
                            e.preventDefault()
                    }
                }, {
                    key: "editSpeedButtonClicked",
                    value: function(e) {
                        var t = $(e.target).parent().data("direction") + "MaxSpeed";
                        this._maxSpeedChanged(t, null),
                            e.preventDefault()
                    }
                }, {
                    key: "_shouldShowRoutingRoadTypeMessage",
                    value: function(e) {
                        if (e.mixed.routingRoadType)
                            return !1;
                        var t = e.attributes.routingRoadType,
                            n = e.attributes.roadType;
                        return null !== t && n !== t
                    }
                }, {
                    key: "getRoutingRoadTypeMessage",
                    value: function(e) {
                        var t = e.attributes.routingRoadType,
                            n = y.default.contentTag("strong", I18n.t("segment.road_types." + t));
                        return y.default.safe_t("edit.segment.routing.info", {
                            roadType: n
                        })
                    }
                }, {
                    key: "shouldDisableEmptyCity",
                    value: function(e) {
                        var t = e.getAddress(),
                            n = null == t.getCity() || t.getCity().isEmpty();
                        return e.attributes.hasHNs && !n
                    }
                }, {
                    key: "shouldDisableEmptyStreet",
                    value: function(e) {
                        var t = e.getAddress().isEmptyStreet();
                        return e.attributes.hasHNs && !t
                    }
                }, {
                    key: "shouldShowRoutingSelect",
                    value: function(e) {
                        return !e.mixed.roadType && e.isRoutable() && e.canEditRoutingRoadTypes()
                    }
                }, {
                    key: "shouldShowHouseNumbersButton",
                    value: function(e) {
                        return W.Config.houseNumbers.allowEditing && (1 === e.children.length || e.hasSingleNonEmptyStreet()) && e.supportsHouseNumbers()
                    }
                }, {
                    key: "canEditHouseNumbers",
                    value: function(e) {
                        return e.canEditHouseNumbers() && !this.shouldDisableHouseNumbersButtonDueToActions()
                    }
                }, {
                    key: "shouldDisableHouseNumbersButtonDueToActions",
                    value: function() {
                        return this._dataModel.actionManager.canSave()
                    }
                }, {
                    key: "shouldShowLanesTab",
                    value: function(e) {
                        var t = P.lanesEnabled(e, N.SEGMENT_LANE_DIRECTION.FWD),
                            n = P.lanesEnabled(e, N.SEGMENT_LANE_DIRECTION.REV);
                        return t || n
                    }
                }, {
                    key: "getHouseNumberTitle",
                    value: function() {
                        return this.shouldDisableHouseNumbersButtonDueToActions() ? I18n.t("segment.house_number_disable_message") : ""
                    }
                }, {
                    key: "_getSegmentChangedFlagAttributes",
                    value: function(e) {
                        var t = this.getFeature(),
                            n = {},
                            r = (0,
                                i.default)(e).reduce(function(n, i) {
                                var r = t.FLAG_ATTRIBUTES[i];
                                return n[r.mask] || (n[r.mask] = []),
                                    n[r.mask].push([r.flag, e[i]]),
                                    n
                            }, {});
                        return (0,
                                i.default)(r).forEach(function(e) {
                                var i = r[e],
                                    s = t.attributes[e],
                                    a = new I.default(s);
                                a.setBits(i),
                                    n[e] = a.value
                            }),
                            n
                    }
                }, {
                    key: "reverseAttributes",
                    value: function(e) {
                        var t = {};
                        return _.each(e, function(e, n) {
                                var i = g.default.prototype.reversableAttributes[n];
                                i ? t[i] = e : t[n] = e
                            }),
                            t
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        var t = e.map(function(e) {
                            return e.getID()
                        });
                        return _.intersection(t, this.segmentIDs).length > 0
                    }
                }, {
                    key: "_onFeatureChangedIDs",
                    value: function(e) {
                        var t = e.oldID,
                            n = e.newID,
                            i = this.segmentIDs.indexOf(t);
                        i > -1 && (this.segmentIDs[i] = n)
                    }
                }, {
                    key: "increaseSegmentLevel",
                    value: function() {
                        this.changeSegmentLevelBy(1)
                    }
                }, {
                    key: "decreaseSegmentLevel",
                    value: function() {
                        this.changeSegmentLevelBy(-1)
                    }
                }, {
                    key: "changeSegmentLevelBy",
                    value: function(e) {
                        if (!this.viewModel.attributes.levelMixed && this.viewModel.attributes.propertiesEditable) {
                            var t = this.viewModel.attributes.level || 0;
                            (t += e) >= m.default.prototype.MinLevel && t <= m.default.prototype.MaxLevel && this.viewModel.set({
                                level: t
                            })
                        }
                    }
                }, {
                    key: "toggleDirection",
                    value: function() {
                        if (!this.viewModel.attributes.directionMixed && !this.viewModel.attributes.isInBigJunction && this.viewModel.attributes.propertiesEditable) {
                            var e = (this.viewModel.attributes.direction + 1) % 4;
                            0 === e && e++,
                                this.viewModel.set({
                                    direction: e
                                })
                        }
                    }
                }, {
                    key: "editSegmentShortcutClicked",
                    value: function() {
                        this.getChildView("addressEditRegion").editAddress()
                    }
                }, {
                    key: "editHouseNumbersShortcutClicked",
                    value: function() {
                        this.viewModel.attributes.showHouseNumbersButton && this.viewModel.attributes.canEditHouseNumbers && this.editHouseNumbers()
                    }
                }, {
                    key: "editHouseNumbersClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.editHouseNumbers()
                    }
                }, {
                    key: "editHouseNumbers",
                    value: function() {
                        var e = this.getFeature().children[0],
                            t = e.getEntireStreet(this._dataModel);
                        new M.default({
                            model: this._dataModel,
                            map: W.map,
                            editable: e.canEditHouseNumbers(),
                            segments: t
                        })
                    }
                }, {
                    key: "editRestrictionsClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.editRestrictions()
                    }
                }, {
                    key: "editRestrictionsShortcutClicked",
                    value: function() {
                        this._shouldShowRestrictionEditing() && this.editRestrictions()
                    }
                }, {
                    key: "editRestrictionTypeClicked",
                    value: function(e) {
                        if (e.preventDefault(),
                            this._shouldShowRestrictionEditing()) {
                            var t = e.currentTarget.dataset.restrictionType;
                            this.editRestrictions(e, t)
                        }
                    }
                }, {
                    key: "editRestrictions",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "driving",
                            n = this.getFeature(),
                            i = n.isTollRoad(),
                            r = n.isTollRoadMixed(),
                            s = new A.default({
                                dataModel: this._dataModel,
                                compositeSegment: n,
                                isTollRoad: i,
                                isTollRoadMixed: r,
                                showRestrictionType: t
                            });
                        W.app.layout.getRegion("dialogRegion").show(s)
                    }
                }, {
                    key: "editClosures",
                    value: function(e) {
                        this.ui.closuresTab.tab("show")
                    }
                }, {
                    key: "onActionsChanged",
                    value: function() {
                        this.viewModel.set({
                            canEditHouseNumbers: this.canEditHouseNumbers(this.getFeature())
                        })
                    }
                }, {
                    key: "_shouldAllowRestrictionEditing",
                    value: function(e) {
                        return W.Config.restrictions.allowEditing && e.arePropertiesEditable() && !e.isInBigJunction()
                    }
                }, {
                    key: "_shouldShowRestrictionEditing",
                    value: function() {
                        return W.Config.restrictions.allowEditing
                    }
                }]),
                t
        }(p.default);
    t.default = F,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(7)),
        r = o(n(25)),
        s = o(n(93)),
        a = o(n(1344));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = {
        getSharedClosures: function(e) {
            var t = this,
                n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                l = _.indexBy(e, function(e) {
                    return e.getID()
                });
            o || (o = this._getClosuresForSegments(l));
            var u = _(o).groupBy(function(e) {
                    return t._getClosureKey(e, n)
                }),
                d = new a.default,
                c = !0,
                h = !1,
                f = void 0;
            try {
                for (var p, g = (0,
                        r.default)((0,
                        i.default)(u)); !(c = (p = g.next()).done); c = !0) {
                    var v = u[p.value],
                        m = _.chain(v).map(function(e) {
                            return l[e.segID]
                        }).uniq().value(),
                        y = new s.default({
                            closures: v,
                            segments: m,
                            partial: m.length !== e.length,
                            reverseSegments: this._getClosureReverseSegments(m, n)
                        }),
                        b = d.findOpposite(y);
                    null != b ? b.mergeWithOpposite(y) : d.push(y)
                }
            } catch (e) {
                h = !0,
                    f = e
            } finally {
                try {
                    !c && g.return && g.return()
                } finally {
                    if (h)
                        throw f
                }
            }
            return d
        },
        _getClosuresForSegments: function(e) {
            return W.model.roadClosures.getObjectArray(function(t) {
                return null != e[t.segID]
            })
        },
        _getClosureReverseSegments: function(e, t) {
            var n = _(e).invoke("getID");
            return _(t).pick(n)
        },
        _getClosureKey: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                n = e.forward || !1;
            return !0 === t[e.segID] && (n = !n),
                [e.startDate, e.endDate, e.reason, e.location, n, e.createdBy, e.eventId].join(":")
        }
    };
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(93),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Backbone.Collection.extend({
        model: s.default,
        findOpposite: function(e) {
            return this.find(function(t) {
                return t.isOppositeTo(e)
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(1346)),
        r = s(n(442));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.CompositeView.extend({
        template: "Waze/MapEditor/UI/Modules/Closures/templates/list",
        className: "closures-list",
        childView: i.default,
        childViewOptions: function() {
            var e = _.pick(this.options, ["dataModel", "canEdit"]);
            return _.extend(e, this.options.extendedChildViewOptions)
        },
        ui: {
            message: ".message",
            partial: ".partial-closures",
            partialHeader: ".partial-closures-header",
            full: ".full-closures"
        },
        triggers: {
            "click .add-closure-button": "add"
        },
        initialize: function() {
            var e = this;
            return this.on("childview:edit", function(t) {
                    return e.trigger("edit", t.model)
                }),
                this.on("childview:delete", function(t) {
                    return e.trigger("delete", t.model)
                }),
                this.on("childview:locate", function(t) {
                    return e.trigger("locate", t.model)
                }),
                this.on("childview:applyToAll", function(t) {
                    return e.trigger("applyToAll", t.model)
                })
        },
        attachHtml: function(e, t, n) {
            return t.model.get("partial") ? (this.ui.partial.append(t.el),
                this.ui.partialHeader.show()) : this.ui.full.append(t.el)
        },
        viewComparator: function(e, t) {
            var n = Date.parse(e.get("startDate")),
                i = Date.parse(t.get("startDate")),
                r = Date.parse(e.get("endDate")),
                s = Date.parse(t.get("endDate"));
            if (n > i)
                return 1;
            if (n === i) {
                if (r > s)
                    return 1;
                if (r === s)
                    return 0
            }
            return -1
        },
        onRender: function() {
            return this.message = new r.default(this.ui.message),
                null != this.options.successMessage ? this.message.showSuccess(this.options.successMessage) : null != this.options.errorMessage ? this.message.showError(this.options.errorMessage) : void 0
        },
        serializeData: function() {
            return {
                canAdd: this.options.canAdd,
                canEdit: this.options.canEdit,
                lockLevel: this.options.lockLevel,
                showActivateRepoMessage: this.options.showActivateRepoMessage,
                showSaveMessage: this.options.showSaveMessage,
                showPartialClosuresHeader: this.options.showPartialClosuresHeader
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(93),
        r = Marionette.View.extend({
            template: "Waze/MapEditor/UI/Modules/Closures/templates/item",
            className: "closure-item",
            tagName: "li",
            triggers: {
                "click .edit": "edit",
                "click .delete": "delete",
                "click .locate": "locate",
                "click .apply-to-all": "applyToAll"
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments);
                return e.isStartDateSet = this.model.isStartDateSet(),
                    e.isEndDateSet = this.model.isEndDateSet(),
                    e.startDate = this.model.get("startDate"),
                    e.endDate = this.model.get("endDate"),
                    e.showApplyToAll = this.model.attributes.partial && this.options.allowApplyToAll,
                    e.description = this.options.getDescription(this.model),
                    e.canEdit = this.options.canEdit,
                    e.showLocateButton = this.options.showLocateButton,
                    e.eventName = this._getEventName(),
                    e.DIRECTION = i.DIRECTION,
                    e
            },
            _getEventName: function() {
                if (this.options.showEventName) {
                    var e = this.options.dataModel.majorTrafficEvents.get(this.model.get("eventId"));
                    return e ? e.getEnglishName() : null
                }
                return null
            },
            templateContext: {
                formatDate: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    return I18n.l("date.formats.default", e)
                },
                formatTime: function() {
                    return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "").split(" ")[1]
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(7)),
        r = l(n(128)),
        s = l(n(122)),
        a = l(n(442)),
        o = n(93);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Closures/templates/edit",
        behaviors: {
            dateTimePickers: {
                behaviorClass: s.default
            }
        },
        bindings: {
            "[name=closure_event]": "event",
            "[name=closure_permanent]": "permanent",
            "[name=closure_reason]": "reason",
            "[name=closure_direction]": {
                observe: "direction",
                selectOptions: {
                    collection: [o.DIRECTION.A_TO_B, o.DIRECTION.B_TO_A, o.DIRECTION.TWO_WAY].map(function(e) {
                        return {
                            value: e,
                            label: I18n.t("segment.direction." + e)
                        }
                    })
                }
            }
        },
        mteBindings: {
            ".mte-message-empty": {
                observe: ["startDate", "endDate"],
                visible: "_datesNotSet"
            },
            "[name=closure_eventId]": {
                observe: "eventId",
                update: function(e, t, n, i) {
                    if (Backbone.Stickit.getConfiguration(e).update.apply(this, arguments),
                        this.options.newClosure) {
                        var s = r.default.selectionRequiredOption(I18n.t("closures.choose_event"));
                        return e.prepend(s)
                    }
                },
                selectOptions: {
                    collection: "this.eventOptions",
                    defaultOption: {
                        label: "None",
                        value: null
                    }
                }
            }
        },
        ui: {
            form: "form",
            formSubmit: "form input[type=submit]",
            message: ".message",
            mteTooltip: ".mte-tooltip",
            permanentTooltip: ".permanent-tooltip"
        },
        events: {
            "click .save-button": "save",
            "submit form": "save"
        },
        triggers: {
            "click .cancel-button": "editCancelled"
        },
        onRender: function() {
            return this.stickit(this.model, this.bindings),
                this.options.canEditMTE && this._populateMTEOptions(),
                this.message = new a.default(this.ui.message),
                this.ui.mteTooltip.tooltip(),
                this.ui.permanentTooltip.tooltip()
        },
        save: function(e) {
            e.preventDefault && e.preventDefault(),
                this._hideErrors();
            var t = this.ui.form.get(0).checkValidity();
            return this.model.validate() && t ? this.trigger("save") : this._showErrors()
        },
        _datesNotSet: function() {
            return !this.model.get("startDate") || !this.model.get("endDate")
        },
        _showErrors: function() {
            var e = this;
            this.ui.formSubmit.click(),
                (0,
                    i.default)(this.model.errors).forEach(function(t) {
                    var n = e.model.errors[t];
                    e._showError(t, n)
                })
        },
        _showError: function(e, t) {
            var n = (e = this.$el.find("[name=closure_" + e + "]")).closest(".form-group");
            return n.addClass("has-error"),
                $("<span>").addClass("help-block error-message").text(I18n.t("closures.validation." + t)).appendTo(n.find(".controls"))
        },
        _hideErrors: function() {
            return this.$el.find(".error-message").remove(),
                this.$el.find(".form-group").removeClass("has-error")
        },
        _populateMTEOptions: function() {
            var e = this.options.availableEvents.map(function(e) {
                return {
                    label: e.getEnglishName() || e.getID(),
                    value: e.getID()
                }
            });
            this.eventOptions = _.sortBy(e, function(e) {
                    return e.label.toString().toLowerCase()
                }),
                this.stickit(this.model, this.mteBindings)
        },
        serializeData: function() {
            var e = Marionette.View.prototype.serializeData.apply(this, arguments);
            return e.newClosure = this.options.newClosure,
                e.canEditMTE = this.options.canEditMTE,
                e
        },
        templateContext: {
            getProvider: function() {
                return this.closures[0] ? this.closures[0].provider : null
            }
        }
    });
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(2)),
        r = h(n(0)),
        s = h(n(1)),
        a = h(n(3)),
        o = h(n(4)),
        l = h(n(1349)),
        u = h(n(213)),
        d = h(n(426)),
        c = n(109);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "triggers",
                    value: function() {
                        return {
                            mouseover: "over",
                            mouseout: "out",
                            click: "click"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.get("toSegment").getAddress(),
                            t = "";
                        return null != e && (t = e.getStreetName()), {
                            streetName: t,
                            isTurnAllowed: this.model.get("turn").getTurnData().isAllowed()
                        }
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "exit-item"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/junction-exit"
                    }
                }]),
                t
        }(Marionette.View),
        p = function(e) {
            function t() {
                return (0,
                        r.default)(this, t),
                    (0,
                        a.default)(this, (t.__proto__ || (0,
                        i.default)(t)).apply(this, arguments))
            }
            return (0,
                    o.default)(t, e),
                (0,
                    s.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._showExitList = e.showExitList,
                            this._selection = e.selection,
                            W.editingMediator.get("editingHouseNumbers") || this._createTurnEditor(),
                            this.listenTo(W.editingMediator, "change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this),
                            this._dataModel.getTurnGraph().on(c.CHANGE_EVENT, this.render, this)
                    }
                }, {
                    key: "_createTurnEditor",
                    value: function() {
                        this._turnEditor = new l.default(this.options.selection, this.options.map.getDrawingContext(), new u.default(this.options.map.bigJunctionPathLayer), this.options.dataModel, W.prefs)
                    }
                }, {
                    key: "_destroyTurnEditor",
                    value: function() {
                        this._turnEditor && (this._turnEditor.destroy(),
                            this._turnEditor = null)
                    }
                }, {
                    key: "_onEditingHouseNumbersChanged",
                    value: function() {
                        W.editingMediator.get("editingHouseNumbers") ? this._destroyTurnEditor() : this._createTurnEditor(),
                            this.render()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyTurnEditor(),
                            this._dataModel.getTurnGraph().off("change", this.render, this)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this._turnEditor && this._turnEditor.draw(),
                            this._showExitList && this.showChildView("list", new Marionette.CollectionView({
                                collection: this._createTurnCollection(this._createTurnCollection()),
                                className: "junction-exit-view",
                                childView: f,
                                onChildviewOver: function(t) {
                                    e._highlightArrow(t.model.get("turn"))
                                },
                                onChildviewOut: function(t) {
                                    e._outArrow(t.model.get("turn"))
                                },
                                onChildviewClick: function(t) {
                                    e._toggleTurn(t.model.get("turn"))
                                }
                            }))
                    }
                }, {
                    key: "_toggleTurn",
                    value: function(e) {
                        var t = new d.default(e);
                        this._dataModel.actionManager.add(t)
                    }
                }, {
                    key: "_highlightArrow",
                    value: function(e) {
                        this._turnEditor.highlightArrowFor(e)
                    }
                }, {
                    key: "_outArrow",
                    value: function(e) {
                        this._turnEditor.outArrowFor(e)
                    }
                }, {
                    key: "_createTurnCollection",
                    value: function() {
                        var e = this,
                            t = this._selection[0].getJunctionTurns().map(function(t) {
                                var n = e._dataModel.segments.getObjectById(t.getToVertex().getSegmentID());
                                return new Backbone.Model({
                                    turn: t,
                                    toSegment: n
                                })
                            });
                        return new Backbone.Collection(t)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return this._showExitList ? "templates/segment/junction-exit-layout" : _.noop
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(6)),
        r = l(n(0)),
        s = l(n(1)),
        a = n(14),
        o = l(n(425));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function() {
        function e(t, n, i, s, a) {
            (0,
                r.default)(this, e),
            this._segments = t,
                this._drawingContext = n,
                this._driveRenderer = i,
                this._dataModel = s,
                this._appPreferences = a,
                this._turnArrowViewGenerator = new o.default(this._drawingContext, this._dataModel, this._appPreferences, {
                    includeJunctionTurns: !0
                }),
                this._turnArrowViews = [],
                this._lastHighlightedTurnArrow = null,
                this._appPreferences.on("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                this._drawingContext.on("zoomend", this.draw, this)
        }
        return (0,
                s.default)(e, [{
                key: "destroy",
                value: function() {
                    this._drawingContext.destroy(),
                        this._driveRenderer.clear(),
                        this._appPreferences.off("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                        this._drawingContext.off("zoomend", this.draw, this),
                        this._destroyTurnArrowViews()
                }
            }, {
                key: "draw",
                value: function() {
                    if (this._drawingContext.clear(),
                        this._driveRenderer.clear(),
                        !(this._segments.length > 1)) {
                        var e = this._segments[0];
                        e.type === a.SEGMENT && e.isDrivable() && (this._destroyTurnArrowViews(),
                            this._drawTurnArrowsForSegment(e))
                    }
                }
            }, {
                key: "_drawTurnArrowsForSegment",
                value: function(e) {
                    var t = this;
                    if (this._turnArrowViews = this._turnArrowViewGenerator.generate(e),
                        this._turnArrowViews.forEach(function(e) {
                            e.on("mouseleave", t._onTurnArrowOut, t),
                                e.on("mouseenter", t._onTurnArrowHover, t),
                                e.render()
                        }),
                        null !== this._lastHighlightedTurnArrow) {
                        var n = this._turnArrowViews.find(function(e) {
                            return e.getTurnArrow().getTurn().verticesEqual(t._lastHighlightedTurnArrow.getTurn())
                        });
                        void 0 === n ? this._drawSegmentPaths() : n.doOver()
                    } else
                        this._drawSegmentPaths()
                }
            }, {
                key: "highlightArrowFor",
                value: function(e) {
                    var t = this._turnArrowViews.find(function(t) {
                        return t.getTurnArrow().getTurn().verticesEqual(e)
                    });
                    void 0 !== t && t.doOver()
                }
            }, {
                key: "outArrowFor",
                value: function(e) {
                    var t = this._turnArrowViews.find(function(t) {
                        return t.getTurnArrow().getTurn().verticesEqual(e)
                    });
                    void 0 !== t && t.doOut()
                }
            }, {
                key: "_onTurnArrowHover",
                value: function(e) {
                    this._lastHighlightedTurnArrow = e.getTurnArrow(),
                        this._driveRenderer.clear(),
                        this._drawSegmentPath(e)
                }
            }, {
                key: "_destroyTurnArrowViews",
                value: function() {
                    var e = this;
                    this._turnArrowViews.forEach(function(t) {
                            t.off("mouseleave", e._onTurnArrowOut, e),
                                t.off("mouseenter", e._onTurnArrowHover, e),
                                t.destroy()
                        }),
                        this._turnArrowViews = []
                }
            }, {
                key: "_drawSegmentPath",
                value: function(e) {
                    var t = e.getTurnArrow(),
                        n = t.getSegmentPathGeometry();
                    t.getTurn().getTurnData().isAllowed() ? this._driveRenderer.drawUserDrive(n) : this._driveRenderer.drawDisallowedPath(n)
                }
            }, {
                key: "_onTurnArrowOut",
                value: function() {
                    this._lastHighlightedTurnArrow = null,
                        this._drawSegmentPaths()
                }
            }, {
                key: "_drawSegmentPaths",
                value: function() {
                    var e = this;
                    this._driveRenderer.clear(),
                        this._turnArrowViews.forEach(function(t) {
                            return e._drawSegmentPath(t)
                        })
                }
            }]),
            e
    }();
    (0,
        i.default)(u.prototype, Backbone.Events),
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(53)),
        r = v(n(7)),
        s = v(n(25)),
        a = v(n(1351)),
        o = v(n(385)),
        l = v(n(403)),
        u = v(n(203)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(401)),
        c = v(n(74)),
        h = v(n(1352)),
        f = v(n(75)),
        p = v(n(1353)),
        g = n(110);

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = Marionette.Object.extend({
        MIN_EDIT_ZOOM: 6,
        HOUSE_NUMBERS_SAVE_ERROR_CODE: 716,
        _editingLock: null,
        model: null,
        segments: null,
        houseNumberSets: null,
        layer: null,
        markerLayer: null,
        fractionPoint: null,
        fractionLine: null,
        originalGeometry: null,
        updating: !1,
        lightboxView: null,
        fogOfWar: null,
        selectedNumber: null,
        invalidHouseNumbers: null,
        failedLoading: !1,
        enabled: !0,
        active: !1,
        showingForceDialog: !1,
        segmentStyle: {
            fill: {
                strokeColor: "#00ece3",
                strokeWidth: 7,
                graphicZIndex: 2
            }
        },
        editAreaStyle: {
            maskID: "HNAreaMask",
            fillColor: "black",
            graphicZIndex: 1
        },
        fractionLineStyle: {
            strokeWidth: 2,
            strokeColor: "white",
            strokeDashstyle: "dash",
            strokeDashArray: "8, 8"
        },
        fractionLinePaddingStyle: {
            strokeWidth: 4,
            strokeColor: "#000",
            strokeOpacity: .5,
            strokeDashstyle: "dash",
            strokeDashArray: "8, 8"
        },
        initialize: function() {
            var e = this;
            return this.model = this.options.model,
                this.map = this.options.map,
                this.editable = this.options.editable,
                this.enabled = this.options.editable,
                this.segments = this.options.segments,
                this.lightboxView = new h.default({
                    model: this.model,
                    address: this.segments[0].getAddress(),
                    pm: this
                }),
                this.lightboxView.on("destroy", this.destroy, this),
                this.lightboxView.onSave = function() {
                    return e.onSave()
                },
                this.lightboxView.onAdd = function() {
                    return e.onAddClicked()
                },
                this.lightboxView.disabled = !this.options.editable,
                W.app.layout.getRegion("mapDialogRegion").show(this.lightboxView),
                this._initLayers(),
                this._setupSegments()
        },
        _initLayers: function() {
            return this.layer = new OL.Layer.Vector("houseNumbers", {
                    renderers: [f.default],
                    rendererOptions: {
                        zIndexing: !0
                    }
                }),
                this.markerLayer = new OL.Layer.Markers("houseNumberMarkers"),
                this.map.addLayer(this.layer),
                this.map.addLayer(this.markerLayer),
                $(this.markerLayer.div).addClass("house-numbers-layer")
        },
        _setupSegments: function() {
            var e = this,
                t = void 0,
                n = this.segments.map(function(e) {
                    return (t = e.geometry.clone()).model = e,
                        t
                });
            this.joinedGeometry = new OL.Geometry.MultiLineString(n);
            var i = this.segments.map(function(e) {
                return e.getID()
            });
            return this.model.houseNumbers.getAsync(i).then(function(t) {
                    if (e.active) {
                        e.houseNumberSets = {};
                        for (var n = 0; n < t.length; n++) {
                            var i = t[n];
                            e.houseNumberSets[i.id] = i
                        }
                        return e.render()
                    }
                }).catch(function() {
                    return e.failedLoading = !0,
                        e.lightboxView.render(),
                        e.lightboxView.showErrorMessage()
                }).finally(function() {
                    return e.lightboxView.setLoading(!1)
                }),
                this.activate(),
                this.lightboxView.setLoading(!0)
        },
        onDrag: function(e) {
            return this.selectedNumber.model.calculateProjection(this.joinedGeometry),
                this.fractionPoint.lonlat = this.selectedNumber.model.projectionLonLat,
                this.selectedNumber.updateSide(),
                this.markerLayer.drawMarker(this.fractionPoint),
                this.selectedNumber.icon.forceReflow(),
                this.fractionLine.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                this.fractionLine.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                this.fractionLine.geometry.components[1].x = this.selectedNumber.lonlat.lon,
                this.fractionLine.geometry.components[1].y = this.selectedNumber.lonlat.lat,
                this.fractionLinePadding.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                this.fractionLinePadding.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                this.fractionLinePadding.geometry.components[1].x = this.selectedNumber.lonlat.lon,
                this.fractionLinePadding.geometry.components[1].y = this.selectedNumber.lonlat.lat,
                this.layer.drawFeature(this.fractionLinePadding),
                this.layer.drawFeature(this.fractionLine)
        },
        onDragEnd: function(e) {
            var t = this;
            if (!this.selectedNumber.isNew) {
                var n = new OL.Geometry.Point(this.selectedNumber.lonlat.lon, this.selectedNumber.lonlat.lat),
                    i = new c.default;
                this.model.actionManager.add(i),
                    this.ignoreUpdates(function() {
                        if (t.selectedNumber.model.changedSegment()) {
                            var e = t.houseNumberSets[t.selectedNumber.model.closestSegment.getID()],
                                r = new d.ReplaceHouseNumberSegment(t.selectedNumber.model, e);
                            t.selectedNumber.model.geometry = t.originalGeometry.clone(),
                                i.doSubAction(r),
                                t.selectedNumber.model = r.newHouseNumber
                        }
                        return i.doSubAction(new l.default(t.selectedNumber.model, t.originalGeometry, n)),
                            i.doSubAction(new u.default(t.selectedNumber.model.parent, t.selectedNumber.model, {
                                forced: !1,
                                valid: !0
                            })),
                            t.selectedNumber.setValid(!0),
                            t.selectedNumber.setForced(!1)
                    }),
                    this.originalGeometry = n.clone()
            }
        },
        reset: function() {
            this.adding && null != this.selectedNumber && this.selectedNumber.dragging.forceEnd(),
                this.adding = !1;
            for (var e = 0; e < this.markerLayer.markers.length; e++) {
                this.markerLayer.markers[e].destroy()
            }
            this.markerLayer.clearMarkers(),
                this.fractionPoint = null,
                this.layer.destroyFeatures(this.layer.features),
                this.editArea = null
        },
        render: function() {
            if (!this.updating && this.active && null !== this.houseNumberSets) {
                this.reset();
                var e = !0,
                    t = !1,
                    n = void 0;
                try {
                    for (var i, a = (0,
                            s.default)((0,
                            r.default)(this.houseNumberSets)); !(e = (i = a.next()).done); e = !0)
                        for (var o = i.value, l = this.houseNumberSets[o], u = 0; u < l.numbers.length; u++) {
                            var d = l.numbers[u];
                            this.createHouseNumber(d)
                        }
                } catch (e) {
                    t = !0,
                        n = e
                } finally {
                    try {
                        !e && a.return && a.return()
                    } finally {
                        if (t)
                            throw n
                    }
                }
                return this.drawFogOfWar(),
                    this.drawEditArea(),
                    this.drawSegments()
            }
        },
        drawSegments: function() {
            var e = this,
                t = this.segments.map(function(t) {
                    return new OL.Feature.Vector(t.geometry.clone(), {}, e.segmentStyle.fill)
                });
            return this.layer.addFeatures(t)
        },
        drawEditArea: function() {
            var e = this;
            return this.editAreas = function() {
                    var t = [],
                        n = !0,
                        i = !1,
                        a = void 0;
                    try {
                        for (var o, l = (0,
                                s.default)((0,
                                r.default)(e.houseNumberSets)); !(n = (o = l.next()).done); n = !0) {
                            var u = o.value,
                                d = e.houseNumberSets[u];
                            t.push(new OL.Feature.Vector(d.editArea, {}, e.editAreaStyle))
                        }
                    } catch (e) {
                        i = !0,
                            a = e
                    } finally {
                        try {
                            !n && l.return && l.return()
                        } finally {
                            if (i)
                                throw a
                        }
                    }
                    return t
                }(),
                this.layer.addFeatures(this.editAreas)
        },
        createHouseNumber: function(e) {
            var t = this;
            e.calculateProjection(this.joinedGeometry);
            var n = new a.default(e, new OL.LonLat(e.geometry.x, e.geometry.y), this.map);
            return this.markerLayer.addMarker(n),
                n.events.register("click:input", this, this.onMarkerClick),
                n.events.register("change:number", this, this.onValueChanged),
                n.events.register("delete", this, this.onMarkerDelete),
                n.events.register("unselect", null, function() {
                    return t.unselectNumber(t.selectedNumber)
                }),
                n.events.register("drag", this, this.onDrag),
                n.events.register("dragEnd", this, this.onDragEnd),
                n.layer = this.markerLayer,
                n
        },
        onValueChanged: function(e) {
            var t = e.number,
                n = e.object;
            if (n.isNew && "" !== t)
                n.model.number = t,
                delete n.isNew,
                n.model.geometry = new OL.Geometry.Point(n.lonlat.lon, n.lonlat.lat),
                this.model.actionManager.add(new d.AddHouseNumber(n.model.parent, n.model));
            else if ("" !== t)
                return this.model.actionManager.add(new u.default(n.model.parent, n.model, {
                    number: t,
                    forced: !1,
                    valid: !0
                }))
        },
        onMarkerDelete: function(e) {
            var t = e.object;
            return this.unselectNumber(t),
                t.isNew ? this.cancelAdd() : this.model.actionManager.add(new d.DeleteHouseNumber(t.model.parent, t.model))
        },
        onMarkerClick: function(e) {
            var t = e.object;
            return this.selectNumber(t)
        },
        selectNumber: function(e) {
            if (this.enabled && this.selectedNumber !== e) {
                this.unselectNumber(this.selectedNumber),
                    this.selectedNumber = e;
                var t = this.selectedNumber.model.fractionPoint.clone();
                return this.fractionPoint = new p.default(new OL.LonLat(t.x, t.y), this.joinedGeometry, this.map),
                    this.markerLayer.addMarker(this.fractionPoint),
                    this.fractionPoint.dragging.activate(this.fractionPoint.icon.$div),
                    this.fractionPoint.layer = this.markerLayer,
                    this.selectedNumber.icon.bringToFront(),
                    this.selectedNumber.focus(),
                    this.selectedNumber.setActive(!0),
                    this.selectedNumber.dragging.activate(this.selectedNumber.icon.$div.find(".drag-handle")),
                    this.originalGeometry = this.selectedNumber.model.geometry.clone(),
                    this.fractionPoint.events.register("dragEnd", this, this.onFractionPointDragEnd),
                    this.fractionPoint.events.register("drag", this, this.onFractionPointDrag),
                    this.lightboxView.setLastEditedUser(this.selectedNumber.model.updatedBy),
                    this.fractionLine = new OL.Feature.Vector(new OL.Geometry.LineString([new OL.Geometry.Point(t.x, t.y), new OL.Geometry.Point(this.originalGeometry.x, this.originalGeometry.y)]), {}, this.fractionLineStyle),
                    this.fractionLinePadding = new OL.Feature.Vector(new OL.Geometry.LineString([new OL.Geometry.Point(t.x, t.y), new OL.Geometry.Point(this.originalGeometry.x, this.originalGeometry.y)]), {}, this.fractionLinePaddingStyle),
                    this.layer.addFeatures([this.fractionLinePadding, this.fractionLine])
            }
        },
        onFractionPointDrag: function() {
            return this.fractionLine.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                this.fractionLine.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                this.fractionLinePadding.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                this.fractionLinePadding.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                this.fractionPoint.icon.forceReflow(),
                this.layer.drawFeature(this.fractionLinePadding),
                this.layer.drawFeature(this.fractionLine)
        },
        onFractionPointDragEnd: function() {
            var e = this,
                t = new OL.Geometry.Point(this.fractionPoint.lonlat.lon, this.fractionPoint.lonlat.lat);
            this.selectedNumber.isNew ? this.selectedNumber.model.fractionPoint = t : this.ignoreUpdates(function() {
                var t = new c.default;
                e.model.actionManager.add(t);
                var n = e.houseNumberSets[e.fractionPoint.closestSegment.getID()],
                    i = new d.UpdateFractionPoint(e.selectedNumber.model, n, e.fractionPoint);
                return t.doSubAction(i),
                    e.selectedNumber.model = i.newHouseNumber,
                    t.doSubAction(new u.default(e.selectedNumber.model.parent, e.selectedNumber.model, {
                        forced: !1,
                        valid: !0
                    })),
                    e.selectedNumber.setValid(!0),
                    e.selectedNumber.setForced(!1)
            })
        },
        ignoreUpdates: function(e) {
            this.updating = !0,
                e(),
                this.updating = !1
        },
        unselectNumber: function(e) {
            if (null != e) {
                if (e.dragging.deactivate(),
                    e.setActive(!1),
                    this.selectedNumber = null,
                    this.lightboxView.setLastEditedUser(null),
                    this.fractionPoint && (this.fractionPoint.events.unregister("dragEnd", this, this.onFractionPointDragEnd),
                        this.fractionPoint.events.unregister("drag", this, this.onFractionPointDrag),
                        this.markerLayer.removeMarker(this.fractionPoint)),
                    this.fractionLine && this.layer.destroyFeatures([this.fractionLine, this.fractionLinePadding]),
                    "" === e.input.val()) {
                    if (e.isNew)
                        return this.markerLayer.removeMarker(e);
                    var t = e.input.get(0).valueAsNumber;
                    return isNaN(t) ? e.input.val(e.model.number) : this.model.actionManager.add(new d.DeleteHouseNumber(e.model.parent, e.model))
                }
                return e.isNew ? (e.model.number = e.input.val(),
                    delete e.isNew,
                    this.model.actionManager.add(new d.AddHouseNumber(e.model.parent, e.model))) : void 0
            }
        },
        onAddClicked: function() {
            if (!this.adding && this.enabled && !this.failedLoading) {
                this.adding = !0;
                var e = new o.default({
                        number: "",
                        geometry: new OL.Geometry.Point(0, 0),
                        fractionPoint: new OL.Geometry.Point(0, 0),
                        forced: !1
                    }),
                    t = this.createHouseNumber(e);
                return e.parent = this.houseNumberSets[e.closestSegment.getID()],
                    t.setNew(!0),
                    t.isNew = !0,
                    t.dragging.forceStart(),
                    this.selectNumber(t),
                    t.events.register("click:input", this, this.onAddEnd)
            }
        },
        cancelAdd: function() {
            if (this.adding)
                return this.adding = !1,
                    this.selectedNumber.dragging.forceEnd(),
                    this.unselectNumber(this.selectedNumber)
        },
        onAddEnd: function(e) {
            var t = e.object,
                n = new OL.Geometry.Point(t.lonlat.lon, t.lonlat.lat);
            if (this.editAreas.some(function(e) {
                    return e.geometry.containsPoint(n)
                }))
                return this.adding = !1,
                    t.dragging.forceEnd(),
                    t.model.geometry = n,
                    t.model.fractionPoint = t.model.getFractionFromProjection(),
                    t.model.parent = this.houseNumberSets[t.model.closestSegment.getID()],
                    t.setNew(!1),
                    t.events.unregister("click:input", this, this.onAddEnd),
                    t.focus()
        },
        onMapClick: function(e) {
            if (null != this.selectedNumber)
                return this.unselectNumber(this.selectedNumber)
        },
        activate: function() {
            if (!this.active) {
                if (this.model.actionManager.canRedo()) {
                    if (!confirm(I18n.t("edit.house_numbers.confirm_clear_redo")))
                        return;
                    this.model.actionManager.clear()
                }
                this.active = !0,
                    this._editingLock = W.editingMediator.lockEditing(),
                    W.editingMediator.enterEditingHouseNumbers(),
                    this.map.events.register("click", this, this.onMapClick),
                    this.map.events.register("moveend", this, this.drawFogOfWar),
                    this.map.events.register("zoomend", this, this.onZoomChanged),
                    this.onZoomChanged(),
                    this.model.houseNumbers.on("objectschanged", this.render, this),
                    W.commands.execute("save:setHandler", this.saveChanges, this)
            }
        },
        onDestroy: function() {
            return this.deactivate(),
                this.lightboxView.destroy(),
                this.map.removeLayer(this.layer),
                this.map.removeLayer(this.markerLayer)
        },
        deactivate: function() {
            this.active && (this.active = !1,
                W.editingMediator.releaseEditing(this._editingLock),
                W.editingMediator.exitEditingHouseNumbers(),
                this._editingLock = null,
                this.model.actionManager.clear(),
                this.map.events.unregister("click", this, this.onMapClick),
                this.map.events.unregister("moveend", this, this.drawFogOfWar),
                this.map.events.unregister("zoomend", this, this.onZoomChanged),
                this.model.houseNumbers.off("objectschanged", this.render, this),
                this.reset())
        },
        drawFogOfWar: function() {
            return this.fogOfWar && this.layer.destroyFeatures(this.fogOfWar),
                this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                    fillColor: "black",
                    fillOpacity: .5,
                    strokeWidth: 0,
                    mask: "url(#HNAreaMask)"
                }),
                this.layer.addFeatures(this.fogOfWar),
                this.layer.redraw()
        },
        onSave: function() {
            return this.saveChanges()
        },
        saveChanges: function() {
            var e = this;
            if (!W.editingMediator.get("saving"))
                return this.unselectNumber(this.selectedNumber),
                    this.enabled = !1,
                    this.lightboxView.disable(),
                    this.lightboxView.setLoading(!0),
                    W.editingMediator.set({
                        navigation: !1,
                        saving: !0
                    }),
                    W.controller.save().then(function() {
                        return e.onSaveSuccess()
                    }).catch(function(t) {
                        if (!(t instanceof g.SaveError))
                            throw t;
                        e.onSaveFail(t.errors)
                    }).finally(function() {
                        e.lightboxView.setLoading(!1),
                            W.editingMediator.set({
                                navigation: !0,
                                saving: !1
                            })
                    })
        },
        onSaveFail: function(e) {
            var t = e[0];
            if (t.get("code") === this.HOUSE_NUMBERS_SAVE_ERROR_CODE) {
                if (this.invalidHouseNumbers = t.get("objects"),
                    this.showingForceDialog = !0,
                    this.lightboxView.showForceMessage(),
                    null != this.invalidHouseNumbers)
                    for (var n = 0; n < this.invalidHouseNumbers.length; n++) {
                        var i = this.invalidHouseNumbers[n],
                            r = this.houseNumberSets[i.segID].getNumber(i.id);
                        i.model = r,
                            r.valid = !1,
                            r.invalidCode = i.errorType
                    }
            } else
                this.lightboxView.showSaveErrorMessage();
            return this.render()
        },
        onSaveSuccess: function() {
            return this.enabled = !0,
                this.lightboxView.enable(),
                this.lightboxView.showSuccessMessage(),
                this._setupSegments()
        },
        editingAllowedInZoom: function() {
            return this.map.getZoom() >= W.Config.houseNumbers.minEditZoom
        },
        onZoomChanged: function() {
            return $(this.markerLayer.div).toggleClass("preview", !this.editingAllowedInZoom()),
                this.editingAllowedInZoom() || (this.cancelAdd(),
                    this.unselectNumber(this.selectedNumber)),
                this.lightboxView.render()
        },
        canForcedInvalid: function() {
            return !this.houseNumberSets || (0,
                i.default)(this.houseNumberSets).every(function(e) {
                var t = e.getSegment();
                return null != t && t.canForceHouseNumbers()
            })
        },
        continueEditing: function() {
            return this.enabled = !0,
                this.showingForceDialog = !1,
                this.lightboxView.enable()
        },
        forceInvalid: function() {
            var e = this;
            return this.showingForceDialog = !1,
                _.isEmpty(this.invalidHouseNumbers) || this.ignoreUpdates(function() {
                    var t = new c.default;
                    return e.model.actionManager.add(t),
                        e.invalidHouseNumbers.map(function(e) {
                            return t.doSubAction(new u.default(e.model.parent, e.model, {
                                forced: !0
                            }))
                        })
                }),
                this.saveChanges()
        },
        CLASS_NAME: "W.Control.HouseNumbers"
    });
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(31)),
        r = a(n(125)),
        s = n(43);

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = OL.Class(OL.Marker, {
        model: null,
        input: null,
        ENTER: 13,
        ESC: 27,
        dragging: null,
        hasTooltip: !1,
        initialize: function(e, t, n) {
            var s = this;
            this.map = n,
                this.model = e;
            var a = new i.default("house-number");
            OL.Marker.prototype.initialize.call(this, t, a),
                this.render(),
                this.input = this.icon.$div.find("input"),
                this.inputWrapper = this.icon.$div.find(".input-wrapper"),
                this.icon.$div.find(".input-wrapper, .drag-handle").on("click", function(e) {
                    return s.events.triggerEvent("click:input"),
                        !1
                }),
                this.input.on("click", function() {
                    return s.input.focus()
                }),
                this.input.on("dblclick", function(e) {
                    return e.stopPropagation()
                }),
                this.input.on("mousedown", function(e) {
                    return e.stopPropagation()
                }),
                this.input.on("keyup", function(e) {
                    if (e.which === s.ESC)
                        return e.stopPropagation(),
                            s.input.blur(),
                            s.events.triggerEvent("unselect")
                }),
                this.input.on("change", function() {
                    return s.events.triggerEvent("change:number", {
                        number: s.input.val()
                    })
                }),
                this.inputWrapper.find(".delete-button").on("click", function() {
                    return s.events.triggerEvent("delete")
                });
            for (var o = ["change:number", "delete", "drag", "dragEnd", "unselect", "click:input"], l = 0; l < o.length; l++) {
                var u = o[l];
                this.events.addEventType(u)
            }
            this.dragging = new r.default(this.map),
                this.dragging.move = function(e) {
                    return s.destroyTooltip(),
                        s.lonlat = s.map.getLonLatFromViewPortPx(e.xy),
                        s.layer.drawMarker(s),
                        s.model.geometry.x = s.lonlat.lon,
                        s.model.geometry.y = s.lonlat.lat,
                        s.events.triggerEvent("drag", {
                            xy: e.xy,
                            marker: s
                        })
                },
                this.dragging.done = function(e) {
                    return s.createTooltip(),
                        s.events.triggerEvent("dragEnd", {
                            xy: e ? e.xy : null,
                            marker: s
                        })
                },
                this.createTooltip()
        },
        createTooltip: function() {
            if (!1 === this.model.valid && !this.hasTooltip)
                return this.hasTooltip = !0,
                    this.inputWrapper.tooltip({
                        title: I18n.t("edit.house_numbers.errors")[this.model.invalidCode],
                        placement: "bottom"
                    })
        },
        destroyTooltip: function() {
            this.hasTooltip && this.inputWrapper.tooltip("destroy"),
                this.hasTooltip = !1
        },
        destroy: function() {
            return this.destroyTooltip()
        },
        focus: function() {
            return this.input.focus(),
                this.input.val(this.input.val())
        },
        select: function(e) {
            e.stopPropagation(),
                this.input.focus()
        },
        render: function() {
            return this.icon.$div.html((0,
                s.getHTML)("templates/house-number", this.model))
        },
        setActive: function(e) {
            return this.icon.$div.find(".content").toggleClass("active", e)
        },
        setNew: function(e) {
            return this.icon.$div.find(".content").toggleClass("new", e)
        },
        setValid: function(e) {
            e && this.destroyTooltip();
            var t = this.icon.$div.find(".content");
            return t.removeClass("valid-" + !e),
                t.addClass("valid-" + e)
        },
        setForced: function(e) {
            var t = this.icon.$div.find(".content");
            return t.removeClass("forced-" + !e),
                t.addClass("forced-" + e)
        },
        updateSide: function() {
            return this.inputWrapper.toggleClass("side-left", this.model.isLeft)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(16));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .continue-editing": "onContinueEditingClicked",
                        "click .force-invalid": "onForceInvalidClicked"
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.model = e.model,
                        this.pm = e.pm,
                        this.address = e.address,
                        this.loadingAnimation = null,
                        this.toolbar = null,
                        this.disabled = !1,
                        this.registerEvents()
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        address: this.address.format(),
                        pm: this.pm
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    if (this.toolbar = this.$el.find(".toolbar"),
                        this.loadingAnimation = this.$el.find(".loading-animation"),
                        this.zoomMessage = this.$el.find(".zoom-message"),
                        this.lastEditedUsername = this.$el.find(".last-edited"),
                        null !== this.pm.selectedNumber ? this.setLastEditedUser(this.pm.selectedNumber.model.updatedBy) : this.setLastEditedUser(null),
                        this.pm.showingForceDialog)
                        return this.showForceMessage()
                }
            }, {
                key: "registerEvents",
                value: function() {
                    var e = this;
                    return this.model.actionManager.events.on({
                            afteraction: this.render,
                            afterundoaction: this.render,
                            afterclearactions: this.render,
                            scope: this
                        }),
                        W.accelerators.events.register("editHouseNumbers", this, this.addHouseNumbersShortcutClicked),
                        W.accelerators.events.register("exitHouseNumbers", this, this.exitHouseNumbersClicked),
                        $(document).on("keyup.house-numbers-lightbox", function(t) {
                            if (27 === t.which)
                                return e.confirmClose()
                        })
                }
            }, {
                key: "unregisterEvents",
                value: function() {
                    return this.model.actionManager.events.un({
                            afteraction: this.render,
                            afterundoaction: this.render,
                            afterclearactions: this.render,
                            scope: this
                        }),
                        W.accelerators.events.unregister("editHouseNumbers", this, this.addHouseNumbersShortcutClicked),
                        W.accelerators.events.unregister("exitHouseNumbers", this, this.exitHouseNumbersClicked),
                        $(document).off("keyup.house-numbers-lightbox")
                }
            }, {
                key: "saveClicked",
                value: function() {
                    return this.onSave()
                }
            }, {
                key: "addHouseNumbersShortcutClicked",
                value: function(e) {
                    return this.onAdd()
                }
            }, {
                key: "exitHouseNumbersClicked",
                value: function(e) {
                    this.confirmClose()
                }
            }, {
                key: "confirmClose",
                value: function() {
                    var e = !0;
                    if (this.model.actionManager.canSave() && (e = window.confirm(I18n.t("edit.unsaved_changes"))),
                        e)
                        return this.destroy()
                }
            }, {
                key: "onDestroy",
                value: function() {
                    this.unregisterEvents()
                }
            }, {
                key: "onSave",
                value: function() {}
            }, {
                key: "onAdd",
                value: function() {}
            }, {
                key: "setLoading",
                value: function(e) {
                    return this.toolbar.toggle(!e),
                        this.loadingAnimation.toggle(e)
                }
            }, {
                key: "showSuccessMessage",
                value: function() {
                    return this.$el.find(".success-message").fadeIn().delay(3e3).fadeOut()
                }
            }, {
                key: "showErrorMessage",
                value: function() {
                    return this.$el.find(".error-message").show()
                }
            }, {
                key: "showSaveErrorMessage",
                value: function() {
                    return this.$el.find(".save-error-message").show()
                }
            }, {
                key: "showForceMessage",
                value: function() {
                    return this.$el.find(".force-message").show()
                }
            }, {
                key: "setLastEditedUser",
                value: function(e) {
                    e ? (this.lastEditedUsername.show(),
                        this.lastEditedUsername.find(".username").text(l.default.formatUserName(e))) : this.lastEditedUsername.hide()
                }
            }, {
                key: "disable",
                value: function() {
                    return this.disabled = !0,
                        this.render()
                }
            }, {
                key: "enable",
                value: function() {
                    return this.disabled = !1,
                        this.render()
                }
            }, {
                key: "onForceInvalidClicked",
                value: function() {
                    return this.pm.forceInvalid()
                }
            }, {
                key: "onContinueEditingClicked",
                value: function() {
                    return this.pm.continueEditing()
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/house-numbers-lightbox"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(31)),
        r = s(n(125));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OL.Class(OL.Marker, {
        dragging: null,
        dragConstraint: null,
        closestSegment: null,
        initialize: function(e, t, n) {
            var s = this;
            this.map = n;
            var a = new i.default("fraction-point");
            OL.Marker.prototype.initialize.call(this, e, a),
                this.dragConstraint = t;
            for (var o = ["drag", "dragEnd"], l = 0; l < o.length; l++) {
                var u = o[l];
                this.events.addEventType(u)
            }
            this.dragging = new r.default(this.map),
                this.dragging.down = function(e) {
                    return s.icon.$div.addClass("dragging")
                },
                this.dragging.move = function(t) {
                    e = s.map.getLonLatFromViewPortPx(t.xy);
                    var n = s.dragConstraint.distanceTo(new OL.Geometry.Point(e.lon, e.lat), {
                        details: !0
                    });
                    return s.lonlat = new OL.LonLat(n.x0, n.y0),
                        s.closestSegment = n.model,
                        s.layer.drawMarker(s),
                        s.events.triggerEvent("drag", {
                            xy: t.xy,
                            marker: s
                        })
                },
                this.dragging.done = function(e) {
                    return s.icon.$div.removeClass("dragging"),
                        s.events.triggerEvent("dragEnd", {
                            xy: e ? e.xy : null,
                            marker: s
                        })
                },
                this.icon.$div.on("click", function() {
                    return !1
                })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = m(n(2)),
        r = m(n(0)),
        s = m(n(1)),
        a = m(n(3)),
        o = m(n(4)),
        l = m(n(22)),
        u = n(47),
        d = m(u),
        c = m(n(1355)),
        h = m(n(427)),
        f = m(n(1356)),
        p = n(118),
        g = n(206),
        v = m(n(1359));

    function m(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var _ = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        contentRegion: {
                            el: ".modal-content",
                            regionClass: g.DialogContentRegion,
                            onEscapeKeydown: this._onEscapeKeydown.bind(this)
                        }
                    }
                }
            }, {
                key: "_onEscapeKeydown",
                value: function(e) {
                    if (this.getChildView("contentRegion") instanceof h.default)
                        return e.preventDefault(),
                            this._showSummaryView(),
                            !1
                }
            }, {
                key: "initialize",
                value: function(e) {
                    var t = e.compositeSegment,
                        n = t.children[0];
                    this._dataModel = e.dataModel,
                        this._segments = t.children,
                        this._canEditRestrictions = t.allowRestrictionEditing(),
                        this._viewHelpers = new p.SegmentRestrictionViewHelpers({
                            segment: n,
                            dataModel: this._dataModel
                        }),
                        this._drivingRestrictionsBuilder = new c.default({
                            segments: this._segments,
                            getRestrictions: function(e) {
                                return e.getDrivingRestrictions()
                            }
                        }),
                        this._pickupRestrictionsBuilder = new c.default({
                            segments: this._segments,
                            getRestrictions: function(e) {
                                return e.getPickupRestrictions()
                            }
                        }),
                        this._tollRoadModel = new Backbone.Model({
                            isTollRoad: e.isTollRoad,
                            isTollRoadMixed: e.isTollRoadMixed,
                            hasTollRestriction: this._drivingRestrictionsBuilder.hasTollRestriction()
                        }),
                        this._showRestrictionType = e.showRestrictionType
                }
            }, {
                key: "onRender",
                value: function() {
                    this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionItemEdit",
                value: function(e) {
                    this._showEditView({
                        restriction: e,
                        isNewRestriction: !1
                    })
                }
            }, {
                key: "onChildviewRestrictionItemDelete",
                value: function(e) {
                    this._drivingRestrictionsBuilder.deleteRestriction(e),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionItemApplyToAll",
                value: function(e) {
                    this._drivingRestrictionsBuilder.addRestriction(e),
                        e.isTollFreeModality() && this._tollRoadModel.set({
                            isTollRoad: !1,
                            isTollRoadMixed: !1
                        }),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionEditCancel",
                value: function() {
                    this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionEditUpdate",
                value: function(e, t) {
                    this._drivingRestrictionsBuilder.updateRestriction(e, t),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionEditCreate",
                value: function(e) {
                    this._drivingRestrictionsBuilder.addRestriction(e),
                        this._showSummaryView()
                }
            }, {
                key: "onChildviewRestrictionSummaryClose",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "onChildviewRestrictionSummaryCreate",
                value: function(e) {
                    this._showCreateSegmentsRestrictionView({
                        direction: e.direction
                    })
                }
            }, {
                key: "onChildviewRestrictionSummaryApply",
                value: function() {
                    this.trigger("restriction:summary:apply", {
                            isTollRoad: this._tollRoadModel.attributes.isTollRoad
                        }),
                        this._applyChanges(),
                        this.destroy()
                }
            }, {
                key: "_shouldShowPickupRestrictions",
                value: function() {
                    return this.options.compositeSegment.supportsPickupRestrictions()
                }
            }, {
                key: "_showSummaryView",
                value: function() {
                    this._tollRoadModel.set({
                            hasTollRestriction: this._drivingRestrictionsBuilder.hasTollRestriction()
                        }),
                        this.showChildView("contentRegion", new f.default({
                            viewHelpers: this._viewHelpers,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            drivingRestrictionsBuilder: this._drivingRestrictionsBuilder,
                            pickupRestrictionsBuilder: this._pickupRestrictionsBuilder,
                            canEditRestrictions: this._canEditRestrictions,
                            tollRoadModel: this._tollRoadModel,
                            enablePickupRestrictions: this._shouldShowPickupRestrictions(),
                            showRestrictionType: this._showRestrictionType
                        }))
                }
            }, {
                key: "_showEditView",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.restriction,
                        n = e.isNewRestriction,
                        i = void 0 !== n && n;
                    this.showChildView("contentRegion", new h.default({
                        restriction: t,
                        isNewRestriction: i,
                        canEditRestrictions: this._canEditRestrictions,
                        canAddTollRestriction: !this._tollRoadModel.attributes.isTollRoad,
                        subscriptions: this._dataModel.getRestrictionSubscriptions(),
                        editingTitle: this._viewHelpers.getEditingDrivingTitle(t)
                    }))
                }
            }, {
                key: "_showCreateSegmentsRestrictionView",
                value: function() {
                    var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).direction,
                        t = void 0 === e ? u.RESTRICTION_SEGMENT_DIRECTION.FWD : e,
                        n = new d.default({
                            direction: t
                        });
                    this._showEditView({
                        restriction: n,
                        isNewRestriction: !0
                    })
                }
            }, {
                key: "_applyChanges",
                value: function() {
                    var e = this,
                        t = this.options.compositeSegment,
                        n = t.isTollRoad(),
                        i = t.isTollRoadMixed(),
                        r = this._tollRoadModel.attributes.isTollRoad,
                        s = this._tollRoadModel.attributes.isTollRoadMixed,
                        a = new v.default(this._segments.map(function(t) {
                            var a = {
                                restrictions: e._drivingRestrictionsBuilder.getRestrictions(t.getID())
                            };
                            return e._shouldShowPickupRestrictions() && (a.pickupRestrictions = e._pickupRestrictionsBuilder.getRestrictions(t.getID())),
                                i === s && n === r || (a.fwdToll = r,
                                    a.revToll = r),
                                new l.default(t, a)
                        }));
                    this._dataModel.actionManager.add(a)
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main"
                }
            }]),
            t
    }(Marionette.View);
    t.default = _,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(9)),
        r = u(n(7)),
        s = u(n(0)),
        a = u(n(1)),
        o = u(n(217)),
        l = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(195));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                n = t.segments,
                i = void 0 === n ? [] : n,
                r = t.getRestrictions,
                a = void 0 === r ? function() {
                    return []
                } :
                r;
            (0,
                s.default)(this, e),
            this._reversedSegmentsIDs = o.default.getReversedSegments(i),
                this._segmentIDs = i.map(function(e) {
                    return e.getID()
                }),
                this._restrictionsBySegmentID = i.reduce(function(e, t) {
                    return e[t.getID()] = a(t),
                        e
                }, {})
        }
        return (0,
                a.default)(e, [{
                key: "hasMultipleSegments",
                value: function() {
                    return (0,
                        r.default)(this._segmentIDs).length > 1
                }
            }, {
                key: "hasTollRestriction",
                value: function() {
                    var e = this;
                    return this._segmentIDs.some(function(t) {
                        return e.getRestrictions(t).some(function(e) {
                            return e.isTollFreeModality()
                        })
                    })
                }
            }, {
                key: "appliesToAllSegments",
                value: function(e) {
                    var t = this;
                    return this._segmentIDs.every(function(n) {
                        return t.getRestrictions(n).some(function(i) {
                            return t._withCorrectDirection(n, i).equals(e)
                        })
                    })
                }
            }, {
                key: "_addRestrictionToSegment",
                value: function(e, t) {
                    var n = this.getRestrictions(t),
                        i = this._withCorrectDirection(t, e);
                    n.some(function(e) {
                        return e.equals(i)
                    }) || n.push(i)
                }
            }, {
                key: "_updateRestrictionInSegment",
                value: function(e, t, n) {
                    var i = this,
                        r = this.getRestrictions(n),
                        s = _.findIndex(r, function(t) {
                            return t.equals(i._withCorrectDirection(n, e))
                        }),
                        a = this._withCorrectDirection(n, t);
                    return s > -1 && (r.splice(s, 1, a),
                        !0)
                }
            }, {
                key: "addRestriction",
                value: function(e) {
                    var t = this;
                    this._segmentIDs.forEach(function(n) {
                        t._addRestrictionToSegment(e, n)
                    })
                }
            }, {
                key: "updateRestriction",
                value: function(e, t) {
                    var n = this;
                    this._segmentIDs.forEach(function(i) {
                        n._updateRestrictionInSegment(e, t, i)
                    })
                }
            }, {
                key: "deleteRestriction",
                value: function(e) {
                    this.deleteRestrictionsIf(function(t) {
                        return t.equals(e)
                    })
                }
            }, {
                key: "deleteRestrictionsIf",
                value: function(e) {
                    var t = this;
                    this._segmentIDs.forEach(function(n) {
                        var i = t.getRestrictions(n);
                        t._setRestrictions(n, _.reject(i, function(i) {
                            return e(t._withCorrectDirection(n, i))
                        }))
                    })
                }
            }, {
                key: "getRestrictions",
                value: function(e) {
                    return this._restrictionsBySegmentID[e]
                }
            }, {
                key: "_setRestrictions",
                value: function(e, t) {
                    this._restrictionsBySegmentID[e] = t
                }
            }, {
                key: "getForwardRestrictions",
                value: function() {
                    var e, t = this,
                        n = (e = []).concat.apply(e, (0,
                            i.default)(this._segmentIDs.map(function(e) {
                            return t._getForwardRestrictions(e)
                        })));
                    return l.dedupRestrictions(n)
                }
            }, {
                key: "getReverseRestrictions",
                value: function() {
                    var e, t = this,
                        n = (e = []).concat.apply(e, (0,
                            i.default)(this._segmentIDs.map(function(e) {
                            return t._getReverseRestrictions(e)
                        })));
                    return l.dedupRestrictions(n)
                }
            }, {
                key: "getBidiRestrictions",
                value: function() {
                    var e, t = this,
                        n = (e = []).concat.apply(e, (0,
                            i.default)(this._segmentIDs.map(function(e) {
                            return t._getBidiRestrictions(e)
                        })));
                    return l.dedupRestrictions(n)
                }
            }, {
                key: "_getForwardRestrictions",
                value: function(e) {
                    var t = this;
                    return this.getRestrictions(e).map(function(n) {
                        return t._withCorrectDirection(e, n)
                    }).filter(function(e) {
                        return e.isForward()
                    })
                }
            }, {
                key: "_getReverseRestrictions",
                value: function(e) {
                    var t = this;
                    return this.getRestrictions(e).map(function(n) {
                        return t._withCorrectDirection(e, n)
                    }).filter(function(e) {
                        return e.isReverse()
                    })
                }
            }, {
                key: "_getBidiRestrictions",
                value: function(e) {
                    return this.getRestrictions(e).filter(function(e) {
                        return e.isBidi()
                    })
                }
            }, {
                key: "_isReversed",
                value: function(e) {
                    return !0 === this._reversedSegmentsIDs[e]
                }
            }, {
                key: "_withCorrectDirection",
                value: function(e, t) {
                    return this._isReversed(e) ? t.withReverseDirection() : t
                }
            }]),
            e
    }();
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(10)),
        r = h(n(6)),
        s = h(n(2)),
        a = h(n(0)),
        o = h(n(1)),
        l = h(n(3)),
        u = h(n(4)),
        d = n(1357),
        c = n(1358);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t() {
            return (0,
                    a.default)(this, t),
                (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).apply(this, arguments))
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "className",
                value: function() {
                    return "restrictions-summary restrictions-summary-segment"
                }
            }, {
                key: "regions",
                value: function() {
                    var e = {
                        drivingRegion: "#driving-restrictions"
                    };
                    return this.options.enablePickupRestrictions && (e.pickupRegion = "#pickup-restrictions"),
                        e
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        drivingTab: ".restriction-tabs a[href='#driving-restrictions']",
                        pickupTab: ".restriction-tabs a[href='#pickup-restrictions']"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".driving-controls": {
                            observe: "currentTab",
                            onGet: function(e) {
                                return "driving" === e
                            },
                            visible: !0
                        }
                    }
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        enablePickupRestrictions: this.options.enablePickupRestrictions
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    var t = e,
                        n = t.drivingRestrictionsBuilder,
                        i = t.pickupRestrictionsBuilder;
                    e = _.omit(e, "drivingRestrictionsBuilder", "pickupRestrictionsBuilder"),
                        this._canEditRestrictions = e.canEditRestrictions,
                        this._showRestrictionType = e.showRestrictionType,
                        this._drivingView = new d.SegmentRestrictionDrivingView((0,
                            r.default)({}, e, {
                            restrictionBuilder: n
                        })),
                        this._pickupView = (0,
                            c.createPickupView)((0,
                            r.default)({}, e, {
                            restrictionBuilder: i
                        })),
                        this.model = new Backbone.Model({
                            canEditRestrictions: this._canEditRestrictions,
                            editingMultipleSegments: n.hasMultipleSegments(),
                            currentTab: "driving"
                        }),
                        this._tollRoadModel = e.tollRoadModel
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        "restriction:summary:create": "restriction:summary:create",
                        "restriction:item:edit": "restriction:item:edit",
                        "restriction:item:delete": "restriction:item:delete"
                    }
                }
            }, {
                key: "_showDrivingTab",
                value: function() {
                    this.ui.drivingTab.tab("show")
                }
            }, {
                key: "_showPickupTab",
                value: function() {
                    this.ui.pickupTab.tab("show")
                }
            }, {
                key: "triggers",
                value: function() {
                    return {
                        "click .do-close": "restriction:summary:close"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .do-apply": "_onApplyChanges",
                        "shown.bs.tab @ui.drivingTab": "_onDrivingTabShown",
                        "shown.bs.tab @ui.pickupTab": "_onPickupTabShown"
                    }
                }
            }, {
                key: "_onApplyChanges",
                value: function() {
                    this.triggerMethod("restriction:summary:apply", {})
                }
            }, {
                key: "_onDrivingTabShown",
                value: function() {
                    this.model.set({
                        currentTab: "driving"
                    })
                }
            }, {
                key: "_onPickupTabShown",
                value: function() {
                    this.model.set({
                        currentTab: "pickup"
                    })
                }
            }, {
                key: "onRender",
                value: function() {
                    this.showChildView("drivingRegion", this._drivingView),
                        this.options.enablePickupRestrictions && this.showChildView("pickupRegion", this._pickupView),
                        this.stickit(),
                        this.stickit(this._tollRoadModel, this.tollRoadBindings)
                }
            }, {
                key: "onChildviewRestrictionItemApplyToAll",
                value: function(e) {
                    this.triggerMethod("restriction:item:applyToAll", e)
                }
            }, {
                key: "onAttach",
                value: function() {
                    switch (this._showRestrictionType) {
                        case "driving":
                            this._showDrivingTab();
                            break;
                        case "pickup":
                            this._showPickupTab()
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_segments"
                }
            }, {
                key: "tollRoadBindings",
                get: function() {
                    return {
                        ".toll-road-tooltip": {
                            observe: "hasTollRestriction",
                            visible: !0
                        },
                        "[name=tollRoad]": {
                            observe: ["isTollRoad", "isTollRoadMixed"],
                            onGet: function(e) {
                                var t = (0,
                                        i.default)(e, 2),
                                    n = t[0],
                                    r = t[1];
                                return n && !r
                            },
                            onSet: function(e) {
                                return [e, !1]
                            },
                            attributes: [{
                                name: "disabled",
                                observe: "hasTollRestriction"
                            }, {
                                name: "mixed",
                                observe: "isTollRoadMixed"
                            }]
                        }
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.SegmentRestrictionDrivingView = void 0;
    var i = c(n(10)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(428)),
        d = n(47);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "className",
                value: function() {
                    return "restrictions-summary restrictions-summary-segment"
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".do-create, .do-apply": {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditRestrictions",
                                onGet: function(e) {
                                    return !e
                                }
                            }]
                        },
                        ".forward-restrictions-summary .restrictions-all-list-region ": {
                            observe: "hasFwdAll",
                            visible: !0
                        },
                        ".forward-restrictions-summary .restrictions-some-list-region ": {
                            observe: "hasFwdSome",
                            visible: !0
                        },
                        ".reverse-restrictions-summary .restrictions-all-list-region ": {
                            observe: "hasRevAll",
                            visible: !0
                        },
                        ".reverse-restrictions-summary .restrictions-some-list-region ": {
                            observe: "hasRevSome",
                            visible: !0
                        },
                        ".bidi-restrictions-summary .restrictions-all-list-region ": {
                            observe: "hasBidiAll",
                            visible: !0
                        },
                        ".bidi-restrictions-summary .restrictions-some-list-region ": {
                            observe: "hasBidiSome",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        forwardAllListRegion: {
                            el: ".forward-restrictions-summary .restrictions-all-list-region tbody",
                            replaceElement: !0
                        },
                        forwardSomeListRegion: {
                            el: ".forward-restrictions-summary .restrictions-some-list-region tbody",
                            replaceElement: !0
                        },
                        reverseAllListRegion: {
                            el: ".reverse-restrictions-summary .restrictions-all-list-region tbody",
                            replaceElement: !0
                        },
                        reverseSomeListRegion: {
                            el: ".reverse-restrictions-summary .restrictions-some-list-region tbody",
                            replaceElement: !0
                        },
                        bidiAllListRegion: {
                            el: ".bidi-restrictions-summary .restrictions-all-list-region tbody",
                            replaceElement: !0
                        },
                        bidiSomeListRegion: {
                            el: ".bidi-restrictions-summary .restrictions-some-list-region tbody",
                            replaceElement: !0
                        }
                    }
                }
            }, {
                key: "events",
                value: function() {
                    var e = this;
                    return {
                        "click .forward-restrictions-summary .do-create": function() {
                            return e._onCreateRestriction(d.RESTRICTION_SEGMENT_DIRECTION.FWD)
                        },
                        "click .reverse-restrictions-summary .do-create": function() {
                            return e._onCreateRestriction(d.RESTRICTION_SEGMENT_DIRECTION.REV)
                        },
                        "click .bidi-restrictions-summary .do-create": function() {
                            return e._onCreateRestriction(d.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        viewHelpers: null,
                        restrictionBuilder: null,
                        canEditRestrictions: !1,
                        subscriptions: {},
                        tollRoadModel: null
                    };
                    this._viewHelpers = e.viewHelpers,
                        this._restrictionsBuilder = e.restrictionBuilder,
                        this._canEditRestrictions = e.canEditRestrictions,
                        this._subscriptions = e.subscriptions;
                    var t = _.partition(this._restrictionsBuilder.getForwardRestrictions(), this._appliesToAll.bind(this)),
                        n = (0,
                            i.default)(t, 2);
                    this._fwdAll = n[0],
                        this._fwdSome = n[1];
                    var r = _.partition(this._restrictionsBuilder.getReverseRestrictions(), this._appliesToAll.bind(this)),
                        s = (0,
                            i.default)(r, 2);
                    this._revAll = s[0],
                        this._revSome = s[1];
                    var a = _.partition(this._restrictionsBuilder.getBidiRestrictions(), this._appliesToAll.bind(this)),
                        o = (0,
                            i.default)(a, 2);
                    this._bidiAll = o[0],
                        this._bidiSome = o[1],
                        this.model = new Backbone.Model({
                            canEditRestrictions: this._canEditRestrictions,
                            hasFwdAll: this._fwdAll.length > 0,
                            hasFwdSome: this._fwdSome.length > 0,
                            hasRevAll: this._revAll.length > 0,
                            hasRevSome: this._revSome.length > 0,
                            hasBidiAll: this._bidiAll.length > 0,
                            hasBidiSome: this._bidiSome.length > 0
                        })
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        forwardTitle: this._viewHelpers.getDrivingRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.FWD),
                        reverseTitle: this._viewHelpers.getDrivingRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.REV),
                        bidiTitle: this._viewHelpers.getDrivingRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this.$(".waze-tooltip").tooltip(),
                        this.showChildView("forwardAllListRegion", this._createListView(this._fwdAll)),
                        this.showChildView("forwardSomeListRegion", this._createListView(this._fwdSome, !0)),
                        this.showChildView("reverseAllListRegion", this._createListView(this._revAll)),
                        this.showChildView("reverseSomeListRegion", this._createListView(this._revSome, !0)),
                        this.showChildView("bidiAllListRegion", this._createListView(this._bidiAll)),
                        this.showChildView("bidiSomeListRegion", this._createListView(this._bidiSome, !0))
                }
            }, {
                key: "_createListView",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    return new u.default({
                        restrictions: e,
                        canApplyToAll: t,
                        subscriptions: this._subscriptions,
                        canEditRestrictions: this._canEditRestrictions
                    })
                }
            }, {
                key: "_onCreateRestriction",
                value: function(e) {
                    this.triggerMethod("restriction:summary:create", {
                        direction: e
                    })
                }
            }, {
                key: "onChildviewItemEdit",
                value: function(e) {
                    this.triggerMethod("restriction:item:edit", e.getRestriction())
                }
            }, {
                key: "onChildviewItemDelete",
                value: function(e) {
                    this.triggerMethod("restriction:item:delete", e.getRestriction())
                }
            }, {
                key: "onChildviewItemApplyToAll",
                value: function(e) {
                    this.triggerMethod("restriction:item:applyToAll", e.getRestriction())
                }
            }, {
                key: "_appliesToAll",
                value: function(e) {
                    return this._restrictionsBuilder.appliesToAllSegments(e)
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_driving_segments"
                }
            }]),
            t
    }(Marionette.View);
    t.SegmentRestrictionDrivingView = h
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.createPickupView = void 0;
    var i = c(n(6)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(1)),
        o = c(n(3)),
        l = c(n(4)),
        u = c(n(192)),
        d = n(47);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = {
        MULTIPLE: 0,
        UNKNOWN: 1,
        ALLOWED: 2,
        NOT_ALLOWED: 3
    };

    function f(e, t) {
        if (0 === t.length)
            return h.UNKNOWN;
        if (t.every(function(t) {
                return e.appliesToAllSegments(t)
            })) {
            if (t.every(function(e) {
                    return e.isAllowed()
                }))
                return h.ALLOWED;
            if (t.every(function(e) {
                    return e.isNotAllowed()
                }))
                return h.NOT_ALLOWED
        }
        return h.MULTIPLE
    }
    var p = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        viewHelpers: null,
                        restrictionBuilder: null
                    };
                    this._restrictionsBuilder = e.restrictionBuilder,
                        this._viewHelpers = e.viewHelpers,
                        this._forwardPickupConstraints = this._getPickupConstraints(this.model.get("forwardConstraint") !== h.MULTIPLE),
                        this._reversePickupConstraints = this._getPickupConstraints(this.model.get("reverseConstraint") !== h.MULTIPLE)
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".constraint-select-fwd": {
                            observe: "forwardConstraint",
                            selectOptions: {
                                collection: this._forwardPickupConstraints
                            }
                        },
                        ".constraint-select-rev": {
                            observe: "reverseConstraint",
                            selectOptions: {
                                collection: this._reversePickupConstraints
                            }
                        }
                    }
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        forwardTitle: this._viewHelpers.getPickupTitle(d.RESTRICTION_SEGMENT_DIRECTION.FWD),
                        reverseTitle: this._viewHelpers.getPickupTitle(d.RESTRICTION_SEGMENT_DIRECTION.REV)
                    }
                }
            }, {
                key: "modelEvents",
                value: function() {
                    return {
                        "change:forwardConstraint": "_onFwdConstraintChange",
                        "change:reverseConstraint": "_onRevConstraintChange"
                    }
                }
            }, {
                key: "_pickupRestrictionForConstraint",
                value: function(e, t) {
                    return t === h.UNKNOWN ? null : new u.default({
                        direction: e,
                        defaultType: {
                            allowed: t === h.ALLOWED
                        }
                    })
                }
            }, {
                key: "_onFwdConstraintChange",
                value: function(e, t) {
                    this._onConstraintChange("forwardConstraint", d.RESTRICTION_SEGMENT_DIRECTION.FWD, e, t)
                }
            }, {
                key: "_onRevConstraintChange",
                value: function(e, t) {
                    this._onConstraintChange("reverseConstraint", d.RESTRICTION_SEGMENT_DIRECTION.REV, e, t)
                }
            }, {
                key: "_onConstraintChange",
                value: function(e, t, n, i) {
                    t === d.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._restrictionsBuilder.deleteRestrictionsIf(function(e) {
                        return e.isForward()
                    }) : t === d.RESTRICTION_SEGMENT_DIRECTION.REV && this._restrictionsBuilder.deleteRestrictionsIf(function(e) {
                        return e.isReverse()
                    });
                    var r = this._pickupRestrictionForConstraint(t, i);
                    r && this._restrictionsBuilder.addRestriction(r)
                }
            }, {
                key: "_getPickupConstraints",
                value: function(e) {
                    var t = [{
                        value: h.UNKNOWN,
                        label: I18n.t("restrictions.editing.pickup.unknown")
                    }, {
                        value: h.ALLOWED,
                        label: I18n.t("restrictions.editing.pickup.allowed")
                    }, {
                        value: h.NOT_ALLOWED,
                        label: I18n.t("restrictions.editing.pickup.not_allowed")
                    }];
                    return e || t.push({
                            value: h.MULTIPLE,
                            label: I18n.t("restrictions.editing.pickup.multiple"),
                            disabled: !0
                        }),
                        t
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_pickup"
                }
            }]),
            t
    }(Marionette.View);
    t.default = p,
        t.createPickupView = function(e) {
            var t = f(e.restrictionBuilder, e.restrictionBuilder.getForwardRestrictions()),
                n = f(e.restrictionBuilder, e.restrictionBuilder.getReverseRestrictions());
            return new p((0,
                i.default)({
                model: new Backbone.Model({
                    forwardConstraint: t,
                    reverseConstraint: n
                })
            }, e))
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "generateDescription",
                value: function() {
                    if (1 === this.subActions.length) {
                        var e = this.subActions[0];
                        e.generateDescription(),
                            this._description = e.getDescription()
                    } else
                        this._description = I18n.t("save.changes_log.actions.UpdateSegmentsRestrictions.multi_segments", {
                            count: this.subActions.length
                        })
                }
            }]),
            t
    }(l(n(74)).default);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(2)),
        r = d(n(0)),
        s = d(n(1)),
        a = d(n(3)),
        o = d(n(4)),
        l = d(n(1361)),
        u = n(71);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e) {
            var n = e.dataModel,
                s = e.segmentId;
            (0,
                r.default)(this, t);
            var o = (0,
                a.default)(this, (t.__proto__ || (0,
                i.default)(t)).apply(this, arguments));
            return o._segmentId = s,
                o._dataModel = n,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        fwdLanesRegion: ".fwd-lanes",
                        revLanesRegion: ".rev-lanes"
                    }
                }
            }, {
                key: "_showForwardView",
                value: function() {
                    var e = this._dataModel.segments.getObjectById(this._segmentId);
                    e.supportsFwdLanes() && this.showChildView("fwdLanesRegion", this._createDirectionView(e, u.SEGMENT_LANE_DIRECTION.FWD))
                }
            }, {
                key: "_showReverseView",
                value: function() {
                    var e = this._dataModel.segments.getObjectById(this._segmentId);
                    e.supportsRevLanes() && this.showChildView("revLanesRegion", this._createDirectionView(e, u.SEGMENT_LANE_DIRECTION.REV))
                }
            }, {
                key: "_createDirectionView",
                value: function(e, t) {
                    return new l.default({
                        dataModel: this._dataModel,
                        segmentID: e.getID(),
                        direction: t
                    })
                }
            }, {
                key: "onRender",
                value: function() {
                    this._showForwardView(),
                        this._showReverseView()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/segment_lanes"
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(6)),
        r = v(n(2)),
        s = v(n(0)),
        a = v(n(1)),
        o = v(n(3)),
        l = v(n(4)),
        u = v(n(445)),
        d = v(n(1363)),
        c = n(32),
        h = n(71),
        f = v(h),
        p = n(109),
        g = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t(e) {
            var n = e.dataModel,
                a = e.segmentID,
                l = e.direction;
            (0,
                s.default)(this, t);
            var u = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).apply(this, arguments));
            u._dataModel = n,
                u._segmentID = a,
                u._direction = l,
                u._drawingContext = W.map.getDrawingContext();
            var d = n.segments.getObjectById(a),
                h = u._getSegmentLanes(d);
            u.model = new Backbone.Model((0,
                    i.default)({}, u._getViewModelAttributes(h), {
                    lanes: new Backbone.Collection(u._getLaneModels(h))
                })),
                u.listenTo(u.model, "change:isComplete", u._onIsCompleteChange);
            var f = n.getTurnGraph();
            return u.listenTo(f, p.CHANGE_EVENT, u._onTurnGraphChanged),
                u.listenTo(n.segments, c.CHANGED, u._onSegmentChanged),
                u.listenTo(n.segments, c.CHANGED_ID, u._onSegmentChangedID),
                u
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        arrowRegion: ".lane-arrows",
                        editRegion: ".edit-region"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .edit-lane-guidance": "_editLaneGuidance"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".lane-instruction-from .instruction .heading": {
                            observe: "heading",
                            onGet: function(e) {
                                return I18n.t("lanes.instruction", {
                                    heading: I18n.t("segment.heading")[e]
                                })
                            }
                        },
                        ".lane-instruction-from .instruction .street-name": {
                            observe: "streetName"
                        },
                        ".lane-edit": {
                            observe: "editable",
                            visible: !0
                        },
                        ".edit-lane-guidance": "editTitle",
                        ".lane-arrows": {
                            visible: !0,
                            observe: "laneCount",
                            onGet: function(e) {
                                return e > 0
                            }
                        },
                        ".lane-instruction-from .letter-circle": {
                            observe: "direction",
                            onGet: function(e) {
                                return e === h.SEGMENT_LANE_DIRECTION.FWD ? "A" : "B"
                            }
                        },
                        ".lane-instruction-to .letter-circle": {
                            observe: "direction",
                            onGet: function(e) {
                                return e === h.SEGMENT_LANE_DIRECTION.FWD ? "B" : "A"
                            }
                        },
                        ".uncovered-turn-badge": {
                            visible: !0,
                            observe: "showUncoveredTurnBadge"
                        }
                    }
                }
            }, {
                key: "_getEditTitle",
                value: function(e, t) {
                    return t ? "" : e > 0 ? I18n.t("lanes.edit_lanes") : I18n.t("lanes.add_lanes")
                }
            }, {
                key: "_getLaneModels",
                value: function(e) {
                    return e.getLanes().map(function(t) {
                        return new Backbone.Model({
                            angles: t.getAngles(),
                            isComplete: e.isComplete()
                        })
                    })
                }
            }, {
                key: "_getViewModelAttributes",
                value: function(e) {
                    var t = e.getSegment(),
                        n = e.getDirection(),
                        i = e.getLaneCount(),
                        r = e.getNode();
                    return {
                        direction: n,
                        heading: n === h.SEGMENT_LANE_DIRECTION.FWD ? t.getFwdHeading() : t.getRevHeading(),
                        streetName: t.getAddress().getStreetName(),
                        laneCount: i,
                        showUncoveredTurnBadge: !e.isEmpty() && !e.allTurnsCovered(),
                        editable: t.arePropertiesEditable(),
                        segmentID: t.getID(),
                        editing: !1,
                        editTitle: this._getEditTitle(i, !1),
                        isComplete: e.isComplete(),
                        nodeX: null != r ? r.geometry.x : null,
                        nodeY: null != r ? r.geometry.y : null
                    }
                }
            }, {
                key: "_editLaneGuidance",
                value: function() {
                    var e = this.model.attributes.laneCount;
                    this.model.set({
                            editTitle: this._getEditTitle(e, !0)
                        }),
                        this.showChildView("editRegion", new d.default({
                            dataModel: this._dataModel,
                            segmentID: this.model.attributes.segmentID,
                            direction: this.model.attributes.direction
                        }))
                }
            }, {
                key: "_closeEditingLaneGuidance",
                value: function() {
                    var e = this.model.attributes.laneCount;
                    this.model.set({
                        editTitle: this._getEditTitle(e, !1)
                    })
                }
            }, {
                key: "onChildviewDestroy",
                value: function(e) {
                    e instanceof d.default && this._closeEditingLaneGuidance()
                }
            }, {
                key: "_getSegmentLanes",
                value: function(e) {
                    return f.default.forSegment(this._dataModel, e, this._direction)
                }
            }, {
                key: "_onSegmentChanged",
                value: function(e) {
                    var t = this,
                        n = e.find(function(e) {
                            return t._isSegmentRelevant(e)
                        });
                    if (null != n) {
                        var i = this._getSegmentLanes(n);
                        this._updateViewModel(i)
                    }
                }
            }, {
                key: "_onSegmentChangedID",
                value: function(e) {
                    var t = e.oldID,
                        n = e.newID;
                    this._segmentID === t && (this._segmentID = n)
                }
            }, {
                key: "_isSegmentRelevant",
                value: function(e) {
                    return e.getID() === this._segmentID
                }
            }, {
                key: "_onTurnGraphChanged",
                value: function(e) {
                    if (null != e && this._isTurnRelevant(e)) {
                        var t = this._dataModel.segments.getObjectById(this._segmentID),
                            n = this._getSegmentLanes(t);
                        this._updateViewModel(n)
                    }
                }
            }, {
                key: "_vertexDirectionMatches",
                value: function(e) {
                    return g.vertexToLanesDirection(e) === this._direction
                }
            }, {
                key: "_isTurnRelevant",
                value: function(e) {
                    var t = e.getFromVertex();
                    return t.getSegmentID() === this._segmentID && this._vertexDirectionMatches(t)
                }
            }, {
                key: "_updateViewModel",
                value: function(e) {
                    this.model.set(this._getViewModelAttributes(e)),
                        this.model.attributes.lanes.reset(this._getLaneModels(e))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this.showChildView("arrowRegion", new Marionette.CollectionView({
                            childView: u.default,
                            collection: this.model.attributes.lanes
                        })),
                        this._refreshIncompleteBadge()
                }
            }, {
                key: "onDestroy",
                value: function() {
                    this._removeIncompleteBadge()
                }
            }, {
                key: "_onIsCompleteChange",
                value: function() {
                    this._refreshIncompleteBadge()
                }
            }, {
                key: "_refreshIncompleteBadge",
                value: function() {
                    var e = this.model.attributes,
                        t = e.nodeX,
                        n = e.nodeY;
                    e.isComplete || null == t || null == n ? this._removeIncompleteBadge() : this._drawIncompleteBadge(t, n)
                }
            }, {
                key: "_removeIncompleteBadge",
                value: function() {
                    this._drawingContext.removeAllMarkers()
                }
            }, {
                key: "_drawIncompleteBadge",
                value: function(e, t) {
                    this._drawingContext.addMarkers([this._drawingContext.createIconMarker(e, t, "incomplete-lanes-badge")])
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes"
                }
            }]),
            t
    }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    var i, r;
    /*!
     * svg.js - A lightweight library for manipulating and animating SVG.
     * @version 2.6.5
     * https://svgdotjs.github.io/
     *
     * @copyright Wout Fierens <wout@mick-wout.com>
     * @license MIT
     *
     * BUILT: Sat May 26 2018 22:47:07 GMT+0200 (Mitteleuropäische Sommerzeit)
     */
    r = "undefined" != typeof window ? window : this,
        void 0 === (i = function() {
                return function(e, t) {
                    var n = this.SVG = function(e) {
                        if (n.supported)
                            return e = new n.Doc(e),
                                n.parser.draw || n.prepare(),
                                e
                    };
                    if (n.ns = "http://www.w3.org/2000/svg",
                        n.xmlns = "http://www.w3.org/2000/xmlns/",
                        n.xlink = "http://www.w3.org/1999/xlink",
                        n.svgjs = "http://svgjs.com/svgjs",
                        n.supported = !!t.createElementNS && !!t.createElementNS(n.ns, "svg").createSVGRect,
                        !n.supported)
                        return !1;
                    n.did = 1e3,
                        n.eid = function(e) {
                            return "Svgjs" + d(e) + n.did++
                        },
                        n.create = function(e) {
                            var n = t.createElementNS(this.ns, e);
                            return n.setAttribute("id", this.eid(e)),
                                n
                        },
                        n.extend = function() {
                            var e, t, i, r;
                            for (e = [].slice.call(arguments),
                                t = e.pop(),
                                r = e.length - 1; r >= 0; r--)
                                if (e[r])
                                    for (i in t)
                                        e[r].prototype[i] = t[i];
                            n.Set && n.Set.inherit && n.Set.inherit()
                        },
                        n.invent = function(e) {
                            var t = "function" == typeof e.create ? e.create : function() {
                                this.constructor.call(this, n.create(e.create))
                            };
                            return e.inherit && (t.prototype = new e.inherit),
                                e.extend && n.extend(t, e.extend),
                                e.construct && n.extend(e.parent || n.Container, e.construct),
                                t
                        },
                        n.adopt = function(t) {
                            return t ? t.instance ? t.instance : ((i = "svg" == t.nodeName ? t.parentNode instanceof e.SVGElement ? new n.Nested : new n.Doc : "linearGradient" == t.nodeName ? new n.Gradient("linear") : "radialGradient" == t.nodeName ? new n.Gradient("radial") : n[d(t.nodeName)] ? new(n[d(t.nodeName)]) : new n.Element(t)).type = t.nodeName,
                                i.node = t,
                                t.instance = i,
                                i instanceof n.Doc && i.namespace().defs(),
                                i.setData(JSON.parse(t.getAttribute("svgjs:data")) || {}),
                                i) : null;
                            var i
                        },
                        n.prepare = function() {
                            var e = t.getElementsByTagName("body")[0],
                                i = (e ? new n.Doc(e) : n.adopt(t.documentElement).nested()).size(2, 0);
                            n.parser = {
                                body: e || t.documentElement,
                                draw: i.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                                poly: i.polyline().node,
                                path: i.path().node,
                                native: n.create("svg")
                            }
                        },
                        n.parser = {
                            native: n.create("svg")
                        },
                        t.addEventListener("DOMContentLoaded", function() {
                            n.parser.draw || n.prepare()
                        }, !1),
                        n.regex = {
                            numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                            hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                            rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                            reference: /#([a-z0-9\-_]+)/i,
                            transforms: /\)\s*,?\s*/,
                            whitespace: /\s/g,
                            isHex: /^#[a-f0-9]{3,6}$/i,
                            isRgb: /^rgb\(/,
                            isCss: /[^:]+:[^;]+;?/,
                            isBlank: /^(\s+)?$/,
                            isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                            isPercent: /^-?[\d\.]+%$/,
                            isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                            delimiter: /[\s,]+/,
                            hyphen: /([^e])\-/gi,
                            pathLetters: /[MLHVCSQTAZ]/gi,
                            isPathLetter: /[MLHVCSQTAZ]/i,
                            numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                            dots: /\./g
                        },
                        n.utils = {
                            map: function(e, t) {
                                var n, i = e.length,
                                    r = [];
                                for (n = 0; n < i; n++)
                                    r.push(t(e[n]));
                                return r
                            },
                            filter: function(e, t) {
                                var n, i = e.length,
                                    r = [];
                                for (n = 0; n < i; n++)
                                    t(e[n]) && r.push(e[n]);
                                return r
                            },
                            radians: function(e) {
                                return e % 360 * Math.PI / 180
                            },
                            degrees: function(e) {
                                return 180 * e / Math.PI % 360
                            },
                            filterSVGElements: function(t) {
                                return this.filter(t, function(t) {
                                    return t instanceof e.SVGElement
                                })
                            }
                        },
                        n.defaults = {
                            attrs: {
                                "fill-opacity": 1,
                                "stroke-opacity": 1,
                                "stroke-width": 0,
                                "stroke-linejoin": "miter",
                                "stroke-linecap": "butt",
                                fill: "#000000",
                                stroke: "#000000",
                                opacity: 1,
                                x: 0,
                                y: 0,
                                cx: 0,
                                cy: 0,
                                width: 0,
                                height: 0,
                                r: 0,
                                rx: 0,
                                ry: 0,
                                offset: 0,
                                "stop-opacity": 1,
                                "stop-color": "#000000",
                                "font-size": 16,
                                "font-family": "Helvetica, Arial, sans-serif",
                                "text-anchor": "start"
                            }
                        },
                        n.Color = function(e) {
                            var t, i;
                            this.r = 0,
                                this.g = 0,
                                this.b = 0,
                                e && ("string" == typeof e ? n.regex.isRgb.test(e) ? (t = n.regex.rgb.exec(e.replace(n.regex.whitespace, "")),
                                    this.r = parseInt(t[1]),
                                    this.g = parseInt(t[2]),
                                    this.b = parseInt(t[3])) : n.regex.isHex.test(e) && (t = n.regex.hex.exec(4 == (i = e).length ? ["#", i.substring(1, 2), i.substring(1, 2), i.substring(2, 3), i.substring(2, 3), i.substring(3, 4), i.substring(3, 4)].join("") : i),
                                    this.r = parseInt(t[1], 16),
                                    this.g = parseInt(t[2], 16),
                                    this.b = parseInt(t[3], 16)) : "object" == typeof e && (this.r = e.r,
                                    this.g = e.g,
                                    this.b = e.b))
                        },
                        n.extend(n.Color, {
                            toString: function() {
                                return this.toHex()
                            },
                            toHex: function() {
                                return "#" + c(this.r) + c(this.g) + c(this.b)
                            },
                            toRgb: function() {
                                return "rgb(" + [this.r, this.g, this.b].join() + ")"
                            },
                            brightness: function() {
                                return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
                            },
                            morph: function(e) {
                                return this.destination = new n.Color(e),
                                    this
                            },
                            at: function(e) {
                                return this.destination ? (e = e < 0 ? 0 : e > 1 ? 1 : e,
                                    new n.Color({
                                        r: ~~(this.r + (this.destination.r - this.r) * e),
                                        g: ~~(this.g + (this.destination.g - this.g) * e),
                                        b: ~~(this.b + (this.destination.b - this.b) * e)
                                    })) : this
                            }
                        }),
                        n.Color.test = function(e) {
                            return e += "",
                                n.regex.isHex.test(e) || n.regex.isRgb.test(e)
                        },
                        n.Color.isRgb = function(e) {
                            return e && "number" == typeof e.r && "number" == typeof e.g && "number" == typeof e.b
                        },
                        n.Color.isColor = function(e) {
                            return n.Color.isRgb(e) || n.Color.test(e)
                        },
                        n.Array = function(e, t) {
                            0 == (e = (e || []).valueOf()).length && t && (e = t.valueOf()),
                                this.value = this.parse(e)
                        },
                        n.extend(n.Array, {
                            morph: function(e) {
                                if (this.destination = this.parse(e),
                                    this.value.length != this.destination.length) {
                                    for (var t = this.value[this.value.length - 1], n = this.destination[this.destination.length - 1]; this.value.length > this.destination.length;)
                                        this.destination.push(n);
                                    for (; this.value.length < this.destination.length;)
                                        this.value.push(t)
                                }
                                return this
                            },
                            settle: function() {
                                for (var e = 0, t = this.value.length, n = []; e < t; e++)
                                    -
                                    1 == n.indexOf(this.value[e]) && n.push(this.value[e]);
                                return this.value = n
                            },
                            at: function(e) {
                                if (!this.destination)
                                    return this;
                                for (var t = 0, i = this.value.length, r = []; t < i; t++)
                                    r.push(this.value[t] + (this.destination[t] - this.value[t]) * e);
                                return new n.Array(r)
                            },
                            toString: function() {
                                return this.value.join(" ")
                            },
                            valueOf: function() {
                                return this.value
                            },
                            parse: function(e) {
                                return e = e.valueOf(),
                                    Array.isArray(e) ? e : this.split(e)
                            },
                            split: function(e) {
                                return e.trim().split(n.regex.delimiter).map(parseFloat)
                            },
                            reverse: function() {
                                return this.value.reverse(),
                                    this
                            },
                            clone: function() {
                                var e = new this.constructor;
                                return e.value = function e(t) {
                                        for (var n = t.slice(0), i = n.length; i--;)
                                            Array.isArray(n[i]) && (n[i] = e(n[i]));
                                        return n
                                    }(this.value),
                                    e
                            }
                        }),
                        n.PointArray = function(e, t) {
                            n.Array.call(this, e, t || [
                                [0, 0]
                            ])
                        },
                        n.PointArray.prototype = new n.Array,
                        n.PointArray.prototype.constructor = n.PointArray,
                        n.extend(n.PointArray, {
                            toString: function() {
                                for (var e = 0, t = this.value.length, n = []; e < t; e++)
                                    n.push(this.value[e].join(","));
                                return n.join(" ")
                            },
                            toLine: function() {
                                return {
                                    x1: this.value[0][0],
                                    y1: this.value[0][1],
                                    x2: this.value[1][0],
                                    y2: this.value[1][1]
                                }
                            },
                            at: function(e) {
                                if (!this.destination)
                                    return this;
                                for (var t = 0, i = this.value.length, r = []; t < i; t++)
                                    r.push([this.value[t][0] + (this.destination[t][0] - this.value[t][0]) * e, this.value[t][1] + (this.destination[t][1] - this.value[t][1]) * e]);
                                return new n.PointArray(r)
                            },
                            parse: function(e) {
                                var t = [];
                                if (e = e.valueOf(),
                                    Array.isArray(e)) {
                                    if (Array.isArray(e[0]))
                                        return e.map(function(e) {
                                            return e.slice()
                                        });
                                    if (null != e[0].x)
                                        return e.map(function(e) {
                                            return [e.x, e.y]
                                        })
                                } else
                                    e = e.trim().split(n.regex.delimiter).map(parseFloat);
                                e.length % 2 != 0 && e.pop();
                                for (var i = 0, r = e.length; i < r; i += 2)
                                    t.push([e[i], e[i + 1]]);
                                return t
                            },
                            move: function(e, t) {
                                var n = this.bbox();
                                if (e -= n.x,
                                    t -= n.y,
                                    !isNaN(e) && !isNaN(t))
                                    for (var i = this.value.length - 1; i >= 0; i--)
                                        this.value[i] = [this.value[i][0] + e, this.value[i][1] + t];
                                return this
                            },
                            size: function(e, t) {
                                var n, i = this.bbox();
                                for (n = this.value.length - 1; n >= 0; n--)
                                    i.width && (this.value[n][0] = (this.value[n][0] - i.x) * e / i.width + i.x),
                                    i.height && (this.value[n][1] = (this.value[n][1] - i.y) * t / i.height + i.y);
                                return this
                            },
                            bbox: function() {
                                return n.parser.poly.setAttribute("points", this.toString()),
                                    n.parser.poly.getBBox()
                            }
                        });
                    for (var i = {
                            M: function(e, t, n) {
                                return t.x = n.x = e[0],
                                    t.y = n.y = e[1],
                                    ["M", t.x, t.y]
                            },
                            L: function(e, t) {
                                return t.x = e[0],
                                    t.y = e[1],
                                    ["L", e[0], e[1]]
                            },
                            H: function(e, t) {
                                return t.x = e[0],
                                    ["H", e[0]]
                            },
                            V: function(e, t) {
                                return t.y = e[0],
                                    ["V", e[0]]
                            },
                            C: function(e, t) {
                                return t.x = e[4],
                                    t.y = e[5],
                                    ["C", e[0], e[1], e[2], e[3], e[4], e[5]]
                            },
                            S: function(e, t) {
                                return t.x = e[2],
                                    t.y = e[3],
                                    ["S", e[0], e[1], e[2], e[3]]
                            },
                            Q: function(e, t) {
                                return t.x = e[2],
                                    t.y = e[3],
                                    ["Q", e[0], e[1], e[2], e[3]]
                            },
                            T: function(e, t) {
                                return t.x = e[0],
                                    t.y = e[1],
                                    ["T", e[0], e[1]]
                            },
                            Z: function(e, t, n) {
                                return t.x = n.x,
                                    t.y = n.y,
                                    ["Z"]
                            },
                            A: function(e, t) {
                                return t.x = e[5],
                                    t.y = e[6],
                                    ["A", e[0], e[1], e[2], e[3], e[4], e[5], e[6]]
                            }
                        }, r = "mlhvqtcsaz".split(""), s = 0, a = r.length; s < a; ++s)
                        i[r[s]] = function(e) {
                            return function(t, n, r) {
                                if ("H" == e)
                                    t[0] = t[0] + n.x;
                                else if ("V" == e)
                                    t[0] = t[0] + n.y;
                                else if ("A" == e)
                                    t[5] = t[5] + n.x,
                                    t[6] = t[6] + n.y;
                                else
                                    for (var s = 0, a = t.length; s < a; ++s)
                                        t[s] = t[s] + (s % 2 ? n.y : n.x);
                                return i[e](t, n, r)
                            }
                        }(r[s].toUpperCase());
                    n.PathArray = function(e, t) {
                            n.Array.call(this, e, t || [
                                ["M", 0, 0]
                            ])
                        },
                        n.PathArray.prototype = new n.Array,
                        n.PathArray.prototype.constructor = n.PathArray,
                        n.extend(n.PathArray, {
                            toString: function() {
                                return function(e) {
                                    for (var t = 0, n = e.length, i = ""; t < n; t++)
                                        i += e[t][0],
                                        null != e[t][1] && (i += e[t][1],
                                            null != e[t][2] && (i += " ",
                                                i += e[t][2],
                                                null != e[t][3] && (i += " ",
                                                    i += e[t][3],
                                                    i += " ",
                                                    i += e[t][4],
                                                    null != e[t][5] && (i += " ",
                                                        i += e[t][5],
                                                        i += " ",
                                                        i += e[t][6],
                                                        null != e[t][7] && (i += " ",
                                                            i += e[t][7])))));
                                    return i + " "
                                }(this.value)
                            },
                            move: function(e, t) {
                                var n = this.bbox();
                                if (e -= n.x,
                                    t -= n.y,
                                    !isNaN(e) && !isNaN(t))
                                    for (var i, r = this.value.length - 1; r >= 0; r--)
                                        "M" == (i = this.value[r][0]) || "L" == i || "T" == i ? (this.value[r][1] += e,
                                            this.value[r][2] += t) : "H" == i ? this.value[r][1] += e : "V" == i ? this.value[r][1] += t : "C" == i || "S" == i || "Q" == i ? (this.value[r][1] += e,
                                            this.value[r][2] += t,
                                            this.value[r][3] += e,
                                            this.value[r][4] += t,
                                            "C" == i && (this.value[r][5] += e,
                                                this.value[r][6] += t)) : "A" == i && (this.value[r][6] += e,
                                            this.value[r][7] += t);
                                return this
                            },
                            size: function(e, t) {
                                var n, i, r = this.bbox();
                                for (n = this.value.length - 1; n >= 0; n--)
                                    "M" == (i = this.value[n][0]) || "L" == i || "T" == i ? (this.value[n][1] = (this.value[n][1] - r.x) * e / r.width + r.x,
                                        this.value[n][2] = (this.value[n][2] - r.y) * t / r.height + r.y) : "H" == i ? this.value[n][1] = (this.value[n][1] - r.x) * e / r.width + r.x : "V" == i ? this.value[n][1] = (this.value[n][1] - r.y) * t / r.height + r.y : "C" == i || "S" == i || "Q" == i ? (this.value[n][1] = (this.value[n][1] - r.x) * e / r.width + r.x,
                                        this.value[n][2] = (this.value[n][2] - r.y) * t / r.height + r.y,
                                        this.value[n][3] = (this.value[n][3] - r.x) * e / r.width + r.x,
                                        this.value[n][4] = (this.value[n][4] - r.y) * t / r.height + r.y,
                                        "C" == i && (this.value[n][5] = (this.value[n][5] - r.x) * e / r.width + r.x,
                                            this.value[n][6] = (this.value[n][6] - r.y) * t / r.height + r.y)) : "A" == i && (this.value[n][1] = this.value[n][1] * e / r.width,
                                        this.value[n][2] = this.value[n][2] * t / r.height,
                                        this.value[n][6] = (this.value[n][6] - r.x) * e / r.width + r.x,
                                        this.value[n][7] = (this.value[n][7] - r.y) * t / r.height + r.y);
                                return this
                            },
                            equalCommands: function(e) {
                                var t, i, r;
                                for (e = new n.PathArray(e),
                                    r = this.value.length === e.value.length,
                                    t = 0,
                                    i = this.value.length; r && t < i; t++)
                                    r = this.value[t][0] === e.value[t][0];
                                return r
                            },
                            morph: function(e) {
                                return e = new n.PathArray(e),
                                    this.equalCommands(e) ? this.destination = e : this.destination = null,
                                    this
                            },
                            at: function(e) {
                                if (!this.destination)
                                    return this;
                                var t, i, r, s, a = this.value,
                                    o = this.destination.value,
                                    l = [],
                                    u = new n.PathArray;
                                for (t = 0,
                                    i = a.length; t < i; t++) {
                                    for (l[t] = [a[t][0]],
                                        r = 1,
                                        s = a[t].length; r < s; r++)
                                        l[t][r] = a[t][r] + (o[t][r] - a[t][r]) * e;
                                    "A" === l[t][0] && (l[t][4] = +(0 != l[t][4]),
                                        l[t][5] = +(0 != l[t][5]))
                                }
                                return u.value = l,
                                    u
                            },
                            parse: function(e) {
                                if (e instanceof n.PathArray)
                                    return e.valueOf();
                                var t, r = {
                                    M: 2,
                                    L: 2,
                                    H: 1,
                                    V: 1,
                                    C: 6,
                                    S: 4,
                                    Q: 4,
                                    T: 2,
                                    A: 7,
                                    Z: 0
                                };
                                e = "string" == typeof e ? e.replace(n.regex.numbersWithDots, l).replace(n.regex.pathLetters, " $& ").replace(n.regex.hyphen, "$1 -").trim().split(n.regex.delimiter) : e.reduce(function(e, t) {
                                    return [].concat.call(e, t)
                                }, []);
                                var s = [],
                                    a = new n.Point,
                                    o = new n.Point,
                                    u = 0,
                                    d = e.length;
                                do {
                                    n.regex.isPathLetter.test(e[u]) ? (t = e[u],
                                            ++u) : "M" == t ? t = "L" : "m" == t && (t = "l"),
                                        s.push(i[t].call(null, e.slice(u, u += r[t.toUpperCase()]).map(parseFloat), a, o))
                                } while (d > u);
                                return s
                            },
                            bbox: function() {
                                return n.parser.path.setAttribute("d", this.toString()),
                                    n.parser.path.getBBox()
                            }
                        }),
                        n.Number = n.invent({
                            create: function(e, t) {
                                this.value = 0,
                                    this.unit = t || "",
                                    "number" == typeof e ? this.value = isNaN(e) ? 0 : isFinite(e) ? e : e < 0 ? -3.4e38 : 3.4e38 : "string" == typeof e ? (t = e.match(n.regex.numberAndUnit)) && (this.value = parseFloat(t[1]),
                                        "%" == t[5] ? this.value /= 100 : "s" == t[5] && (this.value *= 1e3),
                                        this.unit = t[5]) : e instanceof n.Number && (this.value = e.valueOf(),
                                        this.unit = e.unit)
                            },
                            extend: {
                                toString: function() {
                                    return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
                                },
                                toJSON: function() {
                                    return this.toString()
                                },
                                valueOf: function() {
                                    return this.value
                                },
                                plus: function(e) {
                                    return e = new n.Number(e),
                                        new n.Number(this + e, this.unit || e.unit)
                                },
                                minus: function(e) {
                                    return e = new n.Number(e),
                                        new n.Number(this - e, this.unit || e.unit)
                                },
                                times: function(e) {
                                    return e = new n.Number(e),
                                        new n.Number(this * e, this.unit || e.unit)
                                },
                                divide: function(e) {
                                    return e = new n.Number(e),
                                        new n.Number(this / e, this.unit || e.unit)
                                },
                                to: function(e) {
                                    var t = new n.Number(this);
                                    return "string" == typeof e && (t.unit = e),
                                        t
                                },
                                morph: function(e) {
                                    return this.destination = new n.Number(e),
                                        e.relative && (this.destination.value += this.value),
                                        this
                                },
                                at: function(e) {
                                    return this.destination ? new n.Number(this.destination).minus(this).times(e).plus(this) : this
                                }
                            }
                        }),
                        n.Element = n.invent({
                            create: function(e) {
                                this._stroke = n.defaults.attrs.stroke,
                                    this._event = null,
                                    this.dom = {},
                                    (this.node = e) && (this.type = e.nodeName,
                                        this.node.instance = this,
                                        this._stroke = e.getAttribute("stroke") || this._stroke)
                            },
                            extend: {
                                x: function(e) {
                                    return this.attr("x", e)
                                },
                                y: function(e) {
                                    return this.attr("y", e)
                                },
                                cx: function(e) {
                                    return null == e ? this.x() + this.width() / 2 : this.x(e - this.width() / 2)
                                },
                                cy: function(e) {
                                    return null == e ? this.y() + this.height() / 2 : this.y(e - this.height() / 2)
                                },
                                move: function(e, t) {
                                    return this.x(e).y(t)
                                },
                                center: function(e, t) {
                                    return this.cx(e).cy(t)
                                },
                                width: function(e) {
                                    return this.attr("width", e)
                                },
                                height: function(e) {
                                    return this.attr("height", e)
                                },
                                size: function(e, t) {
                                    var i = h(this, e, t);
                                    return this.width(new n.Number(i.width)).height(new n.Number(i.height))
                                },
                                clone: function(e) {
                                    this.writeDataToDom();
                                    var t = v(this.node.cloneNode(!0));
                                    return e ? e.add(t) : this.after(t),
                                        t
                                },
                                remove: function() {
                                    return this.parent() && this.parent().removeElement(this),
                                        this
                                },
                                replace: function(e) {
                                    return this.after(e).remove(),
                                        e
                                },
                                addTo: function(e) {
                                    return e.put(this)
                                },
                                putIn: function(e) {
                                    return e.add(this)
                                },
                                id: function(e) {
                                    return this.attr("id", e)
                                },
                                inside: function(e, t) {
                                    var n = this.bbox();
                                    return e > n.x && t > n.y && e < n.x + n.width && t < n.y + n.height
                                },
                                show: function() {
                                    return this.style("display", "")
                                },
                                hide: function() {
                                    return this.style("display", "none")
                                },
                                visible: function() {
                                    return "none" != this.style("display")
                                },
                                toString: function() {
                                    return this.attr("id")
                                },
                                classes: function() {
                                    var e = this.attr("class");
                                    return null == e ? [] : e.trim().split(n.regex.delimiter)
                                },
                                hasClass: function(e) {
                                    return -1 != this.classes().indexOf(e)
                                },
                                addClass: function(e) {
                                    if (!this.hasClass(e)) {
                                        var t = this.classes();
                                        t.push(e),
                                            this.attr("class", t.join(" "))
                                    }
                                    return this
                                },
                                removeClass: function(e) {
                                    return this.hasClass(e) && this.attr("class", this.classes().filter(function(t) {
                                            return t != e
                                        }).join(" ")),
                                        this
                                },
                                toggleClass: function(e) {
                                    return this.hasClass(e) ? this.removeClass(e) : this.addClass(e)
                                },
                                reference: function(e) {
                                    return n.get(this.attr(e))
                                },
                                parent: function(t) {
                                    var i = this;
                                    if (!i.node.parentNode)
                                        return null;
                                    if (i = n.adopt(i.node.parentNode),
                                        !t)
                                        return i;
                                    for (; i && i.node instanceof e.SVGElement;) {
                                        if ("string" == typeof t ? i.matches(t) : i instanceof t)
                                            return i;
                                        if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName)
                                            return null;
                                        i = n.adopt(i.node.parentNode)
                                    }
                                },
                                doc: function() {
                                    return this instanceof n.Doc ? this : this.parent(n.Doc)
                                },
                                parents: function(e) {
                                    var t = [],
                                        n = this;
                                    do {
                                        if (!(n = n.parent(e)) || !n.node)
                                            break;
                                        t.push(n)
                                    } while (n.parent);
                                    return t
                                },
                                matches: function(e) {
                                    return function(e, t) {
                                        return (e.matches || e.matchesSelector || e.msMatchesSelector || e.mozMatchesSelector || e.webkitMatchesSelector || e.oMatchesSelector).call(e, t)
                                    }(this.node, e)
                                },
                                native: function() {
                                    return this.node
                                },
                                svg: function(e) {
                                    var i = t.createElement("svg");
                                    if (!(e && this instanceof n.Parent))
                                        return i.appendChild(e = t.createElement("svg")),
                                            this.writeDataToDom(),
                                            e.appendChild(this.node.cloneNode(!0)),
                                            i.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                                    i.innerHTML = "<svg>" + e.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                                    for (var r = 0, s = i.firstChild.childNodes.length; r < s; r++)
                                        this.node.appendChild(i.firstChild.firstChild);
                                    return this
                                },
                                writeDataToDom: function() {
                                    if (this.each || this.lines) {
                                        var e = this.each ? this : this.lines();
                                        e.each(function() {
                                            this.writeDataToDom()
                                        })
                                    }
                                    return this.node.removeAttribute("svgjs:data"),
                                        Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)),
                                        this
                                },
                                setData: function(e) {
                                    return this.dom = e,
                                        this
                                },
                                is: function(e) {
                                    return function(e, t) {
                                        return e instanceof t
                                    }(this, e)
                                }
                            }
                        }),
                        n.easing = {
                            "-": function(e) {
                                return e
                            },
                            "<>": function(e) {
                                return -Math.cos(e * Math.PI) / 2 + .5
                            },
                            ">": function(e) {
                                return Math.sin(e * Math.PI / 2)
                            },
                            "<": function(e) {
                                return 1 - Math.cos(e * Math.PI / 2)
                            }
                        },
                        n.morph = function(e) {
                            return function(t, i) {
                                return new n.MorphObj(t, i).at(e)
                            }
                        },
                        n.Situation = n.invent({
                            create: function(e) {
                                this.init = !1,
                                    this.reversed = !1,
                                    this.reversing = !1,
                                    this.duration = new n.Number(e.duration).valueOf(),
                                    this.delay = new n.Number(e.delay).valueOf(),
                                    this.start = +new Date + this.delay,
                                    this.finish = this.start + this.duration,
                                    this.ease = e.ease,
                                    this.loop = 0,
                                    this.loops = !1,
                                    this.animations = {},
                                    this.attrs = {},
                                    this.styles = {},
                                    this.transforms = [],
                                    this.once = {}
                            }
                        }),
                        n.FX = n.invent({
                            create: function(e) {
                                this._target = e,
                                    this.situations = [],
                                    this.active = !1,
                                    this.situation = null,
                                    this.paused = !1,
                                    this.lastPos = 0,
                                    this.pos = 0,
                                    this.absPos = 0,
                                    this._speed = 1
                            },
                            extend: {
                                animate: function(e, t, i) {
                                    "object" == typeof e && (t = e.ease,
                                        i = e.delay,
                                        e = e.duration);
                                    var r = new n.Situation({
                                        duration: e || 1e3,
                                        delay: i || 0,
                                        ease: n.easing[t || "-"] || t
                                    });
                                    return this.queue(r),
                                        this
                                },
                                delay: function(e) {
                                    var t = new n.Situation({
                                        duration: e,
                                        delay: 0,
                                        ease: n.easing["-"]
                                    });
                                    return this.queue(t)
                                },
                                target: function(e) {
                                    return e && e instanceof n.Element ? (this._target = e,
                                        this) : this._target
                                },
                                timeToAbsPos: function(e) {
                                    return (e - this.situation.start) / (this.situation.duration / this._speed)
                                },
                                absPosToTime: function(e) {
                                    return this.situation.duration / this._speed * e + this.situation.start
                                },
                                startAnimFrame: function() {
                                    this.stopAnimFrame(),
                                        this.animationFrame = e.requestAnimationFrame(function() {
                                                this.step()
                                            }
                                            .bind(this))
                                },
                                stopAnimFrame: function() {
                                    e.cancelAnimationFrame(this.animationFrame)
                                },
                                start: function() {
                                    return !this.active && this.situation && (this.active = !0,
                                            this.startCurrent()),
                                        this
                                },
                                startCurrent: function() {
                                    return this.situation.start = +new Date + this.situation.delay / this._speed,
                                        this.situation.finish = this.situation.start + this.situation.duration / this._speed,
                                        this.initAnimations().step()
                                },
                                queue: function(e) {
                                    return ("function" == typeof e || e instanceof n.Situation) && this.situations.push(e),
                                        this.situation || (this.situation = this.situations.shift()),
                                        this
                                },
                                dequeue: function() {
                                    return this.stop(),
                                        this.situation = this.situations.shift(),
                                        this.situation && (this.situation instanceof n.Situation ? this.start() : this.situation.call(this)),
                                        this
                                },
                                initAnimations: function() {
                                    var e, t, i, r = this.situation;
                                    if (r.init)
                                        return this;
                                    for (e in r.animations)
                                        for (i = this.target()[e](),
                                            Array.isArray(i) || (i = [i]),
                                            Array.isArray(r.animations[e]) || (r.animations[e] = [r.animations[e]]),
                                            t = i.length; t--;)
                                            r.animations[e][t] instanceof n.Number && (i[t] = new n.Number(i[t])),
                                            r.animations[e][t] = i[t].morph(r.animations[e][t]);
                                    for (e in r.attrs)
                                        r.attrs[e] = new n.MorphObj(this.target().attr(e), r.attrs[e]);
                                    for (e in r.styles)
                                        r.styles[e] = new n.MorphObj(this.target().style(e), r.styles[e]);
                                    return r.initialTransformation = this.target().matrixify(),
                                        r.init = !0,
                                        this
                                },
                                clearQueue: function() {
                                    return this.situations = [],
                                        this
                                },
                                clearCurrent: function() {
                                    return this.situation = null,
                                        this
                                },
                                stop: function(e, t) {
                                    var n = this.active;
                                    return this.active = !1,
                                        t && this.clearQueue(),
                                        e && this.situation && (!n && this.startCurrent(),
                                            this.atEnd()),
                                        this.stopAnimFrame(),
                                        this.clearCurrent()
                                },
                                reset: function() {
                                    if (this.situation) {
                                        var e = this.situation;
                                        this.stop(),
                                            this.situation = e,
                                            this.atStart()
                                    }
                                    return this
                                },
                                finish: function() {
                                    for (this.stop(!0, !1); this.dequeue().situation && this.stop(!0, !1);)
                                    ;
                                    return this.clearQueue().clearCurrent(),
                                        this
                                },
                                atStart: function() {
                                    return this.at(0, !0)
                                },
                                atEnd: function() {
                                    return !0 === this.situation.loops && (this.situation.loops = this.situation.loop + 1),
                                        "number" == typeof this.situation.loops ? this.at(this.situation.loops, !0) : this.at(1, !0)
                                },
                                at: function(e, t) {
                                    var n = this.situation.duration / this._speed;
                                    return this.absPos = e,
                                        t || (this.situation.reversed && (this.absPos = 1 - this.absPos),
                                            this.absPos += this.situation.loop),
                                        this.situation.start = +new Date - this.absPos * n,
                                        this.situation.finish = this.situation.start + n,
                                        this.step(!0)
                                },
                                speed: function(e) {
                                    return 0 === e ? this.pause() : e ? (this._speed = e,
                                        this.at(this.absPos, !0)) : this._speed
                                },
                                loop: function(e, t) {
                                    var n = this.last();
                                    return n.loops = null == e || e,
                                        n.loop = 0,
                                        t && (n.reversing = !0),
                                        this
                                },
                                pause: function() {
                                    return this.paused = !0,
                                        this.stopAnimFrame(),
                                        this
                                },
                                play: function() {
                                    return this.paused ? (this.paused = !1,
                                        this.at(this.absPos, !0)) : this
                                },
                                reverse: function(e) {
                                    var t = this.last();
                                    return t.reversed = void 0 === e ? !t.reversed : e,
                                        this
                                },
                                progress: function(e) {
                                    return e ? this.situation.ease(this.pos) : this.pos
                                },
                                after: function(e) {
                                    var t = this.last();
                                    return this.target().on("finished.fx", function n(i) {
                                            i.detail.situation == t && (e.call(this, t),
                                                this.off("finished.fx", n))
                                        }),
                                        this._callStart()
                                },
                                during: function(e) {
                                    var t = this.last(),
                                        i = function(i) {
                                            i.detail.situation == t && e.call(this, i.detail.pos, n.morph(i.detail.pos), i.detail.eased, t)
                                        };
                                    return this.target().off("during.fx", i).on("during.fx", i),
                                        this.after(function() {
                                            this.off("during.fx", i)
                                        }),
                                        this._callStart()
                                },
                                afterAll: function(e) {
                                    var t = function t(n) {
                                        e.call(this),
                                            this.off("allfinished.fx", t)
                                    };
                                    return this.target().off("allfinished.fx", t).on("allfinished.fx", t),
                                        this._callStart()
                                },
                                duringAll: function(e) {
                                    var t = function(t) {
                                        e.call(this, t.detail.pos, n.morph(t.detail.pos), t.detail.eased, t.detail.situation)
                                    };
                                    return this.target().off("during.fx", t).on("during.fx", t),
                                        this.afterAll(function() {
                                            this.off("during.fx", t)
                                        }),
                                        this._callStart()
                                },
                                last: function() {
                                    return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                                },
                                add: function(e, t, n) {
                                    return this.last()[n || "animations"][e] = t,
                                        this._callStart()
                                },
                                step: function(e) {
                                    var t, n, i;
                                    e || (this.absPos = this.timeToAbsPos(+new Date)),
                                        !1 !== this.situation.loops ? (t = Math.max(this.absPos, 0),
                                            n = Math.floor(t),
                                            !0 === this.situation.loops || n < this.situation.loops ? (this.pos = t - n,
                                                i = this.situation.loop,
                                                this.situation.loop = n) : (this.absPos = this.situation.loops,
                                                this.pos = 1,
                                                i = this.situation.loop - 1,
                                                this.situation.loop = this.situation.loops),
                                            this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - i) % 2))) : (this.absPos = Math.min(this.absPos, 1),
                                            this.pos = this.absPos),
                                        this.pos < 0 && (this.pos = 0),
                                        this.situation.reversed && (this.pos = 1 - this.pos);
                                    var r = this.situation.ease(this.pos);
                                    for (var s in this.situation.once)
                                        s > this.lastPos && s <= r && (this.situation.once[s].call(this.target(), this.pos, r),
                                            delete this.situation.once[s]);
                                    return this.active && this.target().fire("during", {
                                            pos: this.pos,
                                            eased: r,
                                            fx: this,
                                            situation: this.situation
                                        }),
                                        this.situation ? (this.eachAt(),
                                            1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(),
                                                this.target().fire("finished", {
                                                    fx: this,
                                                    situation: this.situation
                                                }),
                                                this.situations.length || (this.target().fire("allfinished"),
                                                    this.situations.length || (this.target().off(".fx"),
                                                        this.active = !1)),
                                                this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(),
                                            this.lastPos = r,
                                            this) : this
                                },
                                eachAt: function() {
                                    var e, t, i, r = this,
                                        s = this.target(),
                                        a = this.situation;
                                    for (e in a.animations)
                                        i = [].concat(a.animations[e]).map(function(e) {
                                            return "string" != typeof e && e.at ? e.at(a.ease(r.pos), r.pos) : e
                                        }),
                                        s[e].apply(s, i);
                                    for (e in a.attrs)
                                        i = [e].concat(a.attrs[e]).map(function(e) {
                                            return "string" != typeof e && e.at ? e.at(a.ease(r.pos), r.pos) : e
                                        }),
                                        s.attr.apply(s, i);
                                    for (e in a.styles)
                                        i = [e].concat(a.styles[e]).map(function(e) {
                                            return "string" != typeof e && e.at ? e.at(a.ease(r.pos), r.pos) : e
                                        }),
                                        s.style.apply(s, i);
                                    if (a.transforms.length) {
                                        for (i = a.initialTransformation,
                                            e = 0,
                                            t = a.transforms.length; e < t; e++) {
                                            var o = a.transforms[e];
                                            o instanceof n.Matrix ? i = o.relative ? i.multiply((new n.Matrix).morph(o).at(a.ease(this.pos))) : i.morph(o).at(a.ease(this.pos)) : (o.relative || o.undo(i.extract()),
                                                i = i.multiply(o.at(a.ease(this.pos))))
                                        }
                                        s.matrix(i)
                                    }
                                    return this
                                },
                                once: function(e, t, n) {
                                    var i = this.last();
                                    return n || (e = i.ease(e)),
                                        i.once[e] = t,
                                        this
                                },
                                _callStart: function() {
                                    return setTimeout(function() {
                                                this.start()
                                            }
                                            .bind(this), 0),
                                        this
                                }
                            },
                            parent: n.Element,
                            construct: {
                                animate: function(e, t, i) {
                                    return (this.fx || (this.fx = new n.FX(this))).animate(e, t, i)
                                },
                                delay: function(e) {
                                    return (this.fx || (this.fx = new n.FX(this))).delay(e)
                                },
                                stop: function(e, t) {
                                    return this.fx && this.fx.stop(e, t),
                                        this
                                },
                                finish: function() {
                                    return this.fx && this.fx.finish(),
                                        this
                                },
                                pause: function() {
                                    return this.fx && this.fx.pause(),
                                        this
                                },
                                play: function() {
                                    return this.fx && this.fx.play(),
                                        this
                                },
                                speed: function(e) {
                                    if (this.fx) {
                                        if (null == e)
                                            return this.fx.speed();
                                        this.fx.speed(e)
                                    }
                                    return this
                                }
                            }
                        }),
                        n.MorphObj = n.invent({
                            create: function(e, t) {
                                return n.Color.isColor(t) ? new n.Color(e).morph(t) : n.regex.delimiter.test(e) ? n.regex.pathLetters.test(e) ? new n.PathArray(e).morph(t) : new n.Array(e).morph(t) : n.regex.numberAndUnit.test(t) ? new n.Number(e).morph(t) : (this.value = e,
                                    void(this.destination = t))
                            },
                            extend: {
                                at: function(e, t) {
                                    return t < 1 ? this.value : this.destination
                                },
                                valueOf: function() {
                                    return this.value
                                }
                            }
                        }),
                        n.extend(n.FX, {
                            attr: function(e, t, n) {
                                if ("object" == typeof e)
                                    for (var i in e)
                                        this.attr(i, e[i]);
                                else
                                    this.add(e, t, "attrs");
                                return this
                            },
                            style: function(e, t) {
                                if ("object" == typeof e)
                                    for (var n in e)
                                        this.style(n, e[n]);
                                else
                                    this.add(e, t, "styles");
                                return this
                            },
                            x: function(e, t) {
                                if (this.target() instanceof n.G)
                                    return this.transform({
                                            x: e
                                        }, t),
                                        this;
                                var i = new n.Number(e);
                                return i.relative = t,
                                    this.add("x", i)
                            },
                            y: function(e, t) {
                                if (this.target() instanceof n.G)
                                    return this.transform({
                                            y: e
                                        }, t),
                                        this;
                                var i = new n.Number(e);
                                return i.relative = t,
                                    this.add("y", i)
                            },
                            cx: function(e) {
                                return this.add("cx", new n.Number(e))
                            },
                            cy: function(e) {
                                return this.add("cy", new n.Number(e))
                            },
                            move: function(e, t) {
                                return this.x(e).y(t)
                            },
                            center: function(e, t) {
                                return this.cx(e).cy(t)
                            },
                            size: function(e, t) {
                                var i;
                                return this.target() instanceof n.Text ? this.attr("font-size", e) : (e && t || (i = this.target().bbox()),
                                        e || (e = i.width / i.height * t),
                                        t || (t = i.height / i.width * e),
                                        this.add("width", new n.Number(e)).add("height", new n.Number(t))),
                                    this
                            },
                            width: function(e) {
                                return this.add("width", new n.Number(e))
                            },
                            height: function(e) {
                                return this.add("height", new n.Number(e))
                            },
                            plot: function(e, t, n, i) {
                                return 4 == arguments.length ? this.plot([e, t, n, i]) : this.add("plot", new(this.target().morphArray)(e))
                            },
                            leading: function(e) {
                                return this.target().leading ? this.add("leading", new n.Number(e)) : this
                            },
                            viewbox: function(e, t, i, r) {
                                return this.target() instanceof n.Container && this.add("viewbox", new n.ViewBox(e, t, i, r)),
                                    this
                            },
                            update: function(e) {
                                if (this.target() instanceof n.Stop) {
                                    if ("number" == typeof e || e instanceof n.Number)
                                        return this.update({
                                            offset: arguments[0],
                                            color: arguments[1],
                                            opacity: arguments[2]
                                        });
                                    null != e.opacity && this.attr("stop-opacity", e.opacity),
                                        null != e.color && this.attr("stop-color", e.color),
                                        null != e.offset && this.attr("offset", e.offset)
                                }
                                return this
                            }
                        }),
                        n.Box = n.invent({
                            create: function(e, t, i, r) {
                                if (!("object" != typeof e || e instanceof n.Element))
                                    return n.Box.call(this, null != e.left ? e.left : e.x, null != e.top ? e.top : e.y, e.width, e.height);
                                4 == arguments.length && (this.x = e,
                                        this.y = t,
                                        this.width = i,
                                        this.height = r),
                                    m(this)
                            },
                            extend: {
                                merge: function(e) {
                                    var t = new this.constructor;
                                    return t.x = Math.min(this.x, e.x),
                                        t.y = Math.min(this.y, e.y),
                                        t.width = Math.max(this.x + this.width, e.x + e.width) - t.x,
                                        t.height = Math.max(this.y + this.height, e.y + e.height) - t.y,
                                        m(t)
                                },
                                transform: function(e) {
                                    var t, i = 1 / 0,
                                        r = -1 / 0,
                                        s = 1 / 0,
                                        a = -1 / 0,
                                        o = [new n.Point(this.x, this.y), new n.Point(this.x2, this.y), new n.Point(this.x, this.y2), new n.Point(this.x2, this.y2)];
                                    return o.forEach(function(t) {
                                            t = t.transform(e),
                                                i = Math.min(i, t.x),
                                                r = Math.max(r, t.x),
                                                s = Math.min(s, t.y),
                                                a = Math.max(a, t.y)
                                        }),
                                        (t = new this.constructor).x = i,
                                        t.width = r - i,
                                        t.y = s,
                                        t.height = a - s,
                                        m(t),
                                        t
                                }
                            }
                        }),
                        n.BBox = n.invent({
                            create: function(e) {
                                if (n.Box.apply(this, [].slice.call(arguments)),
                                    e instanceof n.Element) {
                                    var i;
                                    try {
                                        if (t.documentElement.contains) {
                                            if (!t.documentElement.contains(e.node))
                                                throw new Exception("Element not in the dom")
                                        } else {
                                            for (var r = e.node; r.parentNode;)
                                                r = r.parentNode;
                                            if (r != t)
                                                throw new Exception("Element not in the dom")
                                        }
                                        i = e.node.getBBox()
                                    } catch (t) {
                                        if (e instanceof n.Shape) {
                                            var s = e.clone(n.parser.draw.instance).show();
                                            i = s.node.getBBox(),
                                                s.remove()
                                        } else
                                            i = {
                                                x: e.node.clientLeft,
                                                y: e.node.clientTop,
                                                width: e.node.clientWidth,
                                                height: e.node.clientHeight
                                            }
                                    }
                                    n.Box.call(this, i)
                                }
                            },
                            inherit: n.Box,
                            parent: n.Element,
                            construct: {
                                bbox: function() {
                                    return new n.BBox(this)
                                }
                            }
                        }),
                        n.BBox.prototype.constructor = n.BBox,
                        n.extend(n.Element, {
                            tbox: function() {
                                return console.warn("Use of TBox is deprecated and mapped to RBox. Use .rbox() instead."),
                                    this.rbox(this.doc())
                            }
                        }),
                        n.RBox = n.invent({
                            create: function(e) {
                                n.Box.apply(this, [].slice.call(arguments)),
                                    e instanceof n.Element && n.Box.call(this, e.node.getBoundingClientRect())
                            },
                            inherit: n.Box,
                            parent: n.Element,
                            extend: {
                                addOffset: function() {
                                    return this.x += e.pageXOffset,
                                        this.y += e.pageYOffset,
                                        this
                                }
                            },
                            construct: {
                                rbox: function(e) {
                                    return e ? new n.RBox(this).transform(e.screenCTM().inverse()) : new n.RBox(this).addOffset()
                                }
                            }
                        }),
                        n.RBox.prototype.constructor = n.RBox,
                        n.Matrix = n.invent({
                            create: function(e) {
                                var t, i = p([1, 0, 0, 1, 0, 0]);
                                for (e = e instanceof n.Element ? e.matrixify() : "string" == typeof e ? p(e.split(n.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? p([].slice.call(arguments)) : Array.isArray(e) ? p(e) : "object" == typeof e ? e : i,
                                    t = y.length - 1; t >= 0; --t)
                                    this[y[t]] = null != e[y[t]] ? e[y[t]] : i[y[t]]
                            },
                            extend: {
                                extract: function() {
                                    var e = f(this, 0, 1),
                                        t = f(this, 1, 0),
                                        i = 180 / Math.PI * Math.atan2(e.y, e.x) - 90;
                                    return {
                                        x: this.e,
                                        y: this.f,
                                        transformedX: (this.e * Math.cos(i * Math.PI / 180) + this.f * Math.sin(i * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                                        transformedY: (this.f * Math.cos(i * Math.PI / 180) + this.e * Math.sin(-i * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                                        skewX: -i,
                                        skewY: 180 / Math.PI * Math.atan2(t.y, t.x),
                                        scaleX: Math.sqrt(this.a * this.a + this.b * this.b),
                                        scaleY: Math.sqrt(this.c * this.c + this.d * this.d),
                                        rotation: i,
                                        a: this.a,
                                        b: this.b,
                                        c: this.c,
                                        d: this.d,
                                        e: this.e,
                                        f: this.f,
                                        matrix: new n.Matrix(this)
                                    }
                                },
                                clone: function() {
                                    return new n.Matrix(this)
                                },
                                morph: function(e) {
                                    return this.destination = new n.Matrix(e),
                                        this
                                },
                                at: function(e) {
                                    if (!this.destination)
                                        return this;
                                    var t = new n.Matrix({
                                        a: this.a + (this.destination.a - this.a) * e,
                                        b: this.b + (this.destination.b - this.b) * e,
                                        c: this.c + (this.destination.c - this.c) * e,
                                        d: this.d + (this.destination.d - this.d) * e,
                                        e: this.e + (this.destination.e - this.e) * e,
                                        f: this.f + (this.destination.f - this.f) * e
                                    });
                                    return t
                                },
                                multiply: function(e) {
                                    return new n.Matrix(this.native().multiply(function(e) {
                                        return e instanceof n.Matrix || (e = new n.Matrix(e)),
                                            e
                                    }(e).native()))
                                },
                                inverse: function() {
                                    return new n.Matrix(this.native().inverse())
                                },
                                translate: function(e, t) {
                                    return new n.Matrix(this.native().translate(e || 0, t || 0))
                                },
                                scale: function(e, t, i, r) {
                                    return 1 == arguments.length ? t = e : 3 == arguments.length && (r = i,
                                            i = t,
                                            t = e),
                                        this.around(i, r, new n.Matrix(e, 0, 0, t, 0, 0))
                                },
                                rotate: function(e, t, i) {
                                    return e = n.utils.radians(e),
                                        this.around(t, i, new n.Matrix(Math.cos(e), Math.sin(e), -Math.sin(e), Math.cos(e), 0, 0))
                                },
                                flip: function(e, t) {
                                    return "x" == e ? this.scale(-1, 1, t, 0) : "y" == e ? this.scale(1, -1, 0, t) : this.scale(-1, -1, e, null != t ? t : e)
                                },
                                skew: function(e, t, i, r) {
                                    return 1 == arguments.length ? t = e : 3 == arguments.length && (r = i,
                                            i = t,
                                            t = e),
                                        e = n.utils.radians(e),
                                        t = n.utils.radians(t),
                                        this.around(i, r, new n.Matrix(1, Math.tan(t), Math.tan(e), 1, 0, 0))
                                },
                                skewX: function(e, t, n) {
                                    return this.skew(e, 0, t, n)
                                },
                                skewY: function(e, t, n) {
                                    return this.skew(0, e, t, n)
                                },
                                around: function(e, t, i) {
                                    return this.multiply(new n.Matrix(1, 0, 0, 1, e || 0, t || 0)).multiply(i).multiply(new n.Matrix(1, 0, 0, 1, -e || 0, -t || 0))
                                },
                                native: function() {
                                    for (var e = n.parser.native.createSVGMatrix(), t = y.length - 1; t >= 0; t--)
                                        e[y[t]] = this[y[t]];
                                    return e
                                },
                                toString: function() {
                                    return "matrix(" + _(this.a) + "," + _(this.b) + "," + _(this.c) + "," + _(this.d) + "," + _(this.e) + "," + _(this.f) + ")"
                                }
                            },
                            parent: n.Element,
                            construct: {
                                ctm: function() {
                                    return new n.Matrix(this.node.getCTM())
                                },
                                screenCTM: function() {
                                    if (this instanceof n.Nested) {
                                        var e = this.rect(1, 1),
                                            t = e.node.getScreenCTM();
                                        return e.remove(),
                                            new n.Matrix(t)
                                    }
                                    return new n.Matrix(this.node.getScreenCTM())
                                }
                            }
                        }),
                        n.Point = n.invent({
                            create: function(e, t) {
                                var n;
                                n = Array.isArray(e) ? {
                                        x: e[0],
                                        y: e[1]
                                    } : "object" == typeof e ? {
                                        x: e.x,
                                        y: e.y
                                    } : null != e ? {
                                        x: e,
                                        y: null != t ? t : e
                                    } : {
                                        x: 0,
                                        y: 0
                                    },
                                    this.x = n.x,
                                    this.y = n.y
                            },
                            extend: {
                                clone: function() {
                                    return new n.Point(this)
                                },
                                morph: function(e, t) {
                                    return this.destination = new n.Point(e, t),
                                        this
                                },
                                at: function(e) {
                                    if (!this.destination)
                                        return this;
                                    var t = new n.Point({
                                        x: this.x + (this.destination.x - this.x) * e,
                                        y: this.y + (this.destination.y - this.y) * e
                                    });
                                    return t
                                },
                                native: function() {
                                    var e = n.parser.native.createSVGPoint();
                                    return e.x = this.x,
                                        e.y = this.y,
                                        e
                                },
                                transform: function(e) {
                                    return new n.Point(this.native().matrixTransform(e.native()))
                                }
                            }
                        }),
                        n.extend(n.Element, {
                            point: function(e, t) {
                                return new n.Point(e, t).transform(this.screenCTM().inverse())
                            }
                        }),
                        n.extend(n.Element, {
                            attr: function(e, t, i) {
                                if (null == e) {
                                    for (e = {},
                                        t = this.node.attributes,
                                        i = t.length - 1; i >= 0; i--)
                                        e[t[i].nodeName] = n.regex.isNumber.test(t[i].nodeValue) ? parseFloat(t[i].nodeValue) : t[i].nodeValue;
                                    return e
                                }
                                if ("object" == typeof e)
                                    for (t in e)
                                        this.attr(t, e[t]);
                                else if (null === t)
                                    this.node.removeAttribute(e);
                                else {
                                    if (null == t)
                                        return null == (t = this.node.getAttribute(e)) ? n.defaults.attrs[e] : n.regex.isNumber.test(t) ? parseFloat(t) : t;
                                    "stroke-width" == e ? this.attr("stroke", parseFloat(t) > 0 ? this._stroke : null) : "stroke" == e && (this._stroke = t),
                                        "fill" != e && "stroke" != e || (n.regex.isImage.test(t) && (t = this.doc().defs().image(t, 0, 0)),
                                            t instanceof n.Image && (t = this.doc().defs().pattern(0, 0, function() {
                                                this.add(t)
                                            }))),
                                        "number" == typeof t ? t = new n.Number(t) : n.Color.isColor(t) ? t = new n.Color(t) : Array.isArray(t) && (t = new n.Array(t)),
                                        "leading" == e ? this.leading && this.leading(t) : "string" == typeof i ? this.node.setAttributeNS(i, e, t.toString()) : this.node.setAttribute(e, t.toString()),
                                        !this.rebuild || "font-size" != e && "x" != e || this.rebuild(e, t)
                                }
                                return this
                            }
                        }),
                        n.extend(n.Element, {
                            transform: function(e, t) {
                                var i, r;
                                if ("object" != typeof e)
                                    return i = new n.Matrix(this).extract(),
                                        "string" == typeof e ? i[e] : i;
                                if (i = new n.Matrix(this),
                                    t = !!t || !!e.relative,
                                    null != e.a)
                                    i = t ? i.multiply(new n.Matrix(e)) : new n.Matrix(e);
                                else if (null != e.rotation)
                                    g(e, this),
                                    i = t ? i.rotate(e.rotation, e.cx, e.cy) : i.rotate(e.rotation - i.extract().rotation, e.cx, e.cy);
                                else if (null != e.scale || null != e.scaleX || null != e.scaleY) {
                                    if (g(e, this),
                                        e.scaleX = null != e.scale ? e.scale : null != e.scaleX ? e.scaleX : 1,
                                        e.scaleY = null != e.scale ? e.scale : null != e.scaleY ? e.scaleY : 1,
                                        !t) {
                                        var s = i.extract();
                                        e.scaleX = 1 * e.scaleX / s.scaleX,
                                            e.scaleY = 1 * e.scaleY / s.scaleY
                                    }
                                    i = i.scale(e.scaleX, e.scaleY, e.cx, e.cy)
                                } else if (null != e.skew || null != e.skewX || null != e.skewY) {
                                    if (g(e, this),
                                        e.skewX = null != e.skew ? e.skew : null != e.skewX ? e.skewX : 0,
                                        e.skewY = null != e.skew ? e.skew : null != e.skewY ? e.skewY : 0,
                                        !t) {
                                        var s = i.extract();
                                        i = i.multiply((new n.Matrix).skew(s.skewX, s.skewY, e.cx, e.cy).inverse())
                                    }
                                    i = i.skew(e.skewX, e.skewY, e.cx, e.cy)
                                } else
                                    e.flip ? ("x" == e.flip || "y" == e.flip ? e.offset = null == e.offset ? this.bbox()["c" + e.flip] : e.offset : null == e.offset ? (r = this.bbox(),
                                            e.flip = r.cx,
                                            e.offset = r.cy) : e.flip = e.offset,
                                        i = (new n.Matrix).flip(e.flip, e.offset)) : null == e.x && null == e.y || (t ? i = i.translate(e.x, e.y) : (null != e.x && (i.e = e.x),
                                        null != e.y && (i.f = e.y)));
                                return this.attr("transform", i)
                            }
                        }),
                        n.extend(n.FX, {
                            transform: function(e, t) {
                                var i, r, s = this.target();
                                return "object" != typeof e ? (i = new n.Matrix(s).extract(),
                                    "string" == typeof e ? i[e] : i) : (t = !!t || !!e.relative,
                                    null != e.a ? i = new n.Matrix(e) : null != e.rotation ? (g(e, s),
                                        i = new n.Rotate(e.rotation, e.cx, e.cy)) : null != e.scale || null != e.scaleX || null != e.scaleY ? (g(e, s),
                                        e.scaleX = null != e.scale ? e.scale : null != e.scaleX ? e.scaleX : 1,
                                        e.scaleY = null != e.scale ? e.scale : null != e.scaleY ? e.scaleY : 1,
                                        i = new n.Scale(e.scaleX, e.scaleY, e.cx, e.cy)) : null != e.skewX || null != e.skewY ? (g(e, s),
                                        e.skewX = null != e.skewX ? e.skewX : 0,
                                        e.skewY = null != e.skewY ? e.skewY : 0,
                                        i = new n.Skew(e.skewX, e.skewY, e.cx, e.cy)) : e.flip ? ("x" == e.flip || "y" == e.flip ? e.offset = null == e.offset ? s.bbox()["c" + e.flip] : e.offset : null == e.offset ? (r = s.bbox(),
                                            e.flip = r.cx,
                                            e.offset = r.cy) : e.flip = e.offset,
                                        i = (new n.Matrix).flip(e.flip, e.offset)) : null == e.x && null == e.y || (i = new n.Translate(e.x, e.y)),
                                    i ? (i.relative = t,
                                        this.last().transforms.push(i),
                                        this._callStart()) : this)
                            }
                        }),
                        n.extend(n.Element, {
                            untransform: function() {
                                return this.attr("transform", null)
                            },
                            matrixify: function() {
                                var e = (this.attr("transform") || "").split(n.regex.transforms).slice(0, -1).map(function(e) {
                                    var t = e.trim().split("(");
                                    return [t[0], t[1].split(n.regex.delimiter).map(function(e) {
                                        return parseFloat(e)
                                    })]
                                }).reduce(function(e, t) {
                                    return "matrix" == t[0] ? e.multiply(p(t[1])) : e[t[0]].apply(e, t[1])
                                }, new n.Matrix);
                                return e
                            },
                            toParent: function(e) {
                                if (this == e)
                                    return this;
                                var t = this.screenCTM(),
                                    n = e.screenCTM().inverse();
                                return this.addTo(e).untransform().transform(n.multiply(t)),
                                    this
                            },
                            toDoc: function() {
                                return this.toParent(this.doc())
                            }
                        }),
                        n.Transformation = n.invent({
                            create: function(e, t) {
                                if (arguments.length > 1 && "boolean" != typeof t)
                                    return this.constructor.call(this, [].slice.call(arguments));
                                if (Array.isArray(e))
                                    for (var n = 0, i = this.arguments.length; n < i; ++n)
                                        this[this.arguments[n]] = e[n];
                                else if ("object" == typeof e)
                                    for (var n = 0, i = this.arguments.length; n < i; ++n)
                                        this[this.arguments[n]] = e[this.arguments[n]];
                                this.inversed = !1,
                                    !0 === t && (this.inversed = !0)
                            },
                            extend: {
                                arguments: [],
                                method: "",
                                at: function(e) {
                                    for (var t = [], i = 0, r = this.arguments.length; i < r; ++i)
                                        t.push(this[this.arguments[i]]);
                                    var s = this._undo || new n.Matrix;
                                    return s = (new n.Matrix).morph(n.Matrix.prototype[this.method].apply(s, t)).at(e),
                                        this.inversed ? s.inverse() : s
                                },
                                undo: function(e) {
                                    for (var t = 0, i = this.arguments.length; t < i; ++t)
                                        e[this.arguments[t]] = void 0 === this[this.arguments[t]] ? 0 : e[this.arguments[t]];
                                    return e.cx = this.cx,
                                        e.cy = this.cy,
                                        this._undo = new(n[d(this.method)])(e, !0).at(1),
                                        this
                                }
                            }
                        }),
                        n.Translate = n.invent({
                            parent: n.Matrix,
                            inherit: n.Transformation,
                            create: function(e, t) {
                                this.constructor.apply(this, [].slice.call(arguments))
                            },
                            extend: {
                                arguments: ["transformedX", "transformedY"],
                                method: "translate"
                            }
                        }),
                        n.Rotate = n.invent({
                            parent: n.Matrix,
                            inherit: n.Transformation,
                            create: function(e, t) {
                                this.constructor.apply(this, [].slice.call(arguments))
                            },
                            extend: {
                                arguments: ["rotation", "cx", "cy"],
                                method: "rotate",
                                at: function(e) {
                                    var t = (new n.Matrix).rotate((new n.Number).morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(e), this.cx, this.cy);
                                    return this.inversed ? t.inverse() : t
                                },
                                undo: function(e) {
                                    return this._undo = e,
                                        this
                                }
                            }
                        }),
                        n.Scale = n.invent({
                            parent: n.Matrix,
                            inherit: n.Transformation,
                            create: function(e, t) {
                                this.constructor.apply(this, [].slice.call(arguments))
                            },
                            extend: {
                                arguments: ["scaleX", "scaleY", "cx", "cy"],
                                method: "scale"
                            }
                        }),
                        n.Skew = n.invent({
                            parent: n.Matrix,
                            inherit: n.Transformation,
                            create: function(e, t) {
                                this.constructor.apply(this, [].slice.call(arguments))
                            },
                            extend: {
                                arguments: ["skewX", "skewY", "cx", "cy"],
                                method: "skew"
                            }
                        }),
                        n.extend(n.Element, {
                            style: function(e, t) {
                                if (0 == arguments.length)
                                    return this.node.style.cssText || "";
                                if (arguments.length < 2)
                                    if ("object" == typeof e)
                                        for (t in e)
                                            this.style(t, e[t]);
                                    else {
                                        if (!n.regex.isCss.test(e))
                                            return this.node.style[u(e)];
                                        for (e = e.split(/\s*;\s*/).filter(function(e) {
                                                return !!e
                                            }).map(function(e) {
                                                return e.split(/\s*:\s*/)
                                            }); t = e.pop();)
                                            this.style(t[0], t[1])
                                    }
                                else
                                    this.node.style[u(e)] = null === t || n.regex.isBlank.test(t) ? "" : t;
                                return this
                            }
                        }),
                        n.Parent = n.invent({
                            create: function(e) {
                                this.constructor.call(this, e)
                            },
                            inherit: n.Element,
                            extend: {
                                children: function() {
                                    return n.utils.map(n.utils.filterSVGElements(this.node.childNodes), function(e) {
                                        return n.adopt(e)
                                    })
                                },
                                add: function(e, t) {
                                    return null == t ? this.node.appendChild(e.node) : e.node != this.node.childNodes[t] && this.node.insertBefore(e.node, this.node.childNodes[t]),
                                        this
                                },
                                put: function(e, t) {
                                    return this.add(e, t),
                                        e
                                },
                                has: function(e) {
                                    return this.index(e) >= 0
                                },
                                index: function(e) {
                                    return [].slice.call(this.node.childNodes).indexOf(e.node)
                                },
                                get: function(e) {
                                    return n.adopt(this.node.childNodes[e])
                                },
                                first: function() {
                                    return this.get(0)
                                },
                                last: function() {
                                    return this.get(this.node.childNodes.length - 1)
                                },
                                each: function(e, t) {
                                    var i, r, s = this.children();
                                    for (i = 0,
                                        r = s.length; i < r; i++)
                                        s[i] instanceof n.Element && e.apply(s[i], [i, s]),
                                        t && s[i] instanceof n.Container && s[i].each(e, t);
                                    return this
                                },
                                removeElement: function(e) {
                                    return this.node.removeChild(e.node),
                                        this
                                },
                                clear: function() {
                                    for (; this.node.hasChildNodes();)
                                        this.node.removeChild(this.node.lastChild);
                                    return delete this._defs,
                                        this
                                },
                                defs: function() {
                                    return this.doc().defs()
                                }
                            }
                        }),
                        n.extend(n.Parent, {
                            ungroup: function(e, t) {
                                return 0 === t || this instanceof n.Defs || this.node == n.parser.draw ? this : (e = e || (this instanceof n.Doc ? this : this.parent(n.Parent)),
                                    t = t || 1 / 0,
                                    this.each(function() {
                                        return this instanceof n.Defs ? this : this instanceof n.Parent ? this.ungroup(e, t - 1) : this.toParent(e)
                                    }),
                                    this.node.firstChild || this.remove(),
                                    this)
                            },
                            flatten: function(e, t) {
                                return this.ungroup(e, t)
                            }
                        }),
                        n.Container = n.invent({
                            create: function(e) {
                                this.constructor.call(this, e)
                            },
                            inherit: n.Parent
                        }),
                        n.ViewBox = n.invent({
                            create: function(e) {
                                var t, i, r, s, a, o, l, u = 1,
                                    d = 1,
                                    c = /[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?/gi;
                                if (e instanceof n.Element) {
                                    for (o = e,
                                        l = e,
                                        a = (e.attr("viewBox") || "").match(c),
                                        e.bbox,
                                        r = new n.Number(e.width()),
                                        s = new n.Number(e.height());
                                        "%" == r.unit;)
                                        u *= r.value,
                                        r = new n.Number(o instanceof n.Doc ? o.parent().offsetWidth : o.parent().width()),
                                        o = o.parent();
                                    for (;
                                        "%" == s.unit;)
                                        d *= s.value,
                                        s = new n.Number(l instanceof n.Doc ? l.parent().offsetHeight : l.parent().height()),
                                        l = l.parent();
                                    this.x = 0,
                                        this.y = 0,
                                        this.width = r * u,
                                        this.height = s * d,
                                        this.zoom = 1,
                                        a && (t = parseFloat(a[0]),
                                            i = parseFloat(a[1]),
                                            r = parseFloat(a[2]),
                                            s = parseFloat(a[3]),
                                            this.zoom = this.width / this.height > r / s ? this.height / s : this.width / r,
                                            this.x = t,
                                            this.y = i,
                                            this.width = r,
                                            this.height = s)
                                } else
                                    e = "string" == typeof e ? e.match(c).map(function(e) {
                                        return parseFloat(e)
                                    }) : Array.isArray(e) ? e : "object" == typeof e ? [e.x, e.y, e.width, e.height] : 4 == arguments.length ? [].slice.call(arguments) : [0, 0, 0, 0],
                                    this.x = e[0],
                                    this.y = e[1],
                                    this.width = e[2],
                                    this.height = e[3]
                            },
                            extend: {
                                toString: function() {
                                    return this.x + " " + this.y + " " + this.width + " " + this.height
                                },
                                morph: function(e, t, i, r) {
                                    return this.destination = new n.ViewBox(e, t, i, r),
                                        this
                                },
                                at: function(e) {
                                    return this.destination ? new n.ViewBox([this.x + (this.destination.x - this.x) * e, this.y + (this.destination.y - this.y) * e, this.width + (this.destination.width - this.width) * e, this.height + (this.destination.height - this.height) * e]) : this
                                }
                            },
                            parent: n.Container,
                            construct: {
                                viewbox: function(e, t, i, r) {
                                    return 0 == arguments.length ? new n.ViewBox(this) : this.attr("viewBox", new n.ViewBox(e, t, i, r))
                                }
                            }
                        }),
                        ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function(e) {
                            n.Element.prototype[e] = function(t) {
                                return n.on(this.node, e, t),
                                    this
                            }
                        }),
                        n.listeners = [],
                        n.handlerMap = [],
                        n.listenerId = 0,
                        n.on = function(e, t, i, r, s) {
                            var a = i.bind(r || e.instance || e),
                                o = (n.handlerMap.indexOf(e) + 1 || n.handlerMap.push(e)) - 1,
                                l = t.split(".")[0],
                                u = t.split(".")[1] || "*";
                            n.listeners[o] = n.listeners[o] || {},
                                n.listeners[o][l] = n.listeners[o][l] || {},
                                n.listeners[o][l][u] = n.listeners[o][l][u] || {},
                                i._svgjsListenerId || (i._svgjsListenerId = ++n.listenerId),
                                n.listeners[o][l][u][i._svgjsListenerId] = a,
                                e.addEventListener(l, a, s || !1)
                        },
                        n.off = function(e, t, i) {
                            var r = n.handlerMap.indexOf(e),
                                s = t && t.split(".")[0],
                                a = t && t.split(".")[1],
                                o = "";
                            if (-1 != r)
                                if (i) {
                                    if ("function" == typeof i && (i = i._svgjsListenerId),
                                        !i)
                                        return;
                                    n.listeners[r][s] && n.listeners[r][s][a || "*"] && (e.removeEventListener(s, n.listeners[r][s][a || "*"][i], !1),
                                        delete n.listeners[r][s][a || "*"][i])
                                } else if (a && s) {
                                if (n.listeners[r][s] && n.listeners[r][s][a]) {
                                    for (i in n.listeners[r][s][a])
                                        n.off(e, [s, a].join("."), i);
                                    delete n.listeners[r][s][a]
                                }
                            } else if (a)
                                for (t in n.listeners[r])
                                    for (o in n.listeners[r][t])
                                        a === o && n.off(e, [t, a].join("."));
                            else if (s) {
                                if (n.listeners[r][s]) {
                                    for (o in n.listeners[r][s])
                                        n.off(e, [s, o].join("."));
                                    delete n.listeners[r][s]
                                }
                            } else {
                                for (t in n.listeners[r])
                                    n.off(e, t);
                                delete n.listeners[r],
                                    delete n.handlerMap[r]
                            }
                        },
                        n.extend(n.Element, {
                            on: function(e, t, i, r) {
                                return n.on(this.node, e, t, i, r),
                                    this
                            },
                            off: function(e, t) {
                                return n.off(this.node, e, t),
                                    this
                            },
                            fire: function(t, i) {
                                return t instanceof e.Event ? this.node.dispatchEvent(t) : this.node.dispatchEvent(t = new n.CustomEvent(t, {
                                        detail: i,
                                        cancelable: !0
                                    })),
                                    this._event = t,
                                    this
                            },
                            event: function() {
                                return this._event
                            }
                        }),
                        n.Defs = n.invent({
                            create: "defs",
                            inherit: n.Container
                        }),
                        n.G = n.invent({
                            create: "g",
                            inherit: n.Container,
                            extend: {
                                x: function(e) {
                                    return null == e ? this.transform("x") : this.transform({
                                        x: e - this.x()
                                    }, !0)
                                },
                                y: function(e) {
                                    return null == e ? this.transform("y") : this.transform({
                                        y: e - this.y()
                                    }, !0)
                                },
                                cx: function(e) {
                                    return null == e ? this.gbox().cx : this.x(e - this.gbox().width / 2)
                                },
                                cy: function(e) {
                                    return null == e ? this.gbox().cy : this.y(e - this.gbox().height / 2)
                                },
                                gbox: function() {
                                    var e = this.bbox(),
                                        t = this.transform();
                                    return e.x += t.x,
                                        e.x2 += t.x,
                                        e.cx += t.x,
                                        e.y += t.y,
                                        e.y2 += t.y,
                                        e.cy += t.y,
                                        e
                                }
                            },
                            construct: {
                                group: function() {
                                    return this.put(new n.G)
                                }
                            }
                        }),
                        n.Doc = n.invent({
                            create: function(e) {
                                e && ("svg" == (e = "string" == typeof e ? t.getElementById(e) : e).nodeName ? this.constructor.call(this, e) : (this.constructor.call(this, n.create("svg")),
                                        e.appendChild(this.node),
                                        this.size("100%", "100%")),
                                    this.namespace().defs())
                            },
                            inherit: n.Container,
                            extend: {
                                namespace: function() {
                                    return this.attr({
                                        xmlns: n.ns,
                                        version: "1.1"
                                    }).attr("xmlns:xlink", n.xlink, n.xmlns).attr("xmlns:svgjs", n.svgjs, n.xmlns)
                                },
                                defs: function() {
                                    var e;
                                    return this._defs || ((e = this.node.getElementsByTagName("defs")[0]) ? this._defs = n.adopt(e) : this._defs = new n.Defs,
                                            this.node.appendChild(this._defs.node)),
                                        this._defs
                                },
                                parent: function() {
                                    return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null
                                },
                                spof: function() {
                                    var e = this.node.getScreenCTM();
                                    return e && this.style("left", -e.e % 1 + "px").style("top", -e.f % 1 + "px"),
                                        this
                                },
                                remove: function() {
                                    return this.parent() && this.parent().removeChild(this.node),
                                        this
                                },
                                clear: function() {
                                    for (; this.node.hasChildNodes();)
                                        this.node.removeChild(this.node.lastChild);
                                    return delete this._defs,
                                        n.parser.draw.parentNode || this.node.appendChild(n.parser.draw),
                                        this
                                },
                                clone: function(e) {
                                    this.writeDataToDom();
                                    var t = this.node,
                                        n = v(t.cloneNode(!0));
                                    return e ? (e.node || e).appendChild(n.node) : t.parentNode.insertBefore(n.node, t.nextSibling),
                                        n
                                }
                            }
                        }),
                        n.extend(n.Element, {
                            siblings: function() {
                                return this.parent().children()
                            },
                            position: function() {
                                return this.parent().index(this)
                            },
                            next: function() {
                                return this.siblings()[this.position() + 1]
                            },
                            previous: function() {
                                return this.siblings()[this.position() - 1]
                            },
                            forward: function() {
                                var e = this.position() + 1,
                                    t = this.parent();
                                return t.removeElement(this).add(this, e),
                                    t instanceof n.Doc && t.node.appendChild(t.defs().node),
                                    this
                            },
                            backward: function() {
                                var e = this.position();
                                return e > 0 && this.parent().removeElement(this).add(this, e - 1),
                                    this
                            },
                            front: function() {
                                var e = this.parent();
                                return e.node.appendChild(this.node),
                                    e instanceof n.Doc && e.node.appendChild(e.defs().node),
                                    this
                            },
                            back: function() {
                                return this.position() > 0 && this.parent().removeElement(this).add(this, 0),
                                    this
                            },
                            before: function(e) {
                                e.remove();
                                var t = this.position();
                                return this.parent().add(e, t),
                                    this
                            },
                            after: function(e) {
                                e.remove();
                                var t = this.position();
                                return this.parent().add(e, t + 1),
                                    this
                            }
                        }),
                        n.Mask = n.invent({
                            create: function() {
                                this.constructor.call(this, n.create("mask")),
                                    this.targets = []
                            },
                            inherit: n.Container,
                            extend: {
                                remove: function() {
                                    for (var e = this.targets.length - 1; e >= 0; e--)
                                        this.targets[e] && this.targets[e].unmask();
                                    return this.targets = [],
                                        n.Element.prototype.remove.call(this),
                                        this
                                }
                            },
                            construct: {
                                mask: function() {
                                    return this.defs().put(new n.Mask)
                                }
                            }
                        }),
                        n.extend(n.Element, {
                            maskWith: function(e) {
                                return this.masker = e instanceof n.Mask ? e : this.parent().mask().add(e),
                                    this.masker.targets.push(this),
                                    this.attr("mask", 'url("#' + this.masker.attr("id") + '")')
                            },
                            unmask: function() {
                                return delete this.masker,
                                    this.attr("mask", null)
                            }
                        }),
                        n.ClipPath = n.invent({
                            create: function() {
                                this.constructor.call(this, n.create("clipPath")),
                                    this.targets = []
                            },
                            inherit: n.Container,
                            extend: {
                                remove: function() {
                                    for (var e = this.targets.length - 1; e >= 0; e--)
                                        this.targets[e] && this.targets[e].unclip();
                                    return this.targets = [],
                                        this.parent().removeElement(this),
                                        this
                                }
                            },
                            construct: {
                                clip: function() {
                                    return this.defs().put(new n.ClipPath)
                                }
                            }
                        }),
                        n.extend(n.Element, {
                            clipWith: function(e) {
                                return this.clipper = e instanceof n.ClipPath ? e : this.parent().clip().add(e),
                                    this.clipper.targets.push(this),
                                    this.attr("clip-path", 'url("#' + this.clipper.attr("id") + '")')
                            },
                            unclip: function() {
                                return delete this.clipper,
                                    this.attr("clip-path", null)
                            }
                        }),
                        n.Gradient = n.invent({
                            create: function(e) {
                                this.constructor.call(this, n.create(e + "Gradient")),
                                    this.type = e
                            },
                            inherit: n.Container,
                            extend: {
                                at: function(e, t, i) {
                                    return this.put(new n.Stop).update(e, t, i)
                                },
                                update: function(e) {
                                    return this.clear(),
                                        "function" == typeof e && e.call(this, this),
                                        this
                                },
                                fill: function() {
                                    return "url(#" + this.id() + ")"
                                },
                                toString: function() {
                                    return this.fill()
                                },
                                attr: function(e, t, i) {
                                    return "transform" == e && (e = "gradientTransform"),
                                        n.Container.prototype.attr.call(this, e, t, i)
                                }
                            },
                            construct: {
                                gradient: function(e, t) {
                                    return this.defs().gradient(e, t)
                                }
                            }
                        }),
                        n.extend(n.Gradient, n.FX, {
                            from: function(e, t) {
                                return "radial" == (this._target || this).type ? this.attr({
                                    fx: new n.Number(e),
                                    fy: new n.Number(t)
                                }) : this.attr({
                                    x1: new n.Number(e),
                                    y1: new n.Number(t)
                                })
                            },
                            to: function(e, t) {
                                return "radial" == (this._target || this).type ? this.attr({
                                    cx: new n.Number(e),
                                    cy: new n.Number(t)
                                }) : this.attr({
                                    x2: new n.Number(e),
                                    y2: new n.Number(t)
                                })
                            }
                        }),
                        n.extend(n.Defs, {
                            gradient: function(e, t) {
                                return this.put(new n.Gradient(e)).update(t)
                            }
                        }),
                        n.Stop = n.invent({
                            create: "stop",
                            inherit: n.Element,
                            extend: {
                                update: function(e) {
                                    return ("number" == typeof e || e instanceof n.Number) && (e = {
                                            offset: arguments[0],
                                            color: arguments[1],
                                            opacity: arguments[2]
                                        }),
                                        null != e.opacity && this.attr("stop-opacity", e.opacity),
                                        null != e.color && this.attr("stop-color", e.color),
                                        null != e.offset && this.attr("offset", new n.Number(e.offset)),
                                        this
                                }
                            }
                        }),
                        n.Pattern = n.invent({
                            create: "pattern",
                            inherit: n.Container,
                            extend: {
                                fill: function() {
                                    return "url(#" + this.id() + ")"
                                },
                                update: function(e) {
                                    return this.clear(),
                                        "function" == typeof e && e.call(this, this),
                                        this
                                },
                                toString: function() {
                                    return this.fill()
                                },
                                attr: function(e, t, i) {
                                    return "transform" == e && (e = "patternTransform"),
                                        n.Container.prototype.attr.call(this, e, t, i)
                                }
                            },
                            construct: {
                                pattern: function(e, t, n) {
                                    return this.defs().pattern(e, t, n)
                                }
                            }
                        }),
                        n.extend(n.Defs, {
                            pattern: function(e, t, i) {
                                return this.put(new n.Pattern).update(i).attr({
                                    x: 0,
                                    y: 0,
                                    width: e,
                                    height: t,
                                    patternUnits: "userSpaceOnUse"
                                })
                            }
                        }),
                        n.Shape = n.invent({
                            create: function(e) {
                                this.constructor.call(this, e)
                            },
                            inherit: n.Element
                        }),
                        n.Bare = n.invent({
                            create: function(e, t) {
                                if (this.constructor.call(this, n.create(e)),
                                    t)
                                    for (var i in t.prototype)
                                        "function" == typeof t.prototype[i] && (this[i] = t.prototype[i])
                            },
                            inherit: n.Element,
                            extend: {
                                words: function(e) {
                                    for (; this.node.hasChildNodes();)
                                        this.node.removeChild(this.node.lastChild);
                                    return this.node.appendChild(t.createTextNode(e)),
                                        this
                                }
                            }
                        }),
                        n.extend(n.Parent, {
                            element: function(e, t) {
                                return this.put(new n.Bare(e, t))
                            }
                        }),
                        n.Symbol = n.invent({
                            create: "symbol",
                            inherit: n.Container,
                            construct: {
                                symbol: function() {
                                    return this.put(new n.Symbol)
                                }
                            }
                        }),
                        n.Use = n.invent({
                            create: "use",
                            inherit: n.Shape,
                            extend: {
                                element: function(e, t) {
                                    return this.attr("href", (t || "") + "#" + e, n.xlink)
                                }
                            },
                            construct: {
                                use: function(e, t) {
                                    return this.put(new n.Use).element(e, t)
                                }
                            }
                        }),
                        n.Rect = n.invent({
                            create: "rect",
                            inherit: n.Shape,
                            construct: {
                                rect: function(e, t) {
                                    return this.put(new n.Rect).size(e, t)
                                }
                            }
                        }),
                        n.Circle = n.invent({
                            create: "circle",
                            inherit: n.Shape,
                            construct: {
                                circle: function(e) {
                                    return this.put(new n.Circle).rx(new n.Number(e).divide(2)).move(0, 0)
                                }
                            }
                        }),
                        n.extend(n.Circle, n.FX, {
                            rx: function(e) {
                                return this.attr("r", e)
                            },
                            ry: function(e) {
                                return this.rx(e)
                            }
                        }),
                        n.Ellipse = n.invent({
                            create: "ellipse",
                            inherit: n.Shape,
                            construct: {
                                ellipse: function(e, t) {
                                    return this.put(new n.Ellipse).size(e, t).move(0, 0)
                                }
                            }
                        }),
                        n.extend(n.Ellipse, n.Rect, n.FX, {
                            rx: function(e) {
                                return this.attr("rx", e)
                            },
                            ry: function(e) {
                                return this.attr("ry", e)
                            }
                        }),
                        n.extend(n.Circle, n.Ellipse, {
                            x: function(e) {
                                return null == e ? this.cx() - this.rx() : this.cx(e + this.rx())
                            },
                            y: function(e) {
                                return null == e ? this.cy() - this.ry() : this.cy(e + this.ry())
                            },
                            cx: function(e) {
                                return null == e ? this.attr("cx") : this.attr("cx", e)
                            },
                            cy: function(e) {
                                return null == e ? this.attr("cy") : this.attr("cy", e)
                            },
                            width: function(e) {
                                return null == e ? 2 * this.rx() : this.rx(new n.Number(e).divide(2))
                            },
                            height: function(e) {
                                return null == e ? 2 * this.ry() : this.ry(new n.Number(e).divide(2))
                            },
                            size: function(e, t) {
                                var i = h(this, e, t);
                                return this.rx(new n.Number(i.width).divide(2)).ry(new n.Number(i.height).divide(2))
                            }
                        }),
                        n.Line = n.invent({
                            create: "line",
                            inherit: n.Shape,
                            extend: {
                                array: function() {
                                    return new n.PointArray([
                                        [this.attr("x1"), this.attr("y1")],
                                        [this.attr("x2"), this.attr("y2")]
                                    ])
                                },
                                plot: function(e, t, i, r) {
                                    return null == e ? this.array() : (e = void 0 !== t ? {
                                            x1: e,
                                            y1: t,
                                            x2: i,
                                            y2: r
                                        } : new n.PointArray(e).toLine(),
                                        this.attr(e))
                                },
                                move: function(e, t) {
                                    return this.attr(this.array().move(e, t).toLine())
                                },
                                size: function(e, t) {
                                    var n = h(this, e, t);
                                    return this.attr(this.array().size(n.width, n.height).toLine())
                                }
                            },
                            construct: {
                                line: function(e, t, i, r) {
                                    return n.Line.prototype.plot.apply(this.put(new n.Line), null != e ? [e, t, i, r] : [0, 0, 0, 0])
                                }
                            }
                        }),
                        n.Polyline = n.invent({
                            create: "polyline",
                            inherit: n.Shape,
                            construct: {
                                polyline: function(e) {
                                    return this.put(new n.Polyline).plot(e || new n.PointArray)
                                }
                            }
                        }),
                        n.Polygon = n.invent({
                            create: "polygon",
                            inherit: n.Shape,
                            construct: {
                                polygon: function(e) {
                                    return this.put(new n.Polygon).plot(e || new n.PointArray)
                                }
                            }
                        }),
                        n.extend(n.Polyline, n.Polygon, {
                            array: function() {
                                return this._array || (this._array = new n.PointArray(this.attr("points")))
                            },
                            plot: function(e) {
                                return null == e ? this.array() : this.clear().attr("points", "string" == typeof e ? e : this._array = new n.PointArray(e))
                            },
                            clear: function() {
                                return delete this._array,
                                    this
                            },
                            move: function(e, t) {
                                return this.attr("points", this.array().move(e, t))
                            },
                            size: function(e, t) {
                                var n = h(this, e, t);
                                return this.attr("points", this.array().size(n.width, n.height))
                            }
                        }),
                        n.extend(n.Line, n.Polyline, n.Polygon, {
                            morphArray: n.PointArray,
                            x: function(e) {
                                return null == e ? this.bbox().x : this.move(e, this.bbox().y)
                            },
                            y: function(e) {
                                return null == e ? this.bbox().y : this.move(this.bbox().x, e)
                            },
                            width: function(e) {
                                var t = this.bbox();
                                return null == e ? t.width : this.size(e, t.height)
                            },
                            height: function(e) {
                                var t = this.bbox();
                                return null == e ? t.height : this.size(t.width, e)
                            }
                        }),
                        n.Path = n.invent({
                            create: "path",
                            inherit: n.Shape,
                            extend: {
                                morphArray: n.PathArray,
                                array: function() {
                                    return this._array || (this._array = new n.PathArray(this.attr("d")))
                                },
                                plot: function(e) {
                                    return null == e ? this.array() : this.clear().attr("d", "string" == typeof e ? e : this._array = new n.PathArray(e))
                                },
                                clear: function() {
                                    return delete this._array,
                                        this
                                },
                                move: function(e, t) {
                                    return this.attr("d", this.array().move(e, t))
                                },
                                x: function(e) {
                                    return null == e ? this.bbox().x : this.move(e, this.bbox().y)
                                },
                                y: function(e) {
                                    return null == e ? this.bbox().y : this.move(this.bbox().x, e)
                                },
                                size: function(e, t) {
                                    var n = h(this, e, t);
                                    return this.attr("d", this.array().size(n.width, n.height))
                                },
                                width: function(e) {
                                    return null == e ? this.bbox().width : this.size(e, this.bbox().height)
                                },
                                height: function(e) {
                                    return null == e ? this.bbox().height : this.size(this.bbox().width, e)
                                }
                            },
                            construct: {
                                path: function(e) {
                                    return this.put(new n.Path).plot(e || new n.PathArray)
                                }
                            }
                        }),
                        n.Image = n.invent({
                            create: "image",
                            inherit: n.Shape,
                            extend: {
                                load: function(t) {
                                    if (!t)
                                        return this;
                                    var i = this,
                                        r = new e.Image;
                                    return n.on(r, "load", function() {
                                            n.off(r);
                                            var e = i.parent(n.Pattern);
                                            null !== e && (0 == i.width() && 0 == i.height() && i.size(r.width, r.height),
                                                e && 0 == e.width() && 0 == e.height() && e.size(i.width(), i.height()),
                                                "function" == typeof i._loaded && i._loaded.call(i, {
                                                    width: r.width,
                                                    height: r.height,
                                                    ratio: r.width / r.height,
                                                    url: t
                                                }))
                                        }),
                                        n.on(r, "error", function(e) {
                                            n.off(r),
                                                "function" == typeof i._error && i._error.call(i, e)
                                        }),
                                        this.attr("href", r.src = this.src = t, n.xlink)
                                },
                                loaded: function(e) {
                                    return this._loaded = e,
                                        this
                                },
                                error: function(e) {
                                    return this._error = e,
                                        this
                                }
                            },
                            construct: {
                                image: function(e, t, i) {
                                    return this.put(new n.Image).load(e).size(t || 0, i || t || 0)
                                }
                            }
                        }),
                        n.Text = n.invent({
                            create: function() {
                                this.constructor.call(this, n.create("text")),
                                    this.dom.leading = new n.Number(1.3),
                                    this._rebuild = !0,
                                    this._build = !1,
                                    this.attr("font-family", n.defaults.attrs["font-family"])
                            },
                            inherit: n.Shape,
                            extend: {
                                x: function(e) {
                                    return null == e ? this.attr("x") : this.attr("x", e)
                                },
                                y: function(e) {
                                    var t = this.attr("y"),
                                        n = "number" == typeof t ? t - this.bbox().y : 0;
                                    return null == e ? "number" == typeof t ? t - n : t : this.attr("y", "number" == typeof e.valueOf() ? e + n : e)
                                },
                                cx: function(e) {
                                    return null == e ? this.bbox().cx : this.x(e - this.bbox().width / 2)
                                },
                                cy: function(e) {
                                    return null == e ? this.bbox().cy : this.y(e - this.bbox().height / 2)
                                },
                                text: function(e) {
                                    if (void 0 === e) {
                                        for (var e = "", t = this.node.childNodes, i = 0, r = t.length; i < r; ++i)
                                            0 != i && 3 != t[i].nodeType && 1 == n.adopt(t[i]).dom.newLined && (e += "\n"),
                                            e += t[i].textContent;
                                        return e
                                    }
                                    if (this.clear().build(!0),
                                        "function" == typeof e)
                                        e.call(this, this);
                                    else
                                        for (var i = 0, s = (e = e.split("\n")).length; i < s; i++)
                                            this.tspan(e[i]).newLine();
                                    return this.build(!1).rebuild()
                                },
                                size: function(e) {
                                    return this.attr("font-size", e).rebuild()
                                },
                                leading: function(e) {
                                    return null == e ? this.dom.leading : (this.dom.leading = new n.Number(e),
                                        this.rebuild())
                                },
                                lines: function() {
                                    var e = (this.textPath && this.textPath() || this).node,
                                        t = n.utils.map(n.utils.filterSVGElements(e.childNodes), function(e) {
                                            return n.adopt(e)
                                        });
                                    return new n.Set(t)
                                },
                                rebuild: function(e) {
                                    if ("boolean" == typeof e && (this._rebuild = e),
                                        this._rebuild) {
                                        var t = this,
                                            i = 0,
                                            r = this.dom.leading * new n.Number(this.attr("font-size"));
                                        this.lines().each(function() {
                                                this.dom.newLined && (t.textPath() || this.attr("x", t.attr("x")),
                                                    "\n" == this.text() ? i += r : (this.attr("dy", r + i),
                                                        i = 0))
                                            }),
                                            this.fire("rebuild")
                                    }
                                    return this
                                },
                                build: function(e) {
                                    return this._build = !!e,
                                        this
                                },
                                setData: function(e) {
                                    return this.dom = e,
                                        this.dom.leading = new n.Number(e.leading || 1.3),
                                        this
                                }
                            },
                            construct: {
                                text: function(e) {
                                    return this.put(new n.Text).text(e)
                                },
                                plain: function(e) {
                                    return this.put(new n.Text).plain(e)
                                }
                            }
                        }),
                        n.Tspan = n.invent({
                            create: "tspan",
                            inherit: n.Shape,
                            extend: {
                                text: function(e) {
                                    return null == e ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof e ? e.call(this, this) : this.plain(e),
                                        this)
                                },
                                dx: function(e) {
                                    return this.attr("dx", e)
                                },
                                dy: function(e) {
                                    return this.attr("dy", e)
                                },
                                newLine: function() {
                                    var e = this.parent(n.Text);
                                    return this.dom.newLined = !0,
                                        this.dy(e.dom.leading * e.attr("font-size")).attr("x", e.x())
                                }
                            }
                        }),
                        n.extend(n.Text, n.Tspan, {
                            plain: function(e) {
                                return !1 === this._build && this.clear(),
                                    this.node.appendChild(t.createTextNode(e)),
                                    this
                            },
                            tspan: function(e) {
                                var t = (this.textPath && this.textPath() || this).node,
                                    i = new n.Tspan;
                                return !1 === this._build && this.clear(),
                                    t.appendChild(i.node),
                                    i.text(e)
                            },
                            clear: function() {
                                for (var e = (this.textPath && this.textPath() || this).node; e.hasChildNodes();)
                                    e.removeChild(e.lastChild);
                                return this
                            },
                            length: function() {
                                return this.node.getComputedTextLength()
                            }
                        }),
                        n.TextPath = n.invent({
                            create: "textPath",
                            inherit: n.Parent,
                            parent: n.Text,
                            construct: {
                                morphArray: n.PathArray,
                                path: function(e) {
                                    for (var t = new n.TextPath, i = this.doc().defs().path(e); this.node.hasChildNodes();)
                                        t.node.appendChild(this.node.firstChild);
                                    return this.node.appendChild(t.node),
                                        t.attr("href", "#" + i, n.xlink),
                                        this
                                },
                                array: function() {
                                    var e = this.track();
                                    return e ? e.array() : null
                                },
                                plot: function(e) {
                                    var t = this.track(),
                                        n = null;
                                    return t && (n = t.plot(e)),
                                        null == e ? n : this
                                },
                                track: function() {
                                    var e = this.textPath();
                                    if (e)
                                        return e.reference("href")
                                },
                                textPath: function() {
                                    if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName)
                                        return n.adopt(this.node.firstChild)
                                }
                            }
                        }),
                        n.Nested = n.invent({
                            create: function() {
                                this.constructor.call(this, n.create("svg")),
                                    this.style("overflow", "visible")
                            },
                            inherit: n.Container,
                            construct: {
                                nested: function() {
                                    return this.put(new n.Nested)
                                }
                            }
                        }),
                        n.A = n.invent({
                            create: "a",
                            inherit: n.Container,
                            extend: {
                                to: function(e) {
                                    return this.attr("href", e, n.xlink)
                                },
                                show: function(e) {
                                    return this.attr("show", e, n.xlink)
                                },
                                target: function(e) {
                                    return this.attr("target", e)
                                }
                            },
                            construct: {
                                link: function(e) {
                                    return this.put(new n.A).to(e)
                                }
                            }
                        }),
                        n.extend(n.Element, {
                            linkTo: function(e) {
                                var t = new n.A;
                                return "function" == typeof e ? e.call(t, t) : t.to(e),
                                    this.parent().put(t).put(this)
                            }
                        }),
                        n.Marker = n.invent({
                            create: "marker",
                            inherit: n.Container,
                            extend: {
                                width: function(e) {
                                    return this.attr("markerWidth", e)
                                },
                                height: function(e) {
                                    return this.attr("markerHeight", e)
                                },
                                ref: function(e, t) {
                                    return this.attr("refX", e).attr("refY", t)
                                },
                                update: function(e) {
                                    return this.clear(),
                                        "function" == typeof e && e.call(this, this),
                                        this
                                },
                                toString: function() {
                                    return "url(#" + this.id() + ")"
                                }
                            },
                            construct: {
                                marker: function(e, t, n) {
                                    return this.defs().marker(e, t, n)
                                }
                            }
                        }),
                        n.extend(n.Defs, {
                            marker: function(e, t, i) {
                                return this.put(new n.Marker).size(e, t).ref(e / 2, t / 2).viewbox(0, 0, e, t).attr("orient", "auto").update(i)
                            }
                        }),
                        n.extend(n.Line, n.Polyline, n.Polygon, n.Path, {
                            marker: function(e, t, i, r) {
                                var s = ["marker"];
                                return "all" != e && s.push(e),
                                    s = s.join("-"),
                                    e = arguments[1] instanceof n.Marker ? arguments[1] : this.doc().marker(t, i, r),
                                    this.attr(s, e)
                            }
                        });
                    var o = {
                        stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
                        fill: ["color", "opacity", "rule"],
                        prefix: function(e, t) {
                            return "color" == t ? e : e + "-" + t
                        }
                    };

                    function l(e, t, i, r) {
                        return i + r.replace(n.regex.dots, " .")
                    }

                    function u(e) {
                        return e.toLowerCase().replace(/-(.)/g, function(e, t) {
                            return t.toUpperCase()
                        })
                    }

                    function d(e) {
                        return e.charAt(0).toUpperCase() + e.slice(1)
                    }

                    function c(e) {
                        var t = e.toString(16);
                        return 1 == t.length ? "0" + t : t
                    }

                    function h(e, t, n) {
                        if (null == t || null == n) {
                            var i = e.bbox();
                            null == t ? t = i.width / i.height * n : null == n && (n = i.height / i.width * t)
                        }
                        return {
                            width: t,
                            height: n
                        }
                    }

                    function f(e, t, n) {
                        return {
                            x: t * e.a + n * e.c + 0,
                            y: t * e.b + n * e.d + 0
                        }
                    }

                    function p(e) {
                        return {
                            a: e[0],
                            b: e[1],
                            c: e[2],
                            d: e[3],
                            e: e[4],
                            f: e[5]
                        }
                    }

                    function g(e, t) {
                        e.cx = null == e.cx ? t.bbox().cx : e.cx,
                            e.cy = null == e.cy ? t.bbox().cy : e.cy
                    }

                    function v(t) {
                        for (var i = t.childNodes.length - 1; i >= 0; i--)
                            t.childNodes[i] instanceof e.SVGElement && v(t.childNodes[i]);
                        return n.adopt(t).id(n.eid(t.nodeName))
                    }

                    function m(e) {
                        return null == e.x && (e.x = 0,
                                e.y = 0,
                                e.width = 0,
                                e.height = 0),
                            e.w = e.width,
                            e.h = e.height,
                            e.x2 = e.x + e.width,
                            e.y2 = e.y + e.height,
                            e.cx = e.x + e.width / 2,
                            e.cy = e.y + e.height / 2,
                            e
                    }

                    function _(e) {
                        return Math.abs(e) > 1e-37 ? e : 0
                    }
                    ["fill", "stroke"].forEach(function(e) {
                            var t, i = {};
                            i[e] = function(i) {
                                    if (void 0 === i)
                                        return this;
                                    if ("string" == typeof i || n.Color.isRgb(i) || i && "function" == typeof i.fill)
                                        this.attr(e, i);
                                    else
                                        for (t = o[e].length - 1; t >= 0; t--)
                                            null != i[o[e][t]] && this.attr(o.prefix(e, o[e][t]), i[o[e][t]]);
                                    return this
                                },
                                n.extend(n.Element, n.FX, i)
                        }),
                        n.extend(n.Element, n.FX, {
                            rotate: function(e, t, n) {
                                return this.transform({
                                    rotation: e,
                                    cx: t,
                                    cy: n
                                })
                            },
                            skew: function(e, t, n, i) {
                                return 1 == arguments.length || 3 == arguments.length ? this.transform({
                                    skew: e,
                                    cx: t,
                                    cy: n
                                }) : this.transform({
                                    skewX: e,
                                    skewY: t,
                                    cx: n,
                                    cy: i
                                })
                            },
                            scale: function(e, t, n, i) {
                                return 1 == arguments.length || 3 == arguments.length ? this.transform({
                                    scale: e,
                                    cx: t,
                                    cy: n
                                }) : this.transform({
                                    scaleX: e,
                                    scaleY: t,
                                    cx: n,
                                    cy: i
                                })
                            },
                            translate: function(e, t) {
                                return this.transform({
                                    x: e,
                                    y: t
                                })
                            },
                            flip: function(e, t) {
                                return t = "number" == typeof e ? e : t,
                                    this.transform({
                                        flip: e || "both",
                                        offset: t
                                    })
                            },
                            matrix: function(e) {
                                return this.attr("transform", new n.Matrix(6 == arguments.length ? [].slice.call(arguments) : e))
                            },
                            opacity: function(e) {
                                return this.attr("opacity", e)
                            },
                            dx: function(e) {
                                return this.x(new n.Number(e).plus(this instanceof n.FX ? 0 : this.x()), !0)
                            },
                            dy: function(e) {
                                return this.y(new n.Number(e).plus(this instanceof n.FX ? 0 : this.y()), !0)
                            },
                            dmove: function(e, t) {
                                return this.dx(e).dy(t)
                            }
                        }),
                        n.extend(n.Rect, n.Ellipse, n.Circle, n.Gradient, n.FX, {
                            radius: function(e, t) {
                                var i = (this._target || this).type;
                                return "radial" == i || "circle" == i ? this.attr("r", new n.Number(e)) : this.rx(e).ry(null == t ? e : t)
                            }
                        }),
                        n.extend(n.Path, {
                            length: function() {
                                return this.node.getTotalLength()
                            },
                            pointAt: function(e) {
                                return this.node.getPointAtLength(e)
                            }
                        }),
                        n.extend(n.Parent, n.Text, n.Tspan, n.FX, {
                            font: function(e, t) {
                                if ("object" == typeof e)
                                    for (t in e)
                                        this.font(t, e[t]);
                                return "leading" == e ? this.leading(t) : "anchor" == e ? this.attr("text-anchor", t) : "size" == e || "family" == e || "weight" == e || "stretch" == e || "variant" == e || "style" == e ? this.attr("font-" + e, t) : this.attr(e, t)
                            }
                        }),
                        n.Set = n.invent({
                            create: function(e) {
                                Array.isArray(e) ? this.members = e : this.clear()
                            },
                            extend: {
                                add: function() {
                                    var e, t, n = [].slice.call(arguments);
                                    for (e = 0,
                                        t = n.length; e < t; e++)
                                        this.members.push(n[e]);
                                    return this
                                },
                                remove: function(e) {
                                    var t = this.index(e);
                                    return t > -1 && this.members.splice(t, 1),
                                        this
                                },
                                each: function(e) {
                                    for (var t = 0, n = this.members.length; t < n; t++)
                                        e.apply(this.members[t], [t, this.members]);
                                    return this
                                },
                                clear: function() {
                                    return this.members = [],
                                        this
                                },
                                length: function() {
                                    return this.members.length
                                },
                                has: function(e) {
                                    return this.index(e) >= 0
                                },
                                index: function(e) {
                                    return this.members.indexOf(e)
                                },
                                get: function(e) {
                                    return this.members[e]
                                },
                                first: function() {
                                    return this.get(0)
                                },
                                last: function() {
                                    return this.get(this.members.length - 1)
                                },
                                valueOf: function() {
                                    return this.members
                                },
                                bbox: function() {
                                    if (0 == this.members.length)
                                        return new n.RBox;
                                    var e = this.members[0].rbox(this.members[0].doc());
                                    return this.each(function() {
                                            e = e.merge(this.rbox(this.doc()))
                                        }),
                                        e
                                }
                            },
                            construct: {
                                set: function(e) {
                                    return new n.Set(e)
                                }
                            }
                        }),
                        n.FX.Set = n.invent({
                            create: function(e) {
                                this.set = e
                            }
                        }),
                        n.Set.inherit = function() {
                            var e = [];
                            for (var t in n.Shape.prototype)
                                "function" == typeof n.Shape.prototype[t] && "function" != typeof n.Set.prototype[t] && e.push(t);
                            for (var t in e.forEach(function(e) {
                                        n.Set.prototype[e] = function() {
                                            for (var t = 0, i = this.members.length; t < i; t++)
                                                this.members[t] && "function" == typeof this.members[t][e] && this.members[t][e].apply(this.members[t], arguments);
                                            return "animate" == e ? this.fx || (this.fx = new n.FX.Set(this)) : this
                                        }
                                    }),
                                    e = [],
                                    n.FX.prototype)
                                "function" == typeof n.FX.prototype[t] && "function" != typeof n.FX.Set.prototype[t] && e.push(t);
                            e.forEach(function(e) {
                                n.FX.Set.prototype[e] = function() {
                                    for (var t = 0, n = this.set.members.length; t < n; t++)
                                        this.set.members[t].fx[e].apply(this.set.members[t].fx, arguments);
                                    return this
                                }
                            })
                        },
                        n.extend(n.Element, {
                            data: function(e, t, n) {
                                if ("object" == typeof e)
                                    for (t in e)
                                        this.data(t, e[t]);
                                else if (arguments.length < 2)
                                    try {
                                        return JSON.parse(this.attr("data-" + e))
                                    } catch (t) {
                                        return this.attr("data-" + e)
                                    }
                                else
                                    this.attr("data-" + e, null === t ? null : !0 === n || "string" == typeof t || "number" == typeof t ? t : JSON.stringify(t));
                                return this
                            }
                        }),
                        n.extend(n.Element, {
                            remember: function(e, t) {
                                if ("object" == typeof arguments[0])
                                    for (var t in e)
                                        this.remember(t, e[t]);
                                else {
                                    if (1 == arguments.length)
                                        return this.memory()[e];
                                    this.memory()[e] = t
                                }
                                return this
                            },
                            forget: function() {
                                if (0 == arguments.length)
                                    this._memory = {};
                                else
                                    for (var e = arguments.length - 1; e >= 0; e--)
                                        delete this.memory()[arguments[e]];
                                return this
                            },
                            memory: function() {
                                return this._memory || (this._memory = {})
                            }
                        }),
                        n.get = function(e) {
                            var i = t.getElementById(function(e) {
                                var t = (e || "").toString().match(n.regex.reference);
                                if (t)
                                    return t[1]
                            }(e) || e);
                            return n.adopt(i)
                        },
                        n.select = function(e, i) {
                            return new n.Set(n.utils.map((i || t).querySelectorAll(e), function(e) {
                                return n.adopt(e)
                            }))
                        },
                        n.extend(n.Parent, {
                            select: function(e) {
                                return n.select(e, this.node)
                            }
                        });
                    var y = "abcdef".split("");
                    if ("function" != typeof e.CustomEvent) {
                        var b = function(e, n) {
                            n = n || {
                                bubbles: !1,
                                cancelable: !1,
                                detail: void 0
                            };
                            var i = t.createEvent("CustomEvent");
                            return i.initCustomEvent(e, n.bubbles, n.cancelable, n.detail),
                                i
                        };
                        b.prototype = e.Event.prototype,
                            n.CustomEvent = b
                    } else
                        n.CustomEvent = e.CustomEvent;
                    return function(t) {
                            for (var n = 0, i = ["moz", "webkit"], r = 0; r < i.length && !e.requestAnimationFrame; ++r)
                                t.requestAnimationFrame = t[i[r] + "RequestAnimationFrame"],
                                t.cancelAnimationFrame = t[i[r] + "CancelAnimationFrame"] || t[i[r] + "CancelRequestAnimationFrame"];
                            t.requestAnimationFrame = t.requestAnimationFrame || function(e) {
                                    var i = (new Date).getTime(),
                                        r = Math.max(0, 16 - (i - n)),
                                        s = t.setTimeout(function() {
                                            e(i + r)
                                        }, r);
                                    return n = i + r,
                                        s
                                },
                                t.cancelAnimationFrame = t.cancelAnimationFrame || t.clearTimeout
                        }(e),
                        n
                }(r, r.document)
            }
            .call(t, n, t, e)) || (e.exports = i)
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = v(n(15)),
        r = v(n(6)),
        s = v(n(2)),
        a = v(n(0)),
        o = v(n(1)),
        l = v(n(3)),
        u = v(n(4)),
        d = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(54)),
        c = v(n(1364)),
        h = v(n(1365)),
        f = n(71),
        p = v(n(34)),
        g = v(n(398));

    function v(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var m = function(e) {
        function t(e) {
            (0,
                a.default)(this, t);
            var n = e.dataModel,
                i = e.segmentID,
                o = e.direction,
                u = t._createViewModel(n, i, o),
                d = (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).call(this, (0,
                    r.default)({}, e, {
                    model: u
                })));
            return d._dataModel = n,
                d
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "modelEvents",
                value: function() {
                    return {
                        change: "_onModelChanged"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        "input[name=laneCount]": {
                            observe: "laneCount",
                            onSet: function(e) {
                                return Number(e)
                            },
                            updateModel: function(e, t, n) {
                                return t.target.validity.valid
                            }
                        },
                        ".turns": {
                            observe: "laneCount",
                            visible: !0
                        },
                        ".apply-button": {
                            attributes: [{
                                name: "disabled",
                                observe: "applyEnabled",
                                onGet: _.negate(_.identity)
                            }]
                        },
                        ".warning": {
                            observe: "warningText"
                        }
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .apply-button": "_onApplyClick",
                        "click .cancel-button": "_onCancelClick"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        turnsRegion: ".turns-region"
                    }
                }
            }, {
                key: "childViewEvents",
                value: function() {
                    return {
                        "child:lanes:change": "_onLanesChanged"
                    }
                }
            }, {
                key: "_onLanesChanged",
                value: function() {
                    this._updateHasChanged();
                    var e = this.getChildView("turnsRegion"),
                        n = new c.default;
                    e.children.forEach(function(e) {
                            n.addTurnIndexes(e.model.attributes.angle, e.model.attributes.checkedIndexes)
                        }),
                        this.model.set(t._lanesValidationAttributes(n))
                }
            }, {
                key: "_onModelChanged",
                value: function() {
                    this._updateApplyEnabled(),
                        this._updateTurnModelsLanesCount(),
                        this._updateHasChanged(),
                        this._updateWarningText()
                }
            }, {
                key: "_updateHasChanged",
                value: function() {
                    this.model.set({
                        hasChanged: this._hasChanges()
                    })
                }
            }, {
                key: "_updateApplyEnabled",
                value: function() {
                    this.model.set({
                        applyEnabled: this._shouldEnableApply()
                    })
                }
            }, {
                key: "_updateWarningText",
                value: function() {
                    this.model.set({
                        warningText: this._getWarningText()
                    })
                }
            }, {
                key: "_updateTurnModelsLanesCount",
                value: function() {
                    var e = this;
                    this.model.attributes.turns.forEach(function(t) {
                        t.set({
                            laneCount: e.model.attributes.laneCount
                        })
                    })
                }
            }, {
                key: "_shouldEnableApply",
                value: function() {
                    var e = this.model.attributes,
                        t = e.hasGaps,
                        n = e.hasChanged;
                    return !t && n
                }
            }, {
                key: "_getWarningText",
                value: function() {
                    return this.model.attributes.hasCollisions ? I18n.t("lanes.conflicting_lanes") : ""
                }
            }, {
                key: "_onCancelClick",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "_onApplyClick",
                value: function() {
                    this._hasChanges() && (this._applyChanges(),
                        this.destroy())
                }
            }, {
                key: "_collectModifiedTurnLaneDatas",
                value: function() {
                    return this._getChangedLanesTurnEditViews().reduce(function(e, t) {
                        return (0,
                            r.default)({}, e, (0,
                            i.default)({}, t.getToVertexID(), t.getTurnLaneData()))
                    }, {})
                }
            }, {
                key: "_didTurnsChange",
                value: function() {
                    return this._getChangedLanesTurnEditViews().length > 0
                }
            }, {
                key: "_getChangedLanesTurnEditViews",
                value: function() {
                    return this.getChildView("turnsRegion").children.filter(function(e) {
                        return e.lanesChanged()
                    })
                }
            }, {
                key: "_didLaneCountChange",
                value: function() {
                    var e = this.options,
                        t = e.segmentID,
                        n = e.direction,
                        i = this._dataModel.segments.getObjectById(t).getLaneCount(n);
                    return this.model.attributes.laneCount !== i
                }
            }, {
                key: "_hasChanges",
                value: function() {
                    return this._didTurnsChange() || this._didLaneCountChange()
                }
            }, {
                key: "_applyChanges",
                value: function() {
                    var e = this.options,
                        t = e.segmentID,
                        n = e.direction,
                        i = this._dataModel.segments.getObjectById(t),
                        r = {};
                    this._didLaneCountChange() && (r.laneCount = this.model.attributes.laneCount),
                        this._didTurnsChange() && (r.turnLaneDatas = this._collectModifiedTurnLaneDatas()),
                        this._dataModel.actionManager.add(new g.default(i, n, r))
                }
            }, {
                key: "_showTurnsView",
                value: function() {
                    this.showChildView("turnsRegion", new Marionette.CollectionView({
                        childView: h.default,
                        collection: this.model.attributes.turns,
                        childViewOptions: {
                            dataModel: this._dataModel
                        },
                        childViewTriggers: {
                            "lanes:change": "child:lanes:change"
                        }
                    }))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this._showTurnsView()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes_edit"
                }
            }], [{
                key: "_createViewModel",
                value: function(e, n, i) {
                    var s = e.segments.getObjectById(n),
                        a = s.getLaneCount(i);
                    a = a || 0;
                    var o = d.getLaneAngleCalculator(e, s, i);
                    o.snapAngles();
                    var l = d.getOutgoingEnabledTurns(e, s, i).map(function(t) {
                            return h.default.createTurnViewModel(e, a, t, o.getSnappedAngle(t.getToVertex()))
                        }),
                        u = new c.default;
                    return l.forEach(function(e) {
                            u.addTurnIndexes(e.attributes.angle, e.attributes.checkedIndexes)
                        }),
                        new Backbone.Model((0,
                            r.default)({
                            laneCount: a,
                            hasChanged: !1,
                            fromVertexID: i === f.SEGMENT_LANE_DIRECTION.FWD ? p.default.forwardOf(n).getID() : p.default.reverseOf(n).getID(),
                            turns: new Backbone.Collection(l, {
                                comparator: function(e) {
                                    var t = e.attributes.angle;
                                    return d.toStandardLaneAngle(t)
                                }
                            })
                        }, t._lanesValidationAttributes(u)))
                }
            }, {
                key: "_lanesValidationAttributes",
                value: function(e) {
                    return {
                        hasGaps: e.hasGaps(),
                        hasCollisions: e.hasCollisions()
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = m,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(60),
        r = n(24),
        s = function() {
            function e() {
                this._turnIndexes = new Map
            }
            return e.prototype.addTurnIndexes = function(e, t) {
                    this._turnIndexes.set(e, t)
                },
                e.prototype._indexesHaveGaps = function(e) {
                    return !r.isSequential(e)
                },
                e.prototype.hasGaps = function() {
                    var e = this;
                    return Array.from(this._turnIndexes.values()).some(function(t) {
                        return e._indexesHaveGaps(t)
                    })
                },
                e.prototype.hasCollisions = function() {
                    var e = this._indexesSortedByAngle();
                    return this._hasSortedCollisions(e)
                },
                e.prototype._hasSortedCollisions = function(e) {
                    if (e.length < 2)
                        return !1;
                    for (var t = i.max(e[0]), n = 1; n < e.length; n++) {
                        var r = i.min(e[n]),
                            s = i.max(e[n]);
                        if (r < t)
                            return !0;
                        t = s
                    }
                    return !1
                },
                e.prototype._indexesSortedByAngle = function() {
                    var e = this,
                        t = Array.from(this._turnIndexes.keys());
                    return t.sort(function(e, t) {
                            return e - t
                        }),
                        t.map(function(t) {
                            return e._turnIndexes.get(t) || []
                        })
                },
                e
        }();
    t.default = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = p(n(6)),
        r = p(n(9)),
        s = p(n(2)),
        a = p(n(0)),
        o = p(n(1)),
        l = p(n(3)),
        u = p(n(4)),
        d = p(n(445)),
        c = p(n(1366)),
        h = p(n(201)),
        f = p(n(34));

    function p(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var g = function(e) {
        function t(e) {
            (0,
                a.default)(this, t);
            var n = (0,
                l.default)(this, (t.__proto__ || (0,
                s.default)(t)).apply(this, arguments));
            n._dataModel = e.dataModel;
            var i = n.model.attributes,
                r = i.laneCount,
                o = i.checkedIndexes;
            return n.model.attributes.checkboxes = new Backbone.Collection(n._getCheckboxModels(r, o)),
                n.listenTo(n.model.attributes.checkboxes, "change:checked", n._onCheckboxChange),
                n
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "bindings",
                value: function() {
                    return {
                        ".street-name": "streetName"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        checkboxesRegion: ".checkboxes-region",
                        leftRegion: ".left-turn-lanes-part"
                    }
                }
            }, {
                key: "modelEvents",
                value: function() {
                    return {
                        "change:laneCount": this._onLaneCountChange
                    }
                }
            }, {
                key: "className",
                value: function() {
                    return "turn-lane-edit"
                }
            }, {
                key: "_onCheckboxChange",
                value: function(e) {
                    this._updateCheckedIndexes(),
                        this.trigger("lanes:change")
                }
            }, {
                key: "_onLaneCountChange",
                value: function(e, t) {
                    this.model.attributes.checkboxes.reset(this._getCheckboxModels(t, this._getCheckedIndexes())),
                        this._updateCheckedIndexes()
                }
            }, {
                key: "_updateCheckedIndexes",
                value: function() {
                    this.model.set({
                        checkedIndexes: this._getCheckedIndexes()
                    })
                }
            }, {
                key: "_getCheckboxModels",
                value: function(e, t) {
                    return [].concat((0,
                        r.default)(Array(e).keys())).map(function(e) {
                        return new Backbone.Model({
                            index: e,
                            checked: t.includes(e),
                            uniqueId: _.uniqueId("checkbox")
                        })
                    })
                }
            }, {
                key: "_getCheckedIndexes",
                value: function() {
                    return this.model.attributes.checkboxes.filter(function(e) {
                        return e.attributes.checked
                    }).map(function(e) {
                        return e.attributes.index
                    })
                }
            }, {
                key: "_hasAngle",
                value: function() {
                    return null != this.model.attributes.angle
                }
            }, {
                key: "_getExistingTurnLaneData",
                value: function() {
                    var e = this.model.attributes,
                        t = e.fromVertexID,
                        n = e.toVertexID;
                    return this._dataModel.getTurnGraph().getTurn(f.default.fromID(t), f.default.fromID(n)).getTurnData().getLaneData()
                }
            }, {
                key: "lanesChanged",
                value: function() {
                    var e = this._getExistingTurnLaneData(),
                        t = this.getTurnLaneData();
                    return h.default.hasChanged(e, t)
                }
            }, {
                key: "getTurnLaneData",
                value: function() {
                    var e = this.model.attributes,
                        t = e.checkedIndexes,
                        n = e.angle,
                        i = null,
                        r = null;
                    return t.length > 0 ? (i = _.min(t),
                        r = _.max(t),
                        new h.default(i, r, n)) : null
                }
            }, {
                key: "getToVertexID",
                value: function() {
                    return this.model.attributes.toVertexID
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this.showChildView("checkboxesRegion", new Marionette.CollectionView({
                            childView: c.default,
                            collection: this.model.attributes.checkboxes
                        })),
                        this._hasAngle() && this.showChildView("leftRegion", new d.default({
                            smallArrow: !0,
                            model: new Backbone.Model({
                                angles: [this.model.attributes.angle]
                            })
                        }))
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/turn_lanes_edit"
                }
            }], [{
                key: "createTurnViewModel",
                value: function(e, t, n, r) {
                    var s = n.getToVertex().getSegmentID(),
                        a = {
                            laneCount: t,
                            streetName: e.segments.getObjectById(s).getAddress().getStreetName(),
                            fromVertexID: n.getFromVertex().getID(),
                            toVertexID: n.getToVertex().getID()
                        },
                        o = n.getTurnData().getLaneData();
                    return a = o ? (0,
                            i.default)({}, a, {
                            angle: o.getArrowAngle(),
                            checkedIndexes: o.getLaneIndexes()
                        }) : (0,
                            i.default)({}, a, {
                            angle: r,
                            checkedIndexes: []
                        }),
                        new Backbone.Model(a)
                }
            }]),
            t
    }(Marionette.View);
    t.default = g,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "className",
                value: function() {
                    return "turn-lane-checkbox"
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        "input[type=checkbox]": {
                            observe: "checked",
                            attributes: [{
                                name: "id",
                                observe: "uniqueId"
                            }]
                        },
                        label: {
                            attributes: [{
                                name: "for",
                                observe: "uniqueId"
                            }]
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/turn_lane_checkbox"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(2)),
        r = h(n(0)),
        s = h(n(3)),
        a = h(n(1)),
        o = h(n(4)),
        l = h(n(1368)),
        u = h(n(1370)),
        d = n(210),
        c = h(n(408));

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = 5,
        p = function(e) {
            function t(e) {
                (0,
                    r.default)(this, t);
                var n = (0,
                    s.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, e));
                return n.map = n.options.map,
                    n.selectionManager = n.options.selectionManager,
                    n.landmarks = n.options.selection.concat(),
                    n.dataModel = e.dataModel,
                    n.highlightedVenue = null,
                    n.drawingContext = null,
                    n.model = new Backbone.Model({
                        numVenues: n.options.selection.length,
                        showPendingUpdateRequestAlert: n._hasUpdateRequests(),
                        showAdLockAlert: n._hasAdLockAlert(),
                        showLockLevelAlert: n._isLockedForLevel(),
                        showParkingAlert: n._hasMixedParkingCategory(),
                        showCountAlert: n._hasCountLock(),
                        showDistanceAlert: n._isPlacesTooFar(),
                        maxLandmarksCount: f
                    }),
                    n
            }
            return (0,
                    o.default)(t, e),
                (0,
                    a.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            landmarksCollection: "#mergeLandmarksCollection"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".pending-changes-alert": {
                                observe: "showPendingUpdateRequestAlert",
                                visible: !0
                            },
                            ".ad-lock-alert": {
                                observe: "showAdLockAlert",
                                visible: !0
                            },
                            ".lock-level-alert": {
                                observe: "showLockLevelAlert",
                                visible: !0
                            },
                            ".parking-alert": {
                                observe: "showParkingAlert",
                                visible: !0
                            },
                            ".count-alert": {
                                observe: "showCountAlert",
                                visible: !0
                            },
                            ".distance-alert": {
                                observe: "showDistanceAlert",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/merge-venues"
                    }
                }]),
                (0,
                    a.default)(t, [{
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this.landmarksCollection = new Backbone.Collection(this.landmarks.map(function(t) {
                                return {
                                    lockedForMerge: e._isLockedForMerge(),
                                    venue: t
                                }
                            })),
                            this.showChildView("landmarksCollection", new l.default({
                                collection: this.landmarksCollection
                            })),
                            this.stickit()
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        var t = this.landmarks.map(function(e) {
                                return e.getID()
                            }),
                            n = e.map(function(e) {
                                return e.getID()
                            });
                        return _.intersection(t, n).length > 0
                    }
                }, {
                    key: "_hasUpdateRequests",
                    value: function() {
                        return _.some(this.landmarks, function(e) {
                            return e.hasUpdateRequests()
                        })
                    }
                }, {
                    key: "_hasAdLockAlert",
                    value: function() {
                        return _.some(this.landmarks, function(e) {
                            return e.isAdLocked()
                        })
                    }
                }, {
                    key: "_isLockedForLevel",
                    value: function() {
                        return _.some(this.landmarks, function(e) {
                            return e.requiresModeration()
                        })
                    }
                }, {
                    key: "_hasMixedParkingCategory",
                    value: function() {
                        var e = _.some(this.landmarks, function(e) {
                                return e.isParkingLot()
                            }),
                            t = _.some(this.landmarks, function(e) {
                                return !e.isParkingLot()
                            });
                        return e && t
                    }
                }, {
                    key: "_isLockedForMerge",
                    value: function() {
                        return this._isLockedForLevel() || this._hasUpdateRequests() || this._hasAdLockAlert() || this._hasCountLock() || this._isPlacesTooFar()
                    }
                }, {
                    key: "_hasCountLock",
                    value: function() {
                        return this.landmarks.length > f
                    }
                }, {
                    key: "onChildviewMergeClick",
                    value: function(e) {
                        var t = this,
                            n = new u.default({
                                venues: this.landmarks,
                                dataModel: this.dataModel,
                                mainVenue: e
                            });
                        n.on("doMerge", function(e) {
                                var n = new c.default(e.sourceVenues, e.targetVenues, e.attributes);
                                t.dataModel.actionManager.add(n)
                            }),
                            W.app.layout.getRegion("dialogRegion").show(n)
                    }
                }, {
                    key: "onChildviewRemoveClick",
                    value: function(e) {
                        this.selectionManager.setSelectedModels(_.reject(this.landmarks, function(t) {
                            return t.getID() === e.getID()
                        }))
                    }
                }, {
                    key: "onChildviewCardMouseOver",
                    value: function(e) {
                        this._highlightVenue(e)
                    }
                }, {
                    key: "onChildviewCardMouseLeave",
                    value: function(e) {
                        this._unHighlightVenue(e)
                    }
                }, {
                    key: "_highlightVenue",
                    value: function(e) {
                        this.highlightedVenue !== e && (this.highlightedVenue = e,
                            this._drawGeometry(e.attributes.geometry))
                    }
                }, {
                    key: "_unHighlightVenue",
                    value: function(e) {
                        this.highlightedVenue === e && (this.highlightedVenue = null,
                            this.drawingContext && (this.drawingContext.clear(),
                                this._destroyDrawingContext()))
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this.drawingContext && (this.drawingContext = this.map.getDrawingContext(),
                                this.drawingContext.setStyleMap(d.MergeHGighlightStyleMap),
                                this.drawingContext.moveLayerToTop()),
                            this.drawingContext
                    }
                }, {
                    key: "_drawGeometry",
                    value: function(e) {
                        this._getDrawingContext().addFeatures([new OL.Feature.Vector(e.clone())])
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        null != this.drawingContext && (this.drawingContext.destroy(),
                            this.drawingContext = null)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "_isPlacesTooFar",
                    value: function() {
                        for (var e = 0; e < this.landmarks.length; e++)
                            for (var t = 0; t < e; t++)
                                if (this._isLandmarksTooFar(this.landmarks[e], this.landmarks[t], 400))
                                    return !0;
                        return !1
                    }
                }, {
                    key: "_isLandmarksTooFar",
                    value: function(e, t, n) {
                        return e.geometry.distanceTo(t.geometry) > 400
                    }
                }, {
                    key: "toggleEnabled",
                    value: function(e) {
                        e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                    }
                }]),
                t
        }(Marionette.View);
    t.default = p,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(1369));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "childView",
                value: function() {
                    return l.default
                }
            }, {
                key: "onChildviewMergeClick",
                value: function(e) {
                    this.trigger("mergeClick", e)
                }
            }, {
                key: "onChildviewRemoveClick",
                value: function(e) {
                    this.trigger("removeClick", e)
                }
            }, {
                key: "onChildviewCardMouseOver",
                value: function(e) {
                    this.trigger("cardMouseOver", e)
                }
            }, {
                key: "onChildviewCardMouseLeave",
                value: function(e) {
                    this.trigger("cardMouseLeave", e)
                }
            }]),
            t
    }(Marionette.CollectionView);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(3)),
        a = u(n(1)),
        o = u(n(4)),
        l = u(n(16));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return n._venue = n.model.get("venue"),
                n.viewModel = new Backbone.Model({
                    lockedForMerge: n.model.get("lockedForMerge"),
                    venue: n._venue,
                    lockedForLevel: n._isLockedForLevel(),
                    hasPURs: n._venue.hasUpdateRequests(),
                    isNew: n._venue.isNew(),
                    mergeButtonDisabled: n.isMergeButtonDisabled(),
                    isPolygon: n._venue.is2D()
                }),
                n
        }
        return (0,
                o.default)(t, e),
            (0,
                a.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "click .do-merge": "_onDoMergeButtonClick",
                        "click .do-remove": "_onCardRemoveButtonClick",
                        "mouseover .merge-item": "_onCardMouseOver",
                        "mouseleave .merge-item": "_onCardMouseLeave",
                        "click .purs": "_onPURsBadgeClicked"
                    }
                }
            }, {
                key: "triggers",
                value: function() {
                    return {
                        mergeClick: "mergeClick"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".merge-item": {
                            classes: {
                                disabled: {
                                    observe: "mergeButtonDisabled"
                                }
                            }
                        },
                        ".lock": {
                            observe: "lockedForLevel",
                            visible: !0
                        },
                        ".purs": {
                            observe: "hasPURs",
                            visible: !0
                        },
                        ".new-badge": {
                            observe: "isNew",
                            visible: !0
                        },
                        ".polygon-icon": {
                            observe: "isPolygon",
                            visible: !0
                        },
                        ".point-icon": {
                            observe: "isPolygon",
                            onGet: _.negate(_.identity),
                            visible: !0
                        },
                        ".icon-container": {
                            classes: {
                                disabled: {
                                    observe: ["hasPURs", "lockedForLevel", "isNew"],
                                    onGet: function(e) {
                                        return _.some(e)
                                    }
                                }
                            }
                        }
                    }
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        badgeTooltips: ".badge-tooltip"
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/landmark-item-view"
                }
            }]),
            (0,
                a.default)(t, [{
                key: "isMergeButtonDisabled",
                value: function() {
                    return this.model.get("lockedForMerge") || !this._venue.canMergeTo()
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this.viewModel, this.bindings()),
                        this.ui.badgeTooltips.tooltip()
                }
            }, {
                key: "_onDoMergeButtonClick",
                value: function() {
                    this.viewModel.get("lockedForMerge") || this.trigger("mergeClick", this._venue)
                }
            }, {
                key: "_onCardRemoveButtonClick",
                value: function() {
                    this.trigger("removeClick", this._venue)
                }
            }, {
                key: "_onCardMouseOver",
                value: function() {
                    this.trigger("cardMouseOver", this._venue)
                }
            }, {
                key: "_onCardMouseLeave",
                value: function() {
                    this.trigger("cardMouseLeave", this._venue)
                }
            }, {
                key: "_onPURsBadgeClicked",
                value: function() {
                    return W.commands.execute("place_updates:list", this.viewModel.get("venue"))
                }
            }, {
                key: "_getCategoryClassName",
                value: function() {
                    var e = this._venue.attributes.categories,
                        t = this._venue.getMainCategory();
                    return (e[0] + " " + t).toLowerCase()
                }
            }, {
                key: "_isLockedForLevel",
                value: function() {
                    return this._venue.requiresModeration()
                }
            }, {
                key: "onBeforeDestroy",
                value: function() {
                    this.ui.badgeTooltips.tooltip("destroy")
                }
            }, {
                key: "templateContext",
                value: function() {
                    var e = this._venue;
                    return {
                        categoryClass: this._getCategoryClassName(),
                        name: e.attributes.name,
                        createdBy: e.attributes.createdBy,
                        createdOn: e.attributes.createdOn,
                        lockRank: l.default.formatRank(e.attributes.lockRank),
                        pursCount: e.attributes.venueUpdateRequests.length
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = k(n(7)),
        r = k(n(15)),
        s = k(n(2)),
        a = k(n(0)),
        o = k(n(1)),
        l = k(n(3)),
        u = k(n(4)),
        d = k(n(222)),
        c = k(n(162)),
        h = k(n(1371)),
        f = k(n(1372)),
        p = k(n(1373)),
        g = k(n(1374)),
        v = k(n(1375)),
        m = n(447),
        y = k(n(16)),
        b = k(n(105)),
        w = n(90);

    function k(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var E = function(e) {
        function t() {
            return (0,
                    a.default)(this, t),
                (0,
                    l.default)(this, (t.__proto__ || (0,
                    s.default)(t)).apply(this, arguments))
        }
        return (0,
                u.default)(t, e),
            (0,
                o.default)(t, [{
                key: "className",
                value: function() {
                    return "merge-landmark-view"
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .do-close": "_onCloseClicked",
                        "click .do-apply": "_onApplyClicked"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    var e = this;
                    return {
                        ".parking-attributes": {
                            observe: m.VENUE_FIELDS.CATEGORIES,
                            visible: function(e) {
                                return e.indexOf(w.PARKING_LOT) > -1
                            }
                        },
                        ".parking-message": {
                            observe: m.VENUE_FIELDS.CATEGORIES,
                            visible: function(t) {
                                return e._hasParkingLot() && -1 === t.indexOf(w.PARKING_LOT)
                            }
                        },
                        ".brand-region": {
                            observe: m.VENUE_FIELDS.CATEGORIES,
                            visible: function(e) {
                                return e.indexOf(w.GAS_STATION) > -1
                            }
                        },
                        ".brand-message": {
                            observe: m.VENUE_FIELDS.CATEGORIES,
                            visible: function(t) {
                                return e._hasGasStation() && -1 === t.indexOf(w.GAS_STATION)
                            }
                        }
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    var e;
                    return e = {},
                        (0,
                            r.default)(e, m.VENUE_FIELDS.NAME, ".name-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.DESCRIPTION, ".description-region"),
                        (0,
                            r.default)(e, m.ADDRESS_FIELD, ".address-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.LOCK_RANK, ".lockRank-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.BRAND, ".brand-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.CATEGORIES, ".categories-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.EXTERNAL_PROVIDER_IDS, ".externalProviderIDs-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.OPENING_HOURS, ".openingHours-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.URL, ".url-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.PHONE, ".phone-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.SERVICES, ".services-region"),
                        (0,
                            r.default)(e, m.VENUE_FIELDS.IMAGES, ".images-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.PARKING_TYPE, ".parkingType-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.HAS_TBR, ".hasTBR-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.CAN_EXIT_WHILE_CLOSED, ".canExitWhileClosed-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.COST_TYPE, ".costType-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.PAYMENT_TYPE, ".paymentType-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.EXTIMATED_NUMBER_OF_SPOTS, ".estimatedNumberOfSpots-region"),
                        (0,
                            r.default)(e, m.PARKING_FIELDS.LOT_TYPE, ".lotType-region"),
                        e
                }
            }, {
                key: "fieldsConfig",
                value: function(e, t) {
                    var n, i;
                    return {
                        VENUE_FIELDS: (n = {
                                DEFAULT: {
                                    title: function(e) {
                                        return I18n.t("edit.landmark.fields." + e)
                                    },
                                    optionsList: t.getPropertyOptions.bind(t),
                                    minLength: 2,
                                    view: c.default,
                                    observeAttribute: _.identity,
                                    model: e,
                                    allowNull: !1,
                                    labels: this._optionsListToLabels
                                }
                            },
                            (0,
                                r.default)(n, m.VENUE_FIELDS.NAME, {
                                view: v.default,
                                observeAttribute: m.VENUE_FIELDS.ALIASES,
                                mainAttribute: m.VENUE_FIELDS.NAME
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.DESCRIPTION, {
                                view: p.default,
                                minLength: 0,
                                allowNull: !0
                            }),
                            (0,
                                r.default)(n, m.ADDRESS_FIELD, {
                                view: d.default,
                                allowNull: !0,
                                style: "single-line"
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.LOCK_RANK, {
                                view: d.default,
                                minLength: 0,
                                allowNull: !0,
                                style: "single-line",
                                labels: function(e, t) {
                                    return t.map(function(e) {
                                        return y.default.formatRank(e)
                                    })
                                }
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.BRAND, {
                                view: d.default,
                                allowNull: !0,
                                style: "single-line"
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.CATEGORIES, {
                                view: h.default,
                                minLength: 1,
                                minSelectionCount: 1,
                                mainAttribute: m.MAIN_CATEGORY,
                                labels: function(e, t) {
                                    return t.map(function(e) {
                                        return I18n.t("venues.categories." + e)
                                    })
                                }
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.EXTERNAL_PROVIDER_IDS, {
                                view: g.default,
                                minLength: 1,
                                labels: this._createProviderIdLabels
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.OPENING_HOURS, {
                                minLength: 1
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.URL, {
                                view: d.default,
                                minLength: 2,
                                style: "single-line"
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.PHONE, {
                                view: d.default,
                                minLength: 2,
                                style: "single-line",
                                allowNull: !0
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.SERVICES, {
                                minLength: 1,
                                labels: function(e, t) {
                                    return t.map(function(e) {
                                        return I18n.t("venues.services." + e)
                                    })
                                }
                            }),
                            (0,
                                r.default)(n, m.VENUE_FIELDS.IMAGES, {
                                view: f.default,
                                imagesUrls: function() {
                                    var e = t.createImagesList(m.VENUE_FIELDS.IMAGES).filter(function(e) {
                                        return e.attributes.approved
                                    });
                                    return _.compact(e.map(function(e) {
                                        return e.getUrl(b.default.SIZE.WEB)
                                    }))
                                },
                                minLength: 1,
                                style: "waze-checkbox-select"
                            }),
                            n),
                        PARKING_FIELDS: (i = {
                                DEFAULT: {
                                    title: function(e) {
                                        return I18n.t("edit.landmark.parking.fields." + e)
                                    },
                                    optionsList: t.getParkingPropertyOptions.bind(t),
                                    minLength: 2,
                                    view: d.default,
                                    observeAttribute: _.identity,
                                    model: e,
                                    allowNull: !1,
                                    labels: function(e, t) {
                                        return t.map(function(t) {
                                            return t ? I18n.t("edit.landmark.parking.types." + e + "." + t) : I18n.t("merge_places.empty")
                                        })
                                    }
                                }
                            },
                            (0,
                                r.default)(i, m.PARKING_FIELDS.PARKING_TYPE, {
                                allowNull: !0,
                                style: "single-line"
                            }),
                            (0,
                                r.default)(i, m.PARKING_FIELDS.HAS_TBR, {
                                allowNull: !0,
                                style: "single-line",
                                labels: function(e, t) {
                                    return t.map(function(e) {
                                        return e ? I18n.t("edit.landmark.parking.general.yes") : I18n.t("edit.landmark.parking.general.no")
                                    })
                                }
                            }),
                            (0,
                                r.default)(i, m.PARKING_FIELDS.CAN_EXIT_WHILE_CLOSED, {
                                allowNull: !0,
                                style: "single-line",
                                labels: function(e, t) {
                                    return t.map(function(e) {
                                        return e ? I18n.t("edit.landmark.parking.general.yes") : I18n.t("edit.landmark.parking.general.no")
                                    })
                                }
                            }),
                            (0,
                                r.default)(i, m.PARKING_FIELDS.COST_TYPE, {
                                style: "single-line"
                            }),
                            (0,
                                r.default)(i, m.PARKING_FIELDS.PAYMENT_TYPE, {
                                view: c.default,
                                minLength: 1
                            }),
                            (0,
                                r.default)(i, m.PARKING_FIELDS.EXTIMATED_NUMBER_OF_SPOTS, {
                                style: "single-line",
                                allowNull: !0,
                                labels: function(e, t) {
                                    return t.map(function(t) {
                                        return t ? I18n.t("edit.landmark.parking.types." + e + "." + t) : I18n.t("merge_places.estimate")
                                    })
                                }
                            }),
                            (0,
                                r.default)(i, m.PARKING_FIELDS.LOT_TYPE, {
                                view: c.default,
                                minLength: 1,
                                labels: function(e, t) {
                                    return t.map(function(e) {
                                        return I18n.t("edit.landmark.parking.types.lotType." + e)
                                    })
                                }
                            }),
                            i)
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.venues = e.venues,
                        this.mainVenue = e.mainVenue,
                        this.dataModel = e.dataModel,
                        this.merger = new m.LandmarkMerger({
                            venues: this.venues,
                            mainVenue: this.mainVenue,
                            dataModel: this.dataModel
                        }),
                        this.model = this.merger.getModel()
                }
            }, {
                key: "onRender",
                value: function() {
                    this._createAttributes(),
                        this.stickit()
                }
            }, {
                key: "_createAttributes",
                value: function() {
                    var e = this.fieldsConfig(this.model, this.merger),
                        t = e.VENUE_FIELDS,
                        n = e.PARKING_FIELDS;
                    this._createSelectionFields(t),
                        this._hasParkingLot() && this._createSelectionFields(n)
                }
            }, {
                key: "_createSelectionFields",
                value: function(e) {
                    var t = this;
                    _.without((0,
                        i.default)(e), "DEFAULT").forEach(function(n) {
                        var i = _.extend({}, e.DEFAULT, e[n]);
                        t._createSelectionView(n, i)
                    })
                }
            }, {
                key: "_createSelectionView",
                value: function(e, t) {
                    var n = this;
                    if (t.optionsList = this._getOrCAll(t, "optionsList", e, t.allowNull),
                        _.without((0,
                            i.default)(t), "view", "optionsList").forEach(function(i) {
                            t[i] = n._getOrCAll(t, i, e, t.optionsList)
                        }),
                        t.optionsList.length >= t.minLength) {
                        var r = t.view;
                        this.showChildView(e, new r(t), t.optionsList)
                    }
                }
            }, {
                key: "_getOrCAll",
                value: function(e, t, n, i) {
                    return "function" == typeof e[t] ? e[t].call(this, n, i) : e[t]
                }
            }, {
                key: "_optionsListToLabels",
                value: function(e, t) {
                    return t.map(function(e) {
                        return null === e || "" === e ? I18n.t("merge_places.empty") : e
                    })
                }
            }, {
                key: "_hasParkingLot",
                value: function() {
                    return _.some(this.venues, function(e) {
                        return e.isParkingLot()
                    })
                }
            }, {
                key: "_hasGasStation",
                value: function() {
                    return _.some(this.venues, function(e) {
                        return e.isGasStation()
                    })
                }
            }, {
                key: "_onCloseClicked",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "_createProviderIdLabels",
                value: function() {
                    return this.merger.getPropertyOptions(m.VENUE_FIELDS.EXTERNAL_PROVIDER_IDS)
                }
            }, {
                key: "_onApplyClicked",
                value: function() {
                    var e = this.merger.getNewAttributes(),
                        t = this.merger.getSourceVenues(),
                        n = this.merger.getTargetVenue();
                    this.trigger("doMerge", {
                            attributes: e,
                            sourceVenues: t,
                            targetVenues: n
                        }),
                        this.destroy()
                }
            }, {
                key: "_getLockRankRange",
                value: function() {
                    var e = this.dataModel.loginManager.getUserRank();
                    return _.range(0, e + 1)
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        placesCount: this.venues.length,
                        mainPlaceName: this.mainVenue.attributes.name
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/layout"
                }
            }]),
            t
    }(Marionette.View);
    t.default = E,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(2)),
        r = c(n(0)),
        s = c(n(1)),
        a = c(n(3)),
        o = c(n(8)),
        l = c(n(4)),
        u = c(n(446)),
        d = n(90);

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                s.default)(t, [{
                key: "_onModelChange",
                value: function(e, n) {
                    var r = e.previous(this.observeAttribute).indexOf(d.PARKING_LOT) > -1,
                        s = n.indexOf(d.PARKING_LOT) > -1;
                    r ? s && n.length > 1 && (n = _.without(n, d.PARKING_LOT),
                            this.model.set(this.observeAttribute, n)) : s && n.length > 1 && this.model.set(this.observeAttribute, [d.PARKING_LOT]),
                        (0,
                            o.default)(t.prototype.__proto__ || (0,
                            i.default)(t.prototype), "_onModelChange", this).call(this, e, n)
                }
            }, {
                key: "_onMainChange",
                value: function(e, t) {
                    var n = this.getSelected(); -
                    1 === n.indexOf(t) && (t === d.PARKING_LOT || n.indexOf(d.PARKING_LOT) > -1 ? n = [t] : n.push(t),
                        this.setSelection(n))
                }
            }]),
            t
    }(u.default);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(6)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(3)),
        o = d(n(8)),
        l = d(n(1)),
        u = d(n(4));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t(e) {
            (0,
                s.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e));
            return n.imagesUrls = e.imagesUrls,
                n
        }
        return (0,
                u.default)(t, e),
            (0,
                l.default)(t, [{
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/images_selection_view"
                }
            }]),
            (0,
                l.default)(t, [{
                key: "_getUrlById",
                value: function(e) {
                    var t = this.optionsList.indexOf(e);
                    return this.imagesUrls[t]
                }
            }, {
                key: "templateContext",
                value: function() {
                    return (0,
                        i.default)((0,
                        o.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "templateContext", this).call(this), {
                        getUrlById: this._getUrlById.bind(this)
                    })
                }
            }]),
            t
    }(d(n(162)).default);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(6)),
        r = h(n(2)),
        s = h(n(0)),
        a = h(n(3)),
        o = h(n(1)),
        l = h(n(4)),
        u = h(n(8)),
        d = h(n(222)),
        c = n(447);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = function(e) {
        function t(e) {
            (0,
                s.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e));
            return n.model.set(c.CUSTOM_DESCRIPTION, ""),
                n
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "bindings",
                value: function() {
                    return _.extend((0,
                        u.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "bindings", this).call(this), {
                        textarea: c.CUSTOM_DESCRIPTION,
                        ".text-container": {
                            observe: this.observeAttribute,
                            visible: function(e) {
                                return e === c.CUSTOM_DESCRIPTION
                            }
                        }
                    })
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/description_selection_view"
                }
            }]),
            (0,
                o.default)(t, [{
                key: "_optionToValue",
                value: function(e) {
                    return e === c.CUSTOM_DESCRIPTION ? e : this.optionsList.indexOf(e)
                }
            }, {
                key: "_valueToOption",
                value: function(e) {
                    return e === c.CUSTOM_DESCRIPTION ? e : this.optionsList[e]
                }
            }, {
                key: "templateContext",
                value: function() {
                    return (0,
                        i.default)((0,
                        u.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "templateContext", this).call(this), {
                        CUSTOM_DESCRIPTION: c.CUSTOM_DESCRIPTION
                    })
                }
            }]),
            t
    }(d.default);
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(19)),
        r = c(n(2)),
        s = c(n(0)),
        a = c(n(3)),
        o = c(n(1)),
        l = c(n(4)),
        u = c(n(162)),
        d = c(n(196));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = function(e) {
        function t(e) {
            (0,
                s.default)(this, t);
            var n = (0,
                a.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, e));
            return n.selectionOptions = e,
                n.model = new Backbone.Model({
                    loading: !0
                }),
                n
        }
        return (0,
                l.default)(t, e),
            (0,
                o.default)(t, [{
                key: "regions",
                value: function() {
                    return {
                        externalProviders: ".selection-region"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".loader": {
                            observe: "loading",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/external_providers_view"
                }
            }]),
            (0,
                o.default)(t, [{
                key: "_loadExternalProvidersData",
                value: function() {
                    var e = this;
                    this.externalProviders = this.selectionOptions.optionsList.map(function(e) {
                        return new d.default({
                            uuid: e
                        })
                    });
                    var t = this.externalProviders.map(function(e) {
                        return e.getDetails()
                    });
                    i.default.all(t).finally(function() {
                        e._onExternalProvidersLoaded()
                    })
                }
            }, {
                key: "_onExternalProvidersLoaded",
                value: function() {
                    this.model.set("loading", !1),
                        this._showSelectionView()
                }
            }, {
                key: "_showSelectionView",
                value: function() {
                    this.selectionOptions.labels = this.externalProviders.map(function(e) {
                            return e.get("name")
                        }),
                        this.showChildView("externalProviders", new u.default(this.selectionOptions))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this._loadExternalProvidersData()
                }
            }]),
            t
    }(Marionette.View);
    t.default = h,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(2)),
        r = o(n(0)),
        s = o(n(3)),
        a = o(n(4));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function(e) {
        function t(e) {
            (0,
                r.default)(this, t);
            var n = (0,
                s.default)(this, (t.__proto__ || (0,
                i.default)(t)).call(this, e));
            return -1 === n.optionsList.indexOf("") && (n.minSelectionCount = 1),
                n
        }
        return (0,
                a.default)(t, e),
            t
    }(o(n(446)).default);
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(1377)),
        r = a(n(1381)),
        s = a(n(1382));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.View.extend({
        template: "templates/sidebar/user-info",
        className: "flex-parent",
        ui: {
            feedContainer: "#sidepanel-feed",
            feedRefresh: ".feed-refresh"
        },
        regions: {
            userDetailsRegion: "#user-details",
            preferencesRegion: "#sidepanel-prefs"
        },
        initialize: function(e) {
            this.user = this.model.get("user"),
                this.feedControl = e.feedControl
        },
        onRender: function() {
            var e = this;
            return this.showChildView("preferencesRegion", new s.default({
                    model: W.prefs
                })),
                this.showChildView("userDetailsRegion", new r.default({
                    model: this.user
                })),
                this.feedControl.render({
                    el: this.ui.feedContainer
                }),
                $(this.ui.feedRefresh).click(function() {
                    return e.feedControl.refresh()
                })
        },
        onAttach: function() {
            this.archiveControl = new i.default,
                W.map.addControl(this.archiveControl),
                this.archiveControl.activate(),
                this.archiveControl.reset()
        },
        onDestroy: function() {
            this.archiveControl = null,
                this.preferencesView && this.preferencesView.destroy(),
                this.preferencesView = null
        },
        serializeData: function() {
            return {
                user: this.user
            }
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(10)),
        r = u(n(19)),
        s = u(n(48)),
        a = u(n(1378)),
        o = u(n(1379)),
        l = u(n(1380));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = OpenLayers.Class(OpenLayers.Control, s.default, {
        sidePanelView: null,
        editableAreasListView: null,
        layerView: null,
        panelView: null,
        editableAreasLayer: null,
        model: null,
        currentSessionList: null,
        currentSessionData: null,
        currentSession: null,
        currentUser: null,
        editableAreas: null,
        initialize: function() {
            OpenLayers.Control.prototype.initialize.apply(this, arguments),
                this.sidePanelView = new a.default($("#sidepanel-drives")),
                this.editableAreasListView = new l.default($("#sidepanel-areas")),
                this.layerView = W.map.archiveLayer,
                this.editableAreasLayer = W.map.userLayer,
                this.layerView.pm = this,
                this.model = W.model,
                this._createEditableAreas()
        },
        _createEditableAreas: function() {
            var e = this.model.loginManager.user;
            this.editableAreas = e.areas.map(function(e, t) {
                var n = _.extend({}, e, {
                    num: t
                });
                return new Backbone.Model(n)
            })
        },
        registerListeners: function() {
            this.sidePanelView.events.on({
                    shown: this.onSessionsListShown,
                    sessionClicked: this.onSessionClicked,
                    paginationLinkClicked: this.onPaginationLinkClicked,
                    searchSubmitted: this.onSearchSubmitted,
                    scope: this
                }),
                this.editableAreasListView.events.on({
                    areaClicked: this.onAreaClicked,
                    areasPaginationLinkClicked: this.onAreasPaginationLinkClicked,
                    scope: this
                })
        },
        reset: function(e) {
            this.currentSessionList = null,
                this.currentSessionData = null,
                this.currentSession = null,
                this.loadSessions(-1),
                this.sidePanelView.reset(),
                this.loadEditableAreas(),
                this.layerView.clearDrive()
        },
        activate: function() {
            OpenLayers.Control.prototype.activate.apply(this, arguments),
                this.registerListeners()
        },
        show: function() {
            this.sidePanelView.events.triggerEvent("shown")
        },
        onSessionsListShown: function(e) {
            null === this.currentSessionList && (this.loadSessions(0),
                W.Report.generalAction("userdrive_clicked"))
        },
        onPaginationLinkClicked: function(e) {
            this.loadSessions(e.index)
        },
        onAreasPaginationLinkClicked: function(e) {
            var t = this.editableAreasListView.ResultsPerPage,
                n = e.index,
                i = this.editableAreas.slice(n * t, (n + 1) * t);
            this.editableAreasListView.setEditableAreasPage(i)
        },
        loadEditableAreas: function() {
            var e = this.model.loginManager.user,
                t = [];
            e && (t = e.areas || []),
                this.editableAreasListView.setEditableAreas(t.length),
                this.onAreasPaginationLinkClicked({
                    index: 0
                })
        },
        loadSessions: function(e) {
            var t = this;
            if (this.model.loginManager.user && -1 !== e) {
                this.sidePanelView.setLoading(!0);
                var n = {
                    minDistance: 1e3,
                    offset: e * this.sidePanelView.ResultsPerPage,
                    count: this.sidePanelView.ResultsPerPage
                };
                null !== this.currentUser && (n.username = this.currentUser),
                    this.model.archives.getAsync(null, n).then(function(e) {
                        var n = t.model.archives.additionalInfo.totalSessions;
                        null === t.currentSessionList && t.sidePanelView.setSessions(n),
                            t.sidePanelView.setSessionsPage(e, t.currentUser, t.model.loginManager.user.isStaff),
                            t.currentSessionList = e
                    }).catch(function() {
                        t.sidePanelView.showError()
                    }).finally(function() {
                        t.sidePanelView.setLoading(!1)
                    })
            } else
                this.sidePanelView.setSessions(0)
        },
        onAreaClicked: function(e) {
            var t = this.model.loginManager.user.areas[e.areaIndex];
            this.editableAreasLayer.setVisibility(!0),
                this.ZoomToEditableArea(t)
        },
        ZoomToEditableArea: function(e) {
            var t = e.geometry.getBounds(),
                n = this.map.getZoomForExtent(t);
            this.map.setCenter(t.getCenterLonLat(), n)
        },
        onSessionClicked: function(e) {
            var t = this;
            r.default.all([this.model.archives.getAsync(e.id), this.model.archiveSessions.getAsync(e.id)]).then(function(n) {
                var r = (0,
                        i.default)(n, 2),
                    s = r[0],
                    a = r[1];
                t.currentSession = s,
                    t.sidePanelView.setSelectedSession(e.id),
                    $.isArray(a) && (a = a[0]),
                    t.currentSessionData = a,
                    null !== t.panelView && (t.panelView.off(),
                        t.panelView.destroy()),
                    t.panelView = new o.default({
                        model: a
                    }),
                    t.panelView.on("destroy", t.onPanelClosed, t),
                    W.map.panelRegion.show(t.panelView),
                    t.layerView.drawDrive(),
                    t.layerView.zoomToDrive()
            })
        },
        onSearchSubmitted: function(e) {
            e.username ? this.currentUser = e.username : this.currentUser = null,
                this.currentSessionList = null,
                this.currentSessionData = null,
                this.currentSession = null,
                this.loadSessions(0),
                this.sidePanelView.reset(),
                this.loadEditableAreas(),
                this.layerView.clearDrive()
        },
        onPanelClosed: function() {
            this.sidePanelView.setSelectedSession(null),
                this.currentSessionData = null,
                this.currentSession = null,
                this.layerView.clearDrive()
        },
        disable: function() {
            s.default.prototype.disable.apply(this, arguments),
                this.onPanelClosed()
        },
        CLASS_NAME: "Waze.Control.Archive"
    });
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(0)),
        s = o(n(1)),
        a = n(43);

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this.events = new OpenLayers.Events(this),
                this.$element = t,
                this.render()
        }
        return (0,
                s.default)(e, [{
                key: "render",
                value: function() {
                    var e = this;
                    this.$element.delegate(".result", "click", function() {
                            var t = this.dataset.id;
                            $(this).hasClass("session-available") && e.events.triggerEvent("sessionClicked", {
                                id: t
                            })
                        }),
                        $('a[href="#' + this.$element.attr("id") + '"]').on("show.bs.tab", function() {
                            e.events.triggerEvent("shown")
                        })
                }
            }, {
                key: "destroy",
                value: function() {
                    this.events.destroy()
                }
            }, {
                key: "setLoading",
                value: function(e) {
                    e ? (this.$element.find(".result-list-container").empty(),
                        this.$element.find(".pagination").addClass("loading"),
                        this.$element.find(".loading-animation").removeClass("hide")) : (this.$element.find(".pagination").removeClass("loading"),
                        this.$element.find(".loading-animation").addClass("hide"))
                }
            }, {
                key: "setSessions",
                value: function(e) {
                    this.$element.find(".result-list-container").empty(),
                        this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                        this.$element.find(".pagination").pagination(e, {
                            callback: this.onPaginationLinkClicked.bind(this),
                            items_per_page: this.ResultsPerPage,
                            num_display_entries: this.ResultsPerPage - 1,
                            next_text: "",
                            prev_text: "",
                            num_edge_entries: 1,
                            ellipse_text: "..."
                        })
                }
            }, {
                key: "setSessionsPage",
                value: function(e, t, n) {
                    var i = this;
                    this.$element.find(".result-list-container").html((0,
                            a.getHTML)("templates/archive-sessions", {
                            sessions: e,
                            username: t,
                            isStaff: n
                        })),
                        this.$element.find(".sessions-search form").on("submit", function(e) {
                            e.preventDefault();
                            var t = $(e.target);
                            i.events.triggerEvent("searchSubmitted", {
                                username: t.find("input[name=username]").val()
                            })
                        })
                }
            }, {
                key: "setSelectedSession",
                value: function(e) {
                    this.$element.find("#archive-sessions .result").removeClass("selected"),
                        null !== e && this.$element.find("#archive-sessions .result[data-id=" + e + "]").addClass("selected")
                }
            }, {
                key: "onPaginationLinkClicked",
                value: function(e) {
                    this.events.triggerEvent("paginationLinkClicked", {
                        index: e
                    })
                }
            }, {
                key: "onAreaPaginationLinkClicked",
                value: function(e) {
                    this.events.triggerEvent("areasPaginationLinkClicked", {
                        index: e
                    })
                }
            }, {
                key: "showError",
                value: function() {
                    this.$element.find(".error").removeClass("hide")
                }
            }, {
                key: "reset",
                value: function() {}
            }, {
                key: "show",
                value: function() {}
            }, {
                key: "hide",
                value: function() {}
            }]),
            e
    }();
    (0,
        i.default)(l.prototype, {
        ResultsPerPage: 15,
        CLASS_NAME: "Waze.View.Archive"
    }),
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "templates/archive-panel",
        serializeData: function() {
            return {
                fromAddress: this.model.fromLocation,
                toAddress: this.model.toLocation
            }
        },
        templateContext: {
            formatAddress: function(e) {
                var t = [e.city, e.street];
                return (t = _.compact(t)).join(", ")
            }
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(0)),
        s = o(n(1)),
        a = n(43);

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = function() {
        function e(t) {
            (0,
                r.default)(this, e),
            this.events = new OpenLayers.Events(this),
                this.$element = t,
                this.render()
        }
        return (0,
                s.default)(e, [{
                key: "render",
                value: function() {
                    var e = this;
                    this.$element.delegate(".result", "click", function() {
                        var t = $(this).data("index");
                        e.events.triggerEvent("areaClicked", {
                            areaIndex: t
                        })
                    })
                }
            }, {
                key: "destroy",
                value: function() {
                    this.events.destroy()
                }
            }, {
                key: "setLoading",
                value: function(e) {
                    e ? (this.$element.find(".result-list-container").empty(),
                        this.$element.find(".pagination").addClass("loading")) : this.$element.find(".pagination").removeClass("loading")
                }
            }, {
                key: "setEditableAreas",
                value: function(e) {
                    this.$element.find(".result-list-container").empty(),
                        this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                        this.$element.find(".pagination").pagination(e, {
                            callback: this.onAreaPaginationLinkClicked.bind(this),
                            items_per_page: this.ResultsPerPage,
                            num_display_entries: this.ResultsPerPage - 1,
                            next_text: "",
                            prev_text: "",
                            num_edge_entries: 1,
                            ellipse_text: "..."
                        })
                }
            }, {
                key: "setEditableAreasPage",
                value: function(e) {
                    this.$element.find(".result-list-container").html((0,
                        a.getHTML)("templates/editable-areas", {
                        areas: e
                    }))
                }
            }, {
                key: "onAreaPaginationLinkClicked",
                value: function(e) {
                    this.events.triggerEvent("areasPaginationLinkClicked", {
                        index: e
                    })
                }
            }, {
                key: "reset",
                value: function() {}
            }, {
                key: "show",
                value: function() {}
            }, {
                key: "hide",
                value: function() {}
            }]),
            e
    }();
    (0,
        i.default)(l.prototype, {
        ResultsPerPage: 15,
        CLASS_NAME: "Waze.View.EditableAreas"
    }),
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(43),
        r = Marionette.View.extend({
            template: "templates/sidebar/user-details",
            events: {
                "click .logout-link": "_onLogoutClicked"
            },
            onRender: function() {
                return this.$el.find("#permissions-info").tooltip({
                    placement: "bottom",
                    title: (0,
                        i.getHTML)("templates/sidebar/user-permissions-tooltip", {
                        editableMiles: this.model.editableMiles,
                        isCountryManager: this.model.isCountryManager(),
                        isAreaManager: this.model.isAreaManager
                    }),
                    html: !0
                })
            },
            serializeData: function() {
                return this.model.getAttributes()
            },
            _onLogoutClicked: function() {
                return W.loginManager.logout()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(1383)),
        r = s(n(161));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Backbone.Marionette.View.extend({
        template: "templates/prefs-panel",
        regions: {
            envSelectRegion: "#env-select"
        },
        behaviors: {
            accelerators: {
                behaviorClass: r.default
            }
        },
        events: {
            "change .language-select": "_onLanguageChange"
        },
        accelerators: {
            spreadArrows: "_onSpreadArrowsClicked",
            hideArrows: "_onHideArrowClicked"
        },
        bindings: {
            "input[name=twoWayRoad]": "twoWaySegmentsByDefault",
            "input[name=turnsAllowed]": "enableTurnsByDefault",
            "input[name=requireDeselect]": "requireFeatureDeselect",
            "input[name=units-radio]": "isImperial",
            "input[name=spreadTurnArrows]": "spreadTurnArrows",
            "input[name=showTransparentTurnArrows]": "showTransparentTurnArrows"
        },
        onRender: function() {
            this.showChildView("envSelectRegion", new i.default({
                    regionCode: W.app.getAppRegionCode()
                })),
                this.stickit()
        },
        _onLanguageChange: function(e) {
            var t = $(e.target).val();
            W.app.changeAppLocale(t)
        },
        _onSpreadArrowsClicked: function() {
            this.model.set({
                spreadTurnArrows: !this.model.get("spreadTurnArrows")
            })
        },
        _onHideArrowClicked: function() {
            this.model.set({
                showTransparentTurnArrows: !this.model.get("showTransparentTurnArrows")
            })
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = n(126);

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "change .region-select": "onRegionSelected"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".region-select": {
                            observe: "regionCode",
                            selectOptions: {
                                collection: this.regionOptions
                            }
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.model = new Backbone.Model({
                            regionCode: e.regionCode
                        }),
                        this.regionOptions = l.REGION_CODES.map(function(e) {
                            return {
                                label: I18n.t("envs." + e),
                                value: e
                            }
                        })
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "onRegionSelected",
                value: function(e) {
                    var t = $(e.target).val();
                    W.app.changeAppRegion(t)
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/RegionSwitcher/templates/region-switcher"
                }
            }]),
            t
    }(Marionette.View);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "templates/sidebar/user-sandbox",
        events: {
            "click .sign-in-button": "_onLoginButtonClick"
        },
        initialize: function(e) {
            this.app = e.app
        },
        _onLoginButtonClick: function() {
            this.app.disableSandboxMode(!1)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(448)),
        r = u(n(449)),
        s = u(n(450)),
        a = u(n(1390)),
        o = u(n(1392)),
        l = u(n(1393));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = Marionette.Object.extend({
        initialize: function(e) {
            this.map = e.map,
                this.controller = e.controller,
                this.editingMediator = e.mediator,
                this.actionManager = e.actionManager,
                this.selectionManager = e.selectionManager,
                this.dataModel = e.dataModel,
                this.app = e.app,
                this.loginManager = e.loginManager,
                this.saveController = e.saveController,
                this.toolbarLayout = new i.default({
                    model: this.app
                }),
                this.listenTo(this.toolbarLayout, "render", this._onRender),
                this.layerSwitcherController = new s.default({
                    map: this.map,
                    actionManager: this.actionManager,
                    togglerTree: e.togglerTree,
                    controller: this.controller
                }),
                this.toolbarCollectionBuilder = new l.default({
                    actionManager: this.actionManager,
                    controller: this.controller,
                    map: this.map,
                    app: this.app,
                    selectionManager: this.selectionManager,
                    dataModel: this.dataModel,
                    loginManager: this.loginManager,
                    editingMediator: this.editingMediator,
                    saveController: this.saveController
                }),
                this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                this.searchView = new r.default({
                    map: this.map
                })
        },
        destroy: function() {
            this.layerSwitcherController.destroy(),
                this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
        },
        _onRender: function() {
            return this._showToolbar(),
                this.toolbarLayout.showChildView("layerSwitcher", this.layerSwitcherController.getLayout()),
                this.toolbarLayout.showChildView("search", this.searchView),
                this._setToolbarState(this.editingMediator.get("editingEnabled"))
        },
        _showToolbar: function() {
            this.editingMediator.get("editingHouseNumbers") ? this._showHouseNumbersToolbar() : this._showEditingToolbar()
        },
        _showEditingToolbar: function() {
            var e = this.toolbarCollectionBuilder.getToolbarButtons();
            this.toolbarCollectionView = new a.default({
                    collection: e,
                    map: this.map
                }),
                this.toolbarLayout.showChildView("toolbar", this.toolbarCollectionView),
                this.toolbarLayout.setHouseNumbersState(!1)
        },
        _showHouseNumbersToolbar: function() {
            var e = this.toolbarCollectionBuilder.getHouseNumbersToolbarButtons();
            this.toolbarCollectionView = new o.default({
                    collection: e,
                    map: this.map,
                    mediator: this.editingMediator
                }),
                this.toolbarLayout.showChildView("toolbar", this.toolbarCollectionView),
                this.toolbarLayout.setHouseNumbersState(!0)
        },
        _setToolbarState: function(e) {
            this.enabled = e,
                this.enabled ? (this.searchView.enable(),
                    this.toolbarCollectionView.enable()) : (this.searchView.disable(),
                    this.toolbarCollectionView.disable())
        },
        _onEditingEnabledChanged: function() {
            return this._setToolbarState(this.editingMediator.get("editingEnabled"))
        },
        onEditingHouseNumbersChanged: function() {
            this._showToolbar()
        }
    });
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "events",
                value: function() {
                    return {
                        "mousedown .search-result": "_onClick"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".search-result": {
                            classes: {
                                selected: {
                                    observe: "selected"
                                }
                            }
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "_onClick",
                value: function() {
                    this.trigger("selected", this.model)
                }
            }, {
                key: "_getTitle",
                value: function() {
                    var e = this.model.get("venue");
                    return e.name || e.street || e.city
                }
            }, {
                key: "_getDescription",
                value: function() {
                    var e = this.model.get("venue"),
                        t = "";
                    e.house_number && (t = "house_"),
                        e.street && (t += "street_"),
                        e.city && (t += "city_"),
                        t = t.slice(0, -1);
                    var n = "";
                    e.state && (n = "state_"),
                        e.country && (n += "country_"),
                        n = n.slice(0, -1);
                    var i = I18n.t("toolbar.search_results.address_part2." + n, {
                        state: e.state,
                        country: e.country
                    });
                    if (t) {
                        var r = I18n.t("toolbar.search_results.address_part1." + t, {
                            house_number: e.house_number,
                            street: e.street,
                            city: e.city
                        });
                        return n ? I18n.t("toolbar.search_results.full_address", {
                            address_part1: r,
                            address_part2: i
                        }) : r
                    }
                    return n ? i : ""
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        title: this._getTitle(),
                        description: this._getDescription()
                    }
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Toolbar/templates/search-result-item"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = l(n(2)),
        r = l(n(0)),
        s = l(n(1)),
        a = l(n(3)),
        o = l(n(4));

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = function(e) {
        function t() {
            return (0,
                    r.default)(this, t),
                (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).apply(this, arguments))
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "bindings",
                value: function() {
                    return {
                        ".result-error-message": {
                            observe: "showRetrieveError",
                            visible: !0
                        },
                        ".no-results-error-message": {
                            observe: "showNoResultsError",
                            visible: !0
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Toolbar/templates/search-empty-view"
                }
            }]),
            t
    }(Marionette.View);
    t.default = u,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layout",
        regions: {
            layersList: ".layer-switcher-container"
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(7)),
        r = d(n(2)),
        s = d(n(0)),
        a = d(n(1)),
        o = d(n(3)),
        l = d(n(4)),
        u = d(n(161));

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = function(e) {
        function t() {
            return (0,
                    s.default)(this, t),
                (0,
                    o.default)(this, (t.__proto__ || (0,
                    r.default)(t)).apply(this, arguments))
        }
        return (0,
                l.default)(t, e),
            (0,
                a.default)(t, [{
                key: "ui",
                value: function() {
                    return {
                        menu: ".menu"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "mouseenter .layer-switcher-container": "_show",
                        "mouseleave .layer-switcher-container": "_hide"
                    }
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.state = e.state,
                        this.treeState = e.treeState,
                        this.viewState = new Backbone.Model({
                            showMoreOptions: !1,
                            visible: !1,
                            pinned: !1
                        }),
                        this._map = e.map,
                        this.stateBindings = this._getStateBindings(),
                        this.treeStateBindings = this._getTreeStateBindings(),
                        this._windowResizeCallback = this._setViewHeight.bind(this),
                        this._hideTimeout = null,
                        this.listenTo(this.viewState, "change:pinned", this._onPinnedChanged),
                        this._onPinnedChanged(),
                        $(window).on("resize", this._windowResizeCallback)
                }
            }, {
                key: "_onPinnedChanged",
                value: function() {
                    this._map.toggleLayerSwitcherPinned(this.viewState.get("pinned"))
                }
            }, {
                key: "_show",
                value: function() {
                    this._cancelHideTimer(),
                        this._toggleVisibility(!0)
                }
            }, {
                key: "_hide",
                value: function() {
                    this.viewState.get("pinned") || this._startHideTimer()
                }
            }, {
                key: "_toggle",
                value: function() {
                    this.viewState.get("visible") ? this._hide() : this._show()
                }
            }, {
                key: "_startHideTimer",
                value: function() {
                    var e = this;
                    this._hideTimeout = window.setTimeout(function() {
                        e._toggleVisibility(!1),
                            e._cancelHideTimer()
                    }, 200)
                }
            }, {
                key: "_cancelHideTimer",
                value: function() {
                    window.clearTimeout(this._hideTimeout),
                        this._hideTimeout = null
                }
            }, {
                key: "_toggleVisibility",
                value: function(e) {
                    this.viewState.set("visible", e),
                        this.ui.menu.toggleClass("not-visible", !e)
                }
            }, {
                key: "onDestroy",
                value: function() {
                    $(window).off("resize", this._windowResizeCallback)
                }
            }, {
                key: "_setViewHeight",
                value: function() {
                    var e = $(".WazeMapFooter").offset().top - this.ui.menu.offset().top;
                    this.ui.menu.outerHeight(e)
                }
            }, {
                key: "_getTreeStateBindings",
                value: function() {
                    return (0,
                        i.default)(this.treeState.attributes).reduce(function(e, t) {
                        return e[".toggler .layer-switcher-" + t.toLowerCase()] = {
                                attributes: [{
                                    name: "disabled",
                                    observe: t,
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            e
                    }, {})
                }
            }, {
                key: "_getStateBindings",
                value: function() {
                    return (0,
                        i.default)(this.state.attributes).reduce(function(e, t) {
                        return e[".layer-switcher-" + t.toLowerCase()] = t,
                            e
                    }, {})
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this.state, this.stateBindings),
                        this.stickit(this.treeState, this.treeStateBindings),
                        this.stickit(this.viewState, this.viewStateBindings)
                }
            }, {
                key: "onAttach",
                value: function() {
                    this._setViewHeight()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layer-switcher"
                }
            }, {
                key: "className",
                get: function() {
                    return "layer-switcher"
                }
            }, {
                key: "behaviors",
                get: function() {
                    return {
                        accelerators: {
                            behaviorClass: u.default
                        }
                    }
                }
            }, {
                key: "accelerators",
                get: function() {
                    return {
                        displayLayerSwitcher: "_toggle"
                    }
                }
            }, {
                key: "viewStateBindings",
                get: function() {
                    return {
                        ".extended": {
                            observe: "showMoreOptions",
                            visible: !0
                        },
                        ".more-options-toggle .title": {
                            observe: "showMoreOptions",
                            onGet: function(e) {
                                return e ? I18n.t("layer_switcher.more_options.hide") : I18n.t("layer_switcher.more_options.show")
                            }
                        },
                        ".more-options-toggle input[name=show-more-options]": "showMoreOptions",
                        "input[name=pinned]": "pinned",
                        ".menu": {
                            classes: {
                                "not-visible": {
                                    observe: "visible",
                                    onGet: _.negate(_.identity)
                                }
                            }
                        }
                    }
                }
            }]),
            t
    }(Marionette.View);
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(223)),
        s = o(n(1391)),
        a = o(n(451));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = Marionette.CollectionView.extend({
        childView: r.default,
        itemGroupView: s.default,
        initialize: function(e) {
            this.map = e.map
        },
        buildChildView: function(e) {
            var t = {
                    model: e,
                    map: this.map
                },
                n = null != e.children;
            return e.get("isSaveButton") ? new a.default((0,
                i.default)({}, e.attributes, {
                map: this.map
            })) : n ? new this.itemGroupView(t) : new this.childView(t)
        },
        enable: function() {
            return this.children.invoke("enable")
        },
        disable: function() {
            return this.children.invoke("disable")
        }
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(223),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CompositeView.extend({
        template: "Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-group",
        enabled: !0,
        className: function() {
            return "toolbar-submenu toolbar-group toolbar-group-" + this.model.get("name") + " " + (this.enabled && this._hasEnabledChildren() ? this._hasActiveChildren() ? "ItemActive" : "ItemInactive" : "ItemDisabled")
        },
        events: {
            mouseover: "_showMenu",
            mouseout: "_hideMenu"
        },
        childViewEvents: {
            controlTriggered: "_hideMenu"
        },
        childView: s.default,
        childViewContainer: "menu",
        collectionEvents: {
            "change:active": function(e, t) {
                return this.setClassName()
            }
        },
        onRender: function() {
            return this.setClassName()
        },
        setClassName: function() {
            return this.$el.attr({
                class: _.result(this, "className")
            })
        },
        _showMenu: function() {
            return this.$el.addClass("open")
        },
        _hideMenu: function() {
            return this.$el.removeClass("open")
        },
        _hasActiveChildren: function() {
            return this.model.children.some(function(e) {
                return e.get("control").active
            })
        },
        _hasEnabledChildren: function() {
            return this.model.children.some(function(e) {
                return e.get("control").enabled
            })
        },
        enable: function() {
            return this.children.invoke("enable"),
                this.enabled = !0,
                this.setClassName()
        },
        disable: function() {
            return this.children.invoke("disable"),
                this.enabled = !1,
                this.setClassName()
        },
        initialize: function(e) {
            var t = this;
            this.collection = this.model.children,
                this.map = e.map,
                this.childViewOptions = function(e, n) {
                    return {
                        parent: t.model,
                        map: t.map
                    }
                }
        },
        buildChildView: function(e, t, n) {
            var i = _.extend({
                model: e
            }, n);
            return new(e.get("childView") ? e.get("childView") : t)(i)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(223)),
        s = a(n(451));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.CollectionView.extend({
        childView: r.default,
        initialize: function(e) {
            this.map = e.map,
                this.mediator = e.mediator,
                this.mediator.on("change:saving", this._onSavingChanged, this),
                this._onSavingChanged()
        },
        buildChildView: function(e) {
            var t = {
                model: e,
                map: this.map
            };
            return e.get("isSaveButton") ? new s.default((0,
                i.default)({}, e.attributes, {
                map: this.map
            })) : new this.childView(t)
        },
        onDestroy: function() {
            this.mediator.off("change:saving", this._onSavingChanged, this)
        },
        _onSavingChanged: function() {
            this.mediator.get("saving") ? this.disable() : this.enable()
        },
        enable: function() {
            return this.children.invoke("enable")
        },
        disable: function() {
            return this.children.invoke("disable")
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = A(n(0)),
        r = A(n(1)),
        s = A(n(1394)),
        a = A(n(1395)),
        o = A(n(1396)),
        l = A(n(452)),
        u = A(n(1397)),
        d = A(n(1398)),
        c = A(n(1399)),
        h = A(n(1400)),
        f = A(n(16)),
        p = A(n(399)),
        g = A(n(1402)),
        v = A(n(1403)),
        m = A(n(1404)),
        y = A(n(400)),
        b = A(n(1406)),
        w = A(n(143)),
        k = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(90)),
        E = n(187),
        M = A(n(124)),
        S = A(n(44)),
        T = n(127),
        I = A(n(454)),
        C = n(37);

    function A(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var O = function() {
        function e(t) {
            var n = this;
            (0,
                i.default)(this, e),
            this.actionManager = t.actionManager,
                this.map = t.map,
                this.selectionManager = t.selectionManager,
                this.dataModel = t.dataModel,
                this.controller = t.controller,
                this.loginManager = t.loginManager,
                this.editingMediator = t.editingMediator,
                this.saveController = t.saveController,
                this.app = t.app,
                this.app.on("change:loggedIn", function() {
                    n._enableControlsByRank(n.app.get("user"))
                })
        }
        return (0,
                r.default)(e, [{
                key: "getToolbarButtons",
                value: function(e) {
                    var t = S.default.getMenus().map(this.createMenu.bind(this)),
                        n = [].concat(t, this._generateVenueMenu(), this._generateDrawingControls(), this._generateEditingControls().reverse());
                    return new I.default(n)
                }
            }, {
                key: "getHouseNumbersToolbarButtons",
                value: function(e) {
                    return new I.default(this._generateEditingHouseNumbersControls().reverse())
                }
            }, {
                key: "_enableControlsByRank",
                value: function(e) {
                    W.Config.big_junctions.enable && this.drawBigJunction.control.setEnabled(null != e && this.loginManager.canEditBigJunctions())
                }
            }, {
                key: "_generateEditingControls",
                value: function() {
                    return [{
                        title: I18n.t("toolbar.delete"),
                        iconClass: "delete-feature",
                        control: new h.default(this.dataModel, {
                            displayClass: "waze-icon-trash"
                        })
                    }, {
                        title: I18n.t("toolbar.reload"),
                        iconClass: "reload",
                        control: new a.default(this.actionManager, this.map.roadLayers, this.controller, {
                            displayClass: "waze-icon-reload"
                        })
                    }, {
                        title: I18n.t("toolbar.undo"),
                        control: new s.default(this.actionManager, {
                            displayClass: "waze-icon-undo"
                        })
                    }, {
                        title: I18n.t("toolbar.redo"),
                        control: new o.default(this.actionManager, {
                            displayClass: "waze-icon-redo"
                        })
                    }, {
                        title: I18n.t("toolbar.save.title"),
                        control: new l.default({
                            map: this.map,
                            editingMediator: this.editingMediator,
                            saveController: this.saveController,
                            displayClass: "waze-icon-save"
                        }),
                        actionManager: this.actionManager,
                        enableChangesLog: !0,
                        isSaveButton: !0
                    }]
                }
            }, {
                key: "_generateEditingHouseNumbersControls",
                value: function() {
                    return [{
                        title: I18n.t("toolbar.add_house_numbers"),
                        control: new d.default({
                            displayClass: "add-house-number",
                            map: this.map
                        })
                    }, {
                        title: I18n.t("toolbar.undo"),
                        control: new s.default(this.actionManager, {
                            displayClass: "waze-icon-undo"
                        })
                    }, {
                        title: I18n.t("toolbar.redo"),
                        control: new o.default(this.actionManager, {
                            displayClass: "waze-icon-redo"
                        })
                    }, {
                        title: I18n.t("toolbar.save.title"),
                        control: new c.default({
                            editingMediator: this.editingMediator,
                            displayClass: "waze-icon-save"
                        }),
                        actionManager: this.actionManager,
                        enableChangesLog: !1,
                        isSaveButton: !0
                    }, {
                        title: I18n.t("toolbar.cancel"),
                        control: new u.default({
                            displayClass: "waze-icon-exit"
                        })
                    }]
                }
            }, {
                key: "_generateDrawingControls",
                value: function() {
                    var e = this,
                        t = [{
                            title: I18n.t("drawing.road"),
                            iconClass: "road",
                            control: new v.default(this.map.sketchLayer, this.map.segmentLayer, OL.Handler.Path, {
                                accelerator: "drawSegment",
                                enableSnapping: !0,
                                featureAdded: function(t, n, i) {
                                    e.actionManager.add(new M.default(t, {
                                            createNodes: !0,
                                            openAllTurns: W.prefs.get("enableTurnsByDefault"),
                                            createTwoWay: W.prefs.get("twoWaySegmentsByDefault"),
                                            snappedFeatures: [n, i]
                                        })),
                                        _.defer(function() {
                                            return e.selectionManager.setSelectedModels([t])
                                        })
                                }
                            })
                        }, {
                            title: I18n.t("drawing.walking_trail"),
                            iconClass: "walking-trail",
                            control: new v.default(this.map.sketchLayer, this.map.segmentLayer, OL.Handler.Path, {
                                accelerator: "drawSegment",
                                enableSnapping: !0,
                                featureAdded: function(t, n, i) {
                                    t.attributes.roadType = C.ROAD_TYPES.WALKING_TRAIL,
                                        e.actionManager.add(new M.default(t, {
                                            createNodes: !0,
                                            openAllTurns: !1,
                                            createTwoWay: !0,
                                            snappedFeatures: [n, i]
                                        })),
                                        _.defer(function() {
                                            return e.selectionManager.setSelectedModels([t])
                                        })
                                }
                            })
                        }, {
                            title: I18n.t("drawing.roundabout"),
                            iconClass: "roundabout",
                            control: new m.default({
                                onRoundaboutAdded: function(t) {
                                    var n = new y.default(t);
                                    e.actionManager.add(n),
                                        _.defer(function() {
                                            var t = n.getRoundaboutSegments();
                                            t && t.length > 0 && e.selectionManager.setSelectedModels(t)
                                        })
                                }
                            })
                        }, {
                            title: I18n.t("drawing.camera"),
                            iconClass: "camera",
                            control: new v.default(this.map.sketchLayer, this.map.camerasLayer, OL.Handler.Point, {
                                enableSnapping: !0,
                                featureAdded: function(t) {
                                    var n = new b.default(t.geometry, e.dataModel);
                                    e.actionManager.add(n),
                                        _.defer(function() {
                                            var t = n.getCamera();
                                            t && e.selectionManager.setSelectedModels([t])
                                        })
                                }
                            })
                        }];
                    return W.Config.big_junctions.enable && (this.drawBigJunction = {
                                title: I18n.t("drawing.big_junction"),
                                iconClass: "junction-box",
                                control: new v.default(this.map.sketchLayer, this.map.bigJunctionLayer, OL.Handler.Polygon, {
                                    accelerator: "drawBigJunction",
                                    featureAdded: function(t) {
                                        var n = new E.BigJunction({
                                            geometry: t.geometry
                                        });
                                        e.actionManager.add(new g.default(n)),
                                            _.defer(function() {
                                                e.selectionManager.setSelectedModels([n])
                                            })
                                    }
                                })
                            },
                            t.push(this.drawBigJunction)),
                        [{
                            name: "drawing",
                            children: t
                        }]
                }
            }, {
                key: "_generateVenueMenu",
                value: function() {
                    var e = W.Config.venues.categories.map(this._generateVenueMenuItem.bind(this));
                    return this.createMenu({
                        name: "venues",
                        items: e
                    })
                }
            }, {
                key: "_generateVenueMenuItem",
                value: function(e) {
                    var t = {
                        primaryShape: "point",
                        secondaryShape: "polygon",
                        title: I18n.t("venues.categories." + e),
                        featureName: I18n.t("drawing.venue"),
                        iconClass: f.default.categoryToClassName(e),
                        layerUniqueName: T.LAYER_UNIQUE_NAMES.LANDMARKS,
                        createFeature: function(t, n) {
                            var i = new w.default({
                                geometry: t,
                                categories: [e]
                            });
                            return n.actionManager.add(new p.default(i)),
                                i
                        }
                    };
                    return e === k.PARKING_LOT && (t.primaryShape = "polygon",
                            t.secondaryShape = null),
                        t
                }
            }, {
                key: "createMenu",
                value: function(e) {
                    var t = this;
                    return {
                        name: e.name,
                        displayClass: e.displayClass,
                        children: e.items.map(function(e) {
                            return t.createMenuItem(e)
                        })
                    }
                }
            }, {
                key: "createMenuItem",
                value: function(e) {
                    var t = this,
                        n = function(n) {
                            return n = e.createFeature(n.geometry, t.dataModel),
                                _.defer(function() {
                                    return t.selectionManager.setSelectedModels([n])
                                })
                        },
                        i = this.map.getLayersBy("uniqueName", e.layerUniqueName)[0],
                        r = this.createDrawControl(e.primaryShape, i, n, e.enableSnapping),
                        s = void 0;
                    return e.secondaryShape && (s = this.createDrawControl(e.secondaryShape, i, n, e.enableSnapping)), {
                        title: e.title,
                        featureName: e.featureName,
                        showDrawingControls: null != e.secondaryShape,
                        control: r,
                        iconClass: e.iconClass,
                        secondaryControl: s
                    }
                }
            }, {
                key: "createDrawControl",
                value: function(e, t, n, i) {
                    var r = void 0;
                    return r = "point" === e ? OL.Handler.Point : OL.Handler.Polygon,
                        new v.default(this.map.sketchLayer, t, r, {
                            enableSnapping: i,
                            featureAdded: n,
                            drawingType: e
                        })
                }
            }]),
            e
    }();
    t.default = O,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(48),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
        actionManager: null,
        initialize: function(e, t) {
            OpenLayers.Control.prototype.initialize.apply(this, [t]),
                this.actionManager = e,
                this.autoActivate = !1,
                this.onActionChange(),
                this.actionManager.events.on({
                    scope: this,
                    afteraction: this.onActionChange,
                    afterundoaction: this.onActionChange,
                    afterclearactions: this.onActionChange
                }),
                W.accelerators.events.register("undo", this, this.trigger)
        },
        destroy: function() {
            this.actionManager.events.un({
                    scope: this,
                    afteraction: this.onActionChange,
                    afterundoaction: this.onActionChange,
                    afterclearactions: this.onActionChange
                }),
                W.accelerators.events.unregister("undo", this, this.trigger),
                OpenLayers.Control.prototype.destroy.apply(this)
        },
        onActionChange: function() {
            this.actionManager.canUndo() ? this.enable() : this.disable()
        },
        trigger: function() {
            this.enabled && (this.onUndo(),
                this.actionManager.undo())
        },
        onUndo: function() {}
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(48),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
        _actionManager: null,
        initialize: function(e, t, n, i) {
            OpenLayers.Control.prototype.initialize.apply(this, [i]),
                this._actionManager = e,
                this._roadLayers = t,
                this._controller = n,
                this.autoActivate = !1,
                this._actionManager.events.on({
                    scope: this,
                    hasActions: this._redraw,
                    noActions: this._redraw
                }),
                W.accelerators.events.register("reloadData", this, this.trigger),
                this._redraw()
        },
        destroy: function() {
            this._actionManager.events.un({
                    scope: this,
                    hasActions: this._redraw,
                    noActions: this._redraw
                }),
                W.accelerators.events.unregister("reloadData", this, this.trigger),
                OpenLayers.Control.prototype.destroy.apply(this)
        },
        _canReload: function() {
            return !this._actionManager.canUndo()
        },
        _redraw: function() {
            this._canReload() ? this.enable() : this.disable()
        },
        trigger: function() {
            this._canReload() && (this._roadLayers.forEach(function(e) {
                    e.redraw({
                            force: !0
                        }),
                        e.removeBackBuffer()
                }),
                this._controller.reload())
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(48),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
        actionManager: null,
        initialize: function(e, t) {
            OpenLayers.Control.prototype.initialize.apply(this, [t]),
                this.actionManager = e,
                this.autoActivate = !1,
                this.onActionChange(),
                this.actionManager.events.on({
                    scope: this,
                    afteraction: this.onActionChange,
                    afterundoaction: this.onActionChange,
                    afterclearactions: this.onActionChange
                }),
                W.accelerators.events.register("redo", this, this.trigger)
        },
        destroy: function() {
            this.actionManager.events.un({
                    scope: this,
                    afteraction: this.onActionChange,
                    afterundoaction: this.onActionChange,
                    afterclearactions: this.onActionChange
                }),
                W.accelerators.events.unregister("redo", this, this.trigger),
                OpenLayers.Control.prototype.destroy.apply(this)
        },
        onActionChange: function() {
            this.actionManager.canRedo() ? this.enable() : this.disable()
        },
        trigger: function() {
            this.enabled && (this.onRedo(),
                this.actionManager.redo())
        },
        onRedo: function() {}
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(48),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
        trigger: function() {
            W.accelerators.events.triggerEvent("exitHouseNumbers")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(48),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
        initialize: function(e) {
            OpenLayers.Control.prototype.initialize.apply(this, [e]),
                this._registerEvents(),
                this.setEnabled(this.editingAllowedInZoom())
        },
        destroy: function() {
            this._unregisterEvents(),
                OpenLayers.Control.prototype.destroy.apply(this)
        },
        _registerEvents: function() {
            this.map.events.register("zoomend", this, this._onZoomChanged)
        },
        _onZoomChanged: function() {
            this.setEnabled(this.editingAllowedInZoom())
        },
        editingAllowedInZoom: function() {
            return this.map.getZoom() >= W.Config.houseNumbers.minEditZoom
        },
        _unregisterEvents: function() {
            this.map.events.unregister("zoomend", this, this._onZoomChanged)
        },
        trigger: function() {
            W.accelerators.events.triggerEvent("editHouseNumbers")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(452),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = OpenLayers.Class(s.default, {
        _save: function() {
            this.enabled && W.commands.execute("save:start")
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = d(n(48)),
        r = d(n(103)),
        s = n(37),
        a = d(n(431)),
        o = n(14),
        l = d(n(1401)),
        u = n(72);

    function d(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var c = new OpenLayers.Class(OpenLayers.Control.Button, i.default, {
        keyboardCodes: null,
        keyboardHandler: null,
        initialize: function(e, t) {
            i.default.prototype.initialize.apply(this, [t]),
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                this.model = e,
                this.keyboardCodes = [OpenLayers.Event.KEY_DELETE],
                this.keyboardHandler = new a.default(this, {
                    keydown: this.handleKeypress
                }),
                this.setEnabled(!1),
                W.selectionManager.events.register("selectionchanged", this, this._onSelectionChanged)
        },
        destroy: function() {
            i.default.prototype.destroy.apply(this, arguments),
                this.keyboardHandler.destroy(),
                W.selectionManager.events.unregister("selectionchanged", this, this._onSelectionChanged)
        },
        _onSelectionChanged: function(e) {
            var t = _(e.selected).pluck("model");
            this.setEnabledByFeatures(t || [])
        },
        trigger: function() {
            if (this.enabled) {
                var e = this.features;
                if (!_.isEmpty(e)) {
                    var t = !0,
                        n = e.some(function(e) {
                            return e.attributes.hasHNs
                        });
                    switch (e[0].type) {
                        case o.NODE:
                            this.model.deleteNodes(e);
                            break;
                        case o.SEGMENT:
                            e.length > 1 ? t = n ? window.confirm(I18n.t("edit.segment.delete_confirm.multiple_hn")) : window.confirm(I18n.t("edit.segment.delete_confirm.multiple")) : n && (t = window.confirm(I18n.t("edit.segment.delete_confirm.hn"))),
                                t && this.model.deleteSegments(e);
                            break;
                        case o.BIG_JUNCTION:
                            this.model.actionManager.add(new l.default(e[0]));
                            break;
                        default:
                            this.model.deleteObjects(e)
                    }
                    this.onFeatureDelete(e)
                }
            }
        },
        setTooltipByReason: function(e) {
            var t = (0,
                    u.getServerConfig)(),
                n = t.minRankForDeletingSegment,
                i = t.maxAllowedSegmentDeletions;
            return e === s.SEGMENT_DELETION_REJECTION.USER_QUOTA_EXCEEDED ? (this.setTooltip(I18n.t("toolbar.delete_quota_exceeded", {
                    quota: i
                })),
                !0) : e === s.SEGMENT_DELETION_REJECTION.USER_RANK_TOO_LOW && (this.setTooltip(I18n.t("toolbar.delete_rank_not_allowed", {
                    min_rank: r.default.normalizeLevel(n)
                })),
                !0)
        },
        setEnabledByFeatures: function(e) {
            if (e && !_.isEmpty(e)) {
                var t = 1 === e.length && e[0].type === o.NODE,
                    n = !_.isEmpty(e) && e.every(function(e) {
                        return e.type === o.SEGMENT
                    }),
                    i = !_.isEmpty(e) && e.some(function(e) {
                        return e.type === o.SEGMENT
                    }),
                    r = !1;
                if (t)
                    r = e[0].isDeleteable(this.model);
                else
                    r = n ? e.every(function(e) {
                        return e.isDeletable()
                    }) : 1 === e.length && e[0].isDeletable();
                var s = !1;
                if (i && !r) {
                    var a = e.find(function(e) {
                        return e.type === o.SEGMENT && !e.isDeletable()
                    });
                    a && (s = this.setTooltipByReason(a.deletionRejection()))
                }
                s || this.clearTooltip(),
                    this.features = e,
                    this.setEnabled(r)
            } else
                this.setEnabled(!1)
        },
        handleKeypress: function(e) {
            this.keyboardCodes.includes(e.keyCode) && 1 === this.features.length && this.trigger()
        },
        clearTooltip: function() {
            this.tooltip = void 0,
                this.events.triggerEvent("tooltipchanged")
        },
        setTooltip: function(e) {
            this.tooltip = e,
                this.events.triggerEvent("tooltipchanged")
        },
        setEnabled: function(e, t) {
            i.default.prototype.setEnabled.apply(this, arguments),
                e ? this.keyboardHandler.activate() : this.keyboardHandler.deactivate()
        },
        onFeatureDelete: function(e) {}
    });
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = g(n(9)),
        r = g(n(2)),
        s = g(n(0)),
        a = g(n(1)),
        o = g(n(3)),
        l = g(n(8)),
        u = g(n(4)),
        d = g(n(11)),
        c = g(n(20)),
        h = n(14),
        f = g(n(22)),
        p = g(n(453));

    function g(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var v = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, n));
            return i.bigJunction = e,
                i.prevJunctionState = null,
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "getFocusFeatures",
                value: function() {
                    return [this.bigJunction]
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.bigJunction.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }, {
                key: "doAction",
                value: function() {
                    var e = this;
                    if (this.bigJunction.state === OpenLayers.State.DELETE)
                        return !1;
                    var t = this.bigJunction.attributes.segIDs.map(function(t) {
                        return e.model.segments.getObjectById(t)
                    });
                    t.forEach(function(t) {
                            e.doSubAction(new f.default(t, {
                                crossroadID: null
                            }, {
                                dontSerialize: !0
                            }))
                        }),
                        this.doSubAction(new p.default(this.bigJunction.getID(), t, p.default.REMOVE_JUNCTION_FROM_SEGMENT)),
                        this.prevJunctionState = this.bigJunction.state,
                        this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                            this.model.bigJunctions.changed(this.bigJunction))
                }
            }, {
                key: "undoAction",
                value: function() {
                    this.bigJunction.getID(),
                        this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.put(this.bigJunction) : (this.bigJunction.state = this.prevJunctionState,
                            this.model.bigJunctions.changed(this.bigJunction)),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                            this.model.bigJunctions.changed(this.bigJunction)),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this)
                }
            }, {
                key: "serialize",
                value: function() {
                    return {
                        _objectType: h.BIG_JUNCTION,
                        action: c.default.TYPE.DELETE,
                        attributes: {
                            id: this.bigJunction.getID()
                        }
                    }
                }
            }, {
                key: "generateDescription",
                value: function() {
                    var e = this.bigJunction.name,
                        t = this.bigJunction.getAddress(),
                        n = t ? t.getCityName({
                            emptyString: null
                        }) : null;
                    this._description = e ? I18n.t("save.changes_log.actions.DeleteBigjunction.has_name", {
                        name: e
                    }) : n ? I18n.t("save.changes_log.actions.DeleteBigjunction.has_city", {
                        cityName: n
                    }) : I18n.t("save.changes_log.actions.DeleteBigjunction.default")
                }
            }]),
            t
    }(d.default);
    t.default = v,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = m(n(9)),
        r = m(n(2)),
        s = m(n(0)),
        a = m(n(1)),
        o = m(n(3)),
        l = m(n(8)),
        u = m(n(4)),
        d = m(n(20)),
        c = m(n(11)),
        h = n(14),
        f = m(n(123)),
        p = m(n(22)),
        g = m(n(453)),
        v = m(n(41));

    function m(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var y = function(e) {
        function t(e, n) {
            (0,
                s.default)(this, t);
            var i = (0,
                o.default)(this, (t.__proto__ || (0,
                r.default)(t)).call(this, n));
            return i.bigJunction = e,
                i.attributes = {},
                i
        }
        return (0,
                u.default)(t, e),
            (0,
                a.default)(t, [{
                key: "doAction",
                value: function() {
                    var e = this;
                    this.initialGeometry = this.bigJunction.geometry.clone();
                    var t = void 0;
                    this.bigJunction.getID() || (t = this.model.bigJunctions.generateUniqueID()),
                        this.bigJunction.setID(t),
                        this.bigJunction.state = OpenLayers.State.INSERT,
                        this.model.bigJunctions.put(this.bigJunction);
                    var n = this._findShortSegments();
                    n.forEach(function(n) {
                        e.doSubAction(new p.default(n, {
                            crossroadID: t
                        }, {
                            dontSerialize: !0
                        }))
                    });
                    var i = new g.default(t, n, g.default.ADD_JUNCTION_TO_SEGMENT);
                    this.doSubAction(i);
                    var r = i.connectedSegments,
                        s = this._findMaxRankInSegmentArray(n.concat(r)),
                        a = {
                            segIDs: _.invoke(n, "getID"),
                            rank: s
                        };
                    _.extend(this.attributes, a),
                        _.extend(this.bigJunction.attributes, a);
                    var o = null;
                    if (this.model.segments.topCityID && (o = this.model.cities.getObjectById(this.model.segments.topCityID)),
                        null === o && null != this.model.countries.top) {
                        var l = new f.default(this.model.states.top, this.model.countries.top, "", !0);
                        this.doSubAction(l),
                            o = l.city
                    }
                    return null !== o && (this.attributes.cityID = o.getID(),
                            this.bigJunction.attributes.cityID = o.getID()),
                        this.bigJunction.getShortestTurns().forEach(function(t) {
                            return e.doSubAction(new v.default(e.model.getTurnGraph(), t))
                        }),
                        !0
                }
            }, {
                key: "_findShortSegments",
                value: function() {
                    var e = this;
                    return this.model.segments.getObjectArray(function(t) {
                        var n = t.geometry.components;
                        return !t.isDeleted() && t.isDrivable() && e.initialGeometry.containsPoint(_.first(n)) && e.initialGeometry.containsPoint(_.last(n))
                    })
                }
            }, {
                key: "_findMaxRankInSegmentArray",
                value: function(e) {
                    for (var t = 0, n = 0; n < e.length; n++) {
                        var i = e[n].getLockRank();
                        i > t && (t = i)
                    }
                    return t
                }
            }, {
                key: "undoAction",
                value: function() {
                    return (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "undoAction", this).call(this),
                        this.model.bigJunctions.remove(this.bigJunction)
                }
            }, {
                key: "redoAction",
                value: function() {
                    this.model.bigJunctions.put(this.bigJunction),
                        (0,
                            l.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "redoAction", this).call(this)
                }
            }, {
                key: "serialize",
                value: function() {
                    var e = this.attributes;
                    return e.id = this.bigJunction.getID(),
                        e.geometry = this.initialGeometry, {
                            _objectType: h.BIG_JUNCTION,
                            action: d.default.TYPE.ADD,
                            attributes: e
                        }
                }
            }, {
                key: "getFocusFeatures",
                value: function() {
                    return [this.bigJunction]
                }
            }, {
                key: "generateDescription",
                value: function() {
                    this._description = I18n.t("save.changes_log.actions.AddBigJunction")
                }
            }, {
                key: "getAffectedUniqueIds",
                value: function() {
                    return [this.bigJunction.getUniqueID()].concat((0,
                        i.default)((0,
                        l.default)(t.prototype.__proto__ || (0,
                        r.default)(t.prototype), "getAffectedUniqueIds", this).call(this)))
                }
            }]),
            t
    }(c.default);
    t.default = y,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(6)),
        r = o(n(48)),
        s = o(n(409)),
        a = o(n(37));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = OpenLayers.Class(OpenLayers.Control.DrawFeature, r.default, {
        keyHandler: null,
        snapControl: null,
        snappedFrom: null,
        editingMediator: null,
        targetLayer: null,
        type: OL.Control.TYPE_TOGGLE,
        drawingAccuracy: 2,
        keyUp: function(e) {
            this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && this.handler.cancel()
        },
        handleShortcut: function(e) {
            this.isEnabled() && this.activate()
        },
        isEnabled: function() {
            return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
        },
        featureCancelled: function(e) {},
        onDrawCancel: function(e) {
            this.deactivate(),
                this.featureCancelled(e)
        },
        createFeature: function(e) {
            return new a.default({
                geometry: e
            })
        },
        drawFeature: function(e) {
            var t = this.createFeature(e);
            !1 !== this.layer.events.triggerEvent("sketchcomplete", {
                    feature: t
                }) && ("OpenLayers.Geometry.LineString" === t.geometry.CLASS_NAME && (t.geometry = t.geometry.simplify(this.drawingAccuracy * this.map.getResolution())),
                    t.state = OpenLayers.State.INSERT,
                    this.enableSnapping ? (this.snappedFrom && (this.snappedFrom.feature = this.snappedFrom.feature.model,
                            this.snappedFrom.feature && this.snappedFrom.feature.setSnapped(!1)),
                        this.snapControl.snappedFeature && (this.snapControl.snappedFeature.feature = this.snapControl.snappedFeature.feature.model),
                        this.snapControl.snappedFeature && this.snapControl.snappedFeature.feature.outOfScope && (this.snapControl.snappedFeature = null),
                        this.snappedFrom && this.snappedFrom.feature.outOfScope && (this.snappedFrom = null),
                        this.snapControl.snappedFeature && this.snappedFrom && this.snapControl.snappedFeature.feature === this.snappedFrom.feature && (this.snappedFrom = null),
                        this.featureAdded(t, this.snappedFrom, this.snapControl.snappedFeature)) : this.featureAdded(t)),
                this.deactivate()
        },
        initialize: function(e, t, n, s) {
            r.default.prototype.initialize.apply(this, [s]),
                this.callbacks = (0,
                    i.default)({
                    cancel: this.onDrawCancel
                }, this.callbacks),
                this.editingMediator = W.editingMediator,
                this.targetLayer = t,
                OpenLayers.Control.DrawFeature.prototype.initialize.apply(this, [e, n, s]),
                this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                    keyup: this.keyUp
                }),
                this.accelerator && W.accelerators.events.register(this.accelerator, this, this.handleShortcut)
        },
        setMap: function() {
            OL.Control.DrawFeature.prototype.setMap.apply(this, arguments),
                this.enableSnapping && this._createSnappingControl()
        },
        _createSnappingControl: function() {
            this.snapControl = new s.default({
                    layer: this.map.sketchLayer,
                    targets: [{
                        layer: this.map.nodeLayer,
                        filter: {
                            evaluate: function(e) {
                                return !e.model.isConnectedToBigJunction()
                            }
                        }
                    }, {
                        layer: this.map.segmentLayer,
                        filter: {
                            evaluate: function(e) {
                                return !e.model.outOfScope && e.model.isGeometryEditable()
                            }
                        }
                    }]
                }),
                this.snapControl.events.on({
                    snap: function() {
                        var e = this.handler.getGeometry();
                        e && e.components && 1 === e.components.length && (this.snapControl.snappedFeature.feature.model && this.snapControl.snappedFeature.feature.model.setSnapped(!0),
                            this.snappedFrom = this.snapControl.snappedFeature)
                    },
                    scope: this
                })
        },
        setEnabled: function(e, t) {
            r.default.prototype.setEnabled.apply(this, arguments),
                e ? this.keyHandler.activate() : this.keyHandler.deactivate()
        },
        activate: function() {
            this.active || (OpenLayers.Control.DrawFeature.prototype.activate.apply(this, arguments),
                this.keyHandler.activate(),
                this.targetLayer.getVisibility() || this.targetLayer.setVisibility(!0),
                this.editingMediator.setDrawingInProgress(),
                this.enableSnapping && (this.map.addControl(this.snapControl),
                    this.snapControl.activate()))
        },
        deactivate: function() {
            if (this.snappedFrom) {
                var e = this.snappedFrom.feature;
                e.setSnapped || (e = e.model),
                    e.setSnapped(!1)
            }
            this.snappedFrom = null,
                this.active && (this.editingMediator.setDrawingDone(),
                    this.keyHandler.deactivate(),
                    this.enableSnapping && (this.snapControl.deactivate(),
                        this.map.removeControl(this.snapControl)),
                    OpenLayers.Control.DrawFeature.prototype.deactivate.apply(this, arguments))
        },
        CLASS_NAME: "Waze.Control.DrawFeature"
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(6)),
        r = a(n(48)),
        s = a(n(1405));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = OpenLayers.Class(OpenLayers.Control, r.default, {
        keyHandler: null,
        handler: null,
        type: OL.Control.TYPE_TOGGLE,
        editingMediator: null,
        keyUp: function(e) {
            this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && (this.handler.cancel(),
                this.deactivate())
        },
        handleShortcut: function(e) {
            this.isEnabled() && this.activate()
        },
        onDrawCancel: function(e) {
            this.deactivate(),
                this.featureCancelled(e)
        },
        initialize: function(e) {
            OpenLayers.Control.prototype.initialize.apply(this, [e]),
                r.default.prototype.initialize.apply(this, [e]),
                this.callbacks = (0,
                    i.default)({
                    cancel: this.onDrawCancel
                }, this.callbacks),
                this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                    keyup: this.keyUp
                }),
                W.accelerators.events.register("drawRoundabout", this, this.handleShortcut),
                this.handler = new s.default(this, {
                    done: this.onEllipseDrawn,
                    cancel: this.onCancel
                }),
                this.editingMediator = W.editingMediator
        },
        onDrawStart: function() {
            OpenLayers.Element.addClass(this.map.viewPortDiv, this.displayClass + "Over")
        },
        onDrawEnd: function() {
            OpenLayers.Element.removeClass(this.map.viewPortDiv, this.displayClass + "Over")
        },
        isEnabled: function() {
            return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
        },
        onEllipseDrawn: function(e) {
            this.onDrawEnd();
            var t = new OpenLayers.LonLat(e.x, e.y),
                n = e.rx * this.map.getResolution(),
                i = e.ry * this.map.getResolution();
            t.x = t.lon,
                t.y = t.lat;
            var r = new OpenLayers.Bounds(e.x - n, e.y - i, e.x + n, e.y + i);
            this.deactivate(),
                this.onRoundaboutAdded({
                    center: t,
                    rx: n,
                    ry: i,
                    bounds: r
                })
        },
        onCancel: function() {
            this.onDrawEnd(),
                this.deactivate()
        },
        onRoundaboutAdded: function() {},
        setEnabled: function(e, t) {
            r.default.prototype.setEnabled.apply(this, arguments),
                e ? this.keyHandler.activate() : this.keyHandler.deactivate()
        },
        activate: function() {
            this.active || (OpenLayers.Control.prototype.activate.apply(this, arguments),
                this.editingMediator.setDrawingInProgress(),
                this.keyHandler.activate())
        },
        deactivate: function() {
            this.active && (this.keyHandler.deactivate(),
                this.editingMediator.setDrawingDone(),
                OpenLayers.Control.prototype.deactivate.apply(this, arguments))
        },
        CLASS_NAME: "Waze.Control.DrawRoundabout"
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(6)),
        r = s(n(75));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = OpenLayers.Class(OpenLayers.Handler, {
        drawing: !1,
        dragging: !1,
        layer: null,
        style: null,
        point: null,
        lastDown: null,
        lastMove: null,
        distanceLine: null,
        radius: 0,
        rx: 0,
        ry: 0,
        regular: !1,
        geodesicPixelSize: null,
        MinEllipseSize: 15,
        MaxEllipseSizeMeters: 100,
        oldOnselectstart: null,
        initialize: function(e, t, n) {
            n && n.layerOptions && n.layerOptions.styleMap || (this.style = (0,
                    i.default)(OpenLayers.Feature.Vector.style.default, {})),
                OpenLayers.Handler.prototype.initialize.apply(this, arguments)
        },
        setRegular: function(e) {
            this.regular !== e && (this.regular = e,
                this.modifyFeature(this.lastMove))
        },
        activate: function() {
            if (!OpenLayers.Handler.prototype.activate.apply(this, arguments))
                return !1;
            var e = (0,
                    i.default)({
                    calculateInRange: function() {
                        return !0
                    }
                }, this.layerOptions),
                t = OpenLayers.Layer.Vector.prototype.renderers;
            return OpenLayers.Layer.Vector.prototype.renderers = [r.default],
                this.layer = new OpenLayers.Layer.Vector(this.CLASS_NAME, e),
                OpenLayers.Layer.Vector.prototype.renderers = t,
                this.map.addLayer(this.layer),
                this.map.events.on({
                    zoomend: this.onZoom,
                    scope: this
                }),
                !0
        },
        deactivate: function() {
            return !!OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.drawing && this.cancel(),
                this.destroyFeature(),
                null !== this.layer.map && this.layer.destroy(!1),
                this.map.events.un({
                    zoomend: this.zoomend
                }),
                this.layer = null,
                !0)
        },
        onZoom: function() {
            this.drawing && this.cancel()
        },
        dblclick: function(e) {
            return OpenLayers.Event.stop(e),
                !1
        },
        mouseup: function(e) {
            if (this.drawing && this.dragging)
                return this.finalize(),
                    !1
        },
        mousedown: function(e) {
            return this.drawing ? (this.finalize(),
                !1) : (this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : function() {
                    return !0
                }),
                document.onselectstart = function() {
                    return !1
                },
                !this.checkModifiers(e) || (!(!this.lastDown || !this.lastDown.equals(e.xy)) || (this.drawing = !0,
                    this.geodesicPixelSize = this.map.getGeodesicPixelSize().w,
                    null === this.lastDown && this.createFeature(e.xy),
                    this.lastDown = e.xy,
                    !1)))
        },
        createFeature: function(e) {
            var t = this.map.getLonLatFromPixel(e),
                n = new OpenLayers.Geometry.LineString,
                r = void 0;
            (r = this.style ? (0,
                i.default)({}, this.style) : (0,
                i.default)({}, this.layerOptions.styleMap.styles.default.defaultStyle)).rx = this.MinEllipseSize,
                r.ry = this.MinEllipseSize,
                this.point = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t.lon, t.lat), {}, r),
                n.addPoint(this.point.geometry.clone()),
                n.addPoint(this.point.geometry.clone()),
                this.distanceLine = new OpenLayers.Feature.Vector(n),
                this.callback("create", [this.point.geometry, this.point]),
                this.point.geometry.clearBounds(),
                this.layer.addFeatures([this.point], {
                    silent: !0
                })
        },
        finalize: function(e) {
            document.onselectstart = this.oldOnselectstart;
            var t = e ? "cancel" : "done",
                n = void 0;
            this.point && (n = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y)),
                this.drawing = !1,
                this.dragging = !1,
                this.regular = !1,
                this.destroyFeature(),
                Math.min(this.rx, this.ry) > this.MinEllipseSize && this.callback(t, [{
                    x: n.lon,
                    y: n.lat,
                    rx: this.rx,
                    ry: this.ry
                }]),
                this.lastDown = null,
                this.rx = 0,
                this.ry = 0
        },
        destroyFeature: function() {
            this.layer && this.layer.destroyFeatures(),
                this.point = null,
                this.distanceLine = null
        },
        cancel: function() {
            this.finalize(!0)
        },
        modifyFeature: function(e, t) {
            var n, i = _.last(this.distanceLine.geometry.components),
                r = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y),
                s = void 0,
                a = void 0;
            this.lastMove = e;
            var o = this.map.getPixelFromLonLat(r),
                l = e.y - o.y,
                u = e.x - o.x;
            Math.atan2(l, u),
                this.rx = Math.abs(u),
                this.ry = Math.abs(l),
                this.rx < this.MinEllipseSize && (this.rx = this.MinEllipseSize),
                this.ry < this.MinEllipseSize && (this.ry = this.MinEllipseSize);
            var d = Math.floor(this.geodesicPixelSize * this.rx * 1e3),
                c = Math.floor(this.geodesicPixelSize * this.ry * 1e3);
            d > this.MaxEllipseSizeMeters && (this.rx = 1 / (10 * this.geodesicPixelSize)),
                c > this.MaxEllipseSizeMeters && (this.ry = 1 / (10 * this.geodesicPixelSize));
            var h = Math.max(this.rx, this.ry),
                f = Math.ceil(this.geodesicPixelSize * h * 1e3);
            t.shiftKey || (this.rx = h,
                    this.ry = h),
                this.ry > this.rx ? (s = this.rx / this.ry,
                    a = 1) : (a = this.ry / this.rx,
                    s = 1),
                n = Math.atan2(l / a, u / s),
                this.callback("modify", [this.point.geometry, this.point]),
                i.x = r.lon + this.rx * Math.cos(n) * this.map.getResolution(),
                i.y = r.lat - this.ry * Math.sin(n) * this.map.getResolution(),
                i.clearBounds(),
                this.distanceLine.geometry.clearBounds(),
                this.point.geometry.clearBounds(),
                this.point.style.rx = this.rx,
                this.point.style.ry = this.ry,
                this.point.style.label = f + "m",
                this.drawCircle()
        },
        drawCircle: function() {
            this.layer.drawFeature(this.point),
                this.layer.drawFeature(this.distanceLine)
        },
        mousemove: function(e) {
            return this.drawing && (this.dragging = !0,
                    this.modifyFeature(e.xy, e),
                    this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                        document.onselectstart = function() {
                            return !1
                        }
                    )),
                !1
        },
        CLASS_NAME: "Waze.Handler.Ellipse"
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = u(n(2)),
        r = u(n(0)),
        s = u(n(1)),
        a = u(n(3)),
        o = u(n(4)),
        l = u(n(197));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = function(e) {
        function t(e, n) {
            (0,
                r.default)(this, t);
            var s = new l.default({
                    geometry: e,
                    rank: t.getNewCameraAutoRank(n.loginManager.getUserRank(), n.countries.top.allowCamerasRank)
                }),
                o = (0,
                    a.default)(this, (t.__proto__ || (0,
                    i.default)(t)).call(this, s, n.cameras));
            return o._camera = s,
                o
        }
        return (0,
                o.default)(t, e),
            (0,
                s.default)(t, [{
                key: "getCamera",
                value: function() {
                    return this._camera
                }
            }], [{
                key: "getNewCameraAutoRank",
                value: function(e, t) {
                    return null != t ? Math.max(e, t) : e
                }
            }]),
            t
    }(u(n(91)).default);
    t.default = d,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            name: null,
            displayClass: null,
            featureName: null,
            parent: null,
            children: null,
            control: null,
            secondaryControl: null
        },
        initialize: function() {
            var e = n(454),
                t = this.get("children");
            if (null != t)
                return this.children = new e(t),
                    this.unset("children")
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(455)),
        r = o(n(456)),
        s = o(n(1409)),
        a = o(n(1413));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = Marionette.Object.extend({
        initialize: function() {
            var e = new i.default({
                    globalVent: this.options.globalVent
                }),
                t = new r.default({
                    dataModel: this.options.dataModel,
                    map: this.options.map
                }),
                n = null;
            W.Config.area_manager_widget.enable && (n = new s.default({
                    managedAreasRepository: this.options.managedAreasRepository,
                    managedAreasLayer: this.options.map.managedAreasLayer,
                    pannable: this.options.map.getPannable(),
                    drawingContext: this.options.map.getDrawingContext()
                })),
                this.layout = new a.default({
                    loadingIndicatorView: e,
                    locationInfoView: t,
                    areaManagersLayout: n
                })
        },
        destroy: function() {}
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(1410)),
        r = a(n(1411)),
        s = a(n(1412));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.View.extend({
        MAIN_LIST_NUM_ITEMS: 3,
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/layout",
        className: "area-managers",
        regions: {
            mainList: ".main-list-region",
            restList: ".rest-list-region"
        },
        initialize: function() {
            var e = this;
            return this.managedAreasRepository = this.options.managedAreasRepository,
                this.managedAreasRepository.model.events.register("mergeend", this, this._updateCollections),
                this.mainCollection = new Backbone.Collection,
                this.restCollection = new Backbone.Collection,
                this.mainListView = new i.default({
                    collection: this.mainCollection
                }),
                this.restListView = new r.default({
                    collection: this.restCollection
                }),
                this.mapView = new s.default({
                    pannable: this.options.pannable,
                    managedAreasLayer: this.options.managedAreasLayer,
                    drawingContext: this.options.drawingContext
                }),
                [this.mainListView, this.restListView].map(function(t) {
                    return e.listenTo(t, "onAreaMouseEnter", function(t) {
                            return e.mapView.highlightArea(t.attributes.externalModel)
                        }),
                        e.listenTo(t, "onAreaMouseLeave", function() {
                            return e.mapView.hideArea()
                        }),
                        e.listenTo(t, "onAreaClicked", function(t) {
                            return e.mapView.centerArea(t.attributes.externalModel)
                        })
                })
        },
        onDestroy: function() {
            return this.managedAreasRepository.model.events.unregister("mergeend", this, this._updateCollections)
        },
        onRender: function() {
            this.showChildView("mainList", this.mainListView),
                this.showChildView("restList", this.restListView)
        },
        _updateCollections: function() {
            var e = this.managedAreasRepository.getObjectArray().map(function(e) {
                    return new Backbone.Model({
                        username: e.getUserName(),
                        externalModel: e
                    })
                }),
                t = e.splice(this.MAIN_LIST_NUM_ITEMS);
            return this.mainCollection.reset(e),
                this.restCollection.reset(t)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(457),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CompositeView.extend({
        childView: s.default,
        childViewContainer: "ul",
        ui: {
            title: ".title"
        },
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/main-list",
        initialize: function() {
            var e = this;
            return this.on("childview:onAreaMouseEnter", function(t) {
                    return e.trigger("onAreaMouseEnter", t.model)
                }),
                this.on("childview:onAreaMouseLeave", function(t) {
                    return e.trigger("onAreaMouseLeave", t.model)
                }),
                this.on("childview:onAreaClicked", function(t) {
                    return e.trigger("onAreaClicked", t.model)
                }),
                this.listenTo(this.collection, "reset", this._toggleTitle)
        },
        _toggleTitle: function() {
            return this.ui.title.toggle(this.collection.length > 0)
        },
        onRender: function() {
            return this._toggleTitle()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(457),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.CompositeView.extend({
        childView: s.default,
        className: "rest-list",
        childViewContainer: "ul",
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/area-managers/rest-list",
        initialize: function() {
            var e = this;
            return this.on("childview:onAreaMouseEnter", function(t) {
                    return e.trigger("onAreaMouseEnter", t.model)
                }),
                this.on("childview:onAreaMouseLeave", function(t) {
                    return e.trigger("onAreaMouseLeave", t.model)
                }),
                this.on("childview:onAreaClicked", function(t) {
                    return e.trigger("onAreaClicked", t.model)
                }),
                this.collection.on("reset", this.render)
        },
        serializeData: function() {
            return {
                numItems: this.collection.length
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(415),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.Object.extend({
        _highlightedArea: null,
        initialize: function() {
            return this.pannable = this.options.pannable,
                this.managedAreasLayer = this.options.managedAreasLayer,
                this.drawingContext = this.options.drawingContext,
                this.drawingContext.setStyleMap(s.default)
        },
        centerArea: function(e) {
            var t = e.geometry.getBounds().getCenterLonLat();
            return this.pannable.panTo(t)
        },
        highlightArea: function(e) {
            var t = void 0;
            return this.managedAreasLayer.getVisibility() ? (this._highlightedArea = e,
                null != (t = this.managedAreasLayer.getVector(e)) ? this.managedAreasLayer.drawFeature(t, "highlight") : void 0) : ((t = new OL.Feature.Vector(e.geometry.clone())).model = e,
                this.drawingContext.addFeatures(t))
        },
        hideArea: function() {
            if (this.drawingContext.removeAllFeatures(),
                null != this._highlightedArea) {
                var e = this.managedAreasLayer.getVector(this._highlightedArea);
                null != e && this.managedAreasLayer.drawFeature(e, "default"),
                    this._highlightedArea = null
            }
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/Topbar/templates/layout",
        regions: {
            loadingIndicator: ".loading-indicator-region",
            locationInfo: ".location-info-region",
            areaManagers: ".area-managers-region"
        },
        onRender: function() {
            if (this.showChildView("loadingIndicator", this.options.loadingIndicatorView),
                this.showChildView("locationInfo", this.options.locationInfoView),
                null != this.options.areaManagersLayout)
                return this.showChildView("areaManagers", this.options.areaManagersLayout)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(153),
        r = n(32),
        s = u(n(1415)),
        a = u(n(1417)),
        o = u(n(1418)),
        l = u(n(1419));

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var d = Backbone.Model.extend({
            defaults: {
                pendingChanges: !1,
                showingList: !0,
                saving: !1,
                editedModel: null
            }
        }),
        c = Marionette.Object.extend({
            _editingLock: null,
            initialize: function() {
                this.app = W.app,
                    this.map = W.map,
                    this.dataModel = W.model,
                    this.controller = W.controller,
                    this.repo = this.dataModel.majorTrafficEvents,
                    this.mteModeState = new d,
                    this.listenTo(this.mteModeState, "change", this.trigger.bind(this, i.STATE_CHANGED)),
                    this.map.closuresMarkerLayer.toggleRepo = !1,
                    this.dataModel.roadClosures.setActive(!0),
                    this.toolbarController = new s.default({
                        app: W.app,
                        map: this.map,
                        editingMediator: W.editingMediator,
                        actionManager: this.dataModel.actionManager,
                        mteModeState: this.mteModeState,
                        controller: this.controller,
                        togglerTree: W.togglerTree
                    }),
                    this.topbarLayout = new o.default({
                        map: this.map,
                        dataModel: this.dataModel,
                        globalVent: W.vent
                    }),
                    this.sidebarLayout = new a.default({
                        app: W.app
                    }),
                    this.mteController = new l.default({
                        toolbarController: this.toolbarController,
                        sidebarLayout: this.sidebarLayout,
                        mteModeState: this.mteModeState,
                        dataModel: this.dataModel,
                        repository: this.repo,
                        controller: this.controller,
                        editingMediator: W.editingMediator,
                        map: this.map
                    })
            },
            enter: function() {
                this._editingLock = W.editingMediator.lockEditing()
            },
            exit: function() {
                W.editingMediator.releaseEditing(this._editingLock),
                    this.toolbarController.destroy(),
                    this.mteController.destroy(),
                    this.map.closuresMarkerLayer.toggleRepo = !0
            },
            blockingExit: function() {
                return this.mteModeState.get("pendingChanges")
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getTopbarLayout: function() {
                return this.topbarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getState: function() {
                var e = this.mteModeState.get("editedModel");
                return {
                    majorTrafficEvent: e ? e.getID() : void 0
                }
            },
            restore: function() {
                var e = this,
                    t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).majorTrafficEvent;
                if (null != t) {
                    var n = function() {
                        var n = e.repo.getObjectById(t);
                        return null != n && e.mteController.showEditView(n),
                            null != n
                    };
                    return n() ? void 0 : this.listenToOnce(this.repo, r.ADDED, n)
                }
            }
        });
    t.default = c,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = o(n(450)),
        r = o(n(449)),
        s = o(n(1416)),
        a = o(n(448));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var l = Marionette.Object.extend({
        initialize: function(e) {
            return this.app = e.app,
                this.map = e.map,
                this.editingMediator = e.editingMediator,
                this.actionManager = e.actionManager,
                this.mteModeState = e.mteModeState,
                this.searchView = new r.default({
                    map: this.map
                }),
                this.layerSwitcherController = new i.default({
                    map: this.map,
                    actionManager: this.actionManager,
                    controller: e.controller,
                    togglerTree: e.togglerTree
                }),
                this.toolbarButtons = new s.default({
                    mteModeState: this.mteModeState
                }),
                this.toolbarButtons.on("saveClicked", this._onSaveClicked, this),
                this.toolbarButtons.on("addClicked", this._onAddClicked, this),
                this.toolbarButtons.on("deleteClicked", this._onDeleteClicked, this),
                this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                this.toolbarLayout = new a.default({
                    editingMediator: this.editingMediator,
                    model: this.app,
                    className: "toolbar toolbar-mte"
                }),
                this.listenTo(this.toolbarLayout, "render", this._onRender)
        },
        destroy: function() {
            return this.toolbarLayout.destroy(),
                this.layerSwitcherController.destroy(),
                this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
        },
        _onRender: function() {
            this.toolbarLayout.showChildView("layerSwitcher", this.layerSwitcherController.getLayout()),
                this.toolbarLayout.showChildView("toolbar", this.toolbarButtons),
                this.toolbarLayout.showChildView("search", this.searchView)
        },
        _onSaveClicked: function() {
            return this.trigger("saveClicked")
        },
        _onAddClicked: function() {
            return this.trigger("addClicked")
        },
        _onDeleteClicked: function() {
            return this.trigger("deleteClicked")
        },
        _onEditingEnabledChanged: function() {}
    });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(10),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a, o = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/MTE/templates/toolbar_buttons",
        triggers: {
            "click .save-button": "saveClicked",
            "click .add-button": "addClicked",
            "click .delete-button": "deleteClicked"
        },
        bindings: {
            ".save-button": {
                attributes: (a = "pendingChanges",
                    [{
                        name: "disabled",
                        observe: ["saving", a],
                        onGet: function(e) {
                            var t = (0,
                                    s.default)(e, 2),
                                n = t[0],
                                i = t[1];
                            return n || !i
                        }
                    }])
            },
            ".add-button": {
                attributes: function(e) {
                    return [{
                        name: "disabled",
                        observe: ["saving", e],
                        onGet: function(e) {
                            var t = (0,
                                    s.default)(e, 2),
                                n = t[0],
                                i = t[1];
                            return n || i
                        }
                    }]
                }("pendingChanges")
            },
            ".delete-button": {
                attributes: [{
                    name: "disabled",
                    observe: ["editedModel", "showingList", "saving"],
                    onGet: function(e) {
                        var t = (0,
                                s.default)(e, 3),
                            n = t[0],
                            i = t[1];
                        return t[2] || i || n && n.isNew()
                    }
                }]
            }
        },
        initialize: function(e) {
            this.mteModeState = e.mteModeState
        },
        onRender: function() {
            return this.stickit(this.mteModeState)
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/MTE/templates/sidebar",
        className: "sidebar-layout",
        regions: {
            loaderRegion: ".loaderRegion",
            mainRegion: ".mainRegion"
        },
        bindings: {
            ".loaderRegion": {
                observe: "loadingFeatures",
                visible: !0
            },
            ".mainRegion": {
                observe: "loadingFeatures",
                visible: _.negate(_.identity)
            }
        },
        initialize: function(e) {
            this.app = e.app
        },
        onRender: function() {
            return this.stickit(this.app)
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(455)),
        r = s(n(456));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/MTE/templates/topbar",
        regions: {
            loadingIndicator: ".loading-indicator-region",
            locationInfo: ".location-info-region"
        },
        onRender: function() {
            this.showChildView("loadingIndicator", new i.default({
                    globalVent: this.options.globalVent
                })),
                this.showChildView("locationInfo", new r.default({
                    dataModel: this.options.dataModel,
                    map: this.options.map
                }))
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = h(n(1420)),
        r = h(n(152)),
        s = n(32),
        a = h(n(1422)),
        o = h(n(1424)),
        l = h(n(145)),
        u = h(n(424)),
        d = h(n(423)),
        c = n(110);

    function h(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var f = Marionette.Object.extend({
        initialize: function(e) {
            var t = this;
            return this.toolbarController = e.toolbarController,
                this.sidebarLayout = e.sidebarLayout,
                this.mteModeState = e.mteModeState,
                this.dataModel = e.dataModel,
                this.repository = e.repository,
                this.controller = e.controller,
                this.editingMediator = e.editingMediator,
                this.map = e.map,
                this.mteCollection = new a.default,
                this.mteListView = new i.default({
                    collection: this.mteCollection,
                    dataModel: this.dataModel
                }),
                this.listenTo(this.repository, s.UPDATED, this._updateCollection),
                this.listenTo(this.toolbarController, "saveClicked", this._onSaveClicked),
                this.listenTo(this.toolbarController, "addClicked", this._onAddClicked),
                this.listenTo(this.toolbarController, "deleteClicked", this._onDeleteClicked),
                this.listenTo(this.mteListView, "mteItemClicked", this._onMteItemClicked),
                this.savePopoverRegion = new u.default({
                    saveButtonSelector: ".toolbar-mte .save-button"
                }),
                this.listenTo(this.sidebarLayout, "render", function() {
                    return t._updateCollection(),
                        t._showListView()
                })
        },
        _updateCollection: function(e) {
            return this.mteCollection.reset(this.repository.getObjectArray())
        },
        _onSaveClicked: function() {
            this.editView.validate() && this._save(this.editView.getAction())
        },
        _save: function(e) {
            var t = this;
            e.doAction(),
                this.mteModeState.set({
                    saving: !0
                });
            var n = new d.default({
                map: this.map,
                mediator: this.editingMediator,
                popoverRegion: this.savePopoverRegion
            });
            return this.controller.save({
                actions: [e]
            }).then(function(e) {
                n.success(e),
                    t.mteModeState.set({
                        pendingChanges: !1
                    })
            }).catch(function(i) {
                if (t._rollbackChanges(e),
                    !(i instanceof c.SaveError))
                    throw i;
                n.fail(i.errors)
            }).finally(function() {
                t.mteModeState.set({
                    saving: !1
                })
            })
        },
        _onMteItemClicked: function(e) {
            return this.showEditView(e)
        },
        showEditView: function(e) {
            return this.mteModeState.set({
                    showingList: !1,
                    pendingChanges: !1,
                    editedModel: e
                }),
                this.editView = new o.default({
                    model: e,
                    dataModel: this.dataModel,
                    map: this.map,
                    mteModeState: this.mteModeState
                }),
                this.sidebarLayout.showChildView("mainRegion", this.editView, {
                    preventDestroy: !0
                }),
                this.editView.on("backButtonClicked", this._showListView, this),
                this.editView.on("modelChanged", this._onModelChanged, this)
        },
        _onAddClicked: function() {
            var e = new l.default;
            return e.model = this.dataModel,
                this.showEditView(e),
                this.mteModeState.set({
                    pendingChanges: !0
                })
        },
        _onDeleteClicked: function() {
            if (!this.mteModeState.get("pendingChanges") || window.confirm(I18n.t("mte.edit.pending_changes_delete"))) {
                var e = new r.default(this.mteModeState.get("editedModel"));
                return e.setModel(this.dataModel),
                    this._save(e).then(this._showListView.bind(this))
            }
        },
        _onModelChanged: function() {
            return this.mteModeState.set({
                pendingChanges: !0
            })
        },
        _showListView: function() {
            return this.mteModeState.set({
                    showingList: !0,
                    pendingChanges: !1,
                    editedModel: null
                }),
                this.sidebarLayout.showChildView("mainRegion", this.mteListView)
        },
        _rollbackChanges: function(e) {
            return e.undoAction(),
                this.dataModel.actionManager.clear()
        },
        onDestroy: function() {
            return this.savePopoverRegion.destroy()
        }
    });
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(10)),
        r = s(n(1421));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var a = {
            THIS_WEEK: {
                name: I18n.t("mte.search.this_week"),
                endDate: 7..day().fromNow()
            },
            THIS_MONTH: {
                name: I18n.t("mte.search.this_month"),
                endDate: 1..month().fromNow()
            },
            NEXT_3_MONTHS: {
                name: I18n.t("mte.search.next_3_months"),
                endDate: 3..month().fromNow()
            },
            NEXT_YEAR: {
                name: I18n.t("mte.search.next_year"),
                endDate: 1..year().fromNow()
            }
        },
        o = Marionette.View.extend({
            className: "empty-message",
            template: function() {
                return I18n.t("mte.search.empty")
            }
        }),
        l = Marionette.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/mte_list",
            className: "flex-parent",
            childView: r.default,
            childViewContainer: "ul.mte-list",
            emptyView: o,
            ui: {
                search: ".search-input",
                list: "ul.mte-list"
            },
            events: {
                "focus @ui.search": "_onFocusChange",
                "blur @ui.search": "_onFocusChange",
                "click .add-mte-button": "_onAddClicked",
                "click .date-filter-item": "_onDateFilterClicked"
            },
            childViewEvents: {
                click: "_onItemClicked"
            },
            bindings: {
                ".search-input": {
                    observe: "query",
                    onSet: function(e) {
                        return e.toLowerCase()
                    }
                },
                ".current-date-filter": {
                    observe: "dateFilter",
                    onGet: function(e) {
                        return e.name
                    }
                },
                "ul.mte-list": {
                    classes: {
                        disabled: {
                            observe: ["typing", "query"],
                            onGet: function(e) {
                                var t = (0,
                                        i.default)(e, 2),
                                    n = t[0],
                                    r = t[1];
                                return n && !r
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                return this.dataModel = e.dataModel,
                    this.model = new Backbone.Model({
                        query: "",
                        typing: !1,
                        dateFilter: a.THIS_MONTH
                    }),
                    this.listenTo(this.model, "change:query change:dateFilter", function() {
                        return t._renderChildren()
                    })
            },
            filter: function(e) {
                if (Date.parse(e.get("startDate")) > this.model.get("dateFilter").endDate)
                    return !1;
                var t = this.model.get("query"),
                    n = e.getEnglishName(),
                    i = this.dataModel.cities.getObjectById(e.get("cityID"));
                return i && (n = n + " " + i.attributes.englishName + " " + i.attributes.name),
                    n.toLowerCase().indexOf(t) > -1
            },
            onRender: function() {
                return this.stickit()
            },
            serializeData: function() {
                return {
                    dateFilters: a
                }
            },
            _onFocusChange: function(e) {
                return this.model.set("typing", this.ui.search.is(":focus"))
            },
            _onItemClicked: function(e) {
                return this.trigger("mteItemClicked", e.model)
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDateFilterClicked: function(e) {
                var t = $(e.target);
                return this.model.set("dateFilter", a[t.data().filter])
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(16),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Marionette.View.extend({
        tagName: "li",
        className: "mte-item",
        template: "Waze/MapEditor/UI/Modules/MTE/templates/mte_item_view",
        triggers: {
            click: "click"
        },
        serializeData: function() {
            return {
                published: this.model.get("published"),
                name: this.model.getEnglishName(),
                date: this._shortDate()
            }
        },
        _shortDate: function() {
            var e = Date.parse(this.model.get("startDate")),
                t = Date.parse(this.model.get("endDate"));
            return s.default.formatMonthRange(e, t)
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(1423),
        s = (i = r) && i.__esModule ? i : {
            default: i
        };
    var a = Backbone.Collection.extend({
        model: s.default,
        comparator: function(e) {
            return (e.getEnglishName() || "").toLowerCase()
        }
    });
    t.default = a,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            name: null
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = b(n(7)),
        r = b(n(25)),
        s = b(n(10)),
        a = b(n(160)),
        o = b(n(91)),
        l = b(n(122)),
        u = b(n(1425)),
        d = n(145),
        c = b(n(1427)),
        h = b(n(1428)),
        f = b(n(22)),
        p = b(n(16)),
        g = b(n(1429)),
        v = b(n(1430)),
        m = b(n(1432)),
        y = n(30);

    function b(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var w = Marionette.View.extend({
        className: "mte-edit-view",
        template: "Waze/MapEditor/UI/Modules/MTE/templates/mte_edit_view",
        behaviors: {
            dateTimePickers: {
                behaviorClass: l.default
            }
        },
        regions: {
            namesRegion: ".names-region",
            addressEditRegion: ".address-edit-region",
            closuresRegion: "#mte-edit-closures",
            contributorsRegion: ".contributors-region",
            twitterUrlsRegion: ".twitter-urls-region"
        },
        events: {
            "click .back-button": "_onBackButtonClicked",
            "show.bs.tab .closures-tab": "_onClosuresTabClick",
            "show.bs.tab .contributors-tab": "_onContributorsTabClick",
            "click .submit-button": "_onSubmitClicked",
            "click .publish-button": "_onPublishClicked",
            "submit @ui.attributesForm": "_onFormSubmitted"
        },
        ui: {
            formSubmit: ".form-submit-button",
            attributesForm: ".attributes-form",
            formInputs: "form button, form input, form select",
            locationTooltip: ".location-tooltip"
        },
        bindings: {
            ".url": "url",
            ".event-page": {
                observe: "uniqueName",
                visible: !0
            },
            ".event-page a": {
                attributes: [{
                    name: "href",
                    observe: "uniqueName",
                    onGet: function(e) {
                        return e ? W.Config.mte.root_url + "/" + e : null
                    }
                }]
            },
            ".submit-buttons": {
                observe: "published",
                visible: !0,
                onGet: function(e) {
                    return !e
                }
            },
            ".category": {
                observe: "category",
                selectOptions: {
                    collection: "this.categoryOptions",
                    defaultOption: {
                        value: null,
                        label: I18n.t("mte.edit.select_category")
                    }
                }
            },
            "[name=tweetText]": {
                observe: "tweetText",
                attributes: [{
                    name: "disabled",
                    observe: "published"
                }]
            }
        },
        submitButtonBindings: {
            ".submit-button": {
                observe: "submitted",
                visible: !0,
                onGet: function(e) {
                    return !e
                },
                attributes: [{
                    name: "disabled",
                    observe: "submitting"
                }]
            },
            ".submitted-indication": {
                observe: "submitted",
                visible: !0
            }
        },
        publishBindings: {
            ".publish-button": {
                observe: ["published", "canPublish"],
                visible: !0,
                onGet: function(e) {
                    var t = (0,
                            s.default)(e, 2),
                        n = t[0],
                        i = t[1];
                    return !n && i
                },
                attributes: [{
                    name: "disabled",
                    observe: "publishing"
                }]
            },
            ".published-indication": {
                observe: ["published", "canPublish"],
                visible: !0,
                onGet: function(e) {
                    var t = (0,
                            s.default)(e, 2),
                        n = t[0],
                        i = t[1];
                    return n && i
                }
            }
        },
        validationErrorsBindings: {
            ".validation-error[for=cityID]": "cityID",
            ".validation-error[for=names]": "names",
            ".validation-error[for=startDate]": "startDate",
            ".validation-error[for=endDate]": "endDate",
            ".start-date-group": {
                classes: {
                    "has-error": {
                        observe: "startDate"
                    }
                }
            },
            ".end-date-group": {
                classes: {
                    "has-error": {
                        observe: "endDate"
                    }
                }
            }
        },
        initialize: function(e) {
            var t = this;
            this.dataModel = e.dataModel,
                this.mteModeState = e.mteModeState,
                this.api = new u.default({
                    dataModel: this.dataModel
                });
            var n = [this.model.clone(), this.model];
            return this.model = n[0],
                this.originalModel = n[1],
                this.api = new u.default({
                    dataModel: this.dataModel
                }),
                this.submitViewModel = new Backbone.Model({
                    submitting: !1,
                    submitted: this.originalModel.get("ready")
                }),
                this.publishViewModel = new Backbone.Model({
                    publishing: !1,
                    canPublish: this.model.canPublish(),
                    published: this.originalModel.get("published")
                }),
                this.categoryOptions = _.map(d.CATEGORIES, function(e) {
                    return {
                        label: I18n.t("mte.edit.categories." + e),
                        value: e
                    }
                }),
                this.listenTo(this.originalModel, "change", function(e) {
                    return t.model.set(e.changed),
                        t.submitViewModel.set({
                            submitted: t.originalModel.get("ready")
                        }),
                        t.publishViewModel.set({
                            published: t.originalModel.get("published"),
                            canPublish: t.originalModel.canPublish()
                        })
                }),
                this.listenTo(this.model, "change", this._onModelChanged),
                this.listenTo(this.mteModeState, "change:saving", this._onSavingChanged)
        },
        _onModelChanged: function(e) {
            if (null != this.validator) {
                var t = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var a, o = (0,
                            r.default)((0,
                            i.default)(e.changed)); !(t = (a = o.next()).done); t = !0) {
                        var l = a.value;
                        this.validator.clearErrorFor(l)
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
            }
            var u = (0,
                i.default)(e.changed);
            if (_.intersection(u, d.WRITABLE_ATTRIBUTES).length > 0)
                return this.trigger("modelChanged")
        },
        onRender: function() {
            var e = this;
            this.namesView = new h.default({
                    model: this.model,
                    editable: this.model.arePropertiesEditable()
                }),
                this.listenTo(this.namesView, "namesChanged", function(t) {
                    return e.model.set({
                        names: t
                    })
                }),
                this.showChildView("namesRegion", this.namesView),
                this.addressView = new a.default({
                    addressModel: this.model.getAddress(),
                    dataModel: this.dataModel,
                    feature: this.model,
                    editable: this.model.arePropertiesEditable(),
                    editStreet: !1,
                    showCitySelect: !0
                }),
                this.listenTo(this.addressView, "addressChanged", function() {
                    e.trigger("modelChanged"),
                        e.validator && e.validator.clearErrorFor("cityID")
                }),
                this.showChildView("addressEditRegion", this.addressView),
                this._showTwitterUrls(),
                this.stickit(),
                this.stickit(this.submitViewModel, this.submitButtonBindings),
                this.stickit(this.publishViewModel, this.publishBindings),
                this.model.arePropertiesEditable() || this._toggleFormInputs(!1),
                this.ui.locationTooltip.tooltip()
        },
        _showTwitterUrls: function() {
            this.getRegion("twitterUrlsRegion").empty();
            var e = this.model.attributes.twitterAccountsUrls;
            e.length > 0 && this.showChildView("twitterUrlsRegion", new Marionette.View({
                template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/twitter_urls",
                templateContext: {
                    twitterAccountsUrls: e
                }
            }))
        },
        templateContext: function() {
            return {
                modelAttributes: this.model.attributes,
                canEditTweetText: this.model.canEditTweetText(),
                newModel: this.model.isNew()
            }
        },
        _onSavingChanged: function(e, t) {
            if (this.model.arePropertiesEditable())
                return this._toggleFormInputs(!t),
                    this.namesView.toggleEditable(!t),
                    this.addressView.toggleEditable(!t)
        },
        _toggleFormInputs: function(e) {
            return this.ui.formInputs.prop("disabled", !e)
        },
        validate: function() {
            return !!this._isMTEValid() || (this._showValidationErrors(),
                !1)
        },
        _isMTEValid: function() {
            var e = this.ui.attributesForm.get(0).checkValidity();
            return null != this.validator && this.unstickit(this.validator, this.validationErrorsBindings),
                this.validator = c.default.validate(this.model),
                this.stickit(this.validator, this.validationErrorsBindings),
                this.validator.isValid() && e
        },
        _showValidationErrors: function() {
            return this.ui.formSubmit.click()
        },
        getAction: function() {
            var e = void 0;
            return (e = this.model.isNew() ? new o.default(this.model, this.dataModel.majorTrafficEvents) : new f.default(this.originalModel, this.model.attributes)).setModel(this.dataModel),
                e
        },
        _onBackButtonClicked: function() {
            var e = !0;
            if (this.mteModeState.get("pendingChanges") && (e = window.confirm(I18n.t("mte.edit.pending_changes"))),
                e)
                return this.trigger("backButtonClicked")
        },
        _loadMTEDetails: function(e, t) {
            return e.show(new g.default({
                    loading: !0,
                    loadingMessage: t
                })),
                this.api.getMTEDetails(this.model.get("id"))
        },
        _showMTEDetailsError: function(e, t) {
            e.show(new g.default({
                error: !0,
                errorMessage: t
            }))
        },
        _onClosuresTabClick: function() {
            var e = this,
                t = this.getRegion("closuresRegion");
            return this._loadMTEDetails(t, I18n.t("mte.edit.closures.loading")).then(function(t) {
                return e.showChildView("closuresRegion", new m.default({
                    map: e.options.map,
                    model: e.model,
                    mteModeState: e.mteModeState,
                    dataModel: e.dataModel,
                    detailsModel: t,
                    canAdd: !1,
                    drawingContext: e.options.map.getDrawingContext({
                        extendedMode: !0
                    }),
                    closuresMarkerLayer: e.options.map.closuresMarkerLayer
                }))
            }).catch(function() {
                e._showMTEDetailsError(t, I18n.t("mte.edit.closures.error"))
            })
        },
        _onContributorsTabClick: function() {
            var e = this,
                t = this.getRegion("contributorsRegion");
            return this._loadMTEDetails(t, I18n.t("mte.edit.contributors.loading")).then(function(t) {
                return e.showChildView("contributorsRegion", new v.default({
                    detailsModel: t,
                    mteModel: e.model,
                    editable: e.model.canEditPartners()
                }))
            }).catch(function() {
                e._showMTEDetailsError(t, I18n.t("mte.edit.contributors.error"))
            })
        },
        _onSubmitClicked: function() {
            var e = this;
            if (window.confirm(I18n.t("mte.edit.submit_confirm")))
                return this.submitViewModel.set({
                        submitting: !0
                    }),
                    this.api.submit(this.originalModel).catch(function(e) {
                        if (!(e instanceof y.FetchError))
                            throw e;
                        var t = e.response.errorList,
                            n = t ? t[0].code : void 0;
                        alert(p.default.getSaveErrorTitle(n, "mte.edit.submit_failed"))
                    }).finally(function() {
                        e.submitViewModel.set({
                            submitting: !1
                        })
                    })
        },
        _onPublishClicked: function() {
            var e = this;
            return this.publishViewModel.set({
                    publishing: !0
                }),
                this.api.publish(this.originalModel).finally(function() {
                    e.publishViewModel.set({
                            publishing: !1
                        }),
                        e._showTwitterUrls()
                }).catch(function(e) {
                    if (!(e instanceof y.FetchError))
                        throw e;
                    var t = e.response.errorList,
                        n = t ? t[0].code : void 0;
                    alert(p.default.getSaveErrorTitle(n, "mte.edit.publish_failed"))
                })
        },
        _onFormSubmitted: function(e) {
            return e.preventDefault()
        }
    });
    t.default = w,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(1426)),
        r = a(n(87)),
        s = n(30);

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.Object.extend({
        initialize: function(e) {
            this.dataModel = e.dataModel
        },
        getMTEDetails: function(e) {
            var t = this,
                n = {
                    id: e,
                    mapVersionID: this.dataModel.lastTransactionID
                };
            return (0,
                s.httpGet)(W.Config.paths.mteDetails, n).then(function(e) {
                var n = _.omit(e, "extendedDetails"),
                    s = (new r.default).read(n);
                t.dataModel.putPersistent(s);
                var a = _.extend(e.extendedDetails, {
                    segments: s.segments.objects,
                    closures: s.roadClosures.objects
                });
                return new i.default(a)
            })
        },
        submit: function(e) {
            return (0,
                s.httpPost)(W.Config.paths.mteReady, {
                id: e.getID()
            }).then(function(t) {
                return e.set(t.majorTrafficEvents.objects[0]),
                    e
            })
        },
        publish: function(e) {
            return (0,
                s.httpPost)(W.Config.paths.mtePublish, {
                id: e.getID()
            }).then(function(t) {
                return e.set(t.majorTrafficEvents.objects[0]),
                    e
            })
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            segments: null,
            closures: null,
            contributors: null,
            partners: null,
            availablePartners: null
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = new RegExp("^[a-zA-Z0-9]{1,1}[\\sa-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]{0,26}$", "i"),
        r = Backbone.Model.extend({
            isValid: function() {
                return _.isEmpty(this.attributes)
            },
            clearErrorFor: function(e) {
                return this.unset(e)
            }
        });
    r.validate = function(e) {
            var t = {},
                n = e.get("startDate"),
                s = e.get("endDate"),
                a = e.getEnglishName();
            return e.getAddress().get("isEmpty") && (t.cityID = I18n.t("mte.edit.validation_errors.location")),
                null === a ? t.names = I18n.t("mte.edit.validation_errors.names") : a.length > 27 ? t.names = I18n.t("mte.edit.validation_errors.english_name_length") : i.test(a) || (t.names = I18n.t("mte.edit.validation_errors.english_name")),
                null === n && (t.startDate = I18n.t("mte.edit.validation_errors.start_date")),
                null === s && (t.endDate = I18n.t("mte.edit.validation_errors.end_date")),
                null !== n && null !== s && Date.parse(n) > Date.parse(s) && (t.endDate = I18n.t("mte.edit.validation_errors.end_before_start")),
                new r(t)
        },
        r.ENGLISH_NAME_PATTERN = i,
        t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i, r = n(7),
        s = (i = r) && i.__esModule ? i : {
            default: i
        },
        a = n(145);
    var o = Backbone.Model.extend({
            defaults: {
                englishName: "",
                localName: "",
                locale: "es",
                showAddButton: !0,
                showLocalName: !1,
                showPreview: !0,
                editable: !0
            }
        }),
        l = Marionette.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/names",
            className: "mte-names-edit-view",
            events: {
                "click .add-local-name-button": "_onAddLocalNameButtonClicked",
                "click .remove-local-name-button": "_onRemoveLocalNameButtonClicked",
                "click .edit-names-button": "_onEditNamesButtonClicked",
                submit: "_onFormSubmitted"
            },
            bindings: {
                ".preview": {
                    observe: "showPreview",
                    visible: !0
                },
                ".edit-form": {
                    observe: "showPreview",
                    visible: _.negate(_.identity)
                },
                ".english-name-preview .name": {
                    observe: "englishName",
                    onGet: function(e) {
                        return _.isEmpty(e) ? I18n.t("mte.edit.name_list.add_name") : e
                    }
                },
                ".english-name-preview": {
                    classes: {
                        empty: {
                            observe: "englishName",
                            onGet: _.negate(_.identity)
                        }
                    }
                },
                ".language-preview": {
                    observe: "englishName",
                    visible: !0,
                    onGet: function(e) {
                        return !_.isEmpty(e)
                    }
                },
                ".local-name-preview": {
                    observe: "showLocalName",
                    visible: !0
                },
                ".local-language-preview": "locale",
                ".local-name-preview .name": "localName",
                ".english-name input": "englishName",
                ".local-name input": {
                    observe: "localName",
                    attributes: [{
                        name: "required",
                        observe: "showLocalName"
                    }]
                },
                ".locale": {
                    observe: "locale",
                    selectOptions: {
                        collection: "this.localeOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.name_list.select_language")
                        }
                    },
                    attributes: [{
                        observe: "showLocalName",
                        name: "required"
                    }]
                },
                ".form-group.local-name": {
                    observe: "showLocalName",
                    visible: !0
                },
                ".add-local-name-button": {
                    observe: "showAddButton",
                    visible: !0
                },
                ".edit-names-button": {
                    attributes: [{
                        name: "disabled",
                        observe: "editable",
                        onGet: _.negate(_.identity)
                    }]
                },
                ".edit-names-button .waze-icon-edit": {
                    observe: "editable",
                    visible: !0
                }
            },
            initialize: function(e) {
                var t = this.model.getLocale();
                this.viewModel = new o({
                        englishName: this.model.getEnglishName(),
                        localName: this.model.getLocalName(),
                        locale: t,
                        editable: e.editable
                    }),
                    null !== t && this.viewModel.set({
                        showLocalName: !0,
                        showAddButton: !1
                    });
                var n = _.without(["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"], a.ENGLISH_LOCALE).map(function(e) {
                        return {
                            label: {
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español América Latina",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "อังกฤษ"
                            } [e],
                            value: e
                        }
                    }),
                    i = (0,
                        s.default)(a.MTE_LOCALES).map(function(e) {
                        return {
                            label: a.MTE_LOCALES[e],
                            value: e
                        }
                    });
                this.localeOptions = _.sortBy(n.concat(i), "value")
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            serializeData: function() {
                return {
                    ENGLISH_LOCALE: a.ENGLISH_LOCALE
                }
            },
            toggleEditable: function(e) {
                return !1 === e && this.viewModel.set({
                        showPreview: !0
                    }),
                    this.viewModel.set({
                        editable: e
                    })
            },
            _onAddLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !0,
                    showAddButton: !1
                })
            },
            _onRemoveLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !1,
                    showAddButton: !0
                })
            },
            _onEditNamesButtonClicked: function() {
                return this.viewModel.set({
                    showPreview: !1
                })
            },
            _onFormSubmitted: function(e) {
                e.preventDefault(),
                    this.viewModel.set({
                        showPreview: !0
                    });
                var t = [{
                    locale: a.ENGLISH_LOCALE,
                    value: this.viewModel.get("englishName")
                }];
                return this.viewModel.get("showLocalName") && t.push({
                        locale: this.viewModel.get("locale"),
                        value: this.viewModel.get("localName")
                    }),
                    this.trigger("namesChanged", t)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
            defaults: {
                loading: !1,
                error: !1,
                loadingMessage: "",
                errorMessage: ""
            }
        }),
        r = Marionette.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/loading",
            bindings: {
                ".loading": {
                    observe: "loading",
                    visible: !0
                },
                ".error": {
                    observe: "error",
                    visible: !0
                }
            },
            initialize: function(e) {
                this.model = new i(e)
            },
            onRender: function() {
                return this.stickit()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = a(n(10)),
        r = a(n(1431)),
        s = a(n(16));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = Marionette.CompositeView.extend({
        template: "Waze/MapEditor/UI/Modules/MTE/templates/contributors/list",
        className: "mte-contributors-list",
        childView: r.default,
        childViewContainer: ".list",
        childViewOptions: function() {
            return {
                editable: this.options.editable
            }
        },
        events: {
            "click .add-partner-button": "_onAddClicked",
            "click .cancel-button": "_onCancelClicked",
            "submit .add-partner-form": "_onPartnerFormSubmitted"
        },
        childViewEvents: {
            removeClicked: "_onRemoveClicked"
        },
        bindings: {
            ".add-partner-form": {
                observe: "showAddPartnerForm",
                visible: !0
            },
            ".add-partner-button": {
                observe: ["showAddPartnerForm", "editable"],
                visible: !0,
                onGet: function(e) {
                    var t = (0,
                            i.default)(e, 2),
                        n = t[0];
                    return t[1] && !n
                }
            },
            ".partner-select": {
                observe: "selectedPartner",
                selectOptions: {
                    collection: "this._partnerOptions",
                    defaultOption: {
                        label: I18n.t("mte.edit.contributors.choose_partner"),
                        value: null
                    }
                }
            }
        },
        initialize: function() {
            var e = this.options.mteModel.get("partners").map(function(e) {
                    return {
                        userID: e,
                        isPartner: !0
                    }
                }),
                t = this.options.detailsModel.get("contributors").map(function(e) {
                    return {
                        userID: e
                    }
                });
            this.collection = new Backbone.Collection(e.concat(t)),
                this.collection.on("reset add remove", this._onPartnersChanged, this),
                this._generatePartnerOptions(),
                this.viewModel = new Backbone.Model({
                    showAddPartnerForm: !1,
                    selectedPartner: null,
                    editable: this.options.editable
                })
        },
        _generatePartnerOptions: function() {
            var e = this.collection.where({
                    isPartner: !0
                }).map(function(e) {
                    return e.get("userID")
                }),
                t = _.difference(this.options.detailsModel.get("availablePartners"), e);
            this._partnerOptions = t.map(function(e) {
                return {
                    label: s.default.formatUserName(e),
                    value: e
                }
            }).sort(function(e, t) {
                return e.label.localeCompare(t.label)
            })
        },
        onRender: function() {
            return this.stickit(this.viewModel)
        },
        _onAddClicked: function() {
            return this.viewModel.set({
                showAddPartnerForm: !0
            })
        },
        _onCancelClicked: function() {
            return this.viewModel.set({
                showAddPartnerForm: !1
            })
        },
        _onRemoveClicked: function(e) {
            return this.collection.remove(e.model)
        },
        _onPartnerFormSubmitted: function(e) {
            e.preventDefault();
            var t = new Backbone.Model({
                userID: this.viewModel.get("selectedPartner"),
                isPartner: !0
            });
            return this.collection.add(t),
                this.viewModel.set({
                    showAddPartnerForm: !1,
                    selectedPartner: null
                })
        },
        _updateModel: function() {
            var e = this.collection.where({
                isPartner: !0
            }).map(function(e) {
                return e.get("userID")
            });
            return this.options.mteModel.set({
                partners: e
            })
        },
        _onPartnersChanged: function() {
            return this._generatePartnerOptions(),
                this.stickit(this.viewModel),
                this._updateModel()
        }
    });
    t.default = o,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Marionette.View.extend({
        template: "Waze/MapEditor/UI/Modules/MTE/templates/contributors/item",
        className: "mte-contributors-item",
        triggers: {
            "click .remove-button": "removeClicked"
        },
        serializeData: function() {
            var e = this;
            return _.tap(Marionette.View.prototype.serializeData.apply(this, arguments), function(t) {
                t.editable = e.options.editable
            })
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = c(n(7)),
        r = c(n(25)),
        s = c(n(441)),
        a = c(n(443)),
        o = c(n(444)),
        l = c(n(220)),
        u = c(n(217)),
        d = c(n(1433));

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var h = Marionette.View.extend({
            template: function() {
                return I18n.t("mte.edit.closures.empty")
            }
        }),
        f = Marionette.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/closures",
            regions: {
                closuresRegion: ".closures"
            },
            initialize: function(e) {
                this.segments = e.detailsModel.get("segments"),
                    this.closures = e.detailsModel.get("closures"),
                    this.map = e.map,
                    this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.drawingContext = e.drawingContext,
                    this.closuresMarkerLayer = e.closuresMarkerLayer,
                    this._showClosures() && (this.compositeSegment = new l.default(this.segments, this.dataModel, u.default.getReversedSegments(this.segments)))
            },
            onRender: function() {
                this._showClosures() ? (new s.default({
                        region: this.getRegion("closuresRegion"),
                        pannable: this.map.getPannable(),
                        dataModel: this.dataModel,
                        compositeSegment: this.compositeSegment,
                        allClosures: this.closures,
                        repoActive: this.dataModel.roadClosures.active,
                        canSaveClosures: this._canSaveClosures(),
                        listViewConfig: o.default.MTE,
                        editViewConfig: a.default.MTE
                    }).showClosures(),
                    this._drawClosures(),
                    this._toggleMarkers(!1)) : this.showChildView("closuresRegion", new h)
            },
            _showClosures: function() {
                return Boolean(this.segments.length)
            },
            _canSaveClosures: function() {
                return this.model.arePropertiesEditable() && !this.mteModeState.get("pendingChanges")
            },
            _drawClosures: function() {
                var e = this,
                    t = void 0;
                return this.drawingContext.setStyleMap(d.default),
                    ["outline", "fill", "dash"].map(function(n) {
                        return t = e.segments.map(function(e) {
                                return new OL.Feature.Vector(e.geometry.clone(), {
                                    type: n
                                })
                            }),
                            e.drawingContext.addFeatures(t)
                    })
            },
            _toggleMarkers: function(e) {
                var t = _.pluck(this.closures, "id"),
                    n = !0,
                    s = !1,
                    a = void 0;
                try {
                    for (var o, l = (0,
                            r.default)((0,
                            i.default)(this.closuresMarkerLayer.markers)); !(n = (o = l.next()).done); n = !0) {
                        var u = o.value,
                            d = this.closuresMarkerLayer.markers[u];
                        _.contains(t, u) || d.toggle(e)
                    }
                } catch (e) {
                    s = !0,
                        a = e
                } finally {
                    try {
                        !n && l.return && l.return()
                    } finally {
                        if (s)
                            throw a
                    }
                }
            },
            onDestroy: function() {
                return this.drawingContext.destroy(),
                    this._toggleMarkers(!0)
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = new OL.StyleMap;
    i.addUniqueValueRules("default", "type", {
            outline: {
                strokeColor: "black",
                strokeWidth: 14
            },
            fill: {
                strokeColor: "white",
                strokeWidth: 10
            },
            dash: {
                strokeColor: "red",
                strokeDashstyle: "dash",
                strokeDashArray: "10 10",
                strokeLinecap: "butt",
                strokeWidth: 10
            }
        }),
        t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = Backbone.Model.extend({
        defaults: {
            id: 1,
            isImperial: null,
            twoWaySegmentsByDefault: !1,
            enableTurnsByDefault: !1,
            requireFeatureDeselect: !1,
            spreadTurnArrows: !1,
            showTransparentTurnArrows: !1
        },
        localStorage: new Backbone.LocalStorage("preferences"),
        initialize: function() {
            var e = this;
            this.on("change", function() {
                return e.save()
            })
        }
    });
    t.default = i,
        e.exports = t.default
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = s(n(68)),
        r = s(n(7));

    function s(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.init = function(e) {
        (function(e) {
            var t = W.Config.regions[e],
                n = W.Config.raster_layers.regions[e];
            $.extend(!0, W.Config, t),
                $.extend(!0, W.Config.raster_layers, n)
        })(e),
        (0,
            r.default)(W.Config.paths).forEach(function(e) {
                var t = W.Config.paths[e];
                W.Config.paths[e] = W.Config.api_base + "/" + t
            }),
            (0,
                i.default)(W.Config)
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.isValidLocaleCode = t.getAndSetRegionAndLocaleCodes = void 0;
    var i = u(n(19)),
        r = l(n(126)),
        s = l(n(207)),
        a = l(n(1437)),
        o = u(n(1438));

    function l(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    }

    function u(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }

    function d() {
        var e = s.getRegionAndLocaleCodes();
        return {
            regionCode: e.code,
            localeCode: e.locale
        }
    }

    function c() {
        return (new o.default).getRegionCode()
    }

    function h(e) {
        return r.REGION_CODES.includes(e)
    }

    function f(e) {
        return ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"].includes(e)
    }

    function p(e, t) {
        var n = d(),
            i = c(),
            s = [e, n.regionCode, i, r.DEFAULT_REGION_CODE].filter(h)[0],
            a = function(e) {
                return e === r.REGION_CODE_USA ? r.DEFAULT_LOCALE_CODE_USA : r.DEFAULT_LOCALE_CODE
            }(s);
        return {
            regionCode: s,
            localeCode: [n.localeCode, t, a].filter(f)[0]
        }
    }

    function g() {
        var e = d(),
            t = c(),
            n = h(t),
            s = e.regionCode;
        n && (s = t);
        var o = e.localeCode;
        return function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
            return null != e && null != t
        }(s, o) ? i.default.resolve({
            regionCode: s,
            localeCode: o
        }) : (new a.WASClient).getCountryByIP().then(function(e) {
            return {
                abbr: e.abbr,
                locale: e.locale
            }
        }).catch(function() {
            return {
                abbr: null,
                locale: r.DEFAULT_LOCALE_CODE
            }
        }).then(function(e) {
            return p(a.regionCodeFromWASAbbr(e.abbr), a.localeCodeFromWASLocale(e.locale))
        })
    }
    t.getAndSetRegionAndLocaleCodes = function() {
            return g().then(function(e) {
                var t = e.regionCode,
                    n = e.localeCode;
                return function(e, t) {
                    s.setRegionAndLocaleCodes(e, t)
                }(t, n), {
                    regionCode: t,
                    localeCode: n
                }
            })
        },
        t.isValidLocaleCode = f
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.localeCodeFromWASLocale = t.regionCodeFromWASAbbr = t.WASClient = void 0;
    var i = l(n(7)),
        r = l(n(0)),
        s = l(n(1)),
        a = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        }(n(126)),
        o = n(30);

    function l(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var u = "US",
        d = "CA",
        c = "IL",
        h = {
            iw: "he",
            ji: "yi",
            in: "id",
            "en-UK": "en-GB"
        },
        f = function() {
            function e() {
                (0,
                    r.default)(this, e)
            }
            return (0,
                    s.default)(e, [{
                    key: "getCountryByIP",
                    value: function() {
                        return (0,
                            o.httpGet)("/WAS/country_by_ip").then(function(e) {
                            return {
                                abbr: e.abbr,
                                bounds: e.bounds,
                                locale: e.locale,
                                name: e.name
                            }
                        }).catch(function() {
                            console.error("Error retreiving country information")
                        })
                    }
                }]),
                e
        }();
    t.WASClient = f,
        t.regionCodeFromWASAbbr = function(e) {
            var t = e === c;
            return e === u || e === d ? a.REGION_CODE_USA : t ? a.REGION_CODE_IL : a.DEFAULT_REGION_CODE
        },
        t.localeCodeFromWASLocale = function(e) {
            return (0,
                i.default)(h).includes(e) ? h[e] : e
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(126),
        r = function() {
            function e() {
                this.urlParams = window.OL.Util.getParameters(window.location.href, {
                    splitArgs: !0
                })
            }
            return e.prototype.getRegionCode = function() {
                    return this.getAsStringOrNull(i.URL_PARAM_REGION_CODE)
                },
                e.prototype.getAsStringOrNull = function(e) {
                    var t = this.getValueOrNull(e);
                    return Array.isArray(t) ? t[0] : t
                },
                e.prototype.getValueOrNull = function(e) {
                    var t = this.urlParams[e];
                    return null != t && "" !== t ? t : null
                },
                e
        }();
    t.default = r
}, function(e, t, n) {
    "use strict";
    n(1440),
        n(1442),
        n(1447),
        n(1449),
        n(1451),
        n(1453),
        n(1455),
        n(1457),
        n(1459),
        n(1461),
        n(1463),
        n(1465),
        n(1467),
        n(1469),
        n(1471),
        n(1473),
        n(1475),
        n(1477),
        n(1479),
        n(1481),
        n(1483),
        n(1485),
        n(1487),
        n(1489),
        n(1491),
        n(1493),
        n(1495),
        n(1497),
        n(1499),
        n(1501),
        n(1503),
        n(1505),
        n(1507),
        n(1509),
        n(1511),
        n(1513),
        n(1515),
        n(1517),
        n(1519),
        n(1521),
        n(1523),
        n(1525),
        n(1527),
        n(1529)
}, function(e, t, n) {}, , function(e, t, n) {
    var i = n(1443);
    "string" == typeof i && (i = [
        [e.i, i, ""]
    ]);
    var r = {
        transform: void 0
    };
    n(225)(i, r);
    i.locals && (e.exports = i.locals)
}, function(e, t, n) {
    var i = n(1444);
    (e.exports = n(224)(!1)).push([e.i, "/*\nVersion: @@ver@@ Timestamp: @@timestamp@@\n*/\n.select2-container {\n    margin: 0;\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n}\n\n.select2-container,\n.select2-drop,\n.select2-search,\n.select2-search input {\n  /*\n    Force border-box so that % widths fit the parent\n    container without overlap because of margin/padding.\n    More Info : http://www.quirksmode.org/css/box.html\n  */\n  -webkit-box-sizing: border-box; /* webkit */\n     -moz-box-sizing: border-box; /* firefox */\n          box-sizing: border-box; /* css3 */\n}\n\n.select2-container .select2-choice {\n    display: block;\n    height: 26px;\n    padding: 0 0 0 8px;\n    overflow: hidden;\n    position: relative;\n\n    border: 1px solid #aaa;\n    white-space: nowrap;\n    line-height: 26px;\n    color: #444;\n    text-decoration: none;\n\n    border-radius: 4px;\n\n    background-clip: padding-box;\n\n    -webkit-touch-callout: none;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none;\n\n    background-color: #fff;\n    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #eee), color-stop(0.5, #fff));\n    background-image: -webkit-linear-gradient(center bottom, #eee 0%, #fff 50%);\n    background-image: -moz-linear-gradient(center bottom, #eee 0%, #fff 50%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr = '#ffffff', endColorstr = '#eeeeee', GradientType = 0);\n    background-image: linear-gradient(to top, #eee 0%, #fff 50%);\n}\n\nhtml[dir=\"rtl\"] .select2-container .select2-choice {\n    padding: 0 8px 0 0;\n}\n\n.select2-container.select2-drop-above .select2-choice {\n    border-bottom-color: #aaa;\n\n    border-radius: 0 0 4px 4px;\n\n    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #eee), color-stop(0.9, #fff));\n    background-image: -webkit-linear-gradient(center bottom, #eee 0%, #fff 90%);\n    background-image: -moz-linear-gradient(center bottom, #eee 0%, #fff 90%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#eeeeee', GradientType=0);\n    background-image: linear-gradient(to bottom, #eee 0%, #fff 90%);\n}\n\n.select2-container.select2-allowclear .select2-choice .select2-chosen {\n    margin-right: 42px;\n}\n\n.select2-container .select2-choice > .select2-chosen {\n    margin-right: 26px;\n    display: block;\n    overflow: hidden;\n\n    white-space: nowrap;\n\n    text-overflow: ellipsis;\n    float: none;\n    width: auto;\n}\n\nhtml[dir=\"rtl\"] .select2-container .select2-choice > .select2-chosen {\n    margin-left: 26px;\n    margin-right: 0;\n}\n\n.select2-container .select2-choice abbr {\n    display: none;\n    width: 12px;\n    height: 12px;\n    position: absolute;\n    right: 24px;\n    top: 8px;\n\n    font-size: 1px;\n    text-decoration: none;\n\n    border: 0;\n    background: url(" + i(n(42)) + ") right top no-repeat;\n    cursor: pointer;\n    outline: 0;\n}\n\n.select2-container.select2-allowclear .select2-choice abbr {\n    display: inline-block;\n}\n\n.select2-container .select2-choice abbr:hover {\n    background-position: right -11px;\n    cursor: pointer;\n}\n\n.select2-drop-mask {\n    border: 0;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    left: 0;\n    top: 0;\n    min-height: 100%;\n    min-width: 100%;\n    height: auto;\n    width: auto;\n    opacity: 0;\n    z-index: 9998;\n    /* styles required for IE to work */\n    background-color: #fff;\n    filter: alpha(opacity=0);\n}\n\n.select2-drop {\n    width: 100%;\n    margin-top: -1px;\n    position: absolute;\n    z-index: 9999;\n    top: 100%;\n\n    background: #fff;\n    color: #000;\n    border: 1px solid #aaa;\n    border-top: 0;\n\n    border-radius: 0 0 4px 4px;\n\n    -webkit-box-shadow: 0 4px 5px rgba(0, 0, 0, .15);\n            box-shadow: 0 4px 5px rgba(0, 0, 0, .15);\n}\n\n.select2-drop.select2-drop-above {\n    margin-top: 1px;\n    border-top: 1px solid #aaa;\n    border-bottom: 0;\n\n    border-radius: 4px 4px 0 0;\n\n    -webkit-box-shadow: 0 -4px 5px rgba(0, 0, 0, .15);\n            box-shadow: 0 -4px 5px rgba(0, 0, 0, .15);\n}\n\n.select2-drop-active {\n    border: 1px solid #5897fb;\n    border-top: none;\n}\n\n.select2-drop.select2-drop-above.select2-drop-active {\n    border-top: 1px solid #5897fb;\n}\n\n.select2-drop-auto-width {\n    border-top: 1px solid #aaa;\n    width: auto;\n}\n\n.select2-container .select2-choice .select2-arrow {\n    display: inline-block;\n    width: 18px;\n    height: 100%;\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    border-left: 1px solid #aaa;\n    border-radius: 0 4px 4px 0;\n\n    background-clip: padding-box;\n\n    background: #ccc;\n    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #ccc), color-stop(0.6, #eee));\n    background-image: -webkit-linear-gradient(center bottom, #ccc 0%, #eee 60%);\n    background-image: -moz-linear-gradient(center bottom, #ccc 0%, #eee 60%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr = '#eeeeee', endColorstr = '#cccccc', GradientType = 0);\n    background-image: linear-gradient(to top, #ccc 0%, #eee 60%);\n}\n\nhtml[dir=\"rtl\"] .select2-container .select2-choice .select2-arrow {\n    left: 0;\n    right: auto;\n\n    border-left: none;\n    border-right: 1px solid #aaa;\n    border-radius: 4px 0 0 4px;\n}\n\n.select2-container .select2-choice .select2-arrow b {\n    display: block;\n    width: 100%;\n    height: 100%;\n    background: url(" + i(n(42)) + ') no-repeat 0 1px;\n}\n\nhtml[dir="rtl"] .select2-container .select2-choice .select2-arrow b {\n    background-position: 2px 1px;\n}\n\n.select2-search {\n    display: inline-block;\n    width: 100%;\n    min-height: 26px;\n    margin: 0;\n    padding: 4px 4px 0 4px;\n\n    position: relative;\n    z-index: 10000;\n\n    white-space: nowrap;\n}\n\n.select2-search input {\n    width: 100%;\n    height: auto !important;\n    min-height: 26px;\n    padding: 4px 20px 4px 5px;\n    margin: 0;\n\n    outline: 0;\n    font-family: sans-serif;\n    font-size: 1em;\n\n    border: 1px solid #aaa;\n    border-radius: 0;\n\n    -webkit-box-shadow: none;\n            box-shadow: none;\n\n    background: #fff url(' + i(n(42)) + ") no-repeat 100% -22px;\n    background: url(" + i(n(42)) + ") no-repeat 100% -22px, -webkit-gradient(linear, left bottom, left top, color-stop(0.85, #fff), color-stop(0.99, #eee));\n    background: url(" + i(n(42)) + ") no-repeat 100% -22px, -webkit-linear-gradient(center bottom, #fff 85%, #eee 99%);\n    background: url(" + i(n(42)) + ") no-repeat 100% -22px, -moz-linear-gradient(center bottom, #fff 85%, #eee 99%);\n    background: url(" + i(n(42)) + ') no-repeat 100% -22px, linear-gradient(to bottom, #fff 85%, #eee 99%) 0 0;\n}\n\nhtml[dir="rtl"] .select2-search input {\n    padding: 4px 5px 4px 20px;\n\n    background: #fff url(' + i(n(42)) + ") no-repeat -37px -22px;\n    background: url(" + i(n(42)) + ") no-repeat -37px -22px, -webkit-gradient(linear, left bottom, left top, color-stop(0.85, #fff), color-stop(0.99, #eee));\n    background: url(" + i(n(42)) + ") no-repeat -37px -22px, -webkit-linear-gradient(center bottom, #fff 85%, #eee 99%);\n    background: url(" + i(n(42)) + ") no-repeat -37px -22px, -moz-linear-gradient(center bottom, #fff 85%, #eee 99%);\n    background: url(" + i(n(42)) + ") no-repeat -37px -22px, linear-gradient(to bottom, #fff 85%, #eee 99%) 0 0;\n}\n\n.select2-search input.select2-active {\n    background: #fff url(" + i(n(94)) + ") no-repeat 100%;\n    background: url(" + i(n(94)) + ") no-repeat 100%, -webkit-gradient(linear, left bottom, left top, color-stop(0.85, #fff), color-stop(0.99, #eee));\n    background: url(" + i(n(94)) + ") no-repeat 100%, -webkit-linear-gradient(center bottom, #fff 85%, #eee 99%);\n    background: url(" + i(n(94)) + ") no-repeat 100%, -moz-linear-gradient(center bottom, #fff 85%, #eee 99%);\n    background: url(" + i(n(94)) + ") no-repeat 100%, linear-gradient(to bottom, #fff 85%, #eee 99%) 0 0;\n}\n\n.select2-container-active .select2-choice,\n.select2-container-active .select2-choices {\n    border: 1px solid #5897fb;\n    outline: none;\n\n    -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n            box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n}\n\n.select2-dropdown-open .select2-choice {\n    border-bottom-color: transparent;\n    -webkit-box-shadow: 0 1px 0 #fff inset;\n            box-shadow: 0 1px 0 #fff inset;\n\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n\n    background-color: #eee;\n    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #fff), color-stop(0.5, #eee));\n    background-image: -webkit-linear-gradient(center bottom, #fff 0%, #eee 50%);\n    background-image: -moz-linear-gradient(center bottom, #fff 0%, #eee 50%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#eeeeee', endColorstr='#ffffff', GradientType=0);\n    background-image: linear-gradient(to top, #fff 0%, #eee 50%);\n}\n\n.select2-dropdown-open.select2-drop-above .select2-choice,\n.select2-dropdown-open.select2-drop-above .select2-choices {\n    border: 1px solid #5897fb;\n    border-top-color: transparent;\n\n    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, #fff), color-stop(0.5, #eee));\n    background-image: -webkit-linear-gradient(center top, #fff 0%, #eee 50%);\n    background-image: -moz-linear-gradient(center top, #fff 0%, #eee 50%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#eeeeee', endColorstr='#ffffff', GradientType=0);\n    background-image: linear-gradient(to bottom, #fff 0%, #eee 50%);\n}\n\n.select2-dropdown-open .select2-choice .select2-arrow {\n    background: transparent;\n    border-left: none;\n    filter: none;\n}\nhtml[dir=\"rtl\"] .select2-dropdown-open .select2-choice .select2-arrow {\n    border-right: none;\n}\n\n.select2-dropdown-open .select2-choice .select2-arrow b {\n    background-position: -18px 1px;\n}\n\nhtml[dir=\"rtl\"] .select2-dropdown-open .select2-choice .select2-arrow b {\n    background-position: -16px 1px;\n}\n\n.select2-hidden-accessible {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n}\n\n/* results */\n.select2-results {\n    max-height: 200px;\n    padding: 0 0 0 4px;\n    margin: 4px 4px 4px 0;\n    position: relative;\n    overflow-x: hidden;\n    overflow-y: auto;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\nhtml[dir=\"rtl\"] .select2-results {\n    padding: 0 4px 0 0;\n    margin: 4px 0 4px 4px;\n}\n\n.select2-results ul.select2-result-sub {\n    margin: 0;\n    padding-left: 0;\n}\n\n.select2-results li {\n    list-style: none;\n    display: list-item;\n    background-image: none;\n}\n\n.select2-results li.select2-result-with-children > .select2-result-label {\n    font-weight: bold;\n}\n\n.select2-results .select2-result-label {\n    padding: 3px 7px 4px;\n    margin: 0;\n    cursor: pointer;\n\n    min-height: 1em;\n\n    -webkit-touch-callout: none;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none;\n}\n\n.select2-results-dept-1 .select2-result-label { padding-left: 20px }\n.select2-results-dept-2 .select2-result-label { padding-left: 40px }\n.select2-results-dept-3 .select2-result-label { padding-left: 60px }\n.select2-results-dept-4 .select2-result-label { padding-left: 80px }\n.select2-results-dept-5 .select2-result-label { padding-left: 100px }\n.select2-results-dept-6 .select2-result-label { padding-left: 110px }\n.select2-results-dept-7 .select2-result-label { padding-left: 120px }\n\n.select2-results .select2-highlighted {\n    background: #3875d7;\n    color: #fff;\n}\n\n.select2-results li em {\n    background: #feffde;\n    font-style: normal;\n}\n\n.select2-results .select2-highlighted em {\n    background: transparent;\n}\n\n.select2-results .select2-highlighted ul {\n    background: #fff;\n    color: #000;\n}\n\n.select2-results .select2-no-results,\n.select2-results .select2-searching,\n.select2-results .select2-ajax-error,\n.select2-results .select2-selection-limit {\n    background: #f4f4f4;\n    display: list-item;\n    padding-left: 5px;\n}\n\n/*\ndisabled look for disabled choices in the results dropdown\n*/\n.select2-results .select2-disabled.select2-highlighted {\n    color: #666;\n    background: #f4f4f4;\n    display: list-item;\n    cursor: default;\n}\n.select2-results .select2-disabled {\n  background: #f4f4f4;\n  display: list-item;\n  cursor: default;\n}\n\n.select2-results .select2-selected {\n    display: none;\n}\n\n.select2-more-results.select2-active {\n    background: #f4f4f4 url(" + i(n(94)) + ') no-repeat 100%;\n}\n\n.select2-results .select2-ajax-error {\n    background: rgba(255, 50, 50, .2);\n}\n\n.select2-more-results {\n    background: #f4f4f4;\n    display: list-item;\n}\n\n/* disabled styles */\n\n.select2-container.select2-container-disabled .select2-choice {\n    background-color: #f4f4f4;\n    background-image: none;\n    border: 1px solid #ddd;\n    cursor: default;\n}\n\n.select2-container.select2-container-disabled .select2-choice .select2-arrow {\n    background-color: #f4f4f4;\n    background-image: none;\n    border-left: 0;\n}\n\n.select2-container.select2-container-disabled .select2-choice abbr {\n    display: none;\n}\n\n\n/* multiselect */\n\n.select2-container-multi .select2-choices {\n    height: auto !important;\n    height: 1%;\n    margin: 0;\n    padding: 0 5px 0 0;\n    position: relative;\n\n    border: 1px solid #aaa;\n    cursor: text;\n    overflow: hidden;\n\n    background-color: #fff;\n    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, color-stop(1%, #eee), color-stop(15%, #fff));\n    background-image: -webkit-linear-gradient(top, #eee 1%, #fff 15%);\n    background-image: -moz-linear-gradient(top, #eee 1%, #fff 15%);\n    background-image: linear-gradient(to bottom, #eee 1%, #fff 15%);\n}\n\nhtml[dir="rtl"] .select2-container-multi .select2-choices {\n    padding: 0 0 0 5px;\n}\n\n.select2-locked {\n  padding: 3px 5px 3px 5px !important;\n}\n\n.select2-container-multi .select2-choices {\n    min-height: 26px;\n}\n\n.select2-container-multi.select2-container-active .select2-choices {\n    border: 1px solid #5897fb;\n    outline: none;\n\n    -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n            box-shadow: 0 0 5px rgba(0, 0, 0, .3);\n}\n.select2-container-multi .select2-choices li {\n    float: left;\n    list-style: none;\n}\nhtml[dir="rtl"] .select2-container-multi .select2-choices li\n{\n    float: right;\n}\n.select2-container-multi .select2-choices .select2-search-field {\n    margin: 0;\n    padding: 0;\n    white-space: nowrap;\n}\n\n.select2-container-multi .select2-choices .select2-search-field input {\n    padding: 5px;\n    margin: 1px 0;\n\n    font-family: sans-serif;\n    font-size: 100%;\n    color: #666;\n    outline: 0;\n    border: 0;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n    background: transparent !important;\n}\n\n.select2-container-multi .select2-choices .select2-search-field input.select2-active {\n    background: #fff url(' + i(n(94)) + ") no-repeat 100% !important;\n}\n\n.select2-default {\n    color: #999 !important;\n}\n\n.select2-container-multi .select2-choices .select2-search-choice {\n    padding: 3px 5px 3px 18px;\n    margin: 3px 0 3px 5px;\n    position: relative;\n\n    line-height: 13px;\n    color: #333;\n    cursor: default;\n    border: 1px solid #aaaaaa;\n\n    border-radius: 3px;\n\n    -webkit-box-shadow: 0 0 2px #fff inset, 0 1px 0 rgba(0, 0, 0, 0.05);\n            box-shadow: 0 0 2px #fff inset, 0 1px 0 rgba(0, 0, 0, 0.05);\n\n    background-clip: padding-box;\n\n    -webkit-touch-callout: none;\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none;\n\n    background-color: #e4e4e4;\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#eeeeee', endColorstr='#f4f4f4', GradientType=0);\n    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, color-stop(20%, #f4f4f4), color-stop(50%, #f0f0f0), color-stop(52%, #e8e8e8), color-stop(100%, #eee));\n    background-image: -webkit-linear-gradient(top, #f4f4f4 20%, #f0f0f0 50%, #e8e8e8 52%, #eee 100%);\n    background-image: -moz-linear-gradient(top, #f4f4f4 20%, #f0f0f0 50%, #e8e8e8 52%, #eee 100%);\n    background-image: linear-gradient(to bottom, #f4f4f4 20%, #f0f0f0 50%, #e8e8e8 52%, #eee 100%);\n}\nhtml[dir=\"rtl\"] .select2-container-multi .select2-choices .select2-search-choice\n{\n    margin: 3px 5px 3px 0;\n    padding: 3px 18px 3px 5px;\n}\n.select2-container-multi .select2-choices .select2-search-choice .select2-chosen {\n    cursor: default;\n}\n.select2-container-multi .select2-choices .select2-search-choice-focus {\n    background: #d4d4d4;\n}\n\n.select2-search-choice-close {\n    display: block;\n    width: 12px;\n    height: 13px;\n    position: absolute;\n    right: 3px;\n    top: 4px;\n\n    font-size: 1px;\n    outline: none;\n    background: url(" + i(n(42)) + ') right top no-repeat;\n}\nhtml[dir="rtl"] .select2-search-choice-close {\n    right: auto;\n    left: 3px;\n}\n\n.select2-container-multi .select2-search-choice-close {\n    left: 3px;\n}\n\nhtml[dir="rtl"] .select2-container-multi .select2-search-choice-close {\n    left: auto;\n    right: 2px;\n}\n\n.select2-container-multi .select2-choices .select2-search-choice .select2-search-choice-close:hover {\n  background-position: right -11px;\n}\n.select2-container-multi .select2-choices .select2-search-choice-focus .select2-search-choice-close {\n    background-position: right -11px;\n}\n\n/* disabled styles */\n.select2-container-multi.select2-container-disabled .select2-choices {\n    background-color: #f4f4f4;\n    background-image: none;\n    border: 1px solid #ddd;\n    cursor: default;\n}\n\n.select2-container-multi.select2-container-disabled .select2-choices .select2-search-choice {\n    padding: 3px 5px 3px 5px;\n    border: 1px solid #ddd;\n    background-image: none;\n    background-color: #f4f4f4;\n}\n\n.select2-container-multi.select2-container-disabled .select2-choices .select2-search-choice .select2-search-choice-close {    display: none;\n    background: none;\n}\n/* end multiselect */\n\n\n.select2-result-selectable .select2-match,\n.select2-result-unselectable .select2-match {\n    text-decoration: underline;\n}\n\n.select2-offscreen, .select2-offscreen:focus {\n    clip: rect(0 0 0 0) !important;\n    width: 1px !important;\n    height: 1px !important;\n    border: 0 !important;\n    margin: 0 !important;\n    padding: 0 !important;\n    overflow: hidden !important;\n    position: absolute !important;\n    outline: 0 !important;\n    left: 0px !important;\n    top: 0px !important;\n}\n\n.select2-display-none {\n    display: none;\n}\n\n.select2-measure-scrollbar {\n    position: absolute;\n    top: -10000px;\n    left: -10000px;\n    width: 100px;\n    height: 100px;\n    overflow: scroll;\n}\n\n/* Retina-ize icons */\n\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 2dppx)  {\n    .select2-search input,\n    .select2-search-choice-close,\n    .select2-container .select2-choice abbr,\n    .select2-container .select2-choice .select2-arrow b {\n        background-image: url(' + i(n(1445)) + ") !important;\n        background-repeat: no-repeat !important;\n        background-size: 60px 40px !important;\n    }\n\n    .select2-search input {\n        background-position: 100% -21px !important;\n    }\n}\n", ""])
}, function(e, t) {
    e.exports = function(e) {
        return "string" != typeof e ? e : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)),
            /["'() \t\n]/.test(e) ? '"' + e.replace(/"/g, '\\"').replace(/\n/g, "\\n") + '"' : e)
    }
}, function(e, t, n) {
    e.exports = n.p + "img/select2x249e3f006018662f60f1db2aec0b2cca9.png"
}, function(e, t) {
    e.exports = function(e) {
        var t = "undefined" != typeof window && window.location;
        if (!t)
            throw new Error("fixUrls requires window.location");
        if (!e || "string" != typeof e)
            return e;
        var n = t.protocol + "//" + t.host,
            i = n + t.pathname.replace(/\/[^\/]*$/, "/");
        return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(e, t) {
            var r, s = t.trim().replace(/^"(.*)"$/, function(e, t) {
                return t
            }).replace(/^'(.*)'$/, function(e, t) {
                return t
            });
            return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(s) ? e : (r = 0 === s.indexOf("//") ? s : 0 === s.indexOf("/") ? n + s : i + s.replace(/^\.\//, ""),
                "url(" + JSON.stringify(r) + ")")
        })
    }
}, function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {}, , function(e, t, n) {
    var i = n(1524);
    "string" == typeof i && (i = [
        [e.i, i, ""]
    ]);
    var r = {
        transform: void 0
    };
    n(225)(i, r);
    i.locals && (e.exports = i.locals)
}, function(e, t, n) {
    (e.exports = n(224)(!1)).push([e.i, '/*!\n * Timepicker Component for Twitter Bootstrap\n *\n * Copyright 2013 Joris de Wit\n *\n * Contributors https://github.com/jdewit/bootstrap-timepicker/graphs/contributors\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n.bootstrap-timepicker {\n  position: relative;\n}\n.bootstrap-timepicker.pull-right .bootstrap-timepicker-widget.dropdown-menu {\n  left: auto;\n  right: 0;\n}\n.bootstrap-timepicker.pull-right .bootstrap-timepicker-widget.dropdown-menu:before {\n  left: auto;\n  right: 12px;\n}\n.bootstrap-timepicker.pull-right .bootstrap-timepicker-widget.dropdown-menu:after {\n  left: auto;\n  right: 13px;\n}\n.bootstrap-timepicker .input-group-addon {\n  cursor: pointer;\n}\n.bootstrap-timepicker .input-group-addon i {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n}\n.bootstrap-timepicker-widget.dropdown-menu {\n  padding: 4px;\n}\n.bootstrap-timepicker-widget.dropdown-menu.open {\n  display: inline-block;\n}\n.bootstrap-timepicker-widget.dropdown-menu:before {\n  border-bottom: 7px solid rgba(0, 0, 0, 0.2);\n  border-left: 7px solid transparent;\n  border-right: 7px solid transparent;\n  content: "";\n  display: inline-block;\n  position: absolute;\n}\n.bootstrap-timepicker-widget.dropdown-menu:after {\n  border-bottom: 6px solid #FFFFFF;\n  border-left: 6px solid transparent;\n  border-right: 6px solid transparent;\n  content: "";\n  display: inline-block;\n  position: absolute;\n}\n.bootstrap-timepicker-widget.timepicker-orient-left:before {\n  left: 6px;\n}\n.bootstrap-timepicker-widget.timepicker-orient-left:after {\n  left: 7px;\n}\n.bootstrap-timepicker-widget.timepicker-orient-right:before {\n  right: 6px;\n}\n.bootstrap-timepicker-widget.timepicker-orient-right:after {\n  right: 7px;\n}\n.bootstrap-timepicker-widget.timepicker-orient-top:before {\n  top: -7px;\n}\n.bootstrap-timepicker-widget.timepicker-orient-top:after {\n  top: -6px;\n}\n.bootstrap-timepicker-widget.timepicker-orient-bottom:before {\n  bottom: -7px;\n  border-bottom: 0;\n  border-top: 7px solid #999;\n}\n.bootstrap-timepicker-widget.timepicker-orient-bottom:after {\n  bottom: -6px;\n  border-bottom: 0;\n  border-top: 6px solid #ffffff;\n}\n.bootstrap-timepicker-widget a.btn,\n.bootstrap-timepicker-widget input {\n  border-radius: 4px;\n}\n.bootstrap-timepicker-widget table {\n  width: 100%;\n  margin: 0;\n}\n.bootstrap-timepicker-widget table td {\n  text-align: center;\n  height: 30px;\n  margin: 0;\n  padding: 2px;\n}\n.bootstrap-timepicker-widget table td:not(.separator) {\n  min-width: 30px;\n}\n.bootstrap-timepicker-widget table td span {\n  width: 100%;\n}\n.bootstrap-timepicker-widget table td a {\n  border: 1px transparent solid;\n  width: 100%;\n  display: inline-block;\n  margin: 0;\n  padding: 8px 0;\n  outline: 0;\n  color: #333;\n}\n.bootstrap-timepicker-widget table td a:hover {\n  text-decoration: none;\n  background-color: #eee;\n  -webkit-border-radius: 4px;\n  -moz-border-radius: 4px;\n  border-radius: 4px;\n  border-color: #ddd;\n}\n.bootstrap-timepicker-widget table td a i {\n  margin-top: 2px;\n  font-size: 18px;\n}\n.bootstrap-timepicker-widget table td input {\n  width: 25px;\n  margin: 0;\n  text-align: center;\n}\n.bootstrap-timepicker-widget .modal-content {\n  padding: 4px;\n}\n@media (min-width: 767px) {\n  .bootstrap-timepicker-widget.modal {\n    width: 200px;\n    margin-left: -100px;\n  }\n}\n@media (max-width: 767px) {\n  .bootstrap-timepicker {\n    width: 100%;\n  }\n  .bootstrap-timepicker .dropdown-menu {\n    width: 100%;\n  }\n}\n', ""])
}, function(e, t, n) {
    var i = n(1526);
    "string" == typeof i && (i = [
        [e.i, i, ""]
    ]);
    var r = {
        transform: void 0
    };
    n(225)(i, r);
    i.locals && (e.exports = i.locals)
}, function(e, t, n) {
    (e.exports = n(224)(!1)).push([e.i, ".daterangepicker {\r\n  position: absolute;\r\n  color: inherit;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  width: 278px;\r\n  padding: 4px;\r\n  margin-top: 1px;\r\n  top: 100px;\r\n  left: 20px;\r\n  /* Calendars */ }\r\n  .daterangepicker:before, .daterangepicker:after {\r\n    position: absolute;\r\n    display: inline-block;\r\n    border-bottom-color: rgba(0, 0, 0, 0.2);\r\n    content: ''; }\r\n  .daterangepicker:before {\r\n    top: -7px;\r\n    border-right: 7px solid transparent;\r\n    border-left: 7px solid transparent;\r\n    border-bottom: 7px solid #ccc; }\r\n  .daterangepicker:after {\r\n    top: -6px;\r\n    border-right: 6px solid transparent;\r\n    border-bottom: 6px solid #fff;\r\n    border-left: 6px solid transparent; }\r\n  .daterangepicker.opensleft:before {\r\n    right: 9px; }\r\n  .daterangepicker.opensleft:after {\r\n    right: 10px; }\r\n  .daterangepicker.openscenter:before {\r\n    left: 0;\r\n    right: 0;\r\n    width: 0;\r\n    margin-left: auto;\r\n    margin-right: auto; }\r\n  .daterangepicker.openscenter:after {\r\n    left: 0;\r\n    right: 0;\r\n    width: 0;\r\n    margin-left: auto;\r\n    margin-right: auto; }\r\n  .daterangepicker.opensright:before {\r\n    left: 9px; }\r\n  .daterangepicker.opensright:after {\r\n    left: 10px; }\r\n  .daterangepicker.dropup {\r\n    margin-top: -5px; }\r\n    .daterangepicker.dropup:before {\r\n      top: initial;\r\n      bottom: -7px;\r\n      border-bottom: initial;\r\n      border-top: 7px solid #ccc; }\r\n    .daterangepicker.dropup:after {\r\n      top: initial;\r\n      bottom: -6px;\r\n      border-bottom: initial;\r\n      border-top: 6px solid #fff; }\r\n  .daterangepicker.dropdown-menu {\r\n    max-width: none;\r\n    z-index: 3001; }\r\n  .daterangepicker.single .ranges, .daterangepicker.single .calendar {\r\n    float: none; }\r\n  .daterangepicker.show-calendar .calendar {\r\n    display: block; }\r\n  .daterangepicker .calendar {\r\n    display: none;\r\n    max-width: 270px;\r\n    margin: 4px; }\r\n    .daterangepicker .calendar.single .calendar-table {\r\n      border: none; }\r\n    .daterangepicker .calendar th, .daterangepicker .calendar td {\r\n      white-space: nowrap;\r\n      text-align: center;\r\n      min-width: 32px; }\r\n  .daterangepicker .calendar-table {\r\n    border: 1px solid #fff;\r\n    padding: 4px;\r\n    border-radius: 4px;\r\n    background-color: #fff; }\r\n  .daterangepicker table {\r\n    width: 100%;\r\n    margin: 0; }\r\n  .daterangepicker td, .daterangepicker th {\r\n    text-align: center;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 4px;\r\n    border: 1px solid transparent;\r\n    white-space: nowrap;\r\n    cursor: pointer; }\r\n    .daterangepicker td.available:hover, .daterangepicker th.available:hover {\r\n      background-color: #eee;\r\n      border-color: transparent;\r\n      color: inherit; }\r\n    .daterangepicker td.week, .daterangepicker th.week {\r\n      font-size: 80%;\r\n      color: #ccc; }\r\n  .daterangepicker td.off, .daterangepicker td.off.in-range, .daterangepicker td.off.start-date, .daterangepicker td.off.end-date {\r\n    background-color: #fff;\r\n    border-color: transparent;\r\n    color: #999; }\r\n  .daterangepicker td.in-range {\r\n    background-color: #ebf4f8;\r\n    border-color: transparent;\r\n    color: #000;\r\n    border-radius: 0; }\r\n  .daterangepicker td.start-date {\r\n    border-radius: 4px 0 0 4px; }\r\n  .daterangepicker td.end-date {\r\n    border-radius: 0 4px 4px 0; }\r\n  .daterangepicker td.start-date.end-date {\r\n    border-radius: 4px; }\r\n  .daterangepicker td.active, .daterangepicker td.active:hover {\r\n    background-color: #357ebd;\r\n    border-color: transparent;\r\n    color: #fff; }\r\n  .daterangepicker th.month {\r\n    width: auto; }\r\n  .daterangepicker td.disabled, .daterangepicker option.disabled {\r\n    color: #999;\r\n    cursor: not-allowed;\r\n    text-decoration: line-through; }\r\n  .daterangepicker select.monthselect, .daterangepicker select.yearselect {\r\n    font-size: 12px;\r\n    padding: 1px;\r\n    height: auto;\r\n    margin: 0;\r\n    cursor: default; }\r\n  .daterangepicker select.monthselect {\r\n    margin-right: 2%;\r\n    width: 56%; }\r\n  .daterangepicker select.yearselect {\r\n    width: 40%; }\r\n  .daterangepicker select.hourselect, .daterangepicker select.minuteselect, .daterangepicker select.secondselect, .daterangepicker select.ampmselect {\r\n    width: 50px;\r\n    margin-bottom: 0; }\r\n  .daterangepicker .input-mini {\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    color: #555;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    display: block;\r\n    vertical-align: middle;\r\n    margin: 0 0 5px 0;\r\n    padding: 0 6px 0 28px;\r\n    width: 100%; }\r\n    .daterangepicker .input-mini.active {\r\n      border: 1px solid #08c;\r\n      border-radius: 4px; }\r\n  .daterangepicker .daterangepicker_input {\r\n    position: relative; }\r\n    .daterangepicker .daterangepicker_input i {\r\n      position: absolute;\r\n      left: 8px;\r\n      top: 8px; }\r\n  .daterangepicker.rtl .input-mini {\r\n    padding-right: 28px;\r\n    padding-left: 6px; }\r\n  .daterangepicker.rtl .daterangepicker_input i {\r\n    left: auto;\r\n    right: 8px; }\r\n  .daterangepicker .calendar-time {\r\n    text-align: center;\r\n    margin: 5px auto;\r\n    line-height: 30px;\r\n    position: relative;\r\n    padding-left: 28px; }\r\n    .daterangepicker .calendar-time select.disabled {\r\n      color: #ccc;\r\n      cursor: not-allowed; }\r\n\r\n.ranges {\r\n  font-size: 11px;\r\n  float: none;\r\n  margin: 4px;\r\n  text-align: left; }\r\n  .ranges ul {\r\n    list-style: none;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    width: 100%; }\r\n  .ranges li {\r\n    font-size: 13px;\r\n    background-color: #f5f5f5;\r\n    border: 1px solid #f5f5f5;\r\n    border-radius: 4px;\r\n    color: #08c;\r\n    padding: 3px 12px;\r\n    margin-bottom: 8px;\r\n    cursor: pointer; }\r\n    .ranges li:hover {\r\n      background-color: #08c;\r\n      border: 1px solid #08c;\r\n      color: #fff; }\r\n    .ranges li.active {\r\n      background-color: #08c;\r\n      border: 1px solid #08c;\r\n      color: #fff; }\r\n\r\n/*  Larger Screen Styling */\r\n@media (min-width: 564px) {\r\n  .daterangepicker {\r\n    width: auto; }\r\n    .daterangepicker .ranges ul {\r\n      width: 160px; }\r\n    .daterangepicker.single .ranges ul {\r\n      width: 100%; }\r\n    .daterangepicker.single .calendar.left {\r\n      clear: none; }\r\n    .daterangepicker.single.ltr .ranges, .daterangepicker.single.ltr .calendar {\r\n      float: left; }\r\n    .daterangepicker.single.rtl .ranges, .daterangepicker.single.rtl .calendar {\r\n      float: right; }\r\n    .daterangepicker.ltr {\r\n      direction: ltr;\r\n      text-align: left; }\r\n      .daterangepicker.ltr .calendar.left {\r\n        clear: left;\r\n        margin-right: 0; }\r\n        .daterangepicker.ltr .calendar.left .calendar-table {\r\n          border-right: none;\r\n          border-top-right-radius: 0;\r\n          border-bottom-right-radius: 0; }\r\n      .daterangepicker.ltr .calendar.right {\r\n        margin-left: 0; }\r\n        .daterangepicker.ltr .calendar.right .calendar-table {\r\n          border-left: none;\r\n          border-top-left-radius: 0;\r\n          border-bottom-left-radius: 0; }\r\n      .daterangepicker.ltr .left .daterangepicker_input {\r\n        padding-right: 12px; }\r\n      .daterangepicker.ltr .calendar.left .calendar-table {\r\n        padding-right: 12px; }\r\n      .daterangepicker.ltr .ranges, .daterangepicker.ltr .calendar {\r\n        float: left; }\r\n    .daterangepicker.rtl {\r\n      direction: rtl;\r\n      text-align: right; }\r\n      .daterangepicker.rtl .calendar.left {\r\n        clear: right;\r\n        margin-left: 0; }\r\n        .daterangepicker.rtl .calendar.left .calendar-table {\r\n          border-left: none;\r\n          border-top-left-radius: 0;\r\n          border-bottom-left-radius: 0; }\r\n      .daterangepicker.rtl .calendar.right {\r\n        margin-right: 0; }\r\n        .daterangepicker.rtl .calendar.right .calendar-table {\r\n          border-right: none;\r\n          border-top-right-radius: 0;\r\n          border-bottom-right-radius: 0; }\r\n      .daterangepicker.rtl .left .daterangepicker_input {\r\n        padding-left: 12px; }\r\n      .daterangepicker.rtl .calendar.left .calendar-table {\r\n        padding-left: 12px; }\r\n      .daterangepicker.rtl .ranges, .daterangepicker.rtl .calendar {\r\n        text-align: right;\r\n        float: right; } }\r\n@media (min-width: 730px) {\r\n  .daterangepicker .ranges {\r\n    width: auto; }\r\n  .daterangepicker.ltr .ranges {\r\n    float: left; }\r\n  .daterangepicker.rtl .ranges {\r\n    float: right; }\r\n  .daterangepicker .calendar.left {\r\n    clear: none !important; } }\r\n", ""])
}, function(e, t, n) {}, , function(e, t, n) {}]);