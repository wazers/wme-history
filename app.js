! function(e) {
    function t(t) {
        for (var i, o, a = t[0], l = t[1], u = t[2], d = 0, h = []; d < a.length; d++)
            o = a[d],
            r[o] && h.push(r[o][0]),
            r[o] = 0;
        for (i in l)
            Object.prototype.hasOwnProperty.call(l, i) && (e[i] = l[i]);
        for (c && c(t); h.length;)
            h.shift()();
        return s.push.apply(s, u || []),
            n()
    }

    function n() {
        for (var e, t = 0; t < s.length; t++) {
            for (var n = s[t], i = !0, a = 1; a < n.length; a++) {
                var l = n[a];
                0 !== r[l] && (i = !1)
            }
            i && (s.splice(t--, 1),
                e = o(o.s = n[0]))
        }
        return e
    }
    var i = {},
        r = {
            0: 0
        },
        s = [];

    function o(t) {
        if (i[t])
            return i[t].exports;
        var n = i[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(n.exports, n, n.exports, o),
            n.l = !0,
            n.exports
    }
    o.m = e,
        o.c = i,
        o.d = function(e, t, n) {
            o.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: n
            })
        },
        o.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(e, "__esModule", {
                    value: !0
                })
        },
        o.t = function(e, t) {
            if (1 & t && (e = o(e)),
                8 & t)
                return e;
            if (4 & t && "object" == typeof e && e && e.__esModule)
                return e;
            var n = Object.create(null);
            if (o.r(n),
                Object.defineProperty(n, "default", {
                    enumerable: !0,
                    value: e
                }),
                2 & t && "string" != typeof e)
                for (var i in e)
                    o.d(n, i, function(t) {
                            return e[t]
                        }
                        .bind(null, i));
            return n
        },
        o.n = function(e) {
            var t = e && e.__esModule ? function() {
                    return e.default
                } :
                function() {
                    return e
                };
            return o.d(t, "a", t),
                t
        },
        o.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        },
        o.p = "//editor-assets.waze.com/beta/";
    var a = window.webpackJsonp = window.webpackJsonp || [],
        l = a.push.bind(a);
    a.push = t,
        a = a.slice();
    for (var u = 0; u < a.length; u++)
        t(a[u]);
    var c = l;
    s.push([468, 1]),
        n()
}([, , , , , , , , , function(e, t, n) {
    "use strict";
    n.d(t, "b", function() {
        return u
    });
    var i = n(13),
        r = n.n(i),
        s = n(10),
        o = n.n(s),
        a = n(7),
        l = n.n(a),
        u = function(e, t) {
            e.css("display", t ? "" : "none")
        },
        c = {
            selectionRequiredOption: function(e) {
                return l.a.$("<option/>").prop("disabled", "disabled").prop("selected", "selected").text(e).val("")
            },
            selectOptionsFromList: function(e, t, n) {
                var i = null,
                    r = e.map(function(e) {
                        return {
                            value: e,
                            label: t(e)
                        }
                    });
                return void 0 !== n && (r = r.filter(function(e) {
                        return e.value !== n
                    }),
                    i = {
                        value: n,
                        label: t(n)
                    }), {
                    collection: r,
                    defaultOption: i
                }
            },
            checkboxList: function(e) {
                return {
                    observe: e,
                    getVal: function(e, t, n) {
                        return e.filter(":checked").toArray().map(function(e) {
                            return o()(e).attr("value")
                        })
                    },
                    update: function(e, t, n, i) {
                        var r = t || [];
                        return e.toArray().forEach(function(e) {
                            var t = o()(e),
                                n = r.indexOf(t.attr("value")) > -1;
                            return t.attr("checked", n)
                        })
                    }
                }
            },
            requireAndEnableIfNot: function(e) {
                return [{
                    observe: e,
                    name: "required",
                    onGet: function(e) {
                        return !e
                    }
                }, {
                    name: "disabled",
                    observe: e
                }]
            },
            contentsAndVisiblity: function(e) {
                return {
                    observe: [e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e],
                    onGet: function(e) {
                        var t = r()(e, 2),
                            n = t[0];
                        return t[1] && n
                    },
                    visible: !0,
                    visibleFn: u,
                    updateView: !0
                }
            },
            initBootstrapSupport: function() {
                return l.a.Stickit.addHandler({
                        selector: ".btn-group input[type=radio]",
                        update: function(e, t) {
                            if (e.parent(".btn").removeClass("active"),
                                null !== t && "" !== t) {
                                var n = e.filter("[value=".concat(t, "]"));
                                n.parent(".btn").addClass("active"),
                                    n.prop("checked", "checked")
                            }
                        }
                    }),
                    l.a.Stickit.addHandler({
                        selector: ".btn-group[data-type=boolean] input[type=radio]",
                        onSet: function(e) {
                            return "true" === e
                        }
                    })
            }
        };
    c.initBootstrapSupport(),
        t.a = c
}, , , function(e, t, n) {
    "use strict";

    function i(e) {
        return e.components[0].components.length - 1
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.isGeometry = function(e) {
            return e instanceof OpenLayers.Geometry
        },
        t.getBounds = function(e, t) {
            return void 0 === t && (t = !1),
                t ? e.getBounds().clone() : e.getBounds()
        },
        t.getBoundsCenterLonLat = function(e) {
            return e.getBounds().getCenterLonLat()
        },
        t.cloneGeometry = function(e) {
            return e.clone()
        },
        t.cloneComponents = function(e, t) {
            e.components = [],
                e.addComponents(t.components.map(function(e) {
                    return e.clone()
                })),
                e.calculateBounds()
        },
        t.containsPoint = function(e, t) {
            return Boolean(e.containsPoint(t))
        },
        t.intersects = function(e, t) {
            return e.intersects(t)
        },
        t.simplify = function(e, t) {
            return e.simplify(t)
        },
        t.calculateDistance = function(e, t) {
            return e.distance(t)
        },
        t.getArea = function(e) {
            return e.getArea()
        },
        t.move = function(e, t, n) {
            return e.move(t, n)
        },
        t.getId = function(e) {
            return e.id
        },
        t.setId = function(e, t) {
            return e.id = t
        },
        t.countPolygonOuterRingVertices = i,
        t.getPolygonVertices = function(e) {
            return e.components[0].components
        },
        t.is2D = function(e) {
            return e instanceof OpenLayers.Geometry.Polygon && i(e) > 2
        },
        t.toWktString = function(e) {
            var t = new OpenLayers.Feature.Vector(e);
            return OpenLayers.Format.WKT.prototype.write(t)
        },
        t.isPoint = function(e) {
            return e instanceof OpenLayers.Geometry.Point
        }
}, , , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
        ARCHIVE_SESSION: "archive",
        ARCHIVE_SESSION_DATA: "archiveSession",
        BIG_JUNCTION: "bigJunction",
        CITY: "city",
        COUNTRY: "country",
        HOUSE_NUMBER: "houseNumber",
        JUNCTION: "junction",
        JUNCTION_NC: "junctionConnection",
        MANAGED_AREA: "managedArea",
        MAP_PROBLEM: "mapProblem",
        MAP_COMMENT: "mapComment",
        MERGED_NODE: "mergedNode",
        MTE: "majorTrafficEvent",
        NC: "nodeConnection",
        NODE: "node",
        PROBLEM_DETAILS: "problemDetail",
        RESTRICTED_EDITING_AREA: "restrictedEditingArea",
        RESTRICTION: "restriction",
        ROAD_CLOSURE: "roadClosure",
        SEGMENT: "segment",
        SPEED_CAMERA: "camera",
        STATE: "state",
        STREET: "street",
        TURN_PROBLEM: "turnProblem",
        UPDATE_REQUEST: "mapUpdateRequest",
        UPDATE_REQUEST_SESSION: "updateRequestSession",
        USER: "user",
        USER_AREA: "userArea",
        VENUE: "venue",
        VENUE_UPDATE_REQUEST: "venueUpdateRequest",
        RESTRICTED_DRIVING_AREA: "restrictedDrivingArea"
    }
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(13),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(72),
        l = n.n(a),
        u = n(40),
        c = n(49),
        d = n(195),
        h = n(47),
        p = new d.a,
        g = {},
        f = 0;
    g.isBlank = function(e) {
            return null == e || (o.a.isString(e) ? /^\s*$/.test(e) : o.a.isFunction(e.isEmpty) ? e.isEmpty() : !(!Array.isArray(e) && !o.a.isObject(e)) && o.a.isEmpty(e))
        },
        g.getTimeFromSeconds = function(e) {
            if (!(null != e && !isNaN(e)))
                return null;
            e = Math.abs(Math.round(e));
            var t = Math.floor(e / 60),
                n = {};
            return n.seconds = e,
                n.hours = Math.floor(t / 60),
                n.minutes = Math.floor(t % 60),
                n.days = Math.floor(n.hours / 24),
                1 === n.days ? this.safe_t("common.time.day", {
                    day: n.days
                }) : n.days > 1 ? this.safe_t("common.time.days", {
                    days: n.days
                }) : n.hours > 0 ? 0 === n.minutes ? this.safe_t("common.time.hours", {
                    hours: n.hours
                }) : this.safe_t("common.time.hours_minutes", {
                    hours: n.hours,
                    minutes: n.minutes
                }) : n.minutes > 0 ? this.safe_t("common.time.minutes", {
                    minutes: n.minutes
                }) : this.safe_t("common.time.seconds", {
                    seconds: n.seconds
                })
        },
        g.safe_t = function(e, t) {
            var n, i = {};
            return t && Object.entries(t).forEach(function(e) {
                    var t = r()(e, 2),
                        n = t[0];
                    t[1];
                    i[n] = "%{".concat(n, "}")
                }),
                n = g.escape(I18n.t(e, i)),
                t && Object.entries(t).forEach(function(e) {
                    var t = r()(e, 2),
                        i = t[0],
                        s = t[1];
                    s.htmlSafe || (s = g.escape(s)),
                        n = n.replace(new RegExp("%\\{".concat(i, "\\}")), s)
                }),
                n
        },
        g.safeString = function(e) {
            var t = new String(e);
            return t.htmlSafe = !0,
                t
        },
        g.contentTag = function(e, t) {
            return t = g.escape(t),
                this.safeString("<".concat(e, ">").concat(t, "</").concat(e, ">"))
        },
        g.copyShortcut = function() {
            return Object(c.isMac)() ? "⌘+C" : "Ctrl+C"
        },
        g._formInput = function(e, t, n, i, r, s, o, a, l, u) {
            t = g.escape(t),
                n = g.escape(n),
                e = g.escape(e);
            var c = "".concat(n, "-").concat(i, "-").concat(f++),
                d = "<input type='".concat(e, "' name='").concat(n, "' value='").concat(i, "' id='").concat(c, "'");
            return (String(i) === String(r) || u) && (d += " checked "),
                !1 === s && (d += " disabled "),
                o && (d += " data-type='".concat(o, "'")),
                l && (d += " data-nullable='true'"),
                d += "/><label for='".concat(c, "' class='").concat(a || "", "'>").concat(t, "</label>")
        },
        g.radio = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = e.label,
                n = void 0 === t ? "" : t,
                i = e.name,
                r = void 0 === i ? "" : i,
                s = e.dataType,
                o = void 0 === s ? "string" : s,
                a = e.value,
                l = void 0 === a ? "" : a,
                u = e.currentValue,
                c = void 0 === u ? null : u,
                d = e.enable,
                h = void 0 === d || d,
                p = e.className,
                f = void 0 === p ? "" : p,
                m = e.nullable,
                v = void 0 !== m && m,
                _ = e.forceChecked,
                y = void 0 !== _ && _;
            if (n)
                return g._formInput("radio", n, r, l, c, h, o, f, v, y)
        },
        g.checkbox = function(e, t, n, i, r) {
            return g._formInput("checkbox", e, t, n, i, r)
        },
        g.option = function(e, t, n, i, r) {
            var s = "<option value='".concat(g.escape(t), "'");
            return n instanceof Array || t !== n && (i || parseInt(t, 10) !== parseInt(n, 10)) || (s += " selected"),
                r && (s += " disabled"),
                s += ">".concat(g.escape(e), "</option>")
        },
        g.categoryOption = function(e, t) {
            return g.option(I18n.t("venues.categories.".concat(t)), t, e[t] ? t : null, !0)
        },
        g.directionRadio = function(e) {
            return -1 === e ? g.radio({
                label: I18n.t("edit.multiple_values"),
                name: "direction",
                dataType: "numeric",
                value: e,
                nullable: !0
            }) : g.radio({
                label: I18n.t("segment.direction.".concat(e)),
                name: "direction",
                dataType: "numeric",
                value: e
            })
        },
        g.formatDate = function(e) {
            return e ? new Date(e).toDateString() : ""
        },
        g.durationString = function(e, t) {
            var n = (t - e) / 1e3;
            return this.getTimeFromSeconds(n)
        },
        g.timeDistanceInWords = function(e, t) {
            null == t && (t = new Date),
                e = new Date(e),
                t = new Date(t);
            var n = Math.round(Math.abs((t - e) / 60 / 1e3));
            if (n >= 0 && n <= 1)
                return 0 === n ? I18n.t("datetime.distance_in_words.less_than_x_minutes", {
                    count: 1
                }) : I18n.t("datetime.distance_in_words.x_minutes", {
                    count: n
                });
            if (n >= 2 && n <= 44)
                return I18n.t("datetime.distance_in_words.x_minutes", {
                    count: n
                });
            if (n >= 45 && n <= 89)
                return I18n.t("datetime.distance_in_words.about_x_hours", {
                    count: 1
                });
            if (n >= 90 && n <= 1439)
                return I18n.t("datetime.distance_in_words.about_x_hours", {
                    count: Math.round(n / 60)
                });
            if (n >= 1440 && n <= 2519)
                return I18n.t("datetime.distance_in_words.x_days", {
                    count: 1
                });
            if (n >= 2520 && n <= 43199)
                return I18n.t("datetime.distance_in_words.x_days", {
                    count: Math.round(n / 1440)
                });
            if (n >= 43200 && n <= 86399)
                return I18n.t("datetime.distance_in_words.about_x_months", {
                    count: 1
                });
            if (n >= 86400 && n <= 525599)
                return I18n.t("datetime.distance_in_words.x_months", {
                    count: Math.round(n / 43200)
                });
            e.getFullYear(),
                t.getFullYear();
            var i = n % 525600,
                r = Math.floor(n / 525600);
            return e.getMonth() + 1 >= 3 && 0,
                t.getMonth() + 1 < 3 && 0,
                i < 131400 ? I18n.t("datetime.distance_in_words.about_x_years", {
                    count: r
                }) : i < 394200 ? I18n.t("datetime.distance_in_words.over_x_years", {
                    count: r
                }) : I18n.t("datetime.distance_in_words.almost_x_years", {
                    count: r + 1
                })
        },
        g.dateOnlyString = function(e) {
            return e ? I18n.l("date.formats.long", e) : ""
        },
        g.localizeDateString = function(e, t) {
            return I18n.localize(e, t)
        },
        g.lengthString = function(e, t) {
            t = o.a.defaults(t || {}, {
                units: u.UNIT.METER,
                translationKey: "measurements.length"
            });
            var n = u.UNIT.KILOMETER,
                i = u.default.getLocalizedDisplayValue(e, t.units, n);
            i < 1 && (n = u.UNIT.METER,
                    i = u.default.getLocalizedDisplayValue(e, t.units, n)),
                i = i.toFixed(2) / 1;
            var r = u.default.localizeUnit(n);
            return I18n.t("".concat(t.translationKey, ".").concat(r), {
                count: i
            })
        },
        g.speedString = function(e) {
            var t = u.default.localizeUnit(u.UNIT.KILOMETER),
                n = "";
            return void 0 !== e && (n = (n = u.default.getLocalizedValue(e, u.UNIT.KILOMETER)).toFixed(2)),
                I18n.t("measurements.speed.".concat(t), {
                    speed: n
                })
        },
        g.areaString = function(e) {
            var t = Math.sqrt(e),
                n = u.default.getLocalizedDisplayValue(t, u.UNIT.METER, u.UNIT.KILOMETER),
                i = u.default.localizeUnit(u.UNIT.KILOMETER);
            return n = (n * n).toFixed(2),
                I18n.t("measurements.area.".concat(i, "_squared"), {
                    area: n
                })
        },
        g.userProfileLink = function(e) {
            return !e || e.temporary ? null : "".concat(h.buildConfig.user_profile.url).concat(window.encodeURIComponent(e.userName))
        },
        g.formatUserName = function(e, t) {
            null == t && (t = W.model);
            var n = t.users.getObjectById(e);
            return n ? function(e) {
                var t;
                return t = e.temporary ? I18n.t("user.temporary") : e.userName,
                    "".concat(t, "(").concat(e.isStaffUser() ? "staff" : e.normalizedLevel, ")")
            }(n) : "".concat(e)
        },
        g.userProfile = function(e, t) {
            null == t && (t = W.model);
            var n = t.users.getObjectById(e),
                i = this.userProfileLink(n),
                r = this.escape(this.formatUserName(e, t));
            return null == i || !h.buildConfig.user_profile.enable ? r : this.safeString('<a target="_blank" href="'.concat(i, '" rel="noopener noreferrer">').concat(r, "</a>"))
        },
        g.formatRank = function(e) {
            return e === l.a.StaffRank ? I18n.t("edit.segment.lock_levels.staff") : l.a.normalizeLevel(e)
        },
        g.venueRankOption = function(e, t, n) {
            var i = g.formatRank(t);
            return g.radio({
                label: i,
                name: "lockRank",
                dataType: "numeric",
                value: t,
                currentValue: n,
                className: "",
                nullable: !0
            })
        },
        g.getDisplayUnitValue = function(e, t, n) {
            return null == (e = u.default.getLocalizedValue(e, t)) ? e : (n && (e = Math.round(e)),
                e)
        },
        g.shortcutMaskToKeys = function(e) {
            var t, n = "";
            return ["alt", "ctrl", "shift"].forEach(function(i) {
                    t = "".concat(i, "Key"),
                        e[t] && (n += "<kbd class='".concat(g.escape(t), "'><span>").concat(g.escape(t), "</span></kbd> + "))
                }),
                n
        },
        g.getShortcutKey = function(e) {
            var t = W.accelerators.SpecialKeys[e.keyCode];
            return t || (t = String.fromCharCode(e.keyCode)),
                t
        },
        g.formatDays = function(e) {
            return p.getWeekdaysGist(e, "*").map(function(e) {
                return "*" !== e ? I18n.t("date.abbr_day_names")[e] : e
            }).join(", ").replace(/, \*,/g, "-")
        },
        g.formatMonthRange = function(e, t) {
            if (!e && !t)
                return "";
            if (t < e)
                return "";
            if (e && !t)
                return I18n.strftime(e, I18n.t("formats.date.month_range.end_missing"));
            if (t && !e)
                return I18n.strftime(t, I18n.t("formats.date.month_range.start_missing"));
            var n, i = e.getFullYear() === t.getFullYear(),
                r = i && e.getMonth() === t.getMonth(),
                s = I18n.strftime(e, "%b"),
                o = I18n.strftime(e, "%Y"),
                a = I18n.strftime(t, "%b"),
                l = I18n.strftime(t, "%Y");
            return n = i ? r ? "formats.date.month_range.single_year_single_month" : "formats.date.month_range.single_year_multi_month" : "formats.date.month_range.multi_year",
                I18n.t(n, {
                    startMonth: s,
                    startYear: o,
                    endMonth: a,
                    endYear: l
                })
        },
        g.formatOpeningHour = function(e, t, n, i) {
            var r = g.formatDays(e);
            return r += t ? " ".concat(I18n.t("edit.landmark.opening_hours.time_span.all_day")) : " ".concat(n, "-").concat(i)
        },
        g.formatAddress = function(e) {
            return null == e ? I18n.t("edit.landmark.no_address") : e.format()
        },
        g.formatVenueCategories = function(e) {
            return (e = e.map(function(e) {
                return I18n.t("venues.categories.".concat(e))
            })).sort().join(", ")
        },
        g.formatVenueName = function(e) {
            return e || I18n.t("edit.landmark.unnamed")
        },
        g.formatVenueUpdateRequestId = function(e) {
            var t = String(e).split("/");
            return t[t.length - 1]
        },
        g.getSaveErrorTitle = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "save.error_types.default.title",
                n = I18n.t("save.error_types")[e];
            return n && n.title || I18n.t(t)
        },
        g.formatYesNo = function(e) {
            return !0 === e ? I18n.t("formats.boolean.is_true") : I18n.t("formats.boolean.is_false")
        },
        g.escape = function(e) {
            return "".concat(e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/\//g, "&#47;")
        },
        g.cleanValue = function(e) {
            switch (e) {
                case null:
                case void 0:
                    return "";
                case !0:
                case !1:
                    return "".concat(e);
                default:
                    return e
            }
        },
        g.categoryToClassName = function(e) {
            return "string" == typeof e ? e.toLowerCase().replace(/[^a-z0-9]+/g, "-") : ""
        },
        g.timeString = function(e) {
            var t = new Date(e),
                n = t.getHours();
            n < 10 && (n = "0".concat(n));
            var i = t.getMinutes();
            return i < 10 && (i = "0".concat(i)),
                "".concat(n, ":").concat(i)
        },
        t.default = g
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.createPoint = function(e, t) {
            return new OpenLayers.Geometry.Point(e, t)
        },
        t.createLonLat = function(e, t) {
            return new OpenLayers.LonLat(e, t)
        },
        t.createMultiLineString = function(e) {
            return new OpenLayers.Geometry.MultiLineString(e)
        },
        t.createLineString = function(e) {
            return new OpenLayers.Geometry.LineString(e)
        },
        t.createLinearRing = function(e) {
            return new OpenLayers.Geometry.LinearRing(e)
        },
        t.createPolygon = function(e) {
            return new OpenLayers.Geometry.Polygon(e)
        }
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "reportAnalytic", function() {
            return o
        });
    var i = n(47),
        r = "dimension1",
        s = function(e, t, n, r) {
            e = "".concat("wme", "_").concat(e),
                i.buildConfig.reporting.enable && ga("send", "event", e, t, n, r)
        },
        o = {
            feedAction: function(e, t) {
                s("feed", e, t)
            },
            changesLogAction: function(e, t, n) {
                s("changes_log", e, t, n)
            },
            loginAction: function(e, t) {
                s("login", e, t)
            },
            generalAction: function(e, t) {
                s("general", e, t)
            },
            mapProblemAction: function(e, t, n) {
                s("map_problem", e, t, n)
            },
            updateRequestAction: function(e, t, n) {
                s("update_request", e, t, n)
            },
            placeUpdateRequestAction: function(e, t, n) {
                s("place_update_request", e, t, n)
            },
            chatAction: function(e, t) {
                s("chat", e, t)
            },
            elementHistoryAction: function(e, t) {
                s("element_history", e, t)
            },
            focusAction: function(e, t, n) {
                s("focus_on_item", e, t, n)
            },
            setUserRank: function(e) {
                if (null != e) {
                    var t = "".concat(e);
                    ga("set", r, t)
                }
            },
            searchAction: function(e, t, n) {
                s("wme_search", e, t, n)
            },
            saveError: function(e) {
                s("save_error", e)
            },
            save: function(e, t, n) {
                s("save", e, t, n)
            }
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = {
        GROUP_ISSUES: "GROUP_ISSUES",
        GROUP_MAP_ISSUES: "GROUP_MAP_ISSUES",
        ITEM_MAP_PROBLEMS: "ITEM_MAP_PROBLEMS",
        ITEM_CLOSED_MAP_PROBLEMS: "ITEM_CLOSED_MAP_PROBLEMS",
        ITEM_UPDATE_REQUESTS: "ITEM_UPDATE_REQUESTS",
        ITEM_CLOSED_UPDATE_REQUESTS: "ITEM_CLOSED_UPDATE_REQUESTS",
        ITEM_PLACE_UPDATE_REQUESTS: "ITEM_PLACE_UPDATE_REQUESTS",
        ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS: "ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS",
        GROUP_PARKING_ISSUES: "GROUP_PARKING_ISSUES",
        ITEM_PARKING_MAP_PROBLEMS: "ITEM_PARKING_MAP_PROBLEMS",
        ITEM_PARKING_CLOSED_MAP_PROBLEMS: "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
        ITEM_PARKING_PLACE_UPDATE_REQUESTS: "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
        GROUP_PLACES: "GROUP_PLACES",
        ITEM_VENUES: "ITEM_VENUES",
        ITEM_RESIDENTIAL_PLACES: "ITEM_RESIDENTIAL_PLACES",
        ITEM_PARKING_PLACES: "ITEM_PARKING_PLACES",
        GROUP_ROAD: "GROUP_ROAD",
        ITEM_ROAD: "ITEM_ROAD",
        ITEM_JUNCTION_BOXES: "ITEM_JUNCTION_BOXES",
        ITEM_CLOSURES: "ITEM_CLOSURES",
        ITEM_SPEED_CAMERAS: "ITEM_SPEED_CAMERAS",
        ITEM_HOUSE_NUMBERS: "ITEM_HOUSE_NUMBERS",
        GROUP_DISPLAY: "GROUP_DISPLAY",
        ITEM_SATELLITE_IMAGERY: "ITEM_SATELLITE_IMAGERY",
        ITEM_AREA_MANAGERS: "ITEM_AREA_MANAGERS",
        ITEM_GPS_POINTS: "ITEM_GPS_POINTS",
        ITEM_LIVE_USERS: "ITEM_LIVE_USERS",
        ITEM_EDITABLE_AREAS: "ITEM_EDITABLE_AREAS",
        ITEM_DISALLOWED_TURNS: "ITEM_DISALLOWED_TURNS",
        GROUP_CITIES: "GROUP_CITIES",
        ITEM_CITY_NAMES: "ITEM_CITY_NAMES",
        ITEM_MAP_COMMENTS: "ITEM_MAP_COMMENTS",
        GROUP_RESTRICTED_DRIVING_AREAS: "GROUP_RESTRICTED_DRIVING_AREAS",
        ITEM_RESTRICTED_DRIVING_AREAS_NAMES: "ITEM_RESTRICTED_DRIVING_AREAS_NAMES"
    };
    t.TogglerEnum = s;
    var o = [s.GROUP_MAP_ISSUES, s.GROUP_PARKING_ISSUES, s.GROUP_CITIES, s.GROUP_RESTRICTED_DRIVING_AREAS];
    t.TOGGLERS_SUB_MENU_GROUPS = o;
    var a = r([s.GROUP_ISSUES, s.GROUP_PLACES, s.GROUP_ROAD, s.GROUP_DISPLAY], o);
    t.TOGGLERS_GROUPS = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.hasPoint = function(e, t) {
            return e.components.some(function(e) {
                return t.equals(e)
            })
        },
        t.addPoint = function(e, t, n) {
            return e.addComponent(t, n)
        },
        t.removePoint = function(e, t) {
            var n = e.components.indexOf(t);
            return e.components.splice(n, 1),
                e
        },
        t.spliceVertices = function(e, t, n) {
            return void 0 === n ? e.components.splice(t) : e.components.splice(t, n),
                e
        },
        t.getLineStringCenterPoint = function(e) {
            for (var t = e.getLength(), n = t / 2, i = t, r = 1, s = e.components.length; r < s;) {
                var o = e.components[r - 1].distanceTo(e.components[r]);
                if ("number" == typeof o && (i -= o) <= n)
                    break;
                r++
            }
            var a = e.components[r - 1],
                l = e.components[r],
                u = Math.atan2(l.y - a.y, l.x - a.x),
                c = n - i,
                d = new OpenLayers.Geometry.Point(a.x, a.y);
            return d.x += c * Math.cos(u),
                d.y += c * Math.sin(u),
                d
        },
        t.getLength = function(e) {
            return e.getLength()
        },
        t.getLengthInMeters = function(e) {
            return e.getGeodesicLength(new OpenLayers.Projection(W.Config.map.projection.local))
        },
        t.mutuallySplitLineStrings = function(e, t) {
            return e.split(t, {
                edge: !0,
                mutual: !0
            })
        },
        t.getVertices = function(e, t) {
            return void 0 === t && (t = !1),
                t ? [e.components[0], e.components[e.components.length - 1]] : r(e.components)
        },
        t.getLines = function(e) {
            return r(e.components)
        },
        t.getVertex = function(e, t) {
            return e.components[t]
        },
        t.getVerticesCount = function(e) {
            return e.components.length
        },
        t.getFirstVertex = function(e) {
            return e.components[0]
        },
        t.getLastVertex = function(e) {
            return e.components[e.components.length - 1]
        },
        t.setVertex = function(e, t, n, i) {
            e.components[t].x = n,
                e.components[t].y = i
        },
        t.getDistance = function(e, t) {
            return e.distanceTo(t)
        },
        t.getDistanceInfo = function(e, t) {
            return e.distanceTo(t, {
                details: !0
            })
        },
        t.getLineProjectionInfo = function(e, t) {
            var n, i, r, s, o, a = {
                    distance: 0,
                    x: 0,
                    y: 0
                },
                l = Number.POSITIVE_INFINITY,
                u = e.getSortedSegments(),
                c = t.x,
                d = t.y;
            for (r = 0,
                s = u.length; r < s; ++r)
                if (o = u[r],
                    (n = OpenLayers.Geometry.distanceToSegment(t, o)).distance < l) {
                    if (a = n,
                        i = o,
                        0 === (l = n.distance))
                        break
                } else if (o.x2 > c && (d > o.y1 && d < o.y2 || d < o.y1 && d > o.y2))
                break;
            return {
                distance: l,
                x0: a.x,
                y0: a.y,
                x1: c,
                y1: d,
                line: i
            }
        }
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "EARTH_RADIUS_KM", function() {
            return c
        }),
        n.d(t, "EARTH_CIRC_KM", function() {
            return d
        }),
        n.d(t, "radToDeg", function() {
            return h
        }),
        n.d(t, "degToRad", function() {
            return p
        }),
        n.d(t, "getHeading", function() {
            return v
        }),
        n.d(t, "destinationOnPlane", function() {
            return _
        }),
        n.d(t, "distanceOnPlane", function() {
            return y
        }),
        n.d(t, "getPointAlongLine", function() {
            return E
        }),
        n.d(t, "getDistanceToPointOnLine", function() {
            return w
        }),
        n.d(t, "splitLineStringWithPolygon", function() {
            return S
        }),
        n.d(t, "getSubLineGeometry", function() {
            return k
        }),
        n.d(t, "getPointEdge", function() {
            return b
        }),
        n.d(t, "toGeoJSON", function() {
            return T
        }),
        n.d(t, "parse", function() {
            return I
        }),
        n.d(t, "project", function() {
            return g
        }),
        n.d(t, "unproject", function() {
            return f
        }),
        n.d(t, "getUnprojectedGeometry", function() {
            return m
        }),
        n.d(t, "geometryToGeoJSON", function() {
            return A
        }),
        n.d(t, "pointToSquarePolygon", function() {
            return M
        }),
        n.d(t, "polygonToPoint", function() {
            return O
        }),
        n.d(t, "getBoundsWithRatio", function() {
            return C
        }),
        n.d(t, "lineStringIntersectionWithEllipse", function() {
            return D
        });
    var i = n(0),
        r = n.n(i),
        s = n(17),
        o = n(12),
        a = n(20),
        l = n(25),
        u = n(33),
        c = 6371,
        d = 40075;

    function h(e) {
        return e / Math.PI * 180
    }

    function p(e) {
        return e * Math.PI / 180
    }

    function g(e) {
        return e.transform(W.Config.map.projection.remote, W.Config.map.projection.local),
            e
    }

    function f(e) {
        return e.transform(W.Config.map.projection.local, W.Config.map.projection.remote),
            e
    }

    function m(e) {
        return f(e.clone())
    }

    function v(e, t) {
        var n = h(Math.atan2(t.y - e.y, t.x - e.x));
        return n = (360 + n) % 360,
            Math.round(n / 45) % 8
    }

    function _(e, t, n) {
        t = p(t);
        var i = 1e3 * c,
            r = Math.cos(t) * n / (i * Math.cos(p(e.lat))),
            o = Math.sin(t) * n / i;
        return s.createLonLat(h(r) + e.lon, h(o) + e.lat)
    }

    function y(e, t) {
        var n = p((e.lat + t.lat) / 2),
            i = p(e.lon - t.lon),
            r = p(e.lat - t.lat);
        return 1e3 * c * Math.sqrt(r * r + Math.pow(Math.cos(n) * i, 2))
    }

    function b(e, t) {
        for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = a.getVertices(e), r = Number.POSITIVE_INFINITY, s = 0, o = 0; o < i.length - 1; o++) {
            var l = OpenLayers.Geometry.distanceToSegment(t, {
                x1: i[o].x,
                y1: i[o].y,
                x2: i[o + 1].x,
                y2: i[o + 1].y
            }).distance;
            if (l <= n)
                return o;
            l < r && (r = l,
                s = o)
        }
        return s
    }

    function E(e, t, n) {
        var i, r, s, o, l = a.getVertices(e),
            c = t,
            d = 0,
            h = 0;
        for (u.defined(n) ? (i = n,
                d = b(l, n)) : i = l[d]; d < l.length - 1;) {
            if (r = l[d + 1],
                !(c - (o = i.distanceTo(r)) > 0)) {
                s = c / o,
                    i = new OpenLayers.Geometry.Point((1 - s) * i.x + s * r.x, (1 - s) * i.y + s * r.y),
                    h = Math.atan2(i.y - r.y, i.x - r.x);
                break
            }
            i = r,
                c -= o,
                d++
        }
        return {
            point: i,
            angle: h
        }
    }

    function w(e, t) {
        for (var n = e.distanceTo(t, {
                details: !0
            }).line, i = s.createPoint(n.x1, n.y1), r = s.createPoint(n.x2, n.y2), o = 0, a = e.components, l = a.length, u = 0; o < l - 1; o++) {
            if (a[o].equals(r) && a[o + 1].equals(i) || a[o].equals(i) && a[o + 1].equals(r))
                return u += a[o].distanceTo(t);
            u += a[o].distanceTo(a[o + 1])
        }
        return u
    }

    function S(e, t) {
        var n = t.distanceTo(e, {
                details: !0
            }),
            i = s.createPoint(n.x0, n.y0);
        if (n.distance > 0)
            return null;
        for (var r = (n = a.getLineProjectionInfo(e, i)).line, o = s.createPoint(r.x1, r.y1), l = s.createPoint(r.x2, r.y2), u = e.components.slice(), c = u.length, d = 0; d < c - 1 && !(u[d].equals(l) && u[d + 1].equals(o) || u[d].equals(o) && u[d + 1].equals(l)); d++)
        ;
        var h = [i.clone()].concat(u.splice(d + 1));
        return u.push(i.clone()),
            [s.createLineString(u), s.createLineString(h)]
    }

    function k(e, t, n) {
        var i = 0,
            r = a.getVertices(e),
            o = [],
            l = 0;
        n && (r = r.clone().reverse());
        var u = r[0];
        for (o.push(s.createPoint(u.x, u.y)); i < t && l < r.length - 1;) {
            var c = r[l + 1],
                d = u.distanceTo(c);
            if (i + d < t)
                o.push(s.createPoint(c.x, c.y)),
                i += d,
                u = c,
                l++;
            else {
                var h = t - i,
                    p = Math.atan2(c.y - u.y, c.x - u.x);
                (u = s.createPoint(u.x, u.y)).move(h * Math.cos(p), h * Math.sin(p)),
                    o.push(u),
                    i = t
            }
        }
        return s.createLineString(o)
    }

    function T(e) {
        return OL.Format.GeoJSON.prototype.extract.geometry.apply(OL.Format.GeoJSON.prototype, [e])
    }

    function I(e) {
        var t = OL.Format.GeoJSON.prototype.parseGeometry(e);
        return g(t),
            t
    }

    function A(e) {
        return OpenLayers.Format.GeoJSON.prototype.extract.geometry.apply(OpenLayers.Format.GeoJSON.prototype, [e])
    }

    function M(e, t) {
        var n = f(e.clone()),
            i = OL.Util.destinationVincenty({
                lon: n.x,
                lat: n.y
            }, 45, Math.sqrt(2 * Math.pow(t / 2, 2))),
            r = n.x - i.lon,
            o = n.y - i.lat,
            a = s.createLinearRing([s.createPoint(n.x - r, n.y - o), s.createPoint(n.x + r, n.y - o), s.createPoint(n.x + r, n.y + o), s.createPoint(n.x - r, n.y + o)]);
        return g(s.createPolygon([a]))
    }

    function O(e) {
        var t = o.getBoundsCenterLonLat(e);
        return l.fromLonLat(t)
    }

    function C(e, t) {
        if (null === e)
            return null;
        var n = e.getCenterLonLat(),
            i = e.getWidth() * t,
            r = e.getHeight() * t;
        return new OpenLayers.Bounds(n.lon - i / 2, n.lat - r / 2, n.lon + i / 2, n.lat + r / 2)
    }

    function R(e, t, n, i, o) {
        var a, l = 1,
            u = 1;
        n > i ? (u = n / i,
            a = n) : (l = i / n,
            a = i);
        var c = (e[1].x - e[0].x) * l,
            d = (e[1].y - e[0].y) * u,
            h = (e[0].x - t.x) * l,
            p = (e[0].y - t.y) * u,
            g = (e[1].x - t.x) * l,
            f = (e[1].y - t.y) * u,
            m = Math.sqrt(h * h + p * p),
            v = m < a,
            _ = [],
            y = c * c + d * d,
            b = 2 * (h * c + p * d),
            E = b * b - 4 * y * (h * h + p * p - a * a);
        return !(E < 0) && ([(-b + (E = Math.sqrt(E))) / (2 * y), (-b - E) / (2 * y)].sort().forEach(function(n) {
                if (n >= 0 && n <= 1) {
                    var i = s.createPoint(e[0].x + n * c / l, e[0].y + n * d / u);
                    _.push({
                            point: i,
                            angle: (2 * Math.PI + Math.atan2((i.y - t.y) * u, (i.x - t.x) * l)) % (2 * Math.PI),
                            goingOut: v,
                            index: o
                        }),
                        v = !v
                }
            }),
            r.a.isEmpty(_) ? m < a && Math.sqrt(g * g + f * f) < a : _)
    }

    function D(e, t, n, i) {
        for (var s = a.getVertices(e), o = [], l = !0, u = s[0], c = 0; c < s.length - 1;) {
            var d = s[c + 1],
                h = R([u, d], t, n, i, c);
            if (h instanceof Array ? o = o.concat(h) : l &= h,
                o.length > 2)
                return !1;
            u = d,
                c++
        }
        return r.a.isEmpty(o) ? l : o
    }
}, , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ADDED = "objectsadded",
        t.ATTR_CHANGED = "objectschanged",
        t.STATE_DELETED = "objects-state-deleted",
        t.CHANGED_ID = "objectschanged-id",
        t.REMOVED = "objectsremoved",
        t.SYNCED = "objectssynced",
        t.UPDATED = "objectsupdated"
}, function(e, t, n) {
    "use strict";
    n.d(t, "b", function() {
            return o
        }),
        n.d(t, "a", function() {
            return a
        });
    var i = n(0),
        r = n.n(i),
        s = OL.Class(OL.Rule, {
            getContext: function(e) {
                return e
            },
            CLASS_NAME: "Waze.Rule"
        }),
        o = function(e, t, n) {
            return new s({
                filter: new OL.Filter({
                    evaluate: function(n) {
                        null != n.model && (n = n.model);
                        var i = n[e];
                        return r.a.isFunction(i) && (i = i.apply(n)),
                            i === t
                    }
                }),
                symbolizer: n
            })
        },
        a = function(e) {
            return new s({
                filter: new OL.Filter({
                    evaluate: function(e) {
                        return !0
                    }
                }),
                symbolizer: e
            })
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.getX = function(e) {
            return e.x
        },
        t.getY = function(e) {
            return e.y
        },
        t.toLonLat = function(e) {
            return new OpenLayers.LonLat(e.x, e.y)
        },
        t.fromLonLat = function(e) {
            return new OpenLayers.Geometry.Point(e.lon, e.lat)
        },
        t.equals = function(e, t) {
            return e.equals(t)
        }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__values || function(e) {
            var t = "function" == typeof Symbol && e[Symbol.iterator],
                n = 0;
            return t ? t.call(e) : {
                next: function() {
                    return e && n >= e.length && (e = void 0), {
                        value: e && e[n++],
                        done: !e
                    }
                }
            }
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        a = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = o(n(0)),
        u = o(n(29)),
        c = n(70),
        d = n(48),
        h = o(n(80)),
        p = o(n(51)),
        g = o(n(43)),
        f = a(n(62)),
        m = o(n(169)),
        v = a(n(127)),
        _ = o(n(35)),
        y = n(386),
        b = a(n(17)),
        E = a(n(12)),
        w = a(n(20)),
        S = o(n(121)),
        k = a(n(21)),
        T = a(n(33)),
        I = n(238);
    t.NodeName = I.NodeName;
    t.MIN_LEVEL = -9;
    t.MAX_LEVEL = 9;
    t.SegmentFlagAttributesName = {
        tunnel: "tunnel",
        unpaved: "unpaved",
        headlights: "headlights",
        beacons: "beacons",
        nearbyHOV: "nearbyHOV",
        fwdSpeedCamera: "fwdSpeedCamera",
        revSpeedCamera: "revSpeedCamera",
        fwdLanesEnabled: "fwdLanesEnabled",
        revLanesEnabled: "revLanesEnabled"
    };
    var A = {
        tunnel: {
            mask: "flags",
            flag: y.FLAGS.TUNNEL
        },
        unpaved: {
            mask: "flags",
            flag: y.FLAGS.UNPAVED
        },
        headlights: {
            mask: "flags",
            flag: y.FLAGS.HEADLIGHTS
        },
        beacons: {
            mask: "flags",
            flag: y.FLAGS.BEACONS
        },
        nearbyHOV: {
            mask: "flags",
            flag: y.FLAGS.NEARBY_HOV
        },
        fwdSpeedCamera: {
            mask: "fwdFlags",
            flag: y.FWD.SPEED_CAMERA
        },
        revSpeedCamera: {
            mask: "revFlags",
            flag: y.REV.SPEED_CAMERA
        },
        fwdLanesEnabled: {
            mask: "fwdFlags",
            flag: y.FWD.LANES_ENABLED
        },
        revLanesEnabled: {
            mask: "revFlags",
            flag: y.REV.LANES_ENABLED
        }
    };
    t.FLAG_ATTRIBUTES = A;
    var M = function(e) {
        function t(n, i) {
            return void 0 === i && (i = {
                    parse: !1
                }),
                e.call(this, n, i, c.SegmentsPermissions, t.defaults()) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry,
                        restrictions: _.default,
                        pickupRestrictions: m.default
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.defaults = function() {
                return {
                    roadType: d.ROAD_TYPE.STREET,
                    fromNodeID: null,
                    toNodeID: null,
                    virtualNodeIDs: [],
                    crossroadID: null,
                    fwdDirection: !0,
                    revDirection: !1,
                    fwdMaxSpeed: null,
                    revMaxSpeed: null,
                    fwdToll: null,
                    revToll: null,
                    hasHNs: !1,
                    fwdMaxSpeedUnverified: !1,
                    revMaxSpeedUnverified: !1,
                    fwdTurnsLocked: !0,
                    revTurnsLocked: !0,
                    level: 0,
                    allowNoDirection: !0,
                    rank: 0,
                    lockRank: null,
                    permissions: g.default.ALL_PERMISSIONS & ~c.SegmentsPermissions.EDIT_ROUTING_ROAD_TYPES,
                    routingRoadType: null,
                    flags: 0,
                    fwdFlags: 0,
                    revFlags: 0,
                    primaryStreetID: null,
                    fromCrossroads: [],
                    toCrossroads: [],
                    streetIDs: [],
                    restrictions: [],
                    pickupRestrictions: [],
                    fwdLaneCount: 0,
                    revLaneCount: 0
                }
            },
            t.prototype.getEndPoints = function() {
                return w.getVertices(this.geometry, !0)
            },
            t.prototype.getFlagAttributes = function() {
                return {
                    tunnel: this.getFlagAttribute("tunnel"),
                    unpaved: this.getFlagAttribute("unpaved"),
                    headlights: this.getFlagAttribute("headlights"),
                    beacons: this.getFlagAttribute("beacons"),
                    nearbyHOV: this.getFlagAttribute("nearbyHOV"),
                    fwdSpeedCamera: this.getFlagAttribute("fwdSpeedCamera"),
                    revSpeedCamera: this.getFlagAttribute("revSpeedCamera"),
                    fwdLanesEnabled: this.getFlagAttribute("fwdLanesEnabled"),
                    revLanesEnabled: this.getFlagAttribute("revLanesEnabled")
                }
            },
            t.prototype.getFlagAttribute = function(e) {
                var t = A[e],
                    n = this.attributes[t.mask];
                return new S.default(n).isEnabled(t.flag)
            },
            t.prototype.merge = function(t) {
                delete this.attributes.origIDs,
                    e.prototype.merge.call(this, t)
            },
            t.prototype.copyAttributes = function(e) {
                var t, n, i = this.attributes,
                    r = i.geometry;
                Object.assign(i, e.attributes);
                var o = Object.keys(i);
                try {
                    for (var a = s(o), l = a.next(); !l.done; l = a.next()) {
                        var u = l.value,
                            c = i[u];
                        c instanceof Array && (i[u] = c.slice(0))
                    }
                } catch (e) {
                    t = {
                        error: e
                    }
                } finally {
                    try {
                        l && !l.done && (n = a.return) && n.call(a)
                    } finally {
                        if (t)
                            throw t.error
                    }
                }
                delete i.origIDs,
                    i.geometry = r
            },
            t.prototype.setSelected = function(t) {
                e.prototype.setSelected.call(this, t),
                    this.getAddress().setSelected(t)
            },
            t.prototype.getAddress = function() {
                return h.default.fromStreetID(this.attributes.primaryStreetID, this.model, {
                    altStreets: this.attributes.streetIDs
                })
            },
            t.prototype.getCenter = function() {
                return w.getLineStringCenterPoint(this.geometry)
            },
            t.prototype.getArrowPoints = function(e, t, n) {
                var i = [],
                    r = w.getVertices(this.geometry),
                    s = 0,
                    o = 0;
                if (!T.defined(e))
                    return [];
                t && t < e && (s += e - t);
                for (var a = r[o]; o < r.length - 1;) {
                    var l = r[o + 1],
                        u = a.distanceTo(l);
                    if (n && o === r.length - 2 && (u -= n),
                        s + u < e)
                        s += u,
                        o++,
                        a = l;
                    else {
                        var c = Math.atan2(l.y - a.y, l.x - a.x),
                            d = e - s;
                        (a = b.createPoint(a.x, a.y)).move(d * Math.cos(c), d * Math.sin(c)),
                            i.push([a.clone(), c]),
                            s = 0
                    }
                }
                return i
            },
            t.prototype.clone = function() {
                var e = l.default.extend({}, this.attributes);
                this.attributes.geometry && (e.geometry = E.cloneGeometry(this.attributes.geometry));
                var n = new t({});
                return n.attributes = e,
                    this.attributes.streetIDs && (n.attributes.streetIDs = this.attributes.streetIDs.concat()),
                    n
            },
            t.prototype.isOneWay = function() {
                return this.attributes.fwdDirection ? !this.attributes.revDirection : this.attributes.revDirection
            },
            t.prototype.reverseDirection = function() {
                this.isOneWay() && (this.attributes.fwdDirection = !this.attributes.fwdDirection,
                    this.attributes.revDirection = !this.attributes.revDirection)
            },
            t.prototype.isConnectedToNode = function(e) {
                return this.attributes.toNodeID === e.getID() || this.attributes.fromNodeID === e.getID()
            },
            t.prototype.isVirtuallyConnectedToNode = function(e) {
                return this.attributes.virtualNodeIDs.includes(e.getID())
            },
            t.prototype.isPoint = function() {
                var e = w.getFirstVertex(this.geometry);
                return w.getVertices(this.geometry).every(function(t) {
                    return t.equals(e)
                })
            },
            t.prototype.getConnectedSegments = function(e) {
                var t = e === I.NodeName.FROM ? "fromNodeID" : "toNodeID",
                    n = this.model.nodes.getObjectById(this.attributes[t]);
                return n ? this.model.segments.getByIds(n.attributes.segIDs) : []
            },
            t.prototype.getTurnsLockAttribute = function(e) {
                return e.getID() === this.attributes.toNodeID ? "fwdTurnsLocked" : "revTurnsLocked"
            },
            t.prototype.getNodeAttribute = function(e) {
                return this.attributes.fromNodeID === e.getID() ? I.NodeName.FROM : this.attributes.toNodeID === e.getID() ? I.NodeName.TO : null
            },
            t.prototype.getOtherNode = function(e) {
                return this.attributes.fromNodeID === e.getID() ? this.model.nodes.getObjectById(this.attributes.toNodeID) : this.attributes.toNodeID === e.getID() ? this.model.nodes.getObjectById(this.attributes.fromNodeID) : null
            },
            t.prototype.areTurnsLocked = function(e) {
                return e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked : this.attributes.revTurnsLocked
            },
            t.prototype.setTurnsLock = function(e, t) {
                e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked = t : this.attributes.revTurnsLocked = t
            },
            t.prototype.equals = function(e) {
                return e.getID() === this.getID() && e.type === this.type
            },
            t.prototype.getLockRank = function() {
                return null === this.attributes.lockRank ? this.attributes.rank : this.attributes.lockRank
            },
            t.prototype.hasNonEmptyStreet = function() {
                var e = this.getAddress();
                return null != e.getStreet() && !e.isEmptyStreet()
            },
            t.prototype.getVirtualNodes = function() {
                var e = this;
                return this.attributes.virtualNodeIDs.map(function(t) {
                    return e.model.nodes.getObjectById(t)
                }).filter(function(e) {
                    return null != e
                })
            },
            t.prototype.hasFromNode = function() {
                return null !== this.attributes.fromNodeID
            },
            t.prototype.getFromNode = function() {
                return this.hasFromNode() ? this.model.nodes.getObjectById(this.attributes.fromNodeID) : null
            },
            t.prototype.hasToNode = function() {
                return null !== this.attributes.toNodeID
            },
            t.prototype.getToNode = function() {
                return this.hasToNode() ? this.model.nodes.getObjectById(this.attributes.toNodeID) : null
            },
            t.prototype.getNodeByDirection = function(e) {
                var t = e === I.NodeName.FROM ? "fromNodeID" : "toNodeID";
                return null != this.attributes[t] ? this.model.nodes.getObjectById(this.attributes[t]) : null
            },
            t.prototype.isToNode = function(e) {
                return !!this.hasToNode() && e.getID() === this.attributes.toNodeID
            },
            t.prototype.isFromNode = function(e) {
                return !!this.hasFromNode() && e.getID() === this.attributes.fromNodeID
            },
            t.prototype.getConnectedSegmentsByDirection = function(e) {
                var t = this;
                return this.getConnectedSegments(e).filter(function(n) {
                    if (n === t)
                        return !1;
                    var i = t.getNodeByDirection(e);
                    return i && (t.isTurnAllowed(n, i) || n.isTurnAllowed(t, i))
                })
            },
            t.prototype.canForceHouseNumbers = function() {
                return this.isAllowed(c.SegmentsPermissions.FORCE_HOUSE_NUMBERS)
            },
            t.prototype.canEditHouseNumbers = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_HOUSE_NUMBERS)
            },
            t.prototype.canEditClosures = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_CLOSURES)
            },
            t.prototype.canEditHeadlightsReminder = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_HEADLIGHTS_REMINDER)
            },
            t.prototype.canEditAverageSpeedCamera = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_AVERAGE_SPEED_CAMERA)
            },
            t.prototype.canEditLanes = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_LANES)
            },
            t.prototype.canEditRoutingRoadTypes = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_ROUTING_ROAD_TYPES)
            },
            t.prototype.canEditConnections = function() {
                return this.isAllowed(c.SegmentsPermissions.EDIT_CONNECTIONS)
            },
            t.prototype.hasBeacons = function() {
                return this.getFlagAttribute("beacons")
            },
            t.prototype.hasClosures = function() {
                return Boolean(this.attributes.hasClosures)
            },
            t.prototype.createLockTurnsAction = function(e) {
                var t = {};
                return t[this.getTurnsLockAttribute(e)] = !0,
                    new u.default(this, t)
            },
            t.prototype.lockTurns = function(e) {
                var t = this.createLockTurnsAction(e);
                this.model.actionManager.add(t)
            },
            t.prototype.getFwdHeading = function() {
                var e = w.getVertices(this.geometry);
                return k.getHeading(e[0], e[e.length - 1])
            },
            t.prototype.getRevHeading = function() {
                var e = w.getVertices(this.geometry);
                return k.getHeading(e[e.length - 1], e[0])
            },
            t.prototype.isTurnAllowed = function(e, t) {
                return null != t && this.model.getTurnGraph().getTurnThroughNode(t, this, e).getTurnData().isAllowed()
            },
            t.prototype.canUserSetDefaultRank = function(e) {
                return e >= this.attributes.rank
            },
            t.prototype.isInRoundabout = function() {
                return null != this.attributes.junctionID
            },
            t.prototype.getRoadType = function() {
                return this.attributes.roadType
            },
            t.prototype.getDrivingRestrictions = function() {
                return this.attributes.restrictions.slice()
            },
            t.prototype.getPickupRestrictions = function() {
                return this.attributes.pickupRestrictions.slice()
            },
            t.prototype.getDrivingRestrictionCount = function() {
                return v.dedupRestrictions(this.attributes.restrictions).length
            },
            t.prototype.getPickupRestrictionCount = function() {
                return v.dedupRestrictions(this.attributes.pickupRestrictions).length
            },
            t.prototype.hasRestrictions = function() {
                return this.getDrivingRestrictionCount() > 0 || this.getPickupRestrictionCount() > 0
            },
            t.prototype.getForwardDrivingRestrictions = function() {
                return this.getDrivingRestrictions().filter(function(e) {
                    return e.isForward()
                })
            },
            t.prototype.getReverseDrivingRestrictions = function() {
                return this.getDrivingRestrictions().filter(function(e) {
                    return e.isReverse()
                })
            },
            t.prototype.getBidiDrivingRestrictions = function() {
                return this.getDrivingRestrictions().filter(function(e) {
                    return e.isBidi()
                })
            },
            t.prototype.getLaneCount = function(e) {
                return (e === f.SEGMENT_LANE_DIRECTION.FWD ? this.attributes.fwdLaneCount : this.attributes.revLaneCount) || 0
            },
            t.prototype.getFwdLanes = function() {
                return f.default.forSegment(this.model, this, f.SEGMENT_LANE_DIRECTION.FWD)
            },
            t.prototype.getRevLanes = function() {
                return f.default.forSegment(this.model, this, f.SEGMENT_LANE_DIRECTION.REV)
            },
            t.prototype.isLanesEnabled = function(e) {
                return this.getFlagAttribute(e === f.SEGMENT_LANE_DIRECTION.FWD ? "fwdLanesEnabled" : "revLanesEnabled")
            },
            t.prototype.isDrivable = function() {
                return !d.isNonDrivableRoadType(this.attributes.roadType)
            },
            t.prototype.isWalkingTrail = function() {
                return d.isWalkingRoadType(this.attributes.roadType)
            },
            t.prototype.isHighway = function() {
                return d.isHighwayRoadType(this.attributes.roadType)
            },
            t.prototype.supportsVirtualNodes = function() {
                return !this.isWalkingTrail()
            },
            t
    }(p.default);
    Object.assign(M.prototype, {
            FLAG_ATTRIBUTES: A,
            CLASS_NAME: "Waze.Feature.Vector.Segment"
        }),
        t.default = M
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = function(e) {
            function t(t) {
                var n = e.call(this, t) || this;
                return n.subActions = [],
                    n
            }
            return r(t, e),
                t.prototype.destroy = function() {
                    for (var t = 0, n = this.subActions.length; t < n; t++)
                        this.subActions[t].destroy();
                    e.prototype.destroy.call(this)
                },
                t.prototype.isLeaf = function() {
                    return !1
                },
                t.prototype.doSubAction = function(e) {
                    e.setModel(this.model);
                    var t = e.doAction();
                    return !1 !== t ? this.subActions.push(e) : e.destroy(),
                        t
                },
                t.prototype.doAction = function() {
                    return this.subActions.map(function(e) {
                        return e.doAction()
                    }).some(function(e) {
                        return !1 !== e
                    })
                },
                t.prototype.undoAction = function() {
                    for (var e = this.subActions.length - 1; e >= 0; e--)
                        this.subActions[e].undoAction()
                },
                t.prototype.redoAction = function() {
                    for (var e = 0, t = this.subActions.length; e < t; e++)
                        this.subActions[e].redoAction()
                },
                t.prototype.accept = function(e) {
                    var t = e.beforeEnter(this);
                    e.visit(this),
                        !1 !== t && this.subActions.forEach(function(t) {
                            t.accept(e)
                        }),
                        e.afterLeave(this)
                },
                t.prototype.flat = function() {
                    var e = o.default.flatten(this.subActions.map(function(e) {
                        return e.flat()
                    }));
                    return e.push(this),
                        e
                },
                t.prototype.getBounds = function() {
                    var e, t, n;
                    if (o.default.isEmpty(this.subActions))
                        return null;
                    for (e = (n = this.subActions[0].getBounds()) ? n.clone() : new OpenLayers.Bounds,
                        t = 1; t < this.subActions.length; t++)
                        (n = this.subActions[t].getBounds()) && n.getWidth() > 0 && n.getHeight() > 0 && e.extend(n);
                    return e
                },
                t.prototype.serialize = function() {
                    return null
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o.default.flatten(this.subActions.map(function(e) {
                        return e.getAffectedUniqueIds()
                    }))
                },
                t
        }(s(n(41)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.LAYER_UNIQUE_NAMES = {
        ARCHIVE: "archive",
        AREA_MANAGERS: "area_managers",
        BIG_JUNCTIONS: "big_junctions",
        CLOSURES: "closures",
        CLOSURE_NODES: "closure_nodes",
        EDITABLE_AREAS: "editable_areas",
        LANDMARKS: "landmarks",
        NODES: "nodes",
        PLACE_UPDATES: "place_updates",
        PROBLEMS: "problems",
        SATELLITE_IMAGERY: "satellite_imagery",
        SEGMENTS: "segments",
        SPEED_CAMERAS: "speed_cameras",
        UPDATE_REQUESTS: "update_requests",
        LIVE_USERS: "live_users",
        SEARCH: "search_layer",
        MAP_COMMENTS: "mapComments",
        RESIDENTIAL_PLACE_UPDATES: "RESIDENTIAL_PLACE_UPDATES",
        PARKING_PLACE_UPDATES: "PARKING_PLACE_UPDATES",
        CITIES_RASTER_LAYER_NAME: "cities",
        CITIES_FEATURES_LAYER_NAME: "cities_features",
        CITIES_MARKERS_LAYER_NAME: "cities_markers",
        RESTRICTED_DRIVING_AREAS_POLYGON: "restricted_driving_areas_polygon",
        RESTRICTED_DRIVING_AREAS_NAMES: "restricted_driving_areas_names",
        GPS_POINTS: "gps_points",
        ROADS: "roads",
        HOUSE_NUMBERS: "house_numbers"
    }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__values || function(e) {
            var t = "function" == typeof Symbol && e[Symbol.iterator],
                n = 0;
            return t ? t.call(e) : {
                next: function() {
                    return e && n >= e.length && (e = void 0), {
                        value: e && e[n++],
                        done: !e
                    }
                }
            }
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = o(n(0)),
        l = o(n(41)),
        u = n(128),
        c = o(n(67)),
        d = o(n(51)),
        h = function(e) {
            function t(t, n, i) {
                var r = e.call(this, i) || this;
                r.object = t,
                    r.newAttributes = n,
                    r.oldAttributes = {},
                    r.object instanceof d.default || r.object instanceof c.default ? r.attributes = r.object.getFeatureAttributes() : r.attributes = r.object,
                    r.stateChanged = !1;
                var s = r._pickWritableAttributes(n);
                return r.newAttributes = r._pickChangedAttributes(s),
                    r.oldAttributes = a.default.pick(r.attributes, Object.keys(r.newAttributes)),
                    r.hasChanges = Object.keys(r.newAttributes).length > 0,
                    r
            }
            return r(t, e),
                t.prototype._pickWritableAttributes = function(e) {
                    return this.object.writableAttributes ? a.default.pick(e, this.object.writableAttributes) : a.default.clone(e)
                },
                t.prototype._pickChangedAttributes = function(e) {
                    var t, n, i = {};
                    try {
                        for (var r = s(Object.keys(e)), o = r.next(); !o.done; o = r.next()) {
                            var a = o.value,
                                l = e[a];
                            this.attributes[a] !== l && (i[a] = e[a])
                        }
                    } catch (e) {
                        t = {
                            error: e
                        }
                    } finally {
                        try {
                            o && !o.done && (n = r.return) && n.call(r)
                        } finally {
                            if (t)
                                throw t.error
                        }
                    }
                    return i
                },
                t.prototype.doAction = function() {
                    if (!this.object.type)
                        throw new Error("Object has no type");
                    return this.repository = this.model.getRepository(this.object.type),
                        Object.assign(this.attributes, this.newAttributes),
                        !!this.hasChanges && (this.object.state || (this.object.state = OpenLayers.State.UPDATE,
                                this.stateChanged = !0),
                            this.repository.changed(this.object),
                            !0)
                },
                t.prototype.undoAction = function() {
                    Object.assign(this.attributes, this.oldAttributes),
                        this.stateChanged && (this.object.state = null),
                        this.hasChanges && this.repository.changed(this.object)
                },
                t.prototype.redoAction = function() {
                    this.doAction()
                },
                t.prototype.serialize = function() {
                    var e = this.newAttributes;
                    return e.id = this.object.getID(), {
                        _objectType: this.object.type,
                        action: l.default.TYPE.UPDATE,
                        attributes: e
                    }
                },
                t.prototype.getNewAttributes = function() {
                    return Object.assign({}, this.newAttributes)
                },
                t.prototype.getOldAttributes = function() {
                    return Object.assign({}, this.oldAttributes)
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return [this.object.getUniqueID()]
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.object]
                },
                t.prototype.generateDescription = function() {
                    this._description = u.generateUpdateActionDescription(this)
                },
                t
        }(l.default);
    t.default = h
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "httpGet", function() {
            return w
        }),
        n.d(t, "httpPost", function() {
            return S
        }),
        n.d(t, "httpRequest", function() {
            return y
        }),
        n.d(t, "addHttpRequestMiddleware", function() {
            return b
        }),
        n.d(t, "addHttpResponseMiddleware", function() {
            return E
        }),
        n.d(t, "FetchError", function() {
            return _
        });
    var i = n(2),
        r = n.n(i),
        s = n(5),
        o = n.n(s),
        a = n(3),
        l = n.n(a),
        u = n(34),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(143),
        g = [],
        f = [],
        m = /(application|text)\/(x-)?json/;

    function v(e) {
        if (204 === e.status)
            return !1;
        var t = e.headers.get("content-type");
        return t && m.test(t)
    }
    var _ = function(e) {
        function t(e) {
            var n;
            r()(this, t);
            var i = v(e) ? JSON.stringify(e.parsedJSON) : e.statusText;
            return n = o()(this, l()(t).call(this, "Server Response Error: ".concat(i))),
                Error.captureStackTrace && Error.captureStackTrace(c()(n), t),
                n.response = v(e) ? e.parsedJSON : e.statusText,
                n.status = e.status,
                n
        }
        return h()(t, e),
            t
    }(n.n(p)()(Error));

    function y(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            i = n.method,
            r = void 0 === i ? "GET" : i,
            s = n.dataType,
            o = void 0 === s ? "form" : s,
            a = n.signal,
            l = void 0 === a ? null : a,
            u = new window.Headers,
            c = function(e, t, n, i, r) {
                var s;
                return null != t && ("GET" !== i && "HEAD" !== i ? "json" === n ? (s = JSON.stringify(t),
                    r.append("Content-Type", "application/json; charset=utf-8")) : s = new window.URLSearchParams(t) : (e = new window.URL(e, window.location.origin),
                    Object.keys(t).forEach(function(n) {
                        return e.searchParams.append(n, t[n] || "")
                    }))), {
                    url: e,
                    body: s
                }
            }(e, t, o, r, u),
            d = c.url,
            h = c.body,
            p = new window.Request(d, {
                body: h,
                method: r,
                headers: u,
                credentials: "same-origin"
            });
        return g.forEach(function(e) {
                e.call(void 0, p)
            }),
            window.fetch(p, {
                signal: l
            }).then(function(e) {
                var t;
                return t = v(e) ? e.json().then(function(t) {
                        return e.parsedJSON = t,
                            e
                    }).catch(function() {
                        return e.parsedJSON = {},
                            e
                    }) : e.text().then(function(t) {
                        return e.bodyText = t,
                            e
                    }).catch(function() {
                        e.bodyText = ""
                    }),
                    f.forEach(function(n) {
                        t = t.then(function() {
                            return n.call(void 0, e)
                        })
                    }),
                    e.ok ? t.then(function() {
                        return e
                    }) : t.then(function() {
                        throw new _(e)
                    })
            }).then(function(e) {
                return v(e) ? e.parsedJSON : e.bodyText
            })
    }

    function b(e) {
        g.push(e)
    }

    function E(e) {
        f.push(e)
    }

    function w(e, t, n) {
        return y(e, t, Object.assign({
            method: "GET"
        }, n))
    }

    function S(e, t, n) {
        return y(e, t, Object.assign({
            method: "POST"
        }, n))
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.FEATURE_FLAGS = {
        LANES: "Lanes",
        LANES_ANGLE_OVERRIDE: "LanesAngleOverride",
        MERGE_PLACES: "MergeVenues",
        HOUSE_NUMBERS_LAYER: "HouseNumbersLayer",
        NODE_CLOSURES: "NodeClosures",
        LICENSE_PLATES_RESTRICTIONS: "LicensePlatesRestrictions",
        NEW_SPLIT_MERGE: "NewSplitMerge",
        CHAT_AND_LIVE_USERS: "ChatAndLiveUsers",
        RESTRICTED_DRIVING_AREAS: "RestrictedDrivingAreas"
    };
    var i = null;

    function r() {
        if (null == i)
            throw new Error("call init() before reading server config");
        return i
    }
    t.init = function(e) {
            return e.getConfigurationInfo().then(function(e) {
                i = e
            })
        },
        t.getServerConfig = r,
        t.isFeatureFlagEnabled = function(e) {
            var t = r().featureFlags;
            return null != t && Boolean(t[e])
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        s = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(r(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = n(697),
        a = n(75);
    t.RESTRICTION_DESCRIPTION_CHAR_LIMIT = 1e3;
    var l = {
        FREE: "FREE",
        BLOCKED: "BLOCKED",
        TOLL: "TOLL",
        PENALTY: "PENALTY",
        ENTER_ONLY: "ENTER_ONLY",
        DANGEROUS_AREA: "DANGEROUS_AREA",
        DIFFICULT: "DIFFICULT"
    };
    t.RESTRICTION_TYPE = l;
    var u = {
        DRIVING_BLOCKED: "DRIVING_BLOCKED",
        DRIVING_ALLOWED: "DRIVING_ALLOWED",
        DRIVING_TOLL_FREE: "DRIVING_TOLL_FREE"
    };
    t.RESTRICTION_MODALITY = u;
    var c = function() {
        function e(e) {
            var t = void 0 === e ? {} : e,
                n = t.timeFrames,
                i = void 0 === n ? [] : n,
                r = t.defaultType,
                s = void 0 === r ? null : r,
                l = t.driveProfiles,
                u = void 0 === l ? {} : l,
                c = t.description,
                d = void 0 === c ? "" : c,
                h = t.editable,
                p = void 0 === h || h;
            this._editable = p,
                this._defaultType = s,
                this._description = d,
                this._timeFrames = i.map(function(e) {
                    return new a.RestrictionTimeFrame(e)
                }),
                this._driveProfiles = new Map(Object.keys(u).map(function(e) {
                    var t = e,
                        n = u[t];
                    return [t, new o.RestrictionDriveProfileList({
                        driveProfiles: n
                    })]
                }))
        }
        return e.prototype.__clone = function() {
                return this.toJSON()
            },
            e.prototype.equals = function(e) {
                return this._editable === e._editable && this._defaultType === e._defaultType && this._description === e._description && this._timeFramesEquals(e._timeFrames) && this._driveProfilesEquals(e._driveProfiles)
            },
            e.prototype._timeFramesEquals = function(e) {
                return this._timeFrames.length === e.length && this._timeFrames.every(function(t) {
                    return e.some(function(e) {
                        return e.equals(t)
                    })
                })
            },
            e.prototype._driveProfilesEquals = function(e) {
                var t = this;
                return this._driveProfiles.size === e.size && s(this._driveProfiles.keys()).every(function(n) {
                    var i = t._driveProfiles.get(n),
                        r = e.get(n);
                    return i.equals(r)
                })
            },
            e.prototype.toJSON = function() {
                var e = this;
                return {
                    editable: this._editable,
                    defaultType: this._defaultType,
                    description: this._description,
                    timeFrames: this._timeFrames.map(function(e) {
                        return e.toJSON()
                    }),
                    driveProfiles: s(this._driveProfiles.keys()).reduce(function(t, n) {
                        var r, s = e._driveProfiles.get(n);
                        return i({}, t, ((r = {})[n] = s.toJSON(),
                            r))
                    }, {})
                }
            },
            e.prototype.getDefaultType = function() {
                return this._defaultType
            },
            e.prototype.getDescription = function() {
                return null != this._description ? this._description : ""
            },
            e.prototype.getTimeFrame = function() {
                return this._timeFrames.length ? this._timeFrames[0] : a.RestrictionTimeFrame.getAlwaysOn()
            },
            e.prototype.getDriveProfileList = function(e) {
                return this.hasDriveProfile(e) ? this._driveProfiles.get(e) : new o.RestrictionDriveProfileList
            },
            e.prototype.hasDriveProfile = function(e) {
                return this._driveProfiles.has(e)
            },
            e.prototype.isDriveProfileEmpty = function() {
                return 0 === this._driveProfiles.size
            },
            e.prototype.isTimeRestricted = function() {
                return this._timeFrames && this._timeFrames.length > 0
            },
            e.prototype.isEditable = function() {
                return this._editable
            },
            e.prototype.isDifficult = function() {
                return this._defaultType === l.DIFFICULT
            },
            e.prototype.isSimplyDifficult = function() {
                return this.isDifficult() && !this.isTimeRestricted()
            },
            e.prototype.supportsNumPassengers = function() {
                return !0
            },
            e.prototype.supportsSubscriptions = function() {
                return !0
            },
            e.prototype.supportsLicensePlateNumber = function() {
                return !0
            },
            e.prototype.supportsDaysOfMonthParity = function() {
                return !0
            },
            e.prototype.supportsTollDriveProfileEntries = function() {
                return !0
            },
            e.prototype.supportsDriveProfiles = function() {
                return !this.isDifficult()
            },
            e.prototype.getDrivingModality = function() {
                return this._defaultType === l.TOLL ? u.DRIVING_TOLL_FREE : this._defaultType === l.BLOCKED && this.hasDriveProfile(l.FREE) ? u.DRIVING_ALLOWED : this._defaultType === l.FREE && this.hasDriveProfile(l.BLOCKED) || this._defaultType === l.BLOCKED && this.isDriveProfileEmpty() ? u.DRIVING_BLOCKED : null
            },
            e.prototype.isBlockedModality = function() {
                return this.getDrivingModality() === u.DRIVING_BLOCKED
            },
            e.prototype.isAllowedModality = function() {
                return this.getDrivingModality() === u.DRIVING_ALLOWED
            },
            e.prototype.isTollFreeModality = function() {
                return this.getDrivingModality() === u.DRIVING_TOLL_FREE
            },
            e.prototype._allTimeFramesBefore = function(e) {
                return this._timeFrames.every(function(t) {
                    return !t.isDuringDates() || t.isDateRangeBefore(e)
                })
            },
            e.prototype._hasDateRestrictedTimeFrames = function() {
                return this._timeFrames.some(function(e) {
                    return e.isDuringDates()
                })
            },
            e.prototype.isExpired = function() {
                var e = new Date;
                return this._hasDateRestrictedTimeFrames() && this._allTimeFramesBefore(e)
            },
            e
    }();
    t.BaseRestriction = c
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "isUndefined", function() {
            return l
        }),
        n.d(t, "isDefined", function() {
            return u
        }),
        n.d(t, "defined", function() {
            return c
        }),
        n.d(t, "localStorage", function() {
            return d
        }),
        n.d(t, "protect", function() {
            return h
        }),
        n.d(t, "deepClone", function() {
            return p
        }),
        n.d(t, "runLater", function() {
            return g
        }),
        n.d(t, "isSequential", function() {
            return f
        });
    var i = n(104),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(30);

    function l(e) {
        return o.a.isUndefined(e)
    }

    function u(e) {
        return !o.a.isUndefined(e)
    }

    function c(e) {
        return void 0 !== e && null !== e
    }
    var d = {
        get: function(e) {
            try {
                var t = window.localStorage.getItem(e);
                return t ? JSON.parse(t) : null
            } catch (e) {
                return null
            }
        },
        set: function(e, t) {
            try {
                return t = JSON.stringify(t),
                    window.localStorage.setItem(e, t),
                    !0
            } catch (e) {
                return !1
            }
        }
    };

    function h(e, t, n) {
        var i, r, s, o, l = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        try {
            return t.call(n)
        } catch (t) {
            if (i = e,
                r = t.name,
                s = t.message,
                o = t.stack,
                Object(a.httpPost)(W.Config.paths.logger, {
                    action: i,
                    type: r,
                    message: s,
                    trace: o
                }),
                !l)
                throw t
        }
    }

    function p(e) {
        if ("object" === r()(e) && null !== e) {
            if (Array.isArray(e))
                return e.map(function(e) {
                    return p(e)
                });
            if ("function" == typeof e.clone)
                return e.clone();
            if ("function" == typeof e.__clone)
                return e.__clone();
            var t = {};
            for (var n in e)
                e.hasOwnProperty(n) && (t[n] = p(e[n]));
            return t
        }
        return e
    }

    function g(e) {
        Promise.resolve().then(e)
    }

    function f(e) {
        if (e.length < 2)
            return !0;
        for (var t = 1; t < e.length; t++)
            if (e[t] - e[t - 1] != 1)
                return !1;
        return !0
    }
}, , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
            return (i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(e, t) {
                    e.__proto__ = t
                } ||
                function(e, t) {
                    for (var n in t)
                        t.hasOwnProperty(n) && (e[n] = t[n])
                }
            )(e, t)
        },
        function(e, t) {
            function n() {
                this.constructor = e
            }
            i(e, t),
                e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                    new n)
        }
    );
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(32),
        o = {
            FWD: "FWD",
            REV: "REV",
            BOTH: "BOTH"
        };
    t.RESTRICTION_SEGMENT_DIRECTION = o;
    var a = {
        WHOLE_SEGMENT: 1,
        LEFT_LANE: 2,
        MIDDLE_LANE: 3,
        RIGHT_LANE: 4
    };
    t.RESTRICTION_SEGMENT_DISPOSITION = a;
    t.RESTRICTION_SEGMENT_LANE_TYPE = {
        HOV: 1,
        HOT: 2,
        EXPRESS: 3,
        BUS: 4,
        FAST: 5
    };
    var l = function(e) {
        function t(t) {
            void 0 === t && (t = {});
            var n = e.call(this, t) || this;
            return n._direction = t.direction || o.FWD,
                n._disposition = t.disposition || a.WHOLE_SEGMENT,
                n._laneType = t.laneType || null,
                Object.freeze(n),
                n
        }
        return r(t, e),
            t.prototype.withoutDirection = function() {
                return this.with({
                    direction: null
                })
            },
            t.prototype.withReverseDirection = function() {
                if (this.isBidi())
                    return this;
                var e = this.isForward() ? o.REV : o.FWD;
                return this.with({
                    direction: e
                })
            },
            t.prototype.with = function(e) {
                return void 0 === e && (e = {}),
                    new t(Object.assign(this.toJSON(), e))
            },
            t.prototype.equals = function(t) {
                return e.prototype.equals.call(this, t) && this._direction === t._direction && this._disposition === t._disposition && this._laneType === t._laneType
            },
            t.prototype.toJSON = function() {
                return Object.assign(e.prototype.toJSON.call(this), {
                    direction: this._direction,
                    disposition: this._disposition,
                    laneType: this._laneType
                })
            },
            t.prototype.getLaneType = function() {
                return this._laneType
            },
            t.prototype.getDisposition = function() {
                return null === this._disposition ? a.WHOLE_SEGMENT : this._disposition
            },
            t.prototype.getDirection = function() {
                return this._direction
            },
            t.prototype.isForward = function() {
                return this._direction === o.FWD
            },
            t.prototype.isReverse = function() {
                return this._direction === o.REV
            },
            t.prototype.isBidi = function() {
                return this._direction === o.BOTH
            },
            t
    }(s.BaseRestriction);
    t.default = l
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.VENUE_PARKING_LOT = "PARKING_LOT";
    t.VENUE_GAS_STATION = "GAS_STATION";
    var i = Object.keys({
        CAR_SERVICES: "CAR_SERVICES",
        TRANSPORTATION: "TRANSPORTATION",
        PROFESSIONAL_AND_PUBLIC: "PROFESSIONAL_AND_PUBLIC",
        SHOPPING_AND_SERVICES: "SHOPPING_AND_SERVICES",
        FOOD_AND_DRINK: "FOOD_AND_DRINK",
        CULTURE_AND_ENTERTAINEMENT: "CULTURE_AND_ENTERTAINEMENT",
        OTHER: "OTHER",
        LODGING: "LODGING",
        OUTDOORS: "OUTDOORS",
        NATURAL_FEATURES: "NATURAL_FEATURES",
        PARKING_LOT: "PARKING_LOT"
    });
    t.VENUE_MAIN_CATEGORIES_LIST = i;
    var r = {
        CAR_SERVICES: ["GAS_STATION", "GARAGE_AUTOMOTIVE_SHOP", "CAR_WASH", "CHARGING_STATION"],
        PARKING_LOT: [],
        TRANSPORTATION: ["AIRPORT", "BUS_STATION", "FERRY_PIER", "SEAPORT_MARINA_HARBOR", "SUBWAY_STATION", "TRAIN_STATION", "BRIDGE", "TUNNEL", "TAXI_STATION", "JUNCTION_INTERCHANGE", "REST_AREAS", "CARPOOL_SPOT"],
        PROFESSIONAL_AND_PUBLIC: ["COLLEGE_UNIVERSITY", "SCHOOL", "CONVENTIONS_EVENT_CENTER", "GOVERNMENT", "LIBRARY", "CITY_HALL", "ORGANIZATION_OR_ASSOCIATION", "PRISON_CORRECTIONAL_FACILITY", "COURTHOUSE", "CEMETERY", "FIRE_DEPARTMENT", "POLICE_STATION", "MILITARY", "HOSPITAL_URGENT_CARE", "DOCTOR_CLINIC", "OFFICES", "POST_OFFICE", "RELIGIOUS_CENTER", "KINDERGARDEN", "FACTORY_INDUSTRIAL", "EMBASSY_CONSULATE", "INFORMATION_POINT", "EMERGENCY_SHELTER", "TRASH_AND_RECYCLING_FACILITIES"],
        SHOPPING_AND_SERVICES: ["ARTS_AND_CRAFTS", "BANK_FINANCIAL", "SPORTING_GOODS", "BOOKSTORE", "PHOTOGRAPHY", "CAR_DEALERSHIP", "FASHION_AND_CLOTHING", "CONVENIENCE_STORE", "PERSONAL_CARE", "DEPARTMENT_STORE", "PHARMACY", "ELECTRONICS", "FLOWERS", "FURNITURE_HOME_STORE", "GIFTS", "GYM_FITNESS", "SWIMMING_POOL", "HARDWARE_STORE", "MARKET", "SUPERMARKET_GROCERY", "JEWELRY", "LAUNDRY_DRY_CLEAN", "SHOPPING_CENTER", "MUSIC_STORE", "PET_STORE_VETERINARIAN_SERVICES", "TOY_STORE", "TRAVEL_AGENCY", "ATM", "CURRENCY_EXCHANGE", "CAR_RENTAL", "TELECOM"],
        FOOD_AND_DRINK: ["RESTAURANT", "BAKERY", "DESSERT", "CAFE", "FAST_FOOD", "FOOD_COURT", "BAR", "ICE_CREAM"],
        CULTURE_AND_ENTERTAINEMENT: ["ART_GALLERY", "CASINO", "CLUB", "TOURIST_ATTRACTION_HISTORIC_SITE", "MOVIE_THEATER", "MUSEUM", "MUSIC_VENUE", "PERFORMING_ARTS_VENUE", "GAME_CLUB", "STADIUM_ARENA", "THEME_PARK", "ZOO_AQUARIUM", "RACING_TRACK", "THEATER"],
        OTHER: ["CONSTRUCTION_SITE"],
        LODGING: ["HOTEL", "HOSTEL", "CAMPING_TRAILER_PARK", "COTTAGE_CABIN", "BED_AND_BREAKFAST"],
        OUTDOORS: ["PARK", "PLAYGROUND", "BEACH", "SPORTS_COURT", "GOLF_COURSE", "PLAZA", "PROMENADE", "POOL", "SCENIC_LOOKOUT_VIEWPOINT", "SKI_AREA"],
        NATURAL_FEATURES: ["ISLAND", "SEA_LAKE_POOL", "RIVER_STREAM", "FOREST_GROVE", "FARM", "CANAL", "SWAMP_MARSH", "DAM"]
    };
    t.VENUE_SUBCATEGORIES = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(10),
        l = n.n(a),
        u = function() {
            function e(t, n) {
                r()(this, e),
                    this.events = null,
                    this.className = t,
                    this.moveWithTransform = Boolean(n),
                    this.$div = l()("<div />").addClass(t),
                    this.div = this.$div.get(0),
                    this.imageDiv = this.$div.get(0)
            }
            return o()(e, [{
                    key: "destroy",
                    value: function() {
                        this.erase(),
                            this.$div = null
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new e(this.className)
                    }
                }, {
                    key: "draw",
                    value: function(e) {
                        return this.moveWithTransform ? (this.$div.css({
                                    transform: "translate(".concat(e.x, "px, ").concat(e.y, "px)")
                                }),
                                this.$div.css({
                                    position: "absolute"
                                })) : this.$div.css({
                                position: "absolute",
                                left: e.x,
                                top: e.y
                            }),
                            this.$div.get(0)
                    }
                }, {
                    key: "moveTo",
                    value: function(e) {
                        null !== e && (this.px = e),
                            null === this.px ? this.display(!1) : this.moveWithTransform ? this.$div.css({
                                transform: "translate(".concat(this.px.x, "px, ").concat(this.px.y, "px)")
                            }) : this.$div.css({
                                left: this.px.x,
                                top: this.px.y
                            })
                    }
                }, {
                    key: "erase",
                    value: function() {
                        this.$div.remove()
                    }
                }, {
                    key: "display",
                    value: function(e) {
                        this.$div.toggle(e)
                    }
                }, {
                    key: "isDrawn",
                    value: function() {
                        return Boolean(this.$div.parent().length)
                    }
                }, {
                    key: "bringToFront",
                    value: function() {
                        if (this.isDrawn()) {
                            var e = this.$div.parent();
                            this.$div.detach().appendTo(e)
                        }
                    }
                }, {
                    key: "forceReflow",
                    value: function() {
                        return this.$div.get(0).offsetWidth
                    }
                }]),
                e
        }();
    Object.assign(u.prototype, {
            CLASS_NAME: "Waze.DivIcon"
        }),
        t.default = u
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        FORWARD: "fwd",
        REVERSE: "rev"
    };
    t.DIRECTION = i;
    var r = function() {
        function e(e, t) {
            this.segmentID = e,
                this.direction = t
        }
        return e.forwardOf = function(t) {
                return new e(t, i.FORWARD)
            },
            e.reverseOf = function(t) {
                return new e(t, i.REVERSE)
            },
            e.for = function(t, n) {
                return t.attributes.toNodeID === n.getID() ? e.forwardOf(t.getID()) : e.reverseOf(t.getID())
            },
            e.fromID = function(t) {
                var n = parseInt(t.slice(0, -1), 10);
                return new e(n, "f" === t.slice(-1) ? i.FORWARD : i.REVERSE)
            },
            e.prototype.isForward = function() {
                return this.direction === i.FORWARD
            },
            e.prototype.isReverse = function() {
                return this.direction === i.REVERSE
            },
            e.prototype.getSegmentID = function() {
                return this.segmentID
            },
            e.prototype.getOpposite = function() {
                return this.isForward() ? new e(this.segmentID, i.REVERSE) : new e(this.segmentID, i.FORWARD)
            },
            e.prototype.equals = function(e) {
                return this.segmentID === e.segmentID && this.direction === e.direction
            },
            e.prototype.getID = function() {
                return this.segmentID + (this.direction === i.FORWARD ? "f" : "r")
            },
            e.prototype.toString = function() {
                return this.getID()
            },
            e
    }();
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "FORMATTERS", function() {
            return b
        }),
        n.d(t, "formatBoolean", function() {
            return E
        }),
        n.d(t, "formatFieldName", function() {
            return w
        }),
        n.d(t, "formatValue", function() {
            return S
        }),
        n.d(t, "userProfile", function() {
            return k
        }),
        n.d(t, "formatObjectName", function() {
            return T
        }),
        n.d(t, "formatHouseNumberActionDescription", function() {
            return O
        }),
        n.d(t, "formatActionAddressDescription", function() {
            return M
        }),
        n.d(t, "formatUpdateActionDescription", function() {
            return A
        }),
        n.d(t, "formatStreetName", function() {
            return y
        }),
        n.d(t, "CATEGORY_ATTRIBUTES_TYPE", function() {
            return v
        });
    var i = n(7),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(16),
        l = n(35),
        u = n.n(l),
        c = n(169),
        d = n.n(c),
        h = n(90),
        p = n(15),
        g = n.n(p),
        f = n(26),
        m = n(110),
        v = "venueCategoryAttributes";

    function _(e, t) {
        return function(n) {
            return n.map(function(t) {
                return new e(t)
            }).map(t)
        }
    }

    function y(e, t) {
        var n, i = t.streets.getObjectById(e),
            r = "";
        return null != i && (r = i.name,
                i.isEmpty || (n = t.cities.getObjectById(i.cityID).attributes.name)),
            o.a.compact([r, n]).join(", ")
    }
    var b = {
        default: {
            lockRank: function(e) {
                return a.default.formatRank(e)
            },
            streetID: function(e, t) {
                return y(e, t)
            }
        },
        segment: {
            level: function(e) {
                return 0 === e ? I18n.t("edit.segment.levels.0") : e
            },
            roadType: function(e) {
                return I18n.t("segment.road_types.".concat(e))
            },
            routingRoadType: function(e) {
                return I18n.t("segment.road_types.".concat(e))
            },
            primaryStreetID: function(e, t) {
                return b.default.streetID(e, t)
            },
            streetIDs: function(e, t) {
                return e.map(function(e) {
                    return b.default.streetID(e, t)
                })
            },
            fwdMaxSpeed: function(e) {
                return a.default.speedString(e)
            },
            revMaxSpeed: function(e) {
                return a.default.speedString(e)
            },
            fwdMaxSpeedUnverified: function(e) {
                return !e
            },
            revMaxSpeedUnverified: function(e) {
                return !e
            },
            restrictions: _(u.a, function(e) {
                var t = new h.a({
                    timeFrame: e.getTimeFrame()
                });
                return "".concat(t.formatWeekdays(), " ").concat(t.formatHours())
            }),
            pickupRestrictions: _(d.a, function(e) {
                var t = "";
                t = e.isForward() ? I18n.t("segment.direction.1") : I18n.t("segment.direction.2");
                var n = "";
                return n = e.isAllowed() ? I18n.t("restrictions.editing.pickup.allowed") : e.isNotAllowed() ? I18n.t("restrictions.editing.pickup.not_allowed") : I18n.t("restrictions.editing.pickup.unknown"),
                    "".concat(t, ": ").concat(n)
            })
        },
        venue: {
            services: function(e) {
                return e.map(function(e) {
                    return I18n.t("venues.services.".concat(e))
                })
            },
            categories: function(e) {
                return e.map(function(e) {
                    return I18n.t("venues.categories.".concat(e))
                })
            },
            openingHours: function(e) {
                return e.map(function(e) {
                    return new m.OpeningHour(e)
                }).map(function(e) {
                    return a.default.formatOpeningHour(e.days, e.isAllDay(), e.fromHour, e.toHour)
                })
            },
            images: function(e) {
                return e.map(function(e) {
                    return e.id
                })
            },
            externalProviderIDs: function(e) {
                return e.map(function(e) {
                    return e instanceof r.a.Model ? e.get("uuid") : e
                })
            }
        },
        venueCategoryAttributes: {
            estimatedNumberOfSpots: function(e) {
                return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots.".concat(e))
            },
            paymentType: function(e) {
                return e.map(function(e) {
                    return I18n.t("edit.landmark.parking.types.paymentType.".concat(e))
                })
            },
            costType: function(e) {
                return I18n.t("edit.landmark.parking.types.costType.".concat(e))
            },
            parkingType: function(e) {
                return I18n.t("edit.landmark.parking.types.parkingType.".concat(e))
            },
            lotType: function(e) {
                return I18n.t("edit.landmark.parking.types.lotType.".concat(e))
            }
        },
        camera: {
            type: function(e) {
                return I18n.t("edit.camera.fields.type.".concat(e))
            },
            azymuth: function(e) {
                return (e % 360).toFixed(2)
            }
        }
    };

    function E(e) {
        return !0 === e ? I18n.t("element_history.boolean_attributes.enabled") : I18n.t("element_history.boolean_attributes.disabled")
    }

    function w(e, t) {
        var n = "objects.".concat(e, ".fields.").concat(t),
            i = "objects.common.fields.".concat(t);
        return e === v && (n = "objects.venue.category_fields.".concat(t)),
            e === g.a.SEGMENT && f.FLAG_ATTRIBUTES[t] && (n = "objects.".concat(e, ".flag_fields.").concat(t)),
            I18n.lookup(n) ? I18n.t(n) : I18n.lookup(i) ? I18n.t(i) : t
    }

    function S(e, t, n, i) {
        return a.default.isBlank(i) ? null : function(e, t, n, i) {
            var r = b.default[n],
                s = b[t],
                a = i;
            return s && s[n] ? a = s[n](i, e) : null != r && (a = r(i, e)),
                o.a.isBoolean(a) ? E(a) : o.a.isString(a) ? a : Array.isArray(a) ? a.join(", ") : JSON.stringify(a)
        }(e, t, n, i)
    }

    function k(e, t) {
        return a.default.userProfile(e, t)
    }

    function T(e) {
        var t = "objects.".concat(e, ".name");
        return I18n.lookup(t) ? I18n.t(t) : e
    }

    function I(e, t, n) {
        var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3] ? ".multiple" : "",
            r = t.newValue,
            s = t.displayName,
            o = t.added,
            a = t.removed,
            l = "save.changes_log.actions.UpdateObject".concat(i, ".changed"),
            u = r,
            c = o && !a,
            d = !o && a;
        return null === u ? l = "save.changes_log.actions.UpdateObject".concat(i, ".deleted") : c ? (l = "save.changes_log.actions.UpdateObject".concat(i, ".added"),
                u = o) : d && (l = "save.changes_log.actions.UpdateObject".concat(i, ".removed"),
                u = a),
            I18n.t(l, {
                featuresCount: n,
                value: u,
                propertyName: s,
                objectsString: e
            })
    }

    function A(e, t, n) {
        var i = n > 1 ? "multi" : "name",
            r = I18n.t("objects.".concat(t.object.type, ".").concat(i), {
                count: n
            });
        if (1 === e.length)
            return I(r, e[0], n);
        var s = e.map(function(e) {
            return I(r, e, n, !0)
        }).join(", ");
        return I18n.t("save.changes_log.actions.UpdateObject.multiple.title", {
            featuresCount: n,
            objectsString: r,
            changesList: s
        })
    }

    function M(e, t) {
        var n = e.getAddress(),
            i = e.attributes.name,
            r = n ? n.getStreetName({
                emptyString: null
            }) : null;
        return i ? I18n.t("save.changes_log.actions.".concat(t, ".has_name"), {
            name: i
        }) : r ? I18n.t("save.changes_log.actions.".concat(t, ".has_street"), {
            streetName: r
        }) : I18n.t("save.changes_log.actions.".concat(t, ".default"))
    }

    function O(e, t, n, i) {
        var r = e.segments.getObjectById(t).getAddress().getStreetName({
            emptyString: ""
        });
        return I18n.t("save.changes_log.actions.".concat(i), {
            houseNumber: n,
            streetName: r
        })
    }
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "UNIT", function() {
            return o
        });
    var i, r = {},
        s = {},
        o = {
            KILOMETER: "km",
            MILE: "mi",
            METER: "m",
            FEET: "ft"
        },
        a = {};
    a[o.KILOMETER] = o.MILE,
        a[o.METER] = o.FEET;
    for (var l = {}, u = 0, c = Object.keys(a); u < c.length; u++) {
        var d = c[u],
            h = a[d];
        l[h] = d,
            r[d] = !0,
            s[h] = !0
    }
    var p = OpenLayers.INCHES_PER_UNIT;
    i = {
            convert: function(e, t, n) {
                return e * p[t] / p[n]
            },
            localizeUnit: function(e) {
                return r[e] && W.model.isImperial ? e = a[e] : s[e] && !W.model.isImperial && (e = l[e]),
                    e
            },
            getLocalizedValue: function(e, t) {
                if (null == e)
                    return e;
                var n = this.localizeUnit(t);
                return this.convert(e, t, n)
            },
            getLocalizedDisplayValue: function(e, t, n) {
                if (null == e)
                    return e;
                var i = this.convert(e, t, n);
                return this.getLocalizedValue(i, n)
            },
            getOriginalValue: function(e, t) {
                if (null == e)
                    return e;
                var n = this.localizeUnit(t);
                return this.convert(e, n, t)
            }
        },
        t.default = i
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = r(n(33)),
        a = function() {
            function e(e) {
                this.dontSerialize = !1,
                    this._timestamp = (new Date).getTime(),
                    this._description = "",
                    this._actionId = s.default.uniqueId(),
                    Object.assign(this, e)
            }
            return e.prototype.getID = function() {
                    return this._actionId
                },
                e.prototype.destroy = function() {
                    delete this.model
                },
                e.prototype.isLeaf = function() {
                    return !0
                },
                e.prototype.accept = function(e) {
                    e.visit(this)
                },
                e.prototype.setModel = function(e) {
                    this.model = e
                },
                e.prototype.undoSupported = function() {
                    return o.isDefined(this.undoAction)
                },
                e.prototype.flat = function() {
                    return [this]
                },
                e.prototype.getBounds = function() {
                    return null
                },
                e.prototype.getAffectedUniqueIds = function() {
                    return []
                },
                e.prototype.getFocusFeatures = function() {
                    return []
                },
                e.prototype.getTimestamp = function() {
                    return this._timestamp
                },
                e.prototype.generateDescription = function() {},
                e.prototype.getDescription = function() {
                    return this._description
                },
                e.TYPE = {
                    ADD: "ADD",
                    DELETE: "DELETE",
                    UPDATE: "UPDATE",
                    REPLACE: "REPLACE",
                    MERGE: "MERGE",
                    SPLIT: "SPLIT"
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.REGION_CODE_USA = "usa",
        t.REGION_CODE_ROW = "row",
        t.REGION_CODE_IL = "il",
        t.REGION_CODES = [t.REGION_CODE_ROW, t.REGION_CODE_IL, t.REGION_CODE_USA],
        t.DEFAULT_REGION_CODE = t.REGION_CODE_ROW,
        t.ROOT_PATH_LOCALE_CODE = "en",
        t.DEFAULT_LOCALE_CODE = "en",
        t.DEFAULT_LOCALE_CODE_USA = "en-US",
        t.URL_PARAM_REGION_CODE = "env",
        t.ENABLE_SAVE_IN_GROUPS = !1,
        t.MAX_PARALLEL_SAVES = 1,
        t.RESTRICTED_EDITING_AREA_MIN_COVERAGE = .9,
        t.Z_INDEX_BASE = {
            BaseLayer: 100,
            Overlay: 325,
            Feature: 725,
            Popup: 750,
            Control: 1e3,
            MarkerOverlay: 850,
            TopLayer: 9999
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = r(n(33)),
        a = n(162),
        l = function() {
            function e(e, t, n) {
                void 0 === t && (t = {
                        parse: !1
                    }),
                    void 0 === n && (n = {}),
                    this.outOfScope = !1,
                    this.permissionFlags = {},
                    this.permissionFlags = n,
                    this.id = null,
                    this.state = null,
                    this.persistent = !1,
                    t && t.parse && e && a.parseJsonObject(e, this.nested),
                    Object.assign(this, e)
            }
            return e.prototype.getID = function() {
                    return this.id || this.ID
                },
                e.prototype.getOldID = function() {
                    return this._prevID
                },
                e.prototype.getUniqueID = function() {
                    return this.type + ":" + this.getID()
                },
                e.prototype.setID = function(e) {
                    this.id = e
                },
                e.prototype.changeID = function(e) {
                    this._prevID = this.getID(),
                        this.setID(e)
                },
                e.prototype.isNew = function() {
                    var e = this.getID();
                    return null === e || e < 0 || void 0 === e
                },
                e.prototype.isDeleted = function() {
                    return Boolean(this.state && this.state === OpenLayers.State.DELETE)
                },
                e.prototype.isUpdated = function() {
                    return this.state === OpenLayers.State.UPDATE
                },
                e.prototype.isUnchanged = function() {
                    return !this.state
                },
                e.prototype.clone = function() {
                    return new e(this)
                },
                e.prototype.setSelected = function(e) {
                    this.selected = e
                },
                e.prototype.isSelected = function() {
                    return Boolean(this.selected)
                },
                e.prototype.setSnapped = function(e) {
                    this.snapped = e
                },
                e.prototype.isSnapped = function() {
                    return Boolean(this.snapped)
                },
                e.prototype.setPersistent = function(e) {
                    this.persistent = e
                },
                e.prototype.isPersistent = function() {
                    return this.persistent
                },
                e.prototype.getPermissions = function() {
                    return o.isDefined(this.permissions) ? this.permissions : 0
                },
                e.prototype.isAllowed = function(e) {
                    return Boolean(e) && 0 != (this.getPermissions() & e)
                },
                e.prototype.wasCreatedBy = function(e) {
                    return this.createdBy === e.getID()
                },
                e.prototype.getCreatedBy = function() {
                    return this.createdBy
                },
                e.prototype.getCreatedOn = function() {
                    return this.createdOn
                },
                e.prototype.getUpdatedBy = function() {
                    return this.updatedBy
                },
                e.prototype.getUpdatedOn = function() {
                    return this.updatedOn
                },
                e.prototype.isInUse = function(e) {
                    void 0 === e && (e = {
                        keepUnsaved: !1,
                        keepPersistent: !1,
                        keepSelected: !1
                    });
                    var t = o.isDefined(this.state) && null !== this.state,
                        n = e.keepUnsaved && t,
                        i = e.keepSelected && (this.isSelected() || this.isSnapped()),
                        r = e.keepPersistent && this.isPersistent();
                    return n || i || r
                },
                e.prototype.arePropertiesEditable = function() {
                    return null != this.permissionFlags.EDIT_PROPERTIES && this.isAllowed(this.permissionFlags.EDIT_PROPERTIES)
                },
                e.prototype.isGeometryEditable = function() {
                    return null != this.permissionFlags.EDIT_GEOMETRY && this.isAllowed(this.permissionFlags.EDIT_GEOMETRY)
                },
                e.prototype.isDeleteable = function() {
                    return null != this.permissionFlags.DELETE && this.isAllowed(this.permissionFlags.DELETE)
                },
                e.prototype.merge = function(e) {
                    void 0 === e && (e = {}),
                        a.parseJsonObject(e, this.nested),
                        s.default.extend(this, e)
                },
                e.prototype.getType = function() {
                    return this.type
                },
                e.ALL_PERMISSIONS = 2147483647,
                e
        }();
    Object.assign(l.prototype, {
            CLASS_NAME: "Waze.Model.Object"
        }),
        t.default = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(0)),
        l = s(n(15)),
        u = s(n(41)),
        c = o(n(127)),
        d = s(n(126)),
        h = s(n(82)),
        p = n(53),
        g = function(e) {
            function t(t, n, i) {
                var r = e.call(this, i) || this;
                return r._turnGraph = t,
                    r._turn = n,
                    r._previousTurn = t.getTurn(n.getFromVertex(), n.getToVertex()),
                    r._nodeID = null,
                    r._node = null,
                    r._junction = null,
                    r._junctionID = null,
                    r._fromSegment = null,
                    r._toSegment = null,
                    r
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    this._turnGraph.putTurn(this._turn),
                        this._turn.getTurnData().hasSegmentPath() || !this._previousTurn.getTurnData().isUnknown() || this._turn.getTurnData().isAllowed() || (this.dontSerialize = !0);
                    var e = this._turn.getFromVertex(),
                        t = this._turn.getToVertex();
                    if (this._fromSegment = this.model.segments.getObjectById(e.getSegmentID()),
                        this._toSegment = this.model.segments.getObjectById(t.getSegmentID()),
                        this._turn.getTurnData().hasSegmentPath()) {
                        var n = this._turn.getTurnData().getSegmentPath()[0],
                            i = this.model.segments.getObjectById(n);
                        if (!i)
                            throw new Error("missing segment");
                        if (this._junction = new p.SegmentsBigJunctionUseCase(this.model, i).getBigJunction(),
                            !this._junction)
                            throw new Error("missing junction");
                        this._junctionID = this._junction.getID()
                    } else
                        this._nodeID = this.model.getRoadGraph().getVertexNodeID(this._turn.getFromVertex()),
                        this._node = this.model.nodes.getObjectById(this._nodeID)
                },
                t.prototype.undoAction = function() {
                    this._turnGraph.putTurn(this._previousTurn)
                },
                t.prototype.redoAction = function() {
                    this.doAction()
                },
                t.prototype.serialize = function() {
                    var e = this._turn.getTurnData(),
                        t = {
                            id: this._serializeIdAttirbute(this._turn.getFromVertex(), this._turn.getToVertex())
                        },
                        n = this._previousTurn.getTurnData();
                    return Object.assign(t, this._serializeTurnDataAttributes(e, n)),
                        e.hasSegmentPath() ? Object.assign(t, this._serializeJBTurnAttributes(e)) : Object.assign(t, this._serializeNodeTurnAttributes()), {
                            _objectType: this._getObjectType(e),
                            action: this._getAction(e, n),
                            attributes: t
                        }
                },
                t.prototype._serializeIdAttirbute = function(e, t) {
                    return {
                        fromSegID: e.getSegmentID(),
                        toSegID: t.getSegmentID(),
                        fromSegFwd: e.isForward(),
                        toSegFwd: t.isForward()
                    }
                },
                t.prototype._serializeTurnDataAttributes = function(e, t) {
                    var n = {};
                    return Object.assign(n, this._serializeNavigable(e, t)),
                        Object.assign(n, this._serializeInstructionOpCode(e, t)),
                        Object.assign(n, this._serializeRestrictionAttributes(e, t)),
                        Object.assign(n, this._serializeLaneAttributes(e, t)),
                        n
                },
                t.prototype._serializeNavigable = function(e, t) {
                    return e.isAllowed() !== t.isAllowed() ? {
                        navigable: e.isAllowed()
                    } : {}
                },
                t.prototype._serializeInstructionOpCode = function(e, t) {
                    return e.getInstructionOpcode() !== t.getInstructionOpcode() ? {
                        instructionOpCode: e.getInstructionOpcode()
                    } : {}
                },
                t.prototype._serializeRestrictionAttributes = function(e, t) {
                    return c.restrictionArraysEqual(e.getRestrictions(), t.getRestrictions()) ? {} : {
                        restrictions: e.getRestrictions().map(function(e) {
                            return e.toJSON()
                        })
                    }
                },
                t.prototype._serializeLaneAttributes = function(e, t) {
                    if (!this._fromSegment)
                        throw new Error("missing segment: %{this._fromSegment.getID()}");
                    if (new h.default(this.model, [this._fromSegment]).envSupportsLanes(this._fromSegment)) {
                        var n = t.getLaneData(),
                            i = e.getLaneData();
                        if (d.default.hasChanged(n, i))
                            return {
                                lanes: null == i ? null : i.toJSON()
                            }
                    }
                    return {}
                },
                t.prototype._getObjectType = function(e) {
                    return e.hasSegmentPath() ? l.default.JUNCTION_NC : l.default.NC
                },
                t.prototype._getAction = function(e, t) {
                    return e.hasSegmentPath() ? u.default.TYPE.UPDATE : (t.isUnknown() || t.isDisallowed() && !t.hasAdditionalData()) && e.isAllowed() ? u.default.TYPE.ADD : u.default.TYPE.UPDATE
                },
                t.prototype._serializeJBTurnAttributes = function(e) {
                    return {
                        junctionID: this._junctionID,
                        segmentPath: e.getSegmentPath()
                    }
                },
                t.prototype._serializeNodeTurnAttributes = function() {
                    return {
                        nodeID: this._nodeID
                    }
                },
                t.prototype.getAffectedUniqueIds = function() {
                    var e = a.default.compact([this._fromSegment, this._toSegment, this._node, this._junction]);
                    return a.default.compact(e.map(function(e) {
                        return e && e.getUniqueID()
                    }))
                },
                t.prototype.getTurn = function() {
                    return this._turn
                },
                t.prototype.getFocusFeatures = function() {
                    return a.default.compact([this._node, this._junction, this._fromSegment, this._toSegment])
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.SetTurn.update")
                },
                t
        }(u.default);
    Object.assign(g.prototype, {
            CLASS_NAME: "Waze.Action.SetTurn"
        }),
        t.default = g
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(0)),
        l = n(96),
        u = o(n(127)),
        c = n(386);
    t.MixedValue = Symbol();
    var d = function() {
        function e(e, t) {
            this.segments = e,
                this.segmentsReader = t
        }
        return e.prototype.reduceRoadTypes = function() {
                return this.unwrapUniqueValues(this.getRoadTypes())
            },
            e.prototype.getRoadTypes = function() {
                return this.getUniqueValuesForAttribute("roadType")
            },
            e.prototype.reduceRoutingRoadTypes = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("routingRoadType"))
            },
            e.prototype.reduceLevels = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("level"))
            },
            e.prototype.reduceUpdatedBy = function() {
                return this.unwrapUniqueValues(this.getUpdaters())
            },
            e.prototype.reduceCreatedBy = function() {
                return this.unwrapUniqueValues(this.getCreators())
            },
            e.prototype.reduceUpdatedOn = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("updatedOn"))
            },
            e.prototype.reduceCreatedOn = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("createdOn"))
            },
            e.prototype.getUpdaters = function() {
                return this.getUniqueValuesForAttribute("updatedBy")
            },
            e.prototype.getCreators = function() {
                return this.getUniqueValuesForAttribute("createdBy")
            },
            e.prototype.reduceLength = function() {
                return this.getValuesForAttribute("length").reduce(function(e, t) {
                    return e + t
                }, 0)
            },
            e.prototype.reduceRank = function() {
                return this.getValuesForAttribute("rank").reduce(function(e, t) {
                    return Math.max(e, t)
                }, 0)
            },
            e.prototype.reduceHasClosures = function() {
                return this.getValuesForAttribute("hasClosures").reduce(function(e, t) {
                    return e || t
                }, !1)
            },
            e.prototype.reduceHasHouseNumbers = function() {
                return this.getValuesForAttribute("hasHNs").reduce(function(e, t) {
                    return e || t
                }, !1)
            },
            e.prototype.reduceAllowNoDirection = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("allowNoDirection"))
            },
            e.prototype.reduceLockRank = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("lockRank"))
            },
            e.prototype.reducePermissions = function() {
                return this.getValuesForAttribute("permissions").reduce(function(e, t) {
                    return e & t
                }, -1)
            },
            e.prototype.reduceHasFwdToll = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("fwdToll"))
            },
            e.prototype.reduceHasRevToll = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("revToll"))
            },
            e.prototype.reduceIsTollRoad = function() {
                var e = this.reduceHasFwdToll(),
                    n = this.reduceHasRevToll();
                return e !== t.MixedValue && n !== t.MixedValue ? e || n : t.MixedValue
            },
            e.prototype.reduceMaxSpeed = function(e) {
                return e === l.DIRECTION.FORWARD ? this.unwrapUniqueValues(this.getUniqueValuesForAttribute("fwdMaxSpeed")) : e === l.DIRECTION.REVERSE ? this.unwrapUniqueValues(this.getUniqueValuesForAttribute("revMaxSpeed")) : void 0
            },
            e.prototype.reduceMaxSpeedUnverified = function(e) {
                return e === l.DIRECTION.FORWARD ? this.reduceMaxSpeedUnverifiedForAttribute("fwdMaxSpeedUnverified") : e === l.DIRECTION.REVERSE ? this.reduceMaxSpeedUnverifiedForAttribute("revMaxSpeedUnverified") : void 0
            },
            e.prototype.reduceFwdDirection = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("fwdDirection"))
            },
            e.prototype.reduceRevDirection = function() {
                return this.unwrapUniqueValues(this.getUniqueValuesForAttribute("revDirection"))
            },
            e.prototype.reduceDirection = function() {
                var e = this.reduceFwdDirection(),
                    n = this.reduceRevDirection();
                return e === t.MixedValue || n === t.MixedValue ? t.MixedValue : this.combineTwoDirections(e, n)
            },
            e.prototype.isFlagHasMixedValues = function(e) {
                var t = this.segments.map(function(t) {
                    return t.getFlagAttribute(e)
                });
                return a.default.uniq(t).length > 1
            },
            e.prototype.reduceTunnel = function() {
                return Boolean(this.reduceFlagsAttribute("flags") & c.FLAGS.TUNNEL)
            },
            e.prototype.reduceUnpaved = function() {
                return Boolean(this.reduceFlagsAttribute("flags") & c.FLAGS.UNPAVED)
            },
            e.prototype.reduceHeadlights = function() {
                return Boolean(this.reduceFlagsAttribute("flags") & c.FLAGS.HEADLIGHTS)
            },
            e.prototype.reduceBeacons = function() {
                return Boolean(this.reduceFlagsAttribute("flags") & c.FLAGS.BEACONS)
            },
            e.prototype.reduceNearbyHOV = function() {
                return Boolean(this.reduceFlagsAttribute("flags") & c.FLAGS.NEARBY_HOV)
            },
            e.prototype.reduceFwdSpeedCamera = function() {
                return Boolean(this.reduceFlagsAttribute("fwdFlags") & c.FWD.SPEED_CAMERA)
            },
            e.prototype.reduceRevSpeedCamera = function() {
                return Boolean(this.reduceFlagsAttribute("revFlags") & c.REV.SPEED_CAMERA)
            },
            e.prototype.reduceFwdLanesEnabled = function() {
                return Boolean(this.reduceFlagsAttribute("fwdFlags") & c.FWD.LANES_ENABLED)
            },
            e.prototype.reduceRevLanesEnabled = function() {
                return Boolean(this.reduceFlagsAttribute("revFlags") & c.REV.LANES_ENABLED)
            },
            e.prototype.reduceRestrictions = function() {
                return u.dedupRestrictions(this.getValuesForAttribute("restrictions").reduce(function(e, t) {
                    return r(e, t)
                }, []))
            },
            e.prototype.reducePickupRestrictions = function() {
                return this.getValuesForAttribute("pickupRestrictions").reduce(function(e, t) {
                    return r(e, t)
                }, [])
            },
            e.prototype.reduceFlagsAttribute = function(e) {
                return this.getValuesForAttribute(e).reduce(function(e, t) {
                    return e & t
                }, -1)
            },
            e.prototype.reduceMaxSpeedUnverifiedForAttribute = function(e) {
                return this.getValuesForAttribute(e).reduce(function(e, t) {
                    return e || t
                }, !1)
            },
            e.prototype.combineTwoDirections = function(e, t) {
                return e ? t ? l.DIRECTION.BOTH : l.DIRECTION.FORWARD : t ? l.DIRECTION.REVERSE : l.DIRECTION.NONE
            },
            e.prototype.getValuesForAttribute = function(e) {
                var t = this;
                return this.segments.map(function(n) {
                    return t.segmentsReader.getAttribute(n, e)
                })
            },
            e.prototype.getUniqueValuesForAttribute = function(e) {
                return r(new Set(this.getValuesForAttribute(e)))
            },
            e.prototype.unwrapUniqueValues = function(e) {
                return 1 === e.length ? e[0] : t.MixedValue
            },
            e
    }();
    t.SegmentReducer = d
}, function(e, t, n) {
    "use strict";
    var i = OpenLayers.Class({
        visible: !0,
        enabled: !0,
        initialize: function(e) {
            Object.assign(this, e, this)
        },
        destroy: function() {},
        show: function() {
            this.setVisible(!0)
        },
        hide: function() {
            this.setVisible(!1)
        },
        setVisible: function(e) {
            e !== this.visible && (this.visible = e,
                this.div && (e ? OpenLayers.Element.show(this.div) : OpenLayers.Element.hide(this.div)),
                this.events && this.events.triggerEvent("visibilitychanged"))
        },
        enable: function(e) {
            this.setEnabled(!0, e)
        },
        disable: function(e) {
            this.setEnabled(!1, e)
        },
        isEnabled: function() {
            return this.enabled
        },
        setEnabled: function(e, t) {
            this.enabled !== e && (this.enabled = e,
                this.events && !t && this.events.triggerEvent("enablechanged"))
        },
        CLASS_NAME: "Waze.Control"
    });
    t.a = i
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "buildConfig", function() {
            return i
        }),
        n.d(t, "rasterConfig", function() {
            return r
        });
    var i = {
            api_base: "/Descartes/app",
            show_version_number: !0,
            asset_bucket_host: "editor-assets.waze.com",
            asset_bucket_name: "wme-frontend-assets",
            gcp_project: "waze-prod",
            api_keys: {
                google_maps: "AIzaSyBWB3jiUm1dkFwvJWy4w4ZmO7KPyF4oUa0"
            },
            stackdriver: {
                key: "AIzaSyBWB3jiUm1dkFwvJWy4w4ZmO7KPyF4oUa0",
                projectId: "waze-prod",
                service: "map-editor-beta"
            },
            log: {
                enable: !0
            },
            marx_path: "/editor/chat",
            mte: {
                root_url: "/mte",
                eventsUrl: "beta.waze.com/events"
            },
            regions: {
                il: {
                    api_base: "/il-Descartes/app",
                    search: {
                        server: "/il-SearchServer/mozi",
                        resultZoom: 6,
                        options: {
                            origin: "editor"
                        }
                    }
                },
                usa: {
                    api_base: "/Descartes/app",
                    search: {
                        server: "/SearchServer/mozi",
                        resultZoom: 6,
                        options: {
                            origin: "editor"
                        }
                    }
                },
                row: {
                    api_base: "/row-Descartes/app",
                    search: {
                        server: "/row-SearchServer/mozi",
                        resultZoom: 6,
                        options: {
                            origin: "editor"
                        }
                    }
                }
            },
            reporting: {
                enable: !0
            },
            user_profile: {
                enable: !0,
                url: "https://beta.waze.com/user/editor/"
            }
        },
        r = {
            regions: {
                usa: {
                    wms: {
                        servers: ["http://etiles5.waze.com/wms", "http://etiles6.waze.com/wms", "http://etiles7.waze.com/wms", "http://etiles8.waze.com/wms"]
                    },
                    mapnik: {
                        servers: ["https://editor-tiles1.waze.com", "https://editor-tiles2.waze.com", "https://editor-tiles3.waze.com", "https://editor-tiles4.waze.com"]
                    }
                },
                row: {
                    wms: {
                        servers: ["http://etiles1.waze.com/wms", "http://etiles2.waze.com/wms", "http://etiles3.waze.com/wms", "http://etiles4.waze.com/wms"],
                        file_name: "wme_beta"
                    },
                    mapnik: {
                        servers: ["https://world-editor-tiles1.waze.com", "https://world-editor-tiles2.waze.com", "https://world-editor-tiles3.waze.com", "https://world-editor-tiles4.waze.com"]
                    }
                },
                il: {
                    wms: {
                        servers: ["http://etiles1.maps.waze.co.il/wms", "http://etiles2.maps.waze.co.il/wms", "http://etiles3.maps.waze.co.il/wms", "http://etiles4.maps.waze.co.il/wms"]
                    },
                    mapnik: {
                        servers: ["https://il-editor-tiles1.waze.com", "https://il-editor-tiles2.waze.com", "https://il-editor-tiles3.waze.com", "https://il-editor-tiles4.waze.com"]
                    }
                }
            },
            options: {
                alpha: !0,
                buffer: 1,
                tileWidth: 512,
                tileHeight: 512,
                gutter: 15,
                transitionEffect: "resize",
                displayInLayerSwitcher: !0,
                draggable: !1
            },
            wms: {
                servers: ["/wms"],
                file_name: "wme",
                params: {
                    projection: "EPSG:900913",
                    format: "image/png",
                    transparent: !0
                }
            },
            mapnik: {
                servers: [],
                file_name: "tiles/${z}/${x}/${y}.png"
            },
            roads: {
                uniqueName: "roads",
                visible: !0,
                type: "mapnik",
                options: {
                    isBaseLayer: !1,
                    zoomOffset: 12,
                    draggable: !0,
                    gutter: 0
                }
            },
            gps_points: {
                uniqueName: "gps_points",
                visible: !1,
                type: "mapnik",
                options: {
                    isBaseLayer: !1,
                    zoomOffset: 12,
                    opacity: 1,
                    draggable: !0,
                    gutter: 0
                },
                params: {
                    clientLayer: "gps_points"
                }
            }
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = {
        STREET: 1,
        PRIMARY_STREET: 2,
        FREEWAY: 3,
        RAMP: 4,
        WALKING_TRAIL: 5,
        MAJOR_HIGHWAY: 6,
        MINOR_HIGHWAY: 7,
        OFF_ROAD: 8,
        WALKWAY: 9,
        PEDESTRIAN_BOARDWALK: 10,
        FERRY: 15,
        STAIRWAY: 16,
        PRIVATE_ROAD: 17,
        RAILROAD: 18,
        RUNWAY_TAXIWAY: 19,
        PARKING_LOT_ROAD: 20,
        ALLEY: 22
    };
    t.ROAD_TYPE = s;
    var o = [s.FREEWAY, s.RAMP, s.MAJOR_HIGHWAY, s.MINOR_HIGHWAY];
    t.HIGHWAY_ROAD_TYPES = o;
    var a = [s.STREET, s.PRIMARY_STREET, s.MINOR_HIGHWAY, s.MAJOR_HIGHWAY, s.FREEWAY];
    t.ROUTING_ROAD_TYPES = a;
    var l = [s.STREET, s.PRIMARY_STREET, s.WALKING_TRAIL, s.MAJOR_HIGHWAY, s.MINOR_HIGHWAY, s.OFF_ROAD, s.PEDESTRIAN_BOARDWALK, s.STAIRWAY, s.PRIVATE_ROAD, s.PARKING_LOT_ROAD, s.ALLEY],
        u = [s.WALKING_TRAIL, s.PEDESTRIAN_BOARDWALK, s.STAIRWAY];
    t.WALKING_ROAD_TYPES = u;
    var c = r(u, [s.RAILROAD, s.RUNWAY_TAXIWAY]),
        d = [s.WALKWAY];
    t.NOT_SUPPORTED_ROAD_TYPES = d,
        t.isWalkingRoadType = function(e) {
            return u.includes(e)
        },
        t.isHouseNumberRoadType = function(e) {
            return l.includes(e)
        },
        t.isRoutingRoadType = function(e) {
            return a.includes(e)
        },
        t.isHighwayRoadType = function(e) {
            return o.includes(e)
        },
        t.isNonDrivableRoadType = function(e) {
            return c.includes(e)
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(42)),
        s = i(n(167)),
        o = !1;

    function a(e) {
        o || (o = !0,
            window.location.href = e)
    }

    function l(e) {
        return e === r.ROOT_PATH_LOCALE_CODE ? "/editor" + window.location.search : "/" + e + "/editor" + window.location.search
    }

    function u(e) {
        a(l(e))
    }

    function c(e) {
        var t = [];
        return null != e.width && t.push("width=" + e.width),
            null != e.height && t.push("height=" + e.height),
            null != e.left && t.push("left=" + e.left),
            null != e.top && t.push("top=" + e.top),
            window.open(e.url, e.name, t.join(","))
    }
    t.redirectPageTo = a,
        t.documentLocaleMatches = function(e) {
            return I18n.locale === e
        },
        t.getURLForLocale = l,
        t.getLocaleCodeFromURL = function() {
            var e = window.location.pathname,
                t = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"],
                n = t.map(function(e) {
                    return "/" + e + "/editor"
                }).indexOf(e);
            return n > -1 ? t[n] : null
        },
        t.redirectToLocalePage = u,
        t.redirectToErrorPage = function() {
            a("/500.html")
        },
        t.reloadPage = function() {
            window.location.reload()
        },
        t.setLocaleAndRedirect = function(e) {
            s.setLocaleCode(e),
                u(e)
        },
        t.setRegionCodeAndReload = function(e) {
            s.setRegionCode(e),
                a(window.location.pathname)
        },
        t.isMac = function() {
            return $.browser.mac
        },
        t.popup = function(e) {
            var t = c(e);
            return null != t && (t.opener = null),
                t
        },
        t.popupWithCloseMessage = function(e) {
            return new Promise(function(t, n) {
                var i = c(e);
                if (null == i)
                    n(new Error("Opening popup failed"));
                else {
                    var r = function(e) {
                        var n = e.source === i && e.origin === window.location.origin,
                            s = e.data && !0 === e.data.closePopup;
                        n && s && (i.close(),
                            window.removeEventListener("message", r),
                            t())
                    };
                    window.addEventListener("message", r, !1)
                }
            })
        },
        t.registerEventToBody = function(e, t) {
            return $("body").on(e, t)
        },
        t.unregisterEventToBody = function(e, t) {
            return $("body").off(e, t)
        }
}, function(e, t, n) {
    "use strict";
    var i = n(7),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(156),
        l = a.a.extend({
            TYPE: {
                MAP_PROBLEM: "MAP_PROBLEM",
                VENUE_UPDATE_REQUEST: "VENUE_UPDATE_REQUEST",
                UPDATE_REQUEST: "UPDATE_REQUEST"
            },
            MOTIVATIONS: {
                1: "REPORTED_BY_USER",
                2: "USER_FOLLOWS_ISSUE",
                4: "USER_FOLLOWS_ISSUE_LAST_COMMENT",
                8: "CLOSE_TO_FAVORITES",
                16: "NEAR_DRIVES",
                32: "ISSUE_AGE",
                64: "ISSUE_REOPENED",
                128: "CAN_BE_SOLVED_BY_RANK"
            },
            defaults: {
                state: ""
            },
            initialize: function() {
                a.a.prototype.initialize.apply(this),
                    this.set("state", this.getFeedIssueState())
            },
            _isModified: function() {
                return !1
            },
            _isResolved: function() {
                return !1
            },
            getSeverity: function() {
                return null
            },
            onModelChanged: function() {
                this.set("modified", this._isModified()),
                    this.set("state", this.getFeedIssueState())
            },
            onModelSynced: function() {
                if (this.set("modified", !1),
                    this.set("state", this.getFeedIssueState()),
                    this._isResolved())
                    return this.trigger("resolved")
            },
            onModelRemoved: function() {
                return this.destroy()
            },
            sync: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                if ("delete" === e) {
                    var i = "".concat(W.Config.paths.issues, "/").concat(t.get("type"), "/").concat(t.get("id"));
                    n.url = encodeURI(i)
                }
                return r.a.sync(e, t, n)
            },
            getFeedIssueState: function() {
                return ""
            }
        });
    l.prototype.defaults = o.a.extend({
            modified: !1
        }, a.a.prototype.defaults),
        t.a = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(0)),
        l = s(n(43)),
        u = o(n(12)),
        c = n(162),
        d = function(e) {
            function t(t, n, i, r) {
                void 0 === n && (n = {
                        parse: !1
                    }),
                    void 0 === i && (i = {});
                var s = e.call(this, {}, void 0, i) || this;
                return s.fid = null,
                    s.initializeAttributes(t, n, r),
                    s
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return null
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.initializeAttributes = function(e, t, n) {
                    void 0 === t && (t = {
                            parse: !1
                        }),
                        this.attributes = e || {},
                        t && t.parse && e && c.parseJsonObject(e, this.nested),
                        e && (this.attributes = Object.assign(this.attributes, e)),
                        a.default.defaults(this.attributes, n)
                },
                t.prototype.merge = function(e) {
                    c.parseJsonObject(e, this.nested),
                        Object.assign(this.attributes, e)
                },
                t.prototype.getID = function() {
                    return this.attributes.id
                },
                t.prototype.setID = function(e) {
                    this.attributes.id = e
                },
                t.prototype.changeID = function(t) {
                    e.prototype.changeID.call(this, t),
                        null != this.fid && (this.fid = t)
                },
                t.prototype.clone = function() {
                    var e = new t({}),
                        n = u.cloneGeometry(this.attributes.geometry);
                    return e.attributes = a.default.extend({}, this.attributes, {
                            geometry: n
                        }),
                        e.state = this.state,
                        e
                },
                t.prototype.getPermissions = function() {
                    return null != this.attributes.permissions ? this.attributes.permissions : 0
                },
                t.prototype.getFeatureAttributes = function() {
                    return this.attributes
                },
                t.prototype.wasCreatedBy = function(e) {
                    return this.attributes.createdBy === e.getID()
                },
                t.prototype.getCreatedBy = function() {
                    return this.attributes.createdBy
                },
                t.prototype.getCreatedOn = function() {
                    return this.attributes.createdOn
                },
                t.prototype.getUpdatedBy = function() {
                    return this.attributes.updatedBy
                },
                t.prototype.getUpdatedOn = function() {
                    return this.attributes.updatedOn
                },
                Object.defineProperty(t.prototype, "geometry", {
                    get: function() {
                        return this.attributes.geometry
                    },
                    set: function(e) {
                        this.attributes.geometry = e
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t
        }(l.default);
    Object.assign(d.prototype, {
            CLASS_NAME: "Waze.Feature.Vector"
        }),
        t.default = d
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(38)),
        a = n(62),
        l = s(n(701));

    function u(e, t, n) {
        var i = t.getID(),
            r = n === a.SEGMENT_LANE_DIRECTION.FWD ? o.default.forwardOf(i) : o.default.reverseOf(i);
        return e.getTurnGraph().getLegalTrivialTurnsFrom(r).filter(function(e) {
            return e.getTurnData().isAllowed()
        }).filter(function(t) {
            return function(e, t) {
                var n = t.getToVertex().getSegmentID(),
                    i = e.segments.getObjectById(n);
                return null != i && !i.isInRoundabout()
            }(e, t)
        })
    }
    t.getOutgoingEnabledTurns = u,
        t.hasAngleOverrideTurn = function(e, t, n) {
            return u(e, t, n).some(function(e) {
                var t = e.getTurnData(),
                    n = t.getLaneData();
                return Boolean(t.hasLanes() && n && n.hasOverrideAngle())
            })
        },
        t.getLaneAngleCalculator = function(e, t, n) {
            var i = u(e, t, n),
                s = n === a.SEGMENT_LANE_DIRECTION.FWD ? t.getToNode() : t.getFromNode();
            if (null === s)
                throw new Error("getLaneAngleCalculator is called on segment with missing node");
            var o = s.getAngleToSegment(t),
                c = new l.default(t.getID(), o, t.attributes.roadType, r([t.attributes.primaryStreetID], t.attributes.streetIDs), e.isLeftHand);
            return i.forEach(function(t) {
                    var n = t.getToVertex(),
                        i = e.segments.getObjectById(n.getSegmentID());
                    if (null === i)
                        throw new Error("segment: " + n.getSegmentID() + " does not exist");
                    var o = s.getAngleToSegment(i);
                    c.addOutgoingVertex({
                        toVertex: n,
                        azimuth: o,
                        roadType: i.attributes.roadType,
                        streetIDs: r([i.attributes.primaryStreetID], i.attributes.streetIDs)
                    })
                }),
                c
        },
        t.toStandardLaneAngle = function(e) {
            var t = e % 360;
            return t < -180 ? t += 360 : t > 180 && (t -= 360),
                t
        },
        t.isUTurn = function(e) {
            return 180 === Math.abs(e)
        },
        t.vertexToLanesDirection = function(e) {
            return e.isForward() ? a.SEGMENT_LANE_DIRECTION.FWD : a.SEGMENT_LANE_DIRECTION.REV
        },
        t.lanesDirectionToVertex = function(e, t) {
            return t === a.SEGMENT_LANE_DIRECTION.FWD ? o.default.forwardOf(e) : o.default.reverseOf(e)
        },
        t.getIncomingLaneDirection = function(e, t) {
            var n;
            return e.attributes.fromNodeID === t.getID() ? n = a.SEGMENT_LANE_DIRECTION.REV : e.attributes.toNodeID === t.getID() && (n = a.SEGMENT_LANE_DIRECTION.FWD),
                n
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(38)),
        a = s(n(26)),
        l = function() {
            function e(e, t) {
                this.dataModel = e,
                    t instanceof a.default ? this.segments = [t] : this.segments = t
            }
            return e.prototype.isInBigJunction = function() {
                    var e = this;
                    return this.segments.some(function(t) {
                        return e.isSegmentInBigJunction(t)
                    })
                },
                e.prototype.isBigJunctionShort = function() {
                    if (this.isMultipleSegments())
                        return !1;
                    var e = this.segments[0];
                    return this.isSegmentBigJunctionShort(e)
                },
                e.prototype.getBigJunction = function() {
                    if (this.isMultipleSegments())
                        return null;
                    var e = this.segments[0];
                    return this.isBigJunctionShort() ? this.dataModel.bigJunctions.getObjectById(e.attributes.crossroadID) : null
                },
                e.prototype.hasFromBigJunction = function(e) {
                    if (void 0 === e && (e = null),
                        this.isMultipleSegments())
                        return !1;
                    var t = this.segments[0];
                    return this.segmentHasFromBigJunction(t, e)
                },
                e.prototype.getFromBigJunction = function() {
                    if (this.isMultipleSegments())
                        return null;
                    var e = this.segments[0];
                    return this.hasFromBigJunction() ? this.dataModel.bigJunctions.getObjectById(e.attributes.fromCrossroads[0]) : null
                },
                e.prototype.hasToBigJunction = function(e) {
                    if (void 0 === e && (e = null),
                        this.isMultipleSegments())
                        return !1;
                    var t = this.segments[0];
                    return this.segmentHasToBigJunction(t, e)
                },
                e.prototype.getToBigJunction = function() {
                    if (this.isMultipleSegments())
                        return null;
                    var e = this.segments[0];
                    return this.hasToBigJunction() ? this.dataModel.bigJunctions.getObjectById(e.attributes.toCrossroads[0]) : null
                },
                e.prototype.getRelatedBigJunction = function() {
                    return this.isMultipleSegments() ? null : this.getBigJunction() || this.getFromBigJunction() || this.getToBigJunction()
                },
                e.prototype.getBigJunctionRank = function() {
                    var e = this.getRelatedBigJunction();
                    return e ? e.attributes.rank : 0
                },
                e.prototype.isJunctionEntry = function() {
                    if (this.isMultipleSegments())
                        return !1;
                    var e = this.segments[0];
                    return !this.isSegmentBigJunctionShort(e) && (this.segmentHasFromBigJunction(e) || this.segmentHasToBigJunction(e))
                },
                e.prototype.getJunctionTurns = function() {
                    var e = this.segments[0],
                        t = [],
                        n = this.getFromBigJunction();
                    null != n && t.push.apply(t, r(n.getTurnsFrom(o.default.reverseOf(e.getID()))));
                    var i = this.getToBigJunction();
                    return null != i && t.push.apply(t, r(i.getTurnsFrom(o.default.forwardOf(e.getID())))),
                        t
                },
                e.prototype.isMultipleSegments = function() {
                    return this.segments.length > 1
                },
                e.prototype.isSegmentInBigJunction = function(e) {
                    return this.isSegmentBigJunctionShort(e) || this.segmentHasFromBigJunction(e) || this.segmentHasToBigJunction(e)
                },
                e.prototype.isSegmentBigJunctionShort = function(e) {
                    return null != e.attributes.crossroadID
                },
                e.prototype.segmentHasFromBigJunction = function(e, t) {
                    return void 0 === t && (t = null),
                        null != t ? e.attributes.fromCrossroads.includes(t) : e.attributes.fromCrossroads.length > 0
                },
                e.prototype.segmentHasToBigJunction = function(e, t) {
                    return void 0 === t && (t = null),
                        null != t ? e.attributes.toCrossroads.includes(t) : e.attributes.toCrossroads.length > 0
                },
                e
        }();
    t.SegmentsBigJunctionUseCase = l
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "getHTML", function() {
            return d
        });
    var i = n(4),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(16),
        l = n(476),
        u = {
            t: I18n.t.bind(I18n),
            l: I18n.l.bind(I18n),
            h: a.default,
            safe_t: a.default.safe_t,
            __htmlEscape: a.default.escape,
            __cleanValue: a.default.cleanValue
        },
        c = function(e) {
            return o.a.extend({}, u, e)
        };

    function d(e, t) {
        return e = "./".concat(e, ".hamlc"),
            l(e)(c(t))
    }
    u.renderPartial = d,
        r.a.Renderer.render = function(e, t) {
            return "function" == typeof e ? e(t) : d(e, t)
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = function() {
            function e(e) {
                var t = void 0 === e ? {} : e,
                    n = t.vehicleTypes,
                    i = void 0 === n ? [] : n,
                    r = t.subscriptions,
                    s = void 0 === r ? [] : r,
                    o = t.numPassengers,
                    a = void 0 === o ? 0 : o,
                    l = t.licensePlateNumber,
                    u = void 0 === l ? null : l;
                this._vehicleTypes = i,
                    this._subscriptions = s,
                    this._numPassengers = a,
                    this._licensePlateNumber = null == u || "" === u ? null : u,
                    Object.freeze(this)
            }
            return e.prototype.equals = function(e) {
                    return this._numPassengers === e._numPassengers && this._licensePlateNumber === e._licensePlateNumber && r.default.isEqual(this._vehicleTypes.sort(), e._vehicleTypes.sort()) && r.default.isEqual(this._subscriptions.sort(), e._subscriptions.sort())
                },
                e.prototype.with = function(t) {
                    return void 0 === t && (t = {}),
                        new e(Object.assign(this.toJSON(), t))
                },
                e.prototype.getNumPassengers = function() {
                    return this._numPassengers
                },
                e.prototype.getVehicleTypes = function() {
                    return this._vehicleTypes.slice()
                },
                e.prototype.getSubscriptions = function() {
                    return null == this._subscriptions ? [] : this._subscriptions.slice()
                },
                e.prototype.getLicensePlateNumber = function() {
                    return this._licensePlateNumber
                },
                e.prototype.hasLicensePlateNumber = function() {
                    return null != this._licensePlateNumber
                },
                e.prototype.hasSubscriptions = function() {
                    return null != this._subscriptions && this._subscriptions.length > 0
                },
                e.prototype.isAllVehicles = function() {
                    return !this._vehicleTypes || 0 === this._vehicleTypes.length
                },
                e.prototype.toJSON = function() {
                    return {
                        vehicleTypes: this._vehicleTypes,
                        numPassengers: this._numPassengers,
                        subscriptions: this._subscriptions,
                        licensePlateNumber: this._licensePlateNumber
                    }
                },
                e
        }();
    t.VEHICLE_TYPES = {
            TRUCK: 0,
            PUBLIC_TRANSPORTATION: 256,
            TAXI: 272,
            BUS: 288,
            RV: 512,
            TOWING_VEHICLE: 768,
            MOTORCYCLE: 1024,
            PRIVATE: 1280,
            HAZARDOUS_MATERIALS: 1536,
            CAV: 1792,
            EV: 1808,
            HYBRID: 1824,
            CLEAN_FUEL: 1840
        },
        t.LICENSE_PLATES = {
            ENDS_WITH_0: "0",
            ENDS_WITH_1: "1",
            ENDS_WITH_2: "2",
            ENDS_WITH_3: "3",
            ENDS_WITH_4: "4",
            ENDS_WITH_5: "5",
            ENDS_WITH_6: "6",
            ENDS_WITH_7: "7",
            ENDS_WITH_8: "8",
            ENDS_WITH_9: "9",
            ENDS_WITH_ODD: "13579",
            ENDS_WITH_EVEN: "02468"
        },
        t.default = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        ARCHIVE_SESSIONS: "archiveSessions",
        ARCHIVES: "archives",
        BIG_JUNCTIONS: "bigJunctions",
        CAMERAS: "cameras",
        CITIES: "cities",
        COUNTRIES: "countries",
        JUNCTIONS: "junctions",
        MAJOR_TRAFFIC_EVENTS: "majorTrafficEvents",
        MANAGED_AREAS: "managedAreas",
        MAP_COMMENTS: "mapComments",
        MAP_UPDATE_REQUESTS: "mapUpdateRequests",
        NODES: "nodes",
        PROBLEM_DETAILS: "problemDetails",
        PROBLEMS: "problems",
        RESTRICTED_EDITING_AREAS: "restrictedEditingAreas",
        ROAD_CLOSURES: "roadClosures",
        SEGMENT_HOUSE_NUMBERS: "segmentHouseNumbers",
        SEGMENTS: "segments",
        STATES: "states",
        STREETS: "streets",
        UPDATE_REQUEST_SESSIONS: "updateRequestSessions",
        USER_AREAS: "userAreas",
        USERS: "users",
        VENUES: "venues",
        RESTRICTED_DRIVING_AREAS: "restrictedDrivingAreas"
    };
    t.RepositoryName = i;
    var r = Object.values(i);
    t.RepositoryNames = r;
    t.RepositoryFilterName = {
        MAP_UPDATE_REQUESTS: "mapUpdateRequestFilter",
        PROBLEMS: "problemFilter",
        VENUES: "venueFilter"
    }
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(8),
        r = n.n(i),
        s = n(213),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(34),
        g = n.n(p),
        f = n(1),
        m = n.n(f),
        v = n(6),
        _ = n.n(v),
        y = n(7),
        b = n.n(y),
        E = n(4),
        w = n.n(E),
        S = n(0),
        k = n.n(S),
        T = n(29),
        I = n.n(T),
        A = n(194),
        M = n(23);

    function O(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function C(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? O(Object(n), !0).forEach(function(t) {
                r()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : O(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var R = function(e) {
        function t(e) {
            var n, i = e.dataModel,
                r = void 0 === i ? null : i,
                s = e.selection,
                a = void 0 === s ? [] : s,
                u = o()(e, ["dataModel", "selection"]);
            return l()(this, t),
                (n = c()(this, h()(t).call(this, C({}, u))))._dataModel = r,
                n.repository = n._dataModel.getRepository(a[0].type),
                n.featureID = a[0].getID(),
                n.viewModel = new b.a.Model,
                n.listenTo(n.repository, M.ATTR_CHANGED, n.onFeaturesChanged),
                n.listenTo(n.repository, M.CHANGED_ID, n._onFeatureChangedIDs),
                w.a.bindEvents(g()(n), n.viewModel, n.modelEvents),
                n
        }
        return _()(t, e),
            m()(t, [{
                key: "events",
                value: function() {
                    return {
                        "submit .attributes-form": "_onAttributesFormSubmitted"
                    }
                }
            }]),
            m()(t, [{
                key: "bindings",
                value: function() {
                    return r()({
                        ".feature-id": {
                            observe: "id",
                            onGet: function(e) {
                                return I18n.t("edit.id", {
                                    num: e
                                })
                            }
                        }
                    }, ".attributes-form input, .attributes-form textarea, .attributes-form select, .attributes-form label", {
                        attributes: [{
                            name: "disabled",
                            observe: "propertiesEditable",
                            onGet: k.a.negate(k.a.identity)
                        }]
                    })
                }
            }, {
                key: "templateContext",
                value: function() {
                    return k.a.pick(this.viewModel.attributes, "id", "createdBy", "createdOn", "updatedBy", "updatedOn", "userRank")
                }
            }, {
                key: "getFeature",
                value: function() {
                    return this.repository.getObjectById(this.featureID)
                }
            }, {
                key: "getFeatureBaseAttributes",
                value: function() {
                    return this.getFeature()
                }
            }, {
                key: "_makeViewModelAttributes",
                value: function(e) {
                    var t = this.getFeatureBaseAttributes();
                    return C({
                        id: t.getID(),
                        createdBy: t.getCreatedBy(),
                        createdOn: t.getCreatedOn(),
                        updatedBy: t.getUpdatedBy(),
                        updatedOn: t.getUpdatedOn(),
                        propertiesEditable: t.arePropertiesEditable(),
                        userRank: W.model.loginManager.getUserRank()
                    }, this.featureToViewModel(e))
                }
            }, {
                key: "_makeModelAttributes",
                value: function(e) {
                    var t = {},
                        n = this.viewModelToFeature();
                    return Object.keys(e.changedAttributes()).forEach(function(i) {
                            "function" == typeof n[i] && n[i](e.get(i), t)
                        }),
                        t
                }
            }, {
                key: "toggleEnabled",
                value: function(e) {
                    e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                }
            }, {
                key: "simpleAttribute",
                value: function(e) {
                    return function(t, n) {
                        n[e] = t
                    }
                }
            }, {
                key: "featureToViewModel",
                value: function(e) {
                    return {}
                }
            }, {
                key: "viewModelToFeature",
                value: function() {
                    return {}
                }
            }, {
                key: "_onAttributesFormSubmitted",
                value: function() {
                    return !1
                }
            }, {
                key: "onFeaturesChanged",
                value: function(e) {
                    this.hasEditedModelChanged(e) && this._reflectRepositoryChanges()
                }
            }, {
                key: "_reflectRepositoryChanges",
                value: function() {
                    var e = this.getFeature();
                    this.viewModel.set(this._makeViewModelAttributes(e), {
                        fromRepo: !0
                    })
                }
            }, {
                key: "_onFeatureChangedIDs",
                value: function(e) {
                    var t = e.oldID,
                        n = e.newID;
                    this.featureID === t && (this.featureID = n)
                }
            }, {
                key: "_onViewModelChanged",
                value: function(e, t) {
                    t.fromRepo || this._updateRepoFromViewModel()
                }
            }, {
                key: "_updateRepoFromViewModel",
                value: function() {
                    var e = this._getRepositoryObjectsToUpdate();
                    if (!k.a.isEmpty(e)) {
                        var t = this._makeModelAttributes(this.viewModel);
                        !k.a.isEmpty(t) && this._updateObjectsInRepository(e, t)
                    }
                }
            }, {
                key: "_getRepositoryObjectsToUpdate",
                value: function() {
                    var e = [],
                        t = this.getFeature();
                    return null == t ? console.error("Cannot update a non-existing object with id ".concat(this.featureID, " and type ").concat(this.repository.objectType)) : e.push(t),
                        e
                }
            }, {
                key: "_updateObjectsInRepository",
                value: function(e, t) {
                    var n = this,
                        i = [];
                    e.forEach(function(e) {
                            var r = n._createObjectUpdateAction(e, t);
                            i.push(r)
                        }),
                        k.a.isEmpty(i) || this._dataModel.actionManager.add(this._wrapUpdateAction(i))
                }
            }, {
                key: "_wrapUpdateAction",
                value: function(e) {
                    return 1 === e.length ? e[0] : new A.default(e)
                }
            }, {
                key: "_createObjectUpdateAction",
                value: function(e, t) {
                    return new I.a(e, t)
                }
            }, {
                key: "hasEditedModelChanged",
                value: function(e) {
                    if (1 !== e.length)
                        return !1;
                    var t = e[0];
                    return this.featureID === t.getID()
                }
            }, {
                key: "onBeforeRender",
                value: function() {
                    var e = this.getFeature();
                    this.viewModel.set(this._makeViewModelAttributes(e), {
                            fromRepo: !0
                        }),
                        this.listenTo(this.viewModel, "change", this._onViewModelChanged)
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(this.viewModel, this.bindings())
                }
            }]),
            t
    }(w.a.View);
    t.default = R
}, function(e, t, n) {
    "use strict";
    n.d(t, "a", function() {
        return c
    });
    var i = n(7),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(16),
        l = n(184),
        u = n(109),
        c = {
            A_TO_B: 1,
            B_TO_A: 2,
            TWO_WAY: 3
        },
        d = ["startDate", "endDate", "reason", "location", "permanent", "createdBy", "eventId"],
        h = /^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}$/,
        p = r.a.Model.extend({
            defaults: function() {
                return {
                    startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                    endDate: (new Date).toString("yyyy-MM-dd 23:59"),
                    reason: null,
                    location: null,
                    permanent: !1,
                    eventId: null,
                    direction: c.A_TO_B,
                    createdBy: null,
                    segments: [],
                    closures: [],
                    reverseSegments: {}
                }
            },
            initialize: function(e, t) {
                var n = this;
                this.segmentSelection = t.segmentSelection,
                    this.dataModel = t.dataModel,
                    this.isNew = t.isNew;
                var i = this.get("closures");
                if (i && i.length > 0) {
                    var r = i[0];
                    this._setFromSingleClosure(r)
                }
                var s = this.get("segments");
                null != s && (s = o()(s).sortBy(function(e) {
                            return e.getID()
                        }).value(),
                        this.set({
                            segments: s
                        })),
                    this.closureNodes = this._createClosureNodesCollection(),
                    this._originalAttribs = this.toJSON(),
                    this._originalClosureNodes = this._createClosureNodesCollection(),
                    this.on("change:direction", function() {
                        n.closureNodes = n._createClosureNodesCollection()
                    }, this)
            },
            _groupClosuresByNodeId: function(e) {
                var t = this;
                return o.a.groupBy(e, function(e) {
                    var n = t.findSegmentByID(e.segID);
                    return Object(l.getFromNodeOfClosure)(e, n).getID()
                })
            },
            _groupSegmentsByNodeId: function() {
                return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).reduce(function(e, t) {
                    var n = [t.getFromNode(), t.getToNode()],
                        i = n[0],
                        r = n[1];
                    return i && (e[i.getID()] = e[i.getID()] || [],
                            e[i.getID()].push(t)),
                        r && (e[r.getID()] = e[r.getID()] || [],
                            e[r.getID()].push(t)),
                        e
                }, {})
            },
            _getClosureNodeIfNeeded: function(e, t, n, i, r, s) {
                var o = t === c.TWO_WAY,
                    a = new u.SegmentDirectionalReader(this.segmentSelection);
                if (a.getAttribute(n, i) && (t === s || o)) {
                    var d = a.getAttribute(n, r),
                        h = this.dataModel.nodes.getObjectById(d),
                        p = !n.isOneWay() && !o;
                    return function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                            i = arguments.length > 3 ? arguments[3] : void 0,
                            r = Object(l.getGeometryDistanceFromOrigin)(e.geometry),
                            s = Object(l.getSegmentCrossingStreetName)(W.model, t, e),
                            o = n.some(function(e) {
                                return e.fromNodeClosed
                            });
                        return {
                            nodeId: e.getID(),
                            node: e,
                            closures: n,
                            isClosed: o,
                            isDisabled: i,
                            distance: r,
                            label: s
                        }
                    }(h, n, e[d], p)
                }
                return null
            },
            _buildClosureNodes: function(e, t, n) {
                var i = this,
                    r = this._groupClosuresByNodeId(e),
                    s = [];
                if (t.forEach(function(e) {
                        var t = i._getClosureNodeIfNeeded(r, n, e, "fwdDirection", "fromNodeID", c.A_TO_B),
                            o = i._getClosureNodeIfNeeded(r, n, e, "revDirection", "toNodeID", c.B_TO_A);
                        t && s.push(t),
                            o && s.push(o)
                    }),
                    this.isNew) {
                    var o = this._groupSegmentsByNodeId(t);
                    s.forEach(function(e) {
                        var t = o[e.nodeId];
                        t && t.length > 1 && (e.isClosed = !0)
                    })
                }
                return s
            },
            _createClosureNodesCollection: function() {
                var e = this.get("closures"),
                    t = this.get("segments"),
                    n = this.get("direction"),
                    i = this._buildClosureNodes(e, t, n);
                return new r.a.Collection(o()(i).uniqBy(function(e) {
                    return e.nodeId
                }).sortBy(function(e) {
                    return e.distance
                }).value())
            },
            getNodeCollectionItemById: function(e) {
                return this.closureNodes.find(function(t) {
                    return t.get("nodeId") === Number(e)
                })
            },
            isNodeClosed: function(e) {
                var t = this.getNodeCollectionItemById(e);
                return Boolean(t && t.get("isClosed"))
            },
            isFromNodeClosedForClosure: function(e) {
                var t = this.findSegmentByID(e.segID),
                    n = Object(l.getFromNodeOfClosure)(e, t);
                return this.isNodeClosed(n.getID())
            },
            _setFromSingleClosure: function(e) {
                for (var t = 0; t < d.length; t++) {
                    var n = d[t];
                    this.set(n, e[n])
                }
                return this.set({
                    direction: this._getDirectionFromClosure(e)
                })
            },
            _getDirectionFromClosure: function(e) {
                var t = e.forward;
                return this.isReverse(e.segID) && (t = !t),
                    t ? c.A_TO_B : c.B_TO_A
            },
            original: function(e) {
                return this._originalAttribs[e]
            },
            differsFromOriginal: function(e) {
                return this.get(e) !== this.original(e)
            },
            _reduceNodesCollectionToMap: function(e) {
                return e.reduce(function(e, t) {
                    return e[t.get("nodeId")] = t.get("isClosed"),
                        e
                }, {})
            },
            hasChanged: function() {
                var e = this;
                return !o.a.isEqual(this._reduceNodesCollectionToMap(this._originalClosureNodes), this._reduceNodesCollectionToMap(this.closureNodes)) || d.some(function(t) {
                    return e.differsFromOriginal(t)
                })
            },
            isOppositeToOriginal: function() {
                var e = this.original("direction"),
                    t = this.get("direction");
                return this._areOpposites(e, t)
            },
            isOppositeTo: function(e) {
                var t = e.get("direction"),
                    n = this.get("direction");
                return this._areOpposites(n, t) && this._hasSameAttributes(e) && this._hasSameSegmentIDs(e)
            },
            _hasSameAttributes: function(e) {
                var t = this;
                return d.every(function(n) {
                    return t.get(n) === e.get(n)
                })
            },
            _hasSameSegmentIDs: function(e) {
                return o.a.isEqual(this.getSegIDs(), e.getSegIDs())
            },
            _areOpposites: function(e, t) {
                return e === c.A_TO_B && t === c.B_TO_A || e === c.B_TO_A && t === c.A_TO_B
            },
            getSegIDs: function() {
                return o()(this.get("segments")).invokeMap("getID").value()
            },
            findSegmentByID: function(e) {
                for (var t = this.get("segments"), n = 0; n < t.length; n++) {
                    var i = t[n];
                    if (i.getID() === e)
                        return i
                }
                return null
            },
            mergeWithOpposite: function(e) {
                this.set({
                        direction: c.TWO_WAY
                    }),
                    this._originalAttribs.direction = c.TWO_WAY;
                var t = this.get("closures"),
                    n = e.get("closures"),
                    i = t.concat(n);
                this.set({
                        closures: i
                    }),
                    this.closureNodes = this._createClosureNodesCollection()
            },
            isReverse: function(e) {
                return !0 === this.get("reverseSegments")[e]
            },
            getChangedAttributes: function() {
                var e = this;
                return d.filter(function(t) {
                    return e.differsFromOriginal(t)
                }).reduce(function(t, n) {
                    return t[n] = e.get(n),
                        t
                }, {})
            },
            saveSimpleFieldsToClosure: function(e) {
                var t = this;
                return d.map(function(n) {
                    return e[n] = t.get(n)
                })
            },
            validate: function() {
                return this.errors = {},
                    this._validateField("startDate", {
                        required: !1,
                        date: !0,
                        futureDate: !1
                    }),
                    this._validateField("endDate", {
                        required: !0,
                        date: !0,
                        futureDate: !0
                    }),
                    this._validateDateRange(),
                    o.a.isEmpty(this.errors)
            },
            isPresent: function(e) {
                return !a.default.isBlank(this.get(e))
            },
            _validateField: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (!t.required || this.isPresent(e)) {
                    if (this.isPresent(e)) {
                        var n = this.get(e);
                        if (null != t.pattern && !t.pattern.test(n))
                            return void(this.errors[e] = "invalid");
                        if (t.date && !this._isValidDate(n))
                            return void(this.errors[e] = "invalid-date");
                        if (t.futureDate)
                            Date.parse(n).isBefore(1..days().ago()) && (this.errors[e] = "in-past")
                    }
                } else
                    this.errors[e] = "required"
            },
            _isValidDate: function(e) {
                return h.test(e) && null != Date.parse(e)
            },
            _validateDateRange: function() {
                if (null == this.errors.startDate && null == this.errors.endDate) {
                    var e = Date.parse(this.get("startDate"));
                    Date.parse(this.get("endDate")).isAfter(e) || (this.errors.endDate = "before-start-date")
                }
            },
            calculateForwardValuesForSegment: function(e) {
                var t = this.get("direction"),
                    n = this.isReverse(e);
                return t === c.TWO_WAY ? [!0, !1] : t === c.A_TO_B ? [!n] : [n]
            },
            isEndDateSet: function() {
                return null !== this.get("endDate")
            },
            isStartDateSet: function() {
                return null !== this.get("startDate")
            }
        });
    t.b = p
}, function(e, t, n) {
    "use strict";
    var i = n(8),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(10),
        c = n.n(u),
        d = n(77),
        h = n.n(d),
        p = n(30),
        g = n(21);

    function f(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var m = function() {
        function e() {
            o()(this, e),
                this.serializer = new h.a,
                this.getFeaturesjqXHR = null,
                this.abortController = null
        }
        return l()(e, [{
                key: "_toUnprojectedBBOX",
                value: function(e) {
                    return g.getUnprojectedGeometry(e).toBBOX()
                }
            }, {
                key: "_newRequestParams",
                value: function(e) {
                    return {
                        language: I18n.locale,
                        bbox: this._toUnprojectedBBOX(e)
                    }
                }
            }, {
                key: "getExpandedDataBounds",
                value: function(e) {
                    return g.getBoundsWithRatio(e, 1.7)
                }
            }, {
                key: "getFeatures",
                value: function(e, t, n) {
                    e = this.getExpandedDataBounds(e);
                    var i = Object.assign(this._newRequestParams(e), t);
                    this.abortController && this.abortController.abort(),
                        this.abortController = new AbortController,
                        n = function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? f(Object(n), !0).forEach(function(t) {
                                    r()(e, t, n[t])
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : f(Object(n)).forEach(function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                })
                            }
                            return e
                        }({}, n, {
                            signal: this.abortController.signal
                        });
                    var s = Object(p.httpGet)(W.Config.paths.features, i, n);
                    return Promise.resolve(s).catch(function(e) {
                        throw "abort" !== e.statusText && "AbortError" !== e.name || (e.reason = "abort"),
                            e
                    })
                }
            }, {
                key: "postFeatures",
                value: function(e, t, n) {
                    var i = Object.assign(this._newRequestParams(t), {
                        ignoreWarnings: n
                    });
                    return Object(p.httpPost)("".concat(W.Config.paths.features, "?").concat(c.a.param(i)), e, {
                        dataType: "json"
                    })
                }
            }, {
                key: "getCityExists",
                value: function(e, t, n) {
                    var i = parseInt(t, 10),
                        r = parseInt(n, 10);
                    return Object(p.httpGet)(W.Config.paths.cityExists, {
                        cityName: e,
                        countryID: isNaN(i) ? void 0 : i,
                        stateID: isNaN(r) ? void 0 : r
                    })
                }
            }, {
                key: "getElementHistory",
                value: function(e, t) {
                    var n = this,
                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        r = {
                            objectType: e,
                            objectID: t
                        };
                    return null != i && (r.till = i),
                        Object(p.httpGet)(W.Config.paths.elementHistory, r).then(function(e) {
                            return n.serializer.read(e)
                        })
                }
            }, {
                key: "_sendFeaturesRequest",
                value: function(e, t) {
                    var n = this;
                    return Object(p.httpGet)(e, t).then(function(e) {
                        return n.serializer.read(e),
                            e
                    })
                }
            }, {
                key: "getHouseNumbers",
                value: function(e) {
                    return this._sendFeaturesRequest(W.Config.paths.houseNumbers, {
                        ids: e
                    })
                }
            }, {
                key: "getConfigurationInfo",
                value: function() {
                    return Object(p.httpGet)(W.Config.paths.configurationInfo)
                }
            }, {
                key: "getProblemDetailsByIds",
                value: function(e) {
                    return this._sendFeaturesRequest(W.Config.paths.problemDetails, {
                        ids: e
                    })
                }
            }, {
                key: "getUpdateRequestSessionsByIds",
                value: function(e) {
                    return this._sendFeaturesRequest(W.Config.paths.updateRequestSessions, {
                        ids: e
                    })
                }
            }, {
                key: "getArchives",
                value: function(e) {
                    var t = e.username,
                        n = e.minDistance,
                        i = e.offset,
                        r = e.count;
                    return this._sendFeaturesRequest(W.Config.paths.archive, {
                        username: t,
                        minDistance: n,
                        offset: i,
                        count: r
                    })
                }
            }, {
                key: "getArchiveById",
                value: function(e) {
                    return this._sendFeaturesRequest(W.Config.paths.archive, {
                        id: e
                    })
                }
            }, {
                key: "getArchiveSessionById",
                value: function(e) {
                    return this._sendFeaturesRequest(W.Config.paths.archiveSessions, {
                        id: e
                    })
                }
            }]),
            e
    }();
    t.a = m
}, function(e, t, n) {
    "use strict";
    var i = n(33),
        r = OpenLayers.Class(OpenLayers.Renderer.SVG, {
            initialize: function() {
                OpenLayers.Renderer.SVG.prototype.initialize.apply(this, arguments),
                    this.supportUse = !0
            },
            setAnimation: function(e, t) {
                var n = document.createElementNS(this.xmlns, "animate");
                n.setAttributeNS(null, "attributeName", t.attributeName),
                    n.setAttributeNS(null, "dur", t.dur),
                    Object.keys(t).forEach(function(e) {
                        n.setAttributeNS(null, e, t[e])
                    }),
                    e.appendChild(n)
            },
            setStyle: function(e, t, n) {
                if (OpenLayers.Renderer.SVG.prototype.setStyle.apply(this, arguments),
                    t.animation && this.setAnimation(e, t.animation),
                    t.mask && e.setAttributeNS(null, "mask", t.mask),
                    t.filter && e.setAttributeNS(null, "filter", t.filter),
                    i.defined(t.rx) && e.setAttributeNS(null, "rx", t.rx),
                    i.defined(t.ry) && e.setAttributeNS(null, "ry", t.ry),
                    i.defined(t.maskID)) {
                    var r, s = document.getElementById(t.maskID);
                    s || (s = document.createElementNS(this.xmlns, "mask"),
                            (r = document.createElementNS(this.xmlns, "rect")).setAttributeNS(null, "x", "0"),
                            r.setAttributeNS(null, "y", "0"),
                            r.setAttributeNS(null, "width", "100%"),
                            r.setAttributeNS(null, "height", "100%"),
                            r.setAttributeNS(null, "fill", "white"),
                            s.setAttributeNS(null, "id", t.maskID),
                            s.appendChild(r)),
                        s.appendChild(e),
                        s._style = t,
                        e = s
                }
                return e
            },
            importSymbol: function(e) {
                return this.symbolMetrics = {},
                    this.symbolMetrics[e] = [0, 0, 0],
                    e
            },
            getNodeType: function(e, t) {
                var n = OpenLayers.Renderer.SVG.prototype.getNodeType.apply(this, arguments);
                return "circle" === n && i.defined(t.rx) && i.defined(t.ry) && (n = "ellipse"),
                    n
            },
            dashStyle: function(e, t) {
                var n;
                if (e.strokeDashArray)
                    return e.strokeDashArray;
                n = e.strokeWidth * t;
                var i = e.strokeDashstyle;
                switch (i) {
                    case "solid":
                        return "none";
                    case "dot":
                        return [1, 4 * n].join();
                    case "dash":
                        return [4 * n, 4 * n].join();
                    case "dashdot":
                        return [4 * n, 4 * n, 1, 4 * n].join();
                    case "longdash":
                        return [8 * n, 4 * n].join();
                    case "longdashdot":
                        return [8 * n, 4 * n, 1, 4 * n].join();
                    default:
                        return OpenLayers.String.trim(i).replace(/\s+/g, ",")
                }
            },
            CLASS_NAME: "Waze.Renderer.ExtendedSVG"
        });
    t.a = r
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(759)),
        s = i(n(26)),
        o = n(87),
        a = n(118),
        l = n(45),
        u = function() {
            function e(e, t) {
                this.dataModel = e,
                    t instanceof s.default ? this.segments = [t] : this.segments = t,
                    this.segmentReducer = new l.SegmentReducer(this.segments, new a.SegmentReader)
            }
            return e.prototype.getAddress = function() {
                    return new r.default(this.segments.map(function(e) {
                        return e.getAddress()
                    }), this.dataModel)
                },
                e.prototype.hasSingleNonEmptyStreet = function() {
                    return this.getAddress().hasSingleNonEmptyStreet()
                },
                e.prototype.isEntireStreetSelected = function(e) {
                    return this.getEntireStreet(this.segments[0]).every(function(t) {
                        return e.isSelected(t)
                    })
                },
                e.prototype.selectEntireStreet = function(e) {
                    this.hasSingleNonEmptyStreet() && e.setSelectedModels(this.getEntireStreet(this.segments[0]))
                },
                e.prototype.getEntireStreet = function(e) {
                    var t = e.attributes.primaryStreetID,
                        n = this.dataModel.streets.getObjectById(t);
                    return !n || n.isEmpty ? [e] : this.dataModel.segments.getObjectArray(function(e) {
                        return e.attributes.primaryStreetID === t
                    })
                },
                e.prototype.shouldDisableEmptyCity = function() {
                    var e = this.getAddress(),
                        t = null == e.getCity() || e.getCity().isEmpty();
                    return this.segmentReducer.reduceHasHouseNumbers() && !t
                },
                e.prototype.shouldDisableEmptyStreet = function() {
                    var e = this.getAddress().isEmptyStreet();
                    return this.segmentReducer.reduceHasHouseNumbers() && !e
                },
                e.prototype.emptyCityForAltStreets = function() {
                    return new o.SegmentsRoadTypeUseCase(this.segments).isHighway()
                },
                e
        }();
    t.SegmentStreetsUseCase = u
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(700)),
        l = o(n(52)),
        u = s(n(82)),
        c = {
            FWD: 0,
            REV: 1
        };
    t.SEGMENT_LANE_DIRECTION = c;
    var d = function() {
        function e(e, t, n, i, s) {
            this.dataModel = e,
                this.segmentId = t,
                this.direction = n,
                this.laneCount = i,
                this.lanes = r(s)
        }
        return e.forSegment = function(t, n, i) {
                if (null == n)
                    return null;
                for (var r = n.getLaneCount(i), s = l.getOutgoingEnabledTurns(t, n, i), o = [], u = function(e) {
                        var n = s.filter(function(t) {
                                var n = t.getTurnData(),
                                    i = n.getLaneData();
                                return n.hasLanes() && i && i.includes(e)
                            }),
                            i = Array.from(new Set(n.map(function(e) {
                                return e.getTurnData().getLaneData().getEffectiveAngle()
                            }))),
                            r = n.map(function(e) {
                                return e.getToVertex()
                            });
                        o.push(new a.default(t, i, r))
                    }, c = 0; c < r; c++)
                    u(c);
                return new e(t, n.getID(), i, r, o)
            },
            e.prototype.getFromVertex = function() {
                return l.lanesDirectionToVertex(this.segmentId, this.direction)
            },
            e.prototype.getTurnsForLane = function(e) {
                return this.lanes[e].getTurns(this.getFromVertex())
            },
            e.prototype.getDirection = function() {
                return this.direction
            },
            e.prototype.getSegment = function() {
                var e = this.dataModel.segments.getObjectById(this.segmentId);
                if (null === e)
                    throw new Error("segment: " + this.segmentId + " does not exist");
                return e
            },
            e.prototype.getLaneCount = function() {
                return this.laneCount
            },
            e.prototype.getLanes = function() {
                return r(this.lanes)
            },
            e.prototype.getNode = function() {
                var e = this.getSegment();
                return this.direction === c.FWD ? e.getToNode() : e.getFromNode()
            },
            e.prototype.isEnabled = function() {
                return this.getSegment().isLanesEnabled(this.direction)
            },
            e.prototype.isComplete = function() {
                return this.isEmpty() || this.allTurnsCovered() && this.allLanesCovered()
            },
            e.prototype.isEmpty = function() {
                return 0 === this.laneCount
            },
            e.prototype.allTurnsCovered = function() {
                var e = this;
                return l.getOutgoingEnabledTurns(this.dataModel, this.getSegment(), this.getDirection()).every(function(t) {
                    return e.isTurnCovered(t)
                })
            },
            e.prototype.isEditable = function() {
                return new u.default(this.dataModel, [this.getSegment()]).canEditLanes(this.getDirection()) && (!this.isEmpty() || l.getOutgoingEnabledTurns(this.dataModel, this.getSegment(), this.getDirection()).length > 0)
            },
            e.prototype.isTurnCovered = function(e) {
                return Boolean(this.lanes.find(function(t) {
                    return t.getToSegmentIDs().includes(e.getToVertex().getSegmentID())
                }))
            },
            e.prototype.allLanesCovered = function() {
                return this.laneCount === this.lanes.length && this.allLanesComplete()
            },
            e.prototype.allLanesComplete = function() {
                return this.lanes.every(function(e) {
                    return !e.isEmpty()
                })
            },
            e
    }();
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__values || function(e) {
            var t = "function" == typeof Symbol && e[Symbol.iterator],
                n = 0;
            return t ? t.call(e) : {
                next: function() {
                    return e && n >= e.length && (e = void 0), {
                        value: e && e[n++],
                        done: !e
                    }
                }
            }
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = o(n(0)),
        l = n(23);
    t.MARKER_CLASS = "map-marker";
    var u = function(e) {
        function t(t, n, i) {
            var r = e.call(this, t, i) || this;
            return r.featureMarkers = {},
                r.repo = n,
                i.className && (r.className = i.className),
                r._registerEvents(),
                r
        }
        return r(t, e),
            t.prototype.destroy = function() {
                this.clearMarkers(),
                    this.featureMarkers = {},
                    this._unregisterEvents(),
                    e.prototype.destroy.call(this)
            },
            t.prototype._registerEvents = function() {
                $(this.div).on("click", ".map-marker", this._onDivClick.bind(this)),
                    this._registerRepoEvents()
            },
            t.prototype._unregisterEvents = function() {
                return $(this.div).off("click", ".map-marker"),
                    this._unregisterRepoEvents()
            },
            t.prototype._registerRepoEvents = function() {
                var e = this,
                    t = [l.ATTR_CHANGED, l.STATE_DELETED].join(" ");
                return this.repo.map(function(n) {
                    return n.on(l.ADDED, e.onFeaturesAdded, e),
                        n.on(t, e.onFeaturesChanged, e),
                        n.on(l.REMOVED, e.onFeaturesRemoved, e),
                        n.on(l.CHANGED_ID, e.onFeaturesChangedID, e)
                })
            },
            t.prototype._unregisterRepoEvents = function() {
                var e = this;
                return this.repo.map(function(t) {
                    return t.off(l.ADDED, e.onFeaturesAdded, e),
                        t.off(l.ATTR_CHANGED, e.onFeaturesChanged, e),
                        t.off(l.REMOVED, e.onFeaturesRemoved, e),
                        t.off(l.CHANGED_ID, e.onFeaturesChangedID, e)
                })
            },
            t.prototype.shouldAddFeature = function(e) {
                return !this.filter || this.filter(e)
            },
            t.prototype.onFeaturesAdded = function(e) {
                for (var t = 0; t < e.length; t++) {
                    var n = e[t];
                    if (this.shouldAddFeature(n)) {
                        var i = new this.markerClass(n);
                        this.addFeatureMarker(i, n)
                    }
                }
            },
            t.prototype.onFeaturesChanged = function(e) {
                for (var t = 0; t < e.length; t++) {
                    var n = e[t],
                        i = this._findFeatureMarker(n);
                    null != i ? this.shouldAddFeature(n) ? this.renderFeatureMarker(i, n) : this.removeFeatureMarker(n, i) : this.shouldAddFeature(n) && (i = new this.markerClass(n),
                        this.addFeatureMarker(i, n))
                }
            },
            t.prototype.renderFeatureMarker = function(e, t) {
                this.drawFeatureMarker(e),
                    this.updateFeatureMarkerId(e, t),
                    e.render(t)
            },
            t.prototype._findFeatureMarker = function(e) {
                var t = e.getID();
                return this.featureMarkers[t] || this._findMarkerByOldID(e)
            },
            t.prototype._findMarkerByOldID = function(e) {
                var t = e.getOldID();
                if (null != t) {
                    var n = this.featureMarkers[t];
                    if (null != n)
                        return this.featureMarkers[t] = n,
                            delete this.featureMarkers[t],
                            n
                }
                return null
            },
            t.prototype.onFeaturesRemoved = function(e) {
                for (var t = 0; t < e.length; t++) {
                    var n = e[t],
                        i = this.featureMarkers[n.getID()];
                    null != i && this.removeFeatureMarker(n, i)
                }
            },
            t.prototype.onFeaturesChangedID = function(e) {
                var t = e.oldID,
                    n = e.newID,
                    i = this.featureMarkers[t];
                if (i) {
                    delete this.featureMarkers[t],
                        this.featureMarkers[n] = i;
                    var r = this.repo[0].getObjectById(n);
                    r && this.renderFeatureMarker(i, r)
                }
            },
            t.prototype.setOpacity = function(e) {
                var t, n;
                if (e !== this.opacity) {
                    this.opacity = e;
                    try {
                        for (var i = s(Object.keys(this.featureMarkers)), r = i.next(); !r.done; r = i.next()) {
                            var o = r.value;
                            this.featureMarkers[o].setOpacity(this.opacity)
                        }
                    } catch (e) {
                        t = {
                            error: e
                        }
                    } finally {
                        try {
                            r && !r.done && (n = i.return) && n.call(i)
                        } finally {
                            if (t)
                                throw t.error
                        }
                    }
                }
            },
            t.prototype.moveTo = function(t, n, i) {
                var r, o;
                if (e.prototype.moveTo.call(this, t, n, i),
                    n || !this.drawn) {
                    try {
                        for (var a = s(Object.keys(this.featureMarkers)), l = a.next(); !l.done; l = a.next()) {
                            var u = l.value,
                                c = this.featureMarkers[u];
                            this.drawFeatureMarker(c)
                        }
                    } catch (e) {
                        r = {
                            error: e
                        }
                    } finally {
                        try {
                            l && !l.done && (o = a.return) && o.call(a)
                        } finally {
                            if (r)
                                throw r.error
                        }
                    }
                    this.drawn = !0
                }
            },
            t.prototype.addFeatureMarker = function(e, t) {
                this.featureMarkers[t.getID()] = e,
                    this.map && this.map.getExtent() && (e.setMap(this.map),
                        this.renderFeatureMarker(e, t))
            },
            t.prototype.getMarker = function(e) {
                return this.featureMarkers[e]
            },
            t.prototype.removeFeatureMarker = function(e, t) {
                if (this.featureMarkers)
                    return t.remove(),
                        delete this.featureMarkers[e.getID()]
            },
            t.prototype.clearMarkers = function() {
                Object.values(this.featureMarkers).forEach(function(e) {
                        e.remove()
                    }),
                    this.featureMarkers = {}
            },
            t.prototype.toggleMarkers = function(e, t) {
                var n = this;
                void 0 === t && (t = a.default.stubTrue),
                    Object.keys(this.featureMarkers).filter(t).map(function(e) {
                        return n.getMarker(e)
                    }).forEach(function(t) {
                        t.toggle(e)
                    })
            },
            t.prototype.drawFeatureMarker = function(e) {
                var t = e.getMarker(),
                    n = this.map.getLayerPxFromLonLat(t.lonlat);
                if (null == n)
                    t.display(!1);
                else if (t.isDrawn())
                    t.icon && t.icon.moveTo(n);
                else {
                    var i = t.draw(n);
                    i.classList.add("map-marker"),
                        this.div.appendChild(i)
                }
            },
            t.prototype.updateFeatureMarkerId = function(e, t) {
                var n = t.getID();
                n && e.setFeatureId(n)
            },
            t.prototype.setMap = function(t) {
                if (e.prototype.setMap.call(this, t),
                    this.$div = $(this.div),
                    this.$div.addClass("marker-layer"),
                    this.className)
                    return this.$div.addClass(this.className)
            },
            t.prototype.getDataExtent = function() {
                if (this.featureMarkers) {
                    var e = new OpenLayers.Bounds;
                    return Object.values(this.featureMarkers).forEach(function(t) {
                            e.extend(t.getLonLat())
                        }),
                        e
                }
                return null
            },
            t.prototype.getContainer = function() {
                return this.div
            },
            t.prototype._onDivClick = function(e) {
                var t = e.currentTarget;
                if (t && t.classList.contains("map-marker")) {
                    var n = $(t).data("featureId");
                    return this.events.triggerEvent("markerclick", n),
                        e.stopPropagation(),
                        !1
                }
            },
            t.prototype.setMarkerVisibility = function(e, t) {
                var n = this.getMarker(e);
                n && n.toggle(t)
            },
            t
    }(OpenLayers.Layer);
    Object.assign(u.prototype, {
            CLASS_NAME: "W.Layer.Markers"
        }),
        t.default = u
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = i(n(696)),
        o = {
            citiesByAttributes: function(e, t) {
                var n = Object.keys(t);
                return 0 === n.length ? [] : e.cities.getObjectArray().filter(function(e) {
                    return n.every(function(n) {
                        return e.attributes[n] === t[n]
                    })
                })
            },
            streetsByAttributes: function(e, t) {
                var n = e.streets.getObjectArray();
                return r.default.filter(n, t)
            },
            stateByAttributes: function(e, t) {
                var n = e.states.getObjectArray();
                return r.default.filter(n, t)
            },
            getClosuresBySegmentId: function(e, t) {
                return r.default.filter(e.roadClosures.getObjectArray(), {
                    segID: t
                })
            },
            isFromNodeClosed: function(e, t, n) {
                var i = o.getClosuresBySegmentId(e, t),
                    s = r.default.find(i, {
                        forward: n
                    });
                return s && s.fromNodeClosed
            },
            citiesWithName: function(e) {
                return e.cities.getObjectArray().filter(function(e) {
                    return e.hasName() && !e.isEmpty()
                })
            },
            streetsWithNames: function(e) {
                return e.streets.getObjectArray().filter(function(e) {
                    return e.name && !e.isEmpty
                })
            },
            getHouseNumbersBySegmentId: function(e, t) {
                return e.segmentHouseNumbers.getObjectArray().filter(function(e) {
                    return e.getSegmentId() === t
                })
            },
            nodeById: function(e, t) {
                return e.nodes.getObjectById(t)
            },
            allNodes: function(e) {
                return e.nodes.getObjectArray()
            },
            segmentById: function(e, t) {
                return e.segments.getObjectById(t)
            },
            directedSegment: function(e, t) {
                var n = e.segments.getObjectById(t.getSegmentID());
                return null == n ? null : new s.default(t, n)
            }
        };
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = s(n(41)),
        l = s(n(43)),
        u = s(n(51)),
        c = s(n(67)),
        d = function(e) {
            function t(t, n, i, r) {
                var s = e.call(this, r) || this;
                return null === t ? (s.object = new l.default(i),
                        s.attributes = i) : (s.object = t,
                        s.object instanceof u.default || s.object instanceof c.default ? s.attributes = o.default.extend({}, s.object.getFeatureAttributes()) : s.attributes = o.default.extend({}, s.object)),
                    s.object.writableAttributes && (s.attributes = o.default.pick(s.attributes, s.object.writableAttributes)),
                    s.repository = n,
                    s
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return [this.object]
                },
                t.prototype.doAction = function() {
                    var e = this.repository.generateUniqueID();
                    return this.object.setID(e),
                        this.object.version = 1,
                        this.object.state = OpenLayers.State.INSERT,
                        this.repository.put(this.object),
                        !0
                },
                t.prototype.undoAction = function() {
                    this.repository.remove(this.object)
                },
                t.prototype.redoAction = function() {
                    this.repository.put(this.object)
                },
                t.prototype.serialize = function() {
                    var e = o.default.extend({}, this.attributes);
                    return e.id = this.object.getID(), {
                        _objectType: this.object.type,
                        action: a.default.TYPE.ADD,
                        attributes: e
                    }
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return [this.object.getUniqueID()]
                },
                t.prototype.generateDescription = function() {
                    var e = I18n.t("objects." + this.object.type + ".name");
                    this._description = I18n.t("save.changes_log.actions.CreateObject", {
                        type: e
                    })
                },
                t.prototype.getObject = function() {
                    return this.object
                },
                t
        }(a.default);
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(27)),
        c = a(n(29)),
        d = a(n(392)),
        h = a(n(132)),
        p = l(n(21)),
        g = n(39),
        f = l(n(12)),
        m = l(n(20)),
        v = n(26),
        _ = function(e) {
            function t(t, n, i) {
                void 0 === i && (i = {});
                var r = e.call(this, i) || this,
                    s = i.virtual,
                    o = void 0 !== s && s;
                return r.node = t,
                    r.segment = n,
                    r._connectVirtually = o,
                    r
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return [this.segment, this.node]
                },
                t.prototype.doAction = function() {
                    var e = {},
                        t = this.segment.isWalkingTrail();
                    if (this.node.isVirtual() && !t && this.doSubAction(new d.default(this.node)),
                        this._connectVirtually)
                        e.virtualNodeIDs = o(this.segment.attributes.virtualNodeIDs, [this.node.getID()]),
                        this._updateSegmentGeometry();
                    else {
                        var n = this._findSegmentEdge();
                        if (!n)
                            return !1;
                        e[n + "NodeID"] = this.node.getID()
                    }
                    return this.segment.getID(),
                        this.node.getID(),
                        this.doSubAction(new c.default(this.segment, e)),
                        this._updateNodeSegmentList(),
                        !0
                },
                t.prototype._updateSegmentGeometry = function() {
                    if (!m.hasPoint(this.segment.geometry, this.node.geometry)) {
                        var e = p.getPointEdge(this.segment.geometry, this.node.geometry),
                            t = f.cloneGeometry(this.segment.geometry);
                        m.addPoint(t, this.node.geometry, e + 1),
                            this.doSubAction(new h.default(this.segment, this.segment.geometry, t))
                    }
                },
                t.prototype._findSegmentEdge = function() {
                    var e = m.getVertices(this.segment.geometry, !0);
                    return e[0].equals(this.node.geometry) ? v.NodeName.FROM : e[1].equals(this.node.geometry) ? v.NodeName.TO : null
                },
                t.prototype._updateNodeSegmentList = function() {
                    var e = this.node.attributes.segIDs.concat();
                    return e.includes(this.segment.getID()) || e.push(this.segment.getID()),
                        this.doSubAction(new c.default(this.node, {
                            segIDs: e
                        }, {
                            dontSerialize: !0
                        }))
                },
                t.prototype.getNode = function() {
                    return this.node
                },
                t.prototype.generateDescription = function() {
                    this._description = g.formatActionAddressDescription(this.segment, "ConnectSegment")
                },
                t
        }(u.default);
    t.default = _
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "MTE_LOCALES", function() {
            return L
        }),
        n.d(t, "ENGLISH_LOCALE", function() {
            return P
        }),
        n.d(t, "CATEGORIES", function() {
            return N
        }),
        n.d(t, "PERMISSIONS", function() {
            return x
        }),
        n.d(t, "WRITABLE_ATTRIBUTES", function() {
            return V
        });
    var i = n(13),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(34),
        h = n.n(d),
        p = n(3),
        g = n.n(p),
        f = n(14),
        m = n.n(f),
        v = n(6),
        _ = n.n(v),
        y = n(10),
        b = n.n(y),
        E = n(7),
        w = n.n(E),
        S = n(0),
        k = n.n(S),
        T = n(43),
        I = n.n(T),
        A = n(15),
        M = n.n(A),
        O = n(51),
        C = n.n(O),
        R = n(80),
        D = n.n(R),
        L = {
            el: "ελληνικά"
        },
        P = "en",
        N = {
            FESTIVAL: "FESTIVAL",
            PARADE: "PARADE",
            CONCERT: "CONCERT",
            SPORTING_EVENT: "SPORTING_EVENT",
            STADIUM_GAMES: "STADIUM_GAMES",
            VIP_VISIT: "VIP_VISIT",
            CRISIS: "CRISIS",
            CONSTRUCTION: "CONSTRUCTION",
            OTHER: "OTHER"
        },
        x = {
            EDIT_PROPERTIES: 1,
            MANIPULATE_PARTNERS: 2,
            PUBLISH: 4,
            EDIT_TWEET_TEXT: 16
        },
        V = ["id", "category", "cityID", "comment", "startDate", "endDate", "names", "url", "partners", "tweetText"],
        j = function(e) {
            function t(e, n) {
                var i;
                return o()(this, t),
                    (i = c()(this, g()(t).call(this, e))).permissionFlags = x,
                    C.a.prototype.initializeAttributes.call(h()(i), e, n, i.defaults()),
                    i.type = M.a.MTE,
                    i.writableAttributes = V,
                    i
            }
            return _()(t, e),
                l()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            id: null,
                            active: null,
                            category: null,
                            cityID: null,
                            comment: null,
                            contributors: [],
                            createdBy: null,
                            createdOn: null,
                            description: null,
                            startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                            endDate: null,
                            names: [],
                            permissions: I.a.ALL_PERMISSIONS & ~x.EDIT_TWEET_TEXT,
                            updatedBy: null,
                            updatedOn: null,
                            url: null,
                            published: !1,
                            ready: !1,
                            uniqueName: null,
                            partners: [],
                            tweetText: null,
                            twitterAccountsUrls: []
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        var e = m()(g()(t.prototype), "clone", this).apply(this, arguments);
                        e.attributes = Object.assign({}, this.attributes);
                        var n = b.a.extend(!0, [], this.get("names"));
                        return e.set({
                                names: n
                            }),
                            e.model = this.model,
                            e
                    }
                }, {
                    key: "getAddress",
                    value: function() {
                        return D.a.fromCityID(this.attributes.cityID, this.model)
                    }
                }, {
                    key: "getEnglishName",
                    value: function() {
                        var e = k.a.filter(this.attributes.names, {
                            locale: this.ENGLISH_LOCALE
                        });
                        return e.length > 0 ? e[0].value : null
                    }
                }, {
                    key: "getLocale",
                    value: function() {
                        var e = this._getLocalNameObject();
                        return null !== e ? e.locale : null
                    }
                }, {
                    key: "getLocalName",
                    value: function() {
                        var e = this._getLocalNameObject();
                        return null !== e ? e.value : null
                    }
                }, {
                    key: "_getLocalNameObject",
                    value: function() {
                        var e = this,
                            t = k.a.reject(this.attributes.names, function(t) {
                                return t.locale === e.ENGLISH_LOCALE
                            });
                        return t.length > 0 ? t[0] : null
                    }
                }, {
                    key: "canPublish",
                    value: function() {
                        return !this.isNew() && this.get("ready") && this.isAllowed(x.PUBLISH)
                    }
                }, {
                    key: "canEditPartners",
                    value: function() {
                        return this.isAllowed(x.MANIPULATE_PARTNERS)
                    }
                }, {
                    key: "canEditTweetText",
                    value: function() {
                        return this.isAllowed(x.EDIT_TWEET_TEXT)
                    }
                }, {
                    key: "getFeatureAttributes",
                    value: function() {
                        return this.attributes
                    }
                }]),
                t
        }(w.a.Model);

    function U(e, t) {
        for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), s = 2; s < n; s++)
            i[s - 2] = arguments[s];
        for (var o = 0, a = Object.entries(k.a.omit.apply(k.a, [Object.getOwnPropertyDescriptors(t)].concat(i))); o < a.length; o++) {
            var l = r()(a[o], 2),
                u = l[0],
                c = l[1];
            Object.defineProperty(e, u, c)
        }
    }
    U(j.prototype, I.a.prototype, "clone", "initialize", "constructor"),
        U(j.prototype, C.a.prototype, "clone", "initialize", "constructor"),
        Object.assign(j.prototype, {
            PERMISSIONS: x,
            CATEGORIES: N,
            MTE_LOCALES: L,
            ENGLISH_LOCALE: P
        }),
        t.default = j
}, function(e, t, n) {
    "use strict";
    var i = n(13),
        r = n.n(i),
        s = n(8),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(1),
        c = n.n(u),
        d = n(5),
        h = n.n(d),
        p = n(3),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(4),
        _ = n.n(v),
        y = n(0),
        b = n.n(y),
        E = n(74),
        w = n(144),
        S = n(22),
        k = n.n(S),
        T = function() {
            function e() {
                var t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).maxParallel,
                    n = void 0 === t ? 10 : t;
                l()(this, e),
                    this.maxParallel = n,
                    this._currentRunningTasksCount = 0,
                    this._taskQueue = []
            }
            return c()(e, [{
                    key: "_runTask",
                    value: function(e) {
                        var t = this;
                        this._currentRunningTasksCount++;
                        var n = e.fn,
                            i = e.args,
                            r = e.resolve,
                            s = e.reject;
                        try {
                            return Promise.resolve(n.apply(void 0, k()(i || []))).then(function(e) {
                                return e
                            }).catch(function(e) {
                                throw e
                            }).finally(function() {
                                t._onTaskFinish()
                            }).then(r).catch(s)
                        } catch (e) {
                            return this._onTaskFinish(),
                                Promise.reject(e)
                        }
                    }
                }, {
                    key: "_runNextTasks",
                    value: function() {
                        for (; this._currentRunningTasksCount < this.maxParallel && this._taskQueue.length > 0;)
                            this._runNextTask()
                    }
                }, {
                    key: "_onTaskFinish",
                    value: function() {
                        this._currentRunningTasksCount--,
                            this._runNextTasks()
                    }
                }, {
                    key: "_runNextTask",
                    value: function() {
                        var e = this._taskQueue.shift();
                        e && this._runTask(e)
                    }
                }, {
                    key: "addFunction",
                    value: function(e, t) {
                        var n = this;
                        return new Promise(function(i, r) {
                            n._taskQueue.push({
                                    fn: e,
                                    args: t,
                                    resolve: i,
                                    reject: r
                                }),
                                n._runNextTasks()
                        })
                    }
                }, {
                    key: "all",
                    value: function(e) {
                        var t = this,
                            n = e.map(function(e) {
                                return t.addFunction(e)
                            });
                        return Promise.all(n)
                    }
                }]),
                e
        }(),
        I = n(42),
        A = n(18);

    function M(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function O(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? M(Object(n), !0).forEach(function(t) {
                o()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : M(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    n.d(t, "a", function() {
        return C
    });
    var C = {
            SAVE_START: "save:start",
            SAVE_END: "save:end",
            SAVE_SUCCESS: "save:success",
            SAVE_FAIL: "save:fail",
            SAVE_PROGRESS: "save:progress",
            SAVE_GROUP_START: "save:group:start",
            SAVE_GROUP_END: "save:group:end",
            SAVE_GROUP_SUCCESS: "save:group:success",
            SAVE_GROUP_FAIL: "save:group:fail",
            GROUP_SET_ERRORS: "group:set:errors",
            GROUP_REMOVE_ERRORS: "group:remove:errors"
        },
        R = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return m()(t, e),
                c()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._actionManager = e.actionManager,
                            this._controller = e.controller,
                            this._editingMediator = e.editingMediator,
                            this._regionCode = e.regionCode,
                            this._editingLocksIds = [],
                            this._saveErrors = new Map,
                            this._savingGroups = new Set,
                            this._lockedGroups = new Set,
                            this._bindEvents()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._actionManager.events.on({
                            scope: this,
                            afteraction: this._onAction,
                            afterundoaction: this._onAction
                        })
                    }
                }, {
                    key: "_onAction",
                    value: function(e) {
                        var t = this._actionManager.getActionGroupId(e.action);
                        this._clearGroupErrors(t)
                    }
                }, {
                    key: "_saveGroupTask",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            n = t.groupId;
                        return this._setSaveGroupStarted(n),
                            t.actions || (t.actions = this._actionManager.getActionsByGroupId(n)),
                            this._controller.save(t).then(function(t) {
                                return e._clearGroupErrors(n),
                                    e._triggerSaveGroupSuccess(n),
                                    t
                            }).catch(function(t) {
                                e._clearGroupErrors(n);
                                var i = t;
                                i instanceof E.a || (console.error(i),
                                        i = e._createDefaultSaveError()),
                                    e._setGroupErrors(n, i),
                                    e._reportErrors(i.errors),
                                    e._triggerSaveGroupFail(n)
                            }).finally(function() {
                                e._setSaveGroupEnded(n)
                            })
                    }
                }, {
                    key: "_createDefaultSaveError",
                    value: function() {
                        return new E.a([new w.SaveErrorViewModel])
                    }
                }, {
                    key: "_startSave",
                    value: function() {
                        this._triggerSaveStart(),
                            this._lockEditing()
                    }
                }, {
                    key: "_endSave",
                    value: function() {
                        this._triggerSaveEnd(),
                            this._releaseEditing()
                    }
                }, {
                    key: "_lockEditing",
                    value: function() {
                        this._editingMediator.set({
                            navigation: !1,
                            saving: !0
                        });
                        var e = this._editingMediator.lockEditing();
                        this._editingLocksIds.push(e)
                    }
                }, {
                    key: "_releaseEditing",
                    value: function() {
                        this._editingMediator.set({
                            navigation: !0,
                            saving: !1
                        });
                        var e = this._editingLocksIds.pop();
                        this._editingMediator.releaseEditing(e)
                    }
                }, {
                    key: "_setSaveGroupStarted",
                    value: function(e) {
                        this._savingGroups.add(e),
                            this._triggerSaveGroupStart(e)
                    }
                }, {
                    key: "_setSaveGroupEnded",
                    value: function(e) {
                        this._savingGroups.delete(e),
                            this._triggerSaveGroupEnd(e)
                    }
                }, {
                    key: "_isGroupLocked",
                    value: function(e) {
                        return this._lockedGroups.has(e)
                    }
                }, {
                    key: "_lockGroup",
                    value: function(e) {
                        this._lockedGroups.add(e)
                    }
                }, {
                    key: "_releaseGroupLock",
                    value: function(e) {
                        this._lockedGroups.delete(e)
                    }
                }, {
                    key: "getGroupSaveErrors",
                    value: function(e) {
                        var t = this._saveErrors.get(e),
                            n = [];
                        return t && (n = this._collateErrors(t.errors)),
                            n
                    }
                }, {
                    key: "getAllErrorsByGroupsIds",
                    value: function() {
                        var e = this;
                        return Array.from(this._saveErrors.keys()).reduce(function(t, n) {
                            return t[n] = e.getGroupSaveErrors(n),
                                t
                        }, {})
                    }
                }, {
                    key: "getGroupSaveStatus",
                    value: function(e) {
                        return this._savingGroups.has(e)
                    }
                }, {
                    key: "_collateErrors",
                    value: function(e) {
                        for (var t = [], n = b.a.groupBy(e, function(e) {
                                return e.get("code")
                            }), i = 0, r = Object.keys(n); i < r.length; i++) {
                            var s = (e = n[r[i]])[0].clone();
                            e.length > 1 && s.set({
                                    geometry: null,
                                    collatedCount: e.length,
                                    ignorable: e.every(function(e) {
                                        return e.get("ignorable")
                                    })
                                }),
                                t.push(s)
                        }
                        return t
                    }
                }, {
                    key: "saveGroup",
                    value: function(e, t) {
                        var n = this;
                        if (!this._isGroupLocked(e)) {
                            this._lockGroup(e),
                                this._startSave();
                            var i = this._actionManager.getActionsByGroupId(e);
                            this._saveGroupTask(O({}, t, {
                                actions: i,
                                groupId: e,
                                clearAllActions: !1
                            })).then(function(t) {
                                n._releaseGroupLock(e),
                                    n._endSave();
                                var i = n.getGroupSaveErrors(e);
                                return i && i.length > 0 ? n._triggerSaveFail() : n._triggerSaveSuccess(),
                                    t
                            })
                        }
                    }
                }, {
                    key: "isIgnorable",
                    value: function(e) {
                        var t = this.getGroupSaveErrors(e);
                        return !t || t.every(function(e) {
                            return e.get("ignorable")
                        })
                    }
                }, {
                    key: "_clearAllErrors",
                    value: function() {
                        var e = this;
                        this._saveErrors.forEach(function(t, n) {
                            e._clearGroupErrors(n)
                        })
                    }
                }, {
                    key: "_clearGroupErrors",
                    value: function(e) {
                        this._saveErrors.has(e) && (this._saveErrors.delete(e),
                            this._triggerGroupRemoveErrors(e))
                    }
                }, {
                    key: "_setGroupErrors",
                    value: function(e, t) {
                        this._saveErrors.set(e, t),
                            this._triggerGroupSetErrors(e, t)
                    }
                }, {
                    key: "save",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            n = (new Date).getTime(),
                            i = 0;
                        this._startSave();
                        var s = t.actionsGroups || this._actionManager.getActionsByGroupsIds(),
                            o = Object.entries(s).map(function(e) {
                                var n = r()(e, 2),
                                    i = n[0],
                                    s = n[1];
                                return O({}, t, {
                                    groupId: i,
                                    actions: s,
                                    clearAllActions: !1
                                })
                            }),
                            a = 0,
                            l = new T({
                                maxParallel: I.MAX_PARALLEL_SAVES
                            }),
                            u = o.filter(function(t) {
                                return !e._isGroupLocked(t.groupId)
                            }).map(function(t) {
                                var n = t.groupId;
                                return e._lockGroup(n),
                                    function() {
                                        return e._saveGroupTask(t).then(function(r) {
                                            e._releaseGroupLock(n),
                                                i += t.actions.length,
                                                a++,
                                                e.trigger(C.SAVE_PROGRESS, {
                                                    finished: a,
                                                    total: o.length,
                                                    percent: a / o.length
                                                })
                                        })
                                    }
                            });
                        return l.all(u).then(function(t) {
                            e._onParallelSaveFinish();
                            var r = (new Date).getTime() - n,
                                s = t.length;
                            return A.reportAnalytic.save("duration", r),
                                A.reportAnalytic.save("actions", i, r),
                                A.reportAnalytic.save("groups", s, r),
                                A.reportAnalytic.save("failed_groups", s, e._saveErrors.size),
                                t
                        })
                    }
                }, {
                    key: "_onParallelSaveFinish",
                    value: function() {
                        this._actionManager.clearGroupsWithOnlyRevertedChanges(),
                            this._endSave(),
                            this.hasErrors() ? this._triggerSaveFail() : this._triggerSaveSuccess()
                    }
                }, {
                    key: "hasErrors",
                    value: function() {
                        return this._saveErrors.size > 0
                    }
                }, {
                    key: "hasWarnings",
                    value: function() {
                        return b.a.flatten(Object.values(this.getAllErrorsByGroupsIds())).some(function(e) {
                            return e.get("ignorable")
                        })
                    }
                }, {
                    key: "hasUnsavedChanges",
                    value: function() {
                        return this._actionManager.canSave()
                    }
                }, {
                    key: "_reportErrors",
                    value: function() {
                        (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).forEach(function(e) {
                            var t = e.get("code");
                            A.reportAnalytic.saveError(t)
                        })
                    }
                }, {
                    key: "_triggerSaveGroupStart",
                    value: function(e) {
                        this.trigger(C.SAVE_GROUP_START, e)
                    }
                }, {
                    key: "_triggerSaveGroupEnd",
                    value: function(e) {
                        this.trigger(C.SAVE_GROUP_END, e)
                    }
                }, {
                    key: "_triggerSaveGroupSuccess",
                    value: function(e) {
                        this.trigger(C.SAVE_GROUP_SUCCESS, e)
                    }
                }, {
                    key: "_triggerSaveGroupFail",
                    value: function(e) {
                        this.trigger(C.SAVE_GROUP_FAIL, e)
                    }
                }, {
                    key: "_triggerGroupSetErrors",
                    value: function(e, t) {
                        this.trigger(C.GROUP_SET_ERRORS, {
                            groupId: e,
                            error: t
                        })
                    }
                }, {
                    key: "_triggerGroupRemoveErrors",
                    value: function(e) {
                        this.trigger(C.GROUP_REMOVE_ERRORS, e)
                    }
                }, {
                    key: "_triggerSaveStart",
                    value: function() {
                        this.trigger(C.SAVE_START)
                    }
                }, {
                    key: "_triggerSaveEnd",
                    value: function() {
                        this.trigger(C.SAVE_END)
                    }
                }, {
                    key: "_triggerSaveSuccess",
                    value: function() {
                        this.trigger(C.SAVE_SUCCESS)
                    }
                }, {
                    key: "_triggerSaveFail",
                    value: function() {
                        this.trigger(C.SAVE_FAIL)
                    }
                }]),
                t
        }(_.a.Object);
    t.b = R
}, function(e, t, n) {
    "use strict";
    t.a = {
        OPEN: "open",
        SOLVED: "solved",
        NOT_IDENTIFIED: "not-identified",
        CLOSED_AUTOMATICALLY: "closed-automatically"
    }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
        return (i = Object.assign || function(e) {
            for (var t, n = 1, i = arguments.length; n < i; n++)
                for (var r in t = arguments[n])
                    Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
            return e
        }).apply(this, arguments)
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = {
        EDIT_GEOMETRY: 1,
        EDIT_PROPERTIES: 2,
        DELETE: 4,
        EDIT_EMPTY_STREET: 8,
        SPLIT_DIRECTIONS: 12,
        SET_UNKNOWN_DIRECTIONS: 32,
        EDIT_HOUSE_NUMBERS: 64,
        FORCE_HOUSE_NUMBERS: 128,
        EDIT_CONNECTIONS: 256,
        EDIT_ROUTING_ROAD_TYPES: 512,
        EDIT_CLOSURES: 1024,
        EDIT_HEADLIGHTS_REMINDER: 2048,
        EDIT_AVERAGE_SPEED_CAMERA: 4096,
        EDIT_LANES: 8192
    };
    t.SegmentsPermissions = r;
    var s = {
        EDIT_GEOMETRY: 1,
        DELETE: 2,
        EDIT_OPEN_TURNS: 4,
        EDIT_CLOSE_TURNS: 8
    };
    t.NodesPermissions = s;
    var o = {
        EDIT_GEOMETRY: 1,
        EDIT_PROPERTIES: 2,
        DELETE: 4,
        EDIT_UPDATE_REQUESTS: 8,
        EDIT_EXTERNAL_PROVIDERS: 16
    };
    t.LandmarksPermissions = o;
    var a = {
        DELETE: 1,
        UPDATE: 2
    };
    t.BigJunctionsPermissions = a;
    var l = {
        EDIT_PROPERTIES: 1
    };
    t.CitiesPermissions = l;
    var u = {
        EDIT: 1,
        FORCE_CLOSE: 2
    };
    t.MapProblemsPermissions = u;
    var c = {
        EDIT_GEOMETRY: 1,
        EDIT_PROPERTIES: 2,
        DELETE: 4
    };
    t.SpeedCamerasPermissions = c;
    var d = {
        EDIT: 1,
        FORCE_CLOSE: 2
    };
    t.UpdateRequestsPermissions = d;
    var h = {
        EDIT_GEOMETRY: 1,
        EDIT_PROPERTIES: 2,
        DELETE: 4
    };
    t.CommentsPermissions = h;
    t.RestrictedDrivingAreaPermissions = {
        EDIT_GEOMETRY: 1,
        EDIT_PROPERTIES: 2,
        DELETE: 4
    };
    t.ManagedAreaPermissions = {
        EDIT: 1
    };
    t.RoadClosurePermissions = {
        EDIT: 1
    };
    i({}, r, s, o, a, l, u, c, d, h)
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = function(e) {
            function t(t, n) {
                void 0 === n && (n = {
                    description: ""
                });
                var i = e.call(this, n) || this;
                return i.subActions = t || [],
                    i._description = n.description,
                    i
            }
            return r(t, e),
                t.prototype.undoSupported = function() {
                    for (var e = 0, t = this.subActions.length; e < t; e++)
                        if (!this.subActions[e].undoSupported())
                            return !1;
                    return !0
                },
                t.prototype.setModel = function(t) {
                    e.prototype.setModel.call(this, t);
                    for (var n = 0, i = this.subActions.length; n < i; n++)
                        this.subActions[n].setModel(t)
                },
                t.prototype.getFocusFeatures = function() {
                    return o.default.uniq(o.default.flatten(this.subActions.map(function(e) {
                        return e.getFocusFeatures()
                    })))
                },
                t
        }(s(n(27)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };

    function o(e) {
        switch (e) {
            case 0:
                return 1;
            case 1:
                return 2;
            case 2:
                return 3;
            case 3:
                return 4;
            case 4:
                return 5;
            case 5:
            case 6:
                return 6;
            default:
                return 1
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "normalizedLevel", {
                get: function() {
                    return o(this.rank)
                },
                enumerable: !0,
                configurable: !0
            }),
            t.normalizeLevel = function(e) {
                return o(e)
            },
            t.prototype.isStaffUser = function() {
                return this.rank >= t.StaffRank
            },
            t.MaxRank = 5,
            t.StaffRank = 6,
            t
    }(s(n(43)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.IMAGE_SIZE = {
            ORIGINAL: 0,
            SMALL: 32,
            MEDIUM: 100,
            WEB: 347,
            MOBILE: 700,
            BIG: 700
        }
}, function(e, t, n) {
    "use strict";
    var i = n(8),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(34),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(143),
        _ = n.n(v),
        y = n(0),
        b = n.n(y),
        E = n(27),
        w = n.n(E),
        S = n(56),
        k = n(241),
        T = n(77),
        I = n.n(T),
        A = n(183),
        M = n(245),
        O = n(165),
        C = n(200),
        R = n(30),
        D = n(104),
        L = n.n(D),
        P = n(33),
        N = n(21),
        x = function() {
            function e() {
                l()(this, e),
                    this.currentContainer = {},
                    this.currentContainer._subActions = [],
                    this.root = this.currentContainer,
                    this.previousContainers = []
            }
            return o()(e, [{
                    key: "visit",
                    value: function(e) {
                        this.addAction(e)
                    }
                }, {
                    key: "beforeEnter",
                    value: function(e) {
                        if (!e.dontSerialize) {
                            var t = {};
                            this.previousContainers.push(this.currentContainer),
                                this.currentContainer._subActions.push(t),
                                this.currentContainer = t,
                                t.name = e.constructor.name,
                                t._subActions = []
                        }
                        return !e.dontSerialize
                    }
                }, {
                    key: "afterLeave",
                    value: function(e) {
                        e.dontSerialize || (this.currentContainer = this.previousContainers.pop())
                    }
                }, {
                    key: "addAction",
                    value: function(e) {
                        var t;
                        e.dontSerialize || (t = e.serialize(),
                            null !== (t = P.deepClone(t)) && (t instanceof Array ? (t = this.serializeGeometries(t),
                                this.currentContainer._subActions = this.currentContainer._subActions.concat(t)) : (t = this.serializeGeometries(t),
                                this.currentContainer._subActions.push(t))))
                    }
                }, {
                    key: "serializeGeometries",
                    value: function(e) {
                        if ("object" === L()(e) && null !== e) {
                            if (Array.isArray(e)) {
                                for (var t = 0; t < e.length; t++)
                                    e[t] = this.serializeGeometries(e[t]);
                                return e
                            }
                            if (e instanceof OL.Geometry)
                                return e = N.unproject(e),
                                    N.toGeoJSON(e);
                            for (var n in e)
                                e.hasOwnProperty(n) && (e[n] = this.serializeGeometries(e[n]));
                            return e
                        }
                        return e
                    }
                }, {
                    key: "getResult",
                    value: function() {
                        return this.root._subActions[0]
                    }
                }]),
                e
        }(),
        V = n(18),
        j = n(412),
        U = n(172);
    n.d(t, "a", function() {
        return B
    });
    var F = {
            id: "pending.road_data"
        },
        B = function(e) {
            function t(e) {
                var n;
                return l()(this, t),
                    n = c()(this, h()(t).call(this, "Save Error")),
                    Error.captureStackTrace && Error.captureStackTrace(g()(n), t),
                    n.errors = e,
                    n
            }
            return m()(t, e),
                t
        }(_()(Error)),
        G = function() {
            function e(t) {
                l()(this, e),
                    this.lastReadRequest = null,
                    this.app = t.app,
                    this.descartesClient = t.descartesClient,
                    this.editingMediator = t.editingMediator,
                    this.globalVent = t.globalVent,
                    this.map = t.map,
                    this.model = t.model,
                    this.selectionManager = t.selectionManager,
                    this.snapshotManager = t.snapshotManager,
                    this.events = new OpenLayers.Events(this),
                    this.snapshotManager.on("change:state", this.reload, this),
                    this.selectionManager.events.on({
                        selectionchanged: this._onSelectionChange,
                        scope: this
                    })
            }
            return o()(e, [{
                    key: "onLayerSwitcherChanged",
                    value: function(e) {
                        var t = this;
                        Object.keys(e).forEach(function(n) {
                                Object(C.onTogglerChanged)(t.model, t.map, n, e[n])
                            }),
                            this.updateModel()
                    }
                }, {
                    key: "bindToMap",
                    value: function(e) {
                        var t = this;
                        e.getMapEventsListener().on({
                            moveend: function() {
                                t.updateModel()
                            }
                        })
                    }
                }, {
                    key: "parseData",
                    value: function(e) {
                        (new I.a).read(e)
                    }
                }, {
                    key: "reload",
                    value: function() {
                        this.model.clearAllData(),
                            A.updateOnReload(),
                            this.updateModel()
                    }
                }, {
                    key: "updateModel",
                    value: function() {
                        var e = this.map.calculateBounds(),
                            t = this.descartesClient.getExpandedDataBounds(e);
                        if (null !== t) {
                            this._clearRepositoriesByZoom(this.map.getZoom());
                            var n = A.getFeaturesRequestParams(W.togglerTree.getVisibilityState(), this.model.getRepositories(), this.model.venues, this.model.segmentHouseNumbers, e.clone(), this.map.getZoom());
                            if (!b.a.isEmpty(Object.keys(n))) {
                                this.app.isSandboxMode() && (n.sandbox = !0);
                                var i = this.map.getZoom(),
                                    r = A.isPartialFeaturesRequest(n, i);
                                this._logFeaturesRequest(n, t, i, r),
                                    this.sendReadFeatures(n, t, r)
                            }
                        }
                    }
                }, {
                    key: "_clearRepositoriesByZoom",
                    value: function(e) {
                        var t = this;
                        this.model.getRepositories().forEach(function(n) {
                            if (e < Object(U.getMinDisplayZoom)(n.getRepositoryName())) {
                                var i = t.editingMediator.getObjectsInUseGroupedByRepository(),
                                    r = n.getRepositoryName(),
                                    s = i[r];
                                O.onRepositoryCleared(r),
                                    n.clear({
                                        keepUnsaved: !0,
                                        keepSelected: !0,
                                        objectsToKeep: s
                                    })
                            }
                        })
                    }
                }, {
                    key: "_logFeaturesRequest",
                    value: function(e, t, n, i) {
                        "GET Features zoom=".concat(n, " bounds=").concat(t, " keepObjects=").concat(i);
                        var r = Object.assign({}, e);
                        null != r.roadTypes && (r.roadTypes = r.roadTypes === M.ALL_ROAD_TYPES ? "ALL" : r.roadTypes.join(","))
                    }
                }, {
                    key: "_isEqualToLastRequest",
                    value: function(e, t) {
                        return null !== this.lastReadRequest && b.a.isEqual(this.lastReadRequest.filter, e) && t.equals(this.lastReadRequest.bounds)
                    }
                }, {
                    key: "sendReadFeatures",
                    value: function(e, t, n) {
                        var i = this;
                        if (!this._isEqualToLastRequest(e, t))
                            return this.events.triggerEvent("loadstart"),
                                this.globalVent.trigger("operationPending", {
                                    operation: F
                                }),
                                null != this.model.lastTransactionID && (e.mapVersionID = this.model.lastTransactionID),
                                this.snapshotManager.isSnapshotOn() && (e.snapshot = !0),
                                this.lastReadRequest = {
                                    filter: e,
                                    bounds: t
                                },
                                this.app.set("loadingFeatures", !0),
                                this.descartesClient.getFeatures(this.map.calculateBounds(), e).then(function(r) {
                                    i.parseData(r);
                                    var s = i.editingMediator.getObjectsInUseGroupedByRepository();
                                    return i.updateFeaturesState(r, t, e),
                                        i.model.mergeGetFeaturesResponse(t, r, n, s)
                                }).catch(function(e) {
                                    "abort" !== e.reason && console.error("Error getting features", e)
                                }).finally(function() {
                                    i.events.triggerEvent("loadend"),
                                        i.globalVent.trigger("operationDone", {
                                            operation: F
                                        }),
                                        i.app.set("loadingFeatures", !1),
                                        i.lastReadRequest = null
                                })
                    }
                }, {
                    key: "updateFeaturesState",
                    value: function(e, t, n) {
                        var i = Object.keys(e),
                            r = e[S.RepositoryName.SEGMENTS],
                            s = e[S.RepositoryName.VENUES],
                            o = [];
                        null != r && (o = r.roadTypes || []);
                        var a = null;
                        null != s && (a = s.venueLevel),
                            A.updateOnResponse(i, o, a, t.clone(), n)
                    }
                }, {
                    key: "save",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            n = t.actions || this.model.actionManager.getActions(),
                            i = {
                                actions: this._serializeActions(n)
                            };
                        return this.descartesClient.postFeatures(i, this.model.getChangesExtent(), t.ignoreWarnings).then(function(n) {
                            return e._processSaveResponse(n, t), {
                                pendingEdits: e._getPendingEdits(n),
                                saveCount: e._getSaveCount(n),
                                unsavedFeatures: n.unsavedFeatures
                            }
                        }).catch(function(e) {
                            if (e instanceof R.FetchError) {
                                var t, n = Object(j.parseSaveErrorResponse)(e.response),
                                    i = n[0];
                                throw i && (t = i.get("code")),
                                    V.reportAnalytic.generalAction("save_error", t),
                                    new B(n)
                            }
                            throw e
                        })
                    }
                }, {
                    key: "_serializeActions",
                    value: function(e) {
                        var t = new x,
                            n = new w.a;
                        return n.subActions = e,
                            n.accept(t),
                            t.getResult()
                    }
                }, {
                    key: "_getPendingEdits",
                    value: function(e) {
                        var t;
                        return t = e.pendingEdits ? e.pendingEdits.venues : [], {
                            venues: this.model.venues.getByIds(t)
                        }
                    }
                }, {
                    key: "_getSaveCount",
                    value: function(e) {
                        for (var t = {}, n = [S.RepositoryName.SEGMENTS, S.RepositoryName.NODES, S.RepositoryName.VENUES, S.RepositoryName.BIG_JUNCTIONS], i = 0; i < n.length; i++) {
                            var r = n[i],
                                s = e[r] || {};
                            t[r] = Object.keys(s).length
                        }
                        return t
                    }
                }, {
                    key: "_processSaveResponse",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = t.actions,
                            i = void 0 === n ? [] : n,
                            r = t.clearAllActions,
                            s = void 0 === r || r,
                            o = null != e.userLimits,
                            a = null != e.connections,
                            l = null != e.segmentsIdMapping;
                        this._updateRepositoriesFromSaveResponse(e),
                            this._deleteObjectRepositoriesFromSaveResponse(e),
                            o && this._updateUserQuotasAfterSave(e.userLimits),
                            l && this._updateTurnGraphSegmentsIdMapping(e.segmentsIdMapping),
                            a && this._updateTurnGraphConnections(e.connections),
                            s ? this.model.actionManager.clear() : this.model.actionManager.clearGroupsOfActions(i),
                            this.model.setLastTransactionID(e.mapVersionID)
                    }
                }, {
                    key: "_getOrderedRepositoriesFromSaveResponse",
                    value: function(e) {
                        var t = this,
                            n = Object.keys(e);
                        return Object(k.sortRepositoriesByProcessOrder)(n).filter(function(e) {
                            return t.model.isRepository(e)
                        }).map(function(e) {
                            return t.model[e]
                        })
                    }
                }, {
                    key: "_updateRepositoriesFromSaveResponse",
                    value: function(e) {
                        var t = this;
                        this._getOrderedRepositoriesFromSaveResponse(e).forEach(function(n) {
                            var i = n.name,
                                r = e[i];
                            t._updateRepositoryFromServerResponse(n, r)
                        })
                    }
                }, {
                    key: "_deleteObjectRepositoriesFromSaveResponse",
                    value: function(e) {
                        var t = this;
                        this._getOrderedRepositoriesFromSaveResponse(e).reverse().forEach(function(n) {
                            var i = n.name,
                                r = e[i];
                            t._deleteObjectRepositoryFromServerResponse(n, r)
                        })
                    }
                }, {
                    key: "_updateRepositoryFromServerResponse",
                    value: function(e, t) {
                        var n = this;
                        Object.keys(t).forEach(function(i) {
                            var r = t[i],
                                s = e.getObjectById(i);
                            s && null !== r ? n._updateObjectInRepository(s, e, r, i) : r && n._createNewObjectInRepository(r, e)
                        })
                    }
                }, {
                    key: "_deleteObjectRepositoryFromServerResponse",
                    value: function(e, t) {
                        var n = this;
                        Object.keys(t).forEach(function(i) {
                            var r = t[i],
                                s = e.getObjectById(i);
                            s && null === r && n._deletedObjectInRepository(s, e)
                        })
                    }
                }, {
                    key: "_createNewObjectInRepository",
                    value: function(e, t) {
                        var n = r()({}, t.name, {
                            objects: [e]
                        });
                        this.parseData(n);
                        var i = n[t.name].objects[0];
                        t.put(i)
                    }
                }, {
                    key: "_deletedObjectInRepository",
                    value: function(e, t) {
                        e.state = OpenLayers.State.DELETE,
                            t.remove(e)
                    }
                }, {
                    key: "_updateObjectInRepository",
                    value: function(e, t, n, i) {
                        var r = n.id,
                            s = this._didIdChangedByServer(i, r),
                            o = b.a.omit(n, "id");
                        t.mergeObjectAttributes(e, o),
                            s && (t.changeObjectID(e, r),
                                this.editingMediator.onObjectChangedId(t.getRepositoryName(), {
                                    newID: r,
                                    oldID: i
                                }))
                    }
                }, {
                    key: "_didIdChangedByServer",
                    value: function(e, t) {
                        return String(e) !== String(t)
                    }
                }, {
                    key: "_updateUserQuotasAfterSave",
                    value: function(e) {
                        this.model.loginManager.resetUserLimits(e)
                    }
                }, {
                    key: "_updateTurnGraphConnections",
                    value: function(e) {
                        this.model.getTurnGraph().fromDescartes(e)
                    }
                }, {
                    key: "_updateTurnGraphSegmentsIdMapping",
                    value: function(e) {
                        this.model.getTurnGraph().deleteNewSegments(Object.keys(e))
                    }
                }, {
                    key: "_onSelectionChange",
                    value: function() {
                        return this.app.set("featureSelected", this.selectionManager.hasSelectedFeatures()),
                            this.app.trigger("selectionChanged", {
                                selection: this.selectionManager.getSelectedFeatures()
                            })
                    }
                }]),
                e
        }();
    Object.assign(G.prototype, {
        CLASS_NAME: "Waze.AppController"
    });
    t.b = G
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(94),
        o = r(n(121));
    t.DATE_FORMAT = "YYYY-MM-DD";
    var a = {
        SUNDAY: "SUNDAY",
        MONDAY: "MONDAY",
        TUESDAY: "TUESDAY",
        WEDNESDAY: "WEDNESDAY",
        THURSDAY: "THURSDAY",
        FRIDAY: "FRIDAY",
        SATURDAY: "SATURDAY"
    };
    t.WEEKDAYS = a;
    var l = ((i = {})[a.MONDAY] = 1,
            i[a.TUESDAY] = 2,
            i[a.WEDNESDAY] = 3,
            i[a.THURSDAY] = 4,
            i[a.FRIDAY] = 5,
            i[a.SATURDAY] = 6,
            i[a.SUNDAY] = 7,
            i),
        u = [a.SUNDAY, a.MONDAY, a.TUESDAY, a.WEDNESDAY, a.THURSDAY, a.FRIDAY, a.SATURDAY];
    t.WEEKDAY_ORDINALS = u;
    var c = {
        ODD_DAYS: 1431655765,
        EVEN_DAYS: 715827882
    };
    t.DAYS_OF_MONTH = c;
    var d = function() {
        function e(e) {
            var t = void 0 === e ? {} : e,
                n = t.startDate,
                i = void 0 === n ? null : n,
                r = t.endDate,
                s = void 0 === r ? null : r,
                o = t.fromTime,
                a = void 0 === o ? null : o,
                l = t.toTime,
                u = void 0 === l ? null : l,
                c = t.weekdays,
                d = void 0 === c ? 0 : c,
                h = t.daysOfMonth,
                p = void 0 === h ? null : h;
            this._startDate = i,
                this._endDate = s,
                this._fromTime = a,
                this._toTime = u,
                this._weekdays = d,
                this._daysOfMonth = p,
                Object.freeze(this)
        }
        return e.getWeekdaysBitValue = function(e) {
                return void 0 === e && (e = []),
                    e.reduce(function(e, t) {
                        return e | 1 << l[t] - 1
                    }, 0)
            },
            e.getAlwaysOn = function() {
                return new e({
                    startDate: null,
                    endDate: null,
                    fromTime: null,
                    toTime: null,
                    weekdays: null,
                    daysOfMonth: null
                })
            },
            e.prototype.equals = function(e) {
                return this._startDate === e._startDate && this._endDate === e._endDate && this._fromTime === e._fromTime && this._toTime === e._toTime && this._weekdays === e._weekdays && this._daysOfMonth === e._daysOfMonth
            },
            e.prototype.with = function(t) {
                return void 0 === t && (t = {}),
                    new e(Object.assign(this.toJSON(), t))
            },
            e.prototype.toJSON = function() {
                return {
                    startDate: this._startDate,
                    endDate: this._endDate,
                    fromTime: this._fromTime,
                    toTime: this._toTime,
                    weekdays: this._weekdays,
                    daysOfMonth: this._daysOfMonth
                }
            },
            e.prototype._isOnWeekday = function(e) {
                var t = l[e] - 1;
                return new o.default(this._weekdays).isPowerOf2Enabled(t)
            },
            e.prototype.isAllDay = function() {
                return null === this._fromTime && null === this._toTime
            },
            e.prototype.isAllWeek = function() {
                return null == this._weekdays || 127 === this._weekdays
            },
            e.prototype.isDuringDates = function() {
                return this.hasStartDate() || this.hasEndDate()
            },
            e.prototype.getStartDate = function() {
                return this._startDate
            },
            e.prototype.getEndDate = function() {
                return this._endDate
            },
            e.prototype.getFromTime = function() {
                return this._fromTime
            },
            e.prototype.getToTime = function() {
                return this._toTime
            },
            e.prototype.hasStartDate = function() {
                return null != this._startDate
            },
            e.prototype.hasEndDate = function() {
                return null != this._endDate
            },
            e.prototype.getWeekdays = function() {
                var e = this,
                    t = Object.keys(a);
                return this.isAllWeek() ? t : t.filter(function(t) {
                    return e._isOnWeekday(t)
                })
            },
            e.prototype.isDateRangeBefore = function(e) {
                return !!this.hasEndDate() && s.moment(this.getEndDate(), "YYYY-MM-DD").isBefore(s.moment(e), "day")
            },
            e.prototype.hasDaysOfMonthFiltering = function() {
                return null != this._daysOfMonth
            },
            e.prototype.isOnOddDaysOfMonth = function() {
                return !!this.hasDaysOfMonthFiltering() && new o.default(this._daysOfMonth).isEnabled(c.ODD_DAYS)
            },
            e.prototype.isOnEvenDaysOfMonth = function() {
                return !!this.hasDaysOfMonthFiltering() && new o.default(this._daysOfMonth).isEnabled(c.EVEN_DAYS)
            },
            e
    }();
    t.RestrictionTimeFrame = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(168)),
        l = o(n(81)),
        u = s(n(38)),
        c = s(n(126)),
        d = s(n(186)),
        h = s(n(187));
    t.CHANGE_EVENT = "change";
    var p = function(e) {
        function t(t) {
            var n = e.call(this) || this;
            return n.roadGraph = t,
                n.adjacencyList = new Map,
                n.reverseAdjacencyList = new Map,
                n
        }
        return r(t, e),
            t.prototype.getTurn = function(e, t) {
                var n = null,
                    i = this.adjacencyList.get(e.getID());
                return i && (n = i[t.getID()]),
                    n || (n = l.default.createUnknown()),
                    new a.default(e, t, n)
            },
            t.prototype._putTurnInList = function(e, t, n, i) {
                var r = e.get(t);
                r || (r = {},
                        e.set(t, r)),
                    r[n] = i
            },
            t.prototype._putTurnInBothLists = function(e) {
                var t = e.getTurnData();
                this._putTurnInList(this.adjacencyList, e.getFromVertex().getID(), e.getToVertex().getID(), t),
                    this._putTurnInList(this.reverseAdjacencyList, e.getToVertex().getID(), e.getFromVertex().getID(), t)
            },
            t.prototype._removeTurnFromList = function(e, t, n) {
                var i = e.get(t);
                i && (delete i[n],
                    0 === Object.keys(i).length && e.delete(t))
            },
            t.prototype.putTurn = function(e) {
                var t = e.getTurnData();
                null === t || t.isUnknown() ? this._deleteTurn(e) : (this._putTurnInBothLists(e),
                    this.trigger("change", e))
            },
            t.prototype._deleteTurn = function(e) {
                this._removeTurnFromList(this.adjacencyList, e.getFromVertex().getID(), e.getToVertex().getID()),
                    this._removeTurnFromList(this.reverseAdjacencyList, e.getToVertex().getID(), e.getFromVertex().getID()),
                    this.trigger("change", e)
            },
            t.prototype.getTurnThroughNode = function(e, t, n) {
                var i = u.default.for(t, e),
                    r = u.default.for(n, e).getOpposite();
                return this.getTurn(i, r)
            },
            t.prototype._getVerticesForPrimaryIndex = function(e, t) {
                var n = e.get(t);
                return n ? Object.keys(n).map(function(e) {
                    return u.default.fromID(e)
                }) : []
            },
            t.prototype.getTurnsFrom = function(e) {
                var t = this;
                return this._getVerticesForPrimaryIndex(this.adjacencyList, e.getID()).map(function(n) {
                    return t.getTurn(e, n)
                }).filter(function(e) {
                    return !e.getTurnData().isUnknown()
                })
            },
            t.prototype.getLegalTrivialTurnsFrom = function(e) {
                var t = this;
                return this.roadGraph.getConnectedVertices(e).filter(function(n) {
                    return t.roadGraph.isTurnLegal(e, n)
                }).map(function(n) {
                    return t.getTurn(e, n)
                })
            },
            t.prototype.getTurnsTo = function(e) {
                var t = this;
                return this._getVerticesForPrimaryIndex(this.reverseAdjacencyList, e.getID()).map(function(n) {
                    return t.getTurn(n, e)
                }).filter(function(e) {
                    return !e.getTurnData().isUnknown()
                })
            },
            t.prototype.clear = function() {
                this.adjacencyList.clear(),
                    this.reverseAdjacencyList.clear()
            },
            t.prototype._parseDescartesLanes = function(e, t) {
                if (null != t.lanes) {
                    var n = new c.default(t.lanes.fromLaneIndex, t.lanes.toLaneIndex, t.lanes.laneArrowAngle, t.lanes.angleOverride);
                    return e.withLanes(n)
                }
                return e
            },
            t.prototype._parseDescartesTurnData = function(e) {
                var t;
                if ("boolean" == typeof e)
                    t = e ? l.default.createAllowed() : l.default.createDisallowed();
                else {
                    var n = void 0;
                    n = e.navigable ? l.TURN_STATE.ALLOWED : l.TURN_STATE.DISALLOWED;
                    var i = e.restrictions.map(function(e) {
                        return new d.default(e)
                    });
                    t = l.default.create(n, i, e.instructionOpCode, e.segmentPath),
                        t = this._parseDescartesLanes(t, e)
                }
                return t
            },
            t.prototype.fromDescartes = function(e) {
                var t = this;
                Object.keys(e).forEach(function(n) {
                        Object.keys(e[n]).forEach(function(i) {
                            var r = t._parseDescartesTurnData(e[n][i]),
                                s = new a.default(u.default.fromID(n), u.default.fromID(i), r);
                            t._putTurnInBothLists(s)
                        })
                    }),
                    this.trigger("change")
            },
            t.prototype._removeVertexFromList = function(e, t) {
                e.forEach(function(e) {
                        delete e[t]
                    }),
                    e.delete(t)
            },
            t.prototype._removeVertex = function(e) {
                this._removeVertexFromList(this.adjacencyList, e.getID()),
                    this._removeVertexFromList(this.reverseAdjacencyList, e.getID())
            },
            t.prototype.deleteNewSegments = function(e) {
                var t = this;
                e.forEach(function(e) {
                    t._removeVertex(u.default.forwardOf(e)),
                        t._removeVertex(u.default.reverseOf(e))
                })
            },
            t.prototype.toJSON = function() {
                var e = {};
                return this.adjacencyList.forEach(function(t, n) {
                        var i = Object.keys(t).filter(function(e) {
                            return null !== t[e]
                        }).map(function(e) {
                            return t[e].isAllowed() || (e += "!"),
                                e
                        });
                        i.length > 0 && (e[n] = i)
                    }),
                    e
            },
            t
    }(h.default);
    t.default = p
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = i(n(43)),
        a = r(n(704)),
        l = function() {
            function e() {
                this._typeToClass = s.default.clone(a.TYPE_TO_CLASS)
            }
            return e.prototype.read = function(e) {
                    var t = this;
                    return Object.keys(e).forEach(function(n) {
                            var i = e[n];
                            if (Object.keys(i).includes("objects")) {
                                var r = i.objects,
                                    s = t._parseObjects(n, r);
                                Object.assign(e[n], {
                                    objects: s
                                })
                            }
                        }),
                        e
                },
                e.prototype._parseObjects = function(e, t) {
                    var n = a.TYPE_TO_FACTORY[e];
                    if (null != n)
                        return t.map(function(e) {
                            return n.create(e)
                        });
                    var i = this._typeToClass[e] || o.default;
                    return t.map(function(e) {
                        return new i(e, {
                            parse: !0
                        })
                    })
                },
                e
        }();
    t.Serializer = l,
        t.default = l
}, function(e, t, n) {
    "use strict";
    var i = n(7),
        r = n.n(i),
        s = n(69),
        o = n(113),
        a = n.n(o),
        l = n(2),
        u = n.n(l),
        c = n(1),
        d = n.n(c),
        h = n(20),
        p = function() {
            function e(t, n, i) {
                u()(this, e),
                    this.info = t,
                    this.layer = n,
                    this.displayOptions = i
            }
            return d()(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawSessions()
                    }
                }, {
                    key: "_drawSessions",
                    value: function() {
                        return this._drawMatchingSegments(),
                            this.displayOptions.allSessions && this._drawAllSessions(),
                            this.displayOptions.averageSession && this._drawAverageSession(),
                            this._drawPins()
                    }
                }, {
                    key: "_drawMatchingSegments",
                    value: function() {
                        if (this.info.average.nextSegGeom && this.layer.driveRenderer.drawMatchedSegment(this.info.average.nextSegGeom),
                            this.info.average.prevSegGeom)
                            return this.layer.driveRenderer.drawMatchedSegment(this.info.average.prevSegGeom)
                    }
                }, {
                    key: "_drawAllSessions",
                    value: function() {
                        var e = this;
                        return this.info.sessions.map(function(t) {
                            return h.getVertices(t.geometry).map(function(t) {
                                return e.layer.driveRenderer.drawSession(t)
                            })
                        })
                    }
                }, {
                    key: "_drawAverageSession",
                    value: function() {
                        if (this.info.average.geometry)
                            return this.layer.driveRenderer.drawDisconnect(h.getVertex(this.info.average.geometry, 1)),
                                this.layer.driveRenderer.drawUserDrive(h.getVertex(this.info.average.geometry, 0)),
                                this.layer.driveRenderer.drawUserDrive(h.getVertex(this.info.average.geometry, 2))
                    }
                }, {
                    key: "_drawPins",
                    value: function() {
                        var e = h.getLastVertex(this.info.average.prevSegGeom),
                            t = h.getFirstVertex(this.info.average.prevSegGeom);
                        if (!e.equals(t))
                            return this.layer.driveRenderer.drawPin(e, "A"),
                                this.layer.driveRenderer.drawPin(t, "B")
                    }
                }]),
                e
        }(),
        g = r.a.Model.extend({
            defaults: {
                available: !0,
                visible: !0
            }
        }),
        f = n(72),
        m = n.n(f),
        v = n(411),
        _ = n.n(v),
        y = n(12),
        b = n(59),
        E = n(18),
        w = r.a.Model.extend({
            MORE_INFO_DEFAULTS: [{
                name: "averageSession",
                visible: !0
            }, {
                name: "allSessions",
                visible: !1
            }],
            _moreInfoTypes: null,
            _moreInfoTypeMap: null,
            constructor: function(e) {
                return this.problem = e,
                    this.model = this.problem.model,
                    this._descartesClient = new b.a,
                    r.a.Model.apply(this)
            },
            setState: function(e) {
                var t = {};
                t.open = e === s.a.OPEN,
                    t.resolution = function() {
                        switch (e) {
                            case s.a.SOLVED:
                                return a.a.FIXED;
                            case s.a.NOT_IDENTIFIED:
                                return a.a.NOT_A_PROBLEM;
                            case s.a.OPEN:
                                return null
                        }
                    }(),
                    this.problem.model.actionManager.add(new _.a(this.problem, t))
            },
            getState: function() {
                var e = this;
                return this.problem.attributes.open ? s.a.OPEN : function() {
                    switch (e.problem.attributes.resolution) {
                        case a.a.FIXED:
                            return s.a.SOLVED;
                        case a.a.NOT_A_PROBLEM:
                            return s.a.NOT_IDENTIFIED;
                        case a.a.AUTO:
                            return s.a.CLOSED_AUTOMATICALLY
                    }
                }()
            },
            reportStateChanged: function() {
                var e = this.problem.attributes.problemType;
                null != this.problem.attributes.subType && (e += "_".concat(this.problem.attributes.subType)),
                    this.getState() === s.a.SOLVED ? E.reportAnalytic.mapProblemAction("update_state", e, 1) : this.getState() === s.a.NOT_IDENTIFIED && E.reportAnalytic.mapProblemAction("update_state", e, -1)
            },
            getTitle: function() {
                return I18n.t("problems.types.".concat(this.problem.attributes.subType, ".title"))
            },
            getReportedString: function() {
                return I18n.t("problems.panel.auto_detected")
            },
            hasDescription: function() {
                return !0
            },
            getDescription: function() {
                return I18n.t("problems.types.".concat(this.problem.attributes.subType, ".description"))
            },
            getDescriptionTemplate: function() {
                return null
            },
            isConversationAvailable: function() {
                return !1
            },
            getMoreInfoTypes: function() {
                var e = this;
                return null !== this._moreInfoTypes ? this._moreInfoTypes : (this._moreInfoTypeMap = {},
                    this._moreInfoTypes = this.MORE_INFO_DEFAULTS.map(function(t) {
                        var n = new g({
                            name: t.name,
                            visible: t.visible
                        });
                        return e._moreInfoTypeMap[t.name] = n,
                            n
                    }),
                    this._moreInfoTypes)
            },
            _getSessionsInfo: function() {
                var e = this,
                    t = this.problem.getID();
                return this._descartesClient.getProblemDetailsByIds([t]).then(function(t) {
                    return e.model.mergeResponse(t),
                        t.problemDetails.objects
                })
            },
            getMoreInfo: function() {
                var e = this;
                return this.moreInfo ? Promise.resolve(this.moreInfo) : this._getSessionsInfo().then(function(t) {
                    return e._moreInfoTypeMap.averageSession.set({
                            available: t[0].average && t[0].average.geometry
                        }),
                        e._moreInfoTypeMap.allSessions.set({
                            available: t[0].sessions && t[0].sessions.length > 0
                        }),
                        e.moreInfo = t
                })
            },
            isMoreInfoAvailable: function() {
                return this.getMoreInfoTypes().some(function(e) {
                    return e.get("available")
                })
            },
            getSeverity: function() {
                return this.problem.attributes.severity
            },
            getRepository: function() {
                return this.problem.model.problems
            },
            createMoreInfoRenderer: function(e, t, n) {
                return new p(e, t, n)
            },
            getMarkerLayer: function() {
                return W.map.problemLayer
            },
            isEditable: function() {
                return this.problem.canEdit()
            },
            rankAllowsEdit: function() {
                return W.loginManager.getUserRank() >= this.minRankForEdit()
            },
            minRankForEdit: function() {
                return 0
            },
            minLevelForEdit: function() {
                return m.a.normalizeLevel(this.minRankForEdit())
            },
            getBounds: function() {
                return this.problem.getDisconnectBounds()
            },
            getGeometry: function() {
                return y.cloneGeometry(this.problem.geometry)
            },
            getOpenStateString: function() {
                return I18n.t("problems.panel.states.open")
            },
            getSolvedStateString: function() {
                return I18n.t("problems.panel.states.solved")
            },
            getNotIdentifiedStateString: function() {
                return I18n.t("problems.panel.states.not_identified")
            },
            getNextButtonString: function() {
                return this._nextButtonString || I18n.t("problems.panel.next")
            },
            setNextButtonString: function(e) {
                this._nextButtonString = e
            }
        });
    t.a = w
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(7)),
        l = n(70),
        u = s(n(51)),
        c = s(n(43)),
        d = o(n(12)),
        h = n(30),
        p = o(n(21)),
        g = function(e) {
            function t(n, i) {
                return e.call(this, n, i, l.CommentsPermissions, t.defaults()) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.defaults = function() {
                    return {
                        subject: "",
                        body: "",
                        geometry: null,
                        endDate: null,
                        lockRank: 0,
                        isFollowing: !1,
                        createdOn: null,
                        createdBy: null,
                        updatedBy: null,
                        updatedOn: null,
                        conversation: [],
                        permissions: c.default.ALL_PERMISSIONS,
                        id: null
                    }
                },
                t.prototype.isPoint = function() {
                    return d.isPoint(this.geometry)
                },
                t.prototype.getPolygonGeometry = function() {
                    return this.isPoint() ? p.pointToSquarePolygon(this.geometry, 50) : d.cloneGeometry(this.geometry)
                },
                t.prototype.getPointGeometry = function() {
                    return this.isPoint() ? d.cloneGeometry(this.geometry) : p.polygonToPoint(this.geometry)
                },
                t.prototype.getComments = function() {
                    return new a.default.Collection(this.attributes.conversation)
                },
                t.prototype.isFollowing = function() {
                    return this.attributes.isFollowing
                },
                t.prototype.setFollowing = function(e) {
                    var t = this;
                    return h.httpPost(W.Config.paths.mapCommentFollow, {
                        mapCommentID: this.getID(),
                        follow: e
                    }).then(function() {
                        t.attributes.isFollowing = e
                    })
                },
                t.prototype.addComment = function(e) {
                    var t = this;
                    return h.httpPost(W.Config.paths.mapCommentConversation, {
                        mapCommentID: this.getID(),
                        text: e
                    }).then(function(e) {
                        return e.isAutoFollowed && (t.attributes.isFollowing = !0),
                            t.attributes.conversation.push(e.comment),
                            new a.default.Model(e.comment)
                    })
                },
                t
        }(u.default);
    Object.assign(g.prototype, {
            MAX_SUBJECT_LENGTH: 30,
            MAX_BODY_LENGTH: 2e3
        }),
        t.default = g
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__assign || function() {
            return (s = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        o = this && this.__rest || function(e, t) {
            var n = {};
            for (var i in e)
                Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (n[i] = e[i]);
            if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                var r = 0;
                for (i = Object.getOwnPropertySymbols(e); r < i.length; r++)
                    t.indexOf(i[r]) < 0 && (n[i[r]] = e[i[r]])
            }
            return n
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(0)),
        u = a(n(703));
    t.CITY_NAME_PATTERN = "^\\S.*";
    var c = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.fromStreetID = function(e, n, i) {
                void 0 === i && (i = {});
                var r = n.streets.getObjectById(e);
                if (null == r)
                    return t.EMPTY_ADDRESS;
                var s, a = i.altStreets,
                    l = o(i, ["altStreets"]);
                return a && (s = a.map(function(e) {
                        return t.fromStreetID(e, n, l)
                    })),
                    t.fromCityID(r.cityID, n, {
                        isEmpty: i.isEmpty,
                        houseNumber: i.houseNumber,
                        altStreets: s,
                        street: r
                    })
            },
            t.fromCityID = function(e, n, i) {
                void 0 === i && (i = {});
                var r, o, a = n.cities.getObjectById(e);
                return a && (r = n.states.getObjectById(a.attributes.stateID)) && (o = n.countries.getObjectById(a.attributes.countryID)),
                    [a, r, o].some(function(e) {
                        return null == e
                    }) ? t.EMPTY_ADDRESS : new t(s({}, i, {
                        city: a,
                        state: r,
                        country: o
                    }))
            },
            t.prototype.defaults = function() {
                return {
                    street: null,
                    city: null,
                    state: null,
                    country: null,
                    houseNumber: null,
                    isEmpty: !1,
                    altStreets: []
                }
            },
            t.prototype.isEmpty = function() {
                return null != this.attributes.isEmpty && this.attributes.isEmpty
            },
            t.prototype.getStreet = function() {
                return this.get("street")
            },
            t.prototype.getHouseNumber = function() {
                return this.get("houseNumber")
            },
            t.prototype.getStreetName = function(e) {
                var t = (void 0 === e ? {} : e).emptyString,
                    n = void 0 === t ? I18n.t("edit.address.no_street") : t,
                    i = this.getStreet();
                return i && !i.isEmpty ? i.name : n
            },
            t.prototype.isEmptyStreet = function() {
                return Boolean(null != this.getStreet() && this.getStreet().isEmpty)
            },
            t.prototype.getCity = function() {
                return this.get("city")
            },
            t.prototype.getCityName = function(e) {
                var t = (void 0 === e ? {} : e).emptyString,
                    n = void 0 === t ? I18n.t("edit.address.no_city") : t,
                    i = this.getCity();
                return null == i || i.isEmpty() ? n : i.attributes.name
            },
            t.prototype.hasState = function() {
                var e = this.getState();
                return null != e && e.model.hasStates() && !e.isDefault
            },
            t.prototype.getState = function() {
                return this.get("state")
            },
            t.prototype.getStateName = function() {
                var e = this.getState();
                return this.hasState() ? e.name : null
            },
            t.prototype.getCountry = function() {
                return this.get("country")
            },
            t.prototype.getCountryName = function() {
                var e = this.getCountry();
                return null != e ? e.name : null
            },
            t.prototype.format = function(e) {
                var t = (void 0 === e ? {} : e).formatStreet,
                    n = void 0 === t || t;
                if (this.isEmpty())
                    return I18n.t("edit.landmark.no_address");
                var i = l.default.compact([n ? this.getStreetName() : null, this.getCityName(), this.hasState() ? this.getStateName() : this.getCountryName()]).join(", "),
                    r = this.get("houseNumber");
                return null != r && (i = r + " " + i),
                    i
            },
            t.prototype.setSelected = function(e) {
                var t = this.attributes,
                    n = t.street,
                    i = t.city,
                    r = t.state,
                    s = t.country,
                    o = t.altStreets;
                n && n.setSelected(e),
                    i && i.setSelected(e),
                    r && r.setSelected(e),
                    s && s.setSelected(e),
                    o && o.forEach(function(t) {
                        t && t.setSelected(e)
                    })
            },
            t.EMPTY_ADDRESS = new t({
                isEmpty: !0
            }),
            t
    }(u.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(32),
        s = i(n(186)),
        o = {
            DISALLOWED: 0,
            ALLOWED: 1,
            UNKNOWN: 2
        };
    t.TURN_STATE = o;
    var a = function() {
            function e(e, t, n, i, r) {
                void 0 === t && (t = []),
                    void 0 === n && (n = null),
                    void 0 === i && (i = []),
                    void 0 === r && (r = null),
                    this.state = e,
                    this.restrictions = t.slice(),
                    this.instructionOpcode = n,
                    this.segmentPath = i.slice(),
                    this.lanes = r
            }
            return e.createAllowed = function() {
                    return l
                },
                e.createDisallowed = function() {
                    return u
                },
                e.createUnknown = function() {
                    return c
                },
                e.create = function(t, n, i, r, s) {
                    return void 0 === n && (n = []),
                        void 0 === i && (i = null),
                        void 0 === r && (r = []),
                        void 0 === s && (s = null),
                        0 === n.length && null === i && 0 === r.length && null === s ? t === o.ALLOWED ? this.createAllowed() : this.createDisallowed() : new e(t, n, i, r, s)
                },
                e.prototype.getRestrictions = function() {
                    return this.restrictions.slice()
                },
                e.prototype.getInstructionOpcode = function() {
                    return this.instructionOpcode
                },
                e.prototype.hasRestrictions = function() {
                    return this.restrictions && this.restrictions.length > 0
                },
                e.prototype.getLaneData = function() {
                    return this.lanes
                },
                e.prototype.hasLanes = function() {
                    return null != this.getLaneData()
                },
                e.prototype.hasInstructionOpcode = function() {
                    return null !== this.instructionOpcode
                },
                e.prototype.isDifficult = function() {
                    return this.getRestrictions().some(function(e) {
                        return e.isDifficult()
                    })
                },
                e.prototype.isSimplyDifficult = function() {
                    return this.restrictions.some(function(e) {
                        return e.isSimplyDifficult()
                    })
                },
                e.prototype.isTimeRestricted = function() {
                    return this.getRestrictions().some(function(e) {
                        return e.isTimeRestricted()
                    })
                },
                e.prototype.isDifficultTimeRestricted = function() {
                    return this.restrictions.some(function(e) {
                        return e.isDifficult() && e.isTimeRestricted()
                    })
                },
                e.prototype.isNonDifficultTimeRestricted = function() {
                    return this.getRestrictions().some(function(e) {
                        return !e.isDifficult() && e.isTimeRestricted()
                    })
                },
                e.prototype.withSimpleDifficulty = function(e) {
                    if (e !== this.isSimplyDifficult()) {
                        var t = this.getRestrictions();
                        return e ? t.push(new s.default({
                                defaultType: r.RESTRICTION_TYPE.DIFFICULT
                            })) : t = t.filter(function(e) {
                                return !e.isSimplyDifficult()
                            }),
                            this.withRestrictions(t)
                    }
                    return this
                },
                e.prototype.withoutDifficultRestrictions = function() {
                    var e = this.getRestrictions().filter(function(e) {
                        return !e.isDifficult()
                    });
                    return this.withRestrictions(e)
                },
                e.prototype.withState = function(t) {
                    var n = t === o.DISALLOWED ? null : this.lanes;
                    return e.create(t, this.restrictions, this.instructionOpcode, this.segmentPath, n)
                },
                e.prototype.withRestrictions = function(t) {
                    return e.create(this.state, t, this.instructionOpcode, this.segmentPath, this.lanes)
                },
                e.prototype.withInstructionOpcode = function(t) {
                    return e.create(this.state, this.restrictions, t, this.segmentPath, this.lanes)
                },
                e.prototype.withLanes = function(t) {
                    return e.create(this.state, this.restrictions, this.instructionOpcode, this.segmentPath, t)
                },
                e.prototype.toString = function() {
                    return "" + this.state
                },
                e.prototype.isUnknown = function() {
                    return this.state === o.UNKNOWN
                },
                e.prototype.isAllowed = function() {
                    return this.state === o.ALLOWED
                },
                e.prototype.isDisallowed = function() {
                    return this.state === o.DISALLOWED
                },
                e.prototype.hasAdditionalData = function() {
                    return this.hasInstructionOpcode() || this.hasLanes() || this.hasRestrictions()
                },
                e.prototype.withToggledState = function(e) {
                    return e ? this.withState(o.ALLOWED) : this.withState(o.DISALLOWED)
                },
                e.prototype.hasSegmentPath = function() {
                    return this.segmentPath.length > 0
                },
                e.prototype.getSegmentPath = function() {
                    return this.segmentPath.slice()
                },
                e
        }(),
        l = new a(o.ALLOWED),
        u = new a(o.DISALLOWED),
        c = new a(o.UNKNOWN);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
        var n = "function" == typeof Symbol && e[Symbol.iterator];
        if (!n)
            return e;
        var i, r, s = n.call(e),
            o = [];
        try {
            for (;
                (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                o.push(i.value)
        } catch (e) {
            r = {
                error: e
            }
        } finally {
            try {
                i && !i.done && (n = s.return) && n.call(s)
            } finally {
                if (r)
                    throw r.error
            }
        }
        return o
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(48),
        s = n(62),
        o = n(31),
        a = n(88),
        l = function() {
            function e(e, t) {
                this.segments = t,
                    this.dataModel = e
            }
            return e.prototype.supportsLanes = function(e) {
                    return e === s.SEGMENT_LANE_DIRECTION.FWD ? this.supportsFwdLanes() : this.supportsRevLanes()
                },
                e.prototype.supportsFwdLanes = function() {
                    if (this.segments.length > 1)
                        return !1;
                    var e = i(this.segments, 1)[0];
                    return this.nodeSupportsLanes(e.getToNode()) && Boolean(e.attributes.fwdDirection) && this.directionlessSupportsLanes(e)
                },
                e.prototype.supportsRevLanes = function() {
                    if (this.segments.length > 1)
                        return !1;
                    var e = i(this.segments, 1)[0];
                    return this.nodeSupportsLanes(e.getFromNode()) && Boolean(e.attributes.revDirection) && this.directionlessSupportsLanes(e)
                },
                e.prototype.canEditLanes = function(e) {
                    return !!this.supportsLanes(e) && (i(this.segments, 1)[0].canEditLanes() && new a.SegmentsBaseAttributesUseCase(this.segments).arePropertiesEditable())
                },
                e.prototype.nodeSupportsLanes = function(e) {
                    return null != e && !e.isPartial()
                },
                e.prototype.directionlessSupportsLanes = function(e) {
                    return this.envSupportsLanes(e) && this.roadTypeSupportsLanes(e) && !e.isInRoundabout()
                },
                e.prototype.envSupportsLanes = function(e) {
                    return this.lanesFeatureFlagEnabled() && this.countryAndUserSupportsLanes(e)
                },
                e.prototype.lanesFeatureFlagEnabled = function() {
                    return o.isFeatureFlagEnabled(o.FEATURE_FLAGS.LANES)
                },
                e.prototype.roadTypeSupportsLanes = function(e) {
                    return !r.isWalkingRoadType(e.attributes.roadType)
                },
                e.prototype.countryAndUserSupportsLanes = function(e) {
                    var t = this.getCountry(e);
                    return null != t && null != t.allowLanesRank && this.userSupportsLanes(t.allowLanesRank)
                },
                e.prototype.getCountry = function(e) {
                    var t = e.getAddress();
                    if (!t)
                        return null;
                    var n = t.getCountry();
                    return n || null
                },
                e.prototype.userSupportsLanes = function(e) {
                    return W.loginManager.getUserRank() >= e
                },
                e
        }();
    t.default = l
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(14),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(41),
        _ = n.n(v),
        y = n(27),
        b = n.n(y),
        E = n(99),
        w = n.n(E),
        S = n(15),
        k = n.n(S),
        T = n(39),
        I = function(e) {
            function t(e) {
                var n, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                o()(this, t),
                    n = c()(this, h()(t).call(this, i));
                var r = i.hide,
                    s = void 0 !== r && r,
                    a = i.userInitiated,
                    l = void 0 !== a && a;
                return n.segment = e,
                    n.hideSegment = s,
                    n.userInitiated = l,
                    n.origState = null,
                    n
            }
            return m()(t, e),
                l()(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = this;
                        "Deleting segment ".concat(this.segment.getID()),
                            this.origState = this.segment.state,
                            ["fromNodeID", "toNodeID"].forEach(function(e) {
                                if (this.segment.attributes[e]) {
                                    var t = this.model.nodes.getObjectById(this.segment.attributes[e]);
                                    t && t.isConnectedToSegment(this.segment) && this.doSubAction(new w.a(this.segment, t, {
                                        deleteNode: this.deleteNode,
                                        dontSerialize: !0
                                    }))
                                }
                            }, this),
                            this.segment.attributes.virtualNodeIDs.forEach(function(t) {
                                var n = e.model.nodes.getObjectById(t);
                                e.doSubAction(new w.a(e.segment, n, {
                                    dontSerialize: !0
                                }))
                            }),
                            this.hideSegment && (this.segment.hidden || (this.hidSegment = !0),
                                this.segment.hidden = !0),
                            this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                                this.model.segments.stateDeleted(this.segment)),
                            this.userInitiated && this.model.loginManager.user.incrementDeleteSegmentCount()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        "Undeleting segment ".concat(this.segment.getID()),
                            this.userInitiated && this.model.loginManager.user.decrementDeleteSegmentCount(),
                            this.segment.state = this.origState,
                            this.hidSegment && delete this.segment.hidden,
                            this.segment.state === OpenLayers.State.INSERT ? this.model.segments.put(this.segment) : this.model.segments.changed(this.segment),
                            g()(h()(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        g()(h()(t.prototype), "redoAction", this).call(this),
                            this.hidSegment && (this.segment.hidden = !0),
                            this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                                this.model.segments.stateDeleted(this.segment)),
                            this.userInitiated && this.model.loginManager.user.incrementDeleteSegmentCount()
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: k.a.SEGMENT,
                            action: _.a.TYPE.DELETE,
                            attributes: {
                                id: this.segment.getID()
                            }
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.segment.getUniqueID()].concat(r()(g()(h()(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = Object(T.formatActionAddressDescription)(this.segment, "DeleteSegment")
                    }
                }]),
                t
        }(b.a);
    t.default = I
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(41)),
        l = o(n(12)),
        u = function(e) {
            function t(t, n, i, r, s) {
                var o = e.call(this, s) || this;
                return o.feature = t,
                    o.repo = n,
                    o.oldGeometry = i,
                    o.newGeometry = r,
                    o.changedState = !1,
                    o
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    this.feature.type,
                        this.feature.getID(),
                        this.replaceGeometry(l.cloneGeometry(this.newGeometry)),
                        this.feature.state || (this.changedState = !0,
                            this.feature.state = OpenLayers.State.UPDATE),
                        this.repo.changed(this.feature)
                },
                t.prototype.replaceGeometry = function(e) {
                    e !== this.feature.geometry && (l.setId(e, l.getId(this.feature.geometry)),
                        this.feature.geometry = e,
                        this.feature.bounds = l.getBounds(this.feature.geometry))
                },
                t.prototype.undoAction = function() {
                    this.changedState && (this.feature.state = null),
                        this.replaceGeometry(l.cloneGeometry(this.oldGeometry)),
                        this.repo.changed(this.feature)
                },
                t.prototype.redoAction = function() {
                    this.replaceGeometry(l.cloneGeometry(this.newGeometry)),
                        this.changedState && (this.feature.state = OpenLayers.State.UPDATE),
                        this.repo.changed(this.feature)
                },
                t.prototype.serialize = function() {
                    var e = {};
                    return e.id = this.feature.getID(),
                        e.geometry = this.newGeometry, {
                            _objectType: this.feature.type,
                            action: a.default.TYPE.UPDATE,
                            attributes: e
                        }
                },
                t.prototype.getBounds = function() {
                    return l.getBounds(this.newGeometry, !0)
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return [this.feature.getUniqueID()]
                },
                t.prototype.generateDescription = function() {
                    var e = I18n.t("objects." + this.feature.type + ".name");
                    this._description = I18n.t("save.changes_log.actions.UpdateFeatureGeometry", {
                        objectType: e
                    })
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.feature]
                },
                t
        }(a.default);
    t.default = u
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(13),
        r = n.n(i),
        s = n(8),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(1),
        c = n.n(u),
        d = n(5),
        h = n.n(d),
        p = n(3),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(4),
        _ = n.n(v),
        y = n(0),
        b = n.n(y),
        E = n(16),
        w = n(72),
        S = n.n(w),
        k = n(9);

    function T(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var I = function(e) {
        function t() {
            return l()(this, t),
                h()(this, g()(t).apply(this, arguments))
        }
        return m()(t, e),
            c()(t, [{
                key: "className",
                value: function() {
                    return "lock-edit-view"
                }
            }, {
                key: "bindings",
                value: function() {
                    return function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? T(Object(n), !0).forEach(function(t) {
                                o()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : T(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({
                        ".lock-level-displayer": {
                            observe: this.propertiesEditableAttribute,
                            visible: !0,
                            visibleFn: k.b,
                            onGet: b.a.negate(b.a.identity)
                        },
                        ".lock-level-displayer label": {
                            observe: [this.lockRankAttribute, this.rankAttribute, this.lockRankMixedAttribute],
                            onGet: function(e) {
                                var t = r()(e, 3),
                                    n = t[0],
                                    i = t[1];
                                return t[2] ? I18n.t("edit.multiple_values") : null != n ? E.default.formatRank(n) : I18n.t("edit.segment.lock_levels.automatic", {
                                    rank: E.default.formatRank(i)
                                })
                            }
                        },
                        ".lock-level-selector": {
                            observe: this.propertiesEditableAttribute,
                            visible: !0,
                            visibleFn: k.b
                        },
                        ".lock-level-selector input[name='lockRank']": {
                            observe: [this.lockRankAttribute, this.lockRankMixedAttribute],
                            onGet: function(e) {
                                var t = r()(e, 2),
                                    n = t[0];
                                return t[1] ? "MIXED" : null != n ? n : "AUTO"
                            },
                            onSet: function(e) {
                                return "AUTO" === e ? [null, !1] : "MIXED" === e ? [null, !0] : [parseInt(e, 10), !1]
                            }
                        },
                        ".lock-level-selector input[name=lockRank][value='MIXED'] + label": {
                            observe: this.lockRankMixedAttribute,
                            visible: !0,
                            visibleFn: k.b
                        },
                        ".lock-level-selector input[name=lockRank][value='AUTO']": {
                            attributes: [{
                                name: "disabled",
                                observe: this.allowDefaultRankAttribute,
                                onGet: b.a.negate(b.a.identity)
                            }]
                        },
                        ".lock-level-selector label[for|='lockRank'].automatic": {
                            observe: this.rankAttribute,
                            onGet: function(e) {
                                return I18n.t("edit.segment.lock_levels.automatic", {
                                    rank: E.default.formatRank(e)
                                })
                            }
                        }
                    }, this.bindingsForRankRadios())
                }
            }, {
                key: "bindingsForRankRadios",
                value: function() {
                    for (var e = {}, t = 0; t <= S.a.MaxRank; t++)
                        Object.assign(e, this.bindingsForRankRadio(t));
                    return e
                }
            }, {
                key: "bindingsForRankRadio",
                value: function(e) {
                    return o()({}, ".lock-level-selector input[name=lockRank][value='".concat(e, "']"), {
                        attributes: [{
                            name: "disabled",
                            observe: "userRank",
                            onGet: function(t) {
                                return e > t
                            }
                        }]
                    })
                }
            }, {
                key: "_getMaxLockRankToDisplay",
                value: function() {
                    var e = this.model.attributes.userRank,
                        t = this.model.attributes[this.lockRankMixedAttribute],
                        n = this.model.attributes[this.lockRankAttribute],
                        i = this.model.attributes[this.rankAttribute],
                        r = null != n ? n : i;
                    return t ? e : Math.max(r, e)
                }
            }, {
                key: "initialize",
                value: function(e) {
                    this.rankAttribute = e.rankAttribute || "rank",
                        this.lockRankAttribute = e.lockRankAttribute || "lockRank",
                        this.lockRankMixedAttribute = e.lockRankMixedAttribute || "lockRankMixed",
                        this.allowDefaultRankAttribute = e.allowDefaultRankAttribute || "allowDefaultRank",
                        this.propertiesEditableAttribute = e.propertiesEditableAttribute || "propertiesEditable",
                        this.model.set({
                            maxRankToDisplay: this._getMaxLockRankToDisplay()
                        })
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/lock/edit"
                }
            }]),
            t
    }(_.a.View);
    t.default = I
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(7)),
        a = s(n(725)),
        l = n(162),
        u = {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        };
    t.TRANSACTION_ACTIONS = u;
    var c = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.defaults = function() {
                return {
                    transactionID: null,
                    actionType: null,
                    date: null,
                    userID: null,
                    objects: []
                }
            },
            t.prototype.parse = function(e) {
                return l.parseJsonObject(e, this.nested)
            },
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        objects: a.default
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.getObject = function(e, t) {
                return this.attributes.objects.filter(function(n) {
                    return n.attributes.objectID === t && n.attributes.objectType === e
                })[0]
            },
            t
    }(o.default.Model);
    c.ACTIONS = u,
        t.default = c
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(118),
        r = n(45),
        s = function() {
            function e(e) {
                Array.isArray(e) ? this.segments = e : this.segments = [e],
                    this.segmentReducer = new r.SegmentReducer(this.segments, new i.SegmentReader)
            }
            return e.prototype.hasConsistentDrivability = function() {
                    return this.segments.some(function(e) {
                        return !e.isDrivable()
                    }) ? this.segments.every(function(e) {
                        return !e.isDrivable()
                    }) : this.segments.every(function(e) {
                        return e.isDrivable()
                    })
                },
                e.prototype.hasConsistentWalkability = function() {
                    return this.segments.some(function(e) {
                        return e.isWalkingTrail()
                    }) ? this.segments.every(function(e) {
                        return e.isWalkingTrail()
                    }) : this.segments.every(function(e) {
                        return !e.isWalkingTrail()
                    })
                },
                e.prototype.isWalkingRoadType = function() {
                    return this.segments.every(function(e) {
                        return e.isWalkingTrail()
                    })
                },
                e.prototype.isDrivable = function() {
                    return this.segments.every(function(e) {
                        return e.isDrivable()
                    })
                },
                e.prototype.isHighway = function() {
                    return this.segments.every(function(e) {
                        return e.isHighway()
                    })
                },
                e.prototype.getRoadType = function() {
                    return this.segmentReducer.reduceRoadTypes()
                },
                e
        }();
    t.SegmentsRoadTypeUseCase = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(122),
        r = n(118),
        s = n(45),
        o = function() {
            function e(e) {
                Array.isArray(e) ? this.segments = e : this.segments = [e],
                    this.segmentReducer = new s.SegmentReducer(this.segments, new r.SegmentReader)
            }
            return e.prototype.getID = function() {
                    return this.segments.map(function(e) {
                        return e.getID()
                    })
                },
                e.prototype.getCreatedBy = function() {
                    return this.segmentReducer.getCreators()
                },
                e.prototype.getUpdatedBy = function() {
                    return this.segmentReducer.getUpdaters()
                },
                e.prototype.getCreatedOn = function() {
                    return this.segmentReducer.reduceCreatedOn()
                },
                e.prototype.getUpdatedOn = function() {
                    return this.segmentReducer.reduceUpdatedOn()
                },
                e.prototype.isCreatedByMixed = function() {
                    return this.segmentReducer.reduceCreatedBy() === s.MixedValue
                },
                e.prototype.isUpdatedByMixed = function() {
                    return this.segmentReducer.reduceUpdatedBy() === s.MixedValue
                },
                e.prototype.arePropertiesEditable = function() {
                    var e = new i.SegmentClosuresUseCase(this.segments).hasClosures();
                    return this.segments.every(function(e) {
                        return e.arePropertiesEditable()
                    }) && !e
                },
                e
        }();
    t.SegmentsBaseAttributesUseCase = o
}, function(e, t, n) {
    "use strict";
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(10),
        c = n.n(u),
        d = function() {
            function e(t) {
                o()(this, e),
                    this.started = !1,
                    this.stopDown = !0,
                    this.dragging = !1,
                    this.touch = !1,
                    this.last = null,
                    this.start = null,
                    this.lastMoveEvt = null,
                    this.oldOnselectstart = null,
                    this.interval = 0,
                    this.timeoutId = null,
                    this.forced = !1,
                    this.active = !1,
                    this.map = t,
                    this.uniqueID = e.baseID--
            }
            return l()(e, [{
                    key: "callback",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                        if (this[e])
                            return this[e].apply(this, r()(t))
                    }
                }, {
                    key: "_getViewPortDiv",
                    value: function() {
                        return this.map.viewPortDiv
                    }
                }, {
                    key: "dragstart",
                    value: function(e) {
                        var t = this._getViewPortDiv();
                        e.xy = new OL.Pixel(e.clientX - t.offsets[0], e.clientY - t.offsets[1]);
                        var n = !0;
                        return this.dragging = !1,
                            (OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) && (this.started = !0,
                                this.start = e.xy,
                                this.last = e.xy,
                                OL.Element.addClass(t, "olDragDown"),
                                this.down(e),
                                this.callback("down", [e.xy]),
                                OL.Event.stop(e),
                                this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : function() {
                                    return !0
                                }),
                                document.onselectstart = function() {
                                    return !1
                                },
                                n = !this.stopDown),
                            n
                    }
                }, {
                    key: "forceStart",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        return this.started = !0,
                            this.endOnMouseUp = e,
                            this.forced = !0,
                            this.last = {
                                x: 0,
                                y: 0
                            },
                            this.callback("force")
                    }
                }, {
                    key: "forceEnd",
                    value: function() {
                        if (this.forced)
                            return this.endDrag()
                    }
                }, {
                    key: "dragmove",
                    value: function(e) {
                        var t = this._getViewPortDiv();
                        return t.offsets && (e.xy = new OL.Pixel(e.clientX - t.offsets[0], e.clientY - t.offsets[1])),
                            this.lastMoveEvt = e,
                            !this.started || this.timeoutId || e.xy.x === this.last.x && e.xy.y === this.last.y || (this.interval > 0 && (this.timeoutId = window.setTimeout(this.removeTimeout.bind(this), this.interval)),
                                this.dragging = !0,
                                this.move(e),
                                this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                                    document.onselectstart = function() {
                                        return !1
                                    }
                                ),
                                this.last = e.xy),
                            !0
                    }
                }, {
                    key: "dragend",
                    value: function(e) {
                        var t = this._getViewPortDiv();
                        if (e.xy = new OL.Pixel(e.clientX - t.offsets[0], e.clientY - t.offsets[1]),
                            this.started) {
                            var n = this.start !== this.last;
                            this.endDrag(),
                                this.up(e),
                                this.callback("up", [e.xy]),
                                n && this.callback("done", [e.xy])
                        }
                        return !0
                    }
                }, {
                    key: "endDrag",
                    value: function() {
                        var e = this._getViewPortDiv();
                        this.started = !1,
                            this.dragging = !1,
                            this.forced = !1,
                            OL.Element.removeClass(e, "olDragDown"),
                            document.onselectstart = this.oldOnselectstart
                    }
                }, {
                    key: "down",
                    value: function(e) {}
                }, {
                    key: "move",
                    value: function(e) {}
                }, {
                    key: "up",
                    value: function(e) {}
                }, {
                    key: "out",
                    value: function(e) {}
                }, {
                    key: "mousedown",
                    value: function(e) {
                        return this.dragstart(e)
                    }
                }, {
                    key: "touchstart",
                    value: function(e) {
                        return this.touch || (this.touch = !0,
                                this.map.events.un({
                                    mousedown: this.mousedown,
                                    mouseup: this.mouseup,
                                    mousemove: this.mousemove,
                                    click: this.click,
                                    scope: this
                                })),
                            this.dragstart(e)
                    }
                }, {
                    key: "mousemove",
                    value: function(e) {
                        return this.dragmove(e)
                    }
                }, {
                    key: "touchmove",
                    value: function(e) {
                        return this.dragmove(e)
                    }
                }, {
                    key: "removeTimeout",
                    value: function() {
                        if (this.timeoutId = null,
                            this.dragging)
                            return this.mousemove(this.lastMoveEvt)
                    }
                }, {
                    key: "mouseup",
                    value: function(e) {
                        if (!this.forced || this.endOnMouseUp)
                            return this.started ? this.dragend(e) : void 0
                    }
                }, {
                    key: "touchend",
                    value: function(e) {
                        if (e.xy = this.last,
                            !this.forced)
                            return this.dragend(e)
                    }
                }, {
                    key: "click",
                    value: function(e) {
                        return this.start === this.last
                    }
                }, {
                    key: "activate",
                    value: function(e) {
                        this.$el = e,
                            this.active = !0;
                        var t = this._getViewPortDiv(),
                            n = c()(t);
                        return this.$el.on("mousedown.drag-".concat(this.uniqueID), this.mousedown.bind(this)),
                            this.$el.on("touchstart.drag-".concat(this.uniqueID), this.touchstart.bind(this)),
                            this.map.events.register("mouseup", this, this.mouseup, !0),
                            n.on("mousemove.drag-".concat(this.uniqueID), this.mousemove.bind(this)),
                            n.on("touchmove.drag-".concat(this.uniqueID), this.touchmove.bind(this)),
                            n.on("touchend.drag-".concat(this.uniqueID), this.touchend.bind(this))
                    }
                }, {
                    key: "deactivate",
                    value: function() {
                        this.active = !1,
                            this.$el.off(".drag-".concat(this.uniqueID));
                        var e = this._getViewPortDiv();
                        return c()(e).off(".drag-".concat(this.uniqueID)),
                            c()(document).off(".drag-".concat(this.uniqueID)),
                            this.map.events.unregister("mouseup", this, this.mouseup),
                            this.touch = !1,
                            this.started = !1,
                            this.forced = !1,
                            this.dragging = !1,
                            this.start = null,
                            this.last = null,
                            OL.Element.removeClass(e, "olDragDown")
                    }
                }, {
                    key: "adjustXY",
                    value: function(e) {
                        var t = this._getViewPortDiv(),
                            n = OL.Util.pagePosition(t);
                        return e.xy.x -= n[0],
                            e.xy.y -= n[1]
                    }
                }]),
                e
        }();
    Object.assign(d.prototype, {
            CLASS_NAME: "W.Handler.DragElement"
        }),
        d.baseID = 0,
        t.a = d
}, function(e, t, n) {
    "use strict";
    n.d(t, "a", function() {
        return u
    });
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(75),
        l = n(16),
        u = function() {
            function e() {
                var t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).timeFrame,
                    n = void 0 === t ? null : t;
                r()(this, e),
                    this._timeFrame = n
            }
            return o()(e, [{
                    key: "formatWeekdays",
                    value: function() {
                        if (this._timeFrame.isAllWeek())
                            return I18n.t("restrictions.editing.timeframe.all_week");
                        var e = this._timeFrame.getWeekdays().map(function(e) {
                            return a.WEEKDAY_ORDINALS.indexOf(e)
                        });
                        return l.default.formatDays(e)
                    }
                }, {
                    key: "formatHours",
                    value: function() {
                        return this._timeFrame.isAllDay() ? I18n.t("restrictions.editing.timeframe.all_day") : "".concat(this._timeFrame.getFromTime(), " - ").concat(this._timeFrame.getToTime())
                    }
                }, {
                    key: "formatDateRange",
                    value: function() {
                        return this._timeFrame.isDuringDates() ? I18n.t("restrictions.editing.timeframe.date_range", {
                            start: new Date(this._timeFrame.getStartDate()).toLocaleDateString(),
                            end: new Date(this._timeFrame.getEndDate()).toLocaleDateString()
                        }) : I18n.t("restrictions.editing.timeframe.always")
                    }
                }]),
                e
        }()
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(10)),
        l = s(n(0)),
        u = s(n(41)),
        c = s(n(247)),
        d = s(n(174)),
        h = s(n(15)),
        p = o(n(12)),
        g = s(n(82)),
        f = n(48),
        m = n(26),
        v = function(e) {
            function t(t, n) {
                void 0 === n && (n = {});
                var i = this,
                    r = n.createTwoWay,
                    s = void 0 !== r && r,
                    o = n.openAllTurns,
                    a = void 0 !== o && o;
                return (i = e.call(this, t, n) || this).initialSegmentGeometry = null,
                    i.openAllTurns = a,
                    i.segment = t,
                    i.segmentAttributes = {},
                    s && (i.segment.attributes.revDirection = !0,
                        i.segment.attributes.fwdDirection = !0),
                    i
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e = this;
                    if (this.segment.isPoint())
                        return !1;
                    this.segment.bounds || (this.segment.bounds = p.getBounds(this.segment.geometry)),
                        this.segment.state = OpenLayers.State.INSERT,
                        this.segment.getID() || this.segment.setID(this.model.segments.generateUniqueID()),
                        this.segment.attributes.streetIDs || (this.segment.attributes.streetIDs = []),
                        this.initialSegmentGeometry = p.cloneGeometry(this.segment.geometry),
                        this.segment.getID(),
                        this.model.segments.put(this.segment);
                    var t = ["geometry"],
                        n = new g.default(this.model, [this.segment]);
                    n.supportsFwdLanes() || t.push("fwdLaneCount"),
                        n.supportsRevLanes() || t.push("revLaneCount"),
                        a.default.extend(!0, this.segmentAttributes, l.default.omit(this.segment.attributes, t)),
                        this.updateEndPoint(null, this.touching.fromVertex, !0),
                        this.updateEndPoint(null, this.touching.toVertex, !1),
                        this.openAllTurns && [m.NodeName.FROM, m.NodeName.TO].forEach(function(t) {
                            var n = e.segment.getNodeByDirection(t);
                            if (null == n)
                                throw new Error("'" + t + "' node does not exist for segment " + e.segment.getID());
                            e.doSubAction(new d.default(n, !0, {
                                forSegment: e.segment
                            }))
                        })
                },
                t.prototype.undoAction = function() {
                    this.segment.getID(),
                        e.prototype.undoAction.call(this),
                        this.model.segments.remove(this.segment)
                },
                t.prototype.redoAction = function() {
                    this.model.segments.put(this.segment),
                        e.prototype.redoAction.call(this)
                },
                t.prototype.serialize = function() {
                    var e = this.segmentAttributes;
                    return e.id = this.segment.getID(),
                        e.geometry = this.initialSegmentGeometry, {
                            _objectType: h.default.SEGMENT,
                            action: u.default.TYPE.ADD,
                            attributes: e
                        }
                },
                t.prototype.getBounds = function() {
                    var t = e.prototype.getBounds.call(this) || new OpenLayers.Bounds;
                    return null != this.initialSegmentGeometry && t.extend(p.getBounds(this.initialSegmentGeometry)),
                        t
                },
                t.prototype.generateDescription = function() {
                    var e = this.segment.attributes.roadType,
                        t = "save.changes_log.actions.AddSegment.road_types." + l.default.findKey(f.ROAD_TYPE, function(t) {
                            return t === e
                        });
                    I18n.lookup(t) ? this._description = I18n.t(t) : this._description = I18n.t("save.changes_log.actions.AddSegment.default")
                },
                t
        }(c.default);
    t.default = v
}, function(e, t, n) {
    "use strict";
    var i = n(13),
        r = n.n(i),
        s = n(4),
        o = n.n(s),
        a = n(94),
        l = o.a.Behavior.extend({
            defaults: {
                modelAttribute: "model"
            },
            timepickerOptions: {
                defaultTime: !1,
                showMeridian: !1,
                template: "dropdown",
                icons: {
                    up: "fa fa-angle-up",
                    down: "fa fa-angle-down"
                }
            },
            datepickerOptions: {
                singleDatePicker: !0,
                autoUpdateInput: !1,
                locale: {
                    format: "YYYY-MM-DD"
                }
            },
            ui: {
                startDate: ".start-date",
                startTime: ".start-time",
                endDate: ".end-date",
                endTime: ".end-time"
            },
            events: {
                "click .date-input-group .input-group-addon": "_focusSiblingInput",
                "click .input-group.bootstrap-timepicker .input-group-addon": "_focusSiblingInput",
                "click .end-time ,.start-time": "_onTimeInputClicked",
                "click .clear-btn": "_onClearClick"
            },
            bindings: function() {
                return {
                    ".start-date": {
                        observe: "startDate",
                        onGet: this._getDate.bind(this),
                        onSet: this._setDate.bind(this)
                    },
                    ".start-time": {
                        observe: "startDate",
                        onGet: this._getTime.bind(this),
                        onSet: this._setTime.bind(this)
                    },
                    ".end-date": {
                        observe: "endDate",
                        onGet: this._getDate.bind(this),
                        onSet: this._setDate.bind(this)
                    },
                    ".end-time": {
                        observe: "endDate",
                        onGet: this._getTime.bind(this),
                        onSet: this._setTime.bind(this)
                    },
                    ".no-end-date": {
                        observe: "endDate",
                        onGet: function(e) {
                            return e ? e.length > 0 : void 0
                        },
                        onSet: function(e) {
                            return null
                        }
                    }
                }
            },
            onRender: function() {
                this.view.stickit(this.view[this.options.modelAttribute], this.bindings()),
                    this._createTimePickers(),
                    this._createDatePickers()
            },
            onBeforeDestroy: function() {
                this._destroyTimePickers(),
                    this._destroyDatePickers()
            },
            _getModel: function() {
                return this.view[this.options.modelAttribute]
            },
            _onStartDateChanged: function() {
                var e = this._getModel(),
                    t = e.get("startDate"),
                    n = e.get("endDate"),
                    i = null == n || Date.parse(n) < Date.parse(t);
                null != t && (i && e.set({
                        endDate: t
                    }),
                    this._createEndDatePicker())
            },
            _createTimePickers: function() {
                return this.ui.startTime.timepicker(this.timepickerOptions),
                    this.ui.endTime.timepicker(this.timepickerOptions)
            },
            _createDatePickers: function() {
                this._createDatePicker(this.ui.startDate, this.ui.startTime),
                    this._createEndDatePicker(),
                    this._getModel().on("change:startDate", this._onStartDateChanged, this)
            },
            _createEndDatePicker: function() {
                this._destroyEndDatePicker();
                var e = Object.assign({
                    minDate: Object(a.moment)(this._getModel().attributes.startDate)
                }, this.datepickerOptions);
                this._createDatePicker(this.ui.endDate, this.ui.endTime, e)
            },
            _createDatePicker: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.datepickerOptions;
                e.daterangepicker(n),
                    e.on("apply.daterangepicker", function(n, i) {
                        e.val(i.startDate.format(i.locale.format)),
                            e.trigger("change"),
                            t && t.focus()
                    })
            },
            _destroyTimePickers: function() {
                this.ui.startTime && this.ui.startTime.data("timepicker") && this.ui.startTime.data("timepicker").remove(),
                    this.ui.endTime && this.ui.endTime.data("timepicker") && this.ui.endTime.data("timepicker").remove(),
                    this._getModel().off("change:startDate", this._onStartDateChanged)
            },
            _destroyDatePickers: function() {
                this.ui.startDate && this.ui.startDate.data("daterangepicker") && this.ui.startDate.data("daterangepicker").remove(),
                    this._destroyEndDatePicker()
            },
            _destroyEndDatePicker: function() {
                this.ui.endDate && this.ui.endDate.data("daterangepicker") && this.ui.endDate.data("daterangepicker").remove()
            },
            _focusSiblingInput: function(e) {
                return this.$(e.target).parents(".input-group").find("input").focus()
            },
            _onTimeInputClicked: function(e) {
                this.$(e.target).parents(".input-group").find("input").timepicker("showWidget")
            },
            _onClearClick: function(e) {
                this._getModel().set({
                    startDate: null,
                    endDate: null
                })
            },
            _getDate: function(e) {
                var t = null;
                if (null != e) {
                    var n = e.split(" ")[0];
                    this._isValidDate(n) && (t = n)
                }
                return t
            },
            _getTime: function(e) {
                var t = null;
                return e && e.length > 0 && (t = e.split(" ")[1]),
                    t
            },
            _setDate: function(e, t) {
                if (this._isValidDate(e)) {
                    var n = t.view[this.options.modelAttribute].get(t.observe),
                        i = this._getTime(n);
                    return null == i && (i = "00:00"),
                        [e, this._padTime(i)].join(" ")
                }
                return null
            },
            _setTime: function(e, t) {
                var n = t.view[this.options.modelAttribute].get(t.observe),
                    i = this._getDate(n);
                return this._isValidDate(i) ? [i, this._padTime(e)].join(" ") : " ".concat(this._padTime(e))
            },
            _padTime: function(e) {
                var t = e.split(":");
                return 1 === r()(t, 1)[0].length && (e = "0".concat(e)),
                    e
            },
            _isValidDate: function(e) {
                return null != Date.parse(e)
            }
        });
    t.a = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(26)),
        s = n(118),
        o = n(45),
        a = function() {
            function e(e, t) {
                t instanceof r.default ? this.segments = [t] : this.segments = t,
                    this.dataModel = e,
                    this.segmentReducer = new o.SegmentReducer(this.segments, new s.SegmentReader)
            }
            return e.prototype.getRank = function() {
                    return this.segmentReducer.reduceRank()
                },
                e.prototype.getLockRank = function() {
                    return this.segmentReducer.reduceLockRank()
                },
                e.prototype.isLockedByHigherRank = function() {
                    var e = this;
                    return this.segments.some(function(t) {
                        return e.segmentIsLockedByHigherRank(t)
                    })
                },
                e.prototype.getEffectiveLockRank = function() {
                    var e = this.getLockRank();
                    return null == e ? this.getRank() : e
                },
                e.prototype.allowDefaultRank = function() {
                    return !this.isLockedByHigherRank()
                },
                e.prototype.getEffectiveLockRankForSegment = function(e) {
                    var t = e.attributes.lockRank;
                    return null == t ? e.attributes.rank : t
                },
                e.prototype.segmentIsLockedByHigherRank = function(e) {
                    var t = this.getEffectiveLockRankForSegment(e);
                    return !(!t || !W.loginManager.isLoggedIn()) && t > W.loginManager.getUserRank()
                },
                e
        }();
    t.SegmentsPermissionsUseCase = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(11));
    t.moment = r.default,
        t.Moment = r.Moment;
    var s = n(699);
    t.DateRange = s.DateRange,
        s.extendMoment(r.default)
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "NOTIFICATION_TYPES", function() {
            return i
        });
    var i = {
            PRIVATE_FORUM_MESSAGE: "PRIVATE_FORUM_MESSAGE",
            DISCOVER_COMMUNITY_FORUM: "DISCOVER_COMMUNITY_FORUM",
            DISCOVER_LOCAL_WIKI: "DISCOVER_LOCAL_WIKI",
            FIRST_TIME_VIDEOS: "FIRST_TIME_VIDEOS",
            CHECK_YOUR_NEIGHBORHOOD: "CHECK_YOUR_NEIGHBORHOOD",
            USER_FIRST_EDIT: "USER_FIRST_EDIT",
            MENTEE_CLICKED_LINK: "MENTEE_CLICKED_LINK",
            MENTEE_RETURNED_TO_WME: "MENTEE_RETURNED_TO_WME",
            MENTOR_ENCOURAGMENT: "MENTOR_ENCOURAGMENT",
            MENTOR_FEEDBACK_REQUEST: "MENTOR_FEEDBACK_REQUEST",
            MENTOR_PRIVATE_MESSAGE: "MENTOR_PRIVATE_MESSAGE",
            MENTOR_DELETED: "MENTOR_DELETED"
        },
        r = n(156).a.extend({
            TYPE: i,
            GROUPS: {
                PRIVATE_FORUM_MESSAGE: [i.PRIVATE_FORUM_MESSAGE],
                FIRST_TIME_MESSAGES: [i.DISCOVER_COMMUNITY_FORUM, i.DISCOVER_LOCAL_WIKI, i.FIRST_TIME_VIDEOS, i.CHECK_YOUR_NEIGHBORHOOD],
                MENTORING: [i.USER_FIRST_EDIT, i.MENTEE_CLICKED_LINK, i.MENTEE_RETURNED_TO_WME, i.MENTOR_ENCOURAGMENT, i.MENTOR_FEEDBACK_REQUEST, i.MENTOR_PRIVATE_MESSAGE, i.MENTOR_DELETED]
            },
            defaults: function() {
                return {
                    type: null,
                    timestamp: null,
                    parameters: {}
                }
            },
            isForumMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.PRIVATE_FORUM_MESSAGE.indexOf(e) > -1
            },
            isFirstTimeMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.FIRST_TIME_MESSAGES.indexOf(e) > -1
            },
            isMentoringMessage: function() {
                var e = this.attributes.type;
                return this.GROUPS.MENTORING.indexOf(e) > -1
            },
            isNotification: function() {
                return !this.isForumMessage() && !this.isFirstTimeMessage() && !this.isMentoringMessage()
            },
            getParameter: function(e) {
                return this.attributes.parameters[e]
            }
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.DIRECTION = {
        NONE: 0,
        FORWARD: 1,
        REVERSE: 2,
        BOTH: 3
    }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(785)),
        s = i(n(786)),
        o = i(n(254)),
        a = i(n(787)),
        l = i(n(788)),
        u = i(n(789)),
        c = i(n(790));
    t.createUndoButtonModel = function(e) {
            var t = e.actionManager;
            return {
                title: I18n.t("toolbar.undo"),
                iconClass: "w-icon-undo",
                control: new r.default(t, {
                    displayClass: "waze-icon-undo"
                })
            }
        },
        t.createRedoButtonModel = function(e) {
            var t = e.actionManager;
            return {
                title: I18n.t("toolbar.redo"),
                iconClass: "w-icon-redo",
                control: new s.default(t, {
                    displayClass: "waze-icon-redo"
                })
            }
        },
        t.createDeleteButtonModel = function(e) {
            var t = e.dataModel,
                n = e.selectionManager;
            return {
                title: I18n.t("toolbar.delete"),
                iconClass: "w-icon-trash",
                control: new c.default(t, n, {
                    displayClass: "waze-icon-trash"
                })
            }
        },
        t.createSaveButtonModel = function(e) {
            var t = e.actionManager,
                n = e.map,
                i = e.editingMediator,
                r = e.saveController;
            return {
                title: I18n.t("toolbar.save.title"),
                showLabel: !0,
                control: new o.default({
                    map: n,
                    editingMediator: i,
                    saveController: r,
                    displayClass: "waze-icon-save"
                }),
                actionManager: t,
                enableChangesLog: !0,
                isSaveButton: !0
            }
        },
        t.createHouseNumberButtonModel = function(e) {
            var t = e.map;
            return {
                title: I18n.t("toolbar.add_house_numbers"),
                iconClass: "w-icon-home",
                showLabel: !0,
                control: new l.default({
                    displayClass: "add-house-number",
                    map: t.getOLMap()
                })
            }
        },
        t.createExitHouseNumberButtonModel = function() {
            return {
                title: I18n.t("toolbar.cancel"),
                iconClass: "w-icon-logout",
                showLabel: !0,
                control: new a.default({
                    displayClass: "waze-icon-exit"
                })
            }
        },
        t.createSaveHouseNumberButtonModel = function(e) {
            var t = e.actionManager,
                n = e.editingMediator;
            return {
                title: I18n.t("toolbar.save.title"),
                showLabel: !0,
                control: new u.default({
                    editingMediator: n,
                    displayClass: "waze-icon-save"
                }),
                actionManager: t,
                enableChangesLog: !0,
                isSaveButton: !0
            }
        }
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(13),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(0),
        m = n.n(f),
        v = n(131),
        _ = n.n(v),
        y = n(91),
        b = n.n(y),
        E = n(27),
        w = n.n(E),
        S = n(66),
        k = n.n(S),
        T = n(83),
        I = n(44),
        A = n.n(I),
        M = n(415),
        O = n.n(M),
        C = n(416),
        R = n.n(C),
        D = n(168),
        L = n.n(D),
        P = n(81),
        N = n.n(P),
        x = n(38),
        V = n.n(x),
        j = n(17),
        U = n(12),
        F = n(20),
        B = n(25),
        G = n(31),
        W = n(39),
        H = n(21),
        z = n(33),
        q = function(e) {
            function t(e) {
                var n, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                o()(this, t),
                    n = c()(this, h()(t).call(this, i));
                var r = i.splits,
                    s = void 0 === r ? null : r,
                    a = i.splitNode,
                    l = void 0 === a ? null : a,
                    u = i.splitAtPoint,
                    d = void 0 === u ? null : u,
                    p = i.splittingPointDistance,
                    g = void 0 === p ? null : p,
                    f = i.splittingPointIndex,
                    m = void 0 === f ? null : f,
                    v = i.splitWithSegment,
                    _ = void 0 === v ? null : v;
                return n.splits = s,
                    n.splitNode = l,
                    n.splitAtPoint = d,
                    n.splittingPointDistance = g,
                    n.splittingPointIndex = m,
                    n.splitWithSegment = _,
                    n.segment = e,
                    n.splitAtomically = Object(G.isFeatureFlagEnabled)(G.FEATURE_FLAGS.NEW_SPLIT_MERGE),
                    n
            }
            return g()(t, e),
                l()(t, [{
                    key: "_splitSegment",
                    value: function(e) {
                        "Splitting segment ".concat(this.segment.getID(), " into ").concat(e.length, " parts");
                        var t = this.model.nodes.getObjectById(this.segment.attributes.fromNodeID),
                            n = this.model.nodes.getObjectById(this.segment.attributes.toNodeID),
                            i = this.addSplitNode();
                        this._createSegments(i),
                            this.connectSegmentsToSplitNode(),
                            this.connectSplitToNode(this.splits[0], t),
                            this.connectSplitToNode(m.a.last(this.splits), n),
                            this.connectParts(),
                            this.doSubAction(new R.a(this.segment.getID(), m.a.last(this.splits).getID(), this.splits[0].getID()), {
                                dontSerialize: !0
                            }),
                            this.doSubAction(new T.default(this.segment, {
                                hide: !0,
                                dontSerialize: this.splitAtomically
                            })),
                            this.splitAtomically && this._doAtomicSplit()
                    }
                }, {
                    key: "connectParts",
                    value: function() {
                        if (this.segment.isDrivable()) {
                            var e = this.splits[0],
                                t = m.a.last(this.splits);
                            if (this.splitNode.isTurnAllowedBySegDirections(e, t)) {
                                var n = new L.a(V.a.forwardOf(e.getID()), V.a.forwardOf(t.getID()), N.a.createAllowed());
                                this.doSubAction(new A.a(this.model.getTurnGraph(), n, {
                                    dontSerialize: this.splitAtomically
                                }))
                            }
                            if (this.splitNode.isTurnAllowedBySegDirections(t, e)) {
                                var i = new L.a(V.a.reverseOf(t.getID()), V.a.reverseOf(e.getID()), N.a.createAllowed());
                                this.doSubAction(new A.a(this.model.getTurnGraph(), i, {
                                    dontSerialize: this.splitAtomically
                                }))
                            }
                        }
                    }
                }, {
                    key: "_setVirtualNodes",
                    value: function(e, t, n) {
                        var i = this,
                            s = this._getSplitEdge(n.geometry),
                            o = this.segment.attributes.virtualNodeIDs,
                            a = m.a.partition(o, function(e) {
                                var t = i.model.nodes.getObjectById(e);
                                return i._getSplitEdge(t.geometry) < s
                            }),
                            l = r()(a, 2),
                            u = l[0],
                            c = l[1];
                        e.attributes.virtualNodeIDs = u,
                            t.attributes.virtualNodeIDs = c
                    }
                }, {
                    key: "_setLanesAttributes",
                    value: function(e, t) {
                        e.attributes.fwdLaneCount = 0,
                            e.attributes.revLaneCount = this.segment.attributes.revLaneCount,
                            t.attributes.fwdLaneCount = this.segment.attributes.fwdLaneCount,
                            t.attributes.revLaneCount = 0
                    }
                }, {
                    key: "_createSegments",
                    value: function(e) {
                        var t = this.segment.attributes.origID || this.segment.getID() || null,
                            n = this.segment.attributes,
                            i = this.splits[0],
                            r = this.splits[1];
                        i.attributes.toNodeID = e.getID(),
                            i.attributes.fromNodeID = n.fromNodeID,
                            r.attributes.toNodeID = n.toNodeID,
                            r.attributes.fromNodeID = e.getID(),
                            this._setVirtualNodes(i, r, e),
                            this._setLanesAttributes(i, r),
                            this.splits.forEach(function(e) {
                                e.attributes.fwdDirection = n.fwdDirection,
                                    e.attributes.revDirection = n.revDirection,
                                    e.attributes.fwdToll = n.fwdToll,
                                    e.attributes.revToll = n.revToll,
                                    e.attributes.origIDs = [t],
                                    e.setID(null),
                                    this.doSubAction(new b.a(e, {
                                        dontSerialize: this.splitAtomically
                                    }))
                            }, this)
                    }
                }, {
                    key: "addSplitNode",
                    value: function() {
                        var e, t;
                        return this.splitNode || (e = F.getLastVertex(this.splits[0].geometry),
                                e = j.createPoint(e.x, e.y),
                                t = new _.a(e, []),
                                this.doSubAction(t),
                                this.splitNode = t.node),
                            this.splitNode
                    }
                }, {
                    key: "getSplitNode",
                    value: function() {
                        return this.splitNode
                    }
                }, {
                    key: "connectSegmentsToSplitNode",
                    value: function() {
                        this.splitWithSegment && this.doSubAction(new k.a(this.splitNode, this.splitWithSegment)),
                            this.splits.forEach(function(e) {
                                this.doSubAction(new k.a(this.splitNode, e, {
                                    dontSerialize: !0
                                }))
                            }, this)
                    }
                }, {
                    key: "connectSplitToNode",
                    value: function(e, t) {
                        t && this.doSubAction(new k.a(t, e, {
                            dontSerialize: !0
                        }))
                    }
                }, {
                    key: "_doAtomicSplit",
                    value: function() {
                        this.doSubAction(new O.a(this.segment.getID(), this.splitNode.getID(), this.splits[0].getID(), this.splits[1].getID()))
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        return !(this.splitAtPoint && !this.createSplitsFromPoint(this.splitAtPoint)) && (!!this.splits && (!this.hasSingularParts() && void this._splitSegment(this.splits)))
                    }
                }, {
                    key: "hasSingularParts",
                    value: function() {
                        return this.splits.some(function(e) {
                            return F.getLengthInMeters(e.geometry) < 1
                        }, this)
                    }
                }, {
                    key: "createSplitsFromPoint",
                    value: function(e) {
                        var t;
                        if (z.defined(this.splittingPointIndex))
                            t = this.splittingPointIndex;
                        else if (-1 === (t = this._getSplitEdge(e)))
                            return !1;
                        var n = F.getVertices(this.segment.geometry).map(function(e) {
                                return U.cloneGeometry(e)
                            }),
                            i = j.createLineString(n.slice(0, t + 1));
                        B.equals(F.getLastVertex(i), e) || F.addPoint(i, U.cloneGeometry(e));
                        var r = j.createLineString(n.slice(t + 1));
                        return r.components[0].equals(e) || r.components.unshift(e.clone()),
                            this.splits = [i, r].map(function(e) {
                                return this.createSplitSegmentPart(this.segment, e)
                            }, this),
                            !0
                    }
                }, {
                    key: "_getSplitEdge",
                    value: function(e) {
                        return H.getPointEdge(this.segment.geometry, e, this.splittingPointDistance)
                    }
                }, {
                    key: "createSplitSegmentPart",
                    value: function(e, t) {
                        var n = e.clone();
                        return delete n.geometry,
                            n.geometry = t,
                            n
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return this.splits
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = Object(W.formatActionAddressDescription)(this.segment, "SplitSegments")
                    }
                }]),
                t
        }(w.a);
    t.default = q
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(27)),
        a = s(n(29)),
        l = s(n(393)),
        u = s(n(44)),
        c = s(n(38)),
        d = n(39),
        h = function(e) {
            function t(t, n, i) {
                void 0 === i && (i = {});
                var r = e.call(this, i) || this,
                    s = i.deleteNode,
                    o = void 0 === s || s,
                    a = i.keepTurns,
                    l = void 0 !== a && a;
                return r.deleteNode = o,
                    r.keepTurns = l,
                    r.segment = t,
                    r.node = n,
                    r.vertex = c.default.for(r.segment, r.node),
                    r
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return [this.segment, this.node]
                },
                t.prototype.doAction = function() {
                    var e = this,
                        n = {};
                    if (this.segment.isVirtuallyConnectedToNode(this.node)) {
                        var i = this.segment.attributes.virtualNodeIDs.filter(function(t) {
                            return t !== e.node.getID()
                        });
                        n.virtualNodeIDs = i
                    } else {
                        var r = this.segment.getTurnsLockAttribute(this.node),
                            s = this.segment.getNodeAttribute(this.node);
                        if (!s)
                            return !1;
                        n[r] = !1,
                            n[s + "NodeID"] = null,
                            this._updateTurns()
                    }
                    var o = this.node.attributes.segIDs.filter(function(t) {
                        return t !== e.segment.getID()
                    });
                    if (this.segment.getID(),
                        this.node.getID(),
                        this.doSubAction(new a.default(this.segment, n)),
                        this.doSubAction(new a.default(this.node, {
                            segIDs: o
                        })),
                        this.node.isVirtual() && 1 === this.node.attributes.segIDs.length) {
                        var u = this.model.segments.getObjectById(this.node.attributes.segIDs[0]);
                        if (!u)
                            throw new Error("missing segment: %{this.node.attribute s.segIDs[0]}");
                        this.doSubAction(new t(u, this.node))
                    }
                    return this.node.isDisconnected() && this.deleteNode && this.doSubAction(new l.default(this.node)),
                        !0
                },
                t.prototype._updateTurns = function() {
                    var e = this,
                        t = this.model.getTurnGraph();
                    return this.keepTurns || (t.getTurnsFrom(this.vertex).forEach(function(n) {
                                return e.doSubAction(new u.default(t, n.withUnknownTurnData()))
                            }),
                            t.getTurnsTo(this.vertex.getOpposite()).forEach(function(n) {
                                return e.doSubAction(new u.default(t, n.withUnknownTurnData()))
                            })),
                        !0
                },
                t.prototype.getNode = function() {
                    return this.node
                },
                t.prototype.generateDescription = function() {
                    this._description = d.formatActionAddressDescription(this.segment, "DisconnectSegment")
                },
                t
        }(o.default);
    t.default = h
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = n(70),
        a = s(n(51)),
        l = {
            HIGH: "high",
            MEDIUM: "medium",
            LOW: "low"
        };
    t.MAP_PROBLEM_SEVERITY = l;
    t.MAP_PROBLEM_TYPE = {
        DISCONNECTION: "DISCONNECTION",
        TURN: "TURN",
        DATA: "DATA",
        ROAD_CLOSURE: "ROAD_CLOSURE"
    };
    t.MAP_PROBLEMS_TYPES_WITH_DETAILS = {
        DISCONNECTION: "DISCONNECTION",
        TURN: "TURN",
        DATA: "DATA"
    };
    var u = function(e) {
        function t(t, n) {
            void 0 === n && (n = {
                parse: !1
            });
            var i = e.call(this, t, n, o.MapProblemsPermissions) || this;
            return i.disconnectBounds = null,
                i.setSeverity(i.attributes.weight),
                i.editable = i.attributes.open,
                i
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry,
                        bounds: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.merge = function(t) {
                e.prototype.merge.call(this, t),
                    this.editable = this.attributes.open
            },
            t.prototype.getDisconnectBounds = function() {
                return this.disconnectBounds || (this.disconnectBounds = this.attributes.bounds.getBounds()),
                    this.disconnectBounds
            },
            t.prototype.setSeverity = function(e) {
                var t = l.HIGH;
                e <= 3 ? t = l.LOW : e <= 7 && (t = l.MEDIUM),
                    this.attributes.severity = t
            },
            t.prototype.isRecentlyClosed = function() {
                return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= 6048e5
            },
            t.prototype.getLocation = function() {
                return this.attributes.geometry
            },
            t.prototype.canEdit = function() {
                return this.isAllowed(o.MapProblemsPermissions.EDIT)
            },
            t
    }(a.default);
    Object.assign(u.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.MapProblem"
        }),
        t.default = u
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(26)),
        s = n(130),
        o = n(53),
        a = n(122),
        l = function() {
            function e(e) {
                this.dataModel = e
            }
            return e.prototype.canEditSegmentsGeometry = function(e) {
                    var t = this;
                    return e.every(function(e) {
                        return t.canEditSegmentGeometry(e)
                    })
                },
                e.prototype.canEditSegmentGeometry = function(e) {
                    return !new o.SegmentsBigJunctionUseCase(this.dataModel, e).isInBigJunction() && (!new a.SegmentClosuresUseCase(e).hasClosures() && this.canEditOtherObjectGeomtry(e))
                },
                e.prototype.canEditCameraGeometry = function(e) {
                    return W.map.getZoom() >= W.Config.cameras.minDragZoom && this.canEditOtherObjectGeomtry(e)
                },
                e.prototype.canEditOtherObjectGeomtry = function(e) {
                    return Boolean(e.isGeometryEditable() && !e.outOfScope)
                },
                e.prototype.canEditGeoemtry = function(e) {
                    return e instanceof r.default ? this.canEditSegmentGeometry(e) : e instanceof s.SpeedCamera ? this.canEditCameraGeometry(e) : this.canEditOtherObjectGeomtry(e)
                },
                e
        }();
    t.CanEditGeometryUseCase = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(41)),
        a = function(e) {
            function t(t, n) {
                var i = e.call(this, n) || this;
                return i.object = t,
                    i.origState = null,
                    i.repo = null,
                    i
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return [this.object]
                },
                t.prototype.doAction = function() {
                    if (!this.object.type)
                        throw new Error("missing object type");
                    if (this.repo = this.model.getRepository(this.object.type),
                        null === this.repo)
                        throw new Error("Error deleting object: could not find object repository");
                    return this.origState = this.object.state,
                        this.removeObjct(),
                        !0
                },
                t.prototype.removeObjct = function() {
                    if (null === this.repo)
                        throw new Error("Error deleting object: could not find object repository");
                    this.object.state === OpenLayers.State.INSERT ? this.repo.remove(this.object) : (this.object.state = OpenLayers.State.DELETE,
                        this.repo.stateDeleted(this.object))
                },
                t.prototype.undoAction = function() {
                    if (null === this.repo)
                        throw new Error("Error deleting object: could not find object repository");
                    this.object.type,
                        this.object.getID(),
                        this.object.state = this.origState,
                        this.object.state === OpenLayers.State.INSERT ? this.repo.put(this.object) : this.repo.changed(this.object)
                },
                t.prototype.redoAction = function() {
                    this.removeObjct()
                },
                t.prototype.serialize = function() {
                    return {
                        _objectType: this.object.type,
                        action: o.default.TYPE.DELETE,
                        attributes: {
                            id: this.object.getID()
                        }
                    }
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return [this.object.getUniqueID()]
                },
                t.prototype.generateDescription = function() {
                    var e = I18n.t("objects." + this.object.type + ".name");
                    this._description = I18n.t("save.changes_log.actions.DeleteObject", {
                        type: e
                    })
                },
                t
        }(o.default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(13),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(1),
        c = n.n(u),
        d = n(5),
        h = n.n(d),
        p = n(3),
        g = n.n(p),
        f = n(14),
        m = n.n(f),
        v = n(6),
        _ = n.n(v),
        y = n(0),
        b = n.n(y),
        E = n(7),
        w = n.n(E),
        S = n(447),
        k = n.n(S),
        T = {
            STREET_NAME: 100,
            CITY_NAME: 100,
            HOUSE_NUMBER: 20
        },
        I = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "model",
                    get: function() {
                        return k.a
                    }
                }]),
                t
        }(w.a.Collection),
        A = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            houseNumber: "",
                            streetName: "",
                            emptyStreet: !1,
                            cityName: "",
                            emptyCity: !1,
                            cityID: null,
                            stateID: null,
                            countryID: null,
                            addressFormShown: !1,
                            editable: !0,
                            fullAddress: "",
                            ttsLocales: [W.Config.tts.default_locale],
                            altStreets: new w.a.Collection,
                            newAltStreets: new I
                        }
                    }
                }, {
                    key: "_createAltStreetModel",
                    value: function(e) {
                        return new w.a.Model({
                            id: e.getStreet().id,
                            streetName: e.getStreetName({
                                emptyString: ""
                            }),
                            cityName: e.getCityName({
                                emptyString: ""
                            })
                        })
                    }
                }, {
                    key: "populateFromAddressModel",
                    value: function(e) {
                        var t = this;
                        if (!e.isEmpty()) {
                            this.set({
                                streetName: e.getStreetName({
                                    emptyString: ""
                                }),
                                emptyStreet: e.isEmptyStreet(),
                                cityID: e.getCity() && e.getCity().getID(),
                                cityName: e.getCityName({
                                    emptyString: ""
                                }),
                                emptyCity: e.getCity() && e.getCity().isEmpty(),
                                stateID: e.getState() && e.getState().getID(),
                                countryID: e.getCountry() && e.getCountry().getID(),
                                houseNumber: e.attributes.houseNumber,
                                ttsDisabled: e.isEmptyStreet()
                            });
                            var n = e.get("altStreets");
                            if (null != n) {
                                var i = n.map(function(e) {
                                    return t._createAltStreetModel(e)
                                });
                                this.set({
                                    altStreets: new w.a.Collection(i),
                                    newAltStreets: new I
                                })
                            }
                            var r = e.getCountry();
                            return null != r && r.ttsLocales && this.set({
                                    ttsLocales: r.ttsLocales
                                }),
                                this
                        }
                    }
                }, {
                    key: "addNewAltStreet",
                    value: function(e) {
                        this.attributes.newAltStreets.add({
                            cityID: this.attributes.cityID,
                            citySelectedById: !0,
                            cityName: this.attributes.cityName,
                            emptyCity: e,
                            streetName: ""
                        })
                    }
                }, {
                    key: "getTTSLocales",
                    value: function() {
                        return this.attributes.ttsLocales
                    }
                }], [{
                    key: "fromAddress",
                    value: function(e, n) {
                        if (e.isEmpty()) {
                            var i = n.segments.topCityID;
                            if (null != i) {
                                var r = n.cities.getObjectById(i),
                                    s = r.attributes.countryID,
                                    o = r.attributes.stateID;
                                return new t({
                                    cityID: i,
                                    cityName: r.attributes.name,
                                    countryID: s,
                                    stateID: o
                                })
                            }
                            var a = n.getTopCountry(),
                                l = n.getTopState();
                            return new t({
                                countryID: a ? a.getID() : void 0,
                                stateID: l ? l.getID() : void 0
                            })
                        }
                        var u = new t;
                        return u.populateFromAddressModel(e),
                            u
                    }
                }]),
                t
        }(w.a.Model),
        M = n(64),
        O = n.n(M),
        C = n(80),
        R = n(23),
        D = n(9),
        L = n(152),
        P = n(217),
        N = n.n(P),
        x = n(59);
    var V = n(4),
        j = n.n(V),
        U = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .alt-street-delete": "onDeleteClick"
                        }
                    }
                }, {
                    key: "onDeleteClick",
                    value: function() {
                        var e = this;
                        this.$el.fadeOut("fast", function() {
                            e.model.set({
                                deleted: !0
                            })
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/address/alt-street"
                    }
                }]),
                t
        }(j.a.View),
        F = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "childView",
                    value: function(e) {
                        return e.get("deleted") ? null : U
                    }
                }]),
                t
        }(j.a.CollectionView),
        B = n(218),
        G = n.n(B),
        H = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .alt-street-delete": "onDeleteClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".alt-street-name": {
                                observe: "streetName"
                            },
                            ".alt-city-name": {
                                observe: ["cityName", "emptyCity", "citySelectedById"],
                                onGet: function(e) {
                                    var t = o()(e, 3),
                                        n = t[0],
                                        i = t[1];
                                    t[2];
                                    return i ? "" : n
                                },
                                onSet: function(e) {
                                    return [e, !1, !1]
                                },
                                attributes: D.a.requireAndEnableIfNot("emptyCity")
                            },
                            ".empty-city": "emptyCity"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            streetNameInput: ".alt-street-name",
                            cityNameInput: ".alt-city-name"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.dataModel = e.dataModel,
                            this._initStreetInput(),
                            this._initCityInput()
                    }
                }, {
                    key: "onDeleteClick",
                    value: function() {
                        this.model.collection.remove(this.model)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/address/edit-alt-street"
                    }
                }]),
                t
        }(G.a),
        z = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "childView",
                    value: function() {
                        return H
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            dataModel: this.options.dataModel
                        }
                    }
                }]),
                t
        }(j.a.CollectionView),
        q = n(29),
        Y = n.n(q),
        $ = n(10),
        K = n.n($),
        J = n(21),
        Z = function() {
            function e() {
                l()(this, e)
            }
            return c()(e, [{
                    key: "sayStreetName",
                    value: function(t, n, i) {
                        if (null === t || 0 !== t.length) {
                            var r = {
                                text: " ".concat(t, " "),
                                lang: i
                            };
                            null != n && b.a.extend(r, this._getLocationOptions(n)),
                                r = b.a.defaults(r, W.Config.tts.options);
                            var s = "".concat(W.Config.tts.url, "?").concat(K.a.param(r));
                            return e._getCachedAudioElement().attr("src", s)
                        }
                    }
                }, {
                    key: "_getLocationOptions",
                    value: function(e) {
                        var t = J.getUnprojectedGeometry(e);
                        return {
                            lon: t.lon,
                            lat: t.lat
                        }
                    }
                }]),
                e
        }();
    Z._cachedAudioElement = null,
        Z._getCachedAudioElement = function() {
            return null != this._cachedAudioElement ? this._cachedAudioElement : this._cachedAudioElement = K()("<audio />").attr("autoplay", !0)
        };
    var Q = Z,
        X = n(54),
        ee = n(25),
        te = function(e) {
            function t() {
                var e;
                return l()(this, t),
                    (e = h()(this, g()(t).apply(this, arguments)))._ttsPlayer = new Q,
                    e
            }
            return _()(t, e),
                c()(t, [{
                    key: "className",
                    value: function() {
                        return "tts-playback"
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            ttsButton: ".tts-button"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .play-button": "_playButtonClicked"
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:ttsDisabled": "render",
                            "change:country": "render"
                        }
                    }
                }, {
                    key: "_playButtonClicked",
                    value: function() {
                        var e = this._getSelectedTTSLocale();
                        return this._ttsPlayer.sayStreetName(this.model.attributes.streetName, this.options.lonlat, e)
                    }
                }, {
                    key: "_getSelectedTTSLocale",
                    value: function() {
                        return this.$el.find(".locale-select option:selected").val()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.model.getTTSLocales();
                        this.ui.ttsButton.popover({
                            html: !0,
                            content: Object(X.getHTML)("templates/segment/tts-playback-popover", {
                                locales: e
                            }),
                            placement: "bottom"
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/tts-playback"
                    }
                }], [{
                    key: "fromAddress",
                    value: function(e, n) {
                        return new t({
                            model: e,
                            lonlat: ee.toLonLat(n)
                        })
                    }
                }]),
                t
        }(j.a.View),
        ne = n(71),
        ie = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "generateDescription",
                    value: function() {
                        var e = (this.subActions[0].feature || this.subActions[0].segment).type,
                            t = this.subActions.filter(function(e) {
                                return e instanceof L.a
                            }).length;
                        1 === t ? this._description = I18n.t("save.changes_log.actions.UpdateFeatureAddress", {
                            objectType: e
                        }) : t > 1 && (this._description = I18n.t("save.changes_log.actions.MultiUpdateFeatureAddress", {
                            count: t,
                            objectType: e
                        }))
                    }
                }]),
                t
        }(n.n(ne).a),
        re = n(20),
        se = n(448),
        oe = n.n(se),
        ae = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return _()(t, e),
                c()(t, [{
                    key: "className",
                    value: function() {
                        return "address-edit-view"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "submit .address-form": "_formSubmitted",
                            "click .full-address": "_editClicked",
                            "click .cancel-button": "_cancelClicked",
                            "click .add-alt-street-btn": "_addAltStreetClicked"
                        }
                    }
                }, {
                    key: "modelEvent",
                    value: function() {
                        return {
                            "change:altStreets": "render"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            streetNameInput: ".street-name",
                            cityNameInput: ".city-name"
                        }
                    }
                }, {
                    key: "defaultOptions",
                    value: function() {
                        return {
                            editStreet: !0,
                            editHouseNumber: !1,
                            editAltStreets: !1
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            altStreetsRegion: ".alt-streets",
                            newAltStreetsRegion: ".new-alt-streets",
                            ttsPlaybackRegion: ".tts-playback-region"
                        }
                    }
                }, {
                    key: "cityBindings",
                    value: function() {
                        return {
                            ".city-id": {
                                observe: "cityID",
                                attributes: D.a.requireAndEnableIfNot("emptyCity"),
                                selectOptions: {
                                    collection: "this.cityOptions",
                                    defaultOption: {
                                        value: null,
                                        label: I18n.t("mte.edit.select_city")
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".street-name": {
                                observe: ["streetName", "emptyStreet"],
                                onGet: function(e) {
                                    var t = o()(e, 2),
                                        n = t[0];
                                    return t[1] ? "" : n
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: D.a.requireAndEnableIfNot("emptyStreet")
                            },
                            ".city-name": {
                                observe: ["cityName", "emptyCity", "citySelectedById"],
                                onGet: function(e) {
                                    var t = o()(e, 3),
                                        n = t[0],
                                        i = t[1];
                                    t[2];
                                    return i ? "" : n
                                },
                                onSet: function(e) {
                                    return [e, !1, !1]
                                },
                                attributes: D.a.requireAndEnableIfNot("emptyCity")
                            },
                            ".state-id": {
                                observe: "stateID",
                                selectOptions: {
                                    collection: "this.stateOptions"
                                }
                            },
                            ".country-id": {
                                observe: "countryID",
                                selectOptions: {
                                    collection: "this.countryOptions"
                                }
                            },
                            ".empty-street": {
                                observe: "emptyStreet",
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return this.options.disableEmptyStreet
                                    }
                                }]
                            },
                            ".empty-city": {
                                observe: "emptyCity",
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return this.options.disableEmptyCity
                                    }
                                }]
                            },
                            ".house-number": "houseNumber",
                            ".preview": {
                                observe: "addressFormShown",
                                visible: function(e) {
                                    return !e
                                }
                            },
                            ".address-form": {
                                observe: "addressFormShown",
                                visible: !0,
                                visibleFn: D.b
                            },
                            ".quota-tooltip": {
                                visible: !0,
                                visibleFn: D.b,
                                onGet: function() {
                                    return !this._canChangeStreetName()
                                }
                            },
                            ".full-address": {
                                observe: "fullAddress",
                                classes: {
                                    disabled: {
                                        observe: "editable",
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this;
                        this.options = b.a.defaults(e, this.defaultOptions()),
                            this.addressModel = e.getAddress(),
                            this.dataModel = e.dataModel,
                            this.model = A.fromAddress(this.addressModel, this.dataModel),
                            this.model.set({
                                editable: e.editable,
                                fullAddress: this.addressModel.format({
                                    formatStreet: this.options.editStreet
                                })
                            }),
                            this._canChangeStreetNameUseCase = new oe.a(this.dataModel.loginManager.user),
                            this.showStatesSelection = this.dataModel.hasStates(),
                            this.showCitySelection = this.options.showCitySelection,
                            this._generateOptions(),
                            this.showCitySelection ? this._initCitySelect() : this._initCityInput(),
                            this.listenTo(this.model, "change:cityID change:cityName change:emptyCity", function() {
                                t.showStatesSelection && t._updateStateFromCity()
                            }),
                            this.showStatesSelection && this.listenTo(this.model, "change:stateID", function() {
                                t._generateCityOptions()
                            }),
                            this.options.editStreet && this._initStreetInput()
                    }
                }, {
                    key: "_generateOptions",
                    value: function() {
                        this.countryOptions = this.dataModel.countries.getObjectArray().map(function(e) {
                                return {
                                    label: e.name,
                                    value: e.getID()
                                }
                            }),
                            this.stateOptions = this.dataModel.states.getObjectArray().map(function(e) {
                                return {
                                    label: e.name,
                                    value: e.getID()
                                }
                            })
                    }
                }, {
                    key: "_canChangeStreetName",
                    value: function() {
                        return this._canChangeStreetNameUseCase.canChangeStreetName()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        m()(g()(t.prototype), "onRender", this).call(this),
                            this.stickit(this.model, b.a.extend(this.bindings(), this.cityBindings())),
                            this._initTTSView(),
                            this.options.editAltStreets && !this.options.isAltAddress && (this.showChildView("altStreetsRegion", new F({
                                    collection: this.model.attributes.altStreets
                                })),
                                this.showChildView("newAltStreetsRegion", new z({
                                    dataModel: this.options.dataModel,
                                    collection: this.model.attributes.newAltStreets
                                })))
                    }
                }, {
                    key: "_initCitySelect",
                    value: function() {
                        var e = this;
                        return this._generateCityOptions(),
                            this.listenTo(this.dataModel.cities, R.UPDATED, function() {
                                return e._generateCityOptions(),
                                    e.stickit(e.model, e.cityBindings())
                            })
                    }
                }, {
                    key: "_initTTSView",
                    value: function() {
                        if (this.options.enableTTS) {
                            var e = this.options.features[0],
                                t = re.getVertex(e.geometry, 0),
                                n = te.fromAddress(this.model, t);
                            this.getRegion("ttsPlaybackRegion").reset(),
                                this.showChildView("ttsPlaybackRegion", n)
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this._canChangeStreetNameUseCase.getMaxAllowedStreetNamesChanges();
                        return {
                            dataModel: this.dataModel,
                            MAX_LENGTH: T,
                            CITY_NAME_PATTERN: C.CITY_NAME_PATTERN,
                            showStatesSelection: this.dataModel.hasStates(),
                            showHouseNumberInput: this.options.editHouseNumber,
                            showStreetInput: this.options.editStreet,
                            showCitySelection: this.showCitySelection,
                            showAltStreets: this.options.editAltStreets,
                            enableTTS: this.options.enableTTS,
                            maxAllowedStreetNamesChanges: e
                        }
                    }
                }, {
                    key: "_formSubmitted",
                    value: function(e) {
                        e.preventDefault();
                        var t = this.model.attributes,
                            n = this._shouldSelectCityById();
                        t.emptyStreet && (this.model.set("streetName", ""),
                                t = this.model.attributes),
                            t.emptyCity && (this.model.set("cityName", ""),
                                t = this.model.attributes),
                            n || this._cityExists(t) ? this._submitAddressChanges(t, n) : this._confirmCityChanges(t)
                    }
                }, {
                    key: "_getAltStreetActions",
                    value: function() {
                        if (!this.options.editAltStreets)
                            return [];
                        var e = this.options.features,
                            t = [],
                            n = this.model.attributes.altStreets.filter(function(e) {
                                return !e.get("deleted")
                            });
                        return t.push.apply(t, r()(e.map(function(e) {
                                return new Y.a(e, {
                                    streetIDs: n.map(function(e) {
                                        return e.id
                                    })
                                })
                            }))),
                            this.model.attributes.newAltStreets.forEach(function(n) {
                                t.push.apply(t, r()(e.map(function(e) {
                                    return new N.a(e, n.getStreetAttributes())
                                })))
                            }),
                            t
                    }
                }, {
                    key: "_submitAddressChanges",
                    value: function(e, t) {
                        var n = this,
                            i = this.options.features.map(function(i) {
                                return new L.a(i, e, {
                                    updateStreet: n.options.editStreet,
                                    getCityFromDataModel: t,
                                    updateHouseNumber: n.options.editHouseNumber,
                                    streetIDField: n.options.streetIDField
                                })
                            });
                        this.dataModel.actionManager.add(new ie([].concat(r()(i), r()(this._getAltStreetActions())))),
                            this.addressModel = this.options.getAddress(),
                            this.model.set({
                                fullAddress: this.addressModel.format({
                                    formatStreet: this.options.editStreet
                                })
                            }),
                            this.model.set({
                                addressFormShown: !1
                            }),
                            this.trigger("addressChanged")
                    }
                }, {
                    key: "_cityExists",
                    value: function(e) {
                        return O.a.citiesByAttributes(this.dataModel, {
                            isEmpty: e.emptyCity,
                            name: e.cityName,
                            countryID: e.countryID,
                            stateID: e.stateID
                        }).length > 0
                    }
                }, {
                    key: "_confirmCityChanges",
                    value: function(e) {
                        var t, n, i, r = this;
                        (t = e.cityName,
                            n = e.countryID,
                            i = e.stateID,
                            (new x.a).getCityExists(t, n, i).then(function(e) {
                                var n = !0;
                                return e.isDistant ? n = window.confirm(I18n.t("edit.segment.city_confirm.distant", {
                                        city_name: t
                                    })) : null === e.existingCity && (n = window.confirm(I18n.t("edit.segment.city_confirm.no_city", {
                                        city_name: t
                                    }))),
                                    n
                            })).then(function(t) {
                            t && r._submitAddressChanges(e)
                        }).catch(function(t) {
                            console.error(t),
                                r._submitAddressChanges(e)
                        })
                    }
                }, {
                    key: "_editClicked",
                    value: function() {
                        this.editAddress()
                    }
                }, {
                    key: "_cancelClicked",
                    value: function() {
                        this.model.set({
                                addressFormShown: !1
                            }),
                            this.model.populateFromAddressModel(this.addressModel)
                    }
                }, {
                    key: "_updateStateFromCity",
                    value: function() {
                        var e = this._getSelectedCity();
                        null != e && null != e.attributes.stateID && this.model.set("stateID", e.attributes.stateID)
                    }
                }, {
                    key: "_addAltStreetClicked",
                    value: function() {
                        this.model.addNewAltStreet(this.options.emptyCityForAltStreets)
                    }
                }, {
                    key: "editAddress",
                    value: function() {
                        this.model.get("editable") && this.model.set({
                            addressFormShown: !0
                        })
                    }
                }, {
                    key: "toggleEditable",
                    value: function(e) {
                        return !1 === e && this.model.set({
                                addressFormShown: !1
                            }),
                            this.model.set({
                                editable: e
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/address/edit"
                    }
                }]),
                t
        }(G.a);
    t.default = ae
}, , function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "STATE_CHANGED", function() {
            return i
        });
    var i = "STATE_CHANGED"
}, function(e, t, n) {
    "use strict";
    var i;
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.UNKNOWN = "UNKNOWN",
        t.PARKING_TYPE_PUBLIC = "PUBLIC",
        t.PARKING_TYPE = ((i = {})[t.PARKING_TYPE_PUBLIC] = t.PARKING_TYPE_PUBLIC,
            i.RESTRICTED = "RESTRICTED",
            i.PRIVATE = "PRIVATE",
            i),
        t.COST_TYPE = {
            FREE: "FREE",
            LOW: "LOW",
            MODERATE: "MODERATE",
            EXPENSIVE: "EXPENSIVE"
        },
        t.PAYMENT_TYPE = {
            CASH: "CASH",
            CHECKS: "CHECKS",
            CREDIT: "CREDIT",
            DEBIT_CARD: "DEBIT_CARD",
            PERMIT: "PERMIT",
            MEMBERSHIP: "MEMBERSHIP",
            PREPAID: "PREPAID",
            PARKING_APP: "PARKING_APP",
            DIGITAL_WALLET: "DIGITAL_WALLET",
            SMS_CALL: "SMS_CALL",
            ELECTRONIC_PASS: "ELECTRONIC_PASS"
        },
        t.LOT_TYPE = {
            STREET_LEVEL: "STREET_LEVEL",
            STREET_LEVEL_COVERED: "STREET_LEVEL_COVERED",
            MULTI_LEVEL: "MULTI_LEVEL",
            UNDERGROUND: "UNDERGROUND"
        },
        t.SPOTS_ESTIMATE = {
            R_1_TO_10: "R_1_TO_10",
            R_11_TO_30: "R_11_TO_30",
            R_31_TO_60: "R_31_TO_60",
            R_61_TO_100: "R_61_TO_100",
            R_101_TO_300: "R_101_TO_300",
            R_301_TO_600: "R_301_TO_600",
            R_600_PLUS: "R_600_PLUS"
        },
        t.SPOTS_ESTIMATE_LIST = [{
            value: t.SPOTS_ESTIMATE.R_1_TO_10,
            range: [1, 10]
        }, {
            value: t.SPOTS_ESTIMATE.R_11_TO_30,
            range: [11, 30]
        }, {
            value: t.SPOTS_ESTIMATE.R_31_TO_60,
            range: [31, 60]
        }, {
            value: t.SPOTS_ESTIMATE.R_61_TO_100,
            range: [61, 100]
        }, {
            value: t.SPOTS_ESTIMATE.R_101_TO_300,
            range: [101, 300]
        }, {
            value: t.SPOTS_ESTIMATE.R_301_TO_600,
            range: [301, 600]
        }, {
            value: t.SPOTS_ESTIMATE.R_600_PLUS,
            range: [601, 1 / 0]
        }]
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(10),
        c = n.n(u),
        d = n(0),
        h = n.n(d),
        p = n(154),
        g = n(24),
        f = n(191),
        m = {
            strokeColor: "#fcc934",
            fillColor: "#fcc934",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .2,
            graphicZIndex: "${getZIndex}"
        },
        v = function(e) {
            var t = Object(g.a)({
                Polygon: m
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Object(f.getBoundsArea)(t)
                    }
                }
            })
        },
        _ = Object(g.a)({
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        y = Object(g.a)({
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        b = Object(g.b)("isUnchanged", !1, {
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        E = Object(g.b)("isUnchanged", !1, {
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        w = Object(g.b)("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0,
            cursor: "move"
        }),
        S = new OL.StyleMap({
            default: v([w, b]),
            highlight: v([Object(g.a)({
                Polygon: {
                    strokeColor: "#fcc934",
                    fillColor: "#fcc934",
                    fillOpacity: .3
                }
            }), w, E]),
            select: v([_]),
            highlightselected: v([_]),
            delete: v([y]),
            highlightdeleted: v([y])
        }),
        k = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: [Object(g.a)({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillOpacity: 0
                }), Object(g.b)("isUnchanged", !1, {
                    fillColor: "#ff8383",
                    fillOpacity: 1
                })]
            }),
            highlight: new OpenLayers.Style(null, {
                rules: [Object(g.a)({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillColor: "#00ece3",
                    fillOpacity: 1
                }), Object(g.b)("isUnchanged", !1, {
                    fillOpacity: 1,
                    fillColor: "#eb7171"
                })]
            })
        }),
        T = n(146),
        I = [Object(g.b)("_cameraRotator", !0, {
            pointRadius: 7,
            strokeOpacity: 1,
            strokeColor: "#aaaaaa",
            fillColor: "#ff3300",
            fillOpacity: 1,
            strokeWidth: 2,
            externalGraphic: null,
            graphicZIndex: 1
        }), Object(g.b)("type", "camera", {})],
        A = function(e) {
            return new OpenLayers.Style(e, {
                rules: I,
                context: {
                    getAzymuth: function(e) {
                        if (e.model)
                            return e.model.attributes.azymuth
                    },
                    getImageURL: function(e) {
                        var t = e.model;
                        if (t) {
                            var i = t.attributes.type;
                            switch (i) {
                                case 2:
                                case 3:
                                case 4:
                                    return n(736)("./camera".concat(i, ".png"));
                                default:
                                    return ""
                            }
                        }
                    }
                }
            })
        },
        M = new OpenLayers.StyleMap({
            default: A({
                externalGraphic: "${getImageURL}",
                pointRadius: 18,
                rotation: "${getAzymuth}",
                graphicZIndex: 1
            }),
            highlight: A({
                pointRadius: 22
            }),
            select: A({
                pointRadius: 22
            }),
            highlightselected: A({
                pointRadius: 22
            }),
            drag: A({
                pointRadius: 22
            })
        }),
        O = {
            strokeColor: "#ffc62e",
            fillColor: "#ffc62e",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        C = function(e) {
            var t = Object(g.a)({
                Polygon: O
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        R = Object(g.a)({
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        D = Object(g.a)({
            Polygon: {
                fill: !1,
                strokeDashstyle: "dash",
                strokeColor: "#ff8383"
            }
        }),
        L = Object(g.b)("isUnchanged", !1, {
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        P = Object(g.b)("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        }),
        N = new OL.StyleMap({
            default: C([P, L]),
            highlight: C([Object(g.a)({
                Polygon: {
                    strokeColor: "#fed15a",
                    fillColor: "#fed15a"
                }
            }), P, L]),
            select: C([R]),
            highlightselected: C([R]),
            delete: C([D]),
            highlightdeleted: C([D])
        }),
        x = n(211),
        V = n(157),
        j = n(12),
        U = "#ffffff",
        F = {
            strokeColor: U,
            fillColor: U,
            strokeDashstyle: "dash",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        B = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: U,
            fillColor: U,
            graphicZIndex: 0,
            fillOpacity: 1
        },
        G = function(e) {
            var t = Object(g.a)({
                Point: B,
                Polygon: F
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = j.getBounds(e.geometry);
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        H = Object(g.a)({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fontFamily: "FontAwesome",
                label: "",
                labelOutlineWidth: 0,
                fontColor: "white",
                fontSize: 11,
                labelYOffset: 0,
                pointRadius: 12,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        z = Object(g.a)({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        q = Object(g.b)("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        Y = Object(g.b)("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        $ = Object(g.b)("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        }),
        K = new OL.StyleMap({
            default: G([$, q, V.b]),
            highlight: G([Object(g.a)({
                Point: {
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: U,
                    fillOpacity: .6,
                    strokeOpacity: 1
                },
                Polygon: {
                    fillOpacity: .6,
                    strokeColor: U,
                    fillColor: U
                }
            }), $, Y, V.a]),
            select: G([H]),
            highlightselected: G([H]),
            delete: G([z]),
            highlightdeleted: G([z])
        }),
        J = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                fillOpacity: .3,
                strokeOpacity: .7,
                strokeWidth: 2,
                strokeColor: "#333",
                label: "${getLabel}",
                fontColor: "#333",
                labelOutlineColor: "white",
                labelOutlineWidth: 2,
                fontSize: 14,
                fontWeight: "bold",
                fillColor: "${getFillColor}"
            }, {
                context: {
                    getLabel: function(e) {
                        return e.model.getUserName()
                    },
                    getFillColor: function(e) {
                        var t = (e.model.userID % 16777216).toString(16);
                        return "#".concat(t)
                    }
                }
            }),
            highlight: new OpenLayers.Style({
                strokeOpacity: 1,
                strokeWidth: 3,
                fontSize: 18
            })
        }),
        Z = n(23),
        Q = [Z.ATTR_CHANGED, Z.STATE_DELETED].join(" "),
        X = OL.Class(OL.Layer.Vector, {
            repo: null,
            _featureMap: null,
            model: null,
            initialize: function(e, t, n, i) {
                this.model = t,
                    this.repo = n,
                    OL.Layer.Vector.prototype.initialize.apply(this, [e, i]),
                    this._featureMap = {},
                    Array.isArray(this.repo) || (this.repo = [this.repo]);
                for (var r = 0; r < this.repo.length; r++) {
                    var s = this.repo[r];
                    this.registerRepoEvents(s)
                }
            },
            registerRepoEvents: function(e) {
                e.on(Z.ADDED, this.onFeaturesAdded, this),
                    e.on(Q, this.onFeaturesChanged, this),
                    e.on(Z.REMOVED, this.onFeaturesRemoved, this)
            },
            unregisterRepoEvents: function(e) {
                e.off(Z.ADDED, this.onFeaturesAdded, this),
                    e.off(Q, this.onFeaturesChanged, this),
                    e.off(Z.REMOVED, this.onFeaturesRemoved, this)
            },
            destroy: function() {
                for (var e = 0; e < this.repo.length; e++) {
                    var t = this.repo[e];
                    this.unregisterRepoEvents(t)
                }
                return OL.Layer.Vector.prototype.destroy.apply(this)
            },
            getVector: function(e) {
                return this._featureMap[e.getID()] || null
            },
            onFeaturesAdded: function(e) {
                var t = this;
                return e = e.map(function(e) {
                        var n = new OL.Feature.Vector(e.geometry);
                        return n.model = e,
                            t._featureMap[e.getID()] = n,
                            t.fixRenderIntent(n),
                            n
                    }),
                    this.addFeatures(e)
            },
            _getFeatureByPrevId: function(e) {
                var t = e._prevID;
                if (!t)
                    return null;
                var n = this._featureMap[t];
                return n ? (this._featureMap[t] = void 0,
                    this._featureMap[e.getID()] = n,
                    n) : null
            },
            onFeaturesChanged: function(e) {
                for (var t = [], n = [], i = [], r = 0; r < e.length; r++) {
                    var s = e[r],
                        o = this._featureMap[s.getID()] || this._getFeatureByPrevId(s);
                    if (o)
                        this.fixRenderIntent(o),
                        this._updateFeatureModel(o, s),
                        s.hidden ? (this._featureMap[s.getID()] = void 0,
                            t.push(o)) : (o.geometry = s.geometry,
                            this.drawFeature(o)),
                        (s.isDeleted() || s.hidden) && n.push(o);
                    else {
                        var a = new OL.Feature.Vector(s.geometry);
                        a.model = s,
                            i.push(a),
                            this._featureMap[s.getID()] = a
                    }
                }
                return W.selectionManager.unselectFeatures(n),
                    this.removeFeatures(t),
                    this.addFeatures(i)
            },
            onFeaturesRemoved: function(e) {
                var t = this,
                    n = e.map(function(e) {
                        var n = t._featureMap[e.getID()];
                        return t._featureMap[e.getID()] = void 0,
                            n
                    });
                n = h()(n).filter(function(e) {
                    return null != e
                }).value();
                var i = h()(n).filter(function(e) {
                    return W.selectionManager.isSelected(e)
                }).value();
                return W.selectionManager.unselectFeatures(i),
                    this.removeFeatures(n)
            },
            fixRenderIntent: function(e) {
                e.model.isDeleted() ? e.renderIntent = "delete" : "delete" === e.renderIntent && (e.renderIntent = e.model.isSelected() ? "select" : "default")
            },
            _updateFeatureModel: function(e, t) {
                null != t.geometry && null != e.geometry && (t.geometry.id = e.geometry.id),
                    e.model = t
            },
            CLASS_NAME: "Waze.Layer.FeatureLayer"
        }),
        ee = OpenLayers.Class(X, {
            colorEmptyStreetSegments: !1,
            initialize: function() {
                X.prototype.initialize.apply(this, arguments),
                    W.accelerators.events.register("colorEmptyStreets", this, this.colorEmptyStreetsToggled)
            },
            colorEmptyStreetsToggled: function() {
                this.colorEmptyStreetSegments = !this.colorEmptyStreetSegments,
                    this.redraw()
            },
            CLASS_NAME: "Waze.Layer.SegmentLayer"
        }),
        te = OpenLayers.Class(X, {
            nodeDisplayMaxScale: 1e4,
            shouldDisplayFeature: function(e) {
                return !0
            },
            onNodesAdded: function(e) {
                this.onFeaturesAdded(e)
            },
            onNodesChanged: function(e) {
                this.onFeaturesChanged(e)
            },
            onNodesRemoved: function(e) {
                this.onFeaturesRemoved(e)
            },
            onDisplayChanged: function(e) {
                this.displayedNodes = e.scale <= this.nodeDisplayMaxScale
            },
            updateDisplayedFeatures: function(e) {
                X.prototype.updateDisplayedFeatures.apply(this, [Object.assign({}, e.nodes)])
            },
            CLASS_NAME: "Waze.Layer.NodeLayer"
        }),
        ne = n(60),
        ie = n(147),
        re = n(148),
        se = OpenLayers.Class(OpenLayers.Layer.Vector, {
            rendererOptions: {
                zIndexing: !0
            },
            renderers: [ne.a],
            styleMap: ie.a,
            initialize: function(e, t) {
                OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments),
                    this.driveRenderer = new re.a(this),
                    this.styleMap.styles.select = new OpenLayers.Style({
                        strokeColor: "black",
                        strokeWidth: 10,
                        pointerEvents: "none"
                    }),
                    this.styleMap.styles.highlight = new OpenLayers.Style({
                        strokeWidth: 10,
                        strokeOpacity: 1
                    })
            },
            setMap: function(e) {
                OpenLayers.Layer.Vector.prototype.setMap.apply(this, arguments),
                    this.map.events.on({
                        zoomend: this.onZoomEnd,
                        scope: this
                    })
            },
            destroy: function() {
                OpenLayers.Layer.Vector.prototype.destroy.apply(this, arguments),
                    this.map && this.map.events.un({
                        zoomend: this.onZoomEnd
                    })
            },
            onZoomEnd: function() {
                this.redraw()
            },
            drawDrive: function() {
                this.clearDrive();
                var e = this.pm.currentSessionData;
                e && e.driveParts.forEach(function(e) {
                    e.isMatched() ? this.driveRenderer.drawUserDrive(e.geometry) : this.driveRenderer.drawDisconnect(e.geometry)
                }, this)
            },
            clearDrive: function() {
                this.removeAllFeatures()
            },
            zoomToDrive: function() {
                var e = this.pm.currentSessionData;
                if (e) {
                    var t = e.getDriveBounds(),
                        n = this.map.getZoomForExtent(t);
                    this.map.setCenter(t.getCenterLonLat(), n)
                }
            },
            redraw: function() {
                this.pm && this.drawDrive()
            },
            CLASS_NAME: "Waze.Layer.ArchiveLayer"
        }),
        oe = OL.Class(X, {
            fogOfWar: null,
            renderers: [ne.a],
            styleMap: new OL.StyleMap({
                default: new OL.Style({
                    fillOpacity: .3,
                    strokeOpacity: 1,
                    strokeWidth: 6,
                    fillColor: "white"
                })
            }),
            setMap: function() {
                X.prototype.setMap.apply(this, arguments)
            },
            setVisibility: function() {
                X.prototype.setVisibility.apply(this, arguments),
                    this.getVisibility() ? (this.map.events.register("moveend", this, this._refreshFogOfWar),
                        this._updateUserAreas()) : this.map.events.unregister("moveend", this, this._refreshFogOfWar)
            },
            _refreshFogOfWar: function() {
                this.removeFeatures(this.fogOfWar),
                    this._createFogOfWar(),
                    this.addFeatures(this.fogOfWar),
                    this.redraw()
            },
            onFeaturesAdded: function() {
                this._updateUserAreas()
            },
            _updateUserAreas: function() {
                if (this.removeAllFeatures(),
                    this.getVisibility()) {
                    var e = [];
                    this.model.userAreas.getObjectArray().forEach(function(t) {
                            this._createEditableAreaVector(e, t.geometry)
                        }, this),
                        this._createFogOfWar(),
                        this.addFeatures(e),
                        this.addFeatures(this.fogOfWar)
                }
            },
            _createEditableAreaVector: function(e, t) {
                e.push(new OL.Feature.Vector(t, {}, {
                        maskID: "editableAreaMask",
                        fillColor: "#000000",
                        fillOpacity: 1
                    })),
                    e.push(new OL.Feature.Vector(j.cloneGeometry(t), {}, {
                        fillColor: "transparent",
                        fillOpacity: 0,
                        strokeColor: "gray",
                        strokeWidth: 1
                    }))
            },
            _createFogOfWar: function() {
                this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                    fillColor: "black",
                    fillOpacity: .5,
                    strokeWidth: 0,
                    mask: "url(#editableAreaMask)"
                })
            },
            CLASS_NAME: "Waze.Layer.UserLayer"
        }),
        ae = n(30),
        le = OpenLayers.Class(OpenLayers.Layer.XYZ, {
            key: null,
            tileUrl: "https://www.googleapis.com/tile/v1/tiles/${z}/${x}/${y}?session=${session}&key=${key}",
            type: "satellite",
            language: "en-US",
            region: "us",
            sessionKey: null,
            gettingSession: !1,
            sessionError: !1,
            attributionRequest: null,
            ATTRIBUTION_THROTTLE: 1e3,
            initialize: function(e) {
                Object.assign(e, {
                    sphericalMercator: !0
                }, e);
                var t = [e.name || "Google ".concat(e.type || this.type), null, e];
                OpenLayers.Layer.XYZ.prototype.initialize.apply(this, t),
                    this.tileOptions = Object.assign({
                        crossOriginKeyword: null
                    }, this.options.tileOptions),
                    this.getSessionKey(),
                    this.updateAttribution = h.a.debounce(this.updateAttribution, this.ATTRIBUTION_THROTTLE)
            },
            getSessionKey: function() {
                var e = this;
                if (!this.gettingSession && !this.sessionError) {
                    var t = this;
                    this.gettingSession = !0,
                        Object(ae.httpPost)("https://www.googleapis.com/tile/v1/createSession?key=".concat(this.key), {
                            mapType: this.type,
                            language: this.language,
                            region: this.region
                        }, {
                            dataType: "json"
                        }).then(function(n) {
                            e.sessionKey = n.session,
                                window.setTimeout(t.onSessionExpire.bind(e), 72e6),
                                t.redraw(),
                                t.updateAttribution()
                        }).catch(function() {
                            t.sessionError = !0,
                                t.events.triggerEvent("loaderror")
                        }).finally(function() {
                            t.gettingSession = !1
                        })
                }
            },
            onSessionExpire: function() {
                this.map.events.register("movestart", this, this.renewSessionKey)
            },
            renewSessionKey: function() {
                this.map.events.unregister("movestart", this, this.renewSessionKey),
                    this.sessionKey = null,
                    this.getSessionKey()
            },
            getURL: function(e) {
                if (this.sessionKey) {
                    var t = this.getXYZ(e);
                    return t.session = this.sessionKey,
                        t.key = this.key,
                        OpenLayers.String.format(this.tileUrl, t)
                }
            },
            updateAttribution: function() {
                var e = this;
                if (null !== this.sessionKey) {
                    var t = this.map.getExtent();
                    null !== t && (t.transform(this.map.getProjectionObject(), new OpenLayers.Projection("EPSG:4326")),
                        this.attributionRequest = Object(ae.httpGet)("https://www.googleapis.com/tile/v1/viewport", {
                            key: this.key,
                            session: this.sessionKey,
                            zoom: this.getServerZoom(),
                            north: t.top,
                            south: t.bottom,
                            east: t.right,
                            west: t.left
                        }).then(function(t) {
                            e.attribution = "<a href='http://www.google.com/intl/en-US_US/help/terms_maps.html' target='_blank' rel='noopener noreferrer' class='waze-black-link'>Terms</a>\n           <a href='https://www.waze.com/legal/notices' target='_blank' class='waze-black-link' rel='noopener noreferrer'>Notices</a>\n           <span>".concat(t.copyright, "</span>")
                        }).catch(function() {
                            e.attribution = ""
                        }).finally(function() {
                            e.attributionRequest = null,
                                e.map.events.triggerEvent("changelayer", {
                                    layer: e,
                                    property: "attribution"
                                })
                        }))
                }
            },
            setMap: function() {
                OpenLayers.Layer.XYZ.prototype.setMap.apply(this, arguments),
                    this.updateAttribution(),
                    this.map.events.register("moveend", this, this.updateAttribution)
            },
            clone: function(e) {
                return null === e && (e = new OpenLayers.Layer.Google(this.options)),
                    e = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [e])
            },
            destroy: function() {
                this.map && this.map.events.unregister("moveend", this, this.updateAttribution),
                    OpenLayers.Layer.XYZ.prototype.destroy.apply(this, arguments)
            },
            CLASS_NAME: "OpenLayers.Layer.Google"
        }),
        ue = n(5),
        ce = n.n(ue),
        de = n(3),
        he = n.n(de),
        pe = n(14),
        ge = n.n(pe),
        fe = n(6),
        me = n.n(fe),
        ve = n(63),
        _e = n.n(ve),
        ye = n(8),
        be = n.n(ye);

    function Ee(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var we = function(e) {
            function t(e) {
                var n, i = e.map,
                    r = e.element,
                    s = e.getView,
                    a = e.target,
                    l = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return o()(this, t),
                    (n = ce()(this, he()(t).call(this, {
                        map: i,
                        lonlat: null,
                        element: r
                    }, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? Ee(Object(n), !0).forEach(function(t) {
                                be()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ee(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({
                        onMount: function(e) {
                            return n._balloonOnMount(e)
                        },
                        onHidden: function(e) {
                            return n._balloonOnHidden(e)
                        },
                        interactive: !0,
                        interactiveBorder: 5,
                        target: a
                    }, l)))).getView = s,
                    n.view = null,
                    n.currentTip = null,
                    n
            }
            return me()(t, e),
                l()(t, [{
                    key: "_createView",
                    value: function(e, t) {
                        this.view = this.getView.call(void 0, t),
                            this._insertViewToContent(e),
                            this.view.render()
                    }
                }, {
                    key: "_insertViewToContent",
                    value: function(e) {
                        c()(e).empty(),
                            c()(e).append(this.view.el)
                    }
                }, {
                    key: "_onMapMoveStart",
                    value: function() {
                        this.hide()
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        ge()(he()(t.prototype), "onBeforeDestroy", this).call(this),
                            this._destroyView()
                    }
                }, {
                    key: "_destroyView",
                    value: function() {
                        this.view && (this.view.destroy(),
                            this.view = null)
                    }
                }, {
                    key: "_balloonOnHidden",
                    value: function(e) {
                        this.view && this.view.triggerMethod("balloon:hidden")
                    }
                }, {
                    key: "_setVisibleTooltip",
                    value: function(e) {
                        this.currentTip && this.currentTip !== e && this.hide(),
                            this.currentTip = e
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.currentTip && (this.currentTip.hide(),
                            this.currentTip = null)
                    }
                }, {
                    key: "_balloonOnMount",
                    value: function(e) {
                        this._setVisibleTooltip(e);
                        var t = e.popperChildren.content,
                            n = e.reference;
                        this._destroyView(),
                            this._createView(t, n)
                    }
                }]),
                t
        }(n(205).a),
        Se = n(7),
        ke = n.n(Se),
        Te = n(4),
        Ie = n.n(Te),
        Ae = n(227),
        Me = n(137),
        Oe = n(61),
        Ce = n(9),
        Re = function(e) {
            function t(e) {
                var n;
                o()(this, t),
                    n = ce()(this, he()(t).call(this, e));
                var i = e.featureId,
                    r = e.dataModel,
                    s = e.map,
                    a = e.actionManager;
                n._dataModel = r,
                    n._houseNumberId = i,
                    n._actionManager = a,
                    n._map = s;
                var l = n._getFeature();
                return n._segmentId = l.getSegmentId(),
                    n.model = new ke.a.Model({
                        title: n.getTitle(),
                        canEnterHouseNumbersMode: n._canEnterHouseNumbersMode()
                    }),
                    n
            }
            return me()(t, e),
                l()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .edit-button": "_onEditButtonClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".edit-button": {
                                observe: "canEnterHouseNumbersMode",
                                visible: !0,
                                visibleFn: Ce.b
                            },
                            ".title": "title"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/HouseNumbers/templates/house-numbers-marker-tooltip"
                    }
                }]),
                l()(t, [{
                    key: "_canEnterHouseNumbersMode",
                    value: function() {
                        var e = this._getSegment();
                        return new Me.SegmentsHouseNumbersUseCase(this._dataModel, e).canEnterHouseNumbersMode()
                    }
                }, {
                    key: "_getFeature",
                    value: function() {
                        return this._dataModel.segmentHouseNumbers.get(this._houseNumberId)
                    }
                }, {
                    key: "_getSegment",
                    value: function() {
                        return this._dataModel.segments.getObjectById(this._segmentId)
                    }
                }, {
                    key: "_getAddress",
                    value: function() {
                        return this._getSegment().getAddress()
                    }
                }, {
                    key: "getTitle",
                    value: function() {
                        var e = this._getAddress().getStreetName(),
                            t = this._getFeature().getNumber();
                        return I18n.t("edit.house_numbers.layer.tooltip_title", {
                            streetName: e,
                            houseNumber: t
                        })
                    }
                }, {
                    key: "_onEditButtonClick",
                    value: function() {
                        var e = this._getSegment(),
                            t = new Oe.SegmentStreetsUseCase(this._dataModel, e).getEntireStreet(e);
                        this._canEnterHouseNumbersMode() && new Ae.a({
                            model: this._dataModel,
                            map: W.map,
                            editable: !0,
                            segments: t
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }]),
                t
        }(Ie.a.View),
        De = n(25),
        Le = function(e) {
            function t(e, n, i) {
                var r;
                return o()(this, t),
                    (r = ce()(this, he()(t).call(this, e, n, i))).tooltip = null,
                    r._editingMediator = i.editingMediator,
                    r._bindEvents(),
                    r
            }
            return me()(t, e),
                l()(t, [{
                    key: "setMap",
                    value: function(e) {
                        ge()(he()(t.prototype), "setMap", this).call(this, e),
                            this._createOrDestroyTooltip()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._editingMediator.on("change:editingEnabled", this._createOrDestroyTooltip, this)
                    }
                }, {
                    key: "_createOrDestroyTooltip",
                    value: function() {
                        this._editingMediator.get("editingEnabled") ? this._createTooltip() : this._destroyTooltip()
                    }
                }, {
                    key: "updateMarkerFromFeature",
                    value: function(e, n) {
                        e.marker.lonlat = De.toLonLat(n.geometry),
                            ge()(he()(t.prototype), "updateMarkerFromFeature", this).call(this, e, n)
                    }
                }, {
                    key: "_createTooltip",
                    value: function() {
                        var e = this;
                        this.tooltip || (this.tooltip = new we({
                            map: this.map,
                            element: this.getContainer(),
                            target: ".house-number-marker",
                            getView: function(t) {
                                var n = t.dataset.id;
                                return new Re({
                                    featureId: n,
                                    actionManager: e.options.actionManager,
                                    dataModel: e.options.dataModel,
                                    map: e.map
                                })
                            }
                        }))
                    }
                }, {
                    key: "_destroyTooltip",
                    value: function() {
                        this.tooltip && (this.tooltip.destroy(),
                            this.tooltip = null)
                    }
                }]),
                t
        }(_e.a),
        Pe = n(251),
        Ne = n(429),
        xe = n(230),
        Ve = n(430),
        je = n(431),
        Ue = n(15),
        Fe = n.n(Ue),
        Be = n(21),
        Ge = OL.Class(OL.Layer.XYZ, {
            getURL: function(e) {
                var t = OL.Layer.XYZ.prototype.getURL.apply(this, arguments),
                    n = OL.Util.getParameterString(this.params);
                return OL.Util.urlAppend(t, n)
            }
        }),
        We = n(207),
        He = n.n(We),
        ze = new OpenLayers.StyleMap({
            default: new OL.Style({
                externalGraphic: He.a,
                graphicWidth: 50,
                graphicHeight: 60
            })
        }),
        qe = n(432),
        Ye = n(17),
        $e = n(28),
        Ke = n(433),
        Je = n(47),
        Ze = n(434),
        Qe = n(435),
        Xe = n(436),
        et = n(437);
    n.d(t, "MapLayers", function() {
            return it
        }),
        n.d(t, "LAYER_UNIQUE_NAMES", function() {
            return $e.LAYER_UNIQUE_NAMES
        });
    var tt = "wms",
        nt = "mapnik",
        it = function() {
            function e() {
                o()(this, e)
            }
            return l()(e, [{
                    key: "initializeLayers",
                    value: function(e) {
                        var t = e.regionCode,
                            n = void 0 === t ? null : t;
                        this._addAerials(n),
                            this._addRasterLayers(),
                            this._addVectorLayers(),
                            this._addMarkersPopoverLayers(),
                            this._clearLayerContainerZIndex()
                    }
                }, {
                    key: "_addRasterLayers",
                    value: function() {
                        this._addCitiesRasterLayer(),
                            this._addRoadsRasterLayer(),
                            this._addGPSRasterLayer(),
                            this.roadLayers = [this.getLayerByUniqueName($e.LAYER_UNIQUE_NAMES.ROADS)],
                            W.model.events.register("change:lastTransactionID", this, this._refreshRoadLayers),
                            this._setRoadLayerParams()
                    }
                }, {
                    key: "_addRoadsRasterLayer",
                    value: function() {
                        this._addRasterLayer(Je.rasterConfig[$e.LAYER_UNIQUE_NAMES.ROADS])
                    }
                }, {
                    key: "_addGPSRasterLayer",
                    value: function() {
                        this._addRasterLayer(Je.rasterConfig[$e.LAYER_UNIQUE_NAMES.GPS_POINTS])
                    }
                }, {
                    key: "_addCitiesRasterLayer",
                    value: function() {
                        this._addRasterLayer({
                            uniqueName: "cities",
                            visible: !1,
                            type: "mapnik",
                            options: {
                                alpha: !1,
                                opacity: 1,
                                transitionEffect: null,
                                isBaseLayer: !1,
                                zoomOffset: 12,
                                draggable: !0,
                                gutter: 0
                            },
                            params: {
                                clientLayer: "cities"
                            }
                        })
                    }
                }, {
                    key: "_clearLayerContainerZIndex",
                    value: function() {
                        this.getLayerContainerDiv().style.zIndex = ""
                    }
                }, {
                    key: "_addRasterLayer",
                    value: function(e) {
                        var t = {},
                            n = e.type || tt,
                            i = I18n.t("layers.name.".concat(e.uniqueName)),
                            r = e.file_name || Je.rasterConfig[n].file_name,
                            s = Je.rasterConfig[n].servers.map(function(e) {
                                return "".concat(e, "/").concat(r)
                            });
                        c.a.extend(t, Je.rasterConfig.options, e.options),
                            t.tileSize = new OL.Size(t.tileWidth, t.tileHeight),
                            t.removeBackBufferDelay = 0,
                            t.uniqueName = e.uniqueName,
                            t.visibility = e.visible;
                        var o, a, l = {
                            text: I18n.t("layers.loading", {
                                layer_name: i
                            })
                        };
                        if (n === tt) {
                            var u = {};
                            c.a.extend(u, Je.rasterConfig.wms.params, e.params),
                                u.layers = e.layers,
                                o = new OL.Layer.WMS(i, s, u, t)
                        } else
                            o = new Ge(i, s, t),
                            c.a.extend(o.params, e.params);
                        return o.type = n,
                            o.events.on({
                                loadstart: (a = l,
                                    function() {
                                        return W.vent.trigger("operationPending", {
                                            operation: a
                                        })
                                    }
                                ),
                                loadend: function(e) {
                                    return function() {
                                        return W.vent.trigger("operationDone", {
                                            operation: e
                                        })
                                    }
                                }(l)
                            }),
                            this.addUniqueLayer(o),
                            o
                    }
                }, {
                    key: "_setRoadLayerParams",
                    value: function() {
                        var e = {
                            timestamp: this.snapshotManager && this.snapshotManager.isSnapshotOn() ? -1 : 1,
                            waitFor: W.model.lastTransactionID
                        };
                        this.roadLayers.forEach(function(t) {
                            t.type === nt ? t.params.addToQuery = c.a.param(e) : h.a.extend(t.params, e)
                        })
                    }
                }, {
                    key: "_refreshRoadLayers",
                    value: function(e) {
                        return this._setRoadLayerParams(),
                            this.roadLayers.map(function(e) {
                                return e.redraw({
                                        force: !0
                                    }),
                                    e.removeBackBuffer()
                            })
                    }
                }, {
                    key: "_addMarkersPopoverLayers",
                    value: function() {
                        this.restrictedDrivingAreaPopoverLayer = new et.PopoverLayer(this),
                            this.restrictedDrivingAreaPopoverLayerAdapter = new Xe.MarkerPopoverLayerAdapter(W.model.restrictedDrivingAreas, W.editingMediator, this.restrictedDrivingAreaMarkerLayer, this.restrictedDrivingAreaPopoverLayer, function(e, t) {
                                return new Qe.RestrictedDrivingAreaPopover({
                                    dataModel: W.model,
                                    selection: [e],
                                    onCloseHandler: t
                                })
                            }, {
                                singlePopover: !0
                            }),
                            this.addPopoverLayer(this.restrictedDrivingAreaPopoverLayer)
                    }
                }, {
                    key: "_addVectorLayers",
                    value: function() {
                        this.segmentLayer = new ee(I18n.t("layers.name.segments"), W.model, W.model.segments, {
                                styleMap: T.a,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.SEGMENTS,
                                selectable: !0,
                                featureType: Fe.a.SEGMENT
                            }),
                            this.nodeLayer = new te(I18n.t("layers.name.nodes"), W.model, W.model.nodes, {
                                styleMap: k,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.NODES,
                                selectable: !0,
                                featureType: Fe.a.NODE
                            }),
                            this.landmarkLayer = new X(I18n.t("layers.name.landmarks"), W.model, W.model.venues, {
                                styleMap: p.b,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.LANDMARKS,
                                rendererOptions: {
                                    zIndexing: !0
                                },
                                selectable: !0,
                                featureType: Fe.a.VENUE
                            }),
                            this.bigJunctionLayer = new X(I18n.t("layers.name.big_junctions"), W.model, W.model.bigJunctions, {
                                styleMap: N,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.BIG_JUNCTIONS,
                                rendererOptions: {
                                    zIndexing: !0
                                },
                                selectable: !0,
                                featureType: Fe.a.BIG_JUNCTION
                            }),
                            this.houseNumbersLayer = new Le(I18n.t("layers.name.house_numbers"), [W.model.segmentHouseNumbers], {
                                markerClass: qe.HouseNumberLayerMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.HOUSE_NUMBERS,
                                className: "house-numbers",
                                dataModel: W.model,
                                actionManager: W.model.actionManager,
                                editingMediator: W.editingMediator
                            }),
                            this.bigJunctionPathLayer = new OL.Layer.Vector("bigJunctionPathLayer", {
                                rendererOptions: {
                                    zIndexing: !0
                                },
                                renderers: [ne.a],
                                styleMap: ie.a,
                                selectable: !0
                            }),
                            this.camerasLayer = new X(I18n.t("layers.name.speed_cameras"), W.model, W.model.cameras, {
                                styleMap: M,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.SPEED_CAMERAS,
                                selectable: !0,
                                featureType: Fe.a.SPEED_CAMERA,
                                rendererOptions: {
                                    zIndexing: !0
                                }
                            }),
                            this.problemLayer = new _e.a(I18n.t("layers.name.problems"), [W.model.problems], {
                                markerClass: Pe.MapProblemMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.PROBLEMS,
                                className: "map-problems"
                            }),
                            this.updateRequestLayer = new _e.a(I18n.t("layers.name.update_requests"), [W.model.mapUpdateRequests], {
                                markerClass: Ne.UpdateRequestMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.UPDATE_REQUESTS,
                                className: "update-requests"
                            }),
                            this.archiveLayer = new se(I18n.t("layers.name.archive"), {
                                rendererOptions: {
                                    zIndexing: !0
                                },
                                uniqueName: $e.LAYER_UNIQUE_NAMES.ARCHIVE
                            }),
                            this.userLayer = new oe(I18n.t("layers.name.editable_areas"), W.model, [W.model.userAreas], {
                                uniqueName: $e.LAYER_UNIQUE_NAMES.EDITABLE_AREAS
                            }),
                            this.managedAreasLayer = new X(I18n.t("layers.name.area_managers"), W.model, W.model.managedAreas, {
                                styleMap: J,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.AREA_MANAGERS
                            }),
                            this.sketchLayer = new OpenLayers.Layer.Vector("sketch", {
                                styleMap: x.a,
                                rendererOptions: {
                                    zIndexing: !0
                                },
                                selectable: !0
                            }),
                            this.placeUpdatesLayer = new _e.a(I18n.t("layers.name.place_updates"), [W.model.venues], {
                                markerClass: xe.PlaceUpdateMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.PLACE_UPDATES,
                                className: "place-updates",
                                filter: function(e) {
                                    return e.hasUpdateRequests() && !e.isParkingLot() && !e.isResidential()
                                }
                            }),
                            this.parkingPlaceUpdatesLayer = new _e.a(I18n.t("layers.name.place_updates"), [W.model.venues], {
                                markerClass: xe.PlaceUpdateMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.PARKING_PLACE_UPDATES,
                                className: "place-updates",
                                filter: function(e) {
                                    return e.hasUpdateRequests() && e.isParkingLot()
                                }
                            }),
                            this.residentialPlaceUpdatesLayer = new _e.a(I18n.t("layers.name.place_updates"), [W.model.venues], {
                                markerClass: xe.PlaceUpdateMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.RESIDENTIAL_PLACE_UPDATES,
                                className: "place-updates",
                                filter: function(e) {
                                    return e.hasUpdateRequests() && e.isResidential()
                                }
                            }),
                            this.liveUsersLayer = new OL.Layer.Markers(I18n.t("layers.name.live_users"), {
                                uniqueName: $e.LAYER_UNIQUE_NAMES.LIVE_USERS,
                                className: "live-users"
                            }),
                            this.searchLayer = new OL.Layer.Vector("Search", {
                                styleMap: ze,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.SEARCH
                            }),
                            this._createRestrictedDrivingAreaLayers(),
                            this.addUniqueLayers([this.archiveLayer, this.managedAreasLayer].concat(r()(this._createCitiesFeatureAndMarkerLayers()), [this._createCommentsFeatureLayer(), this.restrictedDrivingAreaLayer, this.landmarkLayer, this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.residentialPlaceUpdatesLayer, this.bigJunctionLayer, this.segmentLayer, this.nodeLayer, this.houseNumbersLayer, this.camerasLayer, this.bigJunctionPathLayer, this.sketchLayer, this.problemLayer, this.updateRequestLayer, this.restrictedDrivingAreaMarkerLayer, this.userLayer, this.liveUsersLayer, this.searchLayer])),
                            this.closuresMarkerLayer = new _e.a(I18n.t("layers.name.closures"), [W.model.roadClosures], {
                                markerClass: Ve.RoadClosureMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.CLOSURES
                            });
                        this.fromNodeclosuresMarkerLayer = new _e.a("closure_nodes", [W.model.roadClosures], {
                                markerClass: je.RoadClosureFromNodeMarker,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.CLOSURE_NODES,
                                filter: function(e) {
                                    return e.fromNodeClosed && (t = e.segID,
                                        Boolean(W.model.segments.getObjectById(t)));
                                    var t
                                }
                            }),
                            this.addUniqueLayer(this.closuresMarkerLayer),
                            this.addUniqueLayer(this.fromNodeclosuresMarkerLayer)
                    }
                }, {
                    key: "_createRestrictedDrivingAreaLayers",
                    value: function() {
                        this.restrictedDrivingAreaLayer = new X(I18n.t("layers.name.restricted_driving_areas"), W.model, W.model.restrictedDrivingAreas, {
                                styleMap: S,
                                uniqueName: $e.LAYER_UNIQUE_NAMES.RESTRICTED_DRIVING_AREAS_POLYGON,
                                rendererOptions: {
                                    zIndexing: !0
                                },
                                selectable: !0,
                                featureType: Fe.a.RESTRICTED_DRIVING_AREA
                            }),
                            this.restrictedDrivingAreaMarkerLayer = new _e.a(I18n.t("layers.name.restricted_driving_area_names"), [W.model.restrictedDrivingAreas], {
                                uniqueName: $e.LAYER_UNIQUE_NAMES.RESTRICTED_DRIVING_AREAS_NAMES,
                                markerClass: Ze.RestrictedDrivingAreaMarker,
                                visibility: !1,
                                featureType: Fe.a.RESTRICTED_DRIVING_AREA,
                                filter: function(e) {
                                    return !e.isDeleted()
                                }
                            })
                    }
                }, {
                    key: "_createCitiesFeatureAndMarkerLayers",
                    value: function() {
                        return [new X("", W.model, W.model.cities, {
                            featureType: Fe.a.CITY,
                            selectable: !0,
                            uniqueName: $e.LAYER_UNIQUE_NAMES.CITIES_FEATURES_LAYER_NAME,
                            visibility: !1
                        }), new _e.a(I18n.t("layers.name.city_names"), [W.model.cities], {
                            uniqueName: $e.LAYER_UNIQUE_NAMES.CITIES_MARKERS_LAYER_NAME,
                            markerClass: Ke.CityMarker,
                            visibility: !1,
                            featureType: Fe.a.CITY,
                            filter: function(e) {
                                return e.showMarker()
                            }
                        })]
                    }
                }, {
                    key: "_createCommentsFeatureLayer",
                    value: function() {
                        return new X(I18n.t("layers.name.comments"), W.model, W.model.mapComments, {
                            featureType: Fe.a.MAP_COMMENT,
                            rendererOptions: {
                                zIndexing: !0
                            },
                            selectable: !0,
                            styleMap: K,
                            uniqueName: $e.LAYER_UNIQUE_NAMES.MAP_COMMENTS,
                            visibility: !0
                        })
                    }
                }, {
                    key: "getLayerByUniqueName",
                    value: function(e) {
                        return this.getLayersBy("uniqueName", e)[0]
                    }
                }, {
                    key: "_addAerials",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        if (null == e)
                            throw new Error("Invalid region code for aerial imagery");
                        var t = W.Config.map.initialPosition[e],
                            n = Ye.createLonLat(t.lon, t.lat);
                        Be.project(n);
                        var i = new le({
                            name: I18n.t("layers.name.satellite_imagery"),
                            key: Je.buildConfig.api_keys.google_maps,
                            type: "satellite",
                            buffer: 2,
                            zoomOffset: 12,
                            numZoomLevels: 11,
                            zoom: t.initialZoom,
                            minResolution: .037322767712175846,
                            center: n,
                            uniqueName: $e.LAYER_UNIQUE_NAMES.SATELLITE_IMAGERY,
                            transitionEffect: "resize"
                        });
                        this.addUniqueLayer(i);
                        var r = {
                            text: I18n.t("layers.loading", {
                                layer_name: I18n.t("layers.name.satellite_imagery")
                            })
                        };
                        return i.events.on({
                                loadstart: function() {
                                    if (this.getVisibility())
                                        return W.vent.trigger("operationPending", {
                                            operation: r
                                        })
                                },
                                loadend: function() {
                                    return W.vent.trigger("operationDone", {
                                        operation: r
                                    })
                                },
                                loaderror: function() {
                                    return W.vent.trigger("operationDone", {
                                        operation: r
                                    })
                                }
                            }),
                            this.setCenter(n, t.initialZoom)
                    }
                }, {
                    key: "getLayersByRepos",
                    value: function(e, t) {
                        return (t || null == this.layersPerRepo) && (this.layersPerRepo = this.layers.reduce(function(e, t) {
                                if (null != t.repo)
                                    for (var n = 0; n < t.repo.length; n++) {
                                        var i = t.repo[n];
                                        null == e[i.name] && (e[i.name] = []),
                                            e[i.name].push(t)
                                    }
                                return e
                            }, {})),
                            h.a.pick(this.layersPerRepo, e)
                    }
                }, {
                    key: "showLayerByObjectType",
                    value: function(e) {
                        var t = W.model.getRepository(e);
                        return this.getLayersByRepos([t.name])[t.name].map(function(e) {
                            return e.setVisibility(!0)
                        })
                    }
                }, {
                    key: "setLayerVisibility",
                    value: function(e, t) {
                        this.getLayerByUniqueName(e).setVisibility(t)
                    }
                }, {
                    key: "addUniqueLayer",
                    value: function(e) {
                        if (e.uniqueName && this.getLayersBy("uniqueName", e.uniqueName).length > 0)
                            throw new Error("Cannot add layer ".concat(e.uniqueName, ", the provided\n        uniqueName already exists."));
                        return this.addLayer(e)
                    }
                }, {
                    key: "addUniqueLayers",
                    value: function(e) {
                        var t = this;
                        return e.map(function(e) {
                            return t.addUniqueLayer(e)
                        })
                    }
                }, {
                    key: "getPlaceUpdateLayers",
                    value: function() {
                        return [this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.residentialPlaceUpdatesLayer]
                    }
                }, {
                    key: "getSketchLayer",
                    value: function() {
                        return this.sketchLayer
                    }
                }, {
                    key: "getCamerasLayer",
                    value: function() {
                        return this.camerasLayer
                    }
                }, {
                    key: "getSegmentLayer",
                    value: function() {
                        return this.segmentLayer
                    }
                }, {
                    key: "getBigJunctionLayer",
                    value: function() {
                        return this.bigJunctionLayer
                    }
                }, {
                    key: "getNodeLayer",
                    value: function() {
                        return this.nodeLayer
                    }
                }, {
                    key: "getRoadLayers",
                    value: function() {
                        return r()(this.roadLayers)
                    }
                }]),
                e
        }()
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(88),
        r = n(53),
        s = n(122),
        o = n(93),
        a = {
            MULTIPLE: "MULTIPLE",
            HAS_CLOSURES: "HAS_CLOSURES",
            LOCKED_EXCEPT_CLOSURES: "LOCKED_EXCEPT_CLOSURES",
            LOCKED: "LOCKED",
            SNAPSHOT_MODE: "SNAPSHOT_MODE",
            OUTSIDE_AREA: "OUTSIDE_AREA",
            IN_BIG_JUNCTION: "IN_BIG_JUNCTION"
        };
    t.SEGMENT_ERROR_TYPE = a,
        t.getSegmentError = function(e, t) {
            var n = t.getSelectedSegments(),
                l = new i.SegmentsBaseAttributesUseCase(n),
                u = new o.SegmentsPermissionsUseCase(e, n),
                c = new r.SegmentsBigJunctionUseCase(e, n),
                d = new s.SegmentClosuresUseCase(n);
            return l.arePropertiesEditable() ? c.isInBigJunction() ? a.IN_BIG_JUNCTION : null : t.getSegmentCount() > 1 ? a.MULTIPLE : d.hasClosures() ? a.HAS_CLOSURES : u.isLockedByHigherRank() && d.canEditClosures() ? a.LOCKED_EXCEPT_CLOSURES : u.isLockedByHigherRank() ? a.LOCKED : W.snapshotManager.isSnapshotOn() ? a.SNAPSHOT_MODE : a.OUTSIDE_AREA
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e(e) {
            this.selection = e
        }
        return e.prototype.getAttribute = function(e, t) {
                return this.selection.isReversed(e) ? "fwdDirection" === t || "revDirection" === t ? this.getReverseDirection(e, t) : e.attributes[this.getReverseAttribute(t)] : e.attributes[t]
            },
            e.prototype.getReverseAttribute = function(e) {
                switch (e) {
                    case "fwdMaxSpeed":
                        return "revMaxSpeed";
                    case "revMaxSpeed":
                        return "fwdMaxSpeed";
                    case "fwdDirection":
                        return "revDirection";
                    case "revDirection":
                        return "fwdDirection";
                    case "fwdToll":
                        return "revToll";
                    case "revToll":
                        return "fwdToll";
                    case "fwdFlags":
                        return "revFlags";
                    case "revFlags":
                        return "fwdFlags";
                    case "fromNodeID":
                        return "toNodeID";
                    case "toNodeID":
                        return "fromNodeID";
                    case "fwdMaxSpeedUnverified":
                        return "revMaxSpeedUnverified";
                    case "revMaxSpeedUnverified":
                        return "fwdMaxSpeedUnverified";
                    default:
                        return e
                }
            },
            e.prototype.getReverseDirection = function(e, t) {
                return e.isOneWay() ? !e.attributes[t] : e.attributes[t]
            },
            e
    }();
    t.SegmentDirectionalReader = i
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.ALL_DAY_FROM = "00:00";
    t.ALL_DAY_TO = "00:00";
    var i = function() {
        function e(e) {
            this.fromHour = e.fromHour,
                this.toHour = e.toHour,
                this.days = e.days
        }
        return e.createAllDay = function(t) {
                return new e({
                    fromHour: "00:00",
                    toHour: "00:00",
                    days: t
                })
            },
            e.prototype.isAllDay = function() {
                return "00:00" === this.fromHour && "00:00" === this.toHour
            },
            e
    }();
    t.OpeningHour = i
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(53),
        r = function() {
            function e(e) {
                this.dataModel = e
            }
            return e.prototype.canEditSegmentTurns = function(e) {
                    return this.canEditSegmentFromTurns(e) && this.canEditSegmentToTurns(e)
                },
                e.prototype.canEditSegmentFromTurns = function(e) {
                    var t = new i.SegmentsBigJunctionUseCase(this.dataModel, e);
                    return e.canEditConnections() && !t.hasFromBigJunction()
                },
                e.prototype.canEditSegmentToTurns = function(e) {
                    var t = new i.SegmentsBigJunctionUseCase(this.dataModel, e);
                    return e.canEditConnections() && !t.hasToBigJunction()
                },
                e.prototype.canEditNodeTurns = function(e) {
                    var t = this,
                        n = this.dataModel.segments.getByIds(e.attributes.segIDs);
                    return n.length === e.attributes.segIDs.length && n.every(function(e) {
                        return t.canEditSegmentTurns(e)
                    })
                },
                e
        }();
    t.CanEditTurnsUseCase = r
}, function(e, t, n) {
    "use strict";
    var i = n(4),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = r.a.Behavior.extend({
            _eventsRegistered: !1,
            initialize: function() {
                return this._registerEvents()
            },
            onBeforeDestroy: function() {
                return this._unregisterEvents()
            },
            _getAcceleratorsObject: function() {
                return o.a.result(this.view, "accelerators", {})
            },
            _registerEvents: function() {
                if (!this._eventsRegistered) {
                    for (var e = this._getAcceleratorsObject(), t = 0, n = Object.keys(e); t < n.length; t++) {
                        var i = n[t],
                            r = e[i];
                        W.accelerators.events.register(i, this.view, this.view[r])
                    }
                    this._eventsRegistered = !0
                }
            },
            _unregisterEvents: function() {
                if (this._eventsRegistered) {
                    for (var e = this._getAcceleratorsObject(), t = 0, n = Object.keys(e); t < n.length; t++) {
                        var i = n[t],
                            r = e[i];
                        W.accelerators.events.unregister(i, this.view, this.view[r])
                    }
                    this._eventsRegistered = !1
                }
            },
            onEditingEnabled: function() {
                return this._registerEvents()
            },
            onEditingDisabled: function() {
                return this._unregisterEvents()
            }
        });
    t.a = a
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
        FIXED: 0,
        NOT_A_PROBLEM: 1,
        AUTO: 2
    }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = {
        EDGE: "edge",
        VERTEX: "vertex",
        NODE: i(n(15)).default.NODE
    };
    t.SnappedFeatureType = r
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        s = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = r(n(0)),
        a = s(n(17)),
        l = s(n(20));

    function u(e, t) {
        var n = e.map(function(e) {
                return {
                    segment: e,
                    distance: l.getDistance(e.attributes.geometry, t)
                }
            }),
            i = o.default.minBy(n, function(e) {
                return e.distance
            });
        return i ? i.segment : null
    }
    t.getClosestSegment = u,
        t.calculatePointProjectionToSegments = function(e, t) {
            var n, r = u(e, t);
            if (r) {
                var s = l.getLineProjectionInfo(r.attributes.geometry, t),
                    o = s.line;
                if (o) {
                    var c = {
                            x: o.x1,
                            y: o.y1
                        },
                        d = {
                            x: o.x2,
                            y: o.y2
                        };
                    return d.y > c.y && (c = (n = i([d, c], 2))[0],
                        d = n[1]), {
                        isLeft: (d.x - c.x) * (t.y - c.y) - (d.y - c.y) * (t.x - c.x) <= 0,
                        projectionLonLat: a.createLonLat(s.x0, s.y0),
                        closestSegment: r
                    }
                }
            }
            return null
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(694);
    t.pixelsToMeters = function(e, t) {
            if (e.getProjection() !== i.WEB_MERCATOR_PROJECTION)
                throw new Error("unsupported projection, getGeodesicPixelSize width is not the same as height");
            return t * e.getGeodesicPixelSize().w * 1e3
        },
        t.metersToPixels = function(e, t) {
            var n = e.getGeodesicPixelSize().w;
            if (e.getProjection() !== i.WEB_MERCATOR_PROJECTION)
                throw new Error("unsupported projection, getGeodesicPixelSize width is not the same as height");
            return t / (1e3 * n)
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
        NOT_REJECTED: 0,
        USER_RANK_TOO_LOW: 1,
        USER_RANK_TOO_LOW_FOR_SEGMENT: 2,
        USER_QUOTA_EXCEEDED: 3,
        IN_BIG_JUNCTION: 4,
        HAS_CLOSURES: 5,
        OTHER_REASON: 6,
        HAS_PENDING_MERGE: 7,
        ASSOCIATED_OBJECTS_NOT_IN_MODEL: 8,
        SEGMENTS_NOT_BRIDGABLE: 9
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e() {}
        return e.prototype.getAttribute = function(e, t) {
                return e.attributes[t]
            },
            e
    }();
    t.SegmentReader = i
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(17),
        s = i(n(37)),
        o = function() {
            function e(e) {
                this.marker = this.createMarker(e)
            }
            return e.prototype.createMarker = function(e) {
                    return new OpenLayers.Marker(r.createLonLat(0, 0), new s.default)
                },
                e.prototype.getMarker = function() {
                    return this.marker
                },
                e.prototype.render = function(e) {},
                e.prototype.remove = function() {
                    this.marker.erase()
                },
                e.prototype.getLonLat = function() {
                    return this.marker.lonlat
                },
                e.prototype.setMap = function(e) {
                    this.marker.map = e
                },
                e.prototype.setFeatureId = function(e) {
                    var t = this.getMarker().icon.imageDiv;
                    $(t).data("featureId", e)
                },
                e.prototype.setOpacity = function(e) {
                    this.marker.setOpacity(e)
                },
                e.prototype.highlight = function() {
                    this.getMarker().icon.div.classList.add("selected")
                },
                e.prototype.unhighlight = function() {
                    this.getMarker().icon.div.classList.remove("selected")
                },
                e.prototype.toggle = function(e) {
                    this.getMarker().icon.$div.toggle(e)
                },
                e
        }();
    t.FeatureMarker = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(0)),
        c = n(70),
        d = a(n(51)),
        h = l(n(20)),
        p = n(53),
        g = n(111),
        f = l(n(21)),
        m = function(e) {
            function t(n, i) {
                return e.call(this, n, i, c.NodesPermissions, t.defaults()) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.defaults = function() {
                    return {
                        segIDs: []
                    }
                },
                t.prototype.allConnectionKeys = function(e) {
                    var t = this;
                    void 0 === e && (e = !1);
                    var n = [],
                        i = [];
                    return this.attributes.segIDs.forEach(function(r) {
                        var s = t.model.segments.getObjectById(r);
                        t.attributes.segIDs.forEach(function(r) {
                            var o = t.model.segments.getObjectById(r);
                            s && o && (s !== o || e) && (n.push({
                                    from: s,
                                    to: o
                                }),
                                t.isTurnAllowedBySegDirections(s, o) && s.isDrivable() && o.isDrivable() && i.push({
                                    from: s,
                                    to: o
                                }))
                        })
                    }), {
                        all: n,
                        legal: i
                    }
                },
                t.prototype.isTurnAllowedBySegDirections = function(e, t) {
                    if (!e || !t)
                        return !1;
                    var n = e.attributes.toNodeID === this.getID() ? e.attributes.fwdDirection : e.attributes.revDirection,
                        i = t.attributes.fromNodeID === this.getID() ? t.attributes.fwdDirection : t.attributes.revDirection;
                    return n && i
                },
                t.prototype.getSegmentIds = function() {
                    return o(this.attributes.segIDs)
                },
                t.prototype.getAngleToSegment = function(e) {
                    var t, n, i, r = h.getVertices(e.geometry);
                    return e.attributes.fromNodeID === this.getID() ? (t = r[0],
                            n = r[1]) : (t = r[r.length - 1],
                            n = r[r.length - 2]),
                        (i = f.radToDeg(Math.atan2(n.y - t.y, n.x - t.x))) < 0 && (i = 360 + i),
                        i
                },
                t.prototype.getDirectionBetweenSegments = function(e, t) {
                    var n, i, r, s = h.getVerticesCount(e.geometry);
                    return e.attributes.toNodeID === this.getID() ? (n = h.getVertex(e.geometry, s - 2),
                            i = h.getVertex(e.geometry, s - 1)) : (n = h.getVertex(e.geometry, 1),
                            i = h.getVertex(e.geometry, 0)),
                        r = t.attributes.fromNodeID === this.getID() ? h.getVertex(t.geometry, 1) : h.getVertex(t.geometry, h.getVerticesCount(t.geometry) - 2),
                        (i.x - n.x) * (r.y - n.y) - (i.y - n.y) * (r.x - n.x) > 0
                },
                t.prototype.isDisconnected = function() {
                    return u.default.isEmpty(this.attributes.segIDs)
                },
                t.prototype.isVirtual = function() {
                    var e = this;
                    return this.model.segments.getByIds(this.attributes.segIDs).some(function(t) {
                        return t.isVirtuallyConnectedToNode(e)
                    })
                },
                t.prototype.isPartial = function() {
                    return this.attributes.partial
                },
                t.prototype.isConnectedToSegment = function(e) {
                    return this.attributes.segIDs.includes(e.getID())
                },
                t.prototype.isConnectedToBigJunction = function() {
                    var e = this;
                    return this.model.segments.getByIds(this.attributes.segIDs).some(function(t) {
                        return new p.SegmentsBigJunctionUseCase(e.model, t).isBigJunctionShort()
                    })
                },
                t.prototype.isAllowedToMoveNode = function() {
                    var e = this;
                    return this.attributes.segIDs.every(function(t) {
                        var n = e.model.segments.getObjectById(t);
                        return null !== n && (n.isGeometryEditable() && !new p.SegmentsBigJunctionUseCase(e.model, n).isBigJunctionShort())
                    }, this)
                },
                t.prototype.connectionsExist = function() {
                    return !u.default.isEmpty(this.allConnectionKeys().legal)
                },
                t.prototype.arePropertiesEditable = function() {
                    return new g.CanEditTurnsUseCase(this.model).canEditNodeTurns(this)
                },
                t.prototype.areAllConnectionsEnabled = function() {
                    var e = this,
                        t = this.allConnectionKeys().legal,
                        n = this.model.getTurnGraph();
                    return !u.default.isEmpty(t) && t.every(function(t) {
                        return n.getTurnThroughNode(e, t.from, t.to).getTurnData().isAllowed()
                    }, this)
                },
                t.prototype.areAllConnectionsDisabled = function() {
                    var e = this,
                        t = this.allConnectionKeys().legal,
                        n = this.model.getTurnGraph();
                    return !u.default.isEmpty(t) && t.every(function(t) {
                        return !n.getTurnThroughNode(e, t.from, t.to).getTurnData().isAllowed()
                    }, this)
                },
                t
        }(d.default);
    Object.assign(m.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.Node"
        }),
        t.default = m
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "default", function() {
            return a
        });
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                r()(this, e),
                    this._value = t
            }
            return o()(e, [{
                    key: "add",
                    value: function(e) {
                        this._value |= e
                    }
                }, {
                    key: "remove",
                    value: function(e) {
                        this._value &= ~e
                    }
                }, {
                    key: "setBits",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            e[1] ? t.add(e[0]) : t.remove(e[0])
                        })
                    }
                }, {
                    key: "isEnabled",
                    value: function(e) {
                        return 0 !== (this._value & e)
                    }
                }, {
                    key: "isPowerOf2Enabled",
                    value: function(e) {
                        return 0 !== (this._value & 1 << e)
                    }
                }, {
                    key: "isDisabled",
                    value: function(e) {
                        return 0 === (this._value & e)
                    }
                }, {
                    key: "value",
                    get: function() {
                        return this._value
                    }
                }]),
                e
        }()
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(26)),
        s = n(87),
        o = n(118),
        a = n(45),
        l = function() {
            function e(e) {
                e instanceof r.default ? this.segments = [e] : this.segments = e,
                    this.segmentReducer = new a.SegmentReducer(this.segments, new o.SegmentReader)
            }
            return e.prototype.isClosuresSupported = function() {
                    return !new s.SegmentsRoadTypeUseCase(this.segments).isWalkingRoadType()
                },
                e.prototype.canEditClosures = function() {
                    return this.segments.every(function(e) {
                        return e.canEditClosures()
                    })
                },
                e.prototype.hasClosures = function() {
                    return this.segmentReducer.reduceHasClosures()
                },
                e
        }();
    t.SegmentClosuresUseCase = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(0)),
        c = n(106),
        d = n(70),
        h = n(36);
    t.CategoryAttributes = h.CategoryAttributes;
    var p = a(n(80)),
        g = a(n(51)),
        f = a(n(43)),
        m = a(n(171)),
        v = a(n(720)),
        _ = a(n(129)),
        y = n(110),
        b = a(n(721)),
        E = l(n(12)),
        w = a(n(243)),
        S = l(n(21)),
        k = function(e) {
            function t(n, i) {
                void 0 === i && (i = {
                    parse: !1
                });
                var r = e.call(this, n, i, d.LandmarksPermissions, t.defaults()) || this;
                return i && i.parse && r.parseUpdateRequests(n),
                    r.originalResidential = r.attributes.residential,
                    null == r.attributes.categoryAttributes && (r.attributes.categoryAttributes = r._defaultCategoryAttributes()),
                    r
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry,
                            images: v.default,
                            entryExitPoints: w.default,
                            externalProviderIDs: m.default,
                            openingHours: y.OpeningHour
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.defaults = function() {
                    return {
                        name: "",
                        description: "",
                        rank: 0,
                        lockRank: 0,
                        url: null,
                        phone: null,
                        brand: null,
                        residential: !1,
                        openingHours: [],
                        categories: [],
                        categoryAttributes: null,
                        services: [],
                        entryExitPoints: [],
                        images: [],
                        venueUpdateRequests: [],
                        aliases: [],
                        approved: !0,
                        externalProviderIDs: [],
                        adLocked: !1,
                        permissions: f.default.ALL_PERMISSIONS
                    }
                },
                t.generateCategoryToParentMap = function() {
                    var e = new Map;
                    return h.VENUE_MAIN_CATEGORIES_LIST.forEach(function(t) {
                            e.set(t, t),
                                h.VENUE_SUBCATEGORIES[t].forEach(function(n) {
                                    e.set(n, t)
                                })
                        }),
                        e
                },
                t.prototype._defaultCategoryAttributes = function() {
                    var e = {};
                    if (this.isParkingLot()) {
                        var t = _.default.prototype.defaults();
                        this.isNew() && (t.parkingType = c.PARKING_TYPE_PUBLIC),
                            e[h.VENUE_PARKING_LOT] = t
                    }
                    return e
                },
                t.prototype.merge = function(n) {
                    u.default.defaults(n, t.defaults()),
                        this.parseUpdateRequests(n),
                        e.prototype.merge.call(this, n),
                        this.originalResidential = this.attributes.residential
                },
                t.prototype.parseUpdateRequests = function(e) {
                    var t = this;
                    if (e && e.venueUpdateRequests) {
                        var n = f.default.prototype.arePropertiesEditable.apply(this),
                            i = new b.default({
                                isInEditArea: n,
                                isAdLockedEditable: W.loginManager.canEditAdLockedPlaceUpdates(),
                                isEditable: this.areUpdateRequestsEditable()
                            }),
                            r = e.venueUpdateRequests;
                        e.venueUpdateRequests = r.map(function(e) {
                            return i.build(e, t)
                        })
                    }
                },
                t.prototype.canMergeTo = function() {
                    return !this.isNew()
                },
                t.prototype.isAdLocked = function() {
                    return this.attributes.adLocked
                },
                t.prototype.getCategorySet = function() {
                    return new Set(this.attributes.categories)
                },
                t.prototype.getMainCategory = function() {
                    return 0 === this.attributes.categories.length ? null : t.categoryToParentMap.get(this.attributes.categories[0]) || null
                },
                t.prototype.getServiceSet = function() {
                    return new Set(this.attributes.services)
                },
                t.prototype.getAddress = function() {
                    return p.default.fromStreetID(this.attributes.streetID, this.model, {
                        houseNumber: this.attributes.houseNumber
                    })
                },
                t.prototype.is2D = function() {
                    return E.is2D(this.geometry)
                },
                t.prototype.isPoint = function() {
                    return E.isPoint(this.geometry)
                },
                t.prototype.isGasStation = function() {
                    return this.getCategorySet().has("GAS_STATION")
                },
                t.prototype.getPolygonGeometry = function() {
                    return this.isPoint() ? S.pointToSquarePolygon(this.geometry, 20) : E.cloneGeometry(this.geometry)
                },
                t.prototype.getPointGeometry = function() {
                    return this.isPoint() ? E.cloneGeometry(this.geometry) : S.polygonToPoint(this.geometry)
                },
                t.prototype.getLockRank = function() {
                    return null != this.attributes.lockRank ? Math.max(this.attributes.rank, this.attributes.lockRank) : this.attributes.rank
                },
                t.prototype.getNavigationPoints = function() {
                    return this.attributes.entryExitPoints
                },
                t.prototype.isApproved = function() {
                    return this.attributes.approved
                },
                t.prototype.hasUpdateRequests = function() {
                    return this.attributes.venueUpdateRequests && this.attributes.venueUpdateRequests.length > 0
                },
                t.prototype.requiresModeration = function() {
                    return W.loginManager.getUserRank() < this.getLockRank()
                },
                t.prototype.getImages = function() {
                    return o(this.attributes.images)
                },
                t.prototype.getImagesByUserId = function(e) {
                    return this.getImages().filter(function(t) {
                        return t.get("creatorUserId") === e
                    })
                },
                t.prototype.getImageById = function(e) {
                    return this.getImages().find(function(t) {
                        return t.id === e
                    })
                },
                t.prototype.getApprovedImages = function() {
                    return this.getImages().filter(function(e) {
                        return e.attributes.approved
                    })
                },
                t.prototype.arePropertiesEditable = function() {
                    return e.prototype.arePropertiesEditable.call(this) && this.attributes.approved
                },
                t.prototype.areUpdateRequestsEditable = function() {
                    return this.isAllowed(d.LandmarksPermissions.EDIT_UPDATE_REQUESTS)
                },
                t.prototype.areExternalProvidersEditable = function() {
                    return this.isAllowed(d.LandmarksPermissions.EDIT_EXTERNAL_PROVIDERS)
                },
                t.prototype.hasOpenUpdateRequests = function() {
                    return this.attributes.venueUpdateRequests.some(function(e) {
                        return null === e.get("approved")
                    })
                },
                t.prototype.canConvertToPublic = function() {
                    return !1 === this.originalResidential
                },
                t.prototype.isParkingLot = function() {
                    var e = this.attributes.categories;
                    return Array.isArray(e) && e[0] === h.VENUE_PARKING_LOT
                },
                t.prototype.isResidential = function() {
                    return this.attributes.residential
                },
                t.categoryToParentMap = t.generateCategoryToParentMap(),
                t
        }(g.default);
    Object.assign(k.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.Landmark"
        }),
        t.default = k
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(27)),
        a = s(n(65)),
        l = s(n(387)),
        u = s(n(64)),
        c = function(e) {
            function t(t, n, i, r, s) {
                var o = e.call(this, s) || this;
                return o.city = null,
                    o.state = t,
                    o.country = n,
                    o.name = i,
                    o.isEmpty = r,
                    o
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e, t = null,
                        n = !1;
                    if (this.state || (this.state = u.default.stateByAttributes(this.model, {
                            isDefault: !0
                        })[0]),
                        !(t = this.isEmpty ? u.default.citiesByAttributes(this.model, {
                            countryID: this.country.getID(),
                            stateID: this.state.getID(),
                            isEmpty: !0
                        })[0] : u.default.citiesByAttributes(this.model, {
                            name: this.name,
                            countryID: this.country.getID(),
                            stateID: this.state.getID()
                        })[0])) {
                        this.isEmpty || this.name;
                        var i = new l.default({
                            countryID: this.country.getID(),
                            stateID: this.state.getID(),
                            isEmpty: this.isEmpty,
                            name: this.isEmpty ? "" : this.name
                        });
                        t = (e = new a.default(i, this.model.cities, {})).getObject(),
                            this.doSubAction(e),
                            n = !0
                    }
                    this.city = t,
                        n || (this.dontSerialize = !0)
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return null != this.city && this.city.isNew() ? [this.city.getUniqueID()] : []
                },
                t
        }(o.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "DialogRegion", function() {
            return v
        }),
        n.d(t, "DialogContentRegion", function() {
            return _
        });
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(4),
        g = n.n(p),
        f = n(0),
        m = n.n(f),
        v = g.a.Region.extend({
            el: "#dialog-region",
            initialize: function() {
                var e = this;
                return this._ensureElement(),
                    this.$el.addClass("modal").attr("tabindex", -1),
                    this.$el.on("hidden.bs.modal", function() {
                        if (!e._isClosing)
                            return e.empty()
                    }),
                    this.$el.on("click", ".cancel-button", function(t) {
                        return t.preventDefault(),
                            e.empty()
                    })
            },
            empty: function() {
                this._isClosing || (this._isClosing = !0,
                    this._destroyModal(),
                    g.a.Region.prototype.empty.apply(this, arguments),
                    this._isClosing = !1)
            },
            _destroyModal: function() {
                this.stopListening(this.currentView),
                    this.$el.off("keydown.dialog-region"),
                    this.$el.modal("hide"),
                    this.$el.removeData()
            },
            show: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                g.a.Region.prototype.show.apply(this, arguments),
                    m.a.defaults(n, {
                        keyboard: !0,
                        backdrop: "static",
                        modalDialogClass: ""
                    }),
                    e.on("destroy", function() {
                        return t.empty()
                    }),
                    e.$el.addClass("modal-dialog").addClass(n.modalDialogClass),
                    this.$el.on("keydown.dialog-region", function(e) {
                        return e.stopPropagation()
                    }),
                    this.$el.modal(n),
                    this.$el.find(".modal-content").focus()
            }
        }),
        _ = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "initialize",
                    value: function(e) {
                        var t = e.onEscapeKeydown,
                            n = void 0 === t ? function(e) {
                                return e
                            } :
                            t;
                        this.onEscapeKeydown = n
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        var e = this;
                        this.$el.attr("tabindex", -1).focus(),
                            this.$el.off("keydown.dialog-content").on("keydown.dialog-content", function(t) {
                                if (27 === t.which)
                                    return e.onEscapeKeydown(t)
                            })
                    }
                }]),
                t
        }(g.a.Region)
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(0)),
        o = n(31),
        a = function() {
            function e(e, t, n, i) {
                void 0 === i && (i = null),
                    this.fromLaneIndex = e,
                    this.toLaneIndex = t,
                    this.arrowAngle = n,
                    this.angleOverride = i
            }
            return e.hasChanged = function(e, t) {
                    return (null != e || null != t) && (null == e || null == t || !e.equals(t))
                },
                e.prototype.isValid = function() {
                    return this.fromLaneIndex <= this.toLaneIndex && this.arrowAngle % 45 == 0
                },
                e.prototype._indexesDefined = function() {
                    return null != this.fromLaneIndex && null != this.toLaneIndex
                },
                e.prototype.getFromLaneIndex = function() {
                    return this.fromLaneIndex
                },
                e.prototype.getToLaneIndex = function() {
                    return this.toLaneIndex
                },
                e.prototype.getLaneIndexes = function() {
                    return this._indexesDefined() ? s.default.range(this.getFromLaneIndex(), this.getToLaneIndex() + 1) : []
                },
                e.prototype.getArrowAngle = function() {
                    return this.arrowAngle
                },
                e.prototype.getArrowOverrideAngle = function() {
                    return this.angleOverride
                },
                e.prototype.hasOverrideAngle = function() {
                    return null !== this.angleOverride
                },
                e.prototype.getEffectiveAngle = function() {
                    return e.getEffectiveAngle(this.getArrowAngle(), this.getArrowOverrideAngle())
                },
                e.getEffectiveAngle = function(e, t) {
                    return null !== t ? t : e
                },
                e.prototype.includes = function(e) {
                    return this._indexesDefined() && this.fromLaneIndex <= e && e <= this.toLaneIndex
                },
                e.prototype.equals = function(e) {
                    return this.fromLaneIndex === e.fromLaneIndex && this.toLaneIndex === e.toLaneIndex && this.arrowAngle === e.arrowAngle && this.angleOverride === e.angleOverride
                },
                e.prototype.withAngle = function(t) {
                    return new e(this.fromLaneIndex, this.toLaneIndex, t, this.angleOverride)
                },
                e.prototype.toJSON = function() {
                    var e = {};
                    return o.isFeatureFlagEnabled(o.FEATURE_FLAGS.LANES_ANGLE_OVERRIDE) && (e = {
                            angleOverride: this.angleOverride
                        }),
                        i({
                            fromLaneIndex: this.fromLaneIndex,
                            toLaneIndex: this.toLaneIndex
                        }, e)
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.dedupRestrictions = function(e) {
            return e.reduce(function(e, t) {
                return !1 === e.some(function(e) {
                    return e.equals(t)
                }) ? r(e, [t]) : e
            }, [])
        },
        t.restrictionArraysEqual = function(e, t) {
            if (e.length !== t.length)
                return !1;
            for (var n = 0; n < e.length; n++)
                if (!e[n].equals(t[n]))
                    return !1;
            return !0
        }
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "generateUpdateActionDescription", function() {
            return M
        }),
        n.d(t, "buildChanges", function() {
            return A
        });
    var i = n(8),
        r = n.n(i),
        s = n(22),
        o = n.n(s),
        a = n(7),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(39),
        h = n(15),
        p = n.n(h),
        g = n(129),
        f = n.n(g),
        m = n(26),
        v = n.n(m),
        _ = n(33);

    function y(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function b(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? y(Object(n), !0).forEach(function(t) {
                r()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : y(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var E = {
            segment: {
                fromNodeID: !0,
                toNodeID: !0,
                crossroadID: !0,
                flags: !0,
                fwdFlags: !0,
                revFlags: !0,
                scheduleID: !0,
                fwdLanesEnabled: !0,
                revLanesEnabled: !0
            },
            venue: {
                categoryAttributes: !0,
                mergedFrom: !0
            }
        },
        w = {
            segment: {
                geometry: !0
            },
            venue: {
                geometry: !0,
                entryExitPoints: !0
            }
        },
        S = {
            venue: {
                externalProviderIDs: function(e) {
                    return e.map(function(e) {
                        return e instanceof l.a.Model ? e.get("uuid") : e
                    })
                }
            }
        };

    function k(e, t) {
        return Object.keys(t).reduce(function(n, i) {
            return E[e] && E[e][i] || !S[e] || !S[e][i] ? n[i] = t[i] : n[i] = S[e][i](t[i]),
                n
        }, {})
    }

    function T(e, t, n, i, r) {
        return n.map(function(n) {
            var s = i[n],
                a = r[n],
                l = w[t] && w[t][n],
                u = {};
            if (Array.isArray(s)) {
                var h = a && a.length > 0 ? c.a.without.apply(c.a, [s].concat(o()(a))) : s.concat(),
                    p = s && s.length > 0 ? c.a.without.apply(c.a, [a].concat(o()(s))) : a.concat();
                u = {
                    added: Object(d.formatValue)(e, t, n, h),
                    removed: Object(d.formatValue)(e, t, n, p)
                }
            }
            return b({
                name: n,
                displayName: Object(d.formatFieldName)(t, n),
                newValue: Object(d.formatValue)(e, t, n, s),
                oldValue: Object(d.formatValue)(e, t, n, a)
            }, u, {
                isVisual: l
            })
        })
    }

    function I(e, t, n, i) {
        n = k(t, n),
            i = k(t, i);
        var r = c.a.uniq(Object.keys(n).concat(Object.keys(i))).filter(function(e) {
            return !(E[t] && E[t][e] || c.a.isEqual(i[e], n[e]))
        });
        return T(e, t, r, n, i)
    }

    function A(e, t, n, i) {
        var r = I(e, t, n, i);
        return t === p.a.VENUE ? r.push.apply(r, o()(function(e, t, n, i) {
                var r = (new f.a).attributes,
                    s = n.categoryAttributes || {},
                    o = i.categoryAttributes || {};
                s = k(t, s),
                    o = k(t, o);
                var a = Object.assign({}, r, Object.keys(o).reduce(function(e, t) {
                        return Object.assign(e, o[t])
                    }, {})),
                    l = Object.assign({}, r, Object.keys(s).reduce(function(e, t) {
                        return Object.assign(e, s[t])
                    }, {}));
                return T(e, t, c.a.uniq(Object.keys(a).concat(Object.keys(l))).filter(function(e) {
                    return !c.a.isEqual(a[e], l[e])
                }), l, a)
            }(e, d.CATEGORY_ATTRIBUTES_TYPE, n, i))) : t === p.a.SEGMENT && r.push.apply(r, o()(function(e, t, n, i) {
                var r = new v.a(Object.assign({}, n)),
                    s = new v.a(Object.assign({}, i)),
                    o = r.getFlagAttributes(),
                    a = s.getFlagAttributes();
                return I(e, t, o = k(t, o), a = k(t, a))
            }(e, p.a.SEGMENT, n, i))),
            r
    }

    function M(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
            n = function(e) {
                var t = e.object.type,
                    n = e.model,
                    i = e.getNewAttributes(),
                    r = e.getOldAttributes();
                return A(n, t, _.deepClone(b({}, i)), _.deepClone(b({}, r)))
            }(e);
        return Object(d.formatUpdateActionDescription)(n, e, t)
    }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = o(n(7)),
        l = n(106),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.defaults = function() {
                    return {
                        canExitWhileClosed: !1,
                        numberOfSpots: null,
                        estimatedNumberOfSpots: null,
                        costType: l.UNKNOWN,
                        lotType: [],
                        paymentType: [],
                        parkingType: null,
                        hasTBR: !1
                    }
                },
                t.prototype.initialize = function() {
                    this.attributes.numberOfSpots && this.attributes.numberOfSpots > 0 && null === this.attributes.estimatedNumberOfSpots && (this.attributes.estimatedNumberOfSpots = this._getSpotsEstimateValue())
                },
                t.prototype.clone = function() {
                    return new t($.extend(!0, {}, this.attributes))
                },
                t.prototype._getSpotsEstimateValue = function() {
                    var e = this.attributes.numberOfSpots,
                        t = l.SPOTS_ESTIMATE_LIST,
                        n = null;
                    if (null === e)
                        return n;
                    for (var i = 0; i < t.length; i++) {
                        var r = t[i],
                            o = s(r.range, 2),
                            a = o[0],
                            u = o[1];
                        if (e >= a && e <= u) {
                            n = r.value;
                            break
                        }
                    }
                    return n
                },
                t
        }(a.default.Model);
    t.default = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = n(190),
        a = n(70),
        l = s(n(51)),
        u = s(n(43)),
        c = {
            speed: n(40).UNIT.KILOMETER
        };
    t.UNITS = c;
    var d = function(e) {
        function t(n, i) {
            var r = t.defaults();
            return e.call(this, n, i, a.SpeedCamerasPermissions, r) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.defaults = function() {
                return {
                    type: o.CAMERA_TYPES.SPEED_CAMERA,
                    speed: 0,
                    azymuth: 0,
                    rank: 0,
                    permissions: u.default.ALL_PERMISSIONS
                }
            },
            t
    }(l.default);
    t.SpeedCamera = d,
        Object.assign(d.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.SpeedCamera"
        })
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(10)),
        u = a(n(41)),
        c = a(n(66)),
        d = a(n(27)),
        h = a(n(15)),
        p = a(n(120)),
        g = {
            permissions: 2147483647
        },
        f = function(e) {
            function t(t, n, i) {
                var r = e.call(this, i) || this;
                return r.point = t.clone(),
                    delete r.point.parent,
                    r.segments = n,
                    r.options = i,
                    r.nodeAttributes = {},
                    r
            }
            return r(t, e),
                t.prototype.createNode = function(e) {
                    var t = new p.default({
                        geometry: e
                    });
                    Object.assign(t.attributes, g, t.attributes),
                        t.attributes.segIDs = [],
                        t.state = OpenLayers.State.INSERT;
                    var n = this.model.nodes.generateUniqueID();
                    return t.setID(n),
                        l.default.extend(!0, this.nodeAttributes, t.attributes),
                        t
                },
                t.prototype.doAction = function() {
                    if (this.node = this.createNode(this.point.clone()),
                        this.node.getID(),
                        this.model.nodes.put(this.node),
                        null !== this.segments)
                        for (var e = 0, t = this.segments.length; e < t; e++)
                            this.doSubAction(new c.default(this.node, this.segments[e], this.options))
                },
                t.prototype.undoAction = function() {
                    e.prototype.undoAction.call(this),
                        this.model.nodes.remove(this.node)
                },
                t.prototype.redoAction = function() {
                    this.model.nodes.put(this.node),
                        e.prototype.redoAction.call(this)
                },
                t.prototype.serialize = function() {
                    var e = this.nodeAttributes;
                    return e.id = this.node.getID(),
                        e.geometry = this.point, {
                            _objectType: h.default.NODE,
                            action: u.default.TYPE.ADD,
                            attributes: e
                        }
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.node]
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.AddNode")
                },
                t.prototype.getAffectedUniqueIds = function() {
                    var t = [this.node.getUniqueID()];
                    return this.segments && t.push.apply(t, o(this.segments.map(function(e) {
                            return e.getUniqueID()
                        }))),
                        o(t, e.prototype.getAffectedUniqueIds.call(this))
                },
                t.prototype.getNode = function() {
                    return this.node
                },
                t
        }(d.default);
    t.default = f
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(14),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(0),
        _ = n.n(v),
        y = n(41),
        b = n.n(y),
        E = n(83),
        w = n(247),
        S = n.n(w),
        k = n(256),
        T = n(15),
        I = n.n(T),
        A = n(39),
        M = n(12),
        O = n(20),
        C = n(248),
        R = n.n(C),
        D = function(e) {
            function t(e, n, i, r) {
                var s;
                return o()(this, t),
                    (s = c()(this, h()(t).call(this, e, r))).segment = e,
                    s.changedState = !1,
                    s.oldGeometry = n === e.geometry ? M.cloneGeometry(n) : n,
                    s.newGeometry = i === e.geometry ? M.cloneGeometry(i) : i,
                    s
            }
            return m()(t, e),
                l()(t, [{
                    key: "doAction",
                    value: function() {
                        "Updating geometry of segment ".concat(this.segment.getID());
                        var e = O.getVertices(this.oldGeometry);
                        if (this.replaceGeometry(),
                            this.segment.isPoint())
                            this.doSubAction(new E.default(this.segment));
                        else {
                            var t = O.getVertices(this.segment.geometry);
                            this._firstVertexChanged(e, t) && this.updateEndPoint(this.segment.attributes.fromNodeID, this.touching.fromVertex, !0),
                                this._lastVertexChanged(e, t) && this.updateEndPoint(this.segment.attributes.toNodeID, this.touching.toVertex, !1),
                                this._firstComponentChanged(e, t) && this.segment.hasFromNode() && this._resetNodeLaneAngles(this.segment.getFromNode()),
                                this._lastComponentChanged(e, t) && this.segment.hasToNode() && this._resetNodeLaneAngles(this.segment.getToNode()),
                                this.segment.state || (this.changedState = !0,
                                    this.segment.state = OpenLayers.State.UPDATE),
                                this.model.segments.changed(this.segment)
                        }
                    }
                }, {
                    key: "_firstVertexChanged",
                    value: function(e, t) {
                        return this._vertexChanged(e, t, 0)
                    }
                }, {
                    key: "_lastVertexChanged",
                    value: function(e, t) {
                        return this._vertexChanged(e, t, -1)
                    }
                }, {
                    key: "_firstComponentChanged",
                    value: function(e, t) {
                        return this._vertexChanged(e, t, 0) || this._vertexChanged(e, t, 1)
                    }
                }, {
                    key: "_lastComponentChanged",
                    value: function(e, t) {
                        return this._vertexChanged(e, t, -1) || this._vertexChanged(e, t, -2)
                    }
                }, {
                    key: "_vertexChanged",
                    value: function(e, t, n) {
                        var i = n,
                            r = n;
                        return n < 0 && (i = e.length + n,
                                r = t.length + n),
                            !e[i].equals(t[r])
                    }
                }, {
                    key: "_resetNodeLaneAngles",
                    value: function(e) {
                        new R.a(this.model, e).supportsLanes() && this.doSubAction(new k.default(e))
                    }
                }, {
                    key: "replaceGeometry",
                    value: function() {
                        M.cloneComponents(this.segment.geometry, this.newGeometry),
                            this.segment.bounds = this.segment.geometry.bounds
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.changedState && (this.segment.state = null),
                            M.cloneComponents(this.segment.geometry, this.oldGeometry),
                            this.segment.bounds = this.segment.geometry.bounds,
                            this.model.segments.changed(this.segment),
                            g()(h()(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        M.cloneComponents(this.segment.geometry, this.newGeometry),
                            this.segment.bounds = this.segment.geometry.bounds,
                            this.changedState && (this.segment.state = OpenLayers.State.UPDATE),
                            this.model.segments.changed(this.segment),
                            g()(h()(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return e.id = this.segment.getID(),
                            e.geometry = this.newGeometry, {
                                _objectType: I.a.SEGMENT,
                                action: b.a.TYPE.UPDATE,
                                attributes: e
                            }
                    }
                }, {
                    key: "getBounds",
                    value: function() {
                        return this.newGeometry.getBounds().clone()
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        var e = _.a.flatten(this.subActions.map(function(e) {
                            return e.getFocusFeatures()
                        }));
                        return _.a.uniq([this.segment].concat(r()(e)))
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        g()(h()(t.prototype), "generateDescription", this).call(this),
                            this._description || (this._description = Object(A.formatActionAddressDescription)(this.segment, "UpdateSegmentGeometry"))
                    }
                }]),
                t
        }(S.a);
    t.default = D
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "TurnRestrictionViewHelpers", function() {
            return g
        }),
        n.d(t, "SegmentRestrictionViewHelpers", function() {
            return p
        }),
        n.d(t, "RestrictionViewHelpers", function() {
            return f
        });
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(35),
        l = n(32),
        u = n(0),
        c = n.n(u),
        d = n(55),
        h = n(90);
    n.d(t, "TimeFrameViewHelpers", function() {
        return h.a
    });
    var p = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.dataModel,
                    i = t.segment;
                r()(this, e),
                    this._dataModel = n,
                    this._segment = i
            }
            return o()(e, [{
                    key: "getEditingDrivingTitle",
                    value: function(e) {
                        return this.getDrivingRestrictedTitle(e.getDirection())
                    }
                }, {
                    key: "getDrivingRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.driving_restricted", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "getDrivingNotRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.driving_not_restricted", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "getPickupTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.pickup", {
                            street: this._segment.getAddress().getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "_getHeading",
                    value: function(e) {
                        return e === a.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._segment.getFwdHeading() : e === a.RESTRICTION_SEGMENT_DIRECTION.REV ? this._segment.getRevHeading() : e === a.RESTRICTION_SEGMENT_DIRECTION.BOTH ? null : void 0
                    }
                }, {
                    key: "_getDirectionString",
                    value: function(e) {
                        if (e === a.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            return I18n.t("restrictions.editing.titles.segment.both_ways");
                        var t = this._getHeading(e);
                        return I18n.t("segment.heading")[t]
                    }
                }]),
                e
        }(),
        g = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.dataModel,
                    i = t.turn;
                r()(this, e),
                    this._turn = i,
                    this._dataModel = n,
                    this._restrictions = this._turn.getTurnData().getRestrictions(),
                    this._fromSegment = this._dataModel.segments.getObjectById(this._turn.getFromVertex().getSegmentID()),
                    this._toSegment = this._dataModel.segments.getObjectById(this._turn.getToVertex().getSegmentID())
            }
            return o()(e, [{
                    key: "getEditingTitle",
                    value: function(e) {
                        return e.isDifficult() ? this._getDifficultTitle() : this._getRestrictedTitle()
                    }
                }, {
                    key: "getDifficultSummaryTitle",
                    value: function() {
                        return this._getDifficultTitle()
                    }
                }, {
                    key: "getSummaryTitle",
                    value: function() {
                        return this._getRestrictedTitle()
                    }
                }, {
                    key: "_getRestrictedTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.restricted", {
                            street: this._fromSegment.getAddress().getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.restricted", {
                            from_street: this._fromSegment.getAddress().getStreetName(),
                            to_street: this._toSegment.getAddress().getStreetName()
                        })
                    }
                }, {
                    key: "_getDifficultTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.difficult", {
                            street: this._fromSegment.getAddress().getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.difficult", {
                            from_street: this._fromSegment.getAddress().getStreetName(),
                            to_street: this._toSegment.getAddress().getStreetName()
                        })
                    }
                }]),
                e
        }(),
        f = function() {
            function e() {
                r()(this, e)
            }
            return o()(e, null, [{
                    key: "formatSummary",
                    value: function(t, n, i) {
                        var r;
                        return t.isDifficult() ? new h.a({
                            timeFrame: t.getTimeFrame()
                        }).formatDateRange() : (r = t.isBlockedModality() ? t.getDriveProfileList(l.RESTRICTION_TYPE.BLOCKED) : t.getDriveProfileList(l.RESTRICTION_TYPE.FREE),
                            c.a.isEmpty(r) ? I18n.t("restrictions.editing.driving.all_vehicles") : r.getDriveProfiles().map(function(t) {
                                return e.formatDriveProfile(t, n, i)
                            }).join(", "))
                    }
                }, {
                    key: "formatDriveProfile",
                    value: function(t, n, i) {
                        var r = "",
                            s = t.isAllVehicles() ? I18n.t("restrictions.editing.driving.all_vehicles") : e.formatVehicleTypes(t.getVehicleTypes()),
                            o = t.getNumPassengers();
                        if (r = o > 0 ? "".concat(s, " (+").concat(o, ")") : s,
                            t.hasSubscriptions() && n) {
                            var a = t.getSubscriptions().map(function(t) {
                                return e.formatSubscription(t, i)
                            }, this);
                            r = "".concat(r, " ").concat(I18n.t("restrictions.editing.driving.prepositions.with"), " ").concat(a)
                        }
                        if (t.hasLicensePlateNumber()) {
                            var l = e.formatLicensePlate(t.getLicensePlateNumber());
                            r = "".concat(r, " ").concat(I18n.t("restrictions.editing.driving.prepositions.with"), " ").concat(l)
                        }
                        return r
                    }
                }, {
                    key: "formatVehicleTypes",
                    value: function(e) {
                        var t = c.a.invert(d.VEHICLE_TYPES);
                        return e.map(function(e) {
                            return I18n.t("restrictions.vehicle_types.".concat(t[e]))
                        }).join(", ")
                    }
                }, {
                    key: "formatLicensePlate",
                    value: function(e) {
                        switch (e) {
                            case d.LICENSE_PLATES.ENDS_WITH_ODD:
                                return I18n.t("restrictions.editing.driving.lp_ends_with_odd");
                            case d.LICENSE_PLATES.ENDS_WITH_EVEN:
                                return I18n.t("restrictions.editing.driving.lp_ends_with_even");
                            default:
                                return I18n.t("restrictions.editing.driving.lp_ends_with", {
                                    digit: e
                                })
                        }
                    }
                }, {
                    key: "formatSubscription",
                    value: function(e, t) {
                        return t.hasOwnProperty(e) ? t[e] : e
                    }
                }]),
                e
        }()
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(208),
        r = new Map;
    t.populateExternalProviderDetails = function(e, t) {
        void 0 === t && (t = void 0);
        var n = e.get("name");
        if (null != n)
            return Promise.resolve({
                name: n,
                location: e.get("location"),
                url: e.get("url")
            });
        var s = e.get("uuid");
        return function(e, t) {
            return void 0 === t && (t = void 0),
                r.has(e) ? Promise.resolve(r.get(e)) : (new i.GooglePlacesService).getPlaceDetails(e, ["geometry", "name", "url", "formatted_address"], t).then(function(t) {
                    var n = {
                        location: t.geometry && t.geometry.location,
                        name: t.name + ", " + t.formatted_address,
                        url: t.url
                    };
                    return r.set(e, n),
                        n
                }).catch(function() {
                    return Promise.reject(new Error("failed getting provider details"))
                })
        }(s, t).then(function(t) {
            return r.set(s, t),
                e.set(t),
                t
        }).catch(function(t) {
            return console.error(t),
                e.set({
                    name: e.get("uuid")
                }),
                Promise.resolve({
                    name: e.get("uuid"),
                    location: "",
                    url: ""
                })
        })
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        VALLET_SERVICE: "VALLET_SERVICE",
        DRIVETHROUGH: "DRIVETHROUGH",
        WI_FI: "WI_FI",
        RESTROOMS: "RESTROOMS",
        CREDIT_CARDS: "CREDIT_CARDS",
        RESERVATIONS: "RESERVATIONS",
        OUTSIDE_SEATING: "OUTSIDE_SEATING",
        AIR_CONDITIONING: "AIR_CONDITIONING",
        PARKING_FOR_CUSTOMERS: "PARKING_FOR_CUSTOMERS",
        DELIVERIES: "DELIVERIES",
        TAKE_AWAY: "TAKE_AWAY",
        WHEELCHAIR_ACCESSIBLE: "WHEELCHAIR_ACCESSIBLE"
    };
    t.GENERAL_SERVICE_TYPE = i;
    var r = {
        RESERVATIONS: "RESERVATIONS",
        DISABILITY_PARKING: "DISABILITY_PARKING",
        CARPOOL_PARKING: "CARPOOL_PARKING",
        EV_CHARGING_STATION: "EV_CHARGING_STATION",
        VALLET_SERVICE: "VALLET_SERVICE",
        CAR_WASH: "CAR_WASH",
        SECURITY: "SECURITY",
        AIRPORT_SHUTTLE: "AIRPORT_SHUTTLE"
    };
    t.PARKING_LOT_SERVICE_TYPE = r;
    var s = {
        GENERAL: Object.keys(i),
        PARKING_LOT: Object.keys(r)
    };
    t.default = s
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(7),
        m = n.n(f),
        v = n(4),
        _ = n.n(v),
        y = n(32),
        b = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "template",
                    value: function(e) {
                        return e.message
                    }
                }, {
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "restriction-validation-error"
                    }
                }]),
                t
        }(_.a.View),
        E = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return b
                    }
                }]),
                t
        }(_.a.CollectionView),
        w = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            errorMessages: []
                        }).errorMessages.map(function(e) {
                            return new m.a.Model({
                                message: e
                            })
                        });
                        this.collection = new m.a.Collection(e)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("collectionRegion", new E({
                            collection: this.collection
                        }))
                    }
                }, {
                    key: "isValid",
                    value: function() {
                        return 0 === this.collection.length
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_validation"
                    }
                }]),
                t
        }(_.a.View),
        S = n(0),
        k = n.n(S),
        T = n(35),
        I = n.n(T),
        A = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "getSegmentData",
                    value: function() {
                        var e = this.attributes;
                        return {
                            laneType: e.laneType,
                            disposition: e.disposition
                        }
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            disposition: e.getDisposition(),
                            laneType: e.getLaneType()
                        })
                    }
                }]),
                t
        }(m.a.Model),
        M = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=laneType]": {
                                observe: "laneType",
                                selectOptions: {
                                    collection: "this._laneTypeOptions",
                                    defaultOption: {
                                        value: null,
                                        label: I18n.t("restrictions.editing.segment.laneType.NONE")
                                    }
                                }
                            },
                            "[name=disposition]": {
                                observe: "disposition",
                                selectOptions: {
                                    collection: "this._dispositionOptions"
                                }
                            },
                            select: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._laneTypeOptions = this._getLaneTypeOptions(),
                            this._dispositionOptions = this._getDispositionOptions()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.getSegmentData()
                    }
                }, {
                    key: "_getLaneTypeOptions",
                    value: function() {
                        var e = Object.keys(T.RESTRICTION_SEGMENT_LANE_TYPE).map(function(e) {
                            return {
                                value: T.RESTRICTION_SEGMENT_LANE_TYPE[e],
                                label: I18n.t("restrictions.editing.segment.laneType.".concat(e))
                            }
                        });
                        return k.a.sortBy(e, "label")
                    }
                }, {
                    key: "_getDispositionOptions",
                    value: function() {
                        return Object.keys(T.RESTRICTION_SEGMENT_DISPOSITION).map(function(e) {
                            return {
                                value: T.RESTRICTION_SEGMENT_DISPOSITION[e],
                                label: I18n.t("restrictions.editing.segment.disposition.".concat(e))
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_segment"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "segment-restriction-edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).restrictionEditable,
                            i = void 0 !== n && n,
                            r = A.for(e);
                        return r.set({
                                restrictionEditable: i
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(_.a.View),
        O = n(8),
        C = n.n(O),
        R = n(13),
        D = n.n(R),
        L = n(55),
        P = n.n(L),
        N = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "getDriveProfileData",
                    value: function() {
                        return {
                            vehicleTypes: this.isAllVehicles() ? [] : this.attributes.vehicleTypes
                        }
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return this.attributes.isAllVehicles
                    }
                }, {
                    key: "hasVehicleTypes",
                    value: function() {
                        return this.attributes.vehicleTypes.length > 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.isAllVehicles() || this.hasVehicleTypes() || e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            isAllVehicles: e.isAllVehicles(),
                            vehicleTypes: e.getVehicleTypes()
                        })
                    }
                }]),
                t
        }(m.a.Model),
        x = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "getHelpMessage",
                    value: function() {
                        return this.model.isAllVehicles() ? I18n.t("restrictions.editing.driving.no_vehicles_allowed") : I18n.t("restrictions.editing.driving.other_vehicles_allowed")
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:isAllVehicles": "_onAllVehiclesChange"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=isAllVehicles]": {
                                observe: "isAllVehicles",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".vehicle-type": {
                                observe: "vehicleTypes",
                                onGet: function(e) {
                                    return e.map(function(e) {
                                        return e.toString()
                                    })
                                },
                                onSet: function(e) {
                                    return e.map(function(e) {
                                        return parseInt(e, 10)
                                    })
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllVehicles", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = D()(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return n || !i
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onAllVehiclesChange",
                    value: function() {
                        this.triggerMethod("change:helpMessage")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getVehicleTypes: function() {
                                return Object.keys(L.VEHICLE_TYPES).sort().map(function(e) {
                                    return {
                                        key: e,
                                        value: L.VEHICLE_TYPES[e]
                                    }
                                })
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.isAllVehicles() ? {
                            defaultType: y.RESTRICTION_TYPE.BLOCKED,
                            driveProfiles: {}
                        } : {
                            defaultType: y.RESTRICTION_TYPE.FREE,
                            driveProfiles: C()({}, y.RESTRICTION_TYPE.BLOCKED, [this.model.getDriveProfileData()])
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_blocked_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n, i = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).restrictionEditable,
                            r = void 0 !== i && i,
                            s = e.getDriveProfileList(y.RESTRICTION_TYPE.BLOCKED).getDriveProfiles();
                        if (0 === s.length)
                            n = new P.a;
                        else {
                            if (1 !== s.length)
                                throw new TypeError("Expected 1 driveProfile (got ".concat(s.length, ")"));
                            n = s[0]
                        }
                        var o = N.for(n);
                        return o.set({
                                restrictionEditable: r
                            }),
                            new t({
                                model: o
                            })
                    }
                }]),
                t
        }(_.a.View),
        V = n(9),
        j = L.VEHICLE_TYPES.PRIVATE,
        U = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            restrictionEditable: !1,
                            vehicleType: null,
                            numPassengers: null,
                            subscription: null,
                            licensePlateNumber: null
                        }
                    }
                }, {
                    key: "getDriveProfileData",
                    value: function() {
                        var e = this.attributes,
                            t = e.vehicleType,
                            n = e.numPassengers,
                            i = e.subscription,
                            r = e.licensePlateNumber,
                            s = {};
                        return null != t && (s.vehicleTypes = [t]),
                            null != n && (s.numPassengers = n),
                            null != i && (s.subscriptions = [i]),
                            null != r && (s.licensePlateNumber = r),
                            s
                    }
                }, {
                    key: "hasVehicleType",
                    value: function() {
                        return null != this.attributes.vehicleType
                    }
                }, {
                    key: "hasNumPassengers",
                    value: function() {
                        var e = this.attributes.numPassengers;
                        return null != e && e > 0
                    }
                }, {
                    key: "hasSubscription",
                    value: function() {
                        return null != this.attributes.subscription
                    }
                }, {
                    key: "hasLicensePlateNumber",
                    value: function() {
                        return null != this.attributes.licensePlateNumber
                    }
                }, {
                    key: "isBlank",
                    value: function() {
                        return !(this.hasVehicleType() || this.hasNumPassengers() || this.hasSubscription() || this.hasLicensePlateNumber())
                    }
                }], [{
                    key: "modelsFor",
                    value: function(e) {
                        var n, i = e.getNumPassengers(),
                            s = e.getVehicleTypes(),
                            o = e.getSubscriptions(),
                            a = e.getLicensePlateNumber();
                        return 0 === i && (i = null),
                            0 === s.length && (s = [null]),
                            0 === o.length && (o = [null]),
                            (n = []).concat.apply(n, r()(s.map(function(e) {
                                return o.map(function(t) {
                                    return Object.assign({
                                        vehicleType: e,
                                        subscription: t,
                                        numPassengers: i,
                                        licensePlateNumber: a
                                    })
                                })
                            }))).map(function(e) {
                                return new t(e)
                            })
                    }
                }]),
                t
        }(m.a.Model),
        F = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "className",
                    value: function() {
                        var e = ["drive-profile-item"];
                        return 0 === this.model.collection.indexOf(this.model) && e.push("drive-profile-item-sticky"),
                            e.join(" ")
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-init-vehicle-type": "_doInitVehicleType",
                            "click .do-init-num-passengers": "_doInitNumPassengers",
                            "click .do-init-subscription": "_doInitSubscription",
                            "click .do-init-license-plate": "_doInitLicensePlate",
                            "click .do-set-vehicle-type": "_doSetVehicleType",
                            "click .do-set-num-passengers": "_doSetNumPassengers",
                            "click .do-set-subscription": "_doSetSubscription",
                            "click .do-set-license-plate": "_doSetLicensePlate",
                            "click .do-delete-vehicle-type": "_doDeleteVehicleType",
                            "click .do-delete-num-passengers": "_doDeleteNumPassengers",
                            "click .do-delete-subscription": "_doDeleteSubscription",
                            "click .do-delete-license-plate": "_doDeleteLicensePlate"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-delete-item": "item:delete"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".drive-profile-item-action": {
                                observe: "restrictionEditable",
                                visible: !0,
                                visibleFn: V.b
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {},
                            supportsNumPassengers: !1,
                            supportsSubscriptions: !1,
                            supportsLicensePlateNumber: !1
                        };
                        this._subscriptions = e.subscriptions,
                            this._subscriptionsAvailable = !k.a.isEmpty(e.subscriptions),
                            this._supportsNumPassengers = e.supportsNumPassengers,
                            this._supportsSubscriptions = e.supportsSubscriptions,
                            this._supportsLicensePlateNumber = e.supportsLicensePlateNumber
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_getLicensePlateNumberName",
                    value: function(e) {
                        switch (e) {
                            case L.LICENSE_PLATES.ENDS_WITH_EVEN:
                                return I18n.t("restrictions.editing.driving.license_plate_ends_with_even");
                            case L.LICENSE_PLATES.ENDS_WITH_ODD:
                                return I18n.t("restrictions.editing.driving.license_plate_ends_with_odd");
                            default:
                                return I18n.t("restrictions.editing.driving.license_plate_ends_with", {
                                    digit: e
                                })
                        }
                    }
                }, {
                    key: "_getLicensePlateNumberOptionName",
                    value: function(e) {
                        switch (e) {
                            case L.LICENSE_PLATES.ENDS_WITH_EVEN:
                                return I18n.t("restrictions.editing.driving.license_plate_option_even");
                            case L.LICENSE_PLATES.ENDS_WITH_ODD:
                                return I18n.t("restrictions.editing.driving.license_plate_option_odd");
                            default:
                                return I18n.t("restrictions.editing.driving.license_plate_option", {
                                    digit: e
                                })
                        }
                    }
                }, {
                    key: "isBlank",
                    value: function() {
                        return this.model.isBlank()
                    }
                }, {
                    key: "isExhaustive",
                    value: function() {
                        return this.model.hasVehicleType() && (this.model.hasNumPassengers() || !this._supportsNumPassengers) && (this.model.hasSubscription() || !this._supportsSubscriptions || !this._subscriptionsAvailable) && (this.model.hasLicensePlateNumber() || !this._supportsLicensePlateNumber)
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e, t, n, i = this,
                            r = this.model.attributes,
                            s = r.vehicleType,
                            o = r.numPassengers,
                            a = r.subscription,
                            l = r.licensePlateNumber;
                        null == s ? e = "" : (t = k.a.invert(L.VEHICLE_TYPES)[s],
                            e = I18n.t("restrictions.vehicle_types.".concat(t)));
                        var u = k.a.omit(L.VEHICLE_TYPES, t);
                        n = this._subscriptions.hasOwnProperty(a) ? this._subscriptions[a] : a;
                        var c = k.a.reject(this._getSortedSubscriptionsArray(), function(e) {
                                var t = e.value;
                                e.name;
                                return t === a
                            }),
                            d = this._getLicensePlateNumberName(l),
                            h = k.a.range(2, o).concat(k.a.range(o + 1, 5)),
                            p = Object.values(L.LICENSE_PLATES).map(function(e) {
                                return {
                                    value: e,
                                    name: i._getLicensePlateNumberOptionName(e)
                                }
                            });
                        return {
                            numPassengersRange: h,
                            subscriptionName: n,
                            vehicleName: e,
                            vehicleTypes: u,
                            vehicleTypesNames: Object.keys(u).sort(function(e, t) {
                                return e.localeCompare(t)
                            }),
                            licensePlateNumberOptions: p,
                            licensePlateNumberName: d,
                            subscriptionOptions: c,
                            supportsSubscriptions: this._supportsSubscriptions,
                            subscriptionsAvailable: this._subscriptionsAvailable,
                            supportsNumPassengers: this._supportsNumPassengers,
                            supportsLicensePlateNumber: this._supportsLicensePlateNumber,
                            isBlank: this.isBlank(),
                            isExhaustive: this.isExhaustive(),
                            hasVehicleType: this.model.hasVehicleType(),
                            hasNumPassengers: this.model.hasNumPassengers(),
                            hasSubscription: this.model.hasSubscription(),
                            hasLicensePlateNumber: this.model.hasLicensePlateNumber()
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            change: "render"
                        }
                    }
                }, {
                    key: "_getSortedSubscriptionsArray",
                    value: function() {
                        return Object.entries(this._subscriptions).map(function(e) {
                            var t = D()(e, 2);
                            return {
                                value: t[0],
                                name: t[1]
                            }
                        }).sort(function(e, t) {
                            var n = e.name,
                                i = void 0 === n ? "" : n,
                                r = t.name,
                                s = void 0 === r ? "" : r;
                            return i.localeCompare(s)
                        })
                    }
                }, {
                    key: "_doInitVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: j
                        })
                    }
                }, {
                    key: "_doInitNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: 2
                        })
                    }
                }, {
                    key: "_doInitSubscription",
                    value: function() {
                        if (this._supportsSubscriptions) {
                            var e = this._getSortedSubscriptionsArray()[0];
                            this.model.set({
                                subscription: e.value
                            })
                        }
                    }
                }, {
                    key: "_doInitLicensePlate",
                    value: function() {
                        this._supportsLicensePlateNumber && this.model.set({
                            licensePlateNumber: L.LICENSE_PLATES.ENDS_WITH_0
                        })
                    }
                }, {
                    key: "_doSetVehicleType",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            vehicleType: t
                        })
                    }
                }, {
                    key: "_doSetNumPassengers",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            numPassengers: t
                        })
                    }
                }, {
                    key: "_doSetSubscription",
                    value: function(e) {
                        var t = e.target.dataset.value;
                        this.model.set({
                            subscription: t
                        })
                    }
                }, {
                    key: "_doSetLicensePlate",
                    value: function(e) {
                        var t = e.target.dataset.value;
                        this.model.set({
                            licensePlateNumber: t
                        })
                    }
                }, {
                    key: "_doDeleteVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: null
                        })
                    }
                }, {
                    key: "_doDeleteNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: null
                        })
                    }
                }, {
                    key: "_doDeleteSubscription",
                    value: function() {
                        this.model.set({
                            subscription: null
                        })
                    }
                }, {
                    key: "_doDeleteLicensePlate",
                    value: function() {
                        this.model.set({
                            licensePlateNumber: null
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_item"
                    }
                }]),
                t
        }(_.a.View),
        B = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "childView",
                    value: function() {
                        return F
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.collection.indexOf(e.model) > 0 && this.collection.remove(e.model)
                    }
                }]),
                t
        }(_.a.CollectionView),
        G = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "isBlank",
                    value: function() {
                        return this.models.every(function(e) {
                            return e.isBlank()
                        })
                    }
                }, {
                    key: "hasBlank",
                    value: function() {
                        return this.models.some(function(e) {
                            return e.isBlank()
                        })
                    }
                }]),
                t
        }(m.a.Collection),
        W = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .do-add-item": "_doAddBlankItem"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add-drive-profile-item": {
                                observe: "canAddBlankItem",
                                visible: !0,
                                visibleFn: V.b
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e, t = this,
                            n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                driveProfileList: null,
                                restrictionEditable: !1,
                                subscriptions: {},
                                supportsNumPassengers: !1,
                                supportsSubscriptions: !1,
                                supportsLicensePlateNumber: !1
                            };
                        this._driveProfileList = n.driveProfileList,
                            this._restrictionEditable = n.restrictionEditable,
                            this._subscriptions = n.subscriptions,
                            this._supportsSubscriptions = n.supportsSubscriptions,
                            this._supportsNumPassengers = n.supportsNumPassengers,
                            this._supportsLicensePlateNumber = n.supportsLicensePlateNumber;
                        var i = (e = []).concat.apply(e, r()(this._driveProfileList.getDriveProfiles().map(function(e) {
                            return U.modelsFor(e)
                        })));
                        i.forEach(function(e) {
                                return e.set({
                                    restrictionEditable: t._restrictionEditable
                                })
                            }),
                            this.collection = new G(i),
                            0 === this.collection.length && this._doAddBlankItem(),
                            this.model = new m.a.Model({
                                canAddBlankItem: this._canAddBlankItem()
                            }),
                            this.collection.on("all", function() {
                                return t.model.set({
                                    canAddBlankItem: t._canAddBlankItem()
                                })
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("collectionRegion", new B({
                                collection: this.collection,
                                subscriptions: this._subscriptions,
                                supportsNumPassengers: this._supportsNumPassengers,
                                supportsSubscriptions: this._supportsSubscriptions,
                                supportsLicensePlateNumber: this._supportsLicensePlateNumber
                            }))
                    }
                }, {
                    key: "_canAddBlankItem",
                    value: function() {
                        return this._restrictionEditable && !this.collection.hasBlank()
                    }
                }, {
                    key: "_doAddBlankItem",
                    value: function() {
                        this._canAddBlankItem() && this.collection.push(new U({
                            restrictionEditable: this._restrictionEditable
                        }))
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            driveProfiles: C()({}, y.RESTRICTION_TYPE.FREE, this.collection.models.filter(function(e) {
                                return !e.isBlank()
                            }).map(function(e) {
                                return e.getDriveProfileData()
                            }))
                        }
                    }
                }, {
                    key: "getHelpMessage",
                    value: function(e) {
                        return e === y.RESTRICTION_MODALITY.DRIVING_ALLOWED ? I18n.t("restrictions.editing.driving.other_vehicles_restricted") : e === y.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? I18n.t("restrictions.editing.driving.other_vehicles_pay_toll") : void 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.collection.isBlank() && e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = n.restrictionEditable,
                            r = void 0 !== i && i,
                            s = n.subscriptions,
                            o = void 0 === s ? {} : s,
                            a = n.supportsLicensePlateNumber,
                            l = void 0 !== a && a;
                        return new t({
                            driveProfileList: e.getDriveProfileList(y.RESTRICTION_TYPE.FREE),
                            restrictionEditable: r,
                            subscriptions: o,
                            supportsNumPassengers: e.supportsNumPassengers(),
                            supportsSubscriptions: e.supportsSubscriptions(),
                            supportsLicensePlateNumber: l
                        })
                    }
                }]),
                t
        }(_.a.View),
        H = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "validate",
                    value: function() {
                        return []
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {}
                    }
                }, {
                    key: "getHelpMessage",
                    value: function() {
                        return ""
                    }
                }, {
                    key: "template",
                    get: function() {
                        return !1
                    }
                }]),
                t
        }(_.a.View),
        z = n(195),
        q = n(75),
        Y = n(92),
        $ = n(16),
        K = n(94),
        J = Object(K.moment)(),
        Z = Object(K.moment)().add(1, "month"),
        Q = new z.a,
        X = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "toggleAllWeekdays",
                    value: function(e) {
                        var t = e ? Object.keys(q.WEEKDAYS) : [];
                        this.set({
                            weekdays: t
                        })
                    }
                }, {
                    key: "getWeekdaysValue",
                    value: function() {
                        var e = q.RestrictionTimeFrame.getWeekdaysBitValue(this.attributes.weekdays);
                        return 0 === e ? null : e
                    }
                }, {
                    key: "getTimeFrameData",
                    value: function() {
                        var e = this.attributes,
                            t = e.fromTime,
                            n = e.toTime,
                            i = e.startDate,
                            r = e.endDate,
                            s = e.daysOfMonth;
                        this.attributes.isAllDay && (t = n = null),
                            this.attributes.isDuringDates ? (i = i.format(q.DATE_FORMAT),
                                r = r.format(q.DATE_FORMAT)) : i = r = null;
                        var o = this.getWeekdaysValue();
                        switch (0 === o && (o = null),
                            s) {
                            case "odd":
                                s = q.DAYS_OF_MONTH.ODD_DAYS;
                                break;
                            case "even":
                                s = q.DAYS_OF_MONTH.EVEN_DAYS;
                                break;
                            default:
                                s = null
                        }
                        return {
                            weekdays: o,
                            fromTime: t,
                            toTime: n,
                            startDate: i,
                            endDate: r,
                            daysOfMonth: s
                        }
                    }
                }, {
                    key: "isOvernight",
                    value: function() {
                        var e = this.attributes,
                            t = e.isAllDay,
                            n = e.fromTime,
                            i = e.toTime;
                        return !t && 1 === Q.compareTimes(n, i)
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = this.attributes,
                            t = [];
                        return 0 === e.weekdays.length && t.push(I18n.t("restrictions.editing.validation.weekdays")),
                            !1 === e.isAllDay && (Q.isValidTime(e.fromTime) || t.push(I18n.t("restrictions.editing.validation.fromTime")),
                                Q.isValidTime(e.toTime) || t.push(I18n.t("restrictions.editing.validation.toTime"))),
                            e.isDuringDates && ($.default.isBlank(e.startDate) ? t.push(I18n.t("restrictions.editing.validation.startDate")) : e.startDate.isBefore(Object(K.moment)(), "day") && t.push(I18n.t("restrictions.editing.validation.startDate_in_past")),
                                $.default.isBlank(e.endDate) && t.push(I18n.t("restrictions.editing.validation.endDate"))),
                            t
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n, i, r, s;
                        e.isDuringDates() ? (n = Object(K.moment)(e.getStartDate(), q.DATE_FORMAT),
                                i = Object(K.moment)(e.getEndDate(), q.DATE_FORMAT)) : (n = J,
                                i = Z),
                            e.isAllDay() ? (r = "8:00",
                                s = "17:00") : (r = e.getFromTime(),
                                s = e.getToTime());
                        var o = "all";
                        return e.isOnOddDaysOfMonth() ? o = "odd" : e.isOnEvenDaysOfMonth() && (o = "even"),
                            new t({
                                restrictionEditable: !1,
                                fromTime: r,
                                toTime: s,
                                startDate: n,
                                endDate: i,
                                weekdays: e.getWeekdays(),
                                isAllDay: e.isAllDay(),
                                isDuringDates: e.isDuringDates(),
                                daysOfMonth: o
                            })
                    }
                }]),
                t
        }(m.a.Model),
        ee = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .do-toggle-weekdays-all": function() {
                                e.model.toggleAllWeekdays(!0)
                            },
                            "click .do-toggle-weekdays-none": function() {
                                e.model.toggleAllWeekdays(!1)
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            bootstrapTimepickers: ".bootstrap-timepicker input",
                            timepickerFromTime: ".timepicker-from-time",
                            timepickerToTime: ".timepicker-to-time",
                            datepicker: ".datepicker"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".weekday": "weekdays",
                            ".timeframe-overnight-message": {
                                observe: ["fromTime", "toTime", "isAllDay"],
                                onGet: "_isOvernight",
                                visible: !0,
                                visibleFn: V.b
                            },
                            "[name=fromTime]": "fromTime",
                            "[name=toTime]": "toTime",
                            "[name=isAllDay]": "isAllDay",
                            "[name=isDuringDates]": {
                                observe: "isDuringDates",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            "[name=daysOfMonth]": {
                                observe: "daysOfMonth"
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".timepicker input": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllDay", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = D()(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return n || !i
                                    }
                                }]
                            },
                            ".datepicker": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isDuringDates", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = D()(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return !n || !i
                                    }
                                }]
                            },
                            ".timeframe-weekdays-toggle": {
                                observe: "restrictionEditable",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".date-parity-section": {
                                observe: "supportsDaysOfMonthParity",
                                visible: !0,
                                visibleFn: V.b
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._renderTimePickers(),
                            this._renderDatePickers(),
                            this.stickit()
                    }
                }, {
                    key: "onBeforeDetach",
                    value: function() {
                        this._detachTimePickers(),
                            this._detachDatePickers()
                    }
                }, {
                    key: "_renderTimePickers",
                    value: function() {
                        this.getUI("bootstrapTimepickers").timepicker(Y.a.prototype.timepickerOptions);
                        var e = this.model.attributes,
                            t = e.fromTime,
                            n = e.toTime;
                        null != t && this.getUI("timepickerFromTime").timepicker("setTime", t),
                            null != n && this.getUI("timepickerToTime").timepicker("setTime", n)
                    }
                }, {
                    key: "_detachTimePickers",
                    value: function() {
                        this.getUI("timepickerFromTime").data("timepicker").remove(),
                            this.getUI("timepickerToTime").data("timepicker").remove()
                    }
                }, {
                    key: "_renderDatePickers",
                    value: function() {
                        var e = this;
                        this.getUI("datepicker").daterangepicker({
                            autoApply: !0,
                            startDate: this.model.attributes.startDate,
                            endDate: this.model.attributes.endDate
                        }, function(t, n) {
                            e.model.set({
                                startDate: t,
                                endDate: n
                            })
                        })
                    }
                }, {
                    key: "_detachDatePickers",
                    value: function() {
                        this.getUI("datepicker").data("daterangepicker").remove()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getWeekdayFromOrdinal: function(e) {
                                return q.WEEKDAY_ORDINALS[e]
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            timeFrames: [this.model.getTimeFrameData()]
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "_isOvernight",
                    value: function() {
                        return this.model.isOvernight()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/timeframe_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = n.restrictionEditable,
                            r = void 0 !== i && i,
                            s = n.supportsDaysOfMonthParity,
                            o = void 0 !== s && s,
                            a = X.for(e);
                        return a.set({
                                restrictionEditable: r,
                                supportsDaysOfMonthParity: o
                            }),
                            new t({
                                model: a
                            })
                    }
                }]),
                t
        }(_.a.View),
        te = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            description: "",
                            drivingModality: null,
                            helpMessage: ""
                        }
                    }
                }]),
                t
        }(m.a.Model),
        ne = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            validationRegion: ".restriction-validation-region",
                            segmentEditingRegion: ".segment-editing-region",
                            timeframeEditingRegion: ".timeframe-editing-region",
                            driveProfileEditingRegion: ".drive-profile-editing-region"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-cancel": "restriction:edit:cancel"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-create": "_createRestriction",
                            "click .do-update": "_updateRestriction",
                            "change .do-change-driving-modality": "_changeDrivingModality"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            "change:helpMessage": "_updateHelpMessage"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=description]": "description",
                            ".driving-modality-select": {
                                observe: "drivingModality",
                                selectOptions: {
                                    collection: "this._drivingModalityOptions"
                                }
                            },
                            ".drive-profile-editing-region": {
                                classes: {
                                    "drive-profile-toll-free": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === y.RESTRICTION_MODALITY.DRIVING_TOLL_FREE
                                        }
                                    },
                                    "drive-profile-allowed": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === y.RESTRICTION_MODALITY.DRIVING_ALLOWED
                                        }
                                    }
                                }
                            },
                            ".help-message": {
                                observe: ["helpMessage"]
                            },
                            ".help-message-region": {
                                classes: {
                                    hidden: {
                                        observe: "helpMessage",
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }
                                }
                            },
                            "select, textarea, .do-update, .do-create": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restriction: null,
                            isNewRestriction: !0,
                            editingTitle: "",
                            canEditRestrictions: !1,
                            canAddTollRestriction: !1,
                            subscriptions: {},
                            supportsLicensePlateNumber: !1,
                            supportsDaysOfMonthParity: !1
                        };
                        this._restriction = e.restriction,
                            this._isNewRestriction = e.isNewRestriction,
                            this._editingTitle = e.editingTitle,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._canAddTollRestriction = e.canAddTollRestriction,
                            this._subscriptions = e.subscriptions,
                            this._supportsLicensePlateNumber = e.supportsLicensePlateNumber,
                            this._supportsDaysOfMonthParity = e.supportsDaysOfMonthParity,
                            this._timeframe = this._restriction.getTimeFrame(),
                            this.model = new te({
                                restrictionEditable: this._isRestrictionEditable(),
                                description: this._restriction.getDescription(),
                                drivingModality: null
                            }),
                            this._drivingModalityOptions = this._getDriveProfileTypeOptions()
                    }
                }, {
                    key: "_updateHelpMessage",
                    value: function() {
                        var e = this.getChildView("driveProfileEditingRegion");
                        this.model.set({
                            helpMessage: e.getHelpMessage(this.model.attributes.drivingModality)
                        })
                    }
                }, {
                    key: "_getDriveProfileTypeOptions",
                    value: function() {
                        var e = this,
                            t = [y.RESTRICTION_MODALITY.DRIVING_ALLOWED];
                        return this._restriction.supportsTollDriveProfileEntries() && t.push(y.RESTRICTION_MODALITY.DRIVING_TOLL_FREE),
                            t.push(y.RESTRICTION_MODALITY.DRIVING_BLOCKED),
                            t.map(function(t) {
                                return {
                                    value: t,
                                    label: I18n.t("restrictions.editing.driving.types.".concat(t)),
                                    disabled: t === y.RESTRICTION_MODALITY.DRIVING_TOLL_FREE && !e._canAddTollRestriction
                                }
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.$(".waze-tooltip").tooltip();
                        var e = this._isRestrictionEditable();
                        this._isSegmentRestriction() && this.showChildView("segmentEditingRegion", M.for(this._restriction, {
                                restrictionEditable: e
                            })),
                            this.showChildView("timeframeEditingRegion", ee.for(this._timeframe, {
                                restrictionEditable: e,
                                supportsDaysOfMonthParity: this._supportsDaysOfMonthParity && this._restriction.supportsDaysOfMonthParity()
                            })),
                            this._showDriveProfileEdit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            isNewRestriction: this._isNewRestriction,
                            editingTitle: this._editingTitle,
                            showEditDriveProfile: this._restriction.supportsDriveProfiles(),
                            showTollDisabledTooltip: !this._canAddTollRestriction && this._restriction.supportsTollDriveProfileEntries()
                        }
                    }
                }, {
                    key: "_isRestrictionEditable",
                    value: function() {
                        return this._restriction.isEditable() && this._canEditRestrictions
                    }
                }, {
                    key: "_isSegmentRestriction",
                    value: function() {
                        return this._restriction instanceof I.a
                    }
                }, {
                    key: "_getDrivingModality",
                    value: function() {
                        return this._isNewRestriction ? y.RESTRICTION_MODALITY.DRIVING_ALLOWED : this._restriction.getDrivingModality()
                    }
                }, {
                    key: "_driveProfileSupportsLicensePlateNumber",
                    value: function(e) {
                        return this._restriction.supportsLicensePlateNumber() && this._supportsLicensePlateNumber && (e === y.RESTRICTION_MODALITY.DRIVING_ALLOWED || e === y.RESTRICTION_MODALITY.DRIVING_TOLL_FREE)
                    }
                }, {
                    key: "_showDriveProfileEdit",
                    value: function() {
                        var e, t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).drivingModality,
                            n = void 0 === t ? this._getDrivingModality() : t,
                            i = this._isRestrictionEditable();
                        e = this._restriction.supportsDriveProfiles() ? n === y.RESTRICTION_MODALITY.DRIVING_BLOCKED ? x.for(this._restriction, {
                                restrictionEditable: i
                            }) : W.for(this._restriction, {
                                restrictionEditable: i,
                                subscriptions: this._subscriptions,
                                supportsLicensePlateNumber: this._driveProfileSupportsLicensePlateNumber(n)
                            }) : new H,
                            this.model.set({
                                drivingModality: n
                            }),
                            this.showChildView("driveProfileEditingRegion", e),
                            this._updateHelpMessage()
                    }
                }, {
                    key: "_getEditedRestriction",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.description,
                            n = e.drivingModality,
                            i = this.getChildView("timeframeEditingRegion"),
                            r = this.getChildView("driveProfileEditingRegion"),
                            s = this._restriction.getDefaultType();
                        this._restriction.supportsDriveProfiles() && (n === y.RESTRICTION_MODALITY.DRIVING_ALLOWED ? s = y.RESTRICTION_TYPE.BLOCKED : n === y.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? s = y.RESTRICTION_TYPE.TOLL : n === y.RESTRICTION_MODALITY.DRIVING_BLOCKED && (s = r.getRestrictionData().defaultType));
                        var o = {
                            defaultType: s,
                            description: t
                        };
                        if (Object.assign(o, i.getRestrictionData()),
                            Object.assign(o, r.getRestrictionData()),
                            this._isSegmentRestriction()) {
                            var a = this.getChildView("segmentEditingRegion");
                            Object.assign(o, a.getRestrictionData())
                        }
                        return this._restriction.with(o)
                    }
                }, {
                    key: "_validate",
                    value: function() {
                        var e = [];
                        return this.model.attributes.description.length > y.RESTRICTION_DESCRIPTION_CHAR_LIMIT && e.push(I18n.t("restrictions.editing.validation.description_char_limit", {
                                char_limit: y.RESTRICTION_DESCRIPTION_CHAR_LIMIT
                            })),
                            e
                    }
                }, {
                    key: "_isValid",
                    value: function() {
                        var e, t = this,
                            n = (e = this._validate()).concat.apply(e, r()(["timeframeEditingRegion", "driveProfileEditingRegion"].map(function(e) {
                                return t.getChildView(e).validate()
                            }))),
                            i = new w({
                                errorMessages: n
                            });
                        return this.showChildView("validationRegion", i),
                            i.isValid()
                    }
                }, {
                    key: "_createRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:create", this._getEditedRestriction())
                    }
                }, {
                    key: "_updateRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:update", this._restriction, this._getEditedRestriction())
                    }
                }, {
                    key: "_changeDrivingModality",
                    value: function(e) {
                        var t = e.target.value;
                        this._showDriveProfileEdit({
                            drivingModality: t
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit"
                    }
                }]),
                t
        }(_.a.View);
    t.default = ne
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(48),
        s = i(n(26)),
        o = n(61),
        a = function() {
            function e(e, t) {
                t instanceof s.default ? this.segments = [t] : this.segments = t,
                    this.dataModel = e
            }
            return e.prototype._hasSingleNonEmptyStreet = function() {
                    return new o.SegmentStreetsUseCase(this.dataModel, this.segments).hasSingleNonEmptyStreet()
                },
                e.prototype._supportsHouseNumbers = function() {
                    var e = this;
                    return W.Config.houseNumbers.allowEditing && this.segments.every(function(t) {
                        return e._segmentSupportsHouseNumbers(t)
                    })
                },
                e.prototype._segmentSupportsHouseNumbers = function(e) {
                    return r.isHouseNumberRoadType(e.attributes.roadType)
                },
                e.prototype.shouldDisableHouseNumbersButtonDueToActions = function() {
                    return this.dataModel.actionManager.canSave()
                },
                e.prototype.shouldDisableHouseNumberDueToEmptyStreet = function() {
                    return !this._hasSingleNonEmptyStreet()
                },
                e.prototype.shouldShowHouseNumbersButton = function() {
                    var e = 1 === this.segments.length;
                    return this._supportsHouseNumbers() && (e || this._hasSingleNonEmptyStreet())
                },
                e.prototype.canEditHouseNumbers = function() {
                    return this.segments.every(function(e) {
                        return e.canEditHouseNumbers()
                    })
                },
                e.prototype.canEnterHouseNumbersMode = function() {
                    return !this.shouldDisableHouseNumberDueToEmptyStreet() && !this.shouldDisableHouseNumbersButtonDueToActions() && this._supportsHouseNumbers() && this.canEditHouseNumbers()
                },
                e
        }();
    t.SegmentsHouseNumbersUseCase = a
}, function(e, t, n) {
    "use strict";
    var i = n(22),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(189),
        l = n.n(a),
        u = n(71),
        c = n.n(u),
        d = n(234),
        h = n.n(d),
        p = n(2),
        g = n.n(p),
        f = n(1),
        m = n.n(f),
        v = n(5),
        _ = n.n(v),
        y = n(3),
        b = n.n(y),
        E = n(6),
        w = n.n(E),
        S = n(41),
        k = n.n(S),
        T = n(15),
        I = n.n(T),
        A = function(e) {
            function t(e, n, i) {
                var r;
                return g()(this, t),
                    (r = _()(this, b()(t).call(this, i))).closure = e,
                    r.segment = n,
                    r
            }
            return w()(t, e),
                m()(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.segment]
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: I.a.ROAD_CLOSURE,
                            action: k.a.TYPE.DELETE,
                            attributes: {
                                id: this.closure.getID(),
                                segID: this.closure.segID
                            }
                        }
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        this.model.repos.roadClosures.remove(this.closure)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.doAction()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.model.repos.roadClosures.put(this.closure)
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.closure.getUniqueID(), this.segment.getUniqueID()]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.DeleteRoadClosure")
                    }
                }]),
                t
        }(k.a),
        M = n(58),
        O = n(12),
        C = n(29),
        R = n.n(C),
        D = {
            nextClosureID: -101,
            add: function(e) {
                for (var t = [], n = e.get("segments"), i = 0; i < n.length; i++)
                    for (var r = n[i], s = e.calculateForwardValuesForSegment(r.getID()), o = 0; o < s.length; o++) {
                        var a = s[o],
                            l = this._createRoadClosure(e, r.getID(), r.geometry);
                        l.forward = a,
                            l.fromNodeClosed = e.isFromNodeClosedForClosure(l),
                            t.push(new h.a(l, r))
                    }
                return this._wrapInMultiAction(t)
            },
            _createRoadClosure: function(e, t, n) {
                var i = new l.a({
                    id: this._getNewClosureID(),
                    geometry: O.cloneGeometry(n),
                    segID: t,
                    active: !0,
                    fromNodeClosed: !1
                });
                return e.saveSimpleFieldsToClosure(i),
                    i
            },
            delete: function(e) {
                var t = e.get("closures").map(function(t) {
                    var n = e.findSegmentByID(t.segID);
                    return new A(t, n)
                });
                return this._wrapInMultiAction(t)
            },
            update: function(e) {
                for (var t = [], n = e.get("closures"), i = e.isOppositeToOriginal(), r = this._changedToOneWay(e), s = this._shouldUpdate(e), o = this._shouldCreateOpposite(e), a = 0; a < n.length; a++) {
                    var l = n[a],
                        u = e.findSegmentByID(l.segID);
                    i ? (t.push(this._createAddOppositeAction(e, l)),
                        t.push(new A(l, u))) : r && this._hasObsoleteDirection(e, l) ? t.push(new A(l, u)) : (s && t.push(this._createUpdateAction(e, l)),
                        o && t.push(this._createAddOppositeAction(e, l)))
                }
                return this._wrapInMultiAction(t)
            },
            _shouldUpdate: function(e) {
                return e.hasChanged()
            },
            _createUpdateAction: function(e, t) {
                var n = e.isOppositeToOriginal() ? !t.forward : t.forward,
                    i = e.isFromNodeClosedForClosure(t),
                    r = Object.assign(e.getChangedAttributes(t), {
                        forward: n,
                        fromNodeClosed: i
                    });
                return new R.a(t, r)
            },
            _shouldCreateOpposite: function(e) {
                return e.differsFromOriginal("direction") && e.get("direction") === M.a.TWO_WAY
            },
            _createAddOppositeAction: function(e, t) {
                var n = this._createRoadClosure(e, t.segID, t.geometry);
                n.forward = !t.forward,
                    n.fromNodeClosed = !1;
                var i = e.findSegmentByID(t.segID);
                return new h.a(n, i)
            },
            _getNewClosureID: function() {
                return this.nextClosureID--
            },
            _changedToOneWay: function(e) {
                return e.differsFromOriginal("direction") && e.original("direction") === M.a.TWO_WAY
            },
            _hasObsoleteDirection: function(e, t) {
                return !e.calculateForwardValuesForSegment(t.segID).includes(t.forward)
            },
            applyToAllSegments: function(e, t) {
                for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i = arguments.length > 3 ? arguments[3] : void 0, r = arguments.length > 4 ? arguments[4] : void 0, s = this._findMissingSegments(e, t), o = [], a = new M.b({
                        segments: s,
                        reverseSegments: n,
                        direction: e.get("direction")
                    }, {
                        dataModel: i,
                        segmentSelection: r
                    }), l = 0; l < s.length; l++)
                    for (var u = s[l], c = a.calculateForwardValuesForSegment(u.getID()), d = 0; d < c.length; d++) {
                        var p = c[d],
                            g = this._createRoadClosure(e, u.getID(), u.geometry);
                        g.forward = p;
                        var f = (p ? u.getFromNode() : u.getToNode()).getID();
                        g.fromNodeClosed = e.isNodeClosed(f),
                            o.push(new h.a(g, u))
                    }
                return this._wrapInMultiAction(o)
            },
            _findMissingSegments: function(e, t) {
                return o.a.reject(t, function(t) {
                    return null != e.findSegmentByID(t.getID())
                })
            },
            _wrapInMultiAction: function(e) {
                return new c.a(r()(e))
            }
        };
    t.a = D
}, , , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        a = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = o(n(0)),
        u = n(70),
        c = n(81),
        d = o(n(80)),
        h = o(n(51)),
        p = o(n(43)),
        g = a(n(17)),
        f = a(n(12)),
        m = o(n(705)),
        v = a(n(21));
    t.MAX_POLYGON_SIZE_DEGREES = .01;
    var _ = function(e) {
        function t(n, i) {
            var r = this,
                s = t.defaults();
            return (r = e.call(this, n, i, u.BigJunctionsPermissions, s) || this)._pathCache = null,
                r
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.defaults = function() {
                return {
                    name: "",
                    rank: 0,
                    segIDs: [],
                    permissions: p.default.ALL_PERMISSIONS
                }
            },
            t.prototype.merge = function(t) {
                this._pathCache = null,
                    e.prototype.merge.call(this, t)
            },
            t.prototype.getAddress = function() {
                return d.default.fromCityID(this.attributes.cityID, this.model)
            },
            t.prototype.getSegmentCount = function() {
                return this.attributes.segIDs.length
            },
            t.prototype.getPossibleTurns = function() {
                return null != this._pathCache ? this._pathCache : this._pathCache = m.default.for(this).getAllTurns()
            },
            t.prototype.getPossibleTurnsBetween = function(e, t) {
                return this.getPossibleTurns().filter(function(n) {
                    return n.getFromVertex().equals(e) && n.getToVertex().equals(t)
                })
            },
            t.prototype.getTurnsFrom = function(e) {
                var t = this,
                    n = this.model.getTurnGraph().getLegalTrivialTurnsFrom(e).filter(function(e) {
                        return !t._isShortSegment(e.getToVertex().getSegmentID())
                    }),
                    i = this.model.getTurnGraph().getTurnsFrom(e).filter(function(e) {
                        return e.getTurnData().hasSegmentPath()
                    }),
                    r = n.concat(i);
                return this.getShortestTurns().filter(function(t) {
                    return t && t.getFromVertex().equals(e)
                }).map(function(e) {
                    var t = e.withTurnData(e.getTurnData().withState(c.TURN_STATE.DISALLOWED)),
                        n = r.find(function(e) {
                            return e.verticesEqual(t)
                        });
                    return void 0 !== n ? n : t
                }).concat(n)
            },
            t.prototype._isShortSegment = function(e) {
                return this.attributes.segIDs.includes(e)
            },
            t.prototype.getShortestTurns = function() {
                var e = l.default.groupBy(this.getPossibleTurns(), function(e) {
                    return e.getFromVertex().toString() + e.getToVertex().toString()
                });
                return l.default(e).values().map(function(e) {
                    return l.default.minBy(e, function(e) {
                        return e.getTurnData().getSegmentPath().length
                    })
                }).compact().value()
            },
            t.prototype.getShortSegments = function() {
                return this.model.segments.getByIds(this.attributes.segIDs)
            },
            t.prototype._getIntersectionWithLine = function(e) {
                var t, n = this.attributes.geometry.distanceTo(e, {
                        details: !0
                    }),
                    i = g.createPoint(n.x0, n.y0),
                    r = v.getPointEdge(e, i); -
                1 === r && (r = 0);
                var o = e.components[r],
                    a = e.components[r + 1];
                this.attributes.geometry.intersects(a) && (o = (t = s([a, o], 2))[0],
                    a = t[1]);
                var l = v.radToDeg(Math.atan2(a.y - o.y, a.x - o.x));
                return {
                    x: i.x,
                    y: i.y,
                    angle: l
                }
            },
            t.prototype.getAngleAtIntersection = function(e) {
                return this._getIntersectionWithLine(e).angle
            },
            t.prototype.getIntersectionPoint = function(e) {
                var t = this._getIntersectionWithLine(e);
                return g.createPoint(t.x, t.y)
            },
            t.prototype.canEditTurns = function() {
                return this.isAllowed(u.BigJunctionsPermissions.UPDATE)
            },
            t.prototype.arePropertiesEditable = function() {
                return this.isAllowed(u.BigJunctionsPermissions.UPDATE)
            },
            t.prototype.isPolygonAreaLegal = function() {
                var e = v.unproject(f.getBounds(this.attributes.geometry, !0));
                return e.getWidth() <= .01 && e.getHeight() <= .01
            },
            t
    }(h.default);
    t.BigJunction = _,
        Object.assign(_.prototype, {
            CLASS_NAME: "Waze.Feature.FeatureVector.BigJunction"
        })
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(27)),
        a = s(n(65)),
        l = s(n(64)),
        u = function(e) {
            function t(t, n, i, r) {
                var s = e.call(this, r) || this;
                return s.street = null,
                    s.city = n,
                    s.name = t,
                    s.isEmpty = i,
                    s
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e, t = null,
                        n = !1;
                    (t = this.isEmpty ? l.default.streetsByAttributes(this.model, {
                        isEmpty: !0,
                        cityID: this.city.getID()
                    })[0] : l.default.streetsByAttributes(this.model, {
                        name: this.name,
                        cityID: this.city.getID()
                    })[0]) || (this.isEmpty || this.name,
                        t = (e = new a.default(null, this.model.streets, {
                            name: this.isEmpty ? "" : this.name,
                            isEmpty: this.isEmpty,
                            cityID: this.city.getID()
                        })).getObject(),
                        this.doSubAction(e),
                        n = !0),
                    this.street = t,
                        n || (this.dontSerialize = !0)
                },
                t.prototype.getStreet = function() {
                    return this.street
                },
                t.prototype.getAffectedUniqueIds = function() {
                    var e = this.street;
                    return null != e && e.isNew() ? [e.getUniqueID()] : []
                },
                t
        }(o.default);
    t.default = u
}, , function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(7)),
        s = n(162),
        o = r.default.Model.extend({
            defaults: {
                ignorable: !1,
                code: 700,
                description: null,
                geometry: null,
                objects: null
            },
            get nested() {
                return {
                    geometry: OpenLayers.Geometry
                }
            },
            parse: function(e) {
                return s.parseJsonObject(e, this.nested)
            }
        });
    t.SaveErrorViewModel = o
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
        var n = "function" == typeof Symbol && e[Symbol.iterator];
        if (!n)
            return e;
        var i, r, s = n.call(e),
            o = [];
        try {
            for (;
                (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                o.push(i.value)
        } catch (e) {
            r = {
                error: e
            }
        } finally {
            try {
                i && !i.done && (n = s.return) && n.call(s)
            } finally {
                if (r)
                    throw r.error
            }
        }
        return o
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(26),
        s = n(201),
        o = function() {
            function e(e) {
                this.segments = e,
                    this.reverseSegmentIds = new Set,
                    this.multipleConnectedComponents = !1,
                    this.calcReversedSegments(e)
            }
            return e.prototype.getSelectedSegments = function() {
                    return this.segments
                },
                e.prototype.getFirstSegment = function() {
                    return this.segments[0]
                },
                e.prototype.getSegmentCount = function() {
                    return this.segments.length
                },
                e.prototype.isReversedById = function(e) {
                    return this.reverseSegmentIds.has(e)
                },
                e.prototype.isReversed = function(e) {
                    return this.isReversedById(e.getID())
                },
                e.prototype.isSelected = function(e) {
                    return null != this.segments.find(function(t) {
                        return t.getID() === e.getID()
                    })
                },
                e.prototype.getNumberOfReversedSegments = function() {
                    return this.multipleConnectedComponents ? 0 : this.reverseSegmentIds.size
                },
                e.prototype.hasMultipleConnectedComponents = function() {
                    return this.multipleConnectedComponents
                },
                e.prototype.calcReversedSegments = function(e) {
                    var t = this;
                    0 !== e.length && (i(s.bfs(e[0], function(t) {
                        return e.includes(t)
                    }, function(e, n, i, s, o) {
                        var a = i === r.NodeName.FROM && e.attributes.toNodeID !== n || i === r.NodeName.TO && e.attributes.fromNodeID !== n,
                            l = t.reverseSegmentIds.has(o.getID());
                        return (a ? !l : l) && t.reverseSegmentIds.add(e.getID()),
                            !1
                    }), 2)[1].size < e.length && (this.multipleConnectedComponents = !0))
                },
                e
        }();
    t.SegmentSelection = o
}, function(e, t, n) {
    "use strict";
    var i = n(24),
        r = new OpenLayers.Style({
            strokeOpacity: 1,
            strokeDashstyle: "dash",
            strokeColor: "#ff8383",
            strokeWidth: 2
        }),
        s = {
            strokeWidth: 6,
            strokeOpacity: 1
        },
        o = new OpenLayers.Rule({
            getContext: function(e) {
                return e
            },
            filter: new OpenLayers.Filter({
                evaluate: function(e) {
                    return e.model && e.layer.colorEmptyStreetSegments && e.model.getAddress().isEmptyStreet()
                }
            }),
            symbolizer: {
                strokeWidth: 9,
                strokeOpacity: .55,
                strokeColor: "red",
                strokeLinecap: "butt"
            }
        }),
        a = function(e) {
            var t = Object(i.a)({
                Line: s
            });
            return new OL.Style(null, {
                rules: [t].concat(e)
            })
        },
        l = Object(i.b)("hasClosures", !0, {
            strokeColor: "#ff543b"
        });
    t.a = new OpenLayers.StyleMap({
        default: a([Object(i.b)("isUnchanged", !0, {
            strokeOpacity: 0
        }), o, Object(i.b)("isUnchanged", !1, {
            strokeColor: "#ff8383"
        })]),
        highlight: a([Object(i.a)({
            strokeColor: "#00ece3"
        }), Object(i.b)("isUnchanged", !1, {
            strokeColor: "#eb7171"
        }), l]),
        select: a([Object(i.a)({
            strokeColor: "#00ece3"
        }), l]),
        highlightselected: a(Object(i.a)({
            strokeColor: "#00ece3"
        })),
        delete: r,
        highlightdeleted: r,
        drag: a(Object(i.a)({
            strokeColor: "#00ece3"
        })),
        flash: a(Object(i.a)({
            strokeColor: "#000010",
            strokeOpacity: .8
        }))
    })
}, function(e, t, n) {
    "use strict";
    var i = n(424),
        r = n.n(i),
        s = n(212),
        o = n.n(s),
        a = n(425),
        l = n.n(a),
        u = n(426),
        c = n.n(u),
        d = n(427),
        h = n.n(d),
        p = {
            0: "unknown",
            1: "big_direction_left",
            2: "big_direction_right",
            3: "big_direction_exit_left",
            4: "big_direction_exit_right",
            5: "big_direction_forward",
            6: "big_directions_roundabout",
            7: "big_directions_roundabout",
            8: "big_directions_roundabout_l",
            9: "big_directions_roundabout_l",
            10: "big_directions_roundabout_s",
            11: "big_directions_roundabout_s",
            12: "big_directions_roundabout_r",
            13: "big_directions_roundabout_r",
            14: "big_directions_roundabout_u",
            15: "big_directions_roundabout_u",
            16: "big_direction_end",
            17: "big_direction_exit_left",
            18: "big_direction_exit_right",
            20: "big_direction_u"
        },
        g = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                pointerEvents: "none",
                strokeLinecap: "square",
                strokeWidth: 5
            }, {
                context: {
                    getInstructionCodeImages: function(e) {
                        return n(740)("./".concat(p[e.attributes.code], ".png"))
                    }
                }
            })
        });
    g.addUniqueValueRules("default", "type", {
            session: {
                strokeColor: "#7ddd7f",
                strokeWidth: 2,
                graphicZIndex: 0
            },
            drive: {
                strokeColor: "#7ddd7f",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            disallowedPath: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            driveArrow: {
                externalGraphic: r.a,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 2
            },
            disconnect: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                strokeDashstyle: "dash",
                strokeDashArray: "32 16",
                graphicZIndex: 2
            },
            matchedSegment: {
                strokeWidth: 8,
                strokeColor: "#00ece3",
                strokeOpacity: .7,
                graphicZIndex: 2
            },
            matchedSegmentArrow: {
                externalGraphic: o.a,
                rotation: "${angle}",
                fillOpacity: .7,
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            gutter: {
                strokeColor: "black",
                graphicZIndex: 2
            },
            pinA: {
                pointerEvents: "visiblePainted",
                externalGraphic: l.a,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            pinB: {
                pointerEvents: "visiblePainted",
                externalGraphic: c.a,
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            suggestedRoute: {
                strokeWidth: 8,
                strokeColor: "#9400ff",
                graphicZIndex: 3
            },
            suggestedRouteArrow: {
                externalGraphic: h.a,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            driveWeight: {
                label: "${weight}",
                fontSize: 12,
                fontColor: "white",
                strokeWidth: 3,
                strokeOpacity: 1,
                pointRadius: 14,
                fillColor: "#529554",
                strokeColor: "#7ddd7f"
            },
            routeInstruction: {
                externalGraphic: "${getInstructionCodeImages}",
                graphicWidth: 30,
                graphicHeight: 32
            },
            shortSegment: {
                strokeWidth: 8,
                strokeColor: "#3a582c",
                graphicZIndex: 1
            },
            venue: {
                strokeColor: "#ea4e35",
                fillColor: "#ea4e35",
                strokeDashstyle: "dash",
                strokeOpacity: 1,
                strokeWidth: 2,
                fillOpacity: .3
            }
        }),
        t.a = g
}, function(e, t, n) {
    "use strict";
    var i = n(13),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(26),
        h = n.n(d),
        p = n(21),
        g = n(12),
        f = function() {
            function e(t) {
                o()(this, e),
                    this.layer = t
            }
            return l()(e, [{
                    key: "drawUserDrive",
                    value: function(e) {
                        var t = [];
                        return t.push(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                                type: "drive"
                            })),
                            this.drawArrows(e, t, "driveArrow"),
                            this.addFeatures(t),
                            t
                    }
                }, {
                    key: "drawDisallowedPath",
                    value: function(e) {
                        var t = [];
                        return t.push(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                                type: "disallowedPath"
                            })),
                            this.drawArrows(e, t, "matchedSegmentArrow"),
                            this.addFeatures(t),
                            t
                    }
                }, {
                    key: "drawDriveWeightPoint",
                    value: function(e, t, n) {
                        if (this.layer.map.getZoom() >= W.Config.user_drive.weightMinDisplayZoom) {
                            var i = e.distanceTo(t, {
                                details: !0
                            });
                            i = new OpenLayers.Geometry.Point(i.x1, i.y1),
                                i = p.getPointAlongLine(t, this.WEIGHT_POINT_DISTANCE * this.layer.map.getResolution(), i).point;
                            var r = new OpenLayers.Feature.Vector(i, {
                                weight: n.toString(),
                                type: "driveWeight"
                            });
                            this.addFeatures(r)
                        }
                    }
                }, {
                    key: "drawShortSegment",
                    value: function(e) {
                        var t = [];
                        t.push(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                                type: "shortSegment"
                            })),
                            this.addFeatures(t)
                    }
                }, {
                    key: "drawMatchedSegment",
                    value: function(e) {
                        var t = [];
                        t.push(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                                type: "matchedSegment"
                            })),
                            this.drawArrows(e, t, "matchedSegmentArrow"),
                            this.addFeatures(t)
                    }
                }, {
                    key: "drawSuggestedRoute",
                    value: function(e) {
                        var t = [];
                        return t.push(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                                type: "suggestedRoute"
                            })),
                            this.drawArrows(e, t, "suggestedRouteArrow"),
                            this.addFeatures(t),
                            t
                    }
                }, {
                    key: "drawSession",
                    value: function(e) {
                        this.addFeatures(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                            type: "session"
                        }))
                    }
                }, {
                    key: "drawArrows",
                    value: function(e, t, n) {
                        if (this.layer.map.getZoom() >= W.Config.user_drive.arrowsMinDisplayZoom) {
                            var i = this.ARROW_DISTANCE * this.layer.map.getResolution();
                            new h.a({
                                geometry: e
                            }).getArrowPoints(i).forEach(function(e) {
                                var i = r()(e, 2),
                                    s = i[0],
                                    o = i[1];
                                t.push(new OpenLayers.Feature.Vector(s, {
                                    type: n,
                                    angle: 360 - OpenLayers.Util.deg(o)
                                }))
                            })
                        }
                    }
                }, {
                    key: "drawDisconnect",
                    value: function(e, t) {
                        var n = [];
                        n.push(new OpenLayers.Feature.Vector(g.cloneGeometry(e), {
                                type: "disconnect"
                            })),
                            t && this.drawDisconnectGutters(e, n),
                            this.addFeatures(n)
                    }
                }, {
                    key: "drawDisconnectGutters",
                    value: function(e, t) {
                        if (this.layer.map.getZoom() >= W.Config.user_drive.gutterMinDisplayZoom) {
                            var n, i = this.DISCONNECT_GUTTER_SIZE * this.layer.map.getResolution();
                            [!0, !1].forEach(function(r) {
                                (n = p.getSubLineGeometry(e, i, r)).attributes.type = "gutter",
                                    t.push(new OpenLayers.Feature.Vector(n))
                            })
                        }
                    }
                }, {
                    key: "drawPin",
                    value: function(e, t) {
                        this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                            type: "pin".concat(t)
                        }))
                    }
                }, {
                    key: "drawRouteInstructions",
                    value: function(e, t) {
                        var n = [];
                        c.a.isEmpty(t) || this.layer.map.getZoom() < W.Config.user_drive.instructionsMinDisplayZoom || (t.forEach(function(e) {
                                this.HIDDEN_INSTRUCTION_CODES.includes(Number(e.code)) || n.push(new OpenLayers.Feature.Vector(e.point, {
                                    type: "routeInstruction",
                                    code: e.code
                                }))
                            }, this),
                            this.addFeatures(n))
                    }
                }, {
                    key: "drawVenue",
                    value: function(e) {
                        var t = new OL.Feature.Vector(g.cloneGeometry(e), {
                            type: "venue"
                        });
                        this.addFeatures(t)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this.layer.addFeatures(e, {
                            silent: !0
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this.layer.removeAllFeatures()
                    }
                }]),
                e
        }();
    Object.assign(f.prototype, {
            ARROW_DISTANCE: 70,
            DISCONNECT_GUTTER_SIZE: 5,
            WEIGHT_POINT_DISTANCE: 70,
            HIDDEN_INSTRUCTION_CODES: [0, 5]
        }),
        t.a = f
}, function(e, t, n) {
    "use strict";
    var i = n(0),
        r = n.n(i),
        s = n(144),
        o = s.SaveErrorViewModel.extend();
    o.prototype.deafults = r.a.extend({
            collatedCount: null
        }, s.SaveErrorViewModel.prototype.defaults),
        t.a = o
}, function(e, t, n) {
    "use strict";
    var i = n(8),
        r = n.n(i),
        s = n(4),
        o = n.n(s).a.Behavior.extend({
            onRender: function() {
                this._bindModels()
            },
            _bindModels: function() {
                var e = this;
                this.options.charLimits.forEach(function(t) {
                    var n, i = e.view[t.modelAttribute];
                    i && e.view.stickit(i, (n = {},
                        r()(n, t.inputSelector, {
                            events: ["keyup"],
                            observe: t.observe,
                            attributes: [{
                                name: "maxlength",
                                onGet: function() {
                                    return t.maxLength
                                }
                            }]
                        }),
                        r()(n, t.charCountSelector, {
                            updateModel: !1,
                            observe: t.observe,
                            onGet: function(e) {
                                return t.maxLength - (e && e.length || 0)
                            }
                        }),
                        n))
                })
            }
        });
    t.a = o
}, function(e, t, n) {
    "use strict";
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(14),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(8),
        m = n.n(f),
        v = n(7),
        _ = n.n(v),
        y = n(4),
        b = n.n(y),
        E = n(9);

    function w(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var S = function(e) {
        function t(e) {
            var n;
            return r()(this, t),
                (n = l()(this, c()(t).call(this, function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? w(Object(n), !0).forEach(function(t) {
                            m()(e, t, n[t])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : w(Object(n)).forEach(function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                        })
                    }
                    return e
                }({}, e, {
                    model: new _.a.Model({
                        title: e.title,
                        content: e.content,
                        showDontShowAgainCheckbox: e.showDontShowAgainCheckbox,
                        dontShowAgain: !1
                    })
                }))))._bindEvents(),
                n
        }
        return g()(t, e),
            o()(t, [{
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Map/Balloons/templates/map-balloon-confirm"
                }
            }]),
            o()(t, [{
                key: "_bindEvents",
                value: function() {
                    W.model.actionManager.events.register("beforeaction", this, this._onAction),
                        W.model.actionManager.events.register("beforeundoaction", this, this._onAction)
                }
            }, {
                key: "_unbindEvents",
                value: function() {
                    W.model.actionManager.events.unregister("beforeaction", this, this._onAction),
                        W.model.actionManager.events.unregister("beforeundoaction", this, this._onAction)
                }
            }, {
                key: "_onAction",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .apply-button": this._onApplyClick
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        "input[name=dont-show-again]": {
                            observe: "dontShowAgain"
                        },
                        ".dont-show-again-container": {
                            observe: "showDontShowAgainCheckbox",
                            visible: !0,
                            visibleFn: E.b
                        }
                    }
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "onBeforeDestroy",
                value: function() {
                    this._unbindEvents()
                }
            }, {
                key: "_onApplyClick",
                value: function() {
                    this.trigger("apply", {
                        dontShowAgainChecked: this.model.attributes.dontShowAgain
                    })
                }
            }]),
            t
    }(b.a.View);

    function k(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var T = function(e) {
            function t(e) {
                var n, i = e.map,
                    s = e.lonlat,
                    o = e.element,
                    a = e.view,
                    u = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return r()(this, t),
                    (n = l()(this, c()(t).call(this, {
                        map: i,
                        lonlat: s,
                        element: o
                    }, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? k(Object(n), !0).forEach(function(t) {
                                m()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : k(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({
                        onMount: function(e) {
                            return n._balloonOnMount(e)
                        },
                        onHidden: function(e) {
                            return n._balloonOnHidden(e)
                        },
                        interactive: !0,
                        interactiveBorder: 10
                    }, u)))).view = a,
                    n.listenTo(a, "destroy", function() {
                        n.destroy()
                    }),
                    n
            }
            return g()(t, e),
                o()(t, [{
                    key: "_bindEvents",
                    value: function() {
                        h()(c()(t.prototype), "_bindEvents", this).call(this),
                            W.selectionManager.events.register("selectionchanged", this, this._onSelectionChanged)
                    }
                }, {
                    key: "_unbindEvents",
                    value: function() {
                        h()(c()(t.prototype), "_unbindEvents", this).call(this),
                            W.selectionManager.events.unregister("selectionchanged", this, this._onSelectionChanged)
                    }
                }, {
                    key: "_onSelectionChanged",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        h()(c()(t.prototype), "onBeforeDestroy", this).call(this),
                            this.view.destroy()
                    }
                }, {
                    key: "_balloonOnHidden",
                    value: function(e) {
                        this.view.triggerMethod("balloon:hidden")
                    }
                }, {
                    key: "_balloonOnMount",
                    value: function(e) {
                        var t = e.popperChildren.content;
                        this.view.setElement(t),
                            this.view.render()
                    }
                }]),
                t
        }(n(205).a),
        I = n(258),
        A = 30,
        M = function(e) {
            function t(e) {
                var n, i = e.map,
                    s = e.lonlat,
                    o = e.element,
                    a = e.resolveFunc,
                    u = e.rejectFunc,
                    d = e.title,
                    h = e.content,
                    p = e.dontShowAgainKey;
                return r()(this, t),
                    (n = l()(this, c()(t).call(this, {
                        map: i,
                        lonlat: s,
                        element: o,
                        view: new S({
                            title: d,
                            content: h,
                            showDontShowAgainCheckbox: null != p
                        })
                    }, {
                        distance: A
                    }))).resolveFunc = a,
                    n.rejectFunc = u,
                    n.dontShowAgainKey = p,
                    n
            }
            return g()(t, e),
                o()(t, [{
                    key: "_balloonOnMount",
                    value: function(e) {
                        var n = this;
                        h()(c()(t.prototype), "_balloonOnMount", this).call(this, e),
                            this.view.on("apply", function(e) {
                                e.dontShowAgainChecked && Object(I.dontShowAgain)(n.dontShowAgainKey),
                                    n.applied = !0,
                                    n.hide()
                            })
                    }
                }, {
                    key: "_balloonOnHidden",
                    value: function(e) {
                        h()(c()(t.prototype), "_balloonOnMount", this).call(this, e),
                            this.applied ? this.resolveFunc() : this.rejectFunc()
                    }
                }], [{
                    key: "showAsync",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            n = e.map,
                            i = void 0 === n ? W.map.getOLMap() : n,
                            r = e.lonlat,
                            s = e.element,
                            o = e.title,
                            a = e.content,
                            l = e.dontShowAgainKey;
                        return Object(I.shouldShowAgain)(l) ? new Promise(function(e, n) {
                            new t({
                                map: i,
                                lonlat: r,
                                element: s,
                                resolveFunc: e,
                                rejectFunc: n,
                                title: o,
                                content: a,
                                dontShowAgainKey: l
                            }).show()
                        }) : Promise.resolve()
                    }
                }]),
                t
        }(T);
    t.a = M
}, function(e, t, n) {
    "use strict";
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(14),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(0),
        _ = n.n(v),
        y = n(27),
        b = n.n(y),
        E = n(29),
        w = n.n(E),
        S = n(124),
        k = n.n(S),
        T = n(142),
        I = n.n(T),
        A = n(8),
        M = n.n(A),
        O = n(41);

    function C(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var R = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return o()(this, t),
                    c()(this, h()(t).call(this, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? C(Object(n), !0).forEach(function(t) {
                                M()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : C(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({
                        dontSerialize: !0
                    }, e)))
            }
            return m()(t, e),
                l()(t, [{
                    key: "doAction",
                    value: function() {
                        this.model.loginManager.user.incrementSegmentStreetChangeCount()
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        this.model.loginManager.user.decrementSegmentStreetChangeCount()
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.model.loginManager.user.incrementSegmentStreetChangeCount()
                    }
                }]),
                t
        }(n.n(O).a),
        D = n(15),
        L = n.n(D),
        P = {
            getCityFromDataModel: !1,
            cityIDField: "cityID",
            streetIDField: "streetID",
            updateStreet: !0,
            updateHouseNumber: !1
        },
        N = function(e) {
            function t(e, n) {
                var i, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return o()(this, t),
                    (i = c()(this, h()(t).call(this, r))).feature = e,
                    i.attributes = n,
                    i.options = _.a.defaults(r, P),
                    i
            }
            return m()(t, e),
                l()(t, [{
                    key: "doAction",
                    value: function() {
                        var e, t = this.model.countries.getObjectById(this.attributes.countryID),
                            n = this.model.states.getObjectById(this.attributes.stateID);
                        if (this.options.getCityFromDataModel)
                            e = this.model.cities.getObjectById(this.attributes.cityID);
                        else {
                            var i = new k.a(n, t, this.attributes.cityName, this.attributes.emptyCity);
                            this.doSubAction(i),
                                e = i.city
                        }
                        var r = {};
                        if (this.options.updateStreet) {
                            var s = new I.a(this.attributes.streetName, e, this.attributes.emptyStreet);
                            this.doSubAction(s);
                            var o = s.street;
                            r[this.options.streetIDField] = o.getID(),
                                this.feature.type === L.a.SEGMENT && this.doSubAction(new R)
                        } else
                            r[this.options.cityIDField] = e.getID();
                        return this.options.updateHouseNumber && this.doSubAction(new w.a(this.feature, {
                                houseNumber: this.attributes.houseNumber
                            })),
                            this.doSubAction(new w.a(this.feature, r)),
                            !0
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.feature]
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        if (this.options.getCityFromDataModel) {
                            var e = this.model.cities.getObjectById(this.attributes.cityID);
                            if (e.isNew())
                                return [e.getUniqueID()].concat(r()(g()(h()(t.prototype), "getAffectedUniqueIds", this).call(this)))
                        }
                        return g()(h()(t.prototype), "getAffectedUniqueIds", this).call(this)
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = I18n.t("objects.".concat(this.feature.type, ".name"));
                        this._description = I18n.t("save.changes_log.actions.UpdateFeatureAddress", {
                            objectType: e
                        })
                    }
                }]),
                t
        }(b.a);
    t.a = N
}, function(e, t, n) {
    "use strict";
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(10),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(60),
        h = n(440),
        p = n.n(h),
        g = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                pointerEvents: "none",
                strokeLinecap: "square",
                strokeWidth: 5
            })
        });
    g.addUniqueValueRules("default", "type", {
        homePin: {
            pointerEvents: "visiblePainted",
            externalGraphic: p.a,
            graphicWidth: 33,
            graphicHeight: 40,
            graphicYOffset: -35
        }
    });
    var f = g,
        m = n(25),
        v = {
            fillColor: "black",
            strokeWidth: 0,
            fillOpacity: .65,
            mask: "url(#spotlightMask)"
        },
        _ = {
            maskID: "spotlightMask",
            filter: "url(#spotlightBlur)",
            pointRadius: 70,
            fillColor: "black",
            fillOpacity: 1,
            animation: {
                id: "spotlightAnimation",
                attributeName: "r",
                dur: "0.3s",
                from: 100,
                to: 70,
                fill: "disable",
                begin: "indefinite"
            }
        },
        y = {
            id: "homeSpotlightAnimation",
            attributeName: "r",
            dur: "0.7s",
            from: 400,
            to: 200,
            fill: "freeze",
            begin: "indefinite",
            calcMode: "spline",
            keyTimes: "0;1",
            keySplines: ".4 0 .4 1.3"
        },
        b = function() {
            function e(t) {
                r()(this, e),
                    this.layer = null,
                    this.overlay = null,
                    this.disableTimeout = 0,
                    this.removeTimeout = 0,
                    this.fadeDuration = 400,
                    this.spotLightDuration = 3e3,
                    this.homeSpotLightRadius = 450,
                    this.homeAnimationZoom = 4,
                    this.map = t
            }
            return o()(e, [{
                    key: "_ensureLayer",
                    value: function() {
                        if (null == this.layer)
                            return this.layer = new OL.Layer.Vector("spotlight", {
                                    renderers: [d.a],
                                    styleMap: f
                                }),
                                this.removeTimeout && window.clearTimeout(this.removeTimeout),
                                this.fadeIn(this.fadeDuration),
                                this.map.addLayer(this.layer)
                    }
                }, {
                    key: "drawOverlay",
                    value: function() {
                        this._ensureLayer();
                        var e = this.map.getExtent().scale(2).toGeometry(),
                            t = new OL.Feature.Vector(e, null, v);
                        return this.layer.addFeatures(t)
                    }
                }, {
                    key: "drawAndFocusSpotlightAtPoint",
                    value: function(e, t, n) {
                        this._isSpotlightInBounds(e) || this.map.setCenter(m.toLonLat(e)),
                            this._destroyLayer(),
                            this._ensureLayer(),
                            this.drawOverlay(),
                            t || (t = _);
                        var i = new OL.Feature.Vector(e.clone(), null, t);
                        this.layer.addFeatures(i);
                        var r = t.animation,
                            s = document.getElementById(r.id);
                        s && s.beginElement(),
                            n && this._disableMapNavigation(n)
                    }
                }, {
                    key: "_disableMapNavigation",
                    value: function(e) {
                        var t = this;
                        this.disableTimeout && window.clearTimeout(this.disableTimeout),
                            W.map.showOverlay(),
                            this.disableTimeout = window.setTimeout(function() {
                                W.map.hideOverlay(),
                                    t.fadeOut(t.fadeDuration),
                                    t.disableTimeout = 0
                            }, e)
                    }
                }, {
                    key: "fadeIn",
                    value: function(e) {
                        l()(this.layer.div).fadeIn({
                            duration: e,
                            easing: "swing"
                        })
                    }
                }, {
                    key: "fadeOut",
                    value: function(e) {
                        var t = this;
                        l()(this.layer.div).fadeOut({
                                duration: e,
                                easing: "swing"
                            }),
                            this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                                this.removeTimeout = 0),
                            this.removeTimeout = window.setTimeout(function() {
                                t._destroyLayer(),
                                    t.removeTimeout = 0
                            }, e)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e, t) {
                        this.layer.addFeatures(e, t)
                    }
                }, {
                    key: "removeFeatures",
                    value: function(e, t) {
                        this.layer.removeFeatures(e, t)
                    }
                }, {
                    key: "animateHome",
                    value: function(e) {
                        W.map.getPannable().panTo(e, this.homeAnimationZoom);
                        var t = W.map.getResolution(),
                            n = this.homeSpotLightRadius / t,
                            i = 2 * n,
                            r = c.a.extend({}, y, {
                                from: i,
                                to: n
                            }),
                            s = m.fromLonLat(e);
                        this.drawAndFocusSpotlightAtPoint(s, {
                                maskID: "spotlightMask",
                                filter: "url(#spotlightBlur)",
                                pointRadius: n,
                                fillColor: "black",
                                fillOpacity: 1,
                                animation: r
                            }, this.spotLightDuration),
                            this.addHomePin(s)
                    }
                }, {
                    key: "addHomePin",
                    value: function(e) {
                        var t = new OpenLayers.Feature.Vector(e.clone(), {
                            type: "homePin"
                        });
                        return this.addFeatures(t),
                            t
                    }
                }, {
                    key: "_isSpotlightInBounds",
                    value: function(e) {
                        var t = 70 * this.map.getResolution(),
                            n = new OL.Bounds(e.x - t, e.y + t, e.x + t, e.y - t);
                        return this.map.getExtent().containsBounds(n)
                    }
                }, {
                    key: "_destroyLayer",
                    value: function() {
                        null != this.layer && (this.layer.removeAllFeatures(),
                            this.map.removeLayer(this.layer),
                            this.layer.destroy(),
                            this.layer = null)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        return this.disableTimeout && (window.clearTimeout(this.disableTimeout),
                                this.disableTimeout = 0),
                            this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                                this.removeTimeout = 0),
                            this._destroyLayer()
                    }
                }]),
                e
        }();
    t.a = b
}, function(e, t, n) {
    "use strict";
    var i = n(24),
        r = {
            fontFamily: "WazeFont",
            unicodeMap: {
                ".waze-icon-area": 61696,
                ".waze-icon-arrow-down": 61697,
                ".waze-icon-arrow-left": 61698,
                ".waze-icon-arrow-right": 61699,
                ".waze-icon-arrow-up": 61700,
                ".waze-icon-attach": 61701,
                ".waze-icon-bubble": 61702,
                ".waze-icon-c-alert": 61703,
                ".waze-icon-c-arrow-down": 61704,
                ".waze-icon-c-arrow-left": 61705,
                ".waze-icon-c-arrow-right": 61706,
                ".waze-icon-c-arrow-up": 61707,
                ".waze-icon-calendar": 61708,
                ".waze-icon-check": 61709,
                ".waze-icon-clock": 61710,
                ".waze-icon-close": 61711,
                ".waze-icon-closed-issue": 61712,
                ".waze-icon-closure": 61713,
                ".waze-icon-crosshair": 61714,
                ".waze-icon-detach": 61715,
                ".waze-icon-edit": 61716,
                ".waze-icon-envelope": 61717,
                ".waze-icon-event": 61718,
                ".waze-icon-full-arrow-down": 61719,
                ".waze-icon-full-arrow-left": 61720,
                ".waze-icon-full-arrow-right": 61721,
                ".waze-icon-full-arrow-two-sided": 61722,
                ".waze-icon-full-arrow-up": 61723,
                ".waze-icon-hive": 61724,
                ".waze-icon-house": 61725,
                ".waze-icon-km": 61726,
                ".waze-icon-layers": 61727,
                ".waze-icon-map": 61728,
                ".waze-icon-pin": 61729,
                ".waze-icon-place": 61730,
                ".waze-icon-place-car": 61731,
                ".waze-icon-place-culture": 61732,
                ".waze-icon-place-food-drink": 61733,
                ".waze-icon-place-lodging": 61734,
                ".waze-icon-place-natural": 61735,
                ".waze-icon-place-other": 61736,
                ".waze-icon-place-outdoors": 61737,
                ".waze-icon-place-professional": 61738,
                ".waze-icon-place-shopping": 61739,
                ".waze-icon-place-transportation": 61740,
                ".waze-icon-plus": 61741,
                ".waze-icon-plus_neg": 61742,
                ".waze-icon-redo": 61743,
                ".waze-icon-reload": 61744,
                ".waze-icon-road": 61745,
                ".waze-icon-route": 61746,
                ".waze-icon-save": 61747,
                ".waze-icon-star": 61748,
                ".waze-icon-trash": 61749,
                ".waze-icon-undo": 61750,
                ".waze-icon-view": 61751,
                ".waze-icon-visible": 61752
            },
            toUnicode: function(e) {
                var t = this.unicodeMap[".".concat(e)];
                return String.fromCharCode(t)
            }
        },
        s = n(157);
    n.d(t, "a", function() {
        return _
    });
    var o = {
            strokeColor: "#ca9ace",
            fillColor: "#c290c6",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        a = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: "white",
            fillColor: "#c290c6",
            graphicZIndex: 0,
            fillOpacity: 1
        },
        l = {
            CAR_SERVICES: r.toUnicode("waze-icon-place-car"),
            CULTURE_AND_ENTERTAINEMENT: r.toUnicode("waze-icon-place-culture"),
            FOOD_AND_DRINK: r.toUnicode("waze-icon-place-food-drink"),
            LODGING: r.toUnicode("waze-icon-place-lodging"),
            NATURAL_FEATURES: r.toUnicode("waze-icon-place-natural"),
            OTHER: r.toUnicode("waze-icon-place-other"),
            OUTDOORS: r.toUnicode("waze-icon-place-outdoors"),
            PROFESSIONAL_AND_PUBLIC: r.toUnicode("waze-icon-place-professional"),
            SHOPPING_AND_SERVICES: r.toUnicode("waze-icon-place-shopping"),
            TRANSPORTATION: r.toUnicode("waze-icon-place-transportation")
        },
        u = function(e) {
            var t = Object(i.a)({
                Point: a,
                Polygon: o
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    },
                    getCategoryIcon: function(e) {
                        var t;
                        return e.model && (t = e.model.getMainCategory()),
                            l[t] || ""
                    }
                }
            })
        },
        c = Object(i.a)({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                pointRadius: 28,
                strokeOpacity: 1,
                fillOpacity: .3,
                cursor: "move"
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        d = Object(i.a)({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        h = Object(i.b)("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        p = Object(i.b)("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        g = Object(i.b)("isApproved", !1, {
            Point: {
                pointRadius: 6,
                fillColor: "#c290c6",
                strokeWidth: 3,
                strokeColor: "#00ece3"
            },
            Polygon: {
                fillColor: "#ca9ace",
                strokeColor: "#00ece3",
                strokeDashstyle: "dash"
            }
        }),
        f = Object(i.b)("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0,
            cursor: "move"
        }),
        m = Object(i.b)("isResidential", !0, {
            graphicName: "triangle"
        }),
        v = {
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fillOpacity: .5,
                pointRadius: 28,
                strokeWidth: 3
            },
            Polygon: {
                fillOpacity: .5,
                strokeColor: "#00ece3",
                fillColor: "#00ece3",
                strokeWidth: 3
            }
        },
        _ = new OL.StyleMap({
            default: new OL.Style(null, {
                rules: [Object(i.a)(v)]
            })
        });
    t.b = new OL.StyleMap({
        default: u([f, s.b, h, g, m]),
        highlight: u([Object(i.a)({
            Point: {
                fontFamily: r.fontFamily,
                label: "${getCategoryIcon}",
                labelOutlineWidth: 0,
                fontColor: "white",
                fontSize: 16,
                pointRadius: 12,
                fillColor: "#ca9ace",
                fillOpacity: 1,
                strokeOpacity: 1
            },
            Polygon: {
                strokeColor: "#ca9ace",
                fillColor: "#ca9ace"
            }
        }), f, s.a, p, m]),
        select: u([c]),
        highlightselected: u([c]),
        delete: u([d]),
        highlightdeleted: u([d])
    })
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = n(23),
        l = s(n(187)),
        u = s(n(385)),
        c = new OpenLayers.Projection("EPSG:4326"),
        d = -100,
        h = -1,
        p = function(e) {
            function t(t, n) {
                var i = e.call(this) || this;
                return i.projection = null,
                    i.active = !1,
                    i.storePersistentSeparately = !1,
                    Object.assign(i, n),
                    i.objects = {},
                    i.persistentObjects = {},
                    i.objectType = t,
                    i.idGenerator = new u.default(d, h),
                    null === i.projection && (i.projection = c),
                    i.active = "boolean" != typeof n.active || n.active,
                    i
            }
            return r(t, e),
                t.prototype.getObjectType = function() {
                    return this.objectType
                },
                t.prototype.getRepositoryName = function() {
                    return this.name
                },
                t.prototype.isActive = function() {
                    return this.active
                },
                t.prototype.setActive = function(e) {
                    this.active = e,
                        this.trigger("change:active", {
                            active: e
                        })
                },
                t.prototype.getObjectById = function(e) {
                    var t = String(e),
                        n = this.objects[t];
                    return void 0 !== n && null !== n || (n = this.persistentObjects[t]),
                        void 0 !== n && null !== n ? n : null
                },
                t.prototype.put = function(e) {
                    for (var t, n = [], i = [], r = 0, s = (t = e instanceof Array ? e : [e]).length; r < s; r++) {
                        var o = t[r],
                            l = o.getID();
                        if (null !== l) {
                            var u = void 0;
                            u = this.storePersistentSeparately && o.isPersistent() ? this.persistentObjects : this.objects,
                                o.type = this.objectType,
                                o.model = this.model,
                                u[l] ? n.push(o) : i.push(o),
                                u[l] = o
                        }
                    }
                    n.length > 0 && this.trigger(a.ATTR_CHANGED, n),
                        i.length > 0 && this.trigger(a.ADDED, i),
                        (i.length > 0 || n.length > 0) && this.trigger(a.UPDATED)
                },
                t.prototype.changed = function(e) {
                    var t = e;
                    e instanceof Array || (t = [e]),
                        this.trigger(a.ATTR_CHANGED, t),
                        this.trigger(a.UPDATED)
                },
                t.prototype._triggerChangedID = function(e, t) {
                    var n = {
                        oldID: e,
                        newID: t
                    };
                    this.trigger(a.CHANGED_ID, n)
                },
                t.prototype.synced = function(e) {
                    var t;
                    t = e instanceof Array ? e : [e],
                        this.trigger(a.SYNCED, t)
                },
                t.prototype.remove = function(e) {
                    for (var t, n = [], i = 0, r = (t = e instanceof Array ? e : [e]).length; i < r; i++) {
                        var s = t[i],
                            o = s.getID();
                        o && this.objects[o] && (delete this.objects[o],
                            n.push(s))
                    }
                    n.length > 0 && (this.trigger(a.REMOVED, n),
                        this.trigger(a.UPDATED))
                },
                t.prototype.stateDeleted = function(e) {
                    var t = e;
                    Array.isArray(e) || (t = [e]),
                        this.trigger(a.STATE_DELETED, t),
                        this.trigger(a.UPDATED)
                },
                t.prototype.mergeObjectAttributes = function(e, t) {
                    e.merge(t),
                        e.state = null,
                        this.changed(e),
                        this.synced(e)
                },
                t.prototype.changeObjectID = function(e, t) {
                    var n = e.getID();
                    e.changeID(t),
                        null !== n && delete this.objects[n],
                        null !== t && (this.objects[t] = e),
                        this._triggerChangedID(n, t),
                        e.state = null,
                        this.changed(e),
                        this.synced(e)
                },
                t.prototype.generateUniqueID = function() {
                    return this.idGenerator.next()
                },
                t.prototype.getObjectArray = function(e) {
                    return "function" == typeof e ? Object.values(this.objects).filter(e) : Object.values(this.objects)
                },
                t.prototype.clear = function(e) {
                    var t = this;
                    void 0 === e && (e = {});
                    var n = [],
                        i = o.default.extend({
                            keepPersistent: !0
                        }, e),
                        r = Object.keys(this.objects),
                        s = i.objectsToKeep;
                    s && (r = r.filter(function(e) {
                            return !s[e]
                        })),
                        r.forEach(function(e) {
                            var r = t.objects[e];
                            r && (r.isInUse(i) ? r.state !== OpenLayers.State.INSERT && (r.outOfScope = !0) : (n.push(r),
                                delete t.objects[e]))
                        }),
                        i && i.silent || n.length > 0 && (this.trigger(a.REMOVED, n),
                            this.trigger(a.UPDATED))
                },
                t.prototype.mergeObjects = function(e) {
                    for (var t = e && e.objects ? e.objects : [], n = [], i = 0, r = t.length; i < r; ++i) {
                        var s = t[i].getID();
                        s && (this.objects[s] ? delete this.objects[s].outOfScope : (this.objects[s] = t[i],
                            n.push(t[i]),
                            t[i].type = this.objectType,
                            t[i].model = this.model))
                    }
                    n.length > 0 && this.trigger(a.ADDED, n),
                        n.length > 0 && this.trigger(a.UPDATED)
                },
                t.prototype.getModifiedObjects = function() {
                    var e, t = ((e = {})[OpenLayers.State.INSERT] = [],
                        e[OpenLayers.State.UPDATE] = [],
                        e[OpenLayers.State.DELETE] = [],
                        e[OpenLayers.State.UNKNOWN] = [],
                        e);
                    return Object.values(this.objects).filter(function(e) {
                            return null != e.state
                        }).reduce(function(e, t) {
                            return e[t.state].push(t),
                                e
                        }, t),
                        t
                },
                t.prototype.hasModifiedObjects = function() {
                    for (var e in this.objects)
                        if (this.objects[e].state)
                            return !0;
                    return !1
                },
                t.prototype.getByIds = function(e) {
                    var t, n = this,
                        i = [];
                    return e.forEach(function(e) {
                            (t = n.getObjectById(e)) && i.push(t)
                        }, this),
                        i
                },
                t
        }(l.default);
    t.default = p
}, function(e, t, n) {
    "use strict";
    var i = n(7),
        r = n.n(i).a.Model.extend({
            defaults: {
                selected: !1
            }
        });
    t.a = r
}, function(e, t, n) {
    "use strict";
    n.d(t, "b", function() {
            return a
        }),
        n.d(t, "a", function() {
            return l
        });
    var i = n(24),
        r = n(0),
        s = n.n(r),
        o = {
            stroke: !1,
            pointRadius: 12,
            fillColor: "white",
            fillOpacity: .6,
            graphicZIndex: 0,
            fontSize: 16,
            labelYOffset: 0,
            fontColor: "#3d3d3d",
            labelOutlineWidth: 0,
            fontFamily: "FontAwesome",
            label: ""
        },
        a = Object(i.b)("dragPoint", !0, o),
        l = Object(i.b)("dragPoint", !0, s.a.defaults({
            fillColor: "#25d7fd",
            fillOpacity: .3
        }, o))
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(88),
        r = n(53),
        s = n(87),
        o = n(109),
        a = n(45),
        l = function() {
            function e(e, t) {
                this.selection = t,
                    this.dataModel = e,
                    this.segmentReducer = new a.SegmentReducer(this.selection.getSelectedSegments(), new o.SegmentDirectionalReader(this.selection))
            }
            return e.prototype.canEditRestrictions = function() {
                    var e = new r.SegmentsBigJunctionUseCase(this.dataModel, this.selection.getSelectedSegments()),
                        t = new s.SegmentsRoadTypeUseCase(this.selection.getSelectedSegments());
                    return W.Config.restrictions.allowEditing && this.allPropertiesEditable() && !e.isInBigJunction() && t.isDrivable()
                },
                e.prototype.supportsRestrictions = function() {
                    return W.Config.restrictions.allowEditing
                },
                e.prototype.getRestrictionCounts = function() {
                    return {
                        driving: this.segmentReducer.reduceRestrictions().length,
                        pickup: this.segmentReducer.reducePickupRestrictions().length
                    }
                },
                e.prototype.supportsPickupRestrictions = function() {
                    var e = this;
                    return this.selection.getSelectedSegments().every(function(t) {
                        return e.segmentSupportsPickupRestrictions(t)
                    })
                },
                e.prototype.isTollRoad = function() {
                    return this.segmentReducer.reduceIsTollRoad()
                },
                e.prototype.isTollRoadMixed = function() {
                    return this.segmentReducer.reduceIsTollRoad() === a.MixedValue
                },
                e.prototype.segmentSupportsPickupRestrictions = function(e) {
                    var t = e.getAddress();
                    if (!t)
                        return !1;
                    var n = t.getCountry();
                    return !!n && n.allowPickupRestrictions
                },
                e.prototype.allPropertiesEditable = function() {
                    return new i.SegmentsBaseAttributesUseCase(this.selection.getSelectedSegments()).arePropertiesEditable()
                },
                e
        }();
    t.SegmentsRestrictionsUseCase = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(120)),
        s = i(n(26)),
        o = {
            MULTIPLE_SEGMENTS: 1,
            SEGMENT_HAS_HOUSE_NUMBERS: 2,
            MULTIPLE_SEGMENTS_HAVE_HOUSE_NUMBERS: 3,
            DELETE_NODE: 4
        };
    t.DELETION_CONFIRMATION_REASON = o;
    var a = function() {
        function e() {}
        return e.prototype._areAllSegments = function(e) {
                return e.every(function(e) {
                    return e instanceof s.default
                })
            },
            e.prototype._segmentsHaveHouseNumbers = function(e) {
                return e.some(function(e) {
                    return e.attributes.hasHNs
                })
            },
            e.prototype._houseNumbersPrompt = function(e) {
                if (this._areAllSegments(e)) {
                    var t = e,
                        n = this._segmentsHaveHouseNumbers(t);
                    if (t.length > 1)
                        return n ? o.MULTIPLE_SEGMENTS_HAVE_HOUSE_NUMBERS : o.MULTIPLE_SEGMENTS;
                    if (n)
                        return o.SEGMENT_HAS_HOUSE_NUMBERS
                }
                return null
            },
            e.prototype._nodePrompt = function(e) {
                if (1 === e.length && e[0] instanceof r.default)
                    return o.DELETE_NODE;
                return null
            },
            e.prototype._getPrompt = function(e) {
                var t = this._houseNumbersPrompt(e);
                if (null != t)
                    return t;
                var n = this._nodePrompt(e);
                return null != n ? n : null
            },
            e.prototype.shouldShowPrompt = function(e) {
                return null != this._getPrompt(e)
            },
            e.prototype.deletionConfirmationPrompt = function(e) {
                return this._getPrompt(e)
            },
            e
    }();
    t.default = a
}, , , function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = r(n(21));

    function a(e, t) {
        return function(e) {
            return e === OpenLayers.Geometry
        }(t) ? function(e) {
            return o.parse(e)
        }(e) : function(e, t) {
            return s.default.isObject(e) ? new t(e, {
                parse: !0
            }) : new t({
                id: e
            })
        }(e, t)
    }
    t.parseJsonObject = function(e, t) {
        return void 0 === t && (t = null),
            t ? (Object.keys(t).forEach(function(n) {
                    var i = t[n],
                        r = e[n];
                    r && (Array.isArray(r) ? e[n] = r.map(function(e) {
                        return a(e, i)
                    }) : e[n] = a(r, i))
                }),
                e) : e
    }
}, , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.PLACE_UPDATE_MIN_EDIT_RANK = 1,
        t.PLACE_UPDATE_SUBJECT = {
            VENUE: "VENUE",
            IMAGE: "IMAGE"
        },
        t.PLACE_UPDATE_ACTION = {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        t.PLACE_UPDATE_SEVERITY = {
            LOW: "low",
            MEDIUM: "medium",
            HIGH: "high"
        },
        t.PLACE_UPDATE_SEVERITY_THRESHOLD = {
            LOW: 3,
            MEDIUM: 7
        },
        t.FLAG_TYPE = {
            CLOSED: "CLOSED",
            MOVED: "MOVED",
            RESIDENTIAL: "RESIDENTIAL",
            DUPLICATE: "DUPLICATE",
            INAPPROPRIATE: "INAPPROPRIATE",
            WRONG_DETAILS: "WRONG_DETAILS",
            LOW_QUALITY: "LOW_QUALITY",
            UNRELATED: "UNRELATED",
            OTHER: "OTHER"
        },
        t.PLACE_UPDATE_TYPE = {
            VENUE: "VENUE",
            REQUEST: "REQUEST",
            IMAGE: "IMAGE"
        },
        t.PLACE_UPDATE_SUB_TYPE = {
            UPDATE: "UPDATE",
            DELETE: "DELETE",
            FLAG: "FLAG"
        },
        t.PLACE_UPDATE_SOURCE = {
            MOBILE_CLIENT: "MOBILE_CLIENT",
            WEB: "WEB",
            OTHER_ENV: "OTHER_ENV"
        }
}, function(e, t, n) {
    "use strict";
    var i;
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(56),
        s = n(191);
    t.containsBounds = s.containsBounds;
    var o = ((i = {
            venueBounds: null,
            venueLevel: null,
            roadTypeBoundsMap: new Map,
            repositoryBoundsMap: new Map
        })[r.RepositoryFilterName.PROBLEMS] = "",
        i[r.RepositoryFilterName.MAP_UPDATE_REQUESTS] = "",
        i[r.RepositoryFilterName.VENUES] = "",
        i);

    function a() {
        o.venueBounds = null,
            o.venueLevel = null
    }

    function l() {
        o.roadTypeBoundsMap.clear()
    }

    function u(e, t) {
        o[e] = t
    }
    t.getVenueLevel = function() {
            return o.venueLevel
        },
        t.setVenueBoundsAndLevel = function(e, t) {
            o.venueLevel = t,
                o.venueBounds = e
        },
        t.clearVenuesState = a,
        t.areVenuesInBounds = function(e) {
            return null != o.venueBounds && s.containsBounds(o.venueBounds, e)
        },
        t.isRepositoryContained = function(e, t) {
            var n = o.repositoryBoundsMap.get(e);
            return null != n && s.containsBounds(n, t)
        },
        t.isRoadTypeContained = function(e, t) {
            var n = o.roadTypeBoundsMap.get(e);
            return null != n && s.containsBounds(n, t)
        },
        t.clearRoadTypeBounds = l,
        t.setRoadBounds = function(e, t) {
            l(),
                e.forEach(function(e) {
                    ! function(e, t) {
                        o.roadTypeBoundsMap.set(e, t)
                    }(e, t)
                })
        },
        t.setRepositoryBounds = function(e, t) {
            o.repositoryBoundsMap.set(e, s.cloneBounds(t))
        },
        t.getRepositoryBounds = function(e) {
            return o.repositoryBoundsMap.get(e)
        },
        t.setLastFilters = function(e) {
            Object.values(r.RepositoryFilterName).forEach(function(t) {
                var n = e[t];
                void 0 !== n && u(t, n)
            })
        },
        t.clearLastFilter = function(e) {
            u(e, "")
        },
        t.getLastFilter = function(e) {
            return o[e]
        },
        t.onRepositoryCleared = function(e) {
            e === r.RepositoryName.SEGMENTS ? l() : e === r.RepositoryName.VENUES ? a() : function(e) {
                o.repositoryBoundsMap.delete(e)
            }(e)
        }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(29)),
        u = n(61),
        c = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.serialize = function() {
                    var t = e.prototype.serialize.call(this);
                    return t.attributes.segID = this.object.getSegmentId(),
                        t
                },
                t.prototype.getAffectedUniqueIds = function() {
                    var e = this.model.segments.getObjectById(this.object.getSegmentId());
                    if (!e)
                        throw new Error("missing segment: " + this.object.getSegmentId());
                    var t = new u.SegmentStreetsUseCase(this.model, e).getEntireStreet(e).map(function(e) {
                        return e.getUniqueID()
                    });
                    return o(t, [this.object.getUniqueID()])
                },
                t.prototype.getFocusFeatures = function() {
                    var e = this.model.segments.getObjectById(this.object.getSegmentId());
                    return e ? [e] : []
                },
                t.prototype.generateDescription = function() {
                    var e = this.model.segments.getObjectById(this.object.getSegmentId());
                    if (!e)
                        throw new Error("missing segment: " + this.object.getSegmentId());
                    var t = e.getAddress().getStreetName({
                        emptyString: ""
                    });
                    this._description = I18n.t("save.changes_log.actions.UpdateHouseNumber", {
                        houseNumber: this.object.getNumber(),
                        streetName: t
                    })
                },
                t
        }(l.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(33)),
        s = "editorLocation";

    function o() {
        var e = r.localStorage.get(s);
        return null == e ? {
            code: null,
            locale: null
        } : e
    }

    function a(e, t) {
        r.localStorage.set(s, {
            code: e,
            locale: t
        })
    }

    function l() {
        return o().code
    }
    t.getRegionAndLocaleCodes = o,
        t.setRegionAndLocaleCodes = a,
        t.getRegionCode = l,
        t.setLocaleCode = function(e) {
            a(l(), e)
        },
        t.setRegionCode = function(e) {
            a(e, o().locale)
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(81)),
        s = function() {
            function e(e, t, n) {
                this.fromVertex = e,
                    this.toVertex = t,
                    this.turnData = n
            }
            return e.prototype.getFromVertex = function() {
                    return this.fromVertex
                },
                e.prototype.getToVertex = function() {
                    return this.toVertex
                },
                e.prototype.getTurnData = function() {
                    return this.turnData
                },
                e.prototype.withTurnData = function(t) {
                    return new e(this.fromVertex, this.toVertex, t)
                },
                e.prototype.withUnknownTurnData = function() {
                    return new e(this.fromVertex, this.toVertex, r.default.createUnknown())
                },
                e.prototype.withFromVertex = function(t) {
                    return new e(t, this.toVertex, this.turnData)
                },
                e.prototype.withToVertex = function(t) {
                    return new e(this.fromVertex, t, this.turnData)
                },
                e.prototype.isUturn = function() {
                    return this.fromVertex.getSegmentID() === this.toVertex.getSegmentID() && !this.turnData.hasSegmentPath()
                },
                e.prototype.toString = function() {
                    return "" + this.fromVertex + this.toVertex + this.turnData
                },
                e.prototype.verticesEqual = function(e) {
                    return this.getFromVertex().equals(e.getFromVertex()) && this.getToVertex().equals(e.getToVertex())
                },
                e
        }();
    t.default = s
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = n(35),
        o = function() {
            function e(e) {
                void 0 === e && (e = {}),
                    this._defaultType = e.defaultType,
                    this._direction = e.direction,
                    Object.freeze(this)
            }
            return e.prototype.isForward = function() {
                    return this._direction === s.RESTRICTION_SEGMENT_DIRECTION.FWD
                },
                e.prototype.isReverse = function() {
                    return this._direction === s.RESTRICTION_SEGMENT_DIRECTION.REV
                },
                e.prototype.isAllowed = function() {
                    return this._defaultType && "boolean" == typeof this._defaultType.allowed && this._defaultType.allowed
                },
                e.prototype.isNotAllowed = function() {
                    return this._defaultType && "boolean" == typeof this._defaultType.allowed && !this._defaultType.allowed
                },
                e.prototype.equals = function(e) {
                    return r.default.isEqual(e._defaultType, this._defaultType) && this._direction === e._direction
                },
                e.prototype.__clone = function() {
                    return this.toJSON()
                },
                e.prototype.toJSON = function() {
                    return {
                        defaultType: this._defaultType,
                        direction: this._direction
                    }
                },
                e.prototype.withReverseDirection = function() {
                    return new e({
                        defaultType: r.default.clone(this._defaultType),
                        direction: this.isForward() ? s.RESTRICTION_SEGMENT_DIRECTION.REV : s.RESTRICTION_SEGMENT_DIRECTION.FWD
                    })
                },
                e
        }();
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.getSegmentsIds = function() {
                return this.attributes.segIDs.concat()
            },
            t
    }(s(n(51)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.defaults = function() {
                return {
                    uuid: null,
                    name: null,
                    url: null,
                    location: null
                }
            },
            t.prototype.initialize = function() {
                if (null === this.get("uuid"))
                    return this.set({
                        uuid: this.id
                    })
            },
            t.prototype.toJSON = function() {
                return this.get("uuid")
            },
            t
    }(s(n(7)).default.Model);
    t.default = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        segments: 2,
        nodes: 2,
        closures: 0,
        cameras: 3,
        userAreas: 0,
        segmentHouseNumbers: 7
    };
    t.getMinDisplayZoom = function(e) {
        return i[e] || 0
    }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = s(n(121));
    t.IN_USE_REASONS_FLAGS = {
        SELECT: 1,
        HOUSE_NUMBERS: 2,
        MARKER_POPOVER_LAYER: 4
    };
    var l = function() {
        function e() {
            this._useMap = new Map
        }
        return e.prototype.onObjectChangedId = function(e) {
                var t = e.oldID,
                    n = e.newID,
                    i = this._useMap.get(t);
                i && (this._useMap.set(n, i),
                    this._useMap.delete(t))
            },
            e.prototype._toggleInUse = function(e, t, n) {
                if (null !== e) {
                    var i = this._useMap.get(e) || 0,
                        r = new a.default(i);
                    n ? r.add(t) : r.remove(t),
                        r.value > 0 ? this._useMap.set(e, r.value) : this._useMap.delete(e)
                }
            },
            e.prototype.setInUse = function(e, t) {
                this._toggleInUse(e.getID(), t, !0)
            },
            e.prototype.clearInUse = function(e, t) {
                this._toggleInUse(e.getID(), t, !1)
            },
            e.prototype.isInUse = function(e) {
                var t = e.getID();
                return null !== t && Boolean(this._useMap.get(t))
            },
            e.prototype.getObjectsInUseById = function() {
                return o.default.fromPairs(r(this._useMap.entries()))
            },
            e
    }();
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(27)),
        u = a(n(44)),
        c = function(e) {
            function t(t, n, i) {
                void 0 === i && (i = {});
                var r = e.call(this, i) || this,
                    s = i.forSegment,
                    o = void 0 === s ? null : s;
                return r.node = t,
                    r.navigable = n,
                    r.forSegment = o,
                    r
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e, t = !1,
                        n = this.node.allConnectionKeys(!0);
                    e = this.navigable ? n.legal : n.all;
                    for (var i = 0; i < e.length; i++) {
                        var r = e[i],
                            s = r.from === r.to;
                        if (r.from.areTurnsLocked(this.node) || this.doSubAction(r.from.createLockTurnsAction(this.node)),
                            !this.navigable || !s) {
                            var o = this.forSegment;
                            if (o && o !== r.from && o !== r.to)
                                continue;
                            var a = this.model.getTurnGraph().getTurnThroughNode(this.node, r.from, r.to),
                                l = a.getTurnData().isUnknown(),
                                c = a.getTurnData().withToggledState(this.navigable);
                            if (a = a.withTurnData(c),
                                l && !a.getTurnData().isAllowed())
                                continue;
                            var d = new u.default(this.model.getTurnGraph(), a);
                            !1 !== this.doSubAction(d) && (t = !0)
                        }
                    }
                    return t
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.node]
                },
                t.prototype.generateDescription = function() {
                    this.navigable ? this._description = I18n.t("save.changes_log.actions.ModifyAllConnections.allow") : this._description = I18n.t("save.changes_log.actions.ModifyAllConnections.disallow")
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this.node.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t
        }(l.default);
    t.default = c
}, , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = n(39),
        a = s(n(41)),
        l = s(n(27)),
        u = s(n(65)),
        c = function(e) {
            function t(t, n) {
                var i = e.call(this, n) || this;
                return i.houseNumber = t,
                    i
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    return this.doSubAction(new u.default(this.houseNumber, this.model.segmentHouseNumbers, {}, {
                            dontSerialize: !0
                        })),
                        !0
                },
                t.prototype.serialize = function() {
                    var e = {
                        number: this.houseNumber.getNumber(),
                        id: this.houseNumber.getID(),
                        segID: this.houseNumber.getSegmentId(),
                        geometry: this.houseNumber.getGeometry(),
                        fractionPoint: this.houseNumber.getFractionPoint(),
                        forced: this.houseNumber.isForced()
                    };
                    return {
                        _objectType: this.houseNumber.type,
                        action: a.default.TYPE.ADD,
                        attributes: e
                    }
                },
                t.prototype.getAffectedUniqueIds = function() {
                    var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId());
                    return null != e ? [e.getUniqueID(), this.houseNumber.getUniqueID()] : []
                },
                t.prototype.getFocusFeatures = function() {
                    var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId());
                    return null != e ? [e] : []
                },
                t.prototype.generateDescription = function() {
                    this._description = o.formatHouseNumberActionDescription(this.model, this.houseNumber.getSegmentId(), this.houseNumber.getNumber(), "AddHouseNumber")
                },
                t
        }(l.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(102),
        g = n.n(p),
        f = n(41),
        m = n.n(f),
        v = n(39),
        _ = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "serialize",
                    value: function() {
                        var e = {
                            id: this.object.getID(),
                            segID: this.object.getSegmentId()
                        };
                        return {
                            _objectType: this.object.type,
                            action: m.a.TYPE.DELETE,
                            attributes: e
                        }
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.model.segments.getObjectById(this.object.getSegmentId()).getUniqueID(), this.object.getUniqueID()]
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.model.segments.getObjectById(this.object.getSegmentId())]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = Object(v.formatHouseNumberActionDescription)(this.model, this.object.getSegmentId(), this.object.getNumber(), "DeleteHouseNumber")
                    }
                }]),
                t
        }(g.a);
    t.default = _
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(31),
        s = n(32),
        o = i(n(0)),
        a = function() {
            function e() {}
            return e.prototype._getCountry = function(e) {
                    var t = e.getAddress();
                    if (!t)
                        return null;
                    var n = t.getCountry();
                    return n || null
                },
                e.prototype.supportsLicensePlateRestrictions = function(e) {
                    var t = this._getCountry(e);
                    return null != t && t.allowLicensePlatesRestrictions && r.isFeatureFlagEnabled(r.FEATURE_FLAGS.LICENSE_PLATES_RESTRICTIONS)
                },
                e.prototype.supportsDaysOfMonthParity = function(e) {
                    var t = this._getCountry(e);
                    return null != t && t.allowLicensePlatesRestrictions && r.isFeatureFlagEnabled(r.FEATURE_FLAGS.LICENSE_PLATES_RESTRICTIONS)
                },
                e.prototype.segmentsSupportLicensePlateRestrictions = function(e) {
                    var t = this;
                    return e.every(function(e) {
                        return t.supportsLicensePlateRestrictions(e)
                    })
                },
                e.prototype.segmentsSupportDaysOfMonthParity = function(e) {
                    var t = this;
                    return e.every(function(e) {
                        return t.supportsDaysOfMonthParity(e)
                    })
                },
                e.prototype.getSupportedSubscriptions = function(e) {
                    var t = this._getCountry(e);
                    return null != t ? t.restrictionSubscriptions : {}
                },
                e.getDrivingAreaSubscriptions = function(e) {
                    var t = e.getRestrictions(),
                        n = o.default.flatten(t.map(function(e) {
                            return e.getDriveProfileList(s.RESTRICTION_TYPE.FREE).getDriveProfiles()
                        })),
                        i = o.default.flatten(n.map(function(e) {
                            return e.getSubscriptions()
                        }));
                    return o.default.uniq(i)
                },
                e.canEditDrivingAreaRestriction = function(e) {
                    return W.Config.restrictions.allowEditing && e.arePropertiesEditable()
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "RestrictionItemView", function() {
            return k
        });
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(7),
        g = n.n(p),
        f = n(4),
        m = n.n(f),
        v = n(0),
        _ = n.n(v),
        y = n(133),
        b = n(90),
        E = n(35),
        w = n.n(E),
        S = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "getRestriction",
                    value: function() {
                        return this._restriction
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var n = new t({
                            isDifficult: e.isDifficult(),
                            isAllowed: e.isAllowedModality(),
                            isBlocked: e.isBlockedModality(),
                            isTollFree: e.isTollFreeModality(),
                            isExpired: e.isExpired()
                        });
                        return n._restriction = e,
                            n
                    }
                }]),
                t
        }(g.a.Model),
        k = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "tagName",
                    value: function() {
                        return "tr"
                    }
                }, {
                    key: "className",
                    value: function() {
                        var e = ["restriction-list-item"];
                        return this.model.attributes.isDifficult && e.push("restriction-list-item-difficult"),
                            this.model.attributes.isAllowed && e.push("restriction-list-item-allowed"),
                            this.model.attributes.isBlocked && e.push("restriction-list-item-blocked"),
                            e.join(" ")
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click ": "item:edit",
                            "click .do-edit": "item:edit",
                            "click .do-delete": "item:delete",
                            "click .do-applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {},
                            supportsLicensePlateNumber: !1
                        };
                        this._subscriptions = e.subscriptions,
                            this._supportsLicensePlateNumber = e.supportsLicensePlateNumber
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$(".badge-tooltip, .apply-to-all-tooltip").tooltip()
                    }
                }, {
                    key: "_formatWeekdays",
                    value: function() {
                        return new b.a({
                            timeFrame: this.getTimeFrame()
                        }).formatWeekdays()
                    }
                }, {
                    key: "_formatTime",
                    value: function() {
                        return new b.a({
                            timeFrame: this.getTimeFrame()
                        }).formatHours()
                    }
                }, {
                    key: "_formatSummary",
                    value: function() {
                        var e = this.getRestriction();
                        return y.RestrictionViewHelpers.formatSummary(e, this._supportsLicensePlateNumber, this._subscriptions)
                    }
                }, {
                    key: "_formatLane",
                    value: function() {
                        var e = this.getRestriction();
                        if (e instanceof w.a) {
                            var t = e.getDisposition(),
                                n = _.a.invert(E.RESTRICTION_SEGMENT_DISPOSITION)[t];
                            return I18n.t("restrictions.summary.disposition.".concat(n))
                        }
                        return ""
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.options.canEditRestrictions && this.getRestriction().isEditable(),
                            t = e && this.options.canApplyToAll;
                        return {
                            laneStr: this._formatLane(),
                            daysStr: this._formatWeekdays(),
                            timeStr: this._formatTime(),
                            summaryStr: this._formatSummary(),
                            canModifyRestriction: e,
                            canApplyToAll: t
                        }
                    }
                }, {
                    key: "getRestriction",
                    value: function() {
                        return this.model.getRestriction()
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this.model.getRestriction().getTimeFrame()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function() {
                        return this.model.getRestriction().getDriveProfileList()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_list_item"
                    }
                }]),
                t
        }(m.a.View),
        T = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "tagName",
                    value: function() {
                        return "tbody"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return k
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "item:edit": "item:edit",
                            "item:delete": "item:delete",
                            "item:applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            canApplyToAll: this._canApplyToAll,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._subscriptions,
                            supportsLicensePlateNumber: this._supportsLicensePlateNumber
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restrictions: [],
                            canApplyToAll: !1,
                            canEditRestrictions: !1,
                            subscriptions: {},
                            supportsLicensePlateNumber: !1
                        };
                        this._canEditRestrictions = e.canEditRestrictions,
                            this._canApplyToAll = e.canApplyToAll,
                            this._subscriptions = e.subscriptions,
                            this._supportsLicensePlateNumber = e.supportsLicensePlateNumber,
                            this.collection = new g.a.Collection(e.restrictions.map(function(e) {
                                return S.for(e)
                            }))
                    }
                }]),
                t
        }(m.a.CollectionView);
    t.default = T
}, function(e, t, n) {
    "use strict";
    var i = n(13),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(15),
        h = n.n(d),
        p = n(201),
        g = n(31),
        f = n(145),
        m = function(e) {
            return e.model.type === h.a.SEGMENT
        },
        v = function() {
            function e(t, n, i) {
                var r = this;
                o()(this, e),
                    this.model = t,
                    this.events = new OpenLayers.Events(this),
                    this._selectedFeatures = [],
                    this._requireDeselect = W.prefs.get("requireFeatureDeselect"),
                    this._layers = n,
                    this._objectTypeToLayer = {},
                    this._deselectOnToggle = !0,
                    this._mouseInFeature = null,
                    this._layers.forEach(function(e) {
                        return r._objectTypeToLayer[e.featureType] = e
                    }),
                    this._enabled = !0,
                    this.selectionMediator = i,
                    this._bindEvents()
            }
            return l()(e, [{
                    key: "_bindEvents",
                    value: function() {
                        var e = this;
                        this._layers.forEach(function(t) {
                                t.events.on({
                                    visibilitychanged: e._layerVisibilityChanged,
                                    scope: e
                                })
                            }),
                            W.prefs.on("change:requireFeatureDeselect", function(e, t) {
                                this._requireDeselect = t
                            }, this),
                            this._bindSelectionMediatorEvents()
                    }
                }, {
                    key: "_bindSelectionMediatorEvents",
                    value: function() {
                        this._toggleMediatorEvents(!0)
                    }
                }, {
                    key: "_unbindSelectionMediatorEvents",
                    value: function() {
                        this._toggleMediatorEvents(!1)
                    }
                }, {
                    key: "_toggleMediatorEvents",
                    value: function(e) {
                        var t = e ? "on" : "off";
                        this.selectionMediator[t]("map:selection:pathSelect", this._onSelectPath, this),
                            this.selectionMediator[t]("map:selection:featureClick", this._onFeatureClicked, this),
                            this.selectionMediator[t]("map:selection:featureIn", this._onFeatureIn, this),
                            this.selectionMediator[t]("map:selection:featureOut", this._onFeatureOut, this),
                            this.selectionMediator[t]("map:selection:clickOut", this._onClickOut, this),
                            this.selectionMediator[t]("map:selection:featureBoxSelection", this._onFeatureBoxSelection, this),
                            this.selectionMediator[t]("map:selection:deselectKey", this._onDeselectKey, this)
                    }
                }, {
                    key: "_onDeselectKey",
                    value: function() {
                        this.unselectAll()
                    }
                }, {
                    key: "_onFeatureClicked",
                    value: function(e) {
                        var t = e.feature;
                        if (t.model && !t.model.isDeleted() && t) {
                            if (this.isSelected(t) && this._deselectOnToggle)
                                return void(e.addSelection && this._selectedFeatures.length > 1 ? this.unselectFeatures(t, !1) : this.unselectAll());
                            if (!e.addSelection || !this._canAddSelection(t)) {
                                if (this._requireDeselect && this._selectedFeatures.length > 0)
                                    return;
                                this.unselectAll(!1)
                            }
                            this.selectFeatures(t, !1)
                        }
                    }
                }, {
                    key: "_onFeatureIn",
                    value: function(e) {
                        this._mouseInFeature = e,
                            this.highlight(e)
                    }
                }, {
                    key: "_onFeatureOut",
                    value: function(e) {
                        this._mouseInFeature = null,
                            this.unhighlight(e)
                    }
                }, {
                    key: "highlight",
                    value: function(e) {
                        this._isFeatureHighlightable(e) && this.selectionMediator.highlight(e, this.isSelected(e), e.model.isDeleted())
                    }
                }, {
                    key: "unhighlight",
                    value: function(e) {
                        this._isFeatureHighlightable(e) && this.selectionMediator.unhighlight(e, this.isSelected(e), e.model.isDeleted())
                    }
                }, {
                    key: "_isFeatureHighlightable",
                    value: function(e) {
                        return Boolean(e.model)
                    }
                }, {
                    key: "recalculateStyle",
                    value: function(e) {
                        e === this._mouseInFeature ? this.highlight(e) : this.unhighlight(e)
                    }
                }, {
                    key: "_onClickOut",
                    value: function() {
                        this.unselectAll(!1)
                    }
                }, {
                    key: "_onFeatureBoxSelection",
                    value: function(e) {
                        e && e.length > 0 && (this._canAddSelection(e[0]) || this.unselectAll(!1),
                            this.selectFeatures(e, !1))
                    }
                }, {
                    key: "_layerVisibilityChanged",
                    value: function(e) {
                        var t = e.object;
                        t.getVisibility() || this._selectedFeatures.filter(function(e) {
                            return e.layer === t
                        }).forEach(this.unselectFeature.bind(this))
                    }
                }, {
                    key: "isSelected",
                    value: function(e) {
                        return this._selectedFeatures.includes(e)
                    }
                }, {
                    key: "selectFeature",
                    value: function(e) {
                        return !(!e || this.isSelected(e)) && (this._selectedFeatures.push(e),
                            e.model && e.model.setSelected(!0),
                            !0)
                    }
                }, {
                    key: "unselectFeature",
                    value: function(e, t) {
                        if (e && this.isSelected(e)) {
                            var n = this._selectedFeatures.indexOf(e);
                            this._selectedFeatures.splice(n, 1),
                                e.model && e.model.setSelected(!1),
                                this._triggerUnSelected([e], t),
                                this._triggerSelectionChanged(t)
                        }
                    }
                }, {
                    key: "unselectAll",
                    value: function(e) {
                        if (this._selectedFeatures.length > 0) {
                            var t = this._selectedFeatures;
                            t.forEach(function(e) {
                                    e.model.setSelected(!1)
                                }),
                                this._selectedFeatures = [],
                                this._triggerUnSelected(t, e),
                                this._triggerSelectionChanged(e)
                        }
                    }
                }, {
                    key: "selectFeatures",
                    value: function(e, t) {
                        if (Array.isArray(e) || (e = [e]),
                            0 !== e.length) {
                            for (var n = [], i = 0; i < e.length; i++) {
                                var r = e[i];
                                this.selectFeature(r) && n.push(r)
                            }
                            n.length > 0 && (this._triggerSelected(n, t),
                                this._triggerSelectionChanged(t))
                        }
                    }
                }, {
                    key: "setSelectedModels",
                    value: function(e, t) {
                        var n = this;
                        this.unselectAll(),
                            Array.isArray(e) || (e = [e]);
                        var i = e.map(function(e) {
                            return n._objectTypeToLayer[e.type].getVector(e)
                        });
                        i = c.a.compact(i),
                            this.selectFeatures(i, t)
                    }
                }, {
                    key: "setSelection",
                    value: function(e, t) {
                        for (var n = !1, i = this._selectedFeatures.length - 1; i >= 0; i--) {
                            var r = this._selectedFeatures[i];
                            e.contains(r) || (this.unselectFeature(r, !0),
                                n = !0)
                        }
                        for (var s = 0; s < e.length; s++) {
                            var o = e[s];
                            this._selectedFeatures.contains(o) || (this.selectFeature(o, !0),
                                n = !0)
                        }
                        n && this._triggerSelectionChanged(t)
                    }
                }, {
                    key: "_triggerSelectionChanged",
                    value: function(e) {
                        e || this.events.triggerEvent("selectionchanged", {
                            selected: this._selectedFeatures
                        })
                    }
                }, {
                    key: "_triggerSelected",
                    value: function(e, t) {
                        e.forEach(this.recalculateStyle.bind(this)),
                            t || this.events.triggerEvent("app:selection:featureselected", {
                                selection: this._selectedFeatures,
                                features: e
                            })
                    }
                }, {
                    key: "_triggerUnSelected",
                    value: function(e, t) {
                        t || this.events.triggerEvent("app:selection:featureunselected", {
                                selection: this._selectedFeatures,
                                features: e
                            }),
                            e.forEach(this.recalculateStyle.bind(this))
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        var e = this;
                        this._layers.forEach(function(t) {
                            return t.events.un({
                                visibilitychanged: e._layerVisibilityChanged,
                                scope: e
                            })
                        })
                    }
                }, {
                    key: "_onSelectPath",
                    value: function(e) {
                        var t = e.feature;
                        if (0 !== this._selectedFeatures.length) {
                            var n = this._selectedFeatures[0].model,
                                i = t.model;
                            if (!(this._selectedFeatures.length > 1 || n.type !== h.a.SEGMENT)) {
                                var s = function(e) {
                                        return e.getID() === i.getID()
                                    },
                                    o = Object(p.bfs)(n, function(e) {
                                        return e.attributes.primaryStreetID === n.attributes.primaryStreetID
                                    }, s),
                                    a = r()(o, 2),
                                    l = a[0],
                                    u = a[1];
                                if (null === l) {
                                    var c = Object(p.bfs)(n, function() {
                                        return !0
                                    }, s);
                                    u = r()(c, 2)[1]
                                }
                                var d = this._getPathFromVisitedSegments(u, n, i);
                                return d.length <= 25 ? this.setSelectedModels(d) : void 0
                            }
                        } else
                            this.selectFeature(t)
                    }
                }, {
                    key: "_getPathFromVisitedSegments",
                    value: function(e, t, n) {
                        for (var i = n.getID(), r = t.getID(), s = []; i !== r && null != i;)
                            s.push(i),
                            i = e.get(i);
                        return s.push(t.getID()),
                            s.map(function(e) {
                                return W.model.segments.getObjectById(e)
                            })
                    }
                }, {
                    key: "_getSelectionCountByType",
                    value: function() {
                        var e = this._selectedFeatures.map(function(e) {
                            return e.model.type
                        });
                        return c.a.countBy(e, c.a.identity)
                    }
                }, {
                    key: "unselectFeatures",
                    value: function(e, t, n) {
                        if (Array.isArray(e) || (e = [e]),
                            0 !== e.length) {
                            for (var i = !1, r = [], s = e.length - 1; s >= 0; s--) {
                                var o = e[s];
                                this._selectedFeatures.includes(o) && (this.unselectFeature(o, !0),
                                    r.push(o),
                                    i = !0)
                            }
                            r.length > 0 && this._triggerUnSelected(r, n),
                                i && this._triggerSelectionChanged(t, n)
                        }
                    }
                }, {
                    key: "_canAddSelection",
                    value: function(e) {
                        var t = e.model.type,
                            n = this._selectedFeatures[0] && this._selectedFeatures[0].model.type !== t,
                            i = e.model.isResidential && e.model.isResidential() || this._selectedFeatures[0] && this._selectedFeatures[0].model.isResidential && this._selectedFeatures[0].model.isResidential(),
                            r = t === h.a.SEGMENT || t === h.a.VENUE && Object(g.isFeatureFlagEnabled)(g.FEATURE_FLAGS.MERGE_PLACES);
                        return !(i || n || !r)
                    }
                }, {
                    key: "hasSelectedFeatures",
                    value: function() {
                        return !c.a.isEmpty(this._selectedFeatures)
                    }
                }, {
                    key: "_getSelectedSegments",
                    value: function() {
                        return c()(this._selectedFeatures.filter(m)).map("model").value()
                    }
                }, {
                    key: "getSegmentSelection",
                    value: function() {
                        var e = this._getSelectedSegments();
                        return new f.SegmentSelection(e)
                    }
                }, {
                    key: "toggleMultipleSelection",
                    value: function() {
                        this.selectionMediator.toggleMultipleSelection()
                    }
                }, {
                    key: "getSelectableRepos",
                    value: function() {
                        return this._layers.map(function(e) {
                            return e.repo
                        }).filter(function(e) {
                            return void 0 !== e
                        }).map(function(e) {
                            return e[0]
                        })
                    }
                }, {
                    key: "getSelectedFeatures",
                    value: function() {
                        return this._selectedFeatures.concat()
                    }
                }, {
                    key: "disable",
                    value: function() {
                        this._enabled && (this.selectionMediator.resetState(),
                            this._unbindSelectionMediatorEvents(),
                            this._enabled = !1)
                    }
                }, {
                    key: "enable",
                    value: function() {
                        this._enabled || (this._bindSelectionMediatorEvents(),
                            this._enabled = !0)
                    }
                }]),
                e
        }();
    t.a = v
}, function(e, t, n) {
    "use strict";
    var i = n(207),
        r = n.n(i),
        s = {
            virtualVertices: {
                strokeWidth: 2,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 4,
                fillColor: "#ffffff",
                fillOpacity: .6,
                cursor: "move"
            },
            permalinkMarker: new OL.StyleMap({
                default: new OL.Style({
                    externalGraphic: r.a,
                    graphicWidth: 50,
                    graphicHeight: 60
                })
            })
        };
    t.a = s
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(44)),
        s = i(n(64)),
        o = {
            HAS_LANES: 1
        };
    t.TOGGLE_CONFIRMATION_REASON = o;
    var a = function() {
        function e(e, t) {
            this.turn = t,
                this.dataModel = e
        }
        return e.prototype.toggleTurnConfirmation = function() {
                return this.areTurnsLocked(this.turn) && this.turn.getTurnData().hasLanes() ? o.HAS_LANES : null
            },
            e.prototype.toggleTurn = function() {
                this.areTurnsLocked(this.turn) ? this.toggleTurnAllowability(this.turn) : this.lockSegmentTurns(this.turn)
            },
            e.prototype.getFromSegment = function(e) {
                return this.dataModel.segments.getObjectById(e.getFromVertex().getSegmentID())
            },
            e.prototype.areTurnsLocked = function(e) {
                var t = s.default.directedSegment(this.dataModel, e.getFromVertex());
                return null != t && t.areTurnsLocked()
            },
            e.prototype.lockSegmentTurns = function(e) {
                var t = this.getFromSegment(e),
                    n = this.dataModel.nodes.getObjectById(this.dataModel.getRoadGraph().getVertexNodeID(e.getFromVertex()));
                if (null !== t && null !== n)
                    t.lockTurns(n);
                else {
                    if (!t)
                        throw new Error("segment does not exist");
                    if (!t)
                        throw new Error("node does not exist")
                }
            },
            e.prototype.toggleTurnAllowability = function(e) {
                var t = e.getTurnData(),
                    n = t.withToggledState(!t.isAllowed()),
                    i = e.withTurnData(n),
                    s = this.dataModel.getTurnGraph(),
                    o = new r.default(s, i);
                this.dataModel.actionManager.add(o)
            },
            e
    }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        s = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(r(arguments[t]));
            return e
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = n(56),
        l = n(245),
        u = o(n(165)),
        c = n(729),
        d = n(172),
        h = "roadTypes",
        p = "venueLevel",
        g = [a.RepositoryName.CAMERAS, a.RepositoryName.MANAGED_AREAS, a.RepositoryName.MAP_COMMENTS, a.RepositoryName.MAP_UPDATE_REQUESTS, a.RepositoryName.PROBLEMS, a.RepositoryName.ROAD_CLOSURES, a.RepositoryName.SEGMENT_HOUSE_NUMBERS, a.RepositoryName.RESTRICTED_DRIVING_AREAS];

    function f(e) {
        switch (e) {
            case a.RepositoryName.VENUES:
                return a.RepositoryFilterName.VENUES;
            case a.RepositoryName.PROBLEMS:
                return a.RepositoryFilterName.PROBLEMS;
            case a.RepositoryName.MAP_UPDATE_REQUESTS:
                return a.RepositoryFilterName.MAP_UPDATE_REQUESTS
        }
        return null
    }

    function m(e) {
        return e.join(",")
    }

    function v(e, t) {
        var n = f(t);
        if (n) {
            var i = m(c.getFilterBitArray(e, n));
            return u.getLastFilter(n) !== i
        }
        return !1
    }

    function _(e, t, n, i) {
        var r, s = t.getRepositoryName(),
            o = g.includes(s),
            a = t.isActive(),
            l = d.getMinDisplayZoom(s);
        r = 0 === l || l <= i;
        var c = u.isRepositoryContained(s, n),
            h = v(e, s);
        return o && a && r && (!c || h)
    }

    function y(e, t) {
        var n, i, r = function(e) {
                return e.getObjectType() + "s"
            }(t),
            s = f(t.getRepositoryName());
        if (s) {
            var o = c.getFilterBitArray(e, s);
            return c.isFilterNonEmpty(o) ? ((n = {})[s] = m(o),
                n) : {}
        }
        return (i = {})[r] = !0,
            i
    }
    t.getFeaturesRequestParams = function(e, t, n, r, o, d) {
            var g = t.filter(function(t) {
                    return _(e, t, o, d)
                }).map(function(t) {
                    return y(e, t)
                }),
                f = _(e, r, o, d);
            return Object.assign.apply(Object, s([{}], g, [function(e, t, n) {
                var i, r;
                if (e)
                    return (i = {})[h] = l.ALL_ROAD_TYPES,
                        i;
                var s = l.zoomToRoadType(n);
                return s.every(function(e) {
                    return u.isRoadTypeContained(e, t)
                }) ? {} : ((r = {})[h] = s,
                    r)
            }(f, o, d), function(e, t, n, r) {
                var s, o = l.zoomToVenueLevel(n),
                    d = null == u.getVenueLevel() || u.getVenueLevel() !== o,
                    h = null != o,
                    g = !u.areVenuesInBounds(t) || d,
                    f = c.getFilterBitArray(e, a.RepositoryFilterName.VENUES),
                    m = c.isFilterNonEmpty(f),
                    _ = v(e, r.getRepositoryName());
                return h && m && (g || _) ? i(((s = {})[p] = o,
                    s), y(e, r)) : {}
            }(e, o, d, n)]))
        },
        t.isPartialFeaturesRequest = function(e, t) {
            var n = l.zoomToRoadType(t).length > 0,
                i = Object.keys(e).includes(h);
            return n && !i
        },
        t.updateOnReload = function() {
            a.RepositoryNames.forEach(function(e) {
                u.onRepositoryCleared(e)
            })
        },
        t.updateOnResponse = function(e, t, n, i, r) {
            void 0 === t && (t = []),
                null != n && u.setVenueBoundsAndLevel(i, n),
                t.length && u.setRoadBounds(t, i),
                function(e) {
                    return e.filter(function(e) {
                        return a.RepositoryNames.includes(e)
                    })
                }(e).filter(function(e) {
                    return e !== a.RepositoryName.VENUES && e !== a.RepositoryName.SEGMENTS
                }).forEach(function(e) {
                    u.setRepositoryBounds(e, i)
                }),
                u.setLastFilters(r)
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = function(e) {
            return e.getAddress().getStreetName()
        };
    t.segmentToStreetName = s;
    t.getFromNodeOfClosure = function(e, t) {
        return e.forward ? t.getFromNode() : t.getToNode()
    };
    t.getGeometryDistanceFromOrigin = function(e) {
        var t = e.x,
            n = e.y;
        return Math.sqrt(Math.pow(t, 2) + Math.pow(n, 2))
    };
    t.getSegmentCrossingStreetName = function(e, t, n) {
        var i = s(t),
            o = n ? n.getSegmentIds() : [];
        return r.default(o).map(function(t) {
            var n = e.segments.getObjectById(t);
            return n && s(n)
        }).uniq().without(i).head() || i
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.MIN_ROUNDABOUT_RADIUS_IN_METERS = 4;
    t.MAX_ROUNDABOUT_RADIUS_IN_METERS = 100
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
            return (i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(e, t) {
                    e.__proto__ = t
                } ||
                function(e, t) {
                    for (var n in t)
                        t.hasOwnProperty(n) && (e[n] = t[n])
                }
            )(e, t)
        },
        function(e, t) {
            function n() {
                this.constructor = e
            }
            i(e, t),
                e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                    new n)
        }
    );
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(32),
        o = function(e) {
            function t(t) {
                void 0 === t && (t = {});
                var n = e.call(this, t) || this;
                return n._defaultType = t.defaultType || s.RESTRICTION_TYPE.FREE,
                    Object.freeze(n),
                    n
            }
            return r(t, e),
                t.prototype.supportsNumPassengers = function() {
                    return !1
                },
                t.prototype.supportsSubscriptions = function() {
                    return !1
                },
                t.prototype.supportsLicensePlateNumber = function() {
                    return !1
                },
                t.prototype.supportsDaysOfMonthParity = function() {
                    return !1
                },
                t.prototype.supportsTollDriveProfileEntries = function() {
                    return !1
                },
                t.prototype.with = function(e) {
                    return void 0 === e && (e = {}),
                        new t(Object.assign(this.toJSON(), e))
                },
                t
        }(s.BaseRestriction);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(7)),
        s = function() {
            return function() {
                this.on = r.default.Events.on,
                    this.off = r.default.Events.off,
                    this.trigger = r.default.Events.trigger,
                    this.bind = r.default.Events.bind,
                    this.unbind = r.default.Events.unbind,
                    this.once = r.default.Events.once,
                    this.listenTo = r.default.Events.listenTo,
                    this.listenToOnce = r.default.Events.listenToOnce,
                    this.stopListening = r.default.Events.stopListening
            }
        }();
    t.default = s
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(51)),
        l = o(n(12)),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry,
                            fractionPoint: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.clone = function() {
                    var e = this.attributes.fractionPoint ? l.cloneGeometry(this.attributes.fractionPoint) : null;
                    return new t(Object.assign({}, this.attributes, {
                        fractionPoint: e,
                        geometry: l.cloneGeometry(this.getGeometry())
                    }))
                },
                t.prototype.getSide = function() {
                    return this.attributes.side
                },
                t.prototype.getSegmentId = function() {
                    return this.attributes.segID
                },
                t.prototype.setSegmentId = function(e) {
                    this.attributes.segID = e
                },
                t.prototype.getNumber = function() {
                    return this.attributes.number
                },
                t.prototype.setNumber = function(e) {
                    this.attributes.number = e
                },
                t.prototype.isForced = function() {
                    return this.attributes.forced
                },
                t.prototype.isValid = function() {
                    return this.attributes.valid
                },
                t.prototype.getFractionPoint = function() {
                    return this.attributes.fractionPoint
                },
                t.prototype.setFractionPoint = function(e) {
                    this.attributes.fractionPoint = e
                },
                t.prototype.getGeometry = function() {
                    return this.attributes.geometry
                },
                t.prototype.setGeometry = function(e) {
                    this.attributes.geometry = l.cloneGeometry(e)
                },
                t
        }(a.default);
    t.default = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.CAMERA_TYPES = {
        SPEED_CAMERA: 2,
        DUMMY: 3,
        RED_LIGHT: 4
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.containsBounds = function(e, t, n, i) {
            return void 0 === n && (n = !1),
                void 0 === i && (i = !0),
                e.containsBounds(t, n, i)
        },
        t.scaleBounds = function(e, t) {
            return e.scale(t)
        },
        t.cloneBounds = function(e) {
            return e.clone()
        },
        t.getBoundsArea = function(e) {
            return e.toGeometry().getArea()
        }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(10)),
        c = a(n(0)),
        d = a(n(27)),
        h = a(n(66)),
        p = a(n(83)),
        g = a(n(91)),
        f = a(n(26)),
        m = a(n(38)),
        v = a(n(44)),
        _ = n(39),
        y = l(n(12)),
        b = l(n(20)),
        E = l(n(17)),
        w = a(n(41)),
        S = a(n(15)),
        k = function(e) {
            function t(t, n, i, r) {
                void 0 === r && (r = {});
                var s = e.call(this, r) || this;
                return s.mainSegment = t,
                    s.auxiliarySegment = n,
                    s.node = i,
                    s.mergedSegment = null,
                    s.keepLevel = !1,
                    s
            }
            return r(t, e),
                t.prototype._mergeVertices = function(e, t) {
                    return o(e.slice(0, -1), t)
                },
                t.prototype.createMergedSegment = function() {
                    var e, t, n, i, r, s, o, a, l, c = b.getVertices(y.cloneGeometry(this.mainSegment.geometry)),
                        d = b.getVertices(y.cloneGeometry(this.auxiliarySegment.geometry));
                    if (this.mainSegment.attributes.fromNodeID === this.node.getID() && this.auxiliarySegment.attributes.toNodeID === this.node.getID())
                        e = this.auxiliarySegment.attributes.fromNodeID,
                        t = this.mainSegment.attributes.toNodeID,
                        n = this._mergeVertices(d, c),
                        a = this.auxiliarySegment,
                        r = m.default.forwardOf(this.auxiliarySegment.getID()),
                        i = m.default.reverseOf(this.auxiliarySegment.getID()),
                        l = this.mainSegment,
                        o = m.default.forwardOf(this.mainSegment.getID()),
                        s = m.default.reverseOf(this.mainSegment.getID());
                    else if (this.mainSegment.attributes.fromNodeID === this.node.getID() && this.auxiliarySegment.attributes.fromNodeID === this.node.getID())
                        e = this.auxiliarySegment.attributes.toNodeID,
                        t = this.mainSegment.attributes.toNodeID,
                        d.reverse(),
                        n = this._mergeVertices(d, c),
                        a = this.auxiliarySegment,
                        r = m.default.reverseOf(this.auxiliarySegment.getID()),
                        i = m.default.forwardOf(this.auxiliarySegment.getID()),
                        l = this.mainSegment,
                        o = m.default.forwardOf(this.mainSegment.getID()),
                        s = m.default.reverseOf(this.mainSegment.getID());
                    else if (this.mainSegment.attributes.toNodeID === this.node.getID() && this.auxiliarySegment.attributes.toNodeID === this.node.getID())
                        e = this.mainSegment.attributes.fromNodeID,
                        t = this.auxiliarySegment.attributes.fromNodeID,
                        d.reverse(),
                        n = this._mergeVertices(c, d),
                        a = this.mainSegment,
                        r = m.default.forwardOf(this.mainSegment.getID()),
                        i = m.default.reverseOf(this.mainSegment.getID()),
                        l = this.auxiliarySegment,
                        o = m.default.reverseOf(this.auxiliarySegment.getID()),
                        s = m.default.forwardOf(this.auxiliarySegment.getID());
                    else {
                        if (this.mainSegment.attributes.toNodeID !== this.node.getID() || this.auxiliarySegment.attributes.fromNodeID !== this.node.getID())
                            throw console.warn("Warning: illegal input for merging segments"),
                                new Error("illegal input for merging segments");
                        e = this.mainSegment.attributes.fromNodeID,
                            t = this.auxiliarySegment.attributes.toNodeID,
                            n = this._mergeVertices(c, d),
                            a = this.mainSegment,
                            r = m.default.forwardOf(this.mainSegment.getID()),
                            i = m.default.reverseOf(this.mainSegment.getID()),
                            l = this.auxiliarySegment,
                            o = m.default.forwardOf(this.auxiliarySegment.getID()),
                            s = m.default.reverseOf(this.auxiliarySegment.getID())
                    }
                    var h = E.createLineString(n),
                        p = new f.default(u.default.extend({}, this.mainSegment.attributes));
                    return p.copyAttributes(this.mainSegment),
                        this._removeInvalidMaxSpeeds(p),
                        p.geometry = h,
                        p.setID(this.model.segments.generateUniqueID()), {
                            mergedSegment: p,
                            fromNodeID: e,
                            toNodeID: t,
                            firstSegment: a,
                            firstReverse: i,
                            firstForward: r,
                            secondSegment: l,
                            secondReverse: s,
                            secondForward: o
                        }
                },
                t.prototype._removeInvalidMaxSpeeds = function(e) {
                    e.attributes.fwdDirection || (e.attributes.fwdMaxSpeed = null),
                        e.attributes.revDirection || (e.attributes.revMaxSpeed = null)
                },
                t.prototype._calculateLevel = function() {
                    return Math.max(this.mainSegment.attributes.level || 0, this.auxiliarySegment.attributes.level || 0)
                },
                t.prototype.doAction = function() {
                    this.mainSegment.getID(),
                        this.auxiliarySegment.getID();
                    var e = this.createMergedSegment(),
                        t = e.mergedSegment,
                        n = e.fromNodeID,
                        i = e.toNodeID,
                        r = e.firstForward,
                        s = e.firstReverse,
                        a = e.secondForward,
                        l = e.secondReverse,
                        u = e.firstSegment,
                        d = e.secondSegment;
                    this.mergedSegment = t;
                    var f = this.mergedSegment.attributes;
                    f.level = this._calculateLevel(),
                        f.streetIDs = c.default.union(this.mainSegment.attributes.streetIDs || [], this.auxiliarySegment.attributes.streetIDs || []),
                        f.origIDs = [this.mainSegment.getID(), this.auxiliarySegment.getID()],
                        this.mergedSegment.attributes.fromNodeID = n,
                        this.mergedSegment.attributes.toNodeID = i,
                        f.virtualNodeIDs = o(this.mainSegment.attributes.virtualNodeIDs, this.auxiliarySegment.attributes.virtualNodeIDs),
                        this.setLockLevel(this.mergedSegment),
                        this.mergedSegment.attributes.permissions = this.mainSegment.attributes.permissions & this.auxiliarySegment.attributes.permissions,
                        this.mergedSegment.attributes.revLaneCount = this._getMergedLaneCount(u, s),
                        this.mergedSegment.attributes.fwdLaneCount = this._getMergedLaneCount(d, a),
                        this.doSubAction(new g.default(this.mergedSegment, {
                            dontSerialize: !0
                        }));
                    var m = this.model.nodes.getObjectById(n),
                        v = this.model.nodes.getObjectById(i);
                    this._copyTurns(r, s, a, l),
                        m && this.doSubAction(new h.default(m, this.mergedSegment, {
                            dontSerialize: !0
                        })),
                        v && this.doSubAction(new h.default(v, this.mergedSegment, {
                            dontSerialize: !0
                        })),
                        this.doSubAction(new p.default(this.mainSegment, {
                            hide: !0,
                            dontSerialize: !0
                        })),
                        this.doSubAction(new p.default(this.auxiliarySegment, {
                            hide: !0,
                            dontSerialize: !0
                        })),
                        this.mergedSegment.supportsVirtualNodes() && this._connectVirtualNodes(f)
                },
                t.prototype._connectVirtualNodes = function(e) {
                    var t = this;
                    (this.node.getSegmentIds().filter(function(e) {
                        var n = t.model.segments.getObjectById(e);
                        if (!n)
                            throw new Error("Missing segment: {%segId}");
                        return n.isWalkingTrail()
                    }).length > 0 ? o([this.node.getID()], e.virtualNodeIDs) : o(e.virtualNodeIDs)).forEach(function(e) {
                        var n = t.model.nodes.getObjectById(e);
                        if (!n)
                            throw new Error("missing node: " + e);
                        if (null === t.mergedSegment)
                            throw new Error("mergedSegment is null");
                        t.doSubAction(new h.default(n, t.mergedSegment, {
                            virtual: !0,
                            dontSerialize: !0
                        }))
                    })
                },
                t.prototype._copyTurns = function(e, t, n, i) {
                    var r = this,
                        s = this.model.getTurnGraph();
                    if (null === this.mergedSegment)
                        throw new Error("mergedSegment is null");
                    var o = this.mergedSegment.getID();
                    s.getTurnsTo(e).forEach(function(e) {
                            e = e.withToVertex(m.default.forwardOf(o)),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        }),
                        s.getTurnsFrom(t).forEach(function(e) {
                            e = e.withFromVertex(m.default.reverseOf(o)),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        }),
                        s.getTurnsFrom(n).forEach(function(e) {
                            e = e.withFromVertex(m.default.forwardOf(o)),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        }),
                        s.getTurnsTo(i).forEach(function(e) {
                            e = e.withToVertex(m.default.reverseOf(o)),
                                r.doSubAction(new v.default(s, e, {
                                    dontSerialize: !0
                                }))
                        })
                },
                t.prototype._getMergedLaneCount = function(e, t) {
                    return t.isForward() ? e.attributes.fwdLaneCount : e.attributes.revLaneCount
                },
                t.prototype.setLockLevel = function(e) {
                    var t = [this.mainSegment.attributes.lockRank, this.auxiliarySegment.attributes.lockRank],
                        n = [this.mainSegment.attributes.rank, this.auxiliarySegment.attributes.rank];
                    e.attributes.lockRank = null === t[0] && null === t[1] ? null : Math.max.apply(Math, o(c.default.compact(t))),
                        e.attributes.rank = Math.max.apply(Math, o(n))
                },
                t.prototype.getFocusFeatures = function() {
                    return this.mergedSegment ? [this.mergedSegment] : []
                },
                t.prototype.generateDescription = function() {
                    var e = this.mainSegment;
                    this._description = _.formatActionAddressDescription(e, "MergeSegments")
                },
                t.prototype.serialize = function() {
                    if (!this.mergedSegment)
                        throw new Error("missing mergedSegment");
                    var e = {
                        primarySegmentID: this.mainSegment.getID(),
                        secondarySegmentID: this.auxiliarySegment.getID(),
                        nodeID: this.node.getID(),
                        mergedSegmentClientID: this.mergedSegment.getID()
                    };
                    return {
                        _objectType: S.default.SEGMENT,
                        action: w.default.TYPE.MERGE,
                        attributes: e
                    }
                },
                t
        }(d.default);
    t.default = k
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(27),
        m = n.n(f),
        v = n(176),
        _ = n.n(v),
        y = n(177),
        b = n(61),
        E = function(e) {
            function t(e, n, i) {
                var r;
                return o()(this, t),
                    (r = c()(this, h()(t).call(this, i))).houseNumber = e,
                    r.newHouseNumber = r.houseNumber.clone(),
                    r.newSegmentId = n,
                    r
            }
            return g()(t, e),
                l()(t, [{
                    key: "doAction",
                    value: function() {
                        return "Replacing house number ".concat(this.houseNumber.id, " segment from ").concat(this.houseNumber.getSegmentId(), " to ").concat(this.newSegmentId),
                            this.newHouseNumber.setSegmentId(this.newSegmentId),
                            this.doSubAction(new y.default(this.houseNumber)),
                            this.doSubAction(new _.a(this.newHouseNumber)),
                            !0
                    }
                }, {
                    key: "getNewHouseNumber",
                    value: function() {
                        return this.newHouseNumber
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId()),
                            t = new b.SegmentStreetsUseCase(this.model, e).getEntireStreet(e).map(function(e) {
                                return e.getUniqueID()
                            });
                        return [].concat(r()(t), [this.houseNumber.getUniqueID(), this.newHouseNumber.getUniqueID()])
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId()),
                            t = this.model.segments.getObjectById(this.newHouseNumber.getSegmentId()),
                            n = [];
                        return e && n.push(e),
                            t && n.push(t),
                            n
                    }
                }]),
                t
        }(m.a);
    t.default = E
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(71),
        g = n.n(p),
        f = n(128),
        m = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "generateDescription",
                    value: function() {
                        var e = this.subActions.length,
                            t = this.subActions[0];
                        this._description = Object(f.generateUpdateActionDescription)(t, e)
                    }
                }]),
                t
        }(g.a);
    t.default = m
}, function(e, t, n) {
    "use strict";
    var i = n(13),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = function() {
            function e() {
                o()(this, e)
            }
            return l()(e, [{
                    key: "areDaysConsecutive",
                    value: function(e, t) {
                        return e + 1 === t || 6 === e && 0 === t
                    }
                }, {
                    key: "getWeekdaysGist",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "*",
                            n = [],
                            i = e.length;
                        if (0 === i)
                            return n;
                        var r = 0,
                            s = 0,
                            o = I18n.t("date.week_day_order");
                        for (e = c.a.sortBy(e, function(e) {
                                return o.indexOf(e)
                            }); r < i;) {
                            var a = e[r];
                            if (0 === r)
                                n.push(a);
                            else if (r === i - 1) {
                                var l = e[r - 1];
                                this.areDaysConsecutive(l, a) && s > 0 && n.push(t),
                                    n.push(a)
                            } else {
                                var u = e[r - 1],
                                    d = e[r + 1];
                                this.areDaysConsecutive(u, a) ? this.areDaysConsecutive(a, d) ? s++ : (s > 0 && n.push(t),
                                    n.push(a),
                                    s = 0) : n.push(a)
                            }
                            r++
                        }
                        return n
                    }
                }, {
                    key: "isValidTime",
                    value: function(e) {
                        if (!c.a.isString(e))
                            return !1;
                        var t = e.split(":");
                        if (2 !== t.length)
                            return !1;
                        var n = r()(t, 2),
                            i = n[0],
                            s = n[1];
                        return !(!/([01]?[0-9]|2[0-3])/.test(i) || !/[0-5]\d/.test(s))
                    }
                }, {
                    key: "_parseTimeStr",
                    value: function(e) {
                        if (this.isValidTime(e)) {
                            var t = e.split(":");
                            return {
                                hour: parseInt(t[0], 10),
                                minute: parseInt(t[1], 10)
                            }
                        }
                        return {}
                    }
                }, {
                    key: "compareTimes",
                    value: function(e, t) {
                        var n = this._parseTimeStr(e),
                            i = this._parseTimeStr(t);
                        return n.hour === i.hour ? n.minute > i.minute ? 1 : n.minute < i.minute ? -1 : 0 : n.hour > i.hour ? 1 : n.hour < i.hour ? -1 : 0
                    }
                }]),
                e
        }();
    t.a = d
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(31),
        r = function() {
            function e(e) {
                this.loginManager = e;
                var t = e.user;
                if (null == t)
                    throw new TypeError("User is null");
                this.user = t
            }
            return e.prototype.needsEmailVerification = function() {
                    if (i.getServerConfig().enforceEmailVerification) {
                        var e = !this.user.isVerifiedEmail();
                        return this.loginManager.isAuthenticated() && e
                    }
                    return !1
                },
                e.prototype.isUserEmailAddressMissing = function() {
                    return this.user.isEmailAddressMissing()
                },
                e.prototype.getEmailAddressToVerify = function() {
                    return this.user.getEmailAddress()
                },
                e
        }();
    t.EmailVerificationUseCase = r
}, function(e, t, n) {
    "use strict";
    n.d(t, "a", function() {
        return D
    });
    var i = n(8),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(34),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(143),
        _ = n.n(v),
        y = n(10),
        b = n.n(y),
        E = n(257),
        w = n.n(E),
        S = n(72),
        k = n.n(S),
        T = n(31),
        I = n(49),
        A = n(30),
        M = n(18);

    function O(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var C = "_csrf_token",
        R = /^(post|delete)$/,
        D = {
            REDIRECT: "redirect",
            LOGGED_IN: "logged_in"
        },
        L = (_()(Error),
            function() {
                function e() {
                    l()(this, e),
                        this.expired = !1,
                        this.returningUser = !1,
                        this.user = null,
                        this.events = new OpenLayers.Events(this),
                        Object(A.addHttpResponseMiddleware)(this._onServerResponse.bind(this)),
                        Object(A.addHttpRequestMiddleware)(function(e) {
                            var t = e.method;
                            R.test(t.toLowerCase()) && e.headers.append("X-CSRF-Token", b.a.cookie(C))
                        })
                }
                return o()(e, [{
                        key: "getLoggedInUser",
                        value: function() {
                            var e = this;
                            return null !== this.user ? Promise.resolve(this.user) : Object(A.httpGet)(W.Config.paths.auth, {
                                language: I18n.locale
                            }).then(function(t) {
                                return e.user = new w.a(t, {
                                        parse: !0
                                    }),
                                    e.user
                            })
                        }
                    }, {
                        key: "_onServerResponse",
                        value: function(e) {
                            if (!e.ok) {
                                if (!this._hasUser() || this.expired)
                                    return;
                                if (403 === e.status) {
                                    var t = e.parsedJSON;
                                    if (t) {
                                        var n = t.errorList;
                                        if (null != n && n.length > 0) {
                                            var i = n[0];
                                            103 !== i.code && 100 !== i.code || (this.expired = !0,
                                                this.returningUser = !1,
                                                this.events.triggerEvent("sessionExpired"))
                                        }
                                    }
                                }
                            }
                        }
                    }, {
                        key: "_hasUser",
                        value: function() {
                            return null !== this.user
                        }
                    }, {
                        key: "isAuthenticated",
                        value: function() {
                            return !this.expired && this._hasUser()
                        }
                    }, {
                        key: "isLoggedIn",
                        value: function() {
                            return Object(T.getServerConfig)().enforceEmailVerification ? this.isAuthenticated() && this.user.isVerifiedEmail() : this.isAuthenticated()
                        }
                    }, {
                        key: "isFirstLogin",
                        value: function() {
                            return this._hasUser() && this.user.isFirstLogin
                        }
                    }, {
                        key: "getUserRank",
                        value: function() {
                            return this.isLoggedIn() ? this.user.rank : k.a.MaxRank
                        }
                    }, {
                        key: "_isAdOperator",
                        value: function() {
                            return !!this.isLoggedIn() && this.user.adOperator
                        }
                    }, {
                        key: "isStaff",
                        value: function() {
                            return !!this.isLoggedIn() && this.user.isStaff
                        }
                    }, {
                        key: "isExpired",
                        value: function() {
                            return this.expired
                        }
                    }, {
                        key: "canEditAdLockedPlaceUpdates",
                        value: function() {
                            return this._isAdOperator()
                        }
                    }, {
                        key: "canEditBigJunctions",
                        value: function() {
                            return this.getUserRank() >= W.Config.big_junctions.minRank
                        }
                    }, {
                        key: "login",
                        value: function() {
                            var e = this;
                            return this._doLogin().then(function(t) {
                                if (t.redirect)
                                    return {
                                        result: D.REDIRECT
                                    };
                                var n = new w.a(t, {
                                    parse: !0
                                });
                                return e.returningUser = e._hasUser() && e.user.userName === n.userName,
                                    e.user = n,
                                    e.expired = !1,
                                    e.events.triggerEvent("login", {
                                        user: e.user
                                    }), {
                                        result: D.LOGGED_IN
                                    }
                            })
                        }
                    }, {
                        key: "_getCsrfToken",
                        value: function() {
                            var e = b.a.cookie(C);
                            return null !== e && void 0 !== e ? Promise.resolve(e) : Object(A.httpGet)(W.Config.login.paths.get)
                        }
                    }, {
                        key: "_getPopupLoginHref",
                        value: function() {
                            return "/signin?redirect=/editor/login_success.html&locale=".concat(I18n.currentLocale())
                        }
                    }, {
                        key: "_getLoginPopupDimensions",
                        value: function() {
                            var e = window.screenTop + window.innerHeight / 2 - 400;
                            return {
                                width: 1024,
                                height: 800,
                                left: window.screenLeft + window.innerWidth / 2 - 512,
                                top: e
                            }
                        }
                    }, {
                        key: "_getFullPageLoginHref",
                        value: function() {
                            return "/signin?redirect=".concat(encodeURIComponent("/editor".concat(window.location.search)), "&locale=").concat(I18n.currentLocale())
                        }
                    }, {
                        key: "_doLogin",
                        value: function() {
                            var e = this;
                            return this._getCsrfToken().then(function() {
                                return I.popupWithCloseMessage(function(e) {
                                    for (var t = 1; t < arguments.length; t++) {
                                        var n = null != arguments[t] ? arguments[t] : {};
                                        t % 2 ? O(Object(n), !0).forEach(function(t) {
                                            r()(e, t, n[t])
                                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : O(Object(n)).forEach(function(t) {
                                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                        })
                                    }
                                    return e
                                }({
                                    url: e._getPopupLoginHref(),
                                    name: "login"
                                }, e._getLoginPopupDimensions())).catch(function() {
                                    return e._redirectToLogin()
                                }).then(function() {
                                    return M.reportAnalytic.loginAction("login_success"),
                                        Object(A.httpGet)(W.Config.paths.auth)
                                })
                            })
                        }
                    }, {
                        key: "_redirectToLogin",
                        value: function() {
                            return I.redirectPageTo(this._getFullPageLoginHref()),
                                Promise.resolve({
                                    redirect: !0
                                })
                        }
                    }, {
                        key: "logout",
                        value: function() {
                            var e = this;
                            null !== this.user && (!1 === this.events.triggerEvent("beforeLogout") || (this.user = null,
                                this.expired = !1,
                                this.returningUser = !1,
                                Object(A.httpPost)(W.Config.login.paths.destroy).then(function() {
                                    e.events.triggerEvent("logout", {
                                        user: null,
                                        logout: !0
                                    })
                                })))
                        }
                    }, {
                        key: "resetUserLimits",
                        value: function(e) {
                            this._hasUser() && this.user.resetUserLimits(e)
                        }
                    }]),
                    e
            }());
    Object.assign(L.prototype, {
            CLASS_NAME: "Waze.LoginManager"
        }),
        t.b = L
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        DEFAULT: 0,
        MTE: 1
    };
    t.isModeValid = function(e) {
            return Object.values(i).includes(e)
        },
        t.default = i
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = i(n(15)),
        a = n(56),
        l = n(36),
        u = i(n(695)),
        c = i(n(76)),
        d = i(n(155)),
        h = n(241),
        p = r(n(12)),
        g = i(n(1139)),
        f = function() {
            function e() {
                var e, t = this;
                this.topCountry = null,
                    this.topState = null,
                    this.topCityId = null,
                    this.categoryBrands = {},
                    this.isLeftHand = !1,
                    this.lastTransactionID = null,
                    this.events = new OpenLayers.Events(this),
                    this.actionManager = new g.default(this),
                    this.segments = new d.default(o.default.SEGMENT, {
                        name: a.RepositoryName.SEGMENTS,
                        model: this
                    }),
                    this.nodes = new d.default(o.default.NODE, {
                        name: a.RepositoryName.NODES,
                        model: this
                    }),
                    this.users = new d.default(o.default.USER, {
                        name: a.RepositoryName.USERS,
                        model: this
                    }),
                    this.streets = new d.default(o.default.STREET, {
                        name: a.RepositoryName.STREETS,
                        model: this,
                        storePersistentSeparately: !0
                    }),
                    this.countries = new d.default(o.default.COUNTRY, {
                        name: a.RepositoryName.COUNTRIES,
                        model: this,
                        storePersistentSeparately: !0
                    }),
                    this.states = new d.default(o.default.STATE, {
                        name: a.RepositoryName.STATES,
                        model: this,
                        storePersistentSeparately: !0
                    }),
                    this.cities = new d.default(o.default.CITY, {
                        name: a.RepositoryName.CITIES,
                        model: this,
                        storePersistentSeparately: !0
                    }),
                    this.junctions = new d.default(o.default.JUNCTION, {
                        name: a.RepositoryName.JUNCTIONS,
                        model: this
                    }),
                    this.bigJunctions = new d.default(o.default.BIG_JUNCTION, {
                        name: a.RepositoryName.BIG_JUNCTIONS,
                        model: this
                    }),
                    this.problems = new d.default(o.default.MAP_PROBLEM, {
                        name: a.RepositoryName.PROBLEMS,
                        model: this
                    }),
                    this.mapUpdateRequests = new d.default(o.default.UPDATE_REQUEST, {
                        name: a.RepositoryName.MAP_UPDATE_REQUESTS,
                        model: this
                    }),
                    this.roadClosures = new d.default(o.default.ROAD_CLOSURE, {
                        name: a.RepositoryName.ROAD_CLOSURES,
                        model: this,
                        active: W.Config.closures.shownByDefault
                    }),
                    this.venues = new d.default(o.default.VENUE, {
                        name: a.RepositoryName.VENUES,
                        model: this
                    }),
                    this.cameras = new d.default(o.default.SPEED_CAMERA, {
                        name: a.RepositoryName.CAMERAS,
                        model: this,
                        active: W.Config.cameras.shownByDefault
                    }),
                    this.userAreas = new d.default(o.default.USER_AREA, {
                        name: a.RepositoryName.USER_AREAS,
                        model: this
                    }),
                    this.problemDetails = new d.default(o.default.PROBLEM_DETAILS, {
                        model: this,
                        name: a.RepositoryName.PROBLEM_DETAILS
                    }),
                    this.segmentHouseNumbers = new d.default(o.default.HOUSE_NUMBER, {
                        name: a.RepositoryName.SEGMENT_HOUSE_NUMBERS,
                        model: this,
                        active: W.Config.houseNumbers.shownByDefault
                    }),
                    this.updateRequestSessions = new d.default(o.default.UPDATE_REQUEST_SESSION, {
                        name: a.RepositoryName.UPDATE_REQUEST_SESSIONS,
                        model: this
                    }),
                    this.archives = new d.default(o.default.ARCHIVE_SESSION, {
                        name: a.RepositoryName.ARCHIVES,
                        model: this
                    }),
                    this.archiveSessions = new d.default(o.default.ARCHIVE_SESSION_DATA, {
                        name: a.RepositoryName.ARCHIVE_SESSIONS,
                        model: this
                    }),
                    this.managedAreas = new d.default(o.default.MANAGED_AREA, {
                        name: a.RepositoryName.MANAGED_AREAS,
                        model: this
                    }),
                    this.majorTrafficEvents = new d.default(o.default.MTE, {
                        name: a.RepositoryName.MAJOR_TRAFFIC_EVENTS,
                        model: this
                    }),
                    this.restrictedEditingAreas = new d.default(o.default.RESTRICTED_EDITING_AREA, {
                        name: a.RepositoryName.RESTRICTED_EDITING_AREAS,
                        model: this
                    }),
                    this.mapComments = new d.default(o.default.MAP_COMMENT, {
                        name: a.RepositoryName.MAP_COMMENTS,
                        model: this
                    }),
                    this.restrictedDrivingAreas = new d.default(o.default.RESTRICTED_DRIVING_AREA, {
                        name: a.RepositoryName.RESTRICTED_DRIVING_AREAS,
                        model: this
                    }),
                    this.repos = {
                        segments: this.segments,
                        nodes: this.nodes,
                        users: this.users,
                        streets: this.streets,
                        states: this.states,
                        countries: this.countries,
                        problems: this.problems,
                        mapUpdateRequests: this.mapUpdateRequests,
                        venues: this.venues,
                        junctions: this.junctions,
                        bigJunctions: this.bigJunctions,
                        roadClosures: this.roadClosures,
                        cameras: this.cameras,
                        userAreas: this.userAreas,
                        problemDetails: this.problemDetails,
                        segmentHouseNumbers: this.segmentHouseNumbers,
                        updateRequestSessions: this.updateRequestSessions,
                        archives: this.archives,
                        archiveSessions: this.archiveSessions,
                        managedAreas: this.managedAreas,
                        majorTrafficEvents: this.majorTrafficEvents,
                        restrictedEditingAreas: this.restrictedEditingAreas,
                        cities: this.cities,
                        mapComments: this.mapComments,
                        restrictedDrivingAreas: this.restrictedDrivingAreas
                    },
                    this.reposByObjectType = ((e = {})[o.default.ARCHIVE_SESSION] = this.archives,
                        e[o.default.ARCHIVE_SESSION_DATA] = this.archiveSessions,
                        e[o.default.BIG_JUNCTION] = this.bigJunctions,
                        e[o.default.CITY] = this.cities,
                        e[o.default.COUNTRY] = this.countries,
                        e[o.default.HOUSE_NUMBER] = this.segmentHouseNumbers,
                        e[o.default.JUNCTION] = this.junctions,
                        e[o.default.MANAGED_AREA] = this.managedAreas,
                        e[o.default.MAP_PROBLEM] = this.problems,
                        e[o.default.MAP_COMMENT] = this.mapComments,
                        e[o.default.MTE] = this.majorTrafficEvents,
                        e[o.default.NODE] = this.nodes,
                        e[o.default.PROBLEM_DETAILS] = this.problemDetails,
                        e[o.default.RESTRICTED_EDITING_AREA] = this.restrictedEditingAreas,
                        e[o.default.ROAD_CLOSURE] = this.roadClosures,
                        e[o.default.SEGMENT] = this.segments,
                        e[o.default.SPEED_CAMERA] = this.cameras,
                        e[o.default.STATE] = this.states,
                        e[o.default.STREET] = this.streets,
                        e[o.default.UPDATE_REQUEST] = this.mapUpdateRequests,
                        e[o.default.UPDATE_REQUEST_SESSION] = this.updateRequestSessions,
                        e[o.default.USER] = this.users,
                        e[o.default.USER_AREA] = this.userAreas,
                        e[o.default.VENUE] = this.venues,
                        e[o.default.RESTRICTED_DRIVING_AREA] = this.restrictedDrivingAreas,
                        e),
                    this.roadGraph = new u.default({
                        dataModel: this
                    }),
                    this.turnGraph = new c.default(this.roadGraph),
                    W.prefs.on("change:isImperial", function(e, n) {
                        null !== n && (t.isImperial = n)
                    }),
                    this.isImperial = W.prefs.get("isImperial")
            }
            return e.prototype.isRepository = function(e) {
                    return null != this.repos[e]
                },
                e.prototype.getRepositories = function() {
                    return Object.values(this.repos)
                },
                e.prototype.getTurnGraph = function() {
                    return this.turnGraph
                },
                e.prototype.getRoadGraph = function() {
                    return this.roadGraph
                },
                e.prototype.clearAllData = function() {
                    var e = this;
                    Object.keys(this.repos).forEach(function(t) {
                            e.repos[t].clear()
                        }),
                        this.turnGraph.clear()
                },
                e.prototype.getRepository = function(e) {
                    return e && this.reposByObjectType[e] || null
                },
                e.prototype.getRepositoryByName = function(e) {
                    return this.repos[e]
                },
                e.prototype.mergeGetFeaturesResponse = function(e, t, n, i) {
                    void 0 === i && (i = {}),
                        this.events.triggerEvent("mergestart", {}),
                        this.mergeObjects(e, t, n, i),
                        this.setMeasurementSystem(),
                        this.setDrivingDirection(),
                        this.processTopCountryAndState(t),
                        this.processTopCity(t),
                        this.setCategoryBrands(t),
                        this.events.triggerEvent("mergeend", {})
                },
                e.prototype.mergeObjects = function(e, t, n, i) {
                    var r = this;
                    void 0 === i && (i = {});
                    var s = t.connections;
                    if (h.sortRepositoriesByProcessOrder(Object.keys(t)).forEach(function(e) {
                            var s = r.repos[e],
                                o = t[e];
                            s && (n || s.clear({
                                    keepUnsaved: !0,
                                    keepSelected: !0,
                                    objectsToKeep: i[e]
                                }),
                                s.mergeObjects(o))
                        }),
                        null != s) {
                        var o = this.actionManager.getEditedTurns();
                        this.turnGraph.clear(),
                            this.turnGraph.fromDescartes(s),
                            o.forEach(function(e) {
                                r.turnGraph.putTurn(e)
                            })
                    }
                },
                e.prototype.mergeResponse = function(e) {
                    var t = this;
                    e.users && this.users.mergeObjects(e.users),
                        h.sortRepositoriesByProcessOrder(Object.keys(e)).filter(function(e) {
                            return e !== a.RepositoryName.USERS
                        }).forEach(function(n) {
                            var i = t.repos[n];
                            if (i) {
                                var r = e[n].objects;
                                i.put(r)
                            }
                        })
                },
                e.prototype.putPersistent = function(e) {
                    var t = this;
                    Object.keys(e).forEach(function(n) {
                        var i = t.repos[n];
                        void 0 !== i && e[n].objects.forEach(function(e) {
                            e.setPersistent(!0),
                                i.put(e)
                        })
                    })
                },
                e.prototype.processTopCountryAndState = function(e) {
                    var t = e.countries,
                        n = e.states;
                    null != t ? this.setTopCountryAndState(t, n) : this.clearTopCountryAndState()
                },
                e.prototype.processTopCity = function(e) {
                    var t = this,
                        n = {},
                        i = 0;
                    this.topCityId = null;
                    var r = e.segments;
                    null != r && r.objects.forEach(function(e) {
                        var r = t.streets.getObjectById(e.attributes.primaryStreetID);
                        if (r) {
                            var s = r.cityID,
                                o = t.cities.getObjectById(s);
                            if (o && !o.isEmpty() && null != s) {
                                var a = n[s] || 0;
                                n[s] = a++,
                                    a >= i && (i = a,
                                        t.topCityId = s)
                            }
                        }
                    })
                },
                e.prototype.setCategoryBrands = function(e) {
                    var t = e.venues;
                    t && (this.categoryBrands = t.categoryBrands || {})
                },
                e.prototype.getGasStationBrands = function() {
                    return this.categoryBrands[l.VENUE_GAS_STATION] || []
                },
                e.prototype.getParkingLotBrands = function() {
                    return this.categoryBrands[l.VENUE_PARKING_LOT] || []
                },
                e.prototype.getTopCountry = function() {
                    return this.topCountry
                },
                e.prototype.getTopState = function() {
                    return this.topState
                },
                e.prototype.getTopCityId = function() {
                    return this.topCityId
                },
                e.prototype.setTopCountryAndState = function(e, t) {
                    var n = e.mainObjectID;
                    if (null != n) {
                        this.topCountry = this.countries.objects[n];
                        var i = t.mainObjectID;
                        null != i && (this.topState = this.states.objects[i])
                    }
                },
                e.prototype.clearTopCountryAndState = function() {
                    this.topCountry = null,
                        this.topState = null
                },
                e.prototype.setMeasurementSystem = function() {
                    var e = W.prefs.get("isImperial");
                    if (null !== e)
                        this.isImperial = e;
                    else {
                        var t = Object.values(this.countries.objects),
                            n = null;
                        s.default.isEmpty(t) || (n = t[0],
                            W.prefs.set("isImperial", 234 === n.id || 235 === n.id))
                    }
                },
                e.prototype.setDrivingDirection = function() {
                    var e = Object.values(this.countries.objects);
                    this.isLeftHand = !1,
                        s.default.isEmpty(e) || (this.isLeftHand = Boolean(e[0].leftHandTraffic))
                },
                e.prototype.hasModifiedObjects = function() {
                    return Object.values(this.repos).some(function(e) {
                        return null != e && e.hasModifiedObjects()
                    })
                },
                e.prototype.getChangesExtent = function() {
                    var e = new OpenLayers.Bounds;
                    return [this.segments, this.nodes].forEach(function(t) {
                            Object.values(t.getModifiedObjects()).forEach(function(t) {
                                t.forEach(function(t) {
                                    e.extend(p.getBounds(t.geometry))
                                })
                            })
                        }),
                        e
                },
                e.prototype.hasStates = function() {
                    var e = this.states.getObjectArray();
                    return 1 !== e.length || !e[0].isDefault
                },
                e.prototype.setLastTransactionID = function(e) {
                    this.lastTransactionID = e,
                        this.events.triggerEvent("change:lastTransactionID", {
                            id: this.lastTransactionID
                        })
                },
                e
        }();
    Object.assign(f.prototype, {
            CLASS_NAME: "Waze.DataModel"
        }),
        t.default = f
}, function(e, t, n) {
    "use strict";
    var i, r;
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(19),
        o = n(28),
        a = n(165),
        l = n(56),
        u = ((i = {})[s.TogglerEnum.ITEM_PLACE_UPDATE_REQUESTS] = [o.LAYER_UNIQUE_NAMES.PLACE_UPDATES],
            i[s.TogglerEnum.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS] = [o.LAYER_UNIQUE_NAMES.RESIDENTIAL_PLACE_UPDATES],
            i[s.TogglerEnum.ITEM_PARKING_PLACE_UPDATE_REQUESTS] = [o.LAYER_UNIQUE_NAMES.PARKING_PLACE_UPDATES],
            i[s.TogglerEnum.ITEM_ROAD] = [o.LAYER_UNIQUE_NAMES.ROADS],
            i[s.TogglerEnum.ITEM_JUNCTION_BOXES] = [o.LAYER_UNIQUE_NAMES.BIG_JUNCTIONS],
            i[s.TogglerEnum.ITEM_CLOSURES] = [o.LAYER_UNIQUE_NAMES.CLOSURES, o.LAYER_UNIQUE_NAMES.CLOSURE_NODES],
            i[s.TogglerEnum.ITEM_SPEED_CAMERAS] = [o.LAYER_UNIQUE_NAMES.SPEED_CAMERAS],
            i[s.TogglerEnum.ITEM_HOUSE_NUMBERS] = [o.LAYER_UNIQUE_NAMES.HOUSE_NUMBERS],
            i[s.TogglerEnum.ITEM_SATELLITE_IMAGERY] = [o.LAYER_UNIQUE_NAMES.SATELLITE_IMAGERY],
            i[s.TogglerEnum.ITEM_GPS_POINTS] = [o.LAYER_UNIQUE_NAMES.GPS_POINTS],
            i[s.TogglerEnum.ITEM_LIVE_USERS] = [o.LAYER_UNIQUE_NAMES.LIVE_USERS],
            i[s.TogglerEnum.GROUP_CITIES] = [o.LAYER_UNIQUE_NAMES.CITIES_RASTER_LAYER_NAME],
            i[s.TogglerEnum.ITEM_CITY_NAMES] = [o.LAYER_UNIQUE_NAMES.CITIES_MARKERS_LAYER_NAME],
            i[s.TogglerEnum.ITEM_MAP_COMMENTS] = [o.LAYER_UNIQUE_NAMES.MAP_COMMENTS],
            i[s.TogglerEnum.ITEM_AREA_MANAGERS] = [o.LAYER_UNIQUE_NAMES.AREA_MANAGERS],
            i[s.TogglerEnum.ITEM_EDITABLE_AREAS] = [o.LAYER_UNIQUE_NAMES.EDITABLE_AREAS],
            i[s.TogglerEnum.GROUP_RESTRICTED_DRIVING_AREAS] = [o.LAYER_UNIQUE_NAMES.RESTRICTED_DRIVING_AREAS_POLYGON],
            i[s.TogglerEnum.ITEM_RESTRICTED_DRIVING_AREAS_NAMES] = [o.LAYER_UNIQUE_NAMES.RESTRICTED_DRIVING_AREAS_NAMES],
            i),
        c = ((r = {})[s.TogglerEnum.ITEM_CLOSURES] = l.RepositoryName.ROAD_CLOSURES,
            r[s.TogglerEnum.ITEM_SPEED_CAMERAS] = l.RepositoryName.CAMERAS,
            r[s.TogglerEnum.ITEM_HOUSE_NUMBERS] = l.RepositoryName.SEGMENT_HOUSE_NUMBERS,
            r[s.TogglerEnum.ITEM_MAP_COMMENTS] = l.RepositoryName.MAP_COMMENTS,
            r[s.TogglerEnum.GROUP_RESTRICTED_DRIVING_AREAS] = l.RepositoryName.RESTRICTED_DRIVING_AREAS,
            r),
        d = function(e) {
            return u[e] || []
        };

    function h(e, t, n) {
        t === s.TogglerEnum.ITEM_DISALLOWED_TURNS && e.toggleDisallowedTurnsEditor(n),
            d(t).forEach(function(t) {
                return e.setLayerVisibility(t, n)
            })
    }

    function p(e, t, n) {
        var i = c[t];
        i && e.getRepositoryByName(i).setActive(n)
    }

    function g(e, t, n) {
        h(t, n, !1),
            p(e, n, !1),
            function(e, t) {
                switch (t) {
                    case s.TogglerEnum.ITEM_MAP_PROBLEMS:
                    case s.TogglerEnum.ITEM_CLOSED_MAP_PROBLEMS:
                    case s.TogglerEnum.ITEM_PARKING_MAP_PROBLEMS:
                    case s.TogglerEnum.ITEM_PARKING_CLOSED_MAP_PROBLEMS:
                        e.problems.clear({
                                keepUnsaved: !0
                            }),
                            a.onRepositoryCleared(l.RepositoryName.PROBLEMS),
                            a.clearLastFilter(l.RepositoryFilterName.PROBLEMS);
                        break;
                    case s.TogglerEnum.ITEM_UPDATE_REQUESTS:
                    case s.TogglerEnum.ITEM_CLOSED_UPDATE_REQUESTS:
                        e.mapUpdateRequests.clear({
                                keepUnsaved: !0
                            }),
                            a.onRepositoryCleared(l.RepositoryName.MAP_UPDATE_REQUESTS),
                            a.clearLastFilter(l.RepositoryFilterName.MAP_UPDATE_REQUESTS);
                        break;
                    case s.TogglerEnum.ITEM_PLACE_UPDATE_REQUESTS:
                    case s.TogglerEnum.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS:
                    case s.TogglerEnum.ITEM_PARKING_PLACE_UPDATE_REQUESTS:
                    case s.TogglerEnum.ITEM_VENUES:
                    case s.TogglerEnum.ITEM_RESIDENTIAL_PLACES:
                    case s.TogglerEnum.ITEM_PARKING_PLACES:
                        e.venues.clear({
                                keepUnsaved: !0
                            }),
                            a.onRepositoryCleared(l.RepositoryName.VENUES),
                            a.clearLastFilter(l.RepositoryFilterName.VENUES);
                        break;
                    case s.TogglerEnum.ITEM_MAP_COMMENTS:
                        e.mapComments.clear({
                                keepUnsaved: !0
                            }),
                            a.onRepositoryCleared(l.RepositoryName.MAP_COMMENTS);
                        break;
                    case s.TogglerEnum.ITEM_JUNCTION_BOXES:
                        break;
                    case s.TogglerEnum.ITEM_CLOSURES:
                        e.roadClosures.clear({
                                keepUnsaved: !0
                            }),
                            a.onRepositoryCleared(l.RepositoryName.ROAD_CLOSURES);
                        break;
                    case s.TogglerEnum.GROUP_RESTRICTED_DRIVING_AREAS:
                        e.restrictedDrivingAreas.clear({
                                keepUnsaved: !0
                            }),
                            a.onRepositoryCleared(l.RepositoryName.RESTRICTED_DRIVING_AREAS);
                        break;
                    case s.TogglerEnum.ITEM_ROAD:
                    case s.TogglerEnum.ITEM_SPEED_CAMERAS:
                    case s.TogglerEnum.ITEM_HOUSE_NUMBERS:
                    case s.TogglerEnum.ITEM_SATELLITE_IMAGERY:
                    case s.TogglerEnum.ITEM_AREA_MANAGERS:
                    case s.TogglerEnum.ITEM_GPS_POINTS:
                    case s.TogglerEnum.ITEM_LIVE_USERS:
                    case s.TogglerEnum.ITEM_EDITABLE_AREAS:
                    case s.TogglerEnum.ITEM_DISALLOWED_TURNS:
                    case s.TogglerEnum.ITEM_CITY_NAMES:
                    case s.TogglerEnum.ITEM_RESTRICTED_DRIVING_AREAS_NAMES:
                }
            }(e, n)
    }

    function f(e, t, n, i) {
        i ? function(e, t, n) {
            h(t, n, !0),
                p(e, n, !0)
        }(e, t, n) : g(e, t, n)
    }
    t.onTogglerChanged = function(e, t, n, i) {
            f(e, t, n, i)
        },
        t.writeTogglersStateToApp = function(e, t, n) {
            var i = e.getVisibilityState();
            e._eachToggler(e._tree, !0, function(e) {
                var r = e.getId(),
                    s = Boolean(i[r]);
                f(t, n, r, s)
            })
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(238);
    t.bfs = function(e, t, n) {
        var r = [e],
            s = new Map;
        s.set(e.getID(), e.getID());
        for (var o = function() {
                for (var e = r.shift(), o = [i.NodeName.FROM, i.NodeName.TO], a = 0; a < o.length; a++)
                    for (var l = o[a], u = l === i.NodeName.FROM ? "fromNodeID" : "toNodeID", c = e.attributes[u], d = e.getConnectedSegments(l).filter(function(n) {
                            return n.getID() !== e.getID() && t(n)
                        }).map(function(e) {
                            return e
                        }), h = 0; h < d.length; h++) {
                        var p = d[h];
                        if (!s.has(p.getID())) {
                            if (s.set(p.getID(), e.getID()),
                                !c)
                                throw Error("missing node: %{nodeId}");
                            if (n(p, c, l, d, e))
                                return {
                                    value: [p, s]
                                };
                            r.push(p)
                        }
                    }
            }; r.length;) {
            var a = o();
            if ("object" == typeof a)
                return a.value
        }
        return [null, s]
    }
}, function(e, t, n) {
    "use strict";
    var i = n(10),
        r = n.n(i),
        s = OpenLayers.Class(OpenLayers.Handler.Keyboard, {
            initialize: function(e, t, n) {
                OpenLayers.Handler.Keyboard.prototype.initialize.apply(this, arguments)
            },
            destroy: function() {
                OpenLayers.Handler.Keyboard.prototype.destroy.apply(this, arguments)
            },
            handleKeyEvent: function(e) {
                r()(e.target).is(":input") || OpenLayers.Handler.Keyboard.prototype.handleKeyEvent.apply(this, arguments)
            },
            CLASS_NAME: "Waze.Handler.KeyboardShortcut"
        });
    t.a = s
}, function(e, t, n) {
    "use strict";
    var i = n(114),
        r = OpenLayers.Class(OpenLayers.Control, {
            DEFAULTS: {
                tolerance: 15,
                node: !0,
                edge: !0,
                vertex: !0
            },
            greedy: !0,
            precedence: [i.SnappedFeatureType.NODE, i.SnappedFeatureType.VERTEX, i.SnappedFeatureType.EDGE],
            resolution: null,
            geoToleranceCache: null,
            layer: null,
            feature: null,
            snappedFeature: null,
            point: null,
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    this.options = e || {},
                    this.options.layer && this.setLayer(this.options.layer),
                    this.defaults = Object.assign({}, this.DEFAULTS, this.options.defaults),
                    this.setTargets(this.options.targets),
                    0 === this.targets.length && this.layer && this.addTargetLayer(this.layer),
                    this.geoToleranceCache = {}
            },
            setLayer: function(e) {
                this.active ? (this.deactivate(),
                    this.layer = e,
                    this.activate()) : this.layer = e
            },
            setTargets: function(e) {
                if (this.targets = [],
                    e && e.length)
                    for (var t, n = 0, i = e.length; n < i; ++n)
                        (t = e[n]) instanceof OpenLayers.Layer.Vector ? this.addTargetLayer(t) : this.addTarget(t)
            },
            addTargetLayer: function(e) {
                this.addTarget({
                    layer: e
                })
            },
            addTarget: function(e) {
                (e = Object.assign(e, this.defaults, e)).nodeTolerance = e.nodeTolerance || e.tolerance,
                    e.vertexTolerance = e.vertexTolerance || e.tolerance,
                    e.edgeTolerance = e.edgeTolerance || e.tolerance,
                    this.targets.push(e)
            },
            removeTargetLayer: function(e) {
                for (var t, n = this.targets.length - 1; n >= 0; --n)
                    (t = this.targets[n]).layer === e && this.removeTarget(t)
            },
            removeTarget: function(e) {
                return OpenLayers.Util.removeItem(this.targets, e)
            },
            activate: function() {
                var e = OpenLayers.Control.prototype.activate.call(this);
                return e && this.layer && this.layer.events && this.layer.events.on({
                        sketchstarted: this.onSketchModified,
                        sketchmodified: this.onSketchModified,
                        vertexmodified: this.onVertexModified,
                        scope: this
                    }),
                    e
            },
            deactivate: function() {
                var e = OpenLayers.Control.prototype.deactivate.call(this);
                return e && this.layer && this.layer.events && this.layer.events.un({
                        sketchstarted: this.onSketchModified,
                        sketchmodified: this.onSketchModified,
                        vertexmodified: this.onVertexModified,
                        scope: this
                    }),
                    this.feature = null,
                    this.snappedFeature = null,
                    this.point = null,
                    e
            },
            onSketchModified: function(e) {
                this.feature = e.feature,
                    this.considerSnapping(e.vertex, e.vertex)
            },
            onVertexModified: function(e) {
                this.feature = e.feature;
                var t = this.layer.map.getLonLatFromViewPortPx(e.pixel);
                this.considerSnapping(e.vertex, new OpenLayers.Geometry.Point(t.lon, t.lat))
            },
            considerSnapping: function(e, t) {
                for (var n, i, r = {
                        rank: Number.POSITIVE_INFINITY,
                        dist: Number.POSITIVE_INFINITY,
                        x: null,
                        y: null
                    }, s = !1, o = 0, a = this.targets.length; o < a; ++o)
                    if (i = this.targets[o],
                        n = this.testTarget(i, t)) {
                        if (this.greedy) {
                            (r = n).target = i,
                                s = !0;
                            break
                        }
                        (n.rank < r.rank || n.rank === r.rank && n.dist < r.dist) && ((r = n).target = i,
                            s = !0)
                    }
                s && (!1 !== this.events.triggerEvent("beforesnap", {
                    point: e,
                    x: r.x,
                    y: r.y,
                    distance: r.dist,
                    layer: r.target.layer,
                    snapType: this.precedence[r.rank]
                }) ? (this.snappedFeature = {
                        feature: r.feature,
                        distance: r.dist,
                        type: this.precedence[r.rank],
                        point: new OpenLayers.Geometry.Point(r.x, r.y)
                    },
                    e.x = r.x,
                    e.y = r.y,
                    this.point = e,
                    this.events.triggerEvent("snap", {
                        point: e,
                        feature: r.feature,
                        snapType: this.precedence[r.rank],
                        layer: r.target.layer,
                        distance: r.dist
                    })) : s = !1);
                this.point && !s && (e.x = t.x,
                    e.y = t.y,
                    this.point = null,
                    this.snappedFeature = null,
                    this.events.triggerEvent("unsnap", {
                        point: e
                    }))
            },
            testTarget: function(e, t) {
                for (var n, r, s, o, a, l, u, c = {
                        node: this.getGeoTolerance(e.nodeTolerance),
                        vertex: this.getGeoTolerance(e.vertexTolerance),
                        edge: this.getGeoTolerance(e.edgeTolerance)
                    }, d = Math.max(c.node, c.vertex, c.edge), h = {
                        rank: Number.POSITIVE_INFINITY,
                        dist: Number.POSITIVE_INFINITY
                    }, p = !1, g = e.layer.features, f = this.precedence.length, m = new OpenLayers.LonLat(t.x, t.y), v = 0, _ = g.length; v < _; ++v)
                    if ((n = g[v]) !== this.feature && !n._sketch && n.state !== OpenLayers.State.DELETE && n.model && !n.model.isDeleted() && (!e.filter || e.filter.evaluate(n)) && n.atPoint(m, d, d))
                        for (var y = 0, b = Math.min(h.rank + 1, f); y < b; ++y)
                            if (e[r = this.precedence[y]])
                                if (r === i.SnappedFeatureType.EDGE) {
                                    if ((l = (a = n.geometry.distanceTo(t, {
                                            details: !0
                                        })).distance) <= c[r] && l < h.dist) {
                                        h = {
                                                feature: n,
                                                rank: y,
                                                dist: l,
                                                x: a.x0,
                                                y: a.y0
                                            },
                                            p = !0;
                                        break
                                    }
                                } else {
                                    u = !1;
                                    for (var E = 0, w = (s = n.geometry.getVertices(r === i.SnappedFeatureType.NODE)).length; E < w; ++E)
                                        (l = (o = s[E]).distanceTo(t)) <= c[r] && (y < h.rank || y === h.rank && l < h.dist) && (h = {
                                                feature: n,
                                                rank: y,
                                                dist: l,
                                                x: o.x,
                                                y: o.y
                                            },
                                            p = !0,
                                            u = !0);
                                    if (u)
                                        break
                                }
                return p ? h : null
            },
            getGeoTolerance: function(e) {
                var t = this.layer.map.getResolution();
                t !== this.resolution && (this.resolution = t,
                    this.geoToleranceCache = {});
                var n = this.geoToleranceCache[e];
                return void 0 === n && (n = e * t,
                        this.geoToleranceCache[e] = n),
                    n
            },
            destroy: function() {
                this.active && this.deactivate(),
                    delete this.layer,
                    delete this.targets,
                    OpenLayers.Control.prototype.destroy.call(this)
            },
            CLASS_NAME: "Waze.Control.Snapping"
        });
    t.a = r
}, function(e, t, n) {
    "use strict";
    var i = n(13),
        r = n.n(i),
        s = n(8),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(1),
        c = n.n(u),
        d = n(5),
        h = n.n(d),
        p = n(3),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(27),
        _ = n.n(v),
        y = n(29),
        b = n.n(y),
        E = n(44),
        w = n.n(E),
        S = n(38),
        k = n.n(S),
        T = n(62),
        I = n(39),
        A = function(e) {
            function t(e, n) {
                var i, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return l()(this, t),
                    (i = h()(this, g()(t).call(this, r)))._segment = e,
                    i._direction = n,
                    i._laneCount = r.laneCount,
                    i._turnLaneDatas = r.turnLaneDatas || {},
                    i
            }
            return m()(t, e),
                c()(t, [{
                    key: "doAction",
                    value: function() {
                        this._shouldUpdateLaneCount(this._laneCount) && this._updateSegmentLaneCount(this._segment, this._direction, this._laneCount),
                            this._updateTurnLanes(this._segment, this._direction, this._turnLaneDatas)
                    }
                }, {
                    key: "_shouldUpdateLaneCount",
                    value: function(e) {
                        return null != e
                    }
                }, {
                    key: "_updateSegmentLaneCount",
                    value: function(e, t, n) {
                        var i = t === T.SEGMENT_LANE_DIRECTION.FWD ? "fwdLaneCount" : "revLaneCount";
                        this.doSubAction(new b.a(e, o()({}, i, n)))
                    }
                }, {
                    key: "_updateTurnLanes",
                    value: function(e, t, n) {
                        var i = this,
                            s = t === T.SEGMENT_LANE_DIRECTION.FWD ? k.a.forwardOf(e.getID()) : k.a.reverseOf(e.getID());
                        Object.entries(n).forEach(function(e) {
                            var t = r()(e, 2),
                                n = t[0],
                                o = t[1],
                                a = i.model.getTurnGraph().getTurn(s, k.a.fromID(n));
                            i._updateTurn(a, o)
                        })
                    }
                }, {
                    key: "_updateTurn",
                    value: function(e, t) {
                        var n = e.getTurnData().withLanes(t),
                            i = e.withTurnData(n);
                        this.doSubAction(new w.a(this.model.getTurnGraph(), i))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._segment]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = 0 === this._segment.getLaneCount(this._direction);
                        this._description = Object(I.formatActionAddressDescription)(this._segment, e ? "AddLanes" : "UpdateLanes")
                    }
                }]),
                t
        }(_.a);
    t.a = A
}, function(e, t, n) {
    "use strict";
    var i = n(8),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(4),
        m = n.n(f),
        v = n(175);
    n(395),
        n(396);

    function _(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var y = function(e) {
        function t(e, n) {
            var i, s = e.map,
                a = e.lonlat,
                l = e.element;
            o()(this, t),
                (i = c()(this, h()(t).call(this))).map = s,
                i.lonlat = a,
                i.element = l;
            var u = i._getTippyElement();
            return i.tip = v.default.one(u, function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? _(Object(n), !0).forEach(function(t) {
                            r()(e, t, n[t])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : _(Object(n)).forEach(function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                        })
                    }
                    return e
                }({}, i._getTippyOptions(), {}, n)),
                i._bindEvents(),
                i
        }
        return g()(t, e),
            l()(t, [{
                key: "_getTippyOptions",
                value: function() {
                    var e = document.getElementById("map");
                    return {
                        allowHTML: !0,
                        performance: !0,
                        arrow: !0,
                        arrowType: "sharp",
                        theme: "light-border",
                        content: "",
                        trigger: this._isElement() ? "mouseenter" : "manual",
                        size: "large",
                        appendTo: document.getElementById("map"),
                        popperOptions: {
                            modifiers: {
                                preventOverflow: {
                                    enabled: !0,
                                    boundariesElement: e,
                                    padding: 30
                                }
                            }
                        }
                    }
                }
            }, {
                key: "_bindEvents",
                value: function() {
                    this.map.events.register("movestart", this, this._onMapMoveStart),
                        this.listenTo(W.editingMediator, "change:editingEnabled", this._onEditingChange),
                        this.listenTo(W.editingMediator, "change:editingHouseNumbers", this._onEditingHouseNumbersChange)
                }
            }, {
                key: "_unbindEvents",
                value: function() {
                    this.map.events.unregister("movestart", this, this._onMapMoveStart)
                }
            }, {
                key: "onBeforeDestroy",
                value: function() {
                    this.hide(),
                        this._unbindEvents(),
                        this.tip.destroy(!0)
                }
            }, {
                key: "_onMapMoveStart",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "_onEditingChange",
                value: function() {
                    W.editingMediator.get("editingEnabled") || this.destroy()
                }
            }, {
                key: "_onEditingHouseNumbersChange",
                value: function() {
                    W.editingMediator.get("editingHouseNumbers") && this.destroy()
                }
            }, {
                key: "_isElement",
                value: function() {
                    return null != this.element
                }
            }, {
                key: "_getTippyElement",
                value: function() {
                    return this._isElement() ? this.element : this._getVirtualReference(this.lonlat)
                }
            }, {
                key: "_getVirtualReference",
                value: function(e) {
                    var t = this.map.getPixelFromLonLat(e);
                    return {
                        getBoundingClientRect: function() {
                            return {
                                width: 1,
                                height: 1,
                                top: t.y,
                                left: t.x,
                                right: t.x + 1,
                                bottom: t.y + 1
                            }
                        },
                        clientHeight: 1,
                        clientWidth: 1
                    }
                }
            }, {
                key: "show",
                value: function() {
                    this.tip.show()
                }
            }, {
                key: "hide",
                value: function() {
                    this.tip.hide()
                }
            }]),
            t
    }(m.a.Object);
    t.a = y
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(27)),
        c = a(n(15)),
        d = a(n(66)),
        h = a(n(98)),
        p = a(n(84)),
        g = l(n(12)),
        f = a(n(248)),
        m = a(n(256)),
        v = n(20),
        _ = n(87),
        y = n(114),
        b = function(e) {
            function t(t, n, i, r, s) {
                var o = e.call(this, s) || this;
                return o._node = t,
                    o._oldGeometry = g.cloneGeometry(n),
                    o._newGeometry = g.cloneGeometry(i),
                    o._origSegGeometries = r,
                    o
            }
            return r(t, e),
                t.prototype._updateSegmentGeometry = function(e) {
                    var t = g.cloneGeometry(e.geometry);
                    if (this._node.getID() === e.attributes.fromNodeID && (t.components[0] = g.cloneGeometry(this._newGeometry)),
                        this._node.getID() === e.attributes.toNodeID) {
                        var n = t.components.length - 1;
                        t.components[n] = g.cloneGeometry(this._newGeometry)
                    }
                    this.doSubAction(new p.default(e, this.model.segments, this._origSegGeometries[e.getID()], t))
                },
                t.prototype._getConnectedSegments = function() {
                    var e = this;
                    return this._node.getSegmentIds().map(function(t) {
                        return e.model.segments.getObjectById(t)
                    }).filter(function(e) {
                        return null != e
                    })
                },
                t.prototype._moveConnectedSegments = function() {
                    var e = this;
                    this._getConnectedSegments().forEach(function(t) {
                        return e._updateSegmentGeometry(t)
                    })
                },
                t.prototype._moveNode = function() {
                    this.doSubAction(new p.default(this._node, this.model.nodes, this._oldGeometry, this._newGeometry))
                },
                t.prototype._handleLanes = function() {
                    var e = this;
                    this._resetNodeLaneAngles(this._node),
                        this._getConnectedSingleLineSegments().forEach(function(t) {
                            var n = t.getOtherNode(e._node);
                            null != n && e._resetNodeLaneAngles(n)
                        })
                },
                t.prototype._resetNodeLaneAngles = function(e) {
                    new f.default(this.model, e).supportsLanes() && this.doSubAction(new m.default(e))
                },
                t.prototype._getConnectedSingleLineSegments = function() {
                    return this._getConnectedSegments().filter(function(e) {
                        return 2 === v.getVerticesCount(e.geometry)
                    })
                },
                t.prototype._handleTouchingSegment = function(e) {
                    var t = this,
                        n = e.feature,
                        i = this._node.getSegmentIds().map(function(e) {
                            return t.model.segments.getObjectById(e)
                        }),
                        r = new _.SegmentsRoadTypeUseCase(i).isWalkingRoadType();
                    n.isDrivable() && r ? this.doSubAction(new d.default(this._node, n, {
                        virtual: !0
                    })) : this.doSubAction(new h.default(e.feature, {
                        splitNode: this._node,
                        splitAtPoint: e.point,
                        splittingPointDistance: e.distance
                    }))
                },
                t.prototype._handleTouchingFeatures = function() {
                    var e;
                    if (!this.snappedFeatures)
                        return !1;
                    if ((e = this.snappedFeatures).feature.type === c.default.SEGMENT)
                        if (e.type === y.SnappedFeatureType.EDGE || e.type === y.SnappedFeatureType.VERTEX)
                            this._handleTouchingSegment(e);
                        else if (e.type === y.SnappedFeatureType.NODE) {
                        var t = e.feature;
                        this.doSubAction(new d.default(this._node, t))
                    }
                },
                t.prototype.doAction = function() {
                    this._moveNode(),
                        this._moveConnectedSegments(),
                        this._handleTouchingFeatures(),
                        this._handleLanes()
                },
                t.prototype.getAffectedUniqueIds = function() {
                    var e = this,
                        t = this._node.getSegmentIds().map(function(t) {
                            return e.model.segments.getObjectById(t)
                        }).filter(function(e) {
                            return null != e
                        }).map(function(e) {
                            return e.getUniqueID()
                        });
                    return o(t, [this._node.getUniqueID()])
                },
                t.prototype.getFocusFeatures = function() {
                    return o([this._node], this._getConnectedSegments())
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.MoveNode")
                },
                t
        }(u.default);
    t.default = b
}, function(e, t, n) {
    e.exports = n.p + "img/location-pind4426679972686c37b0545f557b8d0b7.png"
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e() {
            var e = document.createElement("div");
            this.autoCompleteService = new google.maps.places.AutocompleteService,
                this.placesService = new google.maps.places.PlacesService(e)
        }
        return e.generateSessionToken = function() {
                return new google.maps.places.AutocompleteSessionToken
            },
            e.prototype.getPredictions = function(e) {
                var t = this;
                return new Promise(function(n, i) {
                    t.autoCompleteService.getPlacePredictions(e, function(e, t) {
                        (function(e) {
                            var t = google.maps.places.PlacesServiceStatus,
                                n = t.OK,
                                i = t.ZERO_RESULTS;
                            return e === n || e === i
                        })(t) ? n(e || []): i(new Error('Failed getting place predictions from auto complete service. status: "' + t + '"'))
                    })
                })
            },
            e.prototype.getPlaceDetails = function(e, t, n) {
                var i = this,
                    r = {
                        placeId: e,
                        fields: t,
                        sessionToken: n
                    };
                return new Promise(function(e, t) {
                    i.placesService.getDetails(r, function(n, i) {
                        i === google.maps.places.PlacesServiceStatus.OK ? e(n) : t(new Error("failed getting place details"))
                    })
                })
            },
            e
    }();
    t.GooglePlacesService = i
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t(t, n, i, r) {
            var s = e.call(this, r) || this;
            return s.venue = t,
                s.request = n,
                s.approved = i,
                s.prevApproved = null,
                s
        }
        return r(t, e),
            t.prototype.doAction = function() {
                return this.prevApproved = this.request.get("approved"),
                    this.request.set({
                        approved: this.approved
                    }),
                    this.model.venues.changed(this.venue)
            },
            t.prototype.undoAction = function() {
                return this.request.set({
                        approved: this.prevApproved
                    }),
                    this.model.venues.changed(this.venue)
            },
            t.prototype.redoAction = function() {
                return this.request.set({
                        approved: this.approved
                    }),
                    this.model.venues.changed(this.venue)
            },
            t.prototype.serialize = function() {
                return {
                    _objectType: "venueUpdateRequest",
                    action: "UPDATE",
                    attributes: {
                        venueID: this.venue.getID(),
                        id: this.request.id,
                        approve: this.approved
                    }
                }
            },
            t.prototype.getAffectedUniqueIds = function() {
                return [this.venue.getUniqueID()]
            },
            t.prototype.getFocusFeatures = function() {
                return [this.venue]
            },
            t.prototype.generateDescription = function() {
                !0 === this.approved ? this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.approved") : !1 === this.approved ? this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.rejected") : null === this.approved && (this._description = I18n.t("save.changes_log.actions.UpdatePlaceUpdate.reopened"))
            },
            t
    }(s(n(41)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i = n(2),
        r = n.n(i),
        s = n(5),
        o = n.n(s),
        a = n(3),
        l = n.n(a),
        u = n(1),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(4),
        g = n.n(p),
        f = n(73),
        m = function(e) {
            function t(e) {
                var n;
                r()(this, t),
                    n = o()(this, l()(t).call(this, e));
                var i = e.imageId,
                    s = e.images,
                    a = e.canDelete,
                    u = e.canScroll,
                    c = e.venueName;
                return n.images = s,
                    n.venueName = c,
                    n.image = n.images.find(function(e) {
                        return e.id === i
                    }),
                    n.canDelete = a,
                    n.canScroll = u,
                    n.currentImageIndex = n._getCurrentImageIndex(),
                    n
            }
            return h()(t, e),
                c()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .prev-button": "onPrevClicked",
                            "click .next-button": "onNextClicked",
                            "click .delete-button": "onDeleteClicked"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/place_updates/image_dialog"
                    }
                }]),
                c()(t, [{
                    key: "templateContext",
                    value: function() {
                        return {
                            imageUrl: this.image.getUrl(f.IMAGE_SIZE.BIG),
                            dateAdded: this.image.get("date"),
                            addingUserId: this.image.get("creatorUserId"),
                            venueName: this.venueName,
                            hasNext: this.hasNext(),
                            hasPrev: this.hasPrev(),
                            showDelete: this.canDelete
                        }
                    }
                }, {
                    key: "_getCurrentImageIndex",
                    value: function() {
                        return this.images.indexOf(this.image)
                    }
                }, {
                    key: "hasNext",
                    value: function() {
                        return this.canScroll && this.images.length - 1 > this.currentImageIndex
                    }
                }, {
                    key: "hasPrev",
                    value: function() {
                        return this.canScroll && this.currentImageIndex > 0
                    }
                }, {
                    key: "onPrevClicked",
                    value: function() {
                        var e = this.images;
                        this.currentImageIndex > 0 && (this.currentImageIndex--,
                            this.image = e[this.currentImageIndex],
                            this.render())
                    }
                }, {
                    key: "onNextClicked",
                    value: function() {
                        var e = this.images,
                            t = e.length;
                        this.currentImageIndex < t - 1 && (this.currentImageIndex++,
                            this.image = e[this.currentImageIndex],
                            this.render())
                    }
                }, {
                    key: "setImages",
                    value: function(e) {
                        this.images = e,
                            this.currentImageIndex > e.length - 1 && (this.currentImageIndex = e.length - 1),
                            this.image = e[this.currentImageIndex],
                            this.render()
                    }
                }, {
                    key: "onDeleteClicked",
                    value: function() {
                        this.trigger("deleteImageClicked", this.image.id)
                    }
                }]),
                t
        }(g.a.View);
    t.a = m
}, function(e, t, n) {
    "use strict";
    n.d(t, "b", function() {
        return c
    });
    var i = n(24),
        r = n(212),
        s = n.n(r),
        o = n(422),
        a = n.n(o),
        l = n(423),
        u = n.n(l),
        c = {
            dragPoint: {
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 6,
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 1
            },
            middleDragPoint: {
                strokeWidth: 2,
                fillOpacity: .6,
                strokeColor: "#00ece3",
                pointRadius: 4,
                fillColor: "white",
                graphicZIndex: 1
            },
            fromNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "A",
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 2
            },
            toNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "B",
                fillColor: "white",
                fillOpacity: 1,
                graphicZIndex: 2
            },
            regularNodeDragPoint: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "#00ece3",
                fillColor: "white",
                fillOpacity: 1,
                strokeWidth: 3,
                graphicZIndex: 2
            },
            virtualNodeDragPoint: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "white",
                fillColor: "#00ece3",
                fillOpacity: 1,
                strokeWidth: 3,
                strokeDashstyle: "3,5",
                graphicZIndex: 2
            },
            cameraRotator: {
                pointRadius: 7,
                strokeOpacity: 1,
                strokeColor: "#aaaaaa",
                fillColor: "#ff3300",
                fillOpacity: 1,
                strokeWidth: 2
            },
            highlightPlaceHolder: {
                strokeColor: "transparent",
                strokeOpacity: 0,
                strokeWidth: 30,
                graphicZIndex: 0
            },
            arrowOneWayStandard: {
                externalGraphic: s.a,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            },
            arrowOneWayRestricted: {
                externalGraphic: a.a,
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            },
            arrowTwoWayRestricted: {
                externalGraphic: u.a,
                rotation: "${angle}",
                graphicWidth: 5,
                graphicHeight: 5,
                graphicOpacity: 1,
                graphicZIndex: 0,
                pointerEvents: "none"
            }
        },
        d = Object.keys(c).map(function(e) {
            return Object(i.b)("_".concat(e), !0, c[e])
        });
    d.push(Object(i.b)("uneditable", !0, {
            fillColor: "#cecece",
            strokeColor: "#aeaeae"
        })),
        t.a = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: d
            }),
            highlight: new OpenLayers.Style(null, {
                rules: d
            })
        })
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-standard36b7901c37f65cd4308d73998cb62a94.png"
}, , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = W.Config.livemap;
    t.getLiveMapLinkFromCenter = function(e) {
        var t = Math.min(i.max_zoom, e.zoom + i.zoom_offset),
            n = new URLSearchParams({
                lon: e.lon.toFixed(W.Config.units.lonLatPrecision),
                lat: e.lat.toFixed(W.Config.units.lonLatPrecision),
                zoom: String(t),
                overlay: String(!1)
            }).toString();
        return i.url + "?" + n
    }
}, function(e, t, n) {
    "use strict";
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(10),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = function() {
            function e(t) {
                return r()(this, e),
                    this.copied = null,
                    this.clipboardActive = !1,
                    this.$clipboardEl = null,
                    this.$clipboardContainer = null,
                    this.$el = t,
                    this.events = new OL.Events(this),
                    this
            }
            return o()(e, [{
                    key: "setEl",
                    value: function(e) {
                        return this.$el = e,
                            this.$el.on({
                                mouseover: this._onMouseOver.bind(this),
                                mouseout: this._onMouseOut.bind(this),
                                scope: this
                            })
                    }
                }, {
                    key: "_onMouseOver",
                    value: function() {
                        return l()(document).on({
                            keydown: this._onKeyDown.bind(this),
                            keyup: this._onKeyUp.bind(this)
                        })
                    }
                }, {
                    key: "_onMouseOut",
                    value: function() {
                        return l()(document).off({
                                keydown: this._onKeyDown.bind(this),
                                keyup: this._onKeyUp.bind(this)
                            }),
                            this._detachClipboard()
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        var t = this;
                        if (this.copied = !1,
                            this.value && (e.ctrlKey || e.metaKey) && (67 === e.keyCode && (this.copied = !0),
                                !l()(e.target).is("input:visible,textarea:visible")))
                            return c.a.defer(function() {
                                null == t.$clipboardContainer && (t.$clipboardContainer = l()("<div class='clipboard-container'></div>")),
                                    t.$clipboardContainer.appendTo(l()(document.body)),
                                    t.$clipboardContainer.empty().show(),
                                    t.$clipboardEl = l()("<textarea />").val(t.value).appendTo(t.$clipboardContainer).focus().select(),
                                    t.clipboardActive = !0
                            })
                    }
                }, {
                    key: "_onKeyUp",
                    value: function(e) {
                        l()(e.target).is(this.$clipboardEl) && (this.copied && this.events.triggerEvent("copied", this.$clipboardEl.val()),
                                this._detachClipboard()),
                            this.copied = !1
                    }
                }, {
                    key: "_detachClipboard",
                    value: function() {
                        this.clipboardActive && (this.$clipboardContainer.empty().detach(),
                            this.clipboardActive = !1)
                    }
                }, {
                    key: "set",
                    value: function(e) {
                        this.value = e
                    }
                }]),
                e
        }();
    t.a = d
}, function(e, t, n) {
    "use strict";
    var i = n(10),
        r = n.n(i),
        s = n(4),
        o = n.n(s),
        a = o.a.Region.extend({
            constructor: function() {
                this.el || this._createContainer(),
                    o.a.Region.prototype.constructor.apply(this, arguments)
            },
            initialize: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (this.saveButtonSelector = t.saveButtonSelector,
                    !this.saveButtonSelector)
                    throw new Error("Popover region initialized without the saveButtonSelector options");
                return this.$container.on("click", ".close-popover", function() {
                    return e.empty()
                })
            },
            show: function(e) {
                return e.$el.addClass("save-popover"),
                    this.$container.addClass("shrunk"),
                    o.a.Region.prototype.show.apply(this, arguments)
            },
            onShow: function() {
                return this._positionContainer(),
                    this.$container.removeClass("shrunk")
            },
            _createContainer: function() {
                this.$container = this.el = r()("<div />").attr({
                    class: "save-popover-container"
                }).appendTo("body")
            },
            _positionContainer: function() {
                var e = r()(this.saveButtonSelector)[0].getBoundingClientRect(),
                    t = this.$container[0];
                return this.$container.css({
                    top: e.top + e.height,
                    left: e.left - t.offsetWidth + e.width
                })
            }
        });
    t.a = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(27)),
        a = s(n(29)),
        l = s(n(124)),
        u = s(n(142)),
        c = function(e) {
            function t(t, n, i) {
                var r = e.call(this, i) || this;
                return r.segment = t,
                    r.attributes = n,
                    r
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e = this.segment.getAddress();
                    if (null == e.getStreet() || e.isEmptyStreet())
                        return !1;
                    var t = new l.default(e.getState(), e.getCountry(), this.attributes.cityName, this.attributes.emptyCity);
                    this.doSubAction(t);
                    var n = t.city,
                        i = new u.default(this.attributes.streetName, n, this.attributes.emptyStreet);
                    this.doSubAction(i);
                    var r = i.getStreet();
                    if (this.segment.attributes.streetIDs.includes(r.getID()))
                        return !1;
                    this.doSubAction(new a.default(this.segment, {
                        streetIDs: this.segment.attributes.streetIDs.concat(r.getID())
                    }))
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.segment]
                },
                t
        }(o.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = s(n(4)),
        l = n(23),
        u = s(n(64)),
        c = n(773),
        d = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype._generateCityOptions = function() {
                    this.cityOptions = c.generateCityOptions(this.dataModel)
                },
                t.prototype._generateStreetOptions = function() {
                    this.streetOptions = c.generateStreetOptions(this.dataModel, this._getSelectedCity())
                },
                t.prototype._getSelectedCity = function() {
                    var e;
                    if (this._shouldSelectCityById())
                        e = {
                            id: this.model.get("cityID")
                        };
                    else {
                        e = this.model.get("emptyCity") ? {
                            isEmpty: !0
                        } : {
                            name: this.model.get("cityName")
                        };
                        var t = this.model.get("stateID");
                        this.showStatesSelection && t && (e.stateID = t);
                        var n = this.model.get("countryID");
                        n && (e.countryID = n)
                    }
                    return u.default.citiesByAttributes(this.dataModel, e)[0]
                },
                t.prototype._shouldSelectCityById = function() {
                    return (this.showCitySelection || this.model.get("citySelectedById")) && !this.model.get("emptyCity")
                },
                t.prototype._initCityInput = function() {
                    var e = this;
                    return this._generateCityOptions(),
                        this.listenTo(this.dataModel.cities, l.UPDATED, function() {
                            e._generateCityOptions()
                        })
                },
                t.prototype._renderCityNameInput = function() {
                    var e = this;
                    this._generateCityOptions(),
                        this.ui.cityNameInput.typeahead({
                            source: function(t, n) {
                                n(e.cityOptions)
                            },
                            displayText: function(e) {
                                return o.default.escape(e.label)
                            },
                            afterSelect: function(t) {
                                var n = e.dataModel.cities.getObjectById(t.value);
                                if (null === n)
                                    throw new Error("city: " + t.value + " does not exist");
                                e.model.set({
                                    emptyCity: !1,
                                    cityID: t.value,
                                    cityName: n.getName(),
                                    citySelectedById: !0
                                })
                            }
                        })
                },
                t.prototype._initStreetInput = function() {
                    var e = this;
                    this._generateStreetOptions(),
                        this.listenTo(this.dataModel.streets, l.UPDATED, function() {
                            e._generateStreetOptions()
                        }),
                        this.listenTo(this.model, "change:cityID change:cityName", function() {
                            e._updateEmptyCityIfNeeded(),
                                e._generateStreetOptions()
                        }),
                        this.listenTo(this.model, "change:emptyCity", function() {
                            e._generateStreetOptions()
                        })
                },
                t.prototype._updateEmptyCityIfNeeded = function() {
                    var e = this.model.get("emptyCity"),
                        t = this._getSelectedCity();
                    if (t) {
                        var n = t.attributes.isEmpty,
                            i = this.model.get("citySelectedById");
                        !e && n && i && this.model.set("emptyCity", !0)
                    }
                },
                t.prototype._renderStreetNameInput = function() {
                    var e = this;
                    this.ui.streetNameInput.typeahead({
                        source: function(t, n) {
                            n(e.streetOptions)
                        },
                        displayText: function(e) {
                            return o.default.escape(e.label)
                        },
                        afterSelect: function(t) {
                            var n = e.dataModel.streets.getObjectById(t.value);
                            if (null === n)
                                throw new Error("street: " + t.value + " does not exist");
                            var i = e.dataModel.cities.getObjectById(n.cityID);
                            if (null === i)
                                throw new Error("city: " + n.cityID + " does not exist");
                            e.model.set({
                                emptyStreet: !1,
                                emptyCity: i.isEmpty(),
                                cityID: i.getID(),
                                cityName: i.getName(),
                                streetName: n.name,
                                citySelectedById: !0
                            })
                        }
                    })
                },
                t.prototype.onRender = function() {
                    this.stickit(),
                        this._renderCityNameInput(),
                        this._renderStreetNameInput()
                },
                t
        }(a.default.View);
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = [1, 2, 3, 4, 5],
        a = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.defaults = function() {
                    return {
                        fromHour: "09:00",
                        toHour: "17:00",
                        days: o.concat(),
                        isAllDay: !1
                    }
                },
                t.prototype.validate = function(e) {
                    var t = [],
                        n = e.fromHour,
                        i = e.toHour,
                        r = e.days,
                        s = e.isAllDay;
                    0 === r.length && t.push(I18n.t("edit.landmark.opening_hours.errors.days"));
                    var o = Date.parseExact(n, "H:mm"),
                        a = Date.parseExact(i, "H:mm");
                    if (s || (null == o && t.push(I18n.t("edit.landmark.opening_hours.errors.fromHour")),
                            null == a && t.push(I18n.t("edit.landmark.opening_hours.errors.toHour")),
                            Number(o) === Number(a) && t.push(I18n.t("edit.landmark.opening_hours.errors.same"))),
                        t.length > 0)
                        return t
                },
                t
        }(s(n(7)).default.Model);
    t.OpeningHourViewModel = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(7)),
        a = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t
        }(o.default.Model);
    t.Item = a;
    var l = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t
    }(o.default.Collection);
    t.Collection = l
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(88),
        r = n(53),
        s = n(87),
        o = n(109),
        a = n(45),
        l = function() {
            function e(e, t) {
                this.selection = t,
                    this.dataModel = e,
                    this.segmentReducer = new a.SegmentReducer(this.selection.getSelectedSegments(), new o.SegmentDirectionalReader(this.selection))
            }
            return e.prototype.canEditDirection = function() {
                    var e = new s.SegmentsRoadTypeUseCase(this.selection.getSelectedSegments()),
                        t = new r.SegmentsBigJunctionUseCase(this.dataModel, this.selection.getSelectedSegments());
                    return e.isDrivable() && !t.isInBigJunction() && new i.SegmentsBaseAttributesUseCase(this.selection.getSelectedSegments()).arePropertiesEditable()
                },
                e.prototype.getDirection = function() {
                    return this.segmentReducer.reduceDirection()
                },
                e.prototype.isForward = function() {
                    return this.segmentReducer.reduceFwdDirection()
                },
                e.prototype.isReverse = function() {
                    return this.segmentReducer.reduceRevDirection()
                },
                e.prototype.allowNoDirection = function() {
                    return this.segmentReducer.reduceAllowNoDirection()
                },
                e
        }();
    t.SegmentsDirectionUseCase = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(124)),
        a = s(n(142)),
        l = s(n(27)),
        u = s(n(65)),
        c = function(e) {
            function t(t, n) {
                var i = e.call(this, n) || this;
                return i.landmark = t,
                    i
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e = null;
                    if (!this.landmark.isPoint() && !this.landmark.is2D())
                        return !1;
                    if (this.model.getTopCityId() && (e = this.model.cities.getObjectById(this.model.getTopCityId())),
                        null === e && null !== this.model.getTopCountry()) {
                        var t = new o.default(this.model.getTopState(), this.model.getTopCountry(), "", !0);
                        this.doSubAction(t),
                            e = t.city
                    }
                    if (null !== e) {
                        var n = new a.default("", e, !0);
                        this.doSubAction(n);
                        var i = n.getStreet();
                        this.landmark.attributes.streetID = i.getID()
                    }
                    var r = new u.default(this.landmark, this.model.venues, {});
                    return this.doSubAction(r),
                        !0
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.landmark]
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.AddLandmark")
                },
                t
        }(l.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = s(n(27)),
        l = s(n(29)),
        u = n(238),
        c = {
            ADD_JUNCTION_TO_SEGMENT: "ADD_JUNCTION_TO_SEGMENT",
            REMOVE_JUNCTION_FROM_SEGMENT: "REMOVE_JUNCTION_FROM_SEGMENT"
        };
    t.UPDATE_BIG_JUNCTION_TYPES = c;
    var d = function(e) {
        function t(t, n, i, r) {
            var s = e.call(this, r) || this;
            return s.bigJunctionID = t,
                s.segments = n,
                s.actiontype = i,
                s.connectedSegments = null,
                s
        }
        return r(t, e),
            t.prototype.doAction = function() {
                var e = this._updateConnectedSegments(this.segments, u.NodeName.FROM),
                    t = this._updateConnectedSegments(this.segments, u.NodeName.TO);
                this.connectedSegments = e.concat(t)
            },
            t.prototype._updateConnectedSegments = function(e, t) {
                for (var n = [], i = 0; i < e.length; i++) {
                    var r = e[i],
                        s = t + "NodeID",
                        a = r.attributes[s],
                        d = r.getConnectedSegmentsByDirection(t);
                    n.concat(d);
                    for (var h = 0; h < d.length; h++) {
                        var p = d[h];
                        if (p.isDrivable()) {
                            var g = {},
                                f = (p.attributes.fromNodeID === a ? u.NodeName.FROM : u.NodeName.TO) + "Crossroads",
                                m = o.default.clone(p.attributes[f]);
                            c.ADD_JUNCTION_TO_SEGMENT === this.actiontype ? m.includes(this.bigJunctionID) || m.push(this.bigJunctionID) : m = o.default.without(m, this.bigJunctionID),
                                g[f] = m,
                                this.doSubAction(new l.default(p, g, {
                                    dontSerialize: !0
                                }))
                        }
                    }
                }
                return n
            },
            t.prototype.getFocusFeatures = function() {
                var e = this.model.bigJunctions.getObjectById(this.bigJunctionID);
                return e ? [e] : []
            },
            t.prototype.getAffectedUniqueIds = function() {
                var e = this.model.bigJunctions.getObjectById(this.bigJunctionID),
                    t = this.segments.map(function(e) {
                        return e.getUniqueID()
                    });
                return e && t.push(e.getUniqueID()),
                    t
            },
            t.prototype.generateDescription = function() {
                this._description = I18n.t("save.changes_log.actions.UpdateBigJunctionConnectedSegments")
            },
            t
    }(a.default);
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(0),
        g = n.n(p),
        f = n(27),
        m = n.n(f),
        v = n(132),
        _ = n(98),
        y = n(131),
        b = n.n(y),
        E = n(91),
        w = n.n(E),
        S = n(44),
        k = n.n(S),
        T = n(66),
        I = n.n(T),
        A = n(83),
        M = n(65),
        O = n.n(M),
        C = n(29),
        R = n.n(C),
        D = n(26),
        L = n.n(D),
        P = n(38),
        N = n.n(P),
        x = n(81),
        V = n(170),
        j = n.n(V),
        U = n(12),
        F = n(17),
        B = n(20),
        G = n(21),
        W = Math.PI / 180 * 10,
        H = function(e) {
            function t(e) {
                var n, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return r()(this, t),
                    (n = l()(this, c()(t).call(this, i))).containedSegments = null,
                    n.roundaboutSegments = null,
                    n.isLeftHand = !1,
                    n.ellipse = e,
                    n._intersections = [],
                    n
            }
            return h()(t, e),
                o()(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return this.getRoundaboutSegments()
                    }
                }, {
                    key: "getRoundaboutSegments",
                    value: function() {
                        return this.roundaboutSegments
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = g.a.compact(g.a.flatten(g.a.flatten(this._intersections).map(function(e) {
                            return e.segments
                        })).map(function(e) {
                            return e.getAddress() ? e.getAddress().getStreetName({
                                emptyString: null
                            }) : null
                        }));
                        e && e.length > 0 ? this._description = I18n.t("save.changes_log.actions.CreateRoundabout.has_street", {
                            streetName: e[0]
                        }) : this._description = I18n.t("save.changes_log.actions.CreateRoundabout.default")
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        if (this._intersections = this.getIntersections(),
                            g.a.isEmpty(this._intersections))
                            return !1;
                        this.determineDrivingDirection(this._intersections),
                            this.deleteContainedSegments(),
                            this.modifyIntersectingSegments(this._intersections),
                            this.addRoundaboutSegments(this._intersections),
                            this.addRoundabout()
                    }
                }, {
                    key: "determineDrivingDirection",
                    value: function(e) {
                        var t = e[0][0].segments[0].getAddress();
                        null == t || null == t.street || null == t.getCountry() ? this.isLeftHand = this.model.isLeftHand : this.isLeftHand = t.getCountry().leftHandTraffic
                    }
                }, {
                    key: "addRoundabout",
                    value: function() {
                        var e = this.roundaboutSegments.map(function(e) {
                                return e.getID()
                            }),
                            t = new O.a(new j.a({
                                segIDs: e,
                                type: "RA"
                            }), this.model.junctions);
                        this.doSubAction(t);
                        var n = t.object;
                        this.roundaboutSegments.forEach(function(e) {
                            this.doSubAction(new R.a(e, {
                                junctionID: n.getID()
                            }))
                        }, this)
                    }
                }, {
                    key: "deleteContainedSegments",
                    value: function() {
                        this.containedSegments.forEach(function(e) {
                            this.doSubAction(new A.default(e))
                        }, this)
                    }
                }, {
                    key: "addRoundaboutSegments",
                    value: function(e) {
                        var t, n, i, r, s, o, a, l;
                        for (this.roundaboutSegments = [],
                            (e = e.reduce(function(e, t) {
                                return e.concat(t)
                            })).sort(function(e, t) {
                                return e.angle - t.angle
                            }),
                            e.push({
                                angle: e[0].angle,
                                point: e[0].point,
                                segments: []
                            }),
                            t = 0; t < e.length - 1; t++) {
                            for (i = e[t].point,
                                r = e[t + 1].point,
                                a = F.createLineString(),
                                l = new L.a({
                                    geometry: a
                                }),
                                s = e[t].angle,
                                o = e[t + 1].angle,
                                t === e.length - 2 && (o += 2 * Math.PI),
                                B.addPoint(a, U.cloneGeometry(i)),
                                n = s + W; n < o; n += W)
                                B.addPoint(a, F.createPoint(this.ellipse.center.x + this.ellipse.rx * Math.cos(n), this.ellipse.center.y + this.ellipse.ry * Math.sin(n)));
                            n > o && B.addPoint(a, U.cloneGeometry(r)),
                                this.isLeftHand && (l.attributes.fwdDirection = !1,
                                    l.attributes.revDirection = !0),
                                this.doSubAction(new w.a(l)),
                                this.roundaboutSegments.push(l)
                        }
                        e.pop(),
                            this.addNodes(e, this.roundaboutSegments)
                    }
                }, {
                    key: "addNodes",
                    value: function(e, t) {
                        var n, i;
                        e.forEach(function(e, r) {
                            (n = e.segments.concat()).push(t[r]),
                                n.push(t[(t.length + r - 1) % t.length]),
                                e.node ? n.forEach(function(t) {
                                    t.isConnectedToNode(e.node) || this.doSubAction(new I.a(e.node, t))
                                }, this) : (i = new b.a(e.point, n),
                                    this.doSubAction(i),
                                    e.node = i.node),
                                this.isLeftHand ? (this.openConnection(n[0], e.node, g.a.last(n)),
                                    this.openConnection(n[1], e.node, n[0]),
                                    this.openConnection(n[1], e.node, g.a.last(n))) : (this.openConnection(n[0], e.node, n[1]),
                                    this.openConnection(g.a.last(n), e.node, n[0]),
                                    this.openConnection(g.a.last(n), e.node, n[1]))
                        }, this)
                    }
                }, {
                    key: "openConnection",
                    value: function(e, t, n) {
                        if (t.isTurnAllowedBySegDirections(e, n)) {
                            var i = N.a.for(e, t),
                                r = N.a.for(n, t).getOpposite(),
                                s = this.model.getTurnGraph(),
                                o = s.getTurn(i, r);
                            o = o.withTurnData(o.getTurnData().withState(x.TURN_STATE.ALLOWED));
                            var a = new k.a(s, o);
                            this.doSubAction(a)
                        }
                    }
                }, {
                    key: "modifyIntersectingSegments",
                    value: function(e) {
                        e.forEach(function(e) {
                            1 === e.length ? this.shortenSegment(e[0]) : this.splitSegment(e)
                        }, this)
                    }
                }, {
                    key: "splitSegment",
                    value: function(e) {
                        var t = e[0].segments[0],
                            n = new _.default(t, {
                                splitAtPoint: e[0].point,
                                splittingPointIndex: e[0].index
                            });
                        this.doSubAction(n),
                            e[0].node = n.splitNode,
                            g.a.last(e).segments = [g.a.last(n.splits)],
                            g.a.last(e).index = g.a.last(e).index - e[0].index,
                            e[0].segments = [n.splits[0]],
                            this.shortenSegment(g.a.last(e))
                    }
                }, {
                    key: "shortenSegment",
                    value: function(e) {
                        var t = e.segments[0],
                            n = U.cloneGeometry(t.geometry);
                        e.goingOut ? (B.spliceVertices(t.geometry, 0, e.index + 1),
                                B.addPoint(t.geometry, U.cloneGeometry(e.point), 0)) : (B.spliceVertices(t.geometry, e.index + 1),
                                B.addPoint(t.geometry, U.cloneGeometry(e.point))),
                            this.doSubAction(new v.default(t, n, t.geometry))
                    }
                }, {
                    key: "getIntersections",
                    value: function() {
                        var e, t = this;
                        return this.containedSegments = [],
                            this.model.segments.getObjectArray(function(e) {
                                var n = U.getBounds(e.geometry).intersectsBounds(t.ellipse.bounds);
                                return e.state !== OpenLayers.State.DELETE && n
                            }).reduce(function(n, i) {
                                return (e = Object(G.lineStringIntersectionWithEllipse)(i.geometry, t.ellipse.center, t.ellipse.rx, t.ellipse.ry)) instanceof Array ? 1 !== e.length && e[0].goingOut || (e.forEach(function(e) {
                                            e.segments = [i]
                                        }),
                                        n.push(e)) : e && t.containedSegments.push(i),
                                    n
                            }, [])
                    }
                }]),
                t
        }(m.a);
    t.a = H
}, function(e, t, n) {
    "use strict";
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(64),
        c = n.n(u),
        d = n(38),
        h = n.n(d),
        p = n(20),
        g = n(25),
        f = n(0),
        m = n.n(f),
        v = n(21),
        _ = n(17),
        y = n(12),
        b = n(93),
        E = function() {
            function e(t, n, i, r, s) {
                o()(this, e),
                    this._fromSegment = t,
                    this._toSegment = n,
                    this._node = i,
                    this._turn = r,
                    this._bigJunction = s,
                    this._dataModel = this._fromSegment.model
            }
            return l()(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._turn.getFromVertex().equals(e._turn.getFromVertex()) && this._turn.getToVertex().equals(e._turn.getToVertex())
                    }
                }, {
                    key: "getAngle",
                    value: function() {
                        return this._bigJunction.getAngleAtIntersection(this._toSegment.geometry)
                    }
                }, {
                    key: "getNode",
                    value: function() {
                        return this._node
                    }
                }, {
                    key: "getFromSegment",
                    value: function() {
                        return this._fromSegment
                    }
                }, {
                    key: "getToSegment",
                    value: function() {
                        return this._toSegment
                    }
                }, {
                    key: "getTurn",
                    value: function() {
                        return this._turn
                    }
                }, {
                    key: "getPoint",
                    value: function() {
                        return this._bigJunction.getIntersectionPoint(this._toSegment.geometry)
                    }
                }, {
                    key: "getDistanceFromPoint",
                    value: function() {
                        return 10
                    }
                }, {
                    key: "hasMultiplePaths",
                    value: function() {
                        return this._bigJunction.getPossibleTurnsBetween(this._turn.getFromVertex(), this._turn.getToVertex()).length > 1
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._bigJunction.canEditTurns()
                    }
                }, {
                    key: "getSegmentPathGeometry",
                    value: function() {
                        var e = this._getLineStrings(),
                            t = _.createLineString(m.a.last(e)),
                            n = v.splitLineStringWithPolygon(t, this._bigJunction.geometry);
                        return null != n && (e[e.length - 1] = n[0].components),
                            _.createLineString(Array.prototype.concat.apply([], e))
                    }
                }, {
                    key: "_getLineStrings",
                    value: function() {
                        var e = this;
                        return this._getVertices().map(function(t) {
                            var n = e._dataModel.segments.getObjectById(t.getSegmentID()),
                                i = p.getVertices(y.cloneGeometry(n.geometry));
                            return t.isForward() || i.reverse(),
                                i
                        })
                    }
                }, {
                    key: "_getVertices",
                    value: function() {
                        var e = this,
                            t = this._dataModel.getRoadGraph(),
                            n = this._turn.getFromVertex();
                        return this._turn.getTurnData().getSegmentPath().map(function(i) {
                            var r = t.getVertexNodeID(n),
                                s = e._dataModel.nodes.getObjectById(r),
                                o = e._dataModel.segments.getObjectById(i),
                                a = h.a.for(o, s).getOpposite();
                            return n = a,
                                a
                        }).concat([this._turn.getToVertex()])
                    }
                }, {
                    key: "_getPossibleTurns",
                    value: function() {
                        return this._bigJunction.getPossibleTurnsBetween(this._turn.getFromVertex(), this._turn.getToVertex())
                    }
                }, {
                    key: "isLockedByHigherRank",
                    value: function() {
                        var e = this,
                            t = this._turn.getTurnData().getSegmentPath().map(function(t) {
                                return e._dataModel.segments.getObjectById(t)
                            });
                        return new b.SegmentsPermissionsUseCase(this._dataModel, t).isLockedByHigherRank()
                    }
                }, {
                    key: "getPossibleTurnAtOffset",
                    value: function(e) {
                        var t = this._getPossibleTurns(),
                            n = this.getCurrentPossibleTurnIndex();
                        return (n += e) < 0 && (n += t.length),
                            t[n % t.length]
                    }
                }, {
                    key: "getPossibleTurnCount",
                    value: function() {
                        return this._getPossibleTurns().length
                    }
                }, {
                    key: "getCurrentPossibleTurnIndex",
                    value: function() {
                        var e = this;
                        return this._getPossibleTurns().findIndex(function(t) {
                            return m.a.isEqual(t.getTurnData().getSegmentPath(), e._turn.getTurnData().getSegmentPath())
                        })
                    }
                }, {
                    key: "getNextPossibleTurn",
                    value: function() {
                        return this.getPossibleTurnAtOffset(1)
                    }
                }, {
                    key: "getPrevPossibleTurn",
                    value: function() {
                        return this.getPossibleTurnAtOffset(-1)
                    }
                }]),
                e
        }(),
        w = n(111),
        S = function() {
            function e(t, n, i, r) {
                o()(this, e),
                    this._fromSegment = t,
                    this._toSegment = n,
                    this._node = i,
                    this._turn = r
            }
            return l()(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._turn.getFromVertex().equals(e._turn.getFromVertex()) && this._turn.getToVertex().equals(e._turn.getToVertex())
                    }
                }, {
                    key: "getAngle",
                    value: function() {
                        return this._node.getAngleToSegment(this._toSegment)
                    }
                }, {
                    key: "getNode",
                    value: function() {
                        return this._node
                    }
                }, {
                    key: "getFromSegment",
                    value: function() {
                        return this._fromSegment
                    }
                }, {
                    key: "getToSegment",
                    value: function() {
                        return this._toSegment
                    }
                }, {
                    key: "getTurn",
                    value: function() {
                        return this._turn
                    }
                }, {
                    key: "getPoint",
                    value: function() {
                        return this._node.attributes.geometry
                    }
                }, {
                    key: "getDistanceFromPoint",
                    value: function() {
                        return 35
                    }
                }, {
                    key: "hasMultiplePaths",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "isLockedByHigherRank",
                    value: function() {
                        return new b.SegmentsPermissionsUseCase(this._node.model, this._fromSegment).isLockedByHigherRank()
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        var e = new w.CanEditTurnsUseCase(this._node.model);
                        return this._fromSegment.isFromNode(this._node) && e.canEditSegmentFromTurns(this._fromSegment) || this._fromSegment.isToNode(this._node) && e.canEditSegmentToTurns(this._fromSegment)
                    }
                }, {
                    key: "getSegmentPathGeometry",
                    value: function() {
                        return _.createLineString([])
                    }
                }]),
                e
        }(),
        k = function() {
            function e() {
                o()(this, e)
            }
            return l()(e, [{
                    key: "calculate",
                    value: function(e, t) {
                        var n = t.isLeftHand,
                            i = void 0 !== n && n,
                            r = t.offsetRegularTurns,
                            s = void 0 !== r && r;
                        0 !== e.length && (this._calculateUturnOffset(e, i),
                            s && this._calculateTurnArrowOffsets(e))
                    }
                }, {
                    key: "_calculateMaxAngles",
                    value: function(e) {
                        var t = e[0].getTurnArrow().getNode(),
                            n = e[0].getTurnArrow().getFromSegment(),
                            i = t.getAngleToSegment(n),
                            r = null,
                            s = null;
                        return e.filter(function(e) {
                            return !e.getTurnArrow().getTurn().isUturn()
                        }).forEach(function(e) {
                            var o = e.getTurnArrow(),
                                a = Math.abs(i - o.getAngle());
                            a > 180 && a <= 360 && (a = 360 - a),
                                a < 90 && (t.getDirectionBetweenSegments(n, o.getToSegment()) ? (null === r || a < r) && (r = a) : (null === s || a < s) && (s = a))
                        }), {
                            maxLeftAngle: r,
                            maxRightAngle: s
                        }
                    }
                }, {
                    key: "_calculateTurnArrowOffsets",
                    value: function(t) {
                        var n = t.filter(function(e) {
                            return !e.getTurnArrow().getTurn().isUturn()
                        }).sort(function(e, t) {
                            return e.getTurnArrow().getAngle() - t.getTurnArrow().getAngle()
                        });
                        if (0 !== n.length) {
                            var i = 0,
                                r = 1 === n.length ? Number.MAX_VALUE : m.a.last(n).getTurnArrow().getAngle();
                            n.forEach(function(t, s) {
                                var o = t.getTurnArrow(),
                                    a = Math.abs(o.getAngle() - r);
                                a > 180 && a <= 360 && (a = 360 - a),
                                    a < e.MINIMAL_ARROW_ANGLE && (s !== n.length - 1 || 2 !== n.length) ? i++ : (i = 0,
                                        r = o.getAngle()),
                                    t.setOffset(i),
                                    r = o.getAngle()
                            })
                        }
                    }
                }, {
                    key: "_calculateUturnOffset",
                    value: function(e, t) {
                        var n = this._calculateMaxAngles(e),
                            i = n.maxLeftAngle,
                            r = n.maxRightAngle,
                            s = 0;
                        t && null !== r && (s = (90 - r) / 90),
                            t || null === i || (s = (90 - i) / 90),
                            e.filter(function(e) {
                                return e.getTurnArrow().getTurn().isUturn()
                            }).forEach(function(e) {
                                e.setOffset(s)
                            })
                    }
                }]),
                e
        }();
    k.MINIMAL_ARROW_ANGLE = 25;
    var T = k,
        I = n(8),
        A = n.n(I),
        M = n(5),
        O = n.n(M),
        C = n(3),
        R = n.n(C),
        D = n(6),
        L = n.n(D),
        P = n(4),
        N = n.n(P),
        x = n(37),
        V = n(44),
        j = n.n(V),
        U = n(13),
        F = n.n(U),
        B = n(7),
        G = n.n(B),
        H = n(439),
        z = n(32),
        q = n(186),
        Y = n.n(q),
        $ = n(35),
        K = n.n($),
        J = n(133),
        Z = n(136),
        Q = n(179),
        X = n(9),
        ee = function(e) {
            function t() {
                return o()(this, t),
                    O()(this, R()(t).apply(this, arguments))
            }
            return L()(t, e),
                l()(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-turn"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            listRegion: {
                                el: ".restrictions-list-region tbody",
                                replaceElement: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-apply": "_onApplyChanges"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-close": "restriction:summary:close",
                            "click .do-create": "restriction:summary:create"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".restrictions-list-region": {
                                observe: "hasRestrictions",
                                visible: !0,
                                visibleFn: X.b
                            },
                            "input, .do-create, .do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditRestrictions",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            turn: null,
                            viewHelpers: null,
                            canEditRestrictions: !1,
                            subscriptions: {}
                        };
                        this._turn = e.turn,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._subscriptions = e.subscriptions,
                            this._title = e.title,
                            this._restrictions = this._turn.getTurnData().getRestrictions(),
                            this.model = new G.a.Model({
                                hasRestrictions: this._restrictions.length > 0,
                                canEditRestrictions: this._canEditRestrictions
                            })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            summaryTitle: this._title
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("listRegion", new Q.default({
                                restrictions: this._restrictions,
                                canEditRestrictions: this._canEditRestrictions,
                                subscriptions: this._subscriptions
                            }))
                    }
                }, {
                    key: "_onApplyChanges",
                    value: function() {
                        this.triggerMethod("restriction:summary:apply")
                    }
                }, {
                    key: "onChildviewItemEdit",
                    value: function(e) {
                        this.triggerMethod("restriction:item:edit", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.triggerMethod("restriction:item:delete", e.getRestriction())
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_turn"
                    }
                }]),
                t
        }(N.a.View),
        te = n(125),
        ne = function(e) {
            function t() {
                return o()(this, t),
                    O()(this, R()(t).apply(this, arguments))
            }
            return L()(t, e),
                l()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: {
                                el: ".modal-content",
                                regionClass: te.DialogContentRegion,
                                onEscapeKeydown: this._onEscapeKeydown.bind(this)
                            }
                        }
                    }
                }, {
                    key: "_onEscapeKeydown",
                    value: function(e) {
                        if (this.getChildView("contentRegion") instanceof Z.default)
                            return e.preventDefault(),
                                this._showSummaryView(),
                                !1
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._turn = e.turn,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._restrictions = this._turn.getTurnData().getRestrictions(),
                            this._viewHelpers = new J.TurnRestrictionViewHelpers({
                                turn: this._turn,
                                dataModel: this._dataModel
                            })
                    }
                }, {
                    key: "_restrictionDisplayFilter",
                    value: function(e) {
                        return this.options.editingDifficultTurn ? e.getDefaultType() === z.RESTRICTION_TYPE.DIFFICULT : e.getDefaultType() !== z.RESTRICTION_TYPE.DIFFICULT
                    }
                }, {
                    key: "_shouldShowSummaryView",
                    value: function() {
                        return !this.options.canEditRestrictions || null == this.options.restrictionToEdit && this._restrictions.some(this._restrictionDisplayFilter.bind(this))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.options.restrictionToEdit ? this._showEditView({
                            restriction: this.options.restrictionToEdit,
                            isNewRestriction: !1
                        }) : this._shouldShowSummaryView() ? this._showSummaryView() : this._showCreateTurnRestrictionView()
                    }
                }, {
                    key: "onChildviewRestrictionItemEdit",
                    value: function(e) {
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !1
                        })
                    }
                }, {
                    key: "onChildviewRestrictionItemDelete",
                    value: function(e) {
                        var t = this._restrictions.indexOf(e);
                        this._restrictions.splice(t, 1),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCancel",
                    value: function() {
                        this._shouldShowSummaryView() ? this._showSummaryView() : this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionEditUpdate",
                    value: function(e, t) {
                        var n = this._restrictions.indexOf(e);
                        this._restrictions.splice(n, 1, t),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCreate",
                    value: function(e) {
                        this._restrictions.every(function(t) {
                                return !t.equals(e)
                            }) && this._restrictions.push(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryClose",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryCreate",
                    value: function() {
                        this._showCreateTurnRestrictionView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryApply",
                    value: function(e) {
                        this._updateTurnGraph(),
                            this.destroy()
                    }
                }, {
                    key: "_showSummaryView",
                    value: function() {
                        var e = this._turn.getTurnData().withRestrictions(this._restrictions.filter(this._restrictionDisplayFilter.bind(this))),
                            t = this._turn.withTurnData(e);
                        this.showChildView("contentRegion", new ee({
                            turn: t,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: {},
                            title: this.options.editingDifficultTurn ? this._viewHelpers.getDifficultSummaryTitle() : this._viewHelpers.getSummaryTitle()
                        }))
                    }
                }, {
                    key: "_showEditView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.restriction,
                            n = e.isNewRestriction,
                            i = void 0 !== n && n;
                        this.showChildView("contentRegion", new Z.default({
                            restriction: t,
                            isNewRestriction: i,
                            canEditRestrictions: this._canEditRestrictions,
                            canAddTollRestriction: !1,
                            subscriptions: {},
                            editingTitle: this._viewHelpers.getEditingTitle(t)
                        }))
                    }
                }, {
                    key: "_showCreateTurnRestrictionView",
                    value: function() {
                        var e, t = this._turn.getTurnData().hasSegmentPath(),
                            n = this.options.editingDifficultTurn ? z.RESTRICTION_TYPE.DIFFICULT : z.RESTRICTION_TYPE.FREE;
                        e = t ? new K.a({
                                direction: null,
                                defaultType: n
                            }) : new Y.a({
                                defaultType: n
                            }),
                            this._showEditView({
                                restriction: e,
                                isNewRestriction: !0
                            })
                    }
                }, {
                    key: "_updateTurnGraph",
                    value: function() {
                        var e = this._turn.getTurnData().withRestrictions(this._restrictions),
                            t = this._turn.withTurnData(e);
                        this._dataModel.actionManager.add(new j.a(this._dataModel.getTurnGraph(), t))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main"
                    }
                }]),
                t
        }(N.a.View),
        ie = n(90),
        re = n(54),
        se = function(e) {
            function t(e) {
                var n;
                o()(this, t),
                    (n = O()(this, R()(t).call(this, e)))._turnArrow = e.turnArrow,
                    n._turn = n._turnArrow.getTurn(),
                    n._dataModel = n.options.dataModel,
                    n._editable = e.editable,
                    n._restrictions = n._turn.getTurnData().getRestrictions();
                var i = n._turnArrow.hasMultiplePaths();
                return n.model = new G.a.Model({
                        opcode: n._turn.getTurnData().getInstructionOpcode(),
                        editable: n._editable,
                        hasRestrictions: n._turn.getTurnData().isNonDifficultTimeRestricted(),
                        hasMultiplePaths: i,
                        tbrTooltip: n._getTBRTooltip()
                    }),
                    i && n._updateCounts(),
                    n
            }
            return L()(t, e),
                l()(t, [{
                    key: "templateContext",
                    value: function() {
                        var e = this._dataModel.segments.getObjectById(this._turn.getToVertex().getSegmentID()).getAddress(),
                            t = null;
                        return null != e && (t = e.getStreetName()), {
                            toStreet: t,
                            pathSelectorOnly: Boolean(this.options.pathSelectorOnly),
                            canEditDifficultTurns: this._canEditDifficultTurn(),
                            canEditInstructionOverride: this._shouldAllowIOEditing(),
                            allowRestrictionEditing: this._shouldAllowRestrictionEditing()
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click @ui.editRestrictionsButton": "_editRestrictions",
                            "click @ui.prevPathButton": "_selectPrevPath",
                            "click @ui.nextPathButton": "_selectNextPath",
                            "click @ui.tbrButton": "_openTimeBasedRestrictions"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            editRestrictionsButton: ".edit-restrictions",
                            prevPathButton: ".prev-path-button",
                            nextPathButton: ".next-path-button",
                            tbrButton: ".time-based-restrictions-button",
                            difficultFalseLabel: "label[for=difficult_false]"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            ".opcode-select": {
                                observe: "opcode",
                                onGet: function() {
                                    return this._turn.getTurnData().getInstructionOpcode()
                                },
                                onSet: function(e) {
                                    var t = this._turn.getTurnData().withInstructionOpcode(e),
                                        n = new j.a(this._dataModel.getTurnGraph(), this._turn.withTurnData(t));
                                    this._dataModel.actionManager.add(n)
                                },
                                selectOptions: {
                                    collection: this._getOpcodeOptions,
                                    defaultOption: {
                                        label: I18n.t("turn_tooltip.instruction_override.no_opcode"),
                                        value: null
                                    }
                                }
                            },
                            "[name=isDifficult]": {
                                observe: "isDifficult",
                                onGet: function() {
                                    return this._turn.getTurnData().isDifficult() ? "true" : "false"
                                },
                                onSet: function(e) {
                                    this._updateIsTurnDifficult("true" === e)
                                },
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return !this._canEditDifficultTurn()
                                    }
                                }]
                            },
                            "#difficult_false": {
                                attributes: [{
                                    name: "disabled",
                                    onGet: function() {
                                        return !e._canEditDifficultTurn() || e._hasDifficultTimeBasedRestrictions()
                                    }
                                }]
                            },
                            "#difficult_label": {
                                classes: {
                                    disabled: {
                                        onGet: function() {
                                            return !this._canEditDifficultTurn()
                                        }
                                    }
                                }
                            },
                            ".path-progress": {
                                observe: ["currentPathNum", "pathCount"],
                                onGet: function(e) {
                                    var t = F()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return "".concat(n + 1, "/").concat(i)
                                }
                            },
                            ".time-based-restrictions-button": {
                                onGet: function() {
                                    return this._turn.getTurnData().isDifficult()
                                },
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.toggleClass("hidden", !t)
                                },
                                classes: {
                                    "has-tbrs": {
                                        onGet: function() {
                                            return this._hasDifficultTimeBasedRestrictions()
                                        }
                                    },
                                    disabled: {
                                        onGet: function() {
                                            return !this._canOpenTimeBasedRestrictionDialog()
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "_hasDifficultTimeBasedRestrictions",
                    value: function() {
                        return this._turn.getTurnData().isDifficultTimeRestricted()
                    }
                }, {
                    key: "_canOpenTimeBasedRestrictionDialog",
                    value: function() {
                        return this._canEditDifficultTurn() || this._hasDifficultTimeBasedRestrictions()
                    }
                }, {
                    key: "_canEditDifficultTurn",
                    value: function() {
                        return this._turnArrow.isEditable() && W.loginManager.user.canEditDifficultTurns() && !this.options.pathSelectorOnly
                    }
                }, {
                    key: "_getCantEditReason",
                    value: function() {
                        return this._turn.getTurnData().hasSegmentPath() ? null : this._turnArrow.isLockedByHigherRank() || !W.loginManager.user.canEditDifficultTurns() ? I18n.t("turn_tooltip.cant_edit_difficult_turn") : I18n.t("turn_tooltip.cant_edit_difficult_turn_area")
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit();
                        var e = this._getCantEditReason();
                        e && this.$(".waze-lock-tooltip").tooltip({
                                container: "body",
                                title: e
                            }),
                            this._canEditDifficultTurn() && (this.ui.tbrButton.tooltip({
                                    container: "body",
                                    title: this._getTBRTooltip(),
                                    html: !0
                                }),
                                this._hasDifficultTimeBasedRestrictions() && this.ui.difficultFalseLabel.tooltip({
                                    container: "body",
                                    title: I18n.t("turn_tooltip.remove_tbrs_first")
                                }))
                    }
                }, {
                    key: "_getOpcodeOptions",
                    value: function() {
                        var e = I18n.t("turn_tooltip.instruction_override.opcodes");
                        return Object.keys(H).map(function(t) {
                            return {
                                value: t,
                                label: e[t]
                            }
                        })
                    }
                }, {
                    key: "_editRestrictions",
                    value: function() {
                        W.app.layout.getRegion("dialogRegion").show(new ne({
                            turn: this._turn,
                            dataModel: this._dataModel,
                            canEditRestrictions: this._editable
                        }))
                    }
                }, {
                    key: "_updateIsTurnDifficult",
                    value: function(e) {
                        var t = this._turn.getTurnData().withoutDifficultRestrictions().withSimpleDifficulty(e),
                            n = this._turn.withTurnData(t);
                        this._dataModel.actionManager.add(new j.a(this._dataModel.getTurnGraph(), n))
                    }
                }, {
                    key: "_shouldAllowRestrictionEditing",
                    value: function() {
                        return W.Config.restrictions.allowEditing && this._turnArrow.isEditable()
                    }
                }, {
                    key: "_shouldAllowIOEditing",
                    value: function() {
                        return this._turnArrow.isEditable()
                    }
                }, {
                    key: "_updateCounts",
                    value: function() {
                        this.model.set({
                            currentPathNum: this._turnArrow.getCurrentPossibleTurnIndex(),
                            pathCount: this._turnArrow.getPossibleTurnCount()
                        })
                    }
                }, {
                    key: "_selectPrevPath",
                    value: function() {
                        this._dataModel.actionManager.add(new j.a(this._dataModel.getTurnGraph(), this._turnArrow.getPrevPossibleTurn())),
                            this._updateCounts()
                    }
                }, {
                    key: "_selectNextPath",
                    value: function() {
                        this._dataModel.actionManager.add(new j.a(this._dataModel.getTurnGraph(), this._turnArrow.getNextPossibleTurn())),
                            this._updateCounts()
                    }
                }, {
                    key: "_openTimeBasedRestrictions",
                    value: function() {
                        if (this._canOpenTimeBasedRestrictionDialog()) {
                            var e = null,
                                t = this._turn.getTurnData().getRestrictions();
                            1 === t.length && t[0].isSimplyDifficult() && (e = t[0]),
                                W.app.layout.getRegion("dialogRegion").show(new ne({
                                    turn: this._turn,
                                    dataModel: this._dataModel,
                                    canEditRestrictions: this._editable,
                                    editingDifficultTurn: !0,
                                    restrictionToEdit: e
                                }))
                        }
                    }
                }, {
                    key: "_getTBRTooltip",
                    value: function() {
                        if (!this._hasDifficultTimeBasedRestrictions())
                            return I18n.t("turn_tooltip.no_tbr_tooltip");
                        var e = this._turn.getTurnData().getRestrictions().filter(function(e) {
                            return e.isDifficult()
                        }).map(function(e) {
                            var t = new ie.a({
                                timeFrame: e.getTimeFrame()
                            });
                            return "".concat(t.formatWeekdays(), " ").concat(t.formatHours())
                        });
                        return Object(re.getHTML)("templates/turn-arrow-tooltip-timeframes", {
                            timeFrames: e
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/turn-arrow-tooltip"
                    }
                }]),
                t
        }(N.a.View);

    function oe(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var ae = {
            LEFT: "left",
            RIGHT: "right",
            MIDDLE: "middle"
        },
        le = {
            TOP: "top",
            BOTTOM: "bottom"
        },
        ue = function(e) {
            function t(e) {
                return o()(this, t),
                    O()(this, R()(t).call(this, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? oe(Object(n), !0).forEach(function(t) {
                                A()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : oe(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({}, e, {
                        parentEl: null,
                        el: "#big-tooltip-region"
                    })))
            }
            return L()(t, e),
                l()(t, [{
                    key: "onShow",
                    value: function(e, t, n) {
                        var i = this,
                            r = n.screenPosition,
                            s = n.placements;
                        this.$el.css({
                                display: "block",
                                top: r.top,
                                left: r.left
                            }),
                            t.$el.removeClass(Object.values(ae).join(" ")),
                            t.$el.removeClass(Object.values(le).join(" ")),
                            t.$el.addClass("big-tooltip"),
                            t.$el.addClass(s.join(" ")),
                            t.$el.on("mouseenter", function() {
                                return i.trigger("tooltip:mouseenter")
                            }),
                            t.$el.on("mouseleave", function(e) {
                                0 === t.$el.has(e.target).length ? i.trigger("tooltip:mouseleave") : e.stopPropagation()
                            })
                    }
                }, {
                    key: "onEmpty",
                    value: function(e, t) {
                        t.$el.off("mouseenter"),
                            t.$el.off("mouseleave"),
                            this.$el.css({
                                display: "none"
                            })
                    }
                }]),
                t
        }(N.a.Region);

    function ce(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var de = le.TOP,
        he = function(e) {
            function t(e, n) {
                var i;
                return o()(this, t),
                    (i = O()(this, R()(t).call(this, e, n))).listenTo(n, "bigtooltip:show", function() {
                        i._actuallyShow()
                    }),
                    i.listenTo(n, "bigtooltip:hide", function() {
                        i._actuallyHide()
                    }),
                    i
            }
            return L()(t, e),
                l()(t, [{
                    key: "events",
                    value: function() {
                        var e;
                        return e = {},
                            A()(e, "mouseover ".concat(this.options.hoverElement), "_onHoverElementEnter"),
                            A()(e, "mouseout ".concat(this.options.hoverElement), "_onHoverElementExit"),
                            e
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.view.addRegions({
                            bigTooltipRegion: {
                                regionClass: ue
                            }
                        });
                        var e = this.view.getRegion("bigTooltipRegion");
                        this.listenTo(e, "tooltip:mouseenter", this._onElementEnter),
                            this.listenTo(e, "tooltip:mouseleave", this._onElementExit)
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this._clearAllTimers(),
                            this._actuallyHide(),
                            this.view.removeRegion("bigTooltipRegion")
                    }
                }, {
                    key: "_clearAllTimers",
                    value: function() {
                        window.clearTimeout(this._showTimeoutHandle),
                            window.clearTimeout(this._hideTimeoutHandle)
                    }
                }, {
                    key: "_calcVerticalPlacement",
                    value: function(e) {
                        var t = this.options,
                            n = t.getVerticalPlacement,
                            i = t.size,
                            r = t.padding,
                            s = t.hoverElement,
                            o = n(),
                            a = this.$(s),
                            l = 230 + this.tooltipView.$el.height() + a.height();
                        return e.y - l < r.top ? le.BOTTOM : e.y + l > i.h - r.bottom ? le.TOP : o || de
                    }
                }, {
                    key: "_calcHorizontalPlacement",
                    value: function(e) {
                        var t = this.options,
                            n = t.getHorizontalPlacement,
                            i = t.size,
                            r = n();
                        if (e.x + 157.5 > i.w)
                            return ae.LEFT;
                        if (e.x - 157.5 < 0)
                            return ae.RIGHT;
                        if (!r)
                            return ae.MIDDLE;
                        var s = e.x + 315 < i.w,
                            o = e.x - 315 > 0;
                        return r === ae.LEFT && o || r === ae.RIGHT && s ? r : void 0
                    }
                }, {
                    key: "_isOutOfBounds",
                    value: function(e) {
                        var t = this.options,
                            n = t.size,
                            i = t.padding;
                        return e.x < i.left || e.x > n.w - i.right || (e.y < i.top || e.y > n.h - i.bottom)
                    }
                }, {
                    key: "_actuallyShow",
                    value: function() {
                        if (!this._shown) {
                            var e = this.options,
                                t = e.getView,
                                n = (0,
                                    e.getPosition)(),
                                i = t();
                            if (i) {
                                this.tooltipView = i;
                                var r = this.$(this.options.hoverElement),
                                    s = r.offset(),
                                    o = function(e) {
                                        for (var t = 1; t < arguments.length; t++) {
                                            var n = null != arguments[t] ? arguments[t] : {};
                                            t % 2 ? ce(Object(n), !0).forEach(function(t) {
                                                A()(e, t, n[t])
                                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ce(Object(n)).forEach(function(t) {
                                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                            })
                                        }
                                        return e
                                    }({}, this.options);
                                if (o.screenPosition = {
                                        top: s.top + r.height() / 2,
                                        left: s.left + r.width() / 2
                                    },
                                    !this._isOutOfBounds(n)) {
                                    var a = [],
                                        l = this._calcVerticalPlacement(n),
                                        u = this._calcHorizontalPlacement(n);
                                    l === le.BOTTOM ? o.screenPosition.top += r.height() / 2 : o.screenPosition.top -= r.height() / 2,
                                        a.push(l),
                                        a.push(u),
                                        o.placements = a,
                                        this.view.showChildView("bigTooltipRegion", this.tooltipView, o),
                                        this._shown = !0
                                }
                            }
                        }
                    }
                }, {
                    key: "_actuallyHide",
                    value: function() {
                        this._shown = !1;
                        var e = this.view.getRegion("bigTooltipRegion");
                        e && e.empty()
                    }
                }, {
                    key: "_onHoverElementEnter",
                    value: function() {
                        var e = this;
                        this._showTimeoutHandle = window.setTimeout(function() {
                            e._actuallyShow(e.position, e.size),
                                e._showTimeoutHandle = null
                        }, 250)
                    }
                }, {
                    key: "_onHoverElementExit",
                    value: function() {
                        null != this._showTimeoutHandle && (window.clearTimeout(this._showTimeoutHandle),
                                this._showTimeoutHandle = null),
                            this._hide()
                    }
                }, {
                    key: "_onElementEnter",
                    value: function() {
                        this._hideTimeoutHandle && (window.clearTimeout(this._hideTimeoutHandle),
                                this._hideTimeoutHandle = null),
                            this.view.triggerMethod("tooltip:enter")
                    }
                }, {
                    key: "_onElementExit",
                    value: function() {
                        this._hide(),
                            this.view.triggerMethod("tooltip:leave")
                    }
                }, {
                    key: "_hide",
                    value: function() {
                        var e = this;
                        this._shown && (this._hideTimeoutHandle = window.setTimeout(function() {
                            e._actuallyHide(),
                                e.hideTimeoutHandle = null
                        }, 150))
                    }
                }]),
                t
        }(N.a.Behavior),
        pe = n(182),
        ge = n.n(pe),
        fe = n(151);

    function me(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var ve = function(e) {
        function t(e) {
            var n;
            o()(this, t);
            var i = new x.default("turn-arrow disabled");
            return e.el = i.div,
                (n = O()(this, R()(t).call(this, e)))._divIcon = i,
                n
        }
        return L()(t, e),
            l()(t, [{
                key: "initialize",
                value: function() {
                    this._turnArrow = this.options.turnArrow,
                        this._drawingContext = this.options.drawingContext,
                        this._marker = null,
                        this._dataModel = this.options.dataModel,
                        this._offset = 0
                }
            }, {
                key: "ui",
                value: function() {
                    return {
                        arrow: ".arrow"
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "mouseenter .arrow": "_onArrowMouseEnter",
                        "mouseleave .arrow": "_onArrowMouseLeave",
                        "click .arrow": "_onArrowClicked",
                        "click .restrictions": "_onRestrictionsClicked",
                        "click .instruction-override-button": "_onInstructionOverrideClicked",
                        "click .segment-path-button": "_onSegmentPathClicked"
                    }
                }
            }, {
                key: "setOffset",
                value: function(e) {
                    this._offset = e
                }
            }, {
                key: "getTurnArrow",
                value: function() {
                    return this._turnArrow
                }
            }, {
                key: "highlightArrow",
                value: function() {
                    this._onArrowMouseEnter()
                }
            }, {
                key: "unhighlightArrow",
                value: function() {
                    this._onArrowMouseLeave()
                }
            }, {
                key: "highlightArrowShowTooltip",
                value: function() {
                    this.highlightArrow(),
                        this.trigger("bigtooltip:show")
                }
            }, {
                key: "unhighlightArrowHideTooltip",
                value: function() {
                    this.unhighlightArrow(),
                        this.trigger("bigtooltip:hide")
                }
            }, {
                key: "_calculateArrowPixel",
                value: function(e) {
                    var t = new OpenLayers.LonLat(e.getPoint().x, e.getPoint().y);
                    return W.map.getPixelFromLonLat(t)
                }
            }, {
                key: "calculateArrowLonlat",
                value: function(e) {
                    var n = this._drawingContext.pixelToMapUnits(e.getDistanceFromPoint() + t.ARROW_HEIGHT_IN_PIXELS * this._offset),
                        i = v.degToRad(e.getAngle()),
                        r = new OpenLayers.LonLat(e.getPoint().x + Math.cos(i) * n, e.getPoint().y + Math.sin(i) * n);
                    if (e.getTurn().isUturn()) {
                        var s = i - Math.PI / 2,
                            o = this._drawingContext.pixelToMapUnits(t.UTURN_ARROW_OFFSET_IN_PIXELS);
                        this.options.isLeftHand && (s += Math.PI),
                            r.lon += Math.cos(s) * o,
                            r.lat += Math.sin(s) * o
                    }
                    return r
                }
            }, {
                key: "_onArrowMouseEnter",
                value: function() {
                    this.ui.arrow.addClass("hover"),
                        this.$el.addClass("hover"),
                        this.trigger("mouseenter", this)
                }
            }, {
                key: "_onArrowMouseLeave",
                value: function() {
                    this.ui.arrow.removeClass("hover"),
                        this.$el.removeClass("hover"),
                        this.trigger("mouseleave")
                }
            }, {
                key: "templateContext",
                value: function() {
                    var e = this._turnArrow,
                        t = e.getTurn(),
                        n = t.getTurnData().isNonDifficultTimeRestricted(),
                        i = t.getTurnData().isAllowed(),
                        r = [];
                    return this.options.transparent && r.push("disabled"),
                        this.options.isLeftHand && r.push("lefthand"),
                        t.getTurnData().isDifficult() && r.push("difficult"),
                        e.getTurn().isUturn() && r.push("uturn"),
                        i ? (r.push("open"),
                            n && r.push("restricted")) : r.push("closed"), {
                            angle: (450 - e.getAngle()) % 360,
                            turnAllowed: i,
                            arrowClasses: r.join(" ")
                        }
                }
            }, {
                key: "onTooltipEnter",
                value: function() {
                    this.highlightArrowShowTooltip()
                }
            }, {
                key: "onTooltipLeave",
                value: function() {
                    this.unhighlightArrowHideTooltip()
                }
            }, {
                key: "_createTooltipView",
                value: function() {
                    var e = this.options.turnArrow,
                        t = {
                            turnArrow: e,
                            editable: e.isEditable(),
                            dataModel: this._dataModel
                        },
                        n = null;
                    return e.getTurn().getTurnData().isAllowed() ? n = new se(t) : e.hasMultiplePaths() && (n = new se(function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? me(Object(n), !0).forEach(function(t) {
                                    A()(e, t, n[t])
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : me(Object(n)).forEach(function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                })
                            }
                            return e
                        }({}, t, {
                            pathSelectorOnly: !0
                        }))),
                        n
                }
            }, {
                key: "onRender",
                value: function() {
                    null === this._marker && (this._marker = new OL.Marker(this.calculateArrowLonlat(this._turnArrow), this._divIcon),
                        this._drawingContext.addMarkers([this._marker]))
                }
            }, {
                key: "_onArrowClicked",
                value: function(e) {
                    e.stopPropagation(),
                        this._toggleTurn()
                }
            }, {
                key: "_toggleTurn",
                value: function() {
                    if (this._turnArrow.isEditable()) {
                        var e = new ge.a(this._dataModel, this._turnArrow.getTurn());
                        e.toggleTurnConfirmation() === pe.TOGGLE_CONFIRMATION_REASON.HAS_LANES ? (this.trigger("bigtooltip:hide"),
                            fe.a.showAsync({
                                lonlat: this.calculateArrowLonlat(this._turnArrow),
                                title: I18n.t("lanes.confirm_disable_turn.title"),
                                content: I18n.t("lanes.confirm_disable_turn.content")
                            }).then(function() {
                                e.toggleTurn()
                            })) : e.toggleTurn()
                    }
                }
            }, {
                key: "_onSegmentPathClicked",
                value: function(e) {
                    e.stopPropagation(),
                        this._dataModel.actionManager.add(new j.a(this._dataModel.getTurnGraph(), this._turnArrow.getNextPossibleTurn()))
                }
            }, {
                key: "template",
                get: function() {
                    return "templates/turn-arrow"
                }
            }, {
                key: "behaviors",
                get: function() {
                    var e = this;
                    return [{
                        behaviorClass: he,
                        size: {
                            w: W.map.getSize().w,
                            h: W.map.getSize().h
                        },
                        padding: {
                            top: 30,
                            bottom: 30,
                            left: 50,
                            right: 50
                        },
                        hoverElement: ".arrow",
                        getView: this._createTooltipView.bind(this),
                        getPosition: function() {
                            return e._calculateArrowPixel(e.options.turnArrow)
                        },
                        getVerticalPlacement: function() {
                            var t = e.options.turnArrow;
                            if (t instanceof E) {
                                var n = t.getAngle();
                                if (n >= -135 && n <= -45)
                                    return le.BOTTOM
                            }
                            return null
                        },
                        getHorizontalPlacement: function() {
                            var t = e.options.turnArrow;
                            if (t instanceof E) {
                                var n = t.getAngle();
                                if (n >= -45 && n <= 45)
                                    return ae.RIGHT;
                                if (n >= 135 || n <= -135)
                                    return ae.LEFT
                            }
                            return null
                        }
                    }]
                }
            }]),
            t
    }(N.a.View);
    ve.ARROW_HEIGHT_IN_PIXELS = 40,
        ve.ARROW_DISTANCE_FROM_NODE_IN_PIXELS = 20,
        ve.UTURN_ARROW_OFFSET_IN_PIXELS = 18;
    var _e = ve,
        ye = function() {
            function e(t, n, i) {
                var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                    s = r.includeJunctionTurns,
                    a = void 0 !== s && s,
                    l = r.includeUturns,
                    u = void 0 === l || l,
                    c = r.includeOnlyDisallowedTurns,
                    d = void 0 !== c && c;
                o()(this, e),
                    this._drawingContext = t,
                    this._dataModel = n,
                    this._appPreferences = i,
                    this._includeJunctionTurns = a,
                    this._includeUturns = u,
                    this._includeOnlyDisallowedTurns = d,
                    this._offsetCalculator = new T
            }
            return l()(e, [{
                    key: "generate",
                    value: function(t) {
                        return this._drawingContext.getMapZoom() < e.MIN_UTURN_DISPLAY_ZOOM ? [] : [].concat(r()(this._createTurnArrowsForVertex(h.a.forwardOf(t.getID()))), r()(this._createTurnArrowsForVertex(h.a.reverseOf(t.getID()))))
                    }
                }, {
                    key: "_createTurnArrowsForVertex",
                    value: function(e) {
                        var t = this,
                            n = c.a.directedSegment(this._dataModel, e);
                        if (!n.getNode())
                            return [];
                        var i = [];
                        i = this._getValidTurnsArrows(n),
                            this._includeJunctionTurns && n.hasBigJunction() && (i = this._combineTurnArrowsWithJunctionArrows(i, this._getJunctionTurnArrows(n))),
                            this._includeOnlyDisallowedTurns && (i = i.filter(function(e) {
                                return !e.getTurn().getTurnData().isAllowed()
                            }));
                        var r = i.filter(function(e) {
                            return t._shouldDrawArrow(e)
                        }).map(function(e) {
                            return new _e({
                                turnArrow: e,
                                isLeftHand: t._dataModel.isLeftHand,
                                drawingContext: t._drawingContext,
                                dataModel: t._dataModel,
                                transparent: t._appPreferences.get("showTransparentTurnArrows")
                            })
                        });
                        return n.hasBigJunction() || this._offsetCalculator.calculate(r, {
                                isLeftHand: this._dataModel.isLeftHand,
                                offsetRegularTurns: this._appPreferences.get("spreadTurnArrows")
                            }),
                            r.length > 0 && this._drawLockedBadge(n),
                            r
                    }
                }, {
                    key: "_combineTurnArrowsWithJunctionArrows",
                    value: function(e, t) {
                        return m.a.uniqWith([].concat(r()(t), r()(e)), function(e, t) {
                            return e.equals(t)
                        })
                    }
                }, {
                    key: "_getValidTurnsArrows",
                    value: function(e) {
                        var t = this,
                            n = e.getNode(),
                            i = e.getSegment();
                        return this._dataModel.getTurnGraph().getLegalTrivialTurnsFrom(e.getVertex()).map(function(e) {
                            var r = t._dataModel.segments.getObjectById(e.getToVertex().getSegmentID());
                            return new S(i, r, n, e)
                        })
                    }
                }, {
                    key: "_getJunctionTurnArrows",
                    value: function(e) {
                        var t = this,
                            n = e.getBigJunction();
                        return n.getTurnsFrom(e.getVertex()).map(function(i) {
                            var r = t._dataModel.segments.getObjectById(i.getToVertex().getSegmentID()),
                                s = t._dataModel.nodes.getObjectById(t._dataModel.getRoadGraph().getVertexNodeID(i.getToVertex().getOpposite()));
                            return new E(e.getSegment(), r, s, i, n)
                        })
                    }
                }, {
                    key: "_shouldDrawArrow",
                    value: function(e) {
                        return !e.getTurn().isUturn() || this._shouldDrawUturn(e)
                    }
                }, {
                    key: "_shouldDrawUturn",
                    value: function(t) {
                        if (!this._includeUturns || this._isDeadEndUturn(t))
                            return !1;
                        var n = this._drawingContext.mapUnitsToPixel(p.getLength(t.getFromSegment().geometry));
                        return this._drawingContext.getMapZoom() >= e.MIN_UTURN_DISPLAY_ZOOM && n >= e.MIN_SEGMENT_LENGTH_FOR_UTURN
                    }
                }, {
                    key: "_isDeadEndUturn",
                    value: function(e) {
                        return 1 === this._dataModel.getRoadGraph().getConnectedVertices(e.getTurn().getFromVertex()).length
                    }
                }, {
                    key: "_drawLockedBadge",
                    value: function(e) {
                        var t = e.getNode();
                        if (!e.areTurnsLocked()) {
                            var n = new OpenLayers.Marker(g.toLonLat(t.geometry), new x.default("unlocked-badge"));
                            this._drawingContext.addMarkers([n])
                        }
                    }
                }]),
                e
        }();
    ye.MIN_UTURN_DISPLAY_ZOOM = 5,
        ye.MIN_ARROW_DISPLAY_ZOOM = 4,
        ye.MIN_SEGMENT_LENGTH_FOR_UTURN = 75;
    t.a = ye
}, function(e, t, n) {
    "use strict";
    var i = n(4),
        r = n.n(i),
        s = n(0),
        o = n.n(s),
        a = n(153),
        l = n(7),
        u = n.n(l),
        c = n(149),
        d = u.a.Collection.extend({
            model: c.a,
            isIgnorable: function() {
                return this.all(function(e) {
                    return e.get("ignorable")
                })
            }
        }),
        h = r.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/Save/templates/error_item",
            tagName: "li",
            className: "error-item",
            events: {
                "click .focus": "_onFocusClicked"
            },
            _onFocusClicked: function() {
                return this.trigger("click:focus")
            },
            serializeData: function() {
                var e = r.a.View.prototype.serializeData.apply(this, arguments);
                e.title = this._getTranslatedTitle() || this._getServerTitle() || this._getDefaultTitle(),
                    e.solution = this._getSolution(),
                    e.showPanButton = null !== this.model.get("geometry");
                var t = this.model.get("collatedCount");
                return null != t && t > 1 && (e.collated = I18n.t("save.error.collated", {
                        count: t
                    })),
                    e
            },
            _getTranslationsByCode: function(e) {
                return I18n.t("save.error_types")[e]
            },
            _getDefaultTitle: function() {
                var e = c.a.prototype.defaults.code,
                    t = this._getTranslationsByCode(e);
                if (t)
                    return t.title
            },
            _getServerTitle: function() {
                return this.model.get("details")
            },
            _getTranslatedTitle: function() {
                var e = this._getTranslationsByCode(this.model.get("code"));
                if (e)
                    return e.title
            },
            _getSolution: function() {
                var e = this._getTranslationsByCode(this.model.get("code"));
                return e && e.solution ? e.solution : I18n.t("save.default_solution")
            }
        }),
        p = r.a.CompositeView.extend({
            childView: h,
            childViewContainer: ".list",
            template: "Waze/MapEditor/UI/Modules/Save/templates/error_list",
            events: {
                "click .save": "_onSaveClicked",
                "click .edit": "destroy",
                "click .close-button": "destroy"
            },
            childViewEvents: function() {
                return {
                    "click:focus": this._onChildFocusClicked
                }
            },
            _onChildFocusClicked: function(e) {
                return this.trigger("click:focus", e.model)
            },
            _onSaveClicked: function() {
                return this.trigger("click:save")
            },
            serializeData: function() {
                return {
                    collection: this.collection
                }
            },
            templateContext: {
                getTitle: function() {
                    return this.collection.isIgnorable() ? I18n.t("save.error.title_ignorable") : I18n.t("save.error.title")
                },
                showActionTitle: function() {
                    return this.collection.isIgnorable()
                }
            }
        }),
        g = n(16),
        f = r.a.View.extend({
            CLOSE_TIMEOUT_MILLIS: 2e3,
            template: "Waze/MapEditor/UI/Modules/Save/templates/success",
            serializeData: function() {
                return {
                    venueNames: this._getVenueNames(),
                    model: this.model
                }
            },
            _getVenueNames: function() {
                var e = this.model.pendingEdits.venues.map(function(e) {
                    return e.attributes.name
                });
                return o.a.compact(e),
                    e.join(", ")
            },
            onRender: function() {
                return window.setTimeout(this.destroy.bind(this), this.CLOSE_TIMEOUT_MILLIS)
            },
            templateContext: function() {
                return {
                    showPendingVenues: function() {
                        return this.model.pendingEdits.venues.length > 0
                    },
                    getSaveCountTextFor: function(e) {
                        var t = this.model.saveCount[e];
                        return t < 1 ? "" : g.default.contentTag("div", I18n.t("save.success.change_count.".concat(e), {
                            count: t
                        }))
                    }
                }
            }
        }),
        m = n(18),
        v = r.a.Object.extend({
            ignoredErrors: {
                100: !0
            },
            errorCollection: null,
            _editingLock: null,
            initialize: function() {
                this.mediator = this.options.mediator,
                    this._lockEditing(),
                    this.overlayRenderer = new a.a(this.options.map),
                    this.overlayRenderer.drawOverlay()
            },
            onDestroy: function() {
                return this._releaseEditing(),
                    this.overlayRenderer && this.overlayRenderer.destroy(),
                    this.errorListView && this.errorListView.destroy(),
                    this.successView && this.successView.destroy(),
                    W.accelerators.events.unregister("save", this, this._onSaveClicked)
            },
            success: function(e) {
                var t = this;
                return this._releaseEditing(),
                    this.overlayRenderer.destroy(),
                    this.trigger("saveSuccess"),
                    this.trigger("done"),
                    this._showSuccessMessage(e),
                    this.listenTo(this.successView, "destroy", function() {
                        return t.destroy()
                    })
            },
            fail: function(e) {
                var t = this;
                if (!this.ignoredErrors[e[0].get("code")])
                    return 1 === e.length && this._showErrorPoint(e[0]),
                        this._reportErrors(e),
                        e = this._collateErrors(e),
                        this.errorCollection = new d(e),
                        this.errorListView = new p({
                            collection: this.errorCollection
                        }),
                        this.listenTo(this.errorListView, "click:save", this._onSaveClicked),
                        this.listenTo(this.errorListView, "destroy", function() {
                            return t.trigger("done"),
                                t.destroy()
                        }),
                        this.listenTo(this.errorListView, "click:focus", this._showErrorPoint),
                        W.accelerators.events.register("save", this, this._onSaveClicked),
                        this.options.popoverRegion.show(this.errorListView);
                this.overlayRenderer.destroy()
            },
            _reportErrors: function() {
                (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).forEach(function(e) {
                    var t = e.get("code");
                    m.reportAnalytic.saveError(t)
                })
            },
            _collateErrors: function(e) {
                for (var t = [], n = o.a.groupBy(e, function(e) {
                        return e.get("code")
                    }), i = 0, r = Object.keys(n); i < r.length; i++) {
                    var s = (e = n[r[i]])[0];
                    e.length > 1 && s.set({
                            geometry: null,
                            collatedCount: e.length,
                            ignorable: e.every(function(e) {
                                return e.get("ignorable")
                            })
                        }),
                        t.push(s)
                }
                return t
            },
            _releaseEditing: function() {
                this.mediator.set({
                        navigation: !0,
                        saving: !1
                    }),
                    this.mediator.releaseEditing(this._editingLock),
                    this._editingLock = null
            },
            _lockEditing: function() {
                this.mediator.set({
                        navigation: !1,
                        saving: !0
                    }),
                    this._editingLock = this.mediator.lockEditing()
            },
            _showErrorPoint: function(e) {
                var t = e.get("geometry");
                if (null !== t)
                    return this.overlayRenderer.drawAndFocusSpotlightAtPoint(t)
            },
            _onSaveClicked: function() {
                if (this.errorCollection.isIgnorable())
                    return this.trigger("resave")
            },
            _showSuccessMessage: function(e) {
                return this.successView = new f({
                        model: e
                    }),
                    this.options.popoverRegion.show(this.successView)
            }
        });
    t.a = v
}, function(e, t, n) {
    "use strict";
    var i = n(8),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(10),
        m = n.n(f),
        v = n(4),
        _ = n.n(v),
        y = n(0),
        b = n.n(y),
        E = n(34),
        w = n.n(E),
        S = n(37),
        k = n(89),
        T = n(54),
        I = 27,
        A = function(e) {
            function t(e, n, i, r) {
                var s;
                o()(this, t);
                var a = new S.default("house-number");
                (s = c()(this, h()(t).call(this, n, a))).map = r,
                    s.model = e,
                    s.hasTooltip = !1,
                    s.errorCode = null,
                    s.render(),
                    s.input = s.icon.$div.find("input"),
                    s.inputWrapper = s.icon.$div.find(".input-wrapper"),
                    s.icon.$div.find(".input-wrapper, .drag-handle").on("click", function(e) {
                        return s.events.triggerEvent("click:input"),
                            !1
                    }),
                    s.input.on("click", function() {
                        return s.input.focus()
                    }),
                    s.input.on("dblclick", function(e) {
                        return e.stopPropagation()
                    }),
                    s.input.on("mousedown", function(e) {
                        return e.stopPropagation()
                    }),
                    s.input.on("keyup", function(e) {
                        if (e.which === I)
                            return e.stopPropagation(),
                                s.input.blur(),
                                s.events.triggerEvent("unselect")
                    }),
                    s.input.on("change", function() {
                        return s.events.triggerEvent("change:number", {
                            number: s.input.val()
                        })
                    }),
                    s.inputWrapper.find(".delete-button").on("click", function() {
                        return s.events.triggerEvent("delete")
                    });
                for (var l = ["change:number", "delete", "drag", "dragEnd", "unselect", "click:input"], u = 0; u < l.length; u++) {
                    var d = l[u];
                    s.events.addEventType(d)
                }
                return s.dragging = new k.a(s.map),
                    s.dragging.move = function(e) {
                        return s._destroyTooltip(),
                            s.lonlat = s.map.getLonLatFromViewPortPx(e.xy),
                            s.layer.drawMarker(w()(s)),
                            s.events.triggerEvent("drag", {
                                xy: e.xy,
                                marker: w()(s)
                            })
                    },
                    s.dragging.done = function(e) {
                        return s._createTooltip(),
                            s.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: w()(s)
                            })
                    },
                    s._createTooltip(),
                    s.setSide(i),
                    s
            }
            return g()(t, e),
                l()(t, [{
                    key: "_hasError",
                    value: function() {
                        return Boolean(this.errorCode)
                    }
                }, {
                    key: "_createTooltip",
                    value: function() {
                        if (this._hasError() && !this.hasTooltip)
                            return this.hasTooltip = !0,
                                this.inputWrapper.tooltip({
                                    title: I18n.t("edit.house_numbers.errors")[this.errorCode],
                                    placement: "bottom"
                                })
                    }
                }, {
                    key: "_destroyTooltip",
                    value: function() {
                        this.hasTooltip && this.inputWrapper.tooltip("destroy"),
                            this.hasTooltip = !1
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this._destroyTooltip()
                    }
                }, {
                    key: "focus",
                    value: function() {
                        return this.input.focus(),
                            this.input.val(this.input.val())
                    }
                }, {
                    key: "select",
                    value: function(e) {
                        e.stopPropagation(),
                            this.input.focus()
                    }
                }, {
                    key: "render",
                    value: function() {
                        return this.icon.$div.html(Object(T.getHTML)("templates/house-number", this.model.getFeatureAttributes()))
                    }
                }, {
                    key: "setActive",
                    value: function(e) {
                        return this.icon.$div.find(".content").toggleClass("active", e)
                    }
                }, {
                    key: "setNew",
                    value: function(e) {
                        return this.icon.$div.find(".content").toggleClass("new", e)
                    }
                }, {
                    key: "setValid",
                    value: function(e) {
                        e && this._destroyTooltip();
                        var t = this.icon.$div.find(".content");
                        t.removeClass("valid-".concat(!e)),
                            t.addClass("valid-".concat(e))
                    }
                }, {
                    key: "setErrorCode",
                    value: function(e) {
                        this.errorCode = e,
                            this._createTooltip(),
                            this.icon.div.classList.add("save-error")
                    }
                }, {
                    key: "clearErrorCode",
                    value: function() {
                        this.errorCode = null,
                            this._destroyTooltip(),
                            this.icon.div.classList.remove("save-error")
                    }
                }, {
                    key: "setForced",
                    value: function(e) {
                        var t = this.icon.$div.find(".content");
                        return t.removeClass("forced-".concat(!e)),
                            t.addClass("forced-".concat(e))
                    }
                }, {
                    key: "setSide",
                    value: function(e) {
                        return this.isLeft = e,
                            this.inputWrapper.toggleClass("side-left", this.isLeft)
                    }
                }]),
                t
        }(OL.Marker),
        M = n(64),
        O = n.n(M),
        C = n(188),
        R = n.n(C),
        D = n(13),
        L = n.n(D),
        P = n(7),
        N = n.n(P),
        x = n(16),
        V = n(9),
        j = function(e) {
            function t() {
                return o()(this, t),
                    c()(this, h()(t).apply(this, arguments))
            }
            return g()(t, e),
                l()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .continue-editing": "onContinueEditingClicked",
                            "click .force-invalid": "onForceInvalidClicked"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".loading-animation": {
                                observe: "loading",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".success-message": {
                                observe: "showSuccessMessage",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".error-message": {
                                observe: "showErrorMessage",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".save-error-message": {
                                observe: "showSaveErrorMessage",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".force-message": {
                                observe: "showForceMessage",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".force-action": {
                                observe: ["canForceInvalid", "areHouseNumbersForced"],
                                onGet: function(e) {
                                    var t = L()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                },
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".zoom-message": {
                                observe: "editingAllowedInZoom",
                                visible: b.a.negate(b.a.identity)
                            },
                            ".last-edited": {
                                observe: "lastEditedUsername",
                                visible: !0,
                                visibleFn: V.b
                            },
                            ".last-edited-name": {
                                observe: "lastEditedUsername",
                                onGet: function(e) {
                                    return I18n.t("edit.house_numbers.last_edited", {
                                        username: e
                                    })
                                }
                            },
                            ".title": "address"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            successMessage: ".success-message"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this.toolbar = null,
                            this.disabled = !1,
                            this.model = new N.a.Model({
                                disabled: !1,
                                address: "",
                                lastEditedUsername: "",
                                showSuccessMessage: !1,
                                showErrorMessage: !1,
                                showForceMessage: !1,
                                areHouseNumbersForced: !1,
                                editingAllowedInZoom: e.editingAllowedInZoom,
                                canForceInvalid: e.canForceInvalid,
                                loading: !1
                            }),
                            this.registerEvents()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "registerEvents",
                    value: function() {
                        var e = this;
                        return this._dataModel.actionManager.events.on({
                                afteraction: this.render,
                                afterundoaction: this.render,
                                afterclearactions: this.render,
                                scope: this
                            }),
                            W.accelerators.events.register("editHouseNumbers", this, this.addHouseNumbersShortcutClicked),
                            W.accelerators.events.register("exitHouseNumbers", this, this.exitHouseNumbersClicked),
                            m()(document).on("keyup.house-numbers-lightbox", function(t) {
                                if (27 === t.which)
                                    return e.confirmClose()
                            })
                    }
                }, {
                    key: "unregisterEvents",
                    value: function() {
                        return this._dataModel.actionManager.events.un({
                                afteraction: this.render,
                                afterundoaction: this.render,
                                afterclearactions: this.render,
                                scope: this
                            }),
                            W.accelerators.events.unregister("editHouseNumbers", this, this.addHouseNumbersShortcutClicked),
                            W.accelerators.events.unregister("exitHouseNumbers", this, this.exitHouseNumbersClicked),
                            m()(document).off("keyup.house-numbers-lightbox")
                    }
                }, {
                    key: "saveClicked",
                    value: function() {
                        this.trigger("save:click")
                    }
                }, {
                    key: "addHouseNumbersShortcutClicked",
                    value: function(e) {
                        this.trigger("add:click")
                    }
                }, {
                    key: "exitHouseNumbersClicked",
                    value: function(e) {
                        this.confirmClose()
                    }
                }, {
                    key: "confirmClose",
                    value: function() {
                        var e = !0;
                        if (this._dataModel.actionManager.canSave() && (e = window.confirm(I18n.t("edit.unsaved_changes"))),
                            e)
                            return this.destroy()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this.unregisterEvents()
                    }
                }, {
                    key: "setLoading",
                    value: function(e) {
                        this.model.set("loading", e)
                    }
                }, {
                    key: "showSuccessMessage",
                    value: function() {
                        this.ui.successMessage.fadeIn().delay(3e3).fadeOut()
                    }
                }, {
                    key: "toggleErrorMessage",
                    value: function(e) {
                        this.model.set("showErrorMessage", e)
                    }
                }, {
                    key: "toggleSaveErrorMessage",
                    value: function(e) {
                        this.model.set("showSaveErrorMessage", e)
                    }
                }, {
                    key: "showForceMessage",
                    value: function(e) {
                        this.model.set("showForceMessage", !0),
                            this.model.set("areHouseNumbersForced", e)
                    }
                }, {
                    key: "hideForceMessage",
                    value: function() {
                        this.model.set("showForceMessage", !1)
                    }
                }, {
                    key: "toggleEditingAllowedInZoomMessage",
                    value: function(e) {
                        this.model.set("editingAllowedInZoom", e)
                    }
                }, {
                    key: "setLastEditedUser",
                    value: function(e) {
                        e ? this.model.set("lastEditedUsername", x.default.formatUserName(e, this._dataModel)) : this.model.set("lastEditedUsername", "")
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.model.set("disabled", !0),
                            this.render()
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.model.set("disabled", !1),
                            this.render()
                    }
                }, {
                    key: "onForceInvalidClicked",
                    value: function() {
                        this.hideForceMessage(),
                            this.trigger("force:invalid:click")
                    }
                }, {
                    key: "onContinueEditingClicked",
                    value: function() {
                        this.toggleSaveErrorMessage(!1),
                            this.hideForceMessage(),
                            this.enable(),
                            this.trigger("continue:editing:click")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/HouseNumbers/templates/house-numbers-lightbox"
                    }
                }]),
                t
        }(_.a.View),
        U = n(60),
        F = n(25),
        B = n(17),
        G = n(115),
        H = OL.Class(OL.Marker, {
            dragging: null,
            segments: [],
            closestSegment: null,
            initialize: function(e, t, n) {
                var i = this;
                this.map = n;
                var r = new S.default("fraction-point");
                OL.Marker.prototype.initialize.call(this, e, r),
                    this.segments = t;
                for (var s = ["drag", "dragEnd"], o = 0; o < s.length; o++) {
                    var a = s[o];
                    this.events.addEventType(a)
                }
                this.dragging = new k.a(this.map),
                    this.dragging.down = function(e) {
                        return i.icon.$div.addClass("dragging")
                    };
                var l = this;
                this.dragging.move = function(t) {
                        e = i.map.getLonLatFromViewPortPx(t.xy);
                        var n = Object(G.calculatePointProjectionToSegments)(l.segments, F.fromLonLat(e)),
                            r = n.projectionLonLat;
                        return i.lonlat = B.createLonLat(r.lon, r.lat),
                            i.closestSegment = n.closestSegment,
                            i.layer.drawMarker(i),
                            i.events.triggerEvent("drag", {
                                xy: t.xy,
                                marker: i
                            })
                    },
                    this.dragging.done = function(e) {
                        return i.icon.$div.removeClass("dragging"),
                            i.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: i
                            })
                    },
                    this.icon.$div.on("click", function() {
                        return !1
                    })
            }
        }),
        z = n(74),
        q = n(23),
        Y = n(21),
        $ = n(12),
        K = n(20),
        J = n(59),
        Z = n(428),
        Q = n.n(Z),
        X = n(173);

    function ee(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var te = {
            strokeColor: "#00ece3",
            strokeWidth: 7,
            graphicZIndex: 2
        },
        ne = {
            maskID: "HNAreaMask",
            fillColor: "black",
            graphicZIndex: 1
        },
        ie = {
            strokeWidth: 2,
            strokeColor: "white",
            strokeDashstyle: "dash",
            strokeDashArray: "8, 8"
        },
        re = {
            strokeWidth: 4,
            strokeColor: "#000",
            strokeOpacity: .5,
            strokeDashstyle: "dash",
            strokeDashArray: "8, 8"
        },
        se = function(e) {
            function t(e) {
                var n;
                return o()(this, t),
                    (n = c()(this, h()(t).call(this, e)))._editingLock = null,
                    n._layer = null,
                    n._markerLayer = null,
                    n._fractionLinePadding = null,
                    n._fractionPoint = null,
                    n._fractionLine = null,
                    n._originalGeometry = null,
                    n._updating = !1,
                    n._fogOfWar = null,
                    n._selectedNumber = null,
                    n._invalidHouseNumbers = [],
                    n._failedLoading = !1,
                    n._active = !1,
                    n._adding = !1,
                    n._editAreas = [],
                    n._lightboxView = null,
                    n._model = n.options.model,
                    n._map = n.options.map,
                    n._editable = n.options.editable,
                    n._enabled = n.options.editable,
                    n._segments = n.options.segments,
                    n._descartes = new J.a,
                    n._manipulateHouseNumbers = new Q.a(n._model.actionManager),
                    n._createLightBoxView(),
                    n._listenToLightBoxEvents(),
                    n._initLayers(),
                    n._setupSegments(),
                    n
            }
            return g()(t, e),
                l()(t, [{
                    key: "_createLightBoxView",
                    value: function() {
                        this._lightboxView = new j({
                                dataModel: this._model,
                                address: this._segments[0].getAddress(),
                                canForceInvalid: this._canForcedInvalid(),
                                editingAllowedInZoom: this._editingAllowedInZoom()
                            }),
                            W.app.layout.getRegion("mapDialogRegion").show(this._lightboxView)
                    }
                }, {
                    key: "_listenToLightBoxEvents",
                    value: function() {
                        var e = this;
                        this.listenTo(this._lightboxView, "destroy", this.destroy, this),
                            this.listenTo(this._lightboxView, "save:click", function() {
                                return e._onSave()
                            }),
                            this.listenTo(this._lightboxView, "add:click", function() {
                                return e._onAddClicked()
                            }),
                            this.listenTo(this._lightboxView, "force:invalid:click", function() {
                                return e._forceInvalid()
                            }),
                            this.listenTo(this._lightboxView, "continue:editing:click", function() {
                                return e._continueEditing()
                            })
                    }
                }, {
                    key: "_initLayers",
                    value: function() {
                        return this._layer = new OL.Layer.Vector("houseNumbers", {
                                renderers: [U.a],
                                rendererOptions: {
                                    zIndexing: !0
                                }
                            }),
                            this._markerLayer = new OL.Layer.Markers("houseNumberMarkers"),
                            this._map.addLayer(this._layer),
                            this._map.addLayer(this._markerLayer),
                            m()(this._markerLayer.div).addClass("house-numbers-layer")
                    }
                }, {
                    key: "_setupSegments",
                    value: function() {
                        var e, t = this,
                            n = this._segments.map(function(t) {
                                return (e = $.cloneGeometry(t.geometry)).model = t,
                                    e
                            }),
                            i = this._segments.map(function(e) {
                                return e.getID()
                            });
                        return this.joinedGeometry = B.createMultiLineString(n),
                            this._fetchHouseNumbers(i).then(function(e) {
                                if (t._active)
                                    return t.render()
                            }).catch(function(e) {
                                return console.error(e),
                                    t._failedLoading = !0,
                                    t._lightboxView.render(),
                                    t._lightboxView.toggleErrorMessage(!0)
                            }).finally(function() {
                                return t._lightboxView.setLoading(!1)
                            }),
                            this._activate(),
                            this._lightboxView.setLoading(!0)
                    }
                }, {
                    key: "_fetchHouseNumbers",
                    value: function(e) {
                        var t = this;
                        return this._descartes.getHouseNumbers(e).then(function(e) {
                            return t._model.mergeResponse(e),
                                t._setHouseNumbersInUse(),
                                t._parseEditAreas(e.editAreas),
                                e
                        })
                    }
                }, {
                    key: "_setHouseNumbersInUse",
                    value: function() {
                        this._getHouseNumbers().forEach(function(e) {
                            return W.editingMediator.setInUse(e, X.IN_USE_REASONS_FLAGS.HOUSE_NUMBERS)
                        })
                    }
                }, {
                    key: "_clearHouseNumbersInUse",
                    value: function() {
                        this._getHouseNumbers().forEach(function(e) {
                            return W.editingMediator.clearInUse(e, X.IN_USE_REASONS_FLAGS.HOUSE_NUMBERS)
                        })
                    }
                }, {
                    key: "_parseEditAreas",
                    value: function(e) {
                        e && (this._editAreas = e.objects.map(function(e) {
                            return function(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = null != arguments[t] ? arguments[t] : {};
                                    t % 2 ? ee(Object(n), !0).forEach(function(t) {
                                        r()(e, t, n[t])
                                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ee(Object(n)).forEach(function(t) {
                                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                    })
                                }
                                return e
                            }({}, e, {
                                geometry: Y.parse(e.geometry)
                            })
                        }))
                    }
                }, {
                    key: "_onDrag",
                    value: function(e) {
                        var t = F.fromLonLat(this._map.getLonLatFromViewPortPx(e.xy)),
                            n = Object(G.calculatePointProjectionToSegments)(this._segments, t);
                        this._fractionPoint.lonlat = $.cloneGeometry(n.projectionLonLat),
                            this._selectedNumber.setSide(n.isLeft),
                            this._markerLayer.drawMarker(this._fractionPoint),
                            this._selectedNumber.icon.forceReflow(),
                            this._updateFractionPointLine(),
                            this._layer.drawFeature(this._fractionLinePadding),
                            this._layer.drawFeature(this._fractionLine)
                    }
                }, {
                    key: "_updateFractionPointLine",
                    value: function() {
                        K.setVertex(this._fractionLine.geometry, 0, this._fractionPoint.lonlat.lon, this._fractionPoint.lonlat.lat),
                            K.setVertex(this._fractionLine.geometry, 1, this._selectedNumber.lonlat.lon, this._selectedNumber.lonlat.lat),
                            K.setVertex(this._fractionLinePadding.geometry, 0, this._fractionPoint.lonlat.lon, this._fractionPoint.lonlat.lat),
                            K.setVertex(this._fractionLinePadding.geometry, 1, this._selectedNumber.lonlat.lon, this._selectedNumber.lonlat.lat)
                    }
                }, {
                    key: "_onDragEnd",
                    value: function(e) {
                        var t = this;
                        this._selectedNumber.isNew || this._ignoreUpdates(function() {
                            var e = t._manipulateHouseNumbers.moveHouseNumberRooftop(t._segments, t._selectedNumber.model, t._selectedNumber.lonlat);
                            t._selectedNumber.model = e,
                                t._selectedNumber.setValid(!0),
                                t._selectedNumber.setForced(!1),
                                t._selectedNumber.clearErrorCode()
                        })
                    }
                }, {
                    key: "_removeFeatures",
                    value: function() {
                        this._adding && null != this._selectedNumber && this._selectedNumber.dragging.forceEnd(),
                            this._adding = !1;
                        for (var e = 0; e < this._markerLayer.markers.length; e++) {
                            this._markerLayer.markers[e].destroy()
                        }
                        this._markerLayer.clearMarkers(),
                            this._fractionPoint = null,
                            this._layer.destroyFeatures(this._layer.features),
                            this.editArea = null
                    }
                }, {
                    key: "render",
                    value: function() {
                        !this._updating && this._active && (this._removeFeatures(),
                            this._drawHouseNumbers(),
                            this._drawFogOfWar(),
                            this._drawEditArea(),
                            this._drawSegments())
                    }
                }, {
                    key: "_getHouseNumbers",
                    value: function() {
                        var e = this;
                        return b.a.flatten(this._segments.map(function(t) {
                            return O.a.getHouseNumbersBySegmentId(e._model, t.attributes.id).filter(function(e) {
                                return !e.isDeleted()
                            })
                        }))
                    }
                }, {
                    key: "_drawHouseNumbers",
                    value: function() {
                        var e = this;
                        this._getHouseNumbers().forEach(function(t) {
                            e._createHouseNumberMarker(t)
                        })
                    }
                }, {
                    key: "_drawSegments",
                    value: function() {
                        var e = this._segments.map(function(e) {
                            return new OL.Feature.Vector($.cloneGeometry(e.geometry), {}, te)
                        });
                        return this._layer.addFeatures(e)
                    }
                }, {
                    key: "_drawEditArea",
                    value: function() {
                        var e = this._editAreas.map(function(e) {
                            return new OL.Feature.Vector(e.geometry, e, ne)
                        });
                        this._layer.addFeatures(e)
                    }
                }, {
                    key: "_createHouseNumberMarker",
                    value: function(e) {
                        var t = Object(G.calculatePointProjectionToSegments)(this._segments, e.getGeometry()),
                            n = new A(e, F.toLonLat(e.getGeometry()), t.isLeft, this._map.getOLMap());
                        this._markerLayer.addMarker(n);
                        var i = this._getHouseNumberInvalidError(e.getID());
                        return i && n.setErrorCode(i.errorType),
                            this._listenToHouseNumberMarkerEvents(n),
                            n.layer = this._markerLayer,
                            n
                    }
                }, {
                    key: "_listenToHouseNumberMarkerEvents",
                    value: function(e) {
                        var t = this;
                        e.events.register("click:input", this, this._onMarkerClick),
                            e.events.register("change:number", this, this._onValueChanged),
                            e.events.register("delete", this, this._onMarkerDelete),
                            e.events.register("unselect", null, function() {
                                return t._unselectNumber(t._selectedNumber)
                            }),
                            e.events.register("drag", this, this._onDrag),
                            e.events.register("dragEnd", this, this._onDragEnd)
                    }
                }, {
                    key: "_onValueChanged",
                    value: function(e) {
                        var t = e.number,
                            n = e.object;
                        if (n.isNew && "" !== t) {
                            var i = this._manipulateHouseNumbers.createAndAddHouseNumber(this._segments, n.lonlat, t);
                            delete n.isNew,
                                n.model = i
                        } else if ("" !== t) {
                            var r = n.model;
                            return this._manipulateHouseNumbers.updateHouseNumber(r, t)
                        }
                    }
                }, {
                    key: "_onMarkerDelete",
                    value: function(e) {
                        var t = e.object;
                        return this._unselectNumber(t),
                            t.isNew ? this._cancelAdd() : this._manipulateHouseNumbers.deleteHouseNumber(t.model)
                    }
                }, {
                    key: "_onMarkerClick",
                    value: function(e) {
                        var t = e.object;
                        return this._selectNumber(t)
                    }
                }, {
                    key: "_selectNumber",
                    value: function(e) {
                        if (this._enabled && this._selectedNumber !== e) {
                            this._unselectNumber(this._selectedNumber),
                                this._selectedNumber = e;
                            var t = $.cloneGeometry(this._selectedNumber.model.getFractionPoint());
                            return this._fractionPoint = new H(F.toLonLat(t), this._segments, this._map.getOLMap()),
                                this._markerLayer.addMarker(this._fractionPoint),
                                this._fractionPoint.dragging.activate(this._fractionPoint.icon.$div),
                                this._fractionPoint.layer = this._markerLayer,
                                this._selectedNumber.icon.bringToFront(),
                                this._selectedNumber.focus(),
                                this._selectedNumber.setActive(!0),
                                this._selectedNumber.dragging.activate(this._selectedNumber.icon.$div.find(".drag-handle")),
                                this._originalGeometry = $.cloneGeometry(this._selectedNumber.model.getGeometry()),
                                this._fractionPoint.events.register("dragEnd", this, this._onFractionPointDragEnd),
                                this._fractionPoint.events.register("drag", this, this._onFractionPointDrag),
                                this._lightboxView.setLastEditedUser(this._selectedNumber.model.getUpdatedBy()),
                                this._fractionLine = new OL.Feature.Vector(B.createLineString([$.cloneGeometry(t), $.cloneGeometry(this._originalGeometry)]), {}, ie),
                                this._fractionLinePadding = new OL.Feature.Vector(B.createLineString([$.cloneGeometry(t), $.cloneGeometry(this._originalGeometry)]), {}, re),
                                this._layer.addFeatures([this._fractionLinePadding, this._fractionLine])
                        }
                    }
                }, {
                    key: "_onFractionPointDrag",
                    value: function() {
                        return K.setVertex(this._fractionLine.geometry, 0, this._fractionPoint.lonlat.lon, this._fractionPoint.lonlat.lat),
                            K.setVertex(this._fractionLinePadding.geometry, 0, this._fractionPoint.lonlat.lon, this._fractionPoint.lonlat.lat),
                            this._fractionPoint.icon.forceReflow(),
                            this._layer.drawFeature(this._fractionLinePadding),
                            this._layer.drawFeature(this._fractionLine)
                    }
                }, {
                    key: "_onFractionPointDragEnd",
                    value: function() {
                        var e = this,
                            t = $.cloneGeometry(this._fractionPoint.lonlat);
                        this._selectedNumber.isNew ? this._selectedNumber.model.setFractionPoint(F.fromLonLat(t)) : this._ignoreUpdates(function() {
                            var n = e._manipulateHouseNumbers.moveHouseNumberFractionPoint(e._segments, e._selectedNumber.model, t);
                            e._selectedNumber.model = n,
                                e._selectedNumber.setValid(!0),
                                e._selectedNumber.setForced(!1),
                                e._selectedNumber.clearErrorCode()
                        })
                    }
                }, {
                    key: "_ignoreUpdates",
                    value: function(e) {
                        this._updating = !0,
                            e(),
                            this._updating = !1
                    }
                }, {
                    key: "_unselectNumber",
                    value: function(e) {
                        if (null != e) {
                            if (e.dragging.deactivate(),
                                e.setActive(!1),
                                this._selectedNumber = null,
                                this._lightboxView.setLastEditedUser(null),
                                this._fractionPoint && (this._fractionPoint.events.unregister("dragEnd", this, this._onFractionPointDragEnd),
                                    this._fractionPoint.events.unregister("drag", this, this._onFractionPointDrag),
                                    this._markerLayer.removeMarker(this._fractionPoint)),
                                this._fractionLine && this._layer.destroyFeatures([this._fractionLine, this._fractionLinePadding]),
                                "" === e.input.val()) {
                                if (e.isNew)
                                    return this._markerLayer.removeMarker(e);
                                var t = e.input.get(0).valueAsNumber;
                                return isNaN(t) ? e.input.val(e.model.getNumber()) : this._manipulateHouseNumbers.deleteHouseNumber(e.model)
                            }
                            return e.isNew ? (e.model.setNumber(e.input.val()),
                                delete e.isNew,
                                this._manipulateHouseNumbers.addHouseNumber(e.model)) : void 0
                        }
                    }
                }, {
                    key: "_onAddClicked",
                    value: function() {
                        if (!this._adding && this._enabled && !this._failedLoading) {
                            this._adding = !0;
                            var e = B.createPoint(0, 0),
                                t = Object(G.calculatePointProjectionToSegments)(this._segments, e),
                                n = new R.a({
                                    number: "",
                                    geometry: e,
                                    fractionPoint: B.createPoint(0, 0),
                                    forced: !1,
                                    segID: t.closestSegment.getID()
                                }),
                                i = this._createHouseNumberMarker(n);
                            return i.setNew(!0),
                                i.isNew = !0,
                                i.dragging.forceStart(),
                                this._selectNumber(i),
                                i.events.register("click:input", this, this._onAddEnd)
                        }
                    }
                }, {
                    key: "_cancelAdd",
                    value: function() {
                        if (this._adding)
                            return this._adding = !1,
                                this._selectedNumber.dragging.forceEnd(),
                                this._unselectNumber(this._selectedNumber)
                    }
                }, {
                    key: "_onAddEnd",
                    value: function(e) {
                        var t = e.object,
                            n = F.fromLonLat(t.lonlat);
                        if (this._editAreas.some(function(e) {
                                return e.geometry.containsPoint(n)
                            })) {
                            this._adding = !1,
                                t.dragging.forceEnd();
                            var i = Object(G.calculatePointProjectionToSegments)(this._segments, n);
                            return t.model.setGeometry(n),
                                t.model.setFractionPoint(F.fromLonLat(i.projectionLonLat)),
                                t.model.setSegmentId(i.closestSegment.getID()),
                                t.setNew(!1),
                                t.events.unregister("click:input", this, this._onAddEnd),
                                t.focus()
                        }
                    }
                }, {
                    key: "_onMapClick",
                    value: function(e) {
                        if (null != this._selectedNumber)
                            return this._unselectNumber(this._selectedNumber)
                    }
                }, {
                    key: "_activate",
                    value: function() {
                        this._active || (this._active = !0,
                            this._editingLock = W.editingMediator.lockEditing(),
                            W.editingMediator.enterEditingHouseNumbers(),
                            this._map.getMapEventsListener().register("click", this, this._onMapClick),
                            this._map.getMapEventsListener().register("moveend", this, this._drawFogOfWar),
                            this._map.getMapEventsListener().register("zoomend", this, this._onZoomChanged),
                            this._onZoomChanged(),
                            this._model.segmentHouseNumbers.on([q.ADDED, q.REMOVED, q.STATE_DELETED].join(" "), this.render, this),
                            this._model.segmentHouseNumbers.on(q.ATTR_CHANGED, this._onHouseNumbersChange, this),
                            W.commands.execute("save:setHandler", this._saveChanges, this))
                    }
                }, {
                    key: "_onHouseNumbersChange",
                    value: function(e) {
                        this._clearHouseNumbersInvalidErrors(e),
                            this.render()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        return this._deactivate(),
                            this._lightboxView.destroy(),
                            this._clearHouseNumbersInUse(),
                            this._map.removeLayer(this._layer),
                            this._map.removeLayer(this._markerLayer)
                    }
                }, {
                    key: "_deactivate",
                    value: function() {
                        this._active && (this._active = !1,
                            W.editingMediator.releaseEditing(this._editingLock),
                            W.editingMediator.exitEditingHouseNumbers(),
                            this._editingLock = null,
                            this._model.actionManager.undoAll(),
                            this._model.actionManager.clear(),
                            this._map.getMapEventsListener().unregister("click", this, this._onMapClick),
                            this._map.getMapEventsListener().unregister("moveend", this, this._drawFogOfWar),
                            this._map.getMapEventsListener().unregister("zoomend", this, this._onZoomChanged),
                            this._model.segmentHouseNumbers.off(null, null, this),
                            this._removeFeatures(),
                            W.commands.execute("save:restoreDefaultHandler"))
                    }
                }, {
                    key: "_drawFogOfWar",
                    value: function() {
                        return this._fogOfWar && this._layer.destroyFeatures(this._fogOfWar),
                            this._fogOfWar = new OL.Feature.Vector(this._map.getExtent().toGeometry(), {}, {
                                fillColor: "black",
                                fillOpacity: .5,
                                strokeWidth: 0,
                                mask: "url(#HNAreaMask)"
                            }),
                            this._layer.addFeatures(this._fogOfWar),
                            this._layer.redraw()
                    }
                }, {
                    key: "_onSave",
                    value: function() {
                        return this._saveChanges()
                    }
                }, {
                    key: "_saveChanges",
                    value: function() {
                        var e = this;
                        if (!W.editingMediator.get("saving"))
                            return this._unselectNumber(this._selectedNumber),
                                this._enabled = !1,
                                this._lightboxView.disable(),
                                this._lightboxView.setLoading(!0),
                                W.editingMediator.set({
                                    navigation: !1,
                                    saving: !0
                                }),
                                W.controller.save().then(function() {
                                    return e._onSaveSuccess()
                                }).catch(function(t) {
                                    if (!(t instanceof z.a))
                                        throw t;
                                    e._onSaveFail(t.errors)
                                }).finally(function() {
                                    e._lightboxView.setLoading(!1),
                                        W.editingMediator.set({
                                            navigation: !0,
                                            saving: !1
                                        })
                                })
                    }
                }, {
                    key: "_onSaveFail",
                    value: function(e) {
                        var t = e[0];
                        return 716 === t.get("code") ? (this._setInvalidHouseNumbers(t.get("objects")),
                                this._lightboxView.showForceMessage(this._areInvalidHouseNumbersForced())) : this._lightboxView.toggleSaveErrorMessage(!0),
                            this.render()
                    }
                }, {
                    key: "_setInvalidHouseNumbers",
                    value: function(e) {
                        e && (this._invalidHouseNumbers = e)
                    }
                }, {
                    key: "_getHouseNumberInvalidError",
                    value: function(e) {
                        return this._invalidHouseNumbers.find(function(t) {
                            return t.id === e
                        })
                    }
                }, {
                    key: "_clearHouseNumbersInvalidErrors",
                    value: function(e) {
                        e.forEach(this._clearHouseNumberInvalidError.bind(this))
                    }
                }, {
                    key: "_clearHouseNumberInvalidError",
                    value: function(e) {
                        this._invalidHouseNumbers = this._invalidHouseNumbers.filter(function(t) {
                            return t.id !== e.id
                        })
                    }
                }, {
                    key: "_onSaveSuccess",
                    value: function() {
                        this._invalidHouseNumbers = [],
                            this._enabled = !0,
                            this._lightboxView.enable(),
                            this._lightboxView.showSuccessMessage(),
                            this._setHouseNumbersInUse()
                    }
                }, {
                    key: "_editingAllowedInZoom",
                    value: function() {
                        return this._map.getZoom() >= W.Config.houseNumbers.minEditZoom
                    }
                }, {
                    key: "_onZoomChanged",
                    value: function() {
                        m()(this._markerLayer.div).toggleClass("preview", !this._editingAllowedInZoom()),
                            this._editingAllowedInZoom() || (this._cancelAdd(),
                                this._unselectNumber(this._selectedNumber)),
                            this._lightboxView.toggleEditingAllowedInZoomMessage(this._editingAllowedInZoom()),
                            this._lightboxView.render()
                    }
                }, {
                    key: "_canForcedInvalid",
                    value: function() {
                        return !this._segments || Object.values(this._segments).every(function(e) {
                            return null != e && e.canForceHouseNumbers()
                        })
                    }
                }, {
                    key: "_areInvalidHouseNumbersForced",
                    value: function() {
                        var e = this.getInvalidHouseNumbers();
                        return this._manipulateHouseNumbers.areHouseNumbersForced(e)
                    }
                }, {
                    key: "getInvalidHouseNumbers",
                    value: function() {
                        var e = this;
                        return this._invalidHouseNumbers.map(function(t) {
                            return e._model.segmentHouseNumbers.getObjectById(t.id)
                        })
                    }
                }, {
                    key: "_continueEditing",
                    value: function() {
                        this._enabled = !0
                    }
                }, {
                    key: "_forceInvalid",
                    value: function() {
                        var e = this;
                        return this._lightboxView.hideForceMessage(),
                            b.a.isEmpty(this._invalidHouseNumbers) || this._ignoreUpdates(function() {
                                var t = e.getInvalidHouseNumbers();
                                e._manipulateHouseNumbers.setForced(t)
                            }),
                            this._saveChanges()
                    }
                }]),
                t
        }(_.a.Object);
    t.a = se
}, function(e, t, n) {
    "use strict";
    var i = n(69),
        r = n(2),
        s = n.n(r),
        o = n(1),
        a = n.n(o),
        l = n(20),
        u = function() {
            function e(t, n, i) {
                s()(this, e),
                    this.info = t,
                    this.layer = n,
                    this.displayOptions = i
            }
            return a()(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        if (this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this.displayOptions.drive && this._drawUserDrive(),
                            this.displayOptions.route)
                            return this._drawRoute()
                    }
                }, {
                    key: "_drawUserDrive",
                    value: function() {
                        if (this.info.driveGeometry)
                            for (var e = l.getVertices(this.info.driveGeometry), t = 0; t < e.length; t++)
                                this.layer.driveRenderer.drawUserDrive(e[t])
                    }
                }, {
                    key: "_drawRoute",
                    value: function() {
                        var e = this;
                        if (this.info.routeGeometry)
                            return l.getVertices(this.info.routeGeometry).map(function(t) {
                                return e.layer.driveRenderer.drawSuggestedRoute(t),
                                    e.layer.driveRenderer.drawRouteInstructions(t, e.info.getRouteInstructions())
                            })
                    }
                }]),
                e
        }(),
        c = n(78),
        d = n(31),
        h = n(18),
        p = c.a.extend({
            MORE_INFO_DEFAULTS: [{
                name: "route",
                visible: !0
            }, {
                name: "drive",
                visible: !0
            }],
            getTitle: function() {
                return this.problem.attributes.typeText
            },
            getReportedString: function() {
                var e = this.problem.attributes.localDriveTime || this.problem.attributes.driveDate;
                return I18n.t("update_requests.panel.reported", {
                    date: I18n.l("time.formats.long", Date.parse(e))
                })
            },
            hasDescription: function() {
                var e = this.problem.attributes.description;
                return null != e && e.length > 0
            },
            getDescription: function() {
                return this.problem.attributes.description
            },
            isConversationAvailable: function() {
                return !0
            },
            allowCommenting: function() {
                return this.problem.model.loginManager.isLoggedIn()
            },
            minRankForEdit: function() {
                return Object(d.getServerConfig)().minRankForEditingUpdateRequest
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? Promise.resolve(this.moreInfo) : this._descartesClient.getUpdateRequestSessionsByIds([this.problem.getID()]).then(function(t) {
                    return e.problem.model.mergeResponse(t),
                        t.updateRequestSessions.objects
                }).then(function(t) {
                    return e._moreInfoTypeMap.drive.set({
                            available: null != t[0].driveGeometry
                        }),
                        e._moreInfoTypeMap.route.set({
                            available: null != t[0].routeGeometry
                        }),
                        e.moreInfo = t,
                        t
                })
            },
            getConversation: function() {
                return null != this.conversation ? Promise.resolve(this.conversation) : this.getMoreInfo().then(function(e) {
                    return e[0]
                })
            },
            getRepository: function() {
                return this.problem.model.mapUpdateRequests
            },
            createMoreInfoRenderer: function(e, t, n) {
                return new u(e, t, n)
            },
            getMarkerLayer: function() {
                return W.map.updateRequestLayer
            },
            getBounds: function() {
                return this.problem.getRequestBounds().getBounds()
            },
            getNextButtonString: function() {
                return this._nextButtonString || I18n.t("update_requests.panel.next")
            },
            reportStateChanged: function() {
                var e = "".concat(this.problem.attributes.type);
                this.getState() === i.a.SOLVED ? h.reportAnalytic.updateRequestAction("update_state", e, 1) : this.getState() === i.a.NOT_IDENTIFIED && h.reportAnalytic.updateRequestAction("update_state", e, -1)
            }
        });
    t.a = p
}, function(e, t, n) {
    "use strict";
    var i = n(7),
        r = n.n(i),
        s = n(4),
        o = n.n(s),
        a = n(2),
        l = n.n(a),
        u = n(1),
        c = n.n(u),
        d = n(5),
        h = n.n(d),
        p = n(3),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(16),
        _ = /(https?:\/\/(?:-\.)?(?:[^\s/?.#-]+\.?)+(?:\/[^\s]*)?)/i,
        y = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return m()(t, e),
                c()(t, [{
                    key: "tagName",
                    value: function() {
                        return "span"
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getCommentLines: function() {
                                return this.text.split("\n")
                            },
                            getCommentNumber: function() {
                                return this.getCommentLines().length
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Conversation/templates/text"
                    }
                }]),
                t
        }(o.a.View),
        b = function(e) {
            function t() {
                return l()(this, t),
                    h()(this, g()(t).apply(this, arguments))
            }
            return m()(t, e),
                c()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            textItems: ".text"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.model.get("text").split(_).map(function(e) {
                                return new r.a.Model({
                                    text: e,
                                    isHref: e.match(_)
                                })
                            }),
                            t = new r.a.Collection(e);
                        this.showChildView("textItems", new o.a.CollectionView({
                            collection: t,
                            childView: y
                        }))
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getUserName: function() {
                                return this.isByReporter() ? I18n.t("conversation.reporter") : v.default.formatUserName(this.userID)
                            },
                            isByReporter: function() {
                                return -1 === this.userID
                            }
                        }
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "comment"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Conversation/templates/item"
                    }
                }]),
                t
        }(o.a.View),
        E = n(79),
        w = n.n(E),
        S = n(150),
        k = n(9),
        T = o.a.CompositeView.extend({
            childView: b,
            className: "conversation-view",
            childViewContainer: ".comment-list",
            template: "Waze/MapEditor/UI/Modules/Conversation/templates/list",
            behaviors: {
                charCount: {
                    behaviorClass: S.a,
                    charLimits: [{
                        inputSelector: ".new-comment-text",
                        charCountSelector: ".new-comment-max-length",
                        maxLength: w.a.prototype.MAX_BODY_LENGTH,
                        modelAttribute: "viewModel",
                        observe: "commentText"
                    }]
                }
            },
            bindings: {
                "[name=follow]": {
                    observe: "following",
                    attributes: [{
                        observe: "disableFollowing",
                        name: "disabled"
                    }]
                },
                ".no-comments": {
                    observe: "commentCount",
                    visible: !0,
                    visibleFn: k.b,
                    onGet: function(e) {
                        return 0 === e
                    }
                },
                ".new-comment-text": {
                    observe: "commentText",
                    attributes: [{
                        observe: "submitting",
                        name: "disabled"
                    }]
                },
                ".send-button": {
                    attributes: [{
                        observe: "submitting",
                        name: "disabled"
                    }]
                }
            },
            ui: {
                commentList: ".comment-list"
            },
            events: {
                "submit .new-comment-form": "_onSubmit"
            },
            initialize: function() {
                return this.commentable = this.options.commentable,
                    this.collection = this.commentable.getComments(),
                    this.viewModel = new r.a.Model({
                        following: this.commentable.isFollowing(),
                        commentCount: this.collection.length,
                        commentText: "",
                        disableFollowing: !1,
                        submitting: !1
                    }),
                    this.listenTo(this.viewModel, "change:following", this._onFollowingChanged),
                    this.listenTo(this.collection, "add", this._updateCommentCount)
            },
            _updateCommentCount: function() {
                return this.viewModel.set({
                    commentCount: this.collection.length
                })
            },
            onRender: function() {
                return this.stickit(this.viewModel),
                    this._scrollToLastComment()
            },
            _onFollowingChanged: function(e, t, n) {
                var i = this;
                if (n.stickitChange)
                    return this.viewModel.set({
                            disableFollowing: !0
                        }),
                        this.commentable.setFollowing(t).catch(function() {
                            return i.viewModel.set({
                                following: !t
                            })
                        }).finally(function() {
                            return i.viewModel.set({
                                disableFollowing: !1
                            })
                        })
            },
            _onSubmit: function(e) {
                var t = this;
                e.preventDefault();
                var n = this.viewModel.get("commentText").trim();
                if (!(n.length <= 0))
                    return this.viewModel.set({
                            submitting: !0
                        }),
                        this.commentable.addComment(n).then(function(e) {
                            return t.viewModel.set({
                                    commentText: ""
                                }),
                                t.collection.add(e),
                                t.viewModel.set({
                                    following: t.commentable.isFollowing()
                                }),
                                t._scrollToLastComment()
                        }).catch(function() {
                            window.alert(I18n.t("conversation.send_error"))
                        }).finally(function() {
                            return t.viewModel.set({
                                submitting: !1
                            })
                        })
            },
            _scrollToLastComment: function() {
                var e = this.ui.commentList.get(0);
                e.scrollTop = e.scrollHeight
            }
        });
    t.a = T
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(37)),
        l = o(n(12)),
        u = n(63),
        c = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    var t = new a.default("place-update"),
                        n = this._getLocation(e);
                    return new OpenLayers.Marker(n, t)
                },
                t.prototype.render = function(e) {
                    var t = this.getMarker();
                    t.icon.$div.data("model", e),
                        t.icon.$div.attr("data-id", e.getID());
                    var n = t.icon.$div,
                        i = n.hasClass("selected");
                    return n.removeClass(),
                        n.addClass(u.MARKER_CLASS),
                        n.addClass("place-update"),
                        this._hasMultipleUpdates(e) ? (n.addClass("multiple"),
                            n.attr("data-update-count", this._getUpdateCount(e))) : n.addClass(this._getUpdateType(e)),
                        e.hasOpenUpdateRequests() || n.addClass("approved"),
                        i && n.addClass("selected"),
                        n.addClass(this._getSeverity(e)),
                        this._reposition(this._getLocation(e))
                },
                t.prototype._reposition = function(e) {
                    var t = this.getMarker();
                    e.equals(t.lonlat) || t.moveTo(t.map.getLayerPxFromLonLat(t.lonlat))
                },
                t.prototype._getLocation = function(e) {
                    return l.getBoundsCenterLonLat(e.geometry)
                },
                t.prototype._hasMultipleUpdates = function(e) {
                    return e.attributes.venueUpdateRequests.length > 1
                },
                t.prototype._getUpdateCount = function(e) {
                    return e.attributes.venueUpdateRequests.length
                },
                t.prototype._getUpdateType = function(e) {
                    return e.attributes.venueUpdateRequests[0].get("updateType").toLowerCase()
                },
                t.prototype._getSeverity = function(e) {
                    return e.attributes.venueUpdateRequests[0].getSeverity()
                },
                t
        }(n(119).FeatureMarker);
    t.PlaceUpdateMarker = c
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(190);
    t.DEFAULT_SPEED = 0;
    var r = function() {
        function e() {}
        return e.prototype.supportsSpeed = function(e) {
                return [i.CAMERA_TYPES.SPEED_CAMERA, i.CAMERA_TYPES.RED_LIGHT].includes(e)
            },
            e.prototype.isSpeedValid = function(e, t) {
                return !this.supportsSpeed(t) || e >= 0
            },
            e
    }();
    t.SpeedUseCase = r
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(36),
        r = function() {
            function e() {}
            return e.prototype.addSuggestedCategory = function(e, t) {
                    var n = e.filter(function(e) {
                        return e !== t
                    });
                    return n.pop(),
                        n.push(t),
                        this.handleParkingLotCategoryLogic(e, n)
                },
                e.prototype.setMainCategory = function(e, t) {
                    var n = e.filter(function(e) {
                        return e !== t
                    });
                    return e.length > 0 && e[0] === t ? e : (n.unshift(t),
                        this.handleParkingLotCategoryLogic(e, n))
                },
                e.prototype.setCategories = function(e, t) {
                    return this.handleParkingLotCategoryLogic(e, t)
                },
                e.prototype.handleParkingLotCategoryLogic = function(e, t) {
                    void 0 === e && (e = []),
                        void 0 === t && (t = []);
                    var n = t;
                    return e.includes(i.VENUE_PARKING_LOT) ? t.length > 1 && (n = t.filter(function(e) {
                            return e !== i.VENUE_PARKING_LOT
                        })) : t.includes(i.VENUE_PARKING_LOT) && (n = [i.VENUE_PARKING_LOT]),
                        n
                },
                e
        }();
    t.default = r
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(29)),
        a = function() {
            function e(e, t) {
                this.dataModel = e,
                    this.landmarkId = t;
                var n = e.venues.getObjectById(t);
                if (null === n)
                    throw new Error("landmark: " + t + " does not exist");
                this.currentAliases = n.attributes.aliases.concat()
            }
            return e.prototype._removeEmptyAliases = function(e) {
                    return e.filter(function(e) {
                        return "" !== e
                    })
                },
                e.prototype._setAliases = function(e) {
                    var t = this.dataModel.venues.getObjectById(this.landmarkId),
                        n = {
                            aliases: this._removeEmptyAliases(e)
                        };
                    t && this.dataModel.actionManager.add(new o.default(t, n))
                },
                e.prototype.addAlias = function(e) {
                    var t = r(this.currentAliases, [e]);
                    this._setAliases(t)
                },
                e.prototype.removeAlias = function(e) {
                    var t = this.currentAliases.concat();
                    t.splice(e, 1),
                        this._setAliases(t)
                },
                e.prototype.changeAlias = function(e, t) {
                    var n = this.currentAliases.concat();
                    n.splice(e, 1, t),
                        this._setAliases(n)
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(41)),
        a = s(n(15)),
        l = n(39),
        u = function(e) {
            function t(t, n, i) {
                var r = e.call(this, i) || this;
                return r.closure = t,
                    r.segment = n,
                    r
            }
            return r(t, e),
                t.prototype.serialize = function() {
                    return {
                        _objectType: a.default.ROAD_CLOSURE,
                        action: o.default.TYPE.ADD,
                        attributes: {
                            reason: this.closure.reason,
                            location: this.closure.location,
                            segID: this.closure.segID,
                            id: this.closure.getID(),
                            startDate: this.closure.startDate,
                            endDate: this.closure.endDate,
                            forward: this.closure.forward,
                            permanent: this.closure.permanent,
                            eventId: this.closure.eventId,
                            fromNodeClosed: this.closure.fromNodeClosed
                        }
                    }
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.segment]
                },
                t.prototype.doAction = function() {
                    this.model.repos.roadClosures.put(this.closure)
                },
                t.prototype.redoAction = function() {
                    this.doAction()
                },
                t.prototype.undoAction = function() {
                    this.model.repos.roadClosures.remove(this.closure)
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return [this.closure.getUniqueID(), this.segment.getUniqueID()]
                },
                t.prototype.generateDescription = function() {
                    this._description = l.formatActionAddressDescription(this.segment, "AddRoadClosure")
                },
                t
        }(o.default);
    t.default = u
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(26),
        r = n(118),
        s = n(45),
        o = function() {
            function e(e) {
                Array.isArray(e) ? this.segments = e : this.segments = [e],
                    this.segmentReducer = new s.SegmentReducer(this.segments, new r.SegmentReader)
            }
            return e.prototype.getLevel = function() {
                    return this.segmentReducer.reduceLevels()
                },
                e.prototype.increaseSegmentLevel = function() {
                    return this.changeSegmentLevelBy(1)
                },
                e.prototype.decreaseSegmentLevel = function() {
                    return this.changeSegmentLevelBy(-1)
                },
                e.prototype.changeSegmentLevelBy = function(e) {
                    var t = this.getLevel(),
                        n = this.segments.every(function(e) {
                            return e.arePropertiesEditable()
                        });
                    return t !== s.MixedValue && n ? t < i.MIN_LEVEL || t > i.MAX_LEVEL ? null : t + e : null
                },
                e
        }();
    t.SegmentsLevelUseCase = o
}, , , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.NodeName = {
            FROM: "from",
            TO: "to"
        }
}, , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.EDITABLE_AREA_TYPES = {
        MANAGED: "managed",
        DRIVE: "drive"
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(56),
        r = [i.RepositoryName.USERS, i.RepositoryName.COUNTRIES, i.RepositoryName.STATES, i.RepositoryName.CITIES, i.RepositoryName.STREETS, i.RepositoryName.NODES, i.RepositoryName.JUNCTIONS, i.RepositoryName.BIG_JUNCTIONS, i.RepositoryName.SEGMENTS, i.RepositoryName.SEGMENT_HOUSE_NUMBERS, i.RepositoryName.VENUES, i.RepositoryName.UPDATE_REQUEST_SESSIONS, i.RepositoryName.ARCHIVES, i.RepositoryName.ARCHIVE_SESSIONS, i.RepositoryName.CAMERAS, i.RepositoryName.MAP_UPDATE_REQUESTS, i.RepositoryName.PROBLEMS, i.RepositoryName.MAJOR_TRAFFIC_EVENTS, i.RepositoryName.ROAD_CLOSURES, i.RepositoryName.MANAGED_AREAS, i.RepositoryName.USER_AREAS, i.RepositoryName.MAP_COMMENTS, i.RepositoryName.RESTRICTED_DRIVING_AREAS, "notifications", i.RepositoryName.RESTRICTED_EDITING_AREAS, "transactions"];
    t.sortRepositoriesByProcessOrder = function(e) {
        return e.filter(function(e) {
            return r.indexOf(e) >= 0
        }).sort(function(e, t) {
            return r.indexOf(e) - r.indexOf(t)
        })
    }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__values || function(e) {
            var t = "function" == typeof Symbol && e[Symbol.iterator],
                n = 0;
            return t ? t.call(e) : {
                next: function() {
                    return e && n >= e.length && (e = void 0), {
                        value: e && e[n++],
                        done: !e
                    }
                }
            }
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = o(n(0)),
        l = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.__setSuggestedValue = function(e) {
                    var t = {};
                    t[this.get("fieldName")] = this.get("suggestedValue"),
                        e.categoryAttributes = {
                            PARKING_LOT: t
                        }
                },
                t
        }(o(n(389)).default);
    t.buildParkingLotChangedField = function(e, t) {
            var n, i, r = [];
            try {
                for (var o = s(Object.keys(e)), u = o.next(); !u.done; u = o.next()) {
                    var c = u.value,
                        d = e[c],
                        h = void 0;
                    t.attributes.categoryAttributes && t.attributes.categoryAttributes.PARKING_LOT && (h = t.attributes.categoryAttributes.PARKING_LOT[c]),
                        a.default.isEqual(d, h) || r.push(new l({
                            fieldName: c,
                            suggestedValue: d,
                            venue: t
                        }, {
                            parse: !0
                        }))
                }
            } catch (e) {
                n = {
                    error: e
                }
            } finally {
                try {
                    u && !u.done && (i = o.return) && i.call(o)
                } finally {
                    if (n)
                        throw n.error
                }
            }
            return r
        },
        t.default = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(21)),
        s = i(n(17)),
        o = function() {
            function e(e, t) {
                var n = void 0 === e ? {} : e,
                    i = n.point,
                    o = void 0 === i ? s.createPoint(0, 0) : i,
                    a = n.entry,
                    l = void 0 === a || a,
                    u = n.exit,
                    c = void 0 !== u && u,
                    d = n.primary,
                    h = void 0 !== d && d,
                    p = n.name,
                    g = void 0 === p ? "" : p,
                    f = (void 0 === t ? {} : t).parse;
                void 0 !== f && f && (o = r.parse(o)),
                    this._point = o.clone(),
                    this._entry = l,
                    this._exit = c,
                    this._isPrimary = h,
                    this._name = g
            }
            return e.prototype.with = function(t) {
                    return void 0 === t && (t = {}),
                        new e(Object.assign(this.toJSON(), t))
                },
                e.prototype.getPoint = function() {
                    return this._point.clone()
                },
                e.prototype.getEntry = function() {
                    return this._entry
                },
                e.prototype.getExit = function() {
                    return this._exit
                },
                e.prototype.getName = function() {
                    return this._name
                },
                e.prototype.isPrimary = function() {
                    return this._isPrimary
                },
                e.prototype.toJSON = function() {
                    return {
                        point: this._point,
                        entry: this._entry,
                        exit: this._exit,
                        primary: this._isPrimary,
                        name: this._name
                    }
                },
                e.prototype.clone = function() {
                    return this.with()
                },
                e
        }();
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = n(70),
        a = s(n(51)),
        l = {
            HIGH: "high",
            MEDIUM: "medium",
            LOW: "low"
        };
    t.UPDATE_REQUEST_SEVERITY = l;
    t.UPDATE_REQUEST_TYPE = {
        INCORRECT_TURN: 6,
        INCORRECT_ADDRESS: 7,
        INCORRECT_ROUTE: 8,
        INCORRECT_MISSING_ROUNDABOUT: 9,
        INCORRECT_GENERAL_ERROR: 10,
        TURN_NOT_ALLOWED: 11,
        INCORRECT_JUNCTION: 12,
        MISSING_BRIDGE_OVERPASS: 13,
        WRONG_DRIVING_DIRECTIONS: 14,
        MISSING_EXIT: 15,
        MISSING_ROAD: 16
    };
    var u = function(e) {
        function t(t, n) {
            void 0 === n && (n = {
                parse: !1
            });
            var i = e.call(this, t, n, o.UpdateRequestsPermissions) || this;
            return i.editable = !0,
                i.editable = i.attributes.open,
                i.attributes.typeText = i.getTypeText(),
                i.setSeverity(),
                i
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry,
                        bounds: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.merge = function(t) {
                e.prototype.merge.call(this, t),
                    this.editable = this.attributes.open
            },
            t.prototype.getRequestBounds = function() {
                return this.requestBounds || (this.requestBounds = this.attributes.bounds),
                    this.requestBounds
            },
            t.prototype.getTypeText = function() {
                return I18n.t("update_requests.types." + this.attributes.type)
            },
            t.prototype.setSeverity = function() {
                var e = new window.TimeSpan(Date.now() - this.attributes.driveDate).days,
                    t = l.HIGH;
                e <= 4 ? t = l.LOW : e <= 14 && (t = l.MEDIUM),
                    this.attributes.severity = t
            },
            t.prototype.isRecentlyClosed = function() {
                return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= 6048e5
            },
            t.prototype.getLocation = function() {
                return this.attributes.geometry
            },
            t.prototype.canEdit = function() {
                return this.isAllowed(o.UpdateRequestsPermissions.EDIT)
            },
            t
    }(a.default);
    Object.assign(u.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.UpdateRequest"
        }),
        t.default = u
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(48),
        r = Object.values(i.ROAD_TYPE);
    t.ALL_ROAD_TYPES = r,
        t.zoomToRoadType = function(e) {
            switch (e) {
                case 0:
                case 1:
                    return [];
                case 2:
                    return [i.ROAD_TYPE.PRIMARY_STREET, i.ROAD_TYPE.FREEWAY, i.ROAD_TYPE.RAMP, i.ROAD_TYPE.MAJOR_HIGHWAY, i.ROAD_TYPE.MINOR_HIGHWAY, i.ROAD_TYPE.FERRY];
                case 3:
                    return [i.ROAD_TYPE.PRIMARY_STREET, i.ROAD_TYPE.FREEWAY, i.ROAD_TYPE.RAMP, i.ROAD_TYPE.MAJOR_HIGHWAY, i.ROAD_TYPE.MINOR_HIGHWAY, i.ROAD_TYPE.OFF_ROAD, i.ROAD_TYPE.WALKWAY, i.ROAD_TYPE.PEDESTRIAN_BOARDWALK, i.ROAD_TYPE.FERRY, i.ROAD_TYPE.STAIRWAY, i.ROAD_TYPE.PRIVATE_ROAD, i.ROAD_TYPE.RAILROAD, i.ROAD_TYPE.RUNWAY_TAXIWAY, i.ROAD_TYPE.PARKING_LOT_ROAD, i.ROAD_TYPE.ALLEY];
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                default:
                    return r
            }
        },
        t.zoomToVenueLevel = function(e) {
            switch (e) {
                case 0:
                    return 1;
                case 1:
                    return 2;
                case 2:
                case 3:
                case 4:
                    return 3;
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                    return 4;
                default:
                    return null
            }
        }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(0)),
        u = a(n(27)),
        c = a(n(98)),
        d = a(n(26)),
        h = function(e) {
            function t(t, n, i) {
                var r = e.call(this, i) || this;
                r.segments = t;
                var o = s(n, 2),
                    a = o[0],
                    l = o[1],
                    u = s(r.segments, 2),
                    c = u[0],
                    h = u[1];
                return r.sourceSplits = a.map(function(e) {
                        var t = new d.default({
                            geometry: e
                        });
                        return t.copyAttributes(c),
                            t
                    }),
                    r.targetSplits = l.map(function(e) {
                        var t = new d.default({
                            geometry: e
                        });
                        return t.copyAttributes(h),
                            t
                    }),
                    r
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    var e = this.subActions[0];
                    if (null != e) {
                        var t = e.getSplitNode();
                        return null != t ? [t] : []
                    }
                    return []
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.AddIntersection")
                },
                t.prototype.doAction = function() {
                    var e = new c.default(l.default.last(this.segments), {
                        splits: this.targetSplits
                    });
                    return this.doSubAction(e),
                        this.doSubAction(new c.default(this.segments[0], {
                            splits: this.sourceSplits,
                            splitNode: e.splitNode
                        }))
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o(this.segments.map(function(e) {
                        return e.getUniqueID()
                    }), e.prototype.getAffectedUniqueIds.call(this))
                },
                t
        }(u.default);
    t.default = h
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(0)),
        c = a(n(98)),
        d = a(n(131)),
        h = a(n(66)),
        p = a(n(99)),
        g = a(n(27)),
        f = a(n(15)),
        m = l(n(20)),
        v = n(114),
        _ = function(e) {
            function t(t, n) {
                void 0 === n && (n = {});
                var i = e.call(this, n) || this;
                return i.segment = t,
                    i.options = n,
                    i._analyzeSnappedFeatures(),
                    i
            }
            return r(t, e),
                t.prototype._analyzeSnappedFeatures = function() {
                    var e = this;
                    if (this.touching = {},
                        this.snappedFeatures) {
                        this.snappedFeatures instanceof Array || (this.snappedFeatures = [this.snappedFeatures]),
                            this.snappedFeatures = this.snappedFeatures.filter(function(e) {
                                return e
                            });
                        var t = m.getVertices(this.segment.geometry, !0),
                            n = t[0],
                            i = u.default.last(t);
                        this.snappedFeatures.forEach(function(t) {
                            t.point.equals(n) ? e.touching.fromVertex = e.getTouchingFeature(t) : t.point.equals(i) && (e.touching.toVertex = e.getTouchingFeature(t))
                        })
                    }
                },
                t.prototype.getTouchingFeature = function(e) {
                    var t = {};
                    return t.feature = e.feature,
                        t.point = e.point,
                        t.distance = e.distance,
                        e.feature.type === f.default.SEGMENT ? e.type === v.SnappedFeatureType.EDGE || e.type === v.SnappedFeatureType.VERTEX ? t.segmentEdge = !0 : e.type === v.SnappedFeatureType.NODE && (t.segmentNode = !0) : e.feature.type === f.default.NODE && (t.node = !0),
                        t
                },
                t.prototype._connectToExistingNode = function(e, t) {
                    if (t !== e.getID()) {
                        if (t) {
                            var n = this.model.nodes.getObjectById(t);
                            if (null == n)
                                throw new Error("node " + t + " does not exist");
                            this.doSubAction(new p.default(this.segment, n))
                        }
                        this.doSubAction(new h.default(e, this.segment))
                    }
                },
                t.prototype.updateEndPoint = function() {
                    for (var e = [], t = 0; t < arguments.length; t++)
                        e[t] = arguments[t];
                    var n = s(e, 3),
                        i = n[0],
                        r = n[1],
                        o = n[2];
                    if (r) {
                        if (r.node)
                            this._connectToExistingNode(r.feature, i);
                        else if (r.segmentNode) {
                            if (i) {
                                if (null == (g = this.model.nodes.getObjectById(i)))
                                    throw new Error("node " + i + " does not exist");
                                this.doSubAction(new p.default(this.segment, g))
                            }
                            this.doSubAction(new d.default(r.point, [this.segment, r.feature]))
                        } else if (r.segmentEdge) {
                            if (i) {
                                if (null == (g = this.model.nodes.getObjectById(i)))
                                    throw new Error("node " + i + " does not exist");
                                this.doSubAction(new p.default(this.segment, g))
                            }
                            var a = this.segment.isWalkingTrail(),
                                l = r.feature.isWalkingTrail();
                            if (a && !l) {
                                var u = new d.default(r.point, [this.segment]);
                                this.doSubAction(u);
                                var g = u.getNode();
                                this.doSubAction(new h.default(g, r.feature, {
                                    virtual: !0
                                }))
                            } else
                                this.doSubAction(new c.default(r.feature, {
                                    splitAtPoint: r.point,
                                    splitWithSegment: this.segment,
                                    splittingPointDistance: r.distance
                                }))
                        }
                    } else {
                        if (i) {
                            if (null == (g = this.model.nodes.getObjectById(i)))
                                throw new Error("node " + i + " does not exist");
                            this.doSubAction(new p.default(this.segment, g))
                        }
                        if (this.createNodes) {
                            var f = void 0;
                            f = o ? m.getVertex(this.segment.geometry, 0) : m.getLastVertex(this.segment.geometry),
                                this.doSubAction(new d.default(f, [this.segment]))
                        }
                    }
                    return !0
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this.segment.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.segment]
                },
                t.prototype._getSplitAction = function() {
                    return this.flat().find(function(e) {
                        return e instanceof c.default
                    })
                },
                t.prototype._getDisconnectAction = function() {
                    var e = this.flat().find(function(e) {
                        return e instanceof p.default
                    });
                    if (e && !e.getNode().isDisconnected())
                        return e
                },
                t.prototype._getConnectAction = function() {
                    var e = this.flat().find(function(e) {
                        return e instanceof h.default
                    });
                    if (e && e.getNode().attributes.segIDs.length > 1)
                        return e
                },
                t.prototype.generateDescription = function() {
                    var e = this._getSplitAction();
                    if (e)
                        return e.generateDescription(),
                            void(this._description = e.getDescription());
                    var t = this._getConnectAction();
                    if (t)
                        return t.generateDescription(),
                            void(this._description = t.getDescription());
                    var n = this._getDisconnectAction();
                    n && (n.generateDescription(),
                        this._description = n.getDescription())
                },
                t
        }(g.default);
    t.default = _
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(52)),
        o = r(n(82)),
        a = function() {
            function e(e, t) {
                this.dataModel = e,
                    this.node = t
            }
            return e.prototype.supportsLanes = function() {
                    var e = this,
                        t = this.node.getSegmentIds();
                    return this.dataModel.segments.getByIds(t).some(function(t) {
                        var n = s.getIncomingLaneDirection(t, e.node);
                        return void 0 !== n && new o.default(e.dataModel, [t]).supportsLanes(n)
                    })
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(27)),
        l = s(n(193)),
        u = s(n(166)),
        c = o(n(12)),
        d = function(e) {
            function t(t, n, i, r, s) {
                var o = e.call(this, s) || this;
                return o.houseNumber = t,
                    o.newHouseNumber = t,
                    o.closestSegmentId = r,
                    o.newGeometry = c.cloneGeometry(n),
                    o.newFraction = c.cloneGeometry(i),
                    o
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    if (this.houseNumber.getID(),
                        this.houseNumber.getSegmentId(),
                        this.houseNumber.getSegmentId() !== this.closestSegmentId) {
                        var e = this.closestSegmentId,
                            t = new l.default(this.houseNumber, e);
                        this.doSubAction(t),
                            this.newHouseNumber = t.getNewHouseNumber()
                    }
                    this.doSubAction(new u.default(this.newHouseNumber, {
                        geometry: this.newGeometry,
                        fractionPoint: this.newFraction,
                        valid: !0,
                        forced: !1
                    }))
                },
                t.prototype.getNewHouseNumber = function() {
                    return this.newHouseNumber
                },
                t.prototype.getFocusFeatures = function() {
                    if (null != this.model) {
                        var e = this.model.segments.getObjectById(this.newHouseNumber.getSegmentId());
                        if (e)
                            return [e]
                    }
                    return []
                },
                t.prototype.generateDescription = function() {
                    if (null != this.model) {
                        var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId());
                        if (e) {
                            var t = e.getAddress().getStreetName({
                                emptyString: ""
                            });
                            this._description = I18n.t("save.changes_log.actions.MoveHouseNumber", {
                                houseNumber: this.newHouseNumber.getNumber(),
                                streetName: t
                            })
                        }
                    }
                },
                t
        }(a.default);
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(27)),
        l = s(n(193)),
        u = s(n(166)),
        c = o(n(12)),
        d = n(39),
        h = function(e) {
            function t(t, n, i, r) {
                var s = e.call(this, r) || this;
                return s.houseNumber = t,
                    s.newHouseNumber = t,
                    s.fractionPoint = c.cloneGeometry(n),
                    s.closestSegmentId = i,
                    s
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    this.newHouseNumber = this.houseNumber;
                    var e = this.closestSegmentId;
                    if (e !== this.houseNumber.getSegmentId()) {
                        var t = new l.default(this.houseNumber, e);
                        this.doSubAction(t),
                            this.newHouseNumber = t.getNewHouseNumber()
                    }
                    return this.doSubAction(new u.default(this.newHouseNumber, {
                            fractionPoint: this.fractionPoint,
                            forced: !1,
                            valid: !0
                        })),
                        !0
                },
                t.prototype.getNewHouseNumber = function() {
                    return this.newHouseNumber
                },
                t.prototype.getAffectedUniqueIds = function() {
                    if (null != this.model) {
                        var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId());
                        if (e)
                            return [e.getUniqueID()]
                    }
                    return []
                },
                t.prototype.getFocusFeatures = function() {
                    if (null != this.model) {
                        var e = this.model.segments.getObjectById(this.houseNumber.getSegmentId());
                        if (e)
                            return [e]
                    }
                    return []
                },
                t.prototype.generateDescription = function() {
                    this._description = d.formatHouseNumberActionDescription(this.model, this.houseNumber.getSegmentId(), this.houseNumber.getNumber(), "MoveHouseNumberFractionPoint")
                },
                t
        }(a.default);
    t.default = h
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(37)),
        l = s(n(113)),
        u = o(n(17)),
        c = n(63),
        d = "open",
        h = "solved",
        p = "rejected",
        g = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    var t = new a.default("map-problem"),
                        n = e.getLocation(),
                        i = u.createLonLat(n.x, n.y);
                    return new OpenLayers.Marker(i, t)
                },
                t.prototype.render = function(e) {
                    var t = this.getMarker();
                    t.icon.$div.data("model", e);
                    var n = t.icon.$div;
                    n.attr("data-id", e.getID());
                    var i = n.hasClass("selected");
                    n.removeClass(),
                        n.addClass(c.MARKER_CLASS),
                        n.addClass("map-problem"),
                        n.toggleClass("selected", i),
                        n.toggleClass("uneditable", !e.editable),
                        n.toggleClass("recently-closed", e.isRecentlyClosed()),
                        n.addClass(e.attributes.severity),
                        n.addClass(this._getState(e))
                },
                t.prototype._getState = function(e) {
                    return e.attributes.open ? d : e.attributes.resolution === l.default.FIXED ? h : p
                },
                t
        }(n(119).FeatureMarker);
    t.MapProblemMarker = g
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(253));
    t.hasPendingMerge = function(e, t) {
        return e.getFlatActions().some(function(e) {
            return e instanceof r.default && e.getMergedToVenue().getID() === t.getID()
        })
    }
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(14),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(27),
        _ = n.n(v),
        y = n(102),
        b = n.n(y),
        E = n(29),
        w = n.n(E),
        S = n(41),
        k = n.n(S),
        T = function(e) {
            function t(e, n, i) {
                var r, s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                return o()(this, t),
                    (r = c()(this, h()(t).call(this, s)))._fromVenues = e,
                    r._toVenue = n,
                    r.newAttributes = i,
                    r
            }
            return m()(t, e),
                l()(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this;
                        "Trying to merge venues ".concat(this._fromVenues.map(function(e) {
                                return e.getID()
                            }).join(" "), " to ").concat(this._toVenue.getID()),
                            this._fromVenues.forEach(function(t) {
                                e.doSubAction(new b.a(t, {
                                    dontSerialize: !0
                                }))
                            }),
                            this.doSubAction(new w.a(this._toVenue, this.newAttributes, {
                                dontSerialize: !0
                            }))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        g()(h()(t.prototype), "undoAction", this).call(this),
                            this._triggerMainChanged()
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        g()(h()(t.prototype), "redoAction", this).call(this),
                            this._triggerMainChanged()
                    }
                }, {
                    key: "_triggerMainChanged",
                    value: function() {
                        this.model.getRepository(this._toVenue.type).changed(this._toVenue)
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        var e = this._fromVenues.map(function(e) {
                            return e.getUniqueID()
                        });
                        return [].concat(r()(e), [this._toVenue.getUniqueID()])
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._toVenue].concat(r()(this._fromVenues))
                    }
                }, {
                    key: "getMergedToVenue",
                    value: function() {
                        return this._toVenue
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._toVenue.name;
                        this._description = e ? I18n.t("save.changes_log.actions.MergeLandmarks.has_name", {
                            count: this._fromVenues.length,
                            mainVenueName: e
                        }) : I18n.t("save.changes_log.actions.MergeLandmarks.default", {
                            count: this._fromVenues.length,
                            placeId: this._toVenue.getID()
                        })
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: this._toVenue.type,
                            action: k.a.TYPE.MERGE,
                            attributes: {
                                mergedFromVenueIds: this._fromVenues.map(function(e) {
                                    return e.getID()
                                }),
                                mainVenue: this.newAttributes
                            }
                        }
                    }
                }]),
                t
        }(_.a);
    t.default = T
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(46),
        r = n(42),
        s = OpenLayers.Class(OpenLayers.Control.Button, i.a, {
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    this.editingMediator = e.editingMediator,
                    this.saveController = e.saveController,
                    this.autoActivate = !1,
                    W.accelerators.events.register("save", this, this._onSaveShortcut)
            },
            destroy: function() {
                W.accelerators.events.unregister("save", this, this._onSaveShortcut),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            _onSaveShortcut: function() {
                if (this.saveController.hasUnsavedChanges()) {
                    var e = {};
                    this.saveController.hasWarnings() && (e = {
                            ignoreWarnings: !0
                        }),
                        this._save(e)
                }
            },
            trigger: function() {
                this._save()
            },
            _save: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                this.enabled && this.editingMediator.get("editingEnabled") && (r.ENABLE_SAVE_IN_GROUPS ? this.saveController.save(e) : W.commands.execute("save:start"))
            }
        });
    t.default = s
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = i(n(117)),
        o = i(n(123)),
        a = i(n(120)),
        l = i(n(26)),
        u = n(31),
        c = n(793),
        d = i(n(394)),
        h = n(252),
        p = n(53),
        g = function() {
            function e(e, t) {
                this._dataModel = e,
                    this._user = t
            }
            return e.prototype._areAllSegments = function(e) {
                    return e.every(function(e) {
                        return e instanceof l.default
                    })
                },
                e.prototype._landmarkDeletionRejection = function(e) {
                    var t = this._otherDeletionRejection(e);
                    return t !== s.default.NOT_REJECTED ? t : h.hasPendingMerge(this._dataModel.actionManager, e) ? s.default.HAS_PENDING_MERGE : s.default.NOT_REJECTED
                },
                e.prototype._segmentDeletionRejection = function(e) {
                    return new p.SegmentsBigJunctionUseCase(this._dataModel, e).isInBigJunction() ? s.default.IN_BIG_JUNCTION : e.hasClosures() ? s.default.HAS_CLOSURES : this._otherDeletionRejection(e)
                },
                e.prototype._nodeDeletionRejection = function(e) {
                    var t = this._dataModel.segments.getByIds(e.attributes.segIDs);
                    return t.length !== e.attributes.segIDs.length ? s.default.ASSOCIATED_OBJECTS_NOT_IN_MODEL : new d.default(this._dataModel).canMergeSegments(t) ? this._otherDeletionRejection(e) : s.default.SEGMENTS_NOT_BRIDGABLE
                },
                e.prototype._otherDeletionRejection = function(e) {
                    return e.isDeleteable() ? s.default.NOT_REJECTED : s.default.USER_RANK_TOO_LOW
                },
                e.prototype._featureDeletionRejection = function(e) {
                    return e instanceof o.default ? this._landmarkDeletionRejection(e) : e instanceof l.default ? this._segmentDeletionRejection(e) : e instanceof a.default ? this._nodeDeletionRejection(e) : this._otherDeletionRejection(e)
                },
                e.prototype._multiFeatureDeletionRejection = function(e) {
                    var t = this,
                        n = e.find(function(e) {
                            return !t._canDeleteFeature(e)
                        });
                    if (n)
                        return this._featureDeletionRejection(n)
                },
                e.prototype._multiSegmentDeletionRejection = function(e) {
                    var t = this._multiFeatureDeletionRejection(e);
                    return t || (this._hasSegmentDeleteQuota(e) ? this._isUserRankTooLowForSegment() ? s.default.USER_RANK_TOO_LOW_FOR_SEGMENT : null : s.default.USER_QUOTA_EXCEEDED)
                },
                e.prototype._isUserRankTooLowForSegment = function() {
                    var e = u.getServerConfig().minRankForDeletingSegment;
                    if (this._user && e && this._user.getRank() < e)
                        return !0
                },
                e.prototype._canDeleteFeature = function(e) {
                    return !!e.isNew() || this._featureDeletionRejection(e) === s.default.NOT_REJECTED
                },
                e.prototype._hasSegmentDeleteQuota = function(e) {
                    if (this._user) {
                        var t = this._user,
                            n = e.filter(function(e) {
                                return !e.wasCreatedBy(t)
                            }).length,
                            i = this._user.getMaxAllowedSegmentDeletions(),
                            r = this._user.getSegmentDeletionCount();
                        return !(null !== r && null !== i && !(null != r && null != i && n + r <= i))
                    }
                    return !0
                },
                e.prototype._canDeleteSegments = function(e) {
                    var t = this;
                    return !e.some(function(e) {
                        return !t._canDeleteFeature(e)
                    }) && this._hasSegmentDeleteQuota(e)
                },
                e.prototype.canDeleteFeatures = function(e) {
                    if (!e || r.default.isEmpty(e))
                        return !1;
                    if (this._areAllSegments(e))
                        return this._canDeleteSegments(e);
                    var t = e[0];
                    return 1 === e.length && this._canDeleteFeature(t)
                },
                e.prototype.getDeleteRejection = function(e) {
                    return this.canDeleteFeatures(e) ? c.acceptOperation() : this._areAllSegments(e) ? c.rejectOperation(this._multiSegmentDeletionRejection(e)) : c.rejectOperation(this._multiFeatureDeletionRejection(e))
                },
                e
        }();
    t.default = g
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(27),
        g = n.n(p),
        f = n(8),
        m = n.n(f),
        v = n(52),
        _ = n(204);

    function y(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var b = function(e) {
            function t(e, n) {
                var i, s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return r()(this, t),
                    (i = l()(this, c()(t).call(this, s)))._segment = e,
                    i._direction = n,
                    i
            }
            return h()(t, e),
                o()(t, [{
                    key: "doAction",
                    value: function() {
                        "Updating lane angles of segment ".concat(this._segment.getID());
                        var e = this._getAngleCalculator(),
                            t = v.lanesDirectionToVertex(this._segment.getID(), this._direction),
                            n = this.model.getTurnGraph().getTurnsFrom(t),
                            i = this._getCalculatedTurnLaneDatas(n, e);
                        this.doSubAction(new _.a(this._segment, this._direction, {
                            turnLaneDatas: i
                        }))
                    }
                }, {
                    key: "_getAngleCalculator",
                    value: function() {
                        var e = v.getLaneAngleCalculator(this.model, this._segment, this._direction);
                        return e.snapAngles(),
                            e
                    }
                }, {
                    key: "_getCalculatedTurnLaneDatas",
                    value: function(e, t) {
                        var n = this;
                        return e.reduce(function(e, i) {
                            var r = i.getToVertex(),
                                s = i.getTurnData();
                            if (s.hasLanes()) {
                                var o = n._getCalculatedTurnLaneData(s, t.getSnappedAngle(r));
                                return function(e) {
                                    for (var t = 1; t < arguments.length; t++) {
                                        var n = null != arguments[t] ? arguments[t] : {};
                                        t % 2 ? y(Object(n), !0).forEach(function(t) {
                                            m()(e, t, n[t])
                                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : y(Object(n)).forEach(function(t) {
                                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                        })
                                    }
                                    return e
                                }({}, e, m()({}, r, o))
                            }
                            return e
                        }, {})
                    }
                }, {
                    key: "_getCalculatedTurnLaneData",
                    value: function(e, t) {
                        return e.getLaneData().withAngle(t)
                    }
                }]),
                t
        }(g.a),
        E = n(82),
        w = n.n(E),
        S = function(e) {
            function t(e) {
                var n, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return r()(this, t),
                    (n = l()(this, c()(t).call(this, i)))._node = e,
                    n
            }
            return h()(t, e),
                o()(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this,
                            t = this._getSegments(this._node.getSegmentIds());
                        this._getSegmentsWithLanes(t).forEach(function(t) {
                            var n = v.getIncomingLaneDirection(t, e._node);
                            e.doSubAction(new b(t, n))
                        })
                    }
                }, {
                    key: "_getSegments",
                    value: function(e) {
                        var t = this;
                        return e.map(function(e) {
                            return t.model.segments.getObjectById(e)
                        })
                    }
                }, {
                    key: "_getSegmentsWithLanes",
                    value: function(e) {
                        var t = this;
                        return e.filter(function(e) {
                            var n = v.getIncomingLaneDirection(e, t._node);
                            return new w.a(t.model, [e]).supportsLanes(n) && e.getLaneCount(n) > 0
                        })
                    }
                }]),
                t
        }(g.a);
    t.default = S
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = n(240),
        l = s(n(43)),
        u = s(n(690)),
        c = s(n(72));
    var d = 1,
        h = function(e) {
            function t(t, n) {
                void 0 === t && (t = {
                    email: null,
                    profileImageUrl: null
                });
                var i = this;
                return (i = e.call(this, Object.assign({
                        isFirstLogin: !1,
                        userLimits: null,
                        emailVerified: !1,
                        maxAllowedStreetNamesChanges: null,
                        maxAllowedSegmentDeletions: null
                    }, t), n) || this)._parseLegacyEditableAreas(),
                    i.normalizedLevel = c.default.normalizeLevel(i.rank),
                    i.editableMiles = function(e) {
                        switch (e) {
                            case 1:
                                return 1;
                            case 2:
                                return 2;
                            case 3:
                                return 3;
                            case 4:
                            case 5:
                            case 6:
                                return 4;
                            default:
                                return 1
                        }
                    }(i.normalizedLevel),
                    i.emailAddress = o.default.isEmpty(t.email) ? null : t.email,
                    i.profileImageUrl = o.default.isEmpty(t.profileImageUrl) ? null : t.profileImageUrl,
                    i
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            editableAreas: OpenLayers.Geometry,
                            managedAreas: OpenLayers.Geometry,
                            areas: u.default,
                            address: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype._parseLegacyEditableAreas = function() {
                    var e = this;
                    if (this.editableAreasMeters) {
                        var t = this.editableAreasMeters.map(function(t, n) {
                                return new u.default({
                                    geometry: e.editableAreas.components[n],
                                    area: t,
                                    type: a.EDITABLE_AREA_TYPES.DRIVE
                                })
                            }),
                            n = this.managedAreasMeters.map(function(t, n) {
                                return new u.default({
                                    geometry: e.managedAreas.components[n],
                                    area: t,
                                    type: a.EDITABLE_AREA_TYPES.MANAGED
                                })
                            });
                        this.areas = t.concat(n)
                    }
                },
                t.prototype.isCountryManager = function() {
                    return this.editableCountryIDs && !o.default.isEmpty(this.editableCountryIDs)
                },
                t.prototype.isVerifiedEmail = function() {
                    return this.emailVerified
                },
                t.prototype.isEmailAddressMissing = function() {
                    return !this.emailVerified && null == this.emailAddress
                },
                t.prototype.getAddress = function() {
                    return null != this.address ? this.address : null
                },
                t.prototype.getEditableAreaBounds = function() {
                    return null != this.editableAreas && this.editableAreas.components.length > 0 ? this.editableAreas.components[0].getBounds() : null
                },
                t.prototype.resetUserLimits = function(e) {
                    this.userLimits = o.default.clone(e)
                },
                t.prototype.incrementDeleteSegmentCount = function() {
                    this.userLimits && null != this.userLimits.segmentDeletionCount && this.userLimits.segmentDeletionCount++
                },
                t.prototype.decrementDeleteSegmentCount = function() {
                    this.userLimits && null != this.userLimits.segmentDeletionCount && this.userLimits.segmentDeletionCount--
                },
                t.prototype.incrementSegmentStreetChangeCount = function() {
                    this.userLimits && null != this.userLimits.streetNameChangeCount && this.userLimits.streetNameChangeCount++
                },
                t.prototype.decrementSegmentStreetChangeCount = function() {
                    this.userLimits && null != this.userLimits.streetNameChangeCount && this.userLimits.streetNameChangeCount--
                },
                t.prototype.getRank = function() {
                    return this.rank
                },
                t.prototype.getMaxAllowedSegmentDeletions = function() {
                    return this.maxAllowedSegmentDeletions
                },
                t.prototype.getSegmentDeletionCount = function() {
                    return this.userLimits ? this.userLimits.segmentDeletionCount : null
                },
                t.prototype.canEditDifficultTurns = function() {
                    return this.isAllowed(d)
                },
                t.prototype.getMaxAllowedStreetNamesChanges = function() {
                    return this.maxAllowedStreetNamesChanges
                },
                t.prototype.getStreetNameChangeCount = function() {
                    return this.userLimits ? this.userLimits.streetNameChangeCount : null
                },
                t.prototype.hasProfileImageURL = function() {
                    return null != this.profileImageUrl
                },
                t.prototype.getProfileImageURL = function() {
                    return this.profileImageUrl
                },
                t.prototype.getEmailAddress = function() {
                    return this.emailAddress
                },
                t
        }(l.default);
    Object.assign(h.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.LoggedInUser"
        }),
        t.default = h
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(33)),
        o = "dontShowAgain";

    function a() {
        return s.localStorage.get(o) || {}
    }
    t.dontShowAgain = function(e) {
            var t;
            if (null != e) {
                var n = a();
                s.localStorage.set(o, i({}, n, ((t = {})[e] = !0,
                    t)))
            }
        },
        t.shouldShowAgain = function(e) {
            if (null == e)
                return !0;
            var t = a();
            return Boolean(!t[e])
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = r(n(12)),
        a = function() {
            function e(e) {
                this.currentIndex = 0,
                    this.venues = e.filter(function(e) {
                        return e.areUpdateRequestsEditable() && e.hasOpenUpdateRequests() && !e.attributes.residential && !e.attributes.adLocked
                    })
            }
            return e.prototype.sortByDistanceFrom = function(e) {
                    this.reset();
                    var t = o.getBoundsCenterLonLat(e.geometry);
                    this.venues = s.default.sortBy(this.venues, function(e) {
                        var n = o.getBoundsCenterLonLat(e.geometry),
                            i = t.lon - n.lon,
                            r = t.lat - n.lat;
                        return i * i + r * r
                    })
                },
                e.prototype.getNext = function() {
                    return this.currentIndex >= this.venues.length ? null : this.venues[this.currentIndex++]
                },
                e.prototype.reset = function() {
                    this.currentIndex = 0
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(29));

    function a(e, t, n) {
        var i = {
            openingHours: n
        };
        e.add(new o.default(t, i))
    }
    t.deleteOpeningHour = function(e, t, n) {
            a(e, t, r(t.attributes.openingHours).filter(function(e, t) {
                return t !== n
            }))
        },
        t.addOpeningHour = function(e, t, n) {
            var i = r(t.attributes.openingHours);
            a(e, t, r(i, [n]))
        }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e(e, t) {
            this.selection = t,
                this.dataModel = e
        }
        return e.prototype.isInRoundabout = function() {
                return this.selection.getSelectedSegments().every(function(e) {
                    return e.isInRoundabout()
                })
            },
            e.prototype.isEntireRoundabout = function() {
                var e = this.getSegmentRoundabout(this.selection.getFirstSegment());
                if (!e)
                    return !1;
                var t = this.selection.getSelectedSegments().every(function(t) {
                        return t.attributes.junctionID === e.getID()
                    }),
                    n = e.attributes.segIDs.length === this.selection.getSegmentCount();
                return t && n
            },
            e.prototype.selectEntireRoundabout = function(e) {
                var t = this.getSegmentRoundabout(this.selection.getFirstSegment());
                if (null !== t) {
                    var n = this.dataModel.segments.getByIds(t.getSegmentsIds());
                    e.setSelectedModels(n)
                }
            },
            e.prototype.getSegmentRoundabout = function(e) {
                return e.isInRoundabout() ? this.dataModel.junctions.getObjectById(e.attributes.junctionID) : null
            },
            e
    }();
    t.SegmentsRoundaboutUseCase = i
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e(e, t) {
            var n = isNaN(e) ? 0 : e;
            this.step = isNaN(t) || 0 === t ? 1 : t,
                this.lastValue = n - this.step
        }
        return e.prototype.last = function() {
                return this.lastValue
            },
            e.prototype.next = function() {
                return this.lastValue += this.step,
                    this.lastValue
            },
            e.prototype.peek = function() {
                return this.lastValue + this.step
            },
            e.isNewID = function(e) {
                return Number(e) < 0
            },
            e
    }();
    Object.assign(i.prototype, {
            CLASS_NAME: "Waze.Model.IDGenerator"
        }),
        t.default = i
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = {
        SPEED_CAMERA: 1,
        LANES_ENABLED: 4
    };
    t.FWD = i,
        t.REV = i;
    t.FLAGS = {
        TUNNEL: 1,
        BRIDGE: 2,
        PRIVATE: 4,
        FERRY: 8,
        UNPAVED: 16,
        HEADLIGHTS: 32,
        BEACONS: 64,
        NEARBY_HOV: 128
    }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = n(70),
        l = s(n(51)),
        u = s(n(43)),
        c = function(e) {
            function t(n, i) {
                return void 0 === i && (i = {
                        parse: !1
                    }),
                    e.call(this, n, i, a.CitiesPermissions, t.defaults()) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.defaults = function() {
                    return {
                        countryID: null,
                        englishName: null,
                        geometry: null,
                        id: null,
                        isEmpty: !1,
                        name: null,
                        permissions: u.default.ALL_PERMISSIONS,
                        stateID: null
                    }
                },
                t.prototype.clone = function() {
                    if (null != this.attributes.geometry)
                        return e.prototype.clone.call(this);
                    var n = new t({});
                    return n.attributes = o.default.clone(this.attributes),
                        n
                },
                t.prototype.isEmpty = function() {
                    return this.attributes.isEmpty
                },
                t.prototype.hasName = function() {
                    return "" !== this.attributes.name && null !== this.attributes.name && void 0 !== this.attributes.name
                },
                t.prototype.getName = function() {
                    return this.attributes.name
                },
                t.prototype.showMarker = function() {
                    return null !== this.attributes.geometry && !this.isEmpty()
                },
                t
        }(l.default);
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(7)),
        a = n(164),
        l = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.defaults = function() {
                    return {
                        approved: null
                    }
                },
                t.prototype.initialize = function() {
                    return this.set({
                        updateType: this.get("action") + "_" + this.get("subject")
                    })
                },
                t.prototype.isVenue = function() {
                    return this.get("subject") === a.PLACE_UPDATE_SUBJECT.VENUE
                },
                t.prototype.isImage = function() {
                    return this.get("subject") === a.PLACE_UPDATE_SUBJECT.IMAGE
                },
                t.prototype.getAddedImage = function() {
                    return this._findImage(this.id)
                },
                t.prototype._findImage = function(e) {
                    return this.attributes.place.attributes.images.find(function(t) {
                        return t.get("id") === e
                    })
                },
                t.prototype.isEditableByUser = function() {
                    return this.get("isEditable") && this.get("isInEditArea")
                },
                t.prototype.isPlaceAdLocked = function() {
                    return this.get("place").attributes.adLocked && !this.get("isAdLockedEditable")
                },
                t.prototype.getSeverity = function() {
                    var e = new window.TimeSpan(Date.now() - this.get("dateAdded")).days,
                        t = a.PLACE_UPDATE_SEVERITY.HIGH;
                    return e <= a.PLACE_UPDATE_SEVERITY_THRESHOLD.LOW ? t = a.PLACE_UPDATE_SEVERITY.LOW : e <= a.PLACE_UPDATE_SEVERITY_THRESHOLD.MEDIUM && (t = a.PLACE_UPDATE_SEVERITY.MEDIUM),
                        t
                },
                t.prototype.getRequiredEditRank = function() {
                    return Math.max(this.get("place").attributes.lockRank, a.PLACE_UPDATE_MIN_EDIT_RANK)
                },
                t
        }(o.default.Model);
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__values || function(e) {
            var t = "function" == typeof Symbol && e[Symbol.iterator],
                n = 0;
            return t ? t.call(e) : {
                next: function() {
                    return e && n >= e.length && (e = void 0), {
                        value: e && e[n++],
                        done: !e
                    }
                }
            }
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = o(n(7)),
        l = o(n(0)),
        u = o(n(123)),
        c = "ADDED",
        d = "REMOVED",
        h = "UNCHANGED",
        p = {
            entryExitPoints: !0,
            geometry: !0
        },
        g = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.initialize = function(e, t) {
                    e = {},
                        this.__setSuggestedValue(e);
                    var n = new u.default(e, {
                        parse: !!t && t.parse
                    });
                    return n.model = W.model,
                        this.set({
                            suggestedVenue: n
                        })
                },
                t.prototype.getFieldName = function() {
                    return this.get("fieldName")
                },
                t.prototype.__setSuggestedValue = function(e) {
                    e[this.getFieldName()] = this.get("suggestedValue")
                },
                t.prototype.isExternalProvider = function() {
                    return this.attributes && "externalProviderIDs" === this.attributes.fieldName
                },
                t.prototype.isGeometry = function() {
                    return !0 === p[this.get("fieldName")]
                },
                t.prototype._getChangeList = function(e, t) {
                    var n = l.default.intersection(e, t),
                        i = l.default.difference(e, t),
                        r = l.default.difference(t, e),
                        s = n.map(function(e) {
                            return {
                                name: e,
                                changeType: h
                            }
                        }),
                        o = i.map(function(e) {
                            return {
                                name: e,
                                changeType: d
                            }
                        }),
                        a = r.map(function(e) {
                            return {
                                name: e,
                                changeType: c
                            }
                        }),
                        u = s.concat(a, o);
                    return l.default.sortBy(u, "name")
                },
                t
        }(a.default.Model);
    t.buildChangedField = function(e, t) {
            var n, i, r = [];
            try {
                for (var o = s(Object.keys(e)), a = o.next(); !a.done; a = o.next()) {
                    var u = a.value,
                        c = u,
                        d = e[c];
                    l.default.isEqual(d, t.attributes[c]) || r.push(new g({
                        fieldName: u,
                        suggestedValue: d,
                        venue: t
                    }, {
                        parse: !0
                    }))
                }
            } catch (e) {
                n = {
                    error: e
                }
            } finally {
                try {
                    a && !a.done && (i = o.return) && i.call(o)
                } finally {
                    if (n)
                        throw n.error
                }
            }
            return r
        },
        t.default = g
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(51));
    t.TYPE = {
        INVALID_ENV: "INVALID_ENV",
        GENERAL: "GENERAL",
        TEMP_FREEZE: "TEMP_FREEZE"
    };
    var a = function(e) {
        function t(t, n) {
            void 0 === n && (n = {
                parse: !1
            });
            var i;
            return null != t.env && (t.env = (void 0 === (i = t.env) && (i = ""),
                    "na" === (i = i.toLowerCase()) ? "usa" : i)),
                e.call(this, t, n) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t
    }(o.default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
            return (i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(e, t) {
                    e.__proto__ = t
                } ||
                function(e, t) {
                    for (var n in t)
                        t.hasOwnProperty(n) && (e[n] = t[n])
                }
            )(e, t)
        },
        function(e, t) {
            function n() {
                this.constructor = e
            }
            i(e, t),
                e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                    new n)
        }
    );
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(32),
        o = function(e) {
            function t(t) {
                void 0 === t && (t = {});
                var n = e.call(this, t) || this;
                return n._defaultType = t.defaultType || s.RESTRICTION_TYPE.FREE,
                    Object.freeze(n),
                    n
            }
            return r(t, e),
                t.prototype.supportsTollDriveProfileEntries = function() {
                    return !1
                },
                t.prototype.with = function(e) {
                    return void 0 === e && (e = {}),
                        new t(Object.assign(this.toJSON(), e))
                },
                t
        }(s.BaseRestriction);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(27)),
        u = a(n(99)),
        c = a(n(98)),
        d = function(e) {
            function t(t, n) {
                void 0 === n && (n = {});
                var i = e.call(this, n) || this;
                return i._node = t,
                    i
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return [this._node]
                },
                t.prototype.doAction = function() {
                    var e = this;
                    if (!this._node.isVirtual())
                        return !1;
                    var t = this._node.attributes.segIDs.map(function(t) {
                        return e.model.segments.getObjectById(t)
                    }).find(function(t) {
                        return null != t && t.isVirtuallyConnectedToNode(e._node)
                    });
                    if (null == t)
                        throw new Error("virtually connected segments were not found");
                    return this.doSubAction(new u.default(t, this._node, {
                            deleteNode: !1
                        })),
                        this.doSubAction(new c.default(t, {
                            splitNode: this._node,
                            splitAtPoint: this._node.attributes.geometry
                        })),
                        !0
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.ConvertNodeToRegular")
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this._node.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t
        }(l.default);
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(27)),
        u = a(n(41)),
        c = a(n(15)),
        d = a(n(99)),
        h = function(e) {
            function t(t, n) {
                void 0 === n && (n = {});
                var i = this;
                return n.dontSerialize = !0,
                    (i = e.call(this, n) || this).node = t,
                    i.prevNodeState = null,
                    i.hidNode = !1,
                    i.changedSegAttributes = {},
                    i.changedSegStates = [],
                    i
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return [this.node]
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this.node.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t.prototype.doAction = function() {
                    var e = this;
                    if (this.node.state === OpenLayers.State.DELETE)
                        return !1;
                    this.node.attributes.segIDs.forEach(function(t) {
                            var n = e.model.segments.getObjectById(t);
                            if (null == n)
                                throw new Error("segment " + t + " does not exist");
                            e.doSubAction(new d.default(n, e.node))
                        }),
                        this.node.getID(),
                        this.node.hidden || (this.hidNode = !0),
                        this.node.hidden = !0,
                        this.prevNodeState = this.node.state,
                        this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                            this.model.nodes.stateDeleted(this.node))
                },
                t.prototype.undoAction = function() {
                    this.node.getID(),
                        this.hidNode && delete this.node.hidden,
                        this.node.state === OpenLayers.State.INSERT ? this.model.nodes.put(this.node) : (this.node.state = this.prevNodeState,
                            this.model.nodes.changed(this.node)),
                        e.prototype.undoAction.call(this)
                },
                t.prototype.redoAction = function() {
                    this.hidNode && (this.node.hidden = !0),
                        this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                            this.model.nodes.stateDeleted(this.node)),
                        e.prototype.redoAction.call(this)
                },
                t.prototype.serialize = function() {
                    return {
                        _objectType: c.default.NODE,
                        action: u.default.TYPE.DELETE,
                        attributes: {
                            id: this.node.getID()
                        }
                    }
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.DeleteNode")
                },
                t
        }(l.default);
    t.default = h
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
        var n = "function" == typeof Symbol && e[Symbol.iterator];
        if (!n)
            return e;
        var i, r, s = n.call(e),
            o = [];
        try {
            for (;
                (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                o.push(i.value)
        } catch (e) {
            r = {
                error: e
            }
        } finally {
            try {
                i && !i.done && (n = s.return) && n.call(s)
            } finally {
                if (r)
                    throw r.error
            }
        }
        return o
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(101),
        s = n(87),
        o = function() {
            function e(e) {
                this.dataModel = e
            }
            return e.prototype.findConnectingNode = function(e, t) {
                    var n = e.getFromNode();
                    return null != n && t.isConnectedToNode(n) || null == (n = e.getToNode()) || t.isConnectedToNode(n) || (n = null),
                        n
                },
                e.prototype.canMergeSegments = function(e) {
                    if (2 !== e.length)
                        return !1;
                    var t = i(e, 2),
                        n = t[0],
                        o = t[1],
                        a = this.findConnectingNode(n, o);
                    if (null == a)
                        return !1;
                    if (!a.attributes.segIDs.includes(n.getID()) || !a.attributes.segIDs.includes(o.getID()))
                        return !1;
                    var l = this.directionsMatch(n, o, a),
                        u = n.attributes.primaryStreetID === o.attributes.primaryStreetID,
                        c = this.speedsMatch(n, o),
                        d = this.tollsMatch(n, o),
                        h = new s.SegmentsRoadTypeUseCase([n, o]),
                        p = h.hasConsistentDrivability() || h.hasConsistentWalkability(),
                        g = new r.CanEditGeometryUseCase(this.dataModel);
                    return l && u && c && p && d && g.canEditSegmentsGeometry(e)
                },
                e.prototype.directionsMatch = function(e, t, n) {
                    return n.isTurnAllowedBySegDirections(e, t) || n.isTurnAllowedBySegDirections(t, e)
                },
                e.prototype.tollsMatch = function(e, t) {
                    return this.areDirectionalAttributeSame(e, t, "fwdToll", "revToll") && this.areDirectionalAttributeSame(e, t, "revToll", "fwdToll")
                },
                e.prototype.speedsMatch = function(e, t) {
                    var n = e.attributes.fwdDirection && this.getDirectionalAuxAttribute(e, t, "fwdDirection", "revDirection"),
                        i = e.attributes.revDirection && this.getDirectionalAuxAttribute(e, t, "revDirection", "fwdDirection"),
                        r = this.areDirectionalAttributeSame(e, t, "fwdMaxSpeed", "revMaxSpeed"),
                        s = this.areDirectionalAttributeSame(e, t, "revMaxSpeed", "fwdMaxSpeed");
                    return !(n && !r) && !(i && !s)
                },
                e.prototype.areDirectionalAttributeSame = function(e, t, n, i) {
                    return e.attributes[n] === this.getDirectionalAuxAttribute(e, t, n, i)
                },
                e.prototype.getDirectionalAuxAttribute = function(e, t, n, i) {
                    return this.areSegmentsDifferentDirection(e, t) ? t.attributes[i] : t.attributes[n]
                },
                e.prototype.areSegmentsDifferentDirection = function(e, t) {
                    return e.attributes.toNodeID !== t.attributes.fromNodeID && e.attributes.fromNodeID !== t.attributes.toNodeID
                },
                e
        }();
    t.default = o
}, , , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(4)),
        a = n(32),
        l = s(n(136)),
        u = n(125),
        c = s(n(763)),
        d = s(n(391)),
        h = s(n(29)),
        p = function(e) {
            function t(t) {
                var n = e.call(this) || this;
                return n._dataModel = t.dataModel,
                    n._restrictedDrivingArea = t.restrictedDrivingArea,
                    n._canEditRestrictions = t.canEditRestrictions,
                    n._restrictionToEdit = t.restrictionToEdit,
                    n._subscriptions = t.subscriptions,
                    n._supportsLicensePlateNumber = t.supportsLicensePlateNumber,
                    n._supportsDaysOfMonthParity = t.supportsDaysOfMonthParity,
                    n._restrictions = n._restrictedDrivingArea.getRestrictions(),
                    n.options = t,
                    n
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.regions = function() {
                    return {
                        contentRegion: {
                            el: ".modal-content",
                            regionClass: u.DialogContentRegion,
                            onEscapeKeydown: this.onEscapeKeydown.bind(this)
                        }
                    }
                },
                t.prototype.onEscapeKeydown = function(e) {
                    if (this.getChildView("contentRegion") instanceof l.default)
                        return e.preventDefault(),
                            this.showSummaryView(),
                            !1
                },
                t.prototype.shouldShowSummaryView = function() {
                    return null == this.options.restrictionToEdit
                },
                t.prototype.onRender = function() {
                    this.options.restrictionToEdit ? this.showEditView({
                        restriction: this.options.restrictionToEdit,
                        isNewRestriction: !1
                    }) : this.shouldShowSummaryView() ? this.showSummaryView() : this.showCreateRestrictionView()
                },
                t.prototype.onChildviewRestrictionItemEdit = function(e) {
                    this.showEditView({
                        restriction: e,
                        isNewRestriction: !1
                    })
                },
                t.prototype.onChildviewRestrictionItemDelete = function(e) {
                    var t = this._restrictions.indexOf(e);
                    this._restrictions.splice(t, 1),
                        this.showSummaryView()
                },
                t.prototype.onChildviewRestrictionEditCancel = function() {
                    this.shouldShowSummaryView() ? this.showSummaryView() : this.destroy()
                },
                t.prototype.onChildviewRestrictionEditUpdate = function(e, t) {
                    var n = this._restrictions.indexOf(e);
                    this._restrictions.splice(n, 1, t),
                        this.showSummaryView()
                },
                t.prototype.onChildviewRestrictionEditCreate = function(e) {
                    this._restrictions.every(function(t) {
                            return !t.equals(e)
                        }) && this._restrictions.push(e),
                        this.showSummaryView()
                },
                t.prototype.onChildviewRestrictionSummaryClose = function() {
                    this.destroy()
                },
                t.prototype.onChildviewRestrictionSummaryCreate = function() {
                    this.showCreateRestrictionView()
                },
                t.prototype.onChildviewRestrictionSummaryApply = function() {
                    this.updateRestrictedDrivingArea(),
                        this.destroy()
                },
                t.prototype.showSummaryView = function() {
                    this.showChildView("contentRegion", new c.default({
                        restrictions: this._restrictions,
                        canEditRestrictions: this._canEditRestrictions,
                        subscriptions: this._subscriptions,
                        title: ""
                    }))
                },
                t.prototype.showEditView = function(e) {
                    var t = e.restriction,
                        n = e.isNewRestriction;
                    this.showChildView("contentRegion", new l.default({
                        restriction: t,
                        isNewRestriction: n,
                        canEditRestrictions: this._canEditRestrictions,
                        canAddTollRestriction: !1,
                        subscriptions: this._subscriptions,
                        supportsLicensePlateNumber: this._supportsLicensePlateNumber,
                        supportsDaysOfMonthParity: this._supportsDaysOfMonthParity,
                        editingTitle: ""
                    }))
                },
                t.prototype.showCreateRestrictionView = function() {
                    var e = a.RESTRICTION_TYPE.FREE,
                        t = new d.default({
                            defaultType: e
                        });
                    this.showEditView({
                        restriction: t,
                        isNewRestriction: !0
                    })
                },
                t.prototype.updateRestrictedDrivingArea = function() {
                    this._dataModel.actionManager.add(new h.default(this._restrictedDrivingArea, {
                        restrictions: this._restrictions
                    }))
                },
                t
        }(o.default.View);
    t.default = p
}, , , , , , , , , , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(10)),
        l = s(n(7)),
        u = s(n(0)),
        c = n(105),
        d = s(n(1135)),
        h = o(n(198)),
        p = s(n(1134)),
        g = s(n(1133)),
        f = n(49),
        m = n(167),
        v = n(795),
        _ = n(18),
        y = n(796),
        b = function(e) {
            function t() {
                var t = e.call(this) || this;
                return t._urlParams = OpenLayers.Util.getParameters(window.location.href),
                    t
            }
            return r(t, e),
                t.prototype.defaults = function() {
                    return {
                        loading: !0,
                        loadingFeatures: !1,
                        loggedIn: null,
                        sandbox: !1,
                        sessionExpired: !1,
                        editing: !1,
                        featureSelected: !1,
                        user: null,
                        mode: h.default.DEFAULT
                    }
                },
                t.prototype.start = function(e) {
                    var t = e.descartesClient,
                        n = e.loginManager;
                    this._setupLoginManager(n),
                        this.layout = new d.default({
                            model: this,
                            loginManager: n
                        }),
                        this.modeController = new g.default({
                            model: this,
                            layout: this.layout
                        }),
                        this.listenTo(this.modeController, c.STATE_CHANGED, this.trigger.bind(this, c.STATE_CHANGED)),
                        (new p.default).heft({
                            app: this,
                            descartesClient: t,
                            loginManager: n
                        }),
                        y.initCommunityScriptsSupport()
                },
                t.prototype.changeAppLocale = function(e) {
                    f.setLocaleAndRedirect(e)
                },
                t.prototype.changeAppRegion = function(e) {
                    f.setRegionCodeAndReload(e)
                },
                t.prototype.getAppRegionCode = function() {
                    return m.getRegionCode()
                },
                t.prototype._setupLoginManager = function(e) {
                    var t = this;
                    return this.loginManager = e,
                        e.events.on({
                            login: this._onLoginChanged,
                            sessionExpired: this._onSessionExpired,
                            beforeLogout: this._onBeforeLogout,
                            logout: this._onLogout,
                            scope: this
                        }),
                        e.getLoggedInUser().catch(function(e) {
                            return console.error("Error getting logged in user", e)
                        }).finally(function() {
                            t.set("loading", !1),
                                t.layout.render(),
                                t._setLoggedInUser(),
                                a.default(window).on("beforeunload", t._onBeforeUnload.bind(t)),
                                t.modeController.activate(),
                                t._restoreMode(),
                                t._setupBindings()
                        })
                },
                t.prototype._onBeforeUnload = function(e) {
                    if (!this.modeController.canExitMode() && !this.isSandboxMode()) {
                        var t = e || window.event;
                        return t && (t.returnValue = I18n.t("edit.unsaved_changes")),
                            I18n.t("edit.unsaved_changes")
                    }
                },
                t.prototype._onBeforeLogout = function() {
                    var e = W.model.actionManager.canUndo(),
                        t = !this.isSandboxMode();
                    if (e && t)
                        return window.confirm(I18n.t("edit.unsaved_changes"))
                },
                t.prototype._onLoginChanged = function(e) {
                    return this.get("sessionExpired") ? this._processRelogin() : (this._setLoggedInUser(),
                        this._setSandboxMode(!1))
                },
                t.prototype._processRelogin = function() {
                    return this.loginManager && this.loginManager.returningUser ? this._setSessionExpired(!1) : this._onLogout()
                },
                t.prototype._onSessionExpired = function() {
                    return this._setSessionExpired(!0)
                },
                t.prototype._onLogout = function() {
                    W.model.actionManager.clear(),
                        f.reloadPage()
                },
                t.prototype._setEditing = function() {
                    var e = this.isSandboxMode() || this.loginManager.isLoggedIn();
                    return this.set("editing", e)
                },
                t.prototype._setSandboxMode = function(e) {
                    this.get("sandbox") !== e && (this.set("sandbox", e),
                        this._setEditing(),
                        W.model.actionManager.clear(),
                        W.controller.reload())
                },
                t.prototype._setSessionExpired = function(e) {
                    if (this.get("sessionExpired") !== e)
                        return this.set("sessionExpired", e),
                            this._setEditing()
                },
                t.prototype._setLoggedInUser = function() {
                    var e = this.loginManager.isLoggedIn(),
                        t = this.loginManager.user;
                    this.set({
                            user: t,
                            loggedIn: e
                        }),
                        this.loginManager.isFirstLogin() && t && this._moveToFamiliarLocation(t),
                        this._setAnalyticsContext(),
                        this._setEditing(),
                        e && W.controller.reload()
                },
                t.prototype._moveToFamiliarLocation = function(e) {
                    var t = W.map,
                        n = v.findFamiliarLocation(e);
                    if (null != n) {
                        var i = n.lonLat,
                            r = t.getPannable();
                        if (n.bounds) {
                            var s = t.getZoomForExtent(n.bounds);
                            r.panTo(i, s)
                        } else
                            r.panTo(i)
                    }
                },
                t.prototype._setAnalyticsContext = function() {
                    var e = this.loginManager.user;
                    null != e && _.reportAnalytic.setUserRank(e.rank)
                },
                t.prototype.isLoggedIn = function() {
                    return this.get("loggedIn")
                },
                t.prototype.isEditingMode = function() {
                    return this.get("editing")
                },
                t.prototype.isSandboxMode = function() {
                    return this.get("sandbox")
                },
                t.prototype.activateSandboxMode = function() {
                    this._setSandboxMode(!0)
                },
                t.prototype.disableSandboxMode = function() {
                    this._setSandboxMode(!1)
                },
                t.prototype.requestModeChange = function(e) {
                    var t = this;
                    return new Promise(function(n, i) {
                        t.modeController.canExitMode() ? (_.reportAnalytic.generalAction("mode_changed", e),
                            n(t.set({
                                mode: e
                            }))) : (_.reportAnalytic.generalAction("mode_changed", -1),
                            i(t.modeController.getExitError()))
                    })
                },
                t.prototype.getState = function() {
                    var e = this.get("mode"),
                        t = {};
                    return e !== h.default.DEFAULT && (t.mode = e),
                        u.default.extend(t, this.modeController.getState())
                },
                t.prototype._restoreMode = function() {
                    if (this._urlParams.mode) {
                        var e = parseInt(this._urlParams.mode, 10);
                        h.isModeValid(e) && this.set("mode", e)
                    }
                    return this.modeController.restore(this._urlParams)
                },
                t.prototype._setupBindings = function() {
                    W.controller.bindToMap(W.map)
                },
                t
        }(l.default.Model);
    t.default = b
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "template", {
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Toolbar/templates/mode-switcher"
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "className", {
                get: function() {
                    return "mode-switcher-view"
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.bindings = function() {
                return {
                    ":el": {
                        observe: "mode",
                        update: function(e, t) {
                            return e.find(".mode-item").removeClass("active").filter("[data-mode='" + t + "']").addClass("active")
                        }
                    }
                }
            },
            t.prototype.events = function() {
                return {
                    "click .mode-item": "_onModeItemClick"
                }
            },
            t.prototype.onRender = function() {
                this.stickit()
            },
            t.prototype._onModeItemClick = function(e) {
                var t = $(e.target).data("mode");
                this.model.requestModeChange(t).catch(function(e) {
                    console.error(e),
                        window.alert(e)
                })
            },
            t
    }(s(n(4)).default.View);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t(t) {
            var n = e.call(this, t) || this;
            return n._layerSwitcherController = t.layerSwitcherController,
                n
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "template", {
                get: function() {
                    return "Waze/MapEditor/UI/Map/MapControls/templates/LayersSwitcherButton"
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.events = function() {
                return {
                    click: "_onLayerSwitcherButtonClick"
                }
            },
            t.prototype._onLayerSwitcherButtonClick = function() {
                this._layerSwitcherController.onLayerSwitcherButtonClick()
            },
            t
    }(s(n(4)).default.View);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(7)),
        l = function(e) {
            function t(t) {
                var n = e.call(this, t) || this;
                return n._actionManager = t.actionManager,
                    n._controller = t.controller,
                    n._map = t.map,
                    n._actionManager.events.on({
                        scope: n,
                        hasActions: n.setDisabledState,
                        noActions: n.setDisabledState
                    }),
                    n.model = new a.Model({
                        disabled: !1
                    }),
                    W.accelerators.events.register("reloadData", n, n.onClick),
                    n
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "Waze/MapEditor/UI/Map/MapControls/templates/reloadButton"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.events = function() {
                    return {
                        click: "onClick"
                    }
                },
                t.prototype.bindings = function() {
                    return {
                        ".overlay-button": {
                            classes: {
                                "overlay-button-disabled": "disabled"
                            }
                        }
                    }
                },
                t.prototype.setDisabledState = function() {
                    this.model.set("disabled", !this.canReload())
                },
                t.prototype.onRender = function() {
                    this.stickit()
                },
                t.prototype.canReload = function() {
                    return !this._actionManager.canUndo()
                },
                t.prototype.onClick = function() {
                    this.canReload() && (this._map.getRoadLayers().forEach(function(e) {
                            e.redraw({
                                    force: !0
                                }),
                                e.removeBackBuffer()
                        }),
                        this._controller.reload())
                },
                t
        }(o(n(4)).default.View);
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(29)),
        a = s(n(113)),
        l = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.generateDescription = function() {
                    this.object.attributes.open ? this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.open") : this.object.attributes.resolution === a.default.FIXED ? this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.solved") : this.object.attributes.resolution === a.default.NOT_A_PROBLEM && (this._description = I18n.t("save.changes_log.actions.UpdateMapProblem.not_identified"))
                },
                t
        }(o.default);
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(385)),
        o = n(144),
        a = {
            ERROR: "ERROR",
            WARNING: "WARNING"
        };

    function l(e) {
        s.default.isNewID(e.id) && (e.id = Number(e.id))
    }
    t.parseSaveErrorResponse = function(e) {
        return e ? (function(e) {
                var t = e.errorList;
                t && t.forEach(function(e) {
                    e.objects && e.objects.forEach(l)
                })
            }(e),
            function(e) {
                var t;
                t = e.errorList ? e : {
                    errorList: [e],
                    errorLevel: a.ERROR
                };
                var n = e.errorLevel === a.WARNING,
                    r = t.errorList.map(function(e) {
                        return new o.SaveErrorViewModel(i({
                            ignorable: n
                        }, e), {
                            parse: !0
                        })
                    });
                return r.length ? r : [new o.SaveErrorViewModel({
                    code: "default"
                })]
            }(e)) : [new o.SaveErrorViewModel({
            code: 500,
            details: "fatal server error"
        })]
    }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = s(n(173)),
        l = function() {
            function e(e) {
                this._dataModel = e,
                    this._repositoriesRegistries = new Map,
                    this.createRegistries()
            }
            return e.prototype.createRegistries = function() {
                    var e = this;
                    this._dataModel.getRepositories().forEach(function(t) {
                        e._repositoriesRegistries.set(t.getRepositoryName(), new a.default)
                    })
                },
                e.prototype._getRegistryByObject = function(e) {
                    var t = e.getType();
                    if (null !== t) {
                        var n = this._dataModel.getRepository(t);
                        if (null !== n) {
                            var i = n.getRepositoryName();
                            return this._repositoriesRegistries.get(i)
                        }
                    }
                },
                e.prototype.isInUse = function(e) {
                    var t = this._getRegistryByObject(e);
                    return !!t && t.isInUse(e)
                },
                e.prototype.setInUse = function(e, t) {
                    var n = this._getRegistryByObject(e);
                    n && n.setInUse(e, t)
                },
                e.prototype.onObjectChangedId = function(e, t) {
                    var n = this._repositoriesRegistries.get(e);
                    n && n.onObjectChangedId(t)
                },
                e.prototype.clearInUse = function(e, t) {
                    var n = this._getRegistryByObject(e);
                    n && n.clearInUse(e, t)
                },
                e.prototype.getObjectsInUseGroupedByRepository = function() {
                    var e = r(this._repositoriesRegistries.entries()).map(function(e) {
                        var t = i(e, 2);
                        return [t[0], t[1].getObjectsInUseById()]
                    });
                    return o.default.fromPairs(e)
                },
                e
        }();
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(37)),
        o = n(101),
        a = r(n(730)),
        l = function() {
            function e(e, t, n) {
                this.segments = e,
                    this.drawingContext = t,
                    this.dataModel = n
            }
            return e.prototype.destroy = function() {
                    this.drawingContext.destroy()
                },
                e.prototype._onMarkerClicked = function() {
                    a.intersect(this.segments, this.dataModel)
                },
                e.prototype.drawNodeMarker = function() {
                    this.drawingContext.clear();
                    var e = a.generateSplits(this.segments);
                    if (new o.CanEditGeometryUseCase(this.dataModel).canEditSegmentsGeometry(this.segments) && a.isSegmentSplits(e)) {
                        var t = a.getIntersectionLonLat(e),
                            n = new OpenLayers.Marker(t, new s.default("add-junction"));
                        n.events.register("click", this, this._onMarkerClicked, !1),
                            this.drawingContext.addMarkers([n])
                    }
                },
                e
        }();
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(41)),
        a = s(n(15)),
        l = function(e) {
            function t(t, n, i, r, s) {
                void 0 === s && (s = {});
                var o = e.call(this, s) || this;
                return o.segmentID = t,
                    o.splitNodeID = n,
                    o.segmentFromID = i,
                    o.segmentToID = r,
                    o
            }
            return r(t, e),
                t.prototype.doAction = function() {},
                t.prototype.redoAction = function() {},
                t.prototype.undoAction = function() {},
                t.prototype.serialize = function() {
                    var e = {
                        segmentID: this.segmentID,
                        nodeID: this.splitNodeID,
                        segmentFromID: this.segmentFromID,
                        segmentToID: this.segmentToID
                    };
                    return {
                        _objectType: a.default.SEGMENT,
                        action: o.default.TYPE.SPLIT,
                        attributes: e
                    }
                },
                t
        }(o.default);
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(27)),
        a = s(n(44)),
        l = s(n(38)),
        u = function(e) {
            function t(t, n, i, r) {
                var s = e.call(this, r) || this;
                return s._forwardVertex = l.default.forwardOf(t),
                    s._reverseVertex = l.default.reverseOf(t),
                    s._firstSplitID = i,
                    s._lastSplitID = n,
                    s
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e = this,
                        t = this.model.getTurnGraph();
                    t.getTurnsTo(this._forwardVertex).forEach(function(n) {
                            n = n.withToVertex(l.default.forwardOf(e._firstSplitID)),
                                e.doSubAction(new a.default(t, n, {
                                    dontSerialize: !0
                                }))
                        }, this),
                        t.getTurnsFrom(this._forwardVertex).forEach(function(n) {
                            n = n.withFromVertex(l.default.forwardOf(e._lastSplitID)),
                                e.doSubAction(new a.default(t, n, {
                                    dontSerialize: !0
                                }))
                        }, this),
                        t.getTurnsFrom(this._reverseVertex).forEach(function(n) {
                            n = n.withFromVertex(l.default.reverseOf(e._firstSplitID)),
                                e.doSubAction(new a.default(t, n, {
                                    dontSerialize: !0
                                }))
                        }, this),
                        t.getTurnsTo(this._reverseVertex).forEach(function(n) {
                            n = n.withToVertex(l.default.reverseOf(e._lastSplitID)),
                                e.doSubAction(new a.default(t, n, {
                                    dontSerialize: !0
                                }))
                        }, this)
                },
                t
        }(o.default);
    Object.assign(u.prototype, {
            CLASS_NAME: "Waze.Model.Graph.Actions.SplitTurns"
        }),
        t.default = u
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(192)),
        o = r(n(71)),
        a = r(n(394)),
        l = function() {
            function e(e, t) {
                this._dataModel = e,
                    this._actionManager = e.actionManager,
                    this._segments = t,
                    this._canMergeSegmentsUseCase = new a.default(this._dataModel)
            }
            return e.prototype._shouldMergeCrossingSegments = function(e) {
                    var t = 4 === e.attributes.segIDs.length,
                        n = !e.isPartial();
                    if (t && n) {
                        var i = this._getCrossingSegments(e);
                        return this._canMergeSegmentsUseCase.canMergeSegments(i)
                    }
                    return !1
                },
                e.prototype._getCrossingSegments = function(e) {
                    var t = i(this._segments, 2),
                        n = t[0],
                        r = t[1],
                        s = e.attributes.segIDs.filter(function(e) {
                            return e !== n.getID() && e !== r.getID()
                        });
                    return this._dataModel.segments.getByIds(s)
                },
                e.prototype.canBridgeSegments = function() {
                    return this._canMergeSegmentsUseCase.canMergeSegments(this._segments)
                },
                e.prototype.findConnectingNode = function() {
                    return this._canMergeSegmentsUseCase.findConnectingNode(this._segments[0], this._segments[1])
                },
                e.prototype.bridgeSegments = function() {
                    if (this._canMergeSegmentsUseCase.canMergeSegments(this._segments)) {
                        var e = i(this._segments, 2),
                            t = e[0],
                            n = e[1],
                            r = this._canMergeSegmentsUseCase.findConnectingNode(t, n);
                        if (null != r) {
                            var a = new s.default(t, n, r);
                            if (a.generateDescription(),
                                this._shouldMergeCrossingSegments(r)) {
                                var l = this._getCrossingSegments(r);
                                this._actionManager.add(new o.default([a, new s.default(l[0], l[1], r)], {
                                    description: a.getDescription()
                                }))
                            } else
                                this._actionManager.add(a)
                        }
                    }
                },
                e
        }();
    t.default = l
}, , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(27)),
        c = a(n(393)),
        d = a(n(83)),
        h = a(n(99)),
        p = a(n(66)),
        g = a(n(15)),
        f = a(n(392)),
        m = a(n(41)),
        v = l(n(25)),
        _ = function(e) {
            function t(t, n) {
                var i = e.call(this, {}) || this;
                return i.node = t,
                    i.mergeNode = n,
                    i
            }
            return r(t, e),
                t.prototype.considerMerging = function() {
                    var e = this;
                    return !(!this.mergeNode || !v.equals(this.mergeNode.geometry, this.node.geometry)) && (this.node.isVirtual() && this.doSubAction(new f.default(this.node)),
                        this.mergeNode.isVirtual() && this.doSubAction(new f.default(this.mergeNode)),
                        this.node.attributes.segIDs.every(function(t) {
                            var n = e.model.segments.getObjectById(t);
                            if (null == n)
                                throw new Error("segment " + t + " does not exist");
                            return !e.mergeNode.isConnectedToSegment(n) || n.isPoint()
                        }))
                },
                t.prototype.moveSegments = function() {
                    var e = this;
                    this.node.attributes.segIDs.concat().forEach(function(t) {
                        var n = e.model.segments.getObjectById(t);
                        if (null == n)
                            throw new Error("segment " + t + " does not exist");
                        n.isPoint() ? e.doSubAction(new d.default(n, {
                            dontSerialize: !0
                        })) : (e.doSubAction(new h.default(n, e.node, {
                                deleteNode: !1,
                                dontSerialize: !0,
                                keepTurns: !0
                            })),
                            e.doSubAction(new p.default(e.mergeNode, n, {
                                dontSerialize: !0
                            })))
                    })
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.mergeNode]
                },
                t.prototype.doAction = function() {
                    if (!this.considerMerging())
                        return !1;
                    this.node.getID(),
                        this.mergeNode.getID(),
                        this.moveSegments(),
                        this.doSubAction(new c.default(this.node))
                },
                t.prototype.serialize = function() {
                    var e = {
                        sourceNodeID: this.node.getID(),
                        sourceNodeVersion: this.node.attributes.version,
                        destNodeID: this.mergeNode.getID(),
                        destNodeVersion: this.node.attributes.version
                    };
                    return {
                        _objectType: g.default.MERGED_NODE,
                        action: m.default.TYPE.ADD,
                        attributes: e
                    }
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.MergeNode")
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this.node.getUniqueID(), this.mergeNode.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t
        }(u.default);
    t.default = _
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.getFocusFeatures = function() {
                return this.subActions[0].getFocusFeatures()
            },
            t.prototype.generateDescription = function() {
                this._description = I18n.t("save.changes_log.actions.MergeNode")
            },
            t
    }(s(n(71)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(10)),
        a = n(107),
        l = s(n(764)),
        u = s(n(1140)),
        c = s(n(765)),
        d = s(n(766)),
        h = s(n(767)),
        p = s(n(768)),
        g = s(n(769)),
        f = s(n(770)),
        m = n(42),
        v = s(n(771)),
        _ = s(n(4)),
        y = function(e) {
            function t(t) {
                var n = e.call(this) || this;
                n.DefaultPanInPixel = 20,
                    n.navigationEnabled = !0,
                    n.disallowedTurnsEditor = null,
                    n.app = t.app,
                    n.$el = o.default("#map"),
                    n.$map = o.default("#WazeMap"),
                    n.popupOverlay = o.default("#popup-overlay"),
                    n._preventBrowserZoomOnMap(),
                    n.navigationControl = new OpenLayers.Control.Navigation({
                        dragPanOptions: {
                            enableKinetic: {
                                delay: 100,
                                deceleration: .005
                            }
                        }
                    }),
                    n.footerControl = new OpenLayers.Control({
                        displayClass: "WazeMapFooter"
                    }),
                    n.footerMessages = new OpenLayers.Control({
                        displayClass: "footer-messages"
                    }),
                    n.displayProjection = new OpenLayers.Projection(W.Config.map.projection.remote);
                var i = Object.assign({}, t, {
                    controls: [n.navigationControl, n.footerControl, n.footerMessages],
                    projection: new OpenLayers.Projection(W.Config.map.projection.local),
                    displayProjection: n.displayProjection,
                    theme: null,
                    zoomMethod: null,
                    fallThrough: !0,
                    Z_INDEX_BASE: m.Z_INDEX_BASE
                });
                return n.olMap = new OpenLayers.Map("WazeMap", i),
                    n.panelRegion = new g.default({
                        map: n
                    }),
                    n.popoverLayersRegion = new _.default.Region({
                        el: "#map-popover-layers"
                    }),
                    o.default(n.olMap.viewPortDiv).on("mouseup", function(e) {
                        "INPUT" !== e.target.tagName && n.focus()
                    }),
                    o.default(window).on("resize", n.resize.bind(n)),
                    n.resize(),
                    n.initializeLayers({
                        regionCode: n.app.getAppRegionCode()
                    }),
                    n
            }
            return r(t, e),
                t.prototype.toggleClass = function(e, t) {
                    o.default(this.olMap.div).toggleClass(e, t)
                },
                t.prototype._preventBrowserZoomOnMap = function() {
                    this.$el.on("wheel", function(e) {
                        e.ctrlKey && e.preventDefault()
                    })
                },
                t.prototype.initMapState = function(e, t, n) {
                    this.mapState = new u.default(this, e, t, n),
                        this._addFooterControls()
                },
                t.prototype.registerAccelerators = function(e) {
                    e.events.on({
                        panUp: this.panUp,
                        panRight: this.panRight,
                        panDown: this.panDown,
                        panLeft: this.panLeft,
                        zoomIn: this.zoomIn,
                        zoomOut: this.zoomOut,
                        scope: this
                    })
                },
                t.prototype._addFooterControls = function() {
                    this.addFooterControl({
                            displayClass: "olControlAttribution",
                            control: new OpenLayers.Control.Attribution
                        }),
                        this.addFooterControl({
                            displayClass: "olControlScaleLine",
                            control: new OpenLayers.Control.ScaleLine
                        }),
                        new p.default({
                            map: this,
                            el: o.default("<div/>").addClass("WazeControlMousePosition").appendTo(this.footerControl.div)
                        }).render(),
                        new h.default({
                            app: this.app,
                            regionCode: this.app.getAppRegionCode(),
                            mapState: this.mapState,
                            el: o.default("<div/>").addClass("WazeControlPermalink").appendTo(this.footerControl.div)
                        }).render(),
                        this.addControl(new l.default({
                            div: o.default("<div/>").appendTo(this.footerMessages.div)
                        }), null),
                        new c.default({
                            dataModel: W.model,
                            mapState: this.mapState,
                            regionCode: this.app.getAppRegionCode(),
                            el: o.default("<div/>").appendTo(this.footerMessages.div)
                        })
                },
                t.prototype.addFooterControl = function(e) {
                    var t = o.default("<div>").addClass(e.displayClass);
                    t.appendTo(this.footerControl.div),
                        e.control.div = t[0],
                        this.addControl(e.control, null)
                },
                t.prototype.focus = function() {
                    o.default(this.olMap.div).focus()
                },
                t.prototype.panLeft = function() {
                    this.navigationEnabled && this.olMap.pan(-this.DefaultPanInPixel, 0, {
                        animate: !1
                    })
                },
                t.prototype.panRight = function() {
                    this.navigationEnabled && this.olMap.pan(this.DefaultPanInPixel, 0, {
                        animate: !1
                    })
                },
                t.prototype.panUp = function() {
                    this.navigationEnabled && this.olMap.pan(0, -this.DefaultPanInPixel, {
                        animate: !1
                    })
                },
                t.prototype.panDown = function() {
                    this.navigationEnabled && this.olMap.pan(0, this.DefaultPanInPixel, {
                        animate: !1
                    })
                },
                t.prototype.showOverlay = function() {
                    o.default("#map-overlay").show()
                },
                t.prototype.hideOverlay = function() {
                    o.default("#map-overlay").hide()
                },
                t.prototype.setEditingMediator = function(e) {
                    e.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                        e.on("change:navigation", this._onNavigationChanged, this),
                        this._onNavigationChanged()
                },
                t.prototype.setSnapshotManager = function(e) {
                    this.snapshotManager = e,
                        this.snapshotManager.on("change:state", this._refreshRoadLayers, this),
                        this._createSnapshotMessage()
                },
                t.prototype._createSnapshotMessage = function() {
                    var e = o.default(this.olMap.div).find(".snapshot-message").css({
                        zIndex: m.Z_INDEX_BASE.Control
                    });
                    new d.default({
                        el: e,
                        snapshotManager: this.snapshotManager
                    }).render()
                },
                t.prototype._onEditingEnabledChanged = function() {
                    var e = W.editingMediator.get("editingEnabled");
                    this.$el.toggleClass("editing-disabled", !e),
                        e || this.panelRegion.empty()
                },
                t.prototype._onNavigationChanged = function() {
                    W.editingMediator.get("navigation") ? (this.popupOverlay.hide(),
                        this.navigationEnabled = !0) : (this.popupOverlay.show(),
                        this.navigationEnabled = !1)
                },
                t.prototype.toggleSVMode = function(e) {
                    this.$el.toggleClass("street-view-mode", e),
                        this.updateSize()
                },
                t.prototype.resize = function() {
                    var e = parseInt(this.$map.css("max-height"), 10),
                        t = parseInt(this.$map.css("min-height"), 10),
                        n = this.$map.offset(),
                        i = o.default(window).height();
                    if (void 0 === n || void 0 === i)
                        throw new Error("offset or window height is undefined");
                    var r = i - n.top;
                    r > e ? r = e : r < t && (r = t),
                        this.$el.find(".view-area").css("height", r),
                        null !== this.olMap.div && (this.updateSize(),
                            this.olMap.events.triggerEvent("resize", {
                                height: r
                            }))
                },
                t.prototype.getHeight = function() {
                    return this.$map.height()
                },
                t.prototype.moveLayerToTop = function(e) {
                    e.setZIndex(m.Z_INDEX_BASE.TopLayer)
                },
                t.prototype.getLayerVisibility = function(e) {
                    var t = this.olMap.getLayersBy("uniqueName", e)[0];
                    return t ? t.getVisibility() : null
                },
                t.prototype.setLayerVisibility = function(e, t) {
                    var n = this.olMap.getLayersBy("uniqueName", e)[0];
                    n && n.setVisibility(t)
                },
                t.prototype._showDisallowedTurnsEditor = function() {
                    null === this.disallowedTurnsEditor && (this.disallowedTurnsEditor = new v.default(this.getDrawingContext(), W.model, W.prefs),
                        this.disallowedTurnsEditor.draw())
                },
                t.prototype._hideDisallowedTurnsEditor = function() {
                    null !== this.disallowedTurnsEditor && (this.disallowedTurnsEditor.destroy(),
                        this.disallowedTurnsEditor = null)
                },
                t.prototype.toggleDisallowedTurnsEditor = function(e) {
                    e ? this._showDisallowedTurnsEditor() : this._hideDisallowedTurnsEditor()
                },
                t.prototype.getPannable = function() {
                    var e = this.olMap;
                    return {
                        panTo: function(t, n, i) {
                            return e.moveTo(t, n, i)
                        },
                        getZoom: function() {
                            return e.getZoom()
                        }
                    }
                },
                t.prototype.getDrawingContext = function() {
                    return new f.default(this, {
                        extendedMode: !1
                    })
                },
                t.prototype.getSvgDrawingContext = function() {
                    return new f.default(this, {
                        extendedMode: !0
                    })
                },
                t.prototype.zoomIn = function() {
                    this.navigationEnabled && this.olMap.zoomIn()
                },
                t.prototype.zoomOut = function() {
                    this.navigationEnabled && this.olMap.zoomOut()
                },
                t.prototype.getZoom = function() {
                    return this.olMap.getZoom()
                },
                t.prototype.addControl = function(e, t) {
                    this.olMap.addControl(e, t)
                },
                t.prototype.removeControl = function(e) {
                    this.olMap.removeControl(e)
                },
                t.prototype.updateSize = function() {
                    this.olMap.updateSize()
                },
                t.prototype.getPixelFromLonLat = function(e) {
                    return this.olMap.getPixelFromLonLat(e)
                },
                t.prototype.getSize = function() {
                    return this.olMap.getSize()
                },
                t.prototype.getProjectionObject = function() {
                    return this.olMap.getProjectionObject()
                },
                t.prototype.getCenter = function() {
                    return this.olMap.getCenter()
                },
                t.prototype.setCenter = function(e, t, n, i) {
                    return this.olMap.setCenter(e, t, n, i)
                },
                t.prototype.addLayer = function(e) {
                    this.olMap.addLayer(e)
                },
                t.prototype.removeLayer = function(e, t) {
                    this.olMap.removeLayer(e, t)
                },
                t.prototype.addLayers = function(e) {
                    this.olMap.addLayers(e)
                },
                t.prototype.calculateBounds = function() {
                    return this.olMap.calculateBounds()
                },
                t.prototype.getZoomForExtent = function(e, t) {
                    return this.olMap.getZoomForExtent(e, t)
                },
                t.prototype.getMapEventsListener = function() {
                    return this.olMap.events
                },
                t.prototype.getResolution = function() {
                    return this.olMap.getResolution()
                },
                t.prototype.getLonLatFromViewPortPx = function(e) {
                    return this.olMap.getLonLatFromViewPortPx(e)
                },
                t.prototype.getLonLatFromPixel = function(e) {
                    return this.olMap.getLonLatFromPixel(e)
                },
                t.prototype.getLayersBy = function(e, t) {
                    return this.olMap.getBy("layers", e, t)
                },
                t.prototype.getLayerContainerDiv = function() {
                    return this.olMap.layerContainerDiv
                },
                t.prototype.getLayers = function() {
                    return this.olMap.layers
                },
                t.prototype.getOLMap = function() {
                    return this.olMap
                },
                t.prototype.getExtent = function() {
                    return this.olMap.getExtent()
                },
                t.prototype.addPopoverLayer = function(e) {
                    this.popoverLayersRegion.show(e.getContainer())
                },
                t
        }(a.MapLayers);
    t.default = y
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-restricted12d401d9920318fa515cfbd84b8bd91c.png"
}, function(e, t, n) {
    e.exports = n.p + "img/two-way-restrictedd655660f966eee861e57842c3b34c64f.png"
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-drivee7f57df07fa6d5f61eee9b71ae5e18b1.png"
}, function(e, t, n) {
    e.exports = n.p + "img/problem-pinA1d99ad1e8cd947bcea5969fff69d2eb8.png"
}, function(e, t, n) {
    e.exports = n.p + "img/problem-pinBafa0a6c37d9eba8278e82a3a97088206.png"
}, function(e, t, n) {
    e.exports = n.p + "img/one-way-routed9aa340910f8fc7a0fd2285fa0aab968.png"
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(176)),
        o = i(n(177)),
        a = i(n(249)),
        l = i(n(250)),
        u = i(n(194)),
        c = i(n(166)),
        d = i(n(188)),
        h = r(n(25)),
        p = n(115),
        g = function() {
            function e(e) {
                this.actionManager = e
            }
            return e.prototype.moveHouseNumberRooftop = function(e, t, n) {
                    var i = h.fromLonLat(n),
                        r = p.calculatePointProjectionToSegments(e, i);
                    if (r) {
                        var s = r.closestSegment,
                            o = r.projectionLonLat,
                            l = h.fromLonLat(o),
                            u = new a.default(t, i, l, s.getID());
                        return this.actionManager.add(u),
                            u.getNewHouseNumber()
                    }
                    return null
                },
                e.prototype.moveHouseNumberFractionPoint = function(e, t, n) {
                    var i = h.fromLonLat(n),
                        r = p.calculatePointProjectionToSegments(e, i);
                    if (r) {
                        var s = r.closestSegment,
                            o = h.fromLonLat(r.projectionLonLat),
                            a = new l.default(t, o, s.getID());
                        return this.actionManager.add(a),
                            a.getNewHouseNumber()
                    }
                    return null
                },
                e.prototype.createAndAddHouseNumber = function(e, t, n) {
                    var i = h.fromLonLat(t),
                        r = p.calculatePointProjectionToSegments(e, i);
                    if (r) {
                        var s = h.fromLonLat(r.projectionLonLat),
                            o = new d.default({
                                fractionPoint: s,
                                number: n,
                                valid: !0,
                                forced: !1,
                                geometry: i,
                                segID: r.closestSegment.getID()
                            });
                        return this.addHouseNumber(o)
                    }
                    return null
                },
                e.prototype.addHouseNumber = function(e) {
                    var t = new s.default(e);
                    return this.actionManager.add(t),
                        e
                },
                e.prototype.updateHouseNumber = function(e, t) {
                    this.actionManager.add(new c.default(e, {
                        number: t,
                        forced: !1,
                        valid: !0
                    }))
                },
                e.prototype.areHouseNumbersForced = function(e) {
                    return e.every(function(e) {
                        return e.isForced()
                    })
                },
                e.prototype.setForced = function(e) {
                    if (!this.areHouseNumbersForced(e)) {
                        var t = e.map(function(e) {
                            return new c.default(e, {
                                forced: !0
                            })
                        });
                        this.actionManager.add(new u.default(t))
                    }
                },
                e.prototype.deleteHouseNumber = function(e) {
                    this.actionManager.add(new o.default(e))
                },
                e
        }();
    t.default = g
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
            return (i = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(e, t) {
                    e.__proto__ = t
                } ||
                function(e, t) {
                    for (var n in t)
                        t.hasOwnProperty(n) && (e[n] = t[n])
                }
            )(e, t)
        },
        function(e, t) {
            function n() {
                this.constructor = e
            }
            i(e, t),
                e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                    new n)
        }
    );
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.render = function(t) {
                e.prototype.render.call(this, t);
                var n = this.getMarker();
                if (n.icon.$div.addClass("user-generated"),
                    t.attributes.hasComments)
                    return n.icon.$div.addClass("has-comments")
            },
            t
    }(n(251).MapProblemMarker);
    t.UpdateRequestMarker = s
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(37)),
        l = o(n(21)),
        u = o(n(17)),
        c = o(n(20)),
        d = n(119),
        h = s(n(189)),
        p = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    var t = new a.default("road-closure"),
                        n = this._getCenter(e),
                        i = new OpenLayers.Marker(n.lonlat, t);
                    return this._createArrow(e, n.angle).appendTo(i.icon.$div),
                        i
                },
                t.prototype._createArrow = function(e, t) {
                    var n = 360 - l.radToDeg(t),
                        i = "forward";
                    return e.forward || (n -= 180,
                            i = "backward"),
                        $("<div>").addClass("arrow").addClass(i).css({
                            transform: "rotate(" + n + "deg)"
                        })
                },
                t.prototype._getCenter = function(e) {
                    var t = c.getLength(e.geometry),
                        n = l.getPointAlongLine(e.geometry, t / 2),
                        i = n.point;
                    return {
                        angle: n.angle,
                        lonlat: u.createLonLat(i.x, i.y)
                    }
                },
                t.prototype.render = function(e) {
                    var t = this.getMarker();
                    t.icon.$div.data("model", e),
                        t.icon.$div.toggleClass("inactive", !e.active)
                },
                t
        }(d.FeatureMarker);
    t.RoadClosureMarker = p,
        t.default = h.default
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(17)),
        l = o(n(37)),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    if (!e.fromNodeClosed)
                        throw new Error("Can only draw fromNodeClosed for roadClosure");
                    var t = W.model.segments.getObjectById(e.segID);
                    if (!t)
                        throw new Error("Can only draw segments from the model.\n        Couldn't find segment id " + e.segID);
                    var n = e.forward ? t.getFromNode() : t.getToNode();
                    if (!n)
                        throw new Error("Can only draw segments from the model.\n        Couldn't find segment id " + e.segID);
                    var i = a.createLonLat(n.geometry.x, n.geometry.y),
                        r = new l.default("closure-node");
                    return new OpenLayers.Marker(i, r)
                },
                t.prototype.render = function(e) {
                    this.getMarker().icon.$div.data("model", e)
                },
                t
        }(n(119).FeatureMarker);
    t.RoadClosureFromNodeMarker = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(37)),
        l = o(n(25)),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    var t = new a.default("house-number"),
                        n = l.toLonLat(e.geometry);
                    return new OpenLayers.Marker(n, t)
                },
                t.prototype.render = function(e) {
                    var t = this.getMarker().icon.div;
                    return t.dataset.id = String(e.getID()),
                        t.classList.add("house-number-marker"),
                        t.classList.toggle("valid", e.isValid()),
                        t.classList.toggle("forced", e.isForced()),
                        t.innerText = e.getNumber(),
                        t
                },
                t
        }(n(119).FeatureMarker);
    t.HouseNumberLayerMarker = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(37)),
        l = o(n(25)),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    var t = new a.default("city-name-marker"),
                        n = l.toLonLat(e.attributes.geometry);
                    return new OpenLayers.Marker(n, t)
                },
                t.prototype.render = function(e) {
                    var t = this.getMarker();
                    t.icon.div.textContent = e.attributes.name,
                        t.icon.$div.data("cityId", e.getID())
                },
                t
        }(n(119).FeatureMarker);
    t.CityMarker = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(37)),
        l = o(n(25)),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.createMarker = function(e) {
                    var t = new a.default("restricted-driving-area-name-marker"),
                        n = l.toLonLat(e.attributes.center),
                        i = new OpenLayers.Marker(n, t),
                        r = $("<div class='icon w-icon-alert-danger'></div>");
                    return this.$label = $("<div class='marker-label'></div>"),
                        i.icon.$div.append(r),
                        i.icon.$div.append(this.$label),
                        i
                },
                t.prototype.render = function(e) {
                    var t = this.getMarker();
                    this.$label.text(e.attributes.name),
                        t.icon.$div.data("restrictedDrivingAreaId", e.getID())
                },
                t
        }(n(119).FeatureMarker);
    t.RestrictedDrivingAreaMarker = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__assign || function() {
            return (s = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = n(760),
        u = o(n(25)),
        c = n(762),
        d = a(n(4)),
        h = a(n(178)),
        p = o(n(7)),
        g = a(n(397)),
        f = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.className = function() {
                    return e.prototype.className.call(this) + " restricted-driving-area-marker-popover"
                },
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/RestrictedDrivingAreas/templates/restricted-driving-area-marker-popover"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.events = function() {
                    return s({}, e.prototype.events.call(this), {
                        "click .close-button": this.onCloseButtonClick
                    })
                },
                t.prototype.childViewEvents = function() {
                    return {
                        "restriction:click": "onRestrictionClick"
                    }
                },
                t.prototype.bindings = function() {
                    return s({}, e.prototype.bindings.call(this), {
                        ".name": "name",
                        ".subscriptions-list": "subscriptionsString"
                    })
                },
                t.prototype.regions = function() {
                    return {
                        restrictionsCollection: "#restrictions-region"
                    }
                },
                t.prototype.onCloseButtonClick = function() {
                    this.onCloseHandler(this.featureID)
                },
                t.prototype.getLonLat = function() {
                    var e = this.getFeature();
                    return e ? u.toLonLat(e.attributes.center) : null
                },
                t.prototype.featureToViewModel = function(e) {
                    return {
                        id: e.getID(),
                        name: e.attributes.name,
                        subscriptionsString: this.getSubscriptionsString()
                    }
                },
                t.prototype.getSubscriptionsString = function() {
                    var e = this.getFeature(),
                        t = h.default.getDrivingAreaSubscriptions(e);
                    return 0 === t.length ? "" : I18n.t("restricted_driving_area.popover.permits", {
                        permitsList: t.join(", ")
                    })
                },
                t.prototype._reflectRepositoryChanges = function() {
                    e.prototype._reflectRepositoryChanges.call(this),
                        this.showRestrictionCollectionView()
                },
                t.prototype.showRestrictionCollectionView = function() {
                    this.restrictionsCollection = this.createRestrictionCollection(),
                        this.showChildView("restrictionsCollection", new d.default.CollectionView({
                            collection: this.restrictionsCollection,
                            childView: function() {
                                return c.PopoverRestrictionItemView
                            },
                            childViewTriggers: {
                                "restriction:click": "restriction:click"
                            }
                        }))
                },
                t.prototype.createRestrictionCollection = function() {
                    var e = this.getFeature(),
                        t = e.getRestrictions(),
                        n = h.default.canEditDrivingAreaRestriction(e);
                    return new p.Collection(t.map(function(e) {
                        return c.PopoverRestrictionItemView.createModel(e, n, e.supportsLicensePlateNumber())
                    }))
                },
                t.prototype.onRestrictionClick = function(e) {
                    this.editRestriction(e)
                },
                t.prototype.editRestriction = function(e) {
                    var t = this.getFeature(),
                        n = h.default.canEditDrivingAreaRestriction(t),
                        i = new h.default,
                        r = new g.default({
                            dataModel: this._dataModel,
                            restrictedDrivingArea: t,
                            canEditRestrictions: n,
                            title: "",
                            subscriptions: i.getSupportedSubscriptions(t),
                            supportsLicensePlateNumber: i.supportsLicensePlateRestrictions(t),
                            supportsDaysOfMonthParity: i.supportsDaysOfMonthParity(t),
                            restrictionToEdit: e
                        });
                    W.app.layout.getRegion("dialogRegion").show(r)
                },
                t.prototype.onRender = function() {
                    e.prototype.onRender.call(this),
                        this.showRestrictionCollectionView()
                },
                t
        }(l.Popover);
    t.RestrictedDrivingAreaPopover = f
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(23),
        o = n(173),
        a = function() {
            function e(e, t, n, i, r, s) {
                void 0 === s && (s = {
                        singlePopover: !1
                    }),
                    this.repo = e,
                    this.editingMediator = t,
                    this.markerLayer = n,
                    this.popoverLayer = i,
                    this.popoverViewConstructor = r,
                    this.visiblePopovers = new Map,
                    this.singlePopover = s.singlePopover,
                    this.bindEvents()
            }
            return e.prototype.bindEvents = function() {
                    this.markerLayer.events.register("markerclick", this, this.onMarkerClick, !1),
                        this.repo.on([s.REMOVED, s.STATE_DELETED].join(" "), this.onFeaturesRemoved.bind(this)),
                        this.repo.on(s.CHANGED_ID, this.onFeatureChangedId.bind(this))
                },
                e.prototype.onMarkerClick = function(e) {
                    this.openPopover(e)
                },
                e.prototype.openPopover = function(e) {
                    var t = !this.getPopoverByFeatureId(e),
                        n = this.getFeatureById(e);
                    if (t && n) {
                        this.singlePopover && this.closeAllPopovers();
                        var i = this.createPanelForFeature(n);
                        this.visiblePopovers.set(e, i),
                            this.setMarkerVisibility(e, !1),
                            this.popoverLayer.addPopover(i),
                            this.editingMediator.setInUse(n, o.IN_USE_REASONS_FLAGS.MARKER_POPOVER_LAYER)
                    }
                },
                e.prototype.onCloseButtonClick = function(e) {
                    this.closePopover(e)
                },
                e.prototype.closeAllPopovers = function() {
                    this.getVisiblePopoversFeatureIds().forEach(this.closePopover.bind(this))
                },
                e.prototype.closePopover = function(e) {
                    var t = this.getPopoverByFeatureId(e);
                    if (t) {
                        this.setMarkerVisibility(e, !0),
                            this.popoverLayer.removePopover(t),
                            this.visiblePopovers.delete(e);
                        var n = this.getFeatureById(e);
                        n && this.editingMediator.clearInUse(n, o.IN_USE_REASONS_FLAGS.MARKER_POPOVER_LAYER)
                    }
                },
                e.prototype.setMarkerVisibility = function(e, t) {
                    this.markerLayer.setMarkerVisibility(e, t)
                },
                e.prototype.onFeaturesRemoved = function(e) {
                    var t = this;
                    e.forEach(function(e) {
                        t.closePopover(e.getID())
                    })
                },
                e.prototype.onFeatureChangedId = function(e) {
                    var t = e.oldID,
                        n = e.newID,
                        i = this.getPopoverByFeatureId(t);
                    i && (this.visiblePopovers.set(n, i),
                        this.visiblePopovers.delete(t))
                },
                e.prototype.getPopoverByFeatureId = function(e) {
                    return this.visiblePopovers.get(e)
                },
                e.prototype.getFeatureById = function(e) {
                    return this.repo.getObjectById(e)
                },
                e.prototype.getVisiblePopoversFeatureIds = function() {
                    return r(this.visiblePopovers.keys())
                },
                e.prototype.createPanelForFeature = function(e) {
                    return this.popoverViewConstructor(e, this.onCloseButtonClick.bind(this))
                },
                e
        }();
    t.MarkerPopoverLayerAdapter = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(4)),
        s = function() {
            function e(e) {
                this.map = e,
                    this.popoversContainer = new r.default.CollectionView,
                    this.bindEvents()
            }
            return e.prototype.bindEvents = function() {
                    this.map.getMapEventsListener().register("move", this, this.onMapMove.bind(this), !1)
                },
                e.prototype.onMapMove = function() {
                    this.updatePopoversLocations()
                },
                e.prototype.updatePopoversLocations = function() {
                    this.getPopovers().forEach(this.updatePopoverLocation.bind(this))
                },
                e.prototype.getContainer = function() {
                    return this.popoversContainer
                },
                e.prototype.addPopover = function(e) {
                    this.hasPopover(e) || (this.popoversContainer.addChildView(e, this.getPopovers().length - 1),
                        this.updatePopoverLocation(e),
                        e.render(),
                        Promise.resolve().then(function() {
                            e.show()
                        }))
                },
                e.prototype.removePopover = function(e) {
                    this.hasPopover(e) && this.popoversContainer.removeChildView(e)
                },
                e.prototype.updatePopoverLocation = function(e) {
                    var t = e.getLonLat();
                    if (t) {
                        var n = this.map.getPixelFromLonLat(t);
                        e.setScreenLocation(n.x, n.y)
                    }
                },
                e.prototype.getPopovers = function() {
                    return this.popoversContainer.children.toArray()
                },
                e.prototype.hasPopover = function(e) {
                    return this.getPopovers().includes(e)
                },
                e
        }();
    t.PopoverLayer = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(191),
        r = n(390),
        s = n(42),
        o = n(56),
        a = n(165);
    t.getInvalidEnvironments = function(e) {
        var t = a.getRepositoryBounds(o.RepositoryName.RESTRICTED_EDITING_AREAS);
        return null != t ? e.restrictedEditingAreas.getObjectArray(function(e) {
            var n = e.attributes.geometry.getArea() / i.getBoundsArea(t);
            return e.attributes.type === r.TYPE.INVALID_ENV && n >= s.RESTRICTED_EDITING_AREA_MIN_COVERAGE
        }) : []
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.NONE = "NONE",
        t.TURN_LEFT = "TURN_LEFT",
        t.TURN_RIGHT = "TURN_RIGHT",
        t.KEEP_LEFT = "KEEP_LEFT",
        t.KEEP_RIGHT = "KEEP_RIGHT",
        t.CONTINUE = "CONTINUE",
        t.EXIT_LEFT = "EXIT_LEFT",
        t.EXIT_RIGHT = "EXIT_RIGHT",
        t.UTURN = "UTURN"
}, function(e, t, n) {
    e.exports = n.p + "img/home-pin274fef96719c46ce1a4cf43e3b4a86b9.png"
}, function(e, t, n) {
    "use strict";
    var i;
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = n(19),
        s = n(772),
        o = ((i = {})[r.TogglerEnum.GROUP_ISSUES] = 0,
            i[r.TogglerEnum.GROUP_MAP_ISSUES] = 1,
            i[r.TogglerEnum.ITEM_MAP_PROBLEMS] = 2,
            i[r.TogglerEnum.ITEM_CLOSED_MAP_PROBLEMS] = 3,
            i[r.TogglerEnum.ITEM_UPDATE_REQUESTS] = 4,
            i[r.TogglerEnum.ITEM_CLOSED_UPDATE_REQUESTS] = 5,
            i[r.TogglerEnum.ITEM_PLACE_UPDATE_REQUESTS] = 6,
            i[r.TogglerEnum.GROUP_PARKING_ISSUES] = 7,
            i[r.TogglerEnum.ITEM_PARKING_MAP_PROBLEMS] = 8,
            i[r.TogglerEnum.ITEM_PARKING_CLOSED_MAP_PROBLEMS] = 9,
            i[r.TogglerEnum.ITEM_PARKING_PLACE_UPDATE_REQUESTS] = 10,
            i[r.TogglerEnum.GROUP_PLACES] = 11,
            i[r.TogglerEnum.ITEM_VENUES] = 12,
            i[r.TogglerEnum.ITEM_RESIDENTIAL_PLACES] = 13,
            i[r.TogglerEnum.ITEM_PARKING_PLACES] = 14,
            i[r.TogglerEnum.GROUP_ROAD] = 15,
            i[r.TogglerEnum.ITEM_ROAD] = 16,
            i[r.TogglerEnum.ITEM_JUNCTION_BOXES] = 17,
            i[r.TogglerEnum.ITEM_CLOSURES] = 18,
            i[r.TogglerEnum.ITEM_SPEED_CAMERAS] = 19,
            i[r.TogglerEnum.GROUP_DISPLAY] = 20,
            i[r.TogglerEnum.ITEM_SATELLITE_IMAGERY] = 21,
            i[r.TogglerEnum.ITEM_AREA_MANAGERS] = 22,
            i[r.TogglerEnum.ITEM_GPS_POINTS] = 23,
            i[r.TogglerEnum.ITEM_LIVE_USERS] = 24,
            i[r.TogglerEnum.ITEM_EDITABLE_AREAS] = 25,
            i[r.TogglerEnum.ITEM_MAP_COMMENTS] = 26,
            i[r.TogglerEnum.GROUP_CITIES] = 27,
            i[r.TogglerEnum.ITEM_CITY_NAMES] = 28,
            i[r.TogglerEnum.ITEM_DISALLOWED_TURNS] = 29,
            i[r.TogglerEnum.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS] = 30,
            i[r.TogglerEnum.ITEM_HOUSE_NUMBERS] = 31,
            i[r.TogglerEnum.GROUP_RESTRICTED_DRIVING_AREAS] = 32,
            i[r.TogglerEnum.ITEM_RESTRICTED_DRIVING_AREAS_NAMES] = 33,
            i);
    t.TOGGLER_BIT_NUMBER = o;
    var a = function() {
        function e() {
            this.togglerIdToBitNumber = Object.assign({}, o)
        }
        return e.prototype.convertStateToNumber = function(e) {
                var t = this._convertStateToBitsArray(e);
                return s.convertBitsToNumber(t)
            },
            e.prototype._convertStateToBitsArray = function(e) {
                var t = this;
                return Object.keys(e).reduce(function(n, i) {
                    return e[i] && n.push({
                            bit: t.togglerIdToBitNumber[i],
                            value: !0
                        }),
                        n
                }, [])
            },
            e.prototype.convertNumberToState = function(e) {
                var t = this,
                    n = s.convertNumberToBits(e).filter(function(e) {
                        return e.value
                    }).map(function(e) {
                        return e.bit
                    });
                return Object.keys(this.togglerIdToBitNumber).reduce(function(e, i) {
                    return e[i] = n.includes(t.togglerIdToBitNumber[i]),
                        e
                }, {})
            },
            e
    }();
    t.TogglerTreeBitfieldSerializer = a
}, function(e, t, n) {
    e.exports = n.p + "img/level0233d12d7a41f4890f6dd1ee9088ac84e6.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level032896edee403d97e81128b54ed81cf668.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level0482dfdf79740aa5d92aae015abc6660fc.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level050754532211b9f1d2a6bef279e237217f.png"
}, function(e, t, n) {
    e.exports = n.p + "img/level06d91ac1e234d4a0b11bec9fd0635882ca.png"
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.defaults = function() {
                return {
                    cityID: "",
                    cityName: "",
                    emptyCity: !1,
                    streetName: "",
                    stateID: "",
                    countryID: "",
                    citySelectedById: !0
                }
            },
            t.prototype.getStreetAttributes = function() {
                var e = this.attributes;
                return {
                    cityID: e.cityID,
                    cityName: e.cityName,
                    emptyCity: e.emptyCity,
                    streetName: e.streetName
                }
            },
            t
    }(s(n(7)).default.Model);
    t.default = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e(e) {
            this._user = e
        }
        return e.prototype.canChangeStreetName = function() {
                if (this._user) {
                    var e = this.getMaxAllowedStreetNamesChanges(),
                        t = this._user.getStreetNameChangeCount();
                    return null == t || null != t && null != e && t < e
                }
                return !0
            },
            e.prototype.getMaxAllowedStreetNamesChanges = function() {
                return this._user ? this._user.getMaxAllowedStreetNamesChanges() : null
            },
            e
    }();
    t.default = i
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(4)),
        a = s(n(775)),
        l = function(e) {
            function t(t) {
                var n = e.call(this) || this;
                return n.clipboard = null,
                    n.messages = t.messages,
                    n.textGenerator = t.textGenerator,
                    n
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return !1
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(t.prototype, "tagName", {
                    get: function() {
                        return "i"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(t.prototype, "className", {
                    get: function() {
                        return "fa fa-copy w-clickable"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.onRender = function() {
                    var e = this;
                    this.$el.tooltip({
                            title: this.messages.title
                        }),
                        this.clipboard = new a.default(this.$el[0], {
                            text: this.textGenerator
                        }),
                        this.clipboard.on("success", function(t) {
                            e.showConfirmation()
                        }),
                        this.clipboard.on("error", function() {
                            console.error("ClipboardElement text was not be copied")
                        })
                },
                t.prototype.onBeforeDestroy = function() {
                    this.destroyTooltip(),
                        this.clipboard && this.clipboard.destroy()
                },
                t.prototype.showConfirmation = function() {
                    this.setTooltipMessage(this.messages.confirmation),
                        this.$el.tooltip("show"),
                        this.setTooltipMessage(this.messages.title)
                },
                t.prototype.setTooltipMessage = function(e) {
                    this.$el.attr("title", e).tooltip("fixTitle")
                },
                t.prototype.destroyTooltip = function() {
                    this.$el.tooltip("destroy")
                },
                t
        }(o.default.View);
    t.ClipboardElementView = l
}, , function(e, t) {
    e.exports = '<svg width="10px" height="10px" viewBox="0 0 10 10" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>U-turn</title><desc>Created with Sketch.</desc><g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="U-turn" fill="#FFFFFF"><path d="M1.98856459,6.02890301 L1.98856459,4.00962131 C1.98856459,2.06354448 3.55646972,0.4859375 5.49057871,0.4859375 C7.42468771,0.4859375 8.99259283,2.06354448 8.99259283,4.00962131 L8.99259283,8.00128907 C8.99259283,8.55646873 8.54529856,9.00653076 7.9935331,9.00653076 C7.44176765,9.00653076 6.99447337,8.55646873 6.99447337,8.00128907 L6.99447337,4.00962131 C6.99447337,3.17390379 6.3211568,2.49642088 5.49057871,2.49642088 C4.66000063,2.49642088 3.98668405,3.17390379 3.98668405,4.00962131 L3.98668405,6.02890301 L4.43601965,6.02890301 C4.53770135,6.02890301 4.6375156,6.05892261 4.72502537,6.11582282 C4.99477481,6.29121811 5.08405767,6.67370079 4.92444422,6.97012181 L3.52061746,9.17976164 C3.46826774,9.27698125 3.39287059,9.35675027 3.30247801,9.41054981 C3.02687253,9.57458371 2.68243936,9.46204611 2.53316501,9.15919004 L1.06108841,6.94955021 C1.0161352,6.85834665 0.992592834,6.75626252 0.992592834,6.65254055 C0.992592834,6.30811505 1.24668174,6.02890301 1.56011629,6.02890301 L1.98856459,6.02890301 Z" id="Path"></path></g></g></svg>'
}, function(e, t) {
    e.exports = '<svg width="16px" height="20px" viewBox="0 0 16 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>U-turn-large</title><desc>Created with Sketch.</desc><g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="U-turn-large" fill="#FFFFFF" fill-rule="nonzero"><path d="M1.5,15 L1.5,7 C1.5,3.13400675 4.63400675,0 8.5,0 C12.3659932,0 15.5,3.13400675 15.5,7 L15.5,18.0109863 C15.5,18.8394135 14.8284271,19.4977417 14,19.4977417 C13.1715729,19.4977417 12.5,18.8261688 12.5,17.9977417 L12.5,7 C12.5,4.790861 10.709139,3 8.5,3 C6.290861,3 4.5,4.790861 4.5,7 L4.5,15 L5.15092454,15 C5.30302732,15 5.45233663,15.0434181 5.58324,15.1257144 C5.98675055,15.3793932 6.12030625,15.932588 5.88154501,16.3613095 L3.78160036,19.5571698 C3.70329189,19.6977811 3.59050745,19.8131531 3.45529175,19.8909648 C3.04302132,20.1282114 2.52779351,19.9654453 2.30449824,19.5274165 L0.102460593,16.3315563 C0.0352163643,16.1996462 6.44163732e-17,16.0519992 5.52305533e-17,15.9019834 C2.4727561e-17,15.4038317 0.38008439,15 0.848942245,15 L1.5,15 Z" id="Combined-Shape"></path></g></g></svg>'
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(n(0)),
        o = r(n(33)),
        a = function() {
            function e() {
                this._turnIndexes = new Map
            }
            return e.prototype.addTurnIndexes = function(e, t) {
                    this._turnIndexes.set(e, t)
                },
                e.prototype._indexesHaveGaps = function(e) {
                    return !o.isSequential(e)
                },
                e.prototype.hasGaps = function() {
                    var e = this;
                    return Array.from(this._turnIndexes.values()).some(function(t) {
                        return e._indexesHaveGaps(t)
                    })
                },
                e.prototype.hasCollisions = function() {
                    var e = this._indexesSortedByAngle();
                    return this._hasSortedCollisions(e)
                },
                e.prototype._hasSortedCollisions = function(e) {
                    if (e.length < 2)
                        return !1;
                    for (var t = s.default.max(e[0]), n = 1; n < e.length; n++) {
                        var i = s.default.min(e[n]),
                            r = s.default.max(e[n]);
                        if (i < t)
                            return !0;
                        t = r
                    }
                    return !1
                },
                e.prototype._indexesSortedByAngle = function() {
                    var e = this,
                        t = Array.from(this._turnIndexes.keys());
                    return t.sort(function(e, t) {
                            return e - t
                        }),
                        t.map(function(t) {
                            return e._turnIndexes.get(t) || []
                        })
                },
                e
        }();
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(175));
    n(395),
        n(396);
    var o = function() {
        function e(e, t) {
            var n = e.view,
                r = e.targetElement;
            this.view = n,
                this.targetElement = r,
                this.tip = s.default.one(r, i({}, this.getDefaultTippyOptions(), t))
        }
        return e.prototype.getDefaultTippyOptions = function() {
                return {
                    arrow: !0,
                    performance: !0,
                    arrowType: "sharp",
                    theme: "wme-tippy-menu",
                    trigger: this.targetElement ? "click" : "manual",
                    size: "large",
                    placement: "right",
                    interactive: !0,
                    onMount: this.onMount.bind(this),
                    onHidden: this.onHidden.bind(this),
                    popperOptions: {
                        modifiers: {
                            preventOverflow: {
                                boundariesElement: document.body,
                                enabled: !0,
                                padding: 30
                            }
                        }
                    }
                }
            },
            e.prototype.onMount = function() {
                var e = this.tip.popperChildren.content;
                this.insertViewToContent(e),
                    this.view.render()
            },
            e.prototype.insertViewToContent = function(e) {
                if (null === e)
                    throw new Error("missing content of tippy");
                e.innerHTML = "",
                    e.appendChild(this.view.el)
            },
            e.prototype.onHidden = function() {
                this.view.isDestroyed() || this.view.destroy(),
                    this.tip.destroy()
            },
            e.prototype.show = function() {
                this.tip.show()
            },
            e.prototype.hide = function() {
                this.tip.hide()
            },
            e
    }();
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(4)),
        a = s(n(776)),
        l = s(n(7)),
        u = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Lanes/templates/turn_override"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.regions = function() {
                    return {
                        turnOptions: ".turn-options"
                    }
                },
                t.prototype.onRender = function() {
                    this._showAngleOptionsCollection()
                },
                t.prototype._showAngleOptionsCollection = function() {
                    var e = this._createCollectionModels(),
                        t = new o.default.CollectionView({
                            childView: a.default,
                            collection: new l.default.Collection(e),
                            childViewTriggers: {
                                "option:click": "option:click"
                            }
                        });
                    this.showChildView("turnOptions", t)
                },
                t.prototype._createCollectionModels = function() {
                    for (var e = [], t = -180; t <= 180; t += 45) {
                        var n = {
                            angle: t,
                            label: I18n.t("lanes.override.angles." + t),
                            wazeSelected: t === this.model.get("wazeAngle"),
                            selected: t === this.model.get("selectedAngle")
                        };
                        e.push(n)
                    }
                    return e
                },
                t
        }(o.default.View);
    t.TurnOverride = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.generateDescription = function() {
                if (1 === this.subActions.length) {
                    var e = this.subActions[0];
                    e.generateDescription(),
                        this._description = e.getDescription()
                } else
                    this._description = I18n.t("save.changes_log.actions.UpdateSegmentsRestrictions.multi_segments", {
                        count: this.subActions.length
                    })
            },
            t
    }(s(n(71)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(88),
        r = n(87),
        s = n(61),
        o = function() {
            function e(e, t) {
                this.selection = t,
                    this.dataModel = e,
                    this.roadTypeUseCase = new r.SegmentsRoadTypeUseCase(this.selection.getSelectedSegments())
            }
            return e.prototype.canEditUnpaved = function() {
                    return this.canEditConsistentWalkabilityAttribute()
                },
                e.prototype.canEditTunnel = function() {
                    return this.canEditConsistentWalkabilityAttribute()
                },
                e.prototype.canEditNearbyHOV = function() {
                    return this.canEditConsistentWalkabilityAttribute()
                },
                e.prototype.canEditHeadlightsReminder = function() {
                    var e = this.selection.getSelectedSegments();
                    return this.roadTypeUseCase.hasConsistentWalkability() && e.every(function(e) {
                        return e.canEditHeadlightsReminder()
                    }) && this.canEditBaseAttributes()
                },
                e.prototype.shouldShowHeadlightsReminder = function() {
                    var e = (new s.SegmentStreetsUseCase(this.dataModel, this.selection.getSelectedSegments()).getAddress().getCountry() || {}).allowHeadlightsReminderRank;
                    return null != (void 0 === e ? null : e)
                },
                e.prototype.canEditBeacons = function() {
                    return W.loginManager.isStaff() && this.canEditBaseAttributes()
                },
                e.prototype.shouldShowBeacons = function() {
                    return W.loginManager.isStaff() || this.selection.getSelectedSegments().some(function(e) {
                        return e.hasBeacons()
                    })
                },
                e.prototype.canEditConsistentWalkabilityAttribute = function() {
                    return this.roadTypeUseCase.hasConsistentWalkability() && this.canEditBaseAttributes()
                },
                e.prototype.canEditBaseAttributes = function() {
                    return new i.SegmentsBaseAttributesUseCase(this.selection.getSelectedSegments()).arePropertiesEditable()
                },
                e
        }();
    t.SegmentsFlagsUseCase = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(118),
        r = n(45),
        s = function() {
            function e(e) {
                Array.isArray(e) ? this.segments = e : this.segments = [e],
                    this.segmentReducer = new r.SegmentReducer(this.segments, new i.SegmentReader)
            }
            return e.prototype.getLength = function() {
                    return this.segmentReducer.reduceLength()
                },
                e
        }();
    t.SegmentsLengthUseCase = s
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(48),
        r = n(109),
        s = n(45),
        o = function() {
            function e(e) {
                this.selection = e,
                    this.segmentReducer = new s.SegmentReducer(this.selection.getSelectedSegments(), new r.SegmentDirectionalReader(this.selection))
            }
            return e.prototype.canEditRoutingRoadTypes = function() {
                    return this.isRoutable() && this.segmentReducer.reduceRoadTypes() !== s.MixedValue && this.selection.getSelectedSegments().every(function(e) {
                        return e.canEditRoutingRoadTypes()
                    })
                },
                e.prototype.getAvailableRoutingRoadTypes = function() {
                    var e = {
                        prev: null,
                        next: null
                    };
                    if (!this.canEditRoutingRoadTypes())
                        return e;
                    var t = this.segmentReducer.reduceRoadTypes();
                    if (t === s.MixedValue)
                        return e;
                    if (!i.isRoutingRoadType(t))
                        return e;
                    var n = i.ROUTING_ROAD_TYPES.indexOf(t);
                    return e.prev = i.ROUTING_ROAD_TYPES[n - 1] || null,
                        e.next = i.ROUTING_ROAD_TYPES[n + 1] || null,
                        e
                },
                e.prototype.isRoutable = function() {
                    return this.selection.getSelectedSegments().every(function(e) {
                        return i.isRoutingRoadType(e.attributes.roadType)
                    })
                },
                e.prototype.getRoutingRoadType = function() {
                    return this.segmentReducer.reduceRoutingRoadTypes()
                },
                e
        }();
    t.SegmentsRoutingUseCase = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(88),
        r = n(87),
        s = n(61),
        o = n(109),
        a = n(45),
        l = function() {
            function e(e, t) {
                this.selection = t,
                    this.dataModel = e,
                    this.segmentReducer = new a.SegmentReducer(this.selection.getSelectedSegments(), new o.SegmentDirectionalReader(this.selection))
            }
            return e.prototype.getMaxSpeed = function(e) {
                    return this.segmentReducer.reduceMaxSpeed(e)
                },
                e.prototype.getMaxSpeedUnverified = function(e) {
                    return this.segmentReducer.reduceMaxSpeedUnverified(e)
                },
                e.prototype.allowSpeedLimit = function() {
                    return W.Config.speed_limit.enable
                },
                e.prototype.canEditMaxSpeed = function(e) {
                    var t = this.getMaxSpeedUnverified(e),
                        n = new r.SegmentsRoadTypeUseCase(this.selection.getSelectedSegments());
                    return !0 !== t && n.hasConsistentWalkability() && this.allPropertiesEditable()
                },
                e.prototype.canChangeMaxSpeedUnverified = function(e) {
                    return this.segmentReducer.reduceMaxSpeed(e) !== a.MixedValue && (!!new r.SegmentsRoadTypeUseCase(this.selection.getSelectedSegments()).isDrivable() && (this.getMaxSpeedUnverified(e) && this.allPropertiesEditable()))
                },
                e.prototype.supportsAverageSpeedCamera = function() {
                    var e = (new s.SegmentStreetsUseCase(this.dataModel, this.selection.getSelectedSegments()).getAddress().getCountry() || {}).allowAverageSpeedCamerasRank;
                    return null != (void 0 === e ? null : e)
                },
                e.prototype.canEditAverageSpeedCamera = function() {
                    return new r.SegmentsRoadTypeUseCase(this.selection.getSelectedSegments()).hasConsistentWalkability() && this.selection.getSelectedSegments().every(function(e) {
                        return e.canEditAverageSpeedCamera()
                    })
                },
                e.prototype.allPropertiesEditable = function() {
                    return new i.SegmentsBaseAttributesUseCase(this.selection.getSelectedSegments()).arePropertiesEditable()
                },
                e
        }();
    t.SegmentsSpeedUseCase = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(0)),
        o = r(n(194)),
        a = r(n(29)),
        l = n(777),
        u = function() {
            function e(e, t) {
                this.selection = t,
                    this.segments = t.getSelectedSegments(),
                    this.actionManager = e
            }
            return e.prototype.updateSegments = function(e) {
                    var t = this,
                        n = this.segments.map(function(n) {
                            var i = e;
                            return i = t.setFlagsAttributes(n, i),
                                i = t.enforceTollIdentity(i),
                                i = t.reverseAttributes(n, i),
                                t.updateSingleSegmentAttributes(n, i)
                        });
                    this.submitActions(n)
                },
                e.prototype.setFlagsAttributes = function(e, t) {
                    return i({}, s.default.omit(t, Object.keys(l.FLAG_ATTRIBUTES)), new l.SegmentFlagsCalculator(e).flagAttributesToMasks(t))
                },
                e.prototype.enforceTollIdentity = function(e) {
                    return e.fwdToll || e.revToll ? i({}, e, {
                        fwdToll: !0,
                        revToll: !0
                    }) : e
                },
                e.prototype.reverseAttributes = function(e, t) {
                    var n = this;
                    if (this.selection.isReversed(e)) {
                        var i = {};
                        return Object.keys(t).forEach(function(e) {
                                if (n.isSegmentAttribute(e)) {
                                    var r = n.getReverseAttribute(e);
                                    i[r] = t[e]
                                }
                            }),
                            i
                    }
                    return t
                },
                e.prototype.isSegmentAttribute = function(e) {
                    return !0
                },
                e.prototype.updateSingleSegmentAttributes = function(e, t) {
                    return new a.default(e, t)
                },
                e.prototype.wrapUpdateAction = function(e) {
                    return 1 === e.length ? e[0] : new o.default(e)
                },
                e.prototype.submitActions = function(e) {
                    e.length > 0 && this.actionManager.add(this.wrapUpdateAction(e))
                },
                e.prototype.getReverseAttribute = function(e) {
                    switch (e) {
                        case "fwdMaxSpeed":
                            return "revMaxSpeed";
                        case "revMaxSpeed":
                            return "fwdMaxSpeed";
                        case "fwdDirection":
                            return "revDirection";
                        case "revDirection":
                            return "fwdDirection";
                        case "fwdToll":
                            return "revToll";
                        case "revToll":
                            return "fwdToll";
                        case "fwdFlags":
                            return "revFlags";
                        case "revFlags":
                            return "fwdFlags";
                        case "fwdMaxSpeedUnverified":
                            return "revMaxSpeedUnverified";
                        case "revMaxSpeedUnverified":
                            return "fwdMaxSpeedUnverified";
                        default:
                            return e
                    }
                },
                e
        }();
    t.UpdateSegmentsUseCase = u
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = n(94);

    function o(e) {
        var t = e.fromHour,
            n = e.toHour,
            i = s.moment(t, s.moment.HTML5_FMT.TIME),
            r = s.moment(n, s.moment.HTML5_FMT.TIME);
        return (r.isBefore(i) || 0 === r.hours() && 0 === r.minutes()) && r.add(1, "day"),
            s.moment.range(i, r)
    }

    function a(e, t) {
        return r.default.intersection(e.days, t.days).length > 0 && function(e, t) {
            var n = o(e),
                i = o(t);
            return n.overlaps(i)
        }(e, t)
    }
    t.containsOverlappingOpeningHours = function(e) {
        for (var t = 1; t < e.length; t++)
            for (var n = 0; n < t; n++)
                if (a(e[t], e[n]))
                    return !0;
        return !1
    }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__assign || function() {
            return (s = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        o = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(57)),
        u = a(n(397)),
        c = a(n(178)),
        d = a(n(103)),
        h = a(n(85)),
        p = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "templates/restricted_driving_area/restricted-driving-area-edit"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.events = function() {
                    return s({}, e.prototype.events.call(this), {
                        "click .edit-restrictions": "editRestrictionsClicked"
                    })
                },
                t.prototype.regions = function() {
                    return {
                        addressEditRegion: ".address-edit",
                        lockEditRegion: ".lock-edit"
                    }
                },
                t.prototype.bindings = function() {
                    return s({}, e.prototype.bindings.call(this), {
                        "[name=name]": {
                            observe: "name",
                            events: ["blur"]
                        },
                        ".restriction-editing": {
                            observe: "showRestrictionEditing",
                            visible: !0
                        },
                        "button.edit-restrictions": {
                            observe: ["allowRestrictionEditing", "restrictionCounts"],
                            onGet: function(e) {
                                var t = o(e, 2),
                                    n = t[0],
                                    i = t[1];
                                return n ? i.driving > 0 ? I18n.t("edit.restricted_driving_area.actions.restrictions.edit") : I18n.t("edit.restricted_driving_area.actions.restrictions.add") : I18n.t("edit.restricted_driving_area.actions.restrictions.view")
                            }
                        }
                    })
                },
                t.prototype.featureToViewModel = function(e) {
                    var t = c.default.canEditDrivingAreaRestriction(e);
                    return {
                        id: e.getID(),
                        name: e.attributes.name,
                        showRestrictionEditing: !0,
                        allowRestrictionEditing: t,
                        restrictionCounts: {
                            driving: e.attributes.restrictions.length
                        },
                        lockRank: e.attributes.lockRank
                    }
                },
                t.prototype.editRestrictionsClicked = function() {
                    this.editRestrictions()
                },
                t.prototype.editRestrictions = function() {
                    var e = this.getFeature(),
                        t = c.default.canEditDrivingAreaRestriction(e),
                        n = new c.default,
                        i = new u.default({
                            dataModel: this._dataModel,
                            restrictedDrivingArea: e,
                            canEditRestrictions: t,
                            title: "",
                            subscriptions: n.getSupportedSubscriptions(e),
                            supportsLicensePlateNumber: n.supportsLicensePlateRestrictions(e),
                            supportsDaysOfMonthParity: n.supportsDaysOfMonthParity(e),
                            restrictionToEdit: null
                        });
                    W.app.layout.getRegion("dialogRegion").show(i)
                },
                t.prototype._renderAddressEdit = function() {
                    var e = this.getFeature();
                    this.addressView = new d.default({
                            getAddress: function() {
                                return e.getAddress()
                            },
                            dataModel: this._dataModel,
                            features: [e],
                            editable: e.arePropertiesEditable(),
                            editStreet: !1,
                            showCitySelection: !0
                        }),
                        this.showChildView("addressEditRegion", this.addressView)
                },
                t.prototype.onRender = function() {
                    e.prototype.onRender.call(this),
                        this._renderAddressEdit(),
                        this._renderLockEdit()
                },
                t.prototype.viewModelToFeature = function() {
                    return {
                        name: this.simpleAttribute("name"),
                        lockRank: this.simpleAttribute("lockRank")
                    }
                },
                t.prototype._renderLockEdit = function() {
                    var e = new h.default({
                        model: this.viewModel
                    });
                    this.showChildView("lockEditRegion", e)
                },
                t
        }(l.default);
    t.RestrictedDrivingAreaFeatureEditor = p
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        l = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(0)),
        c = a(n(41)),
        d = a(n(124)),
        h = a(n(27)),
        p = a(n(44)),
        g = l(n(223)),
        f = a(n(29)),
        m = a(n(15)),
        v = l(n(12)),
        _ = l(n(20)),
        y = function(e) {
            function t(t, n) {
                var i = e.call(this, n) || this;
                return i.bigJunction = t,
                    i.initialGeometry = v.cloneGeometry(i.bigJunction.geometry),
                    i.attributes = {},
                    i
            }
            return r(t, e),
                t.prototype.doAction = function() {
                    var e = this,
                        t = this.bigJunction.getID();
                    t || (t = this.model.bigJunctions.generateUniqueID()),
                        this.bigJunction.setID(t),
                        this.bigJunction.state = OpenLayers.State.INSERT,
                        this.model.bigJunctions.put(this.bigJunction);
                    var n = this._findShortSegments();
                    n.forEach(function(n) {
                        e.doSubAction(new f.default(n, {
                            crossroadID: t
                        }, {
                            dontSerialize: !0
                        }))
                    });
                    var i = new g.default(t, n, g.UPDATE_BIG_JUNCTION_TYPES.ADD_JUNCTION_TO_SEGMENT);
                    this.doSubAction(i);
                    var r = i.connectedSegments;
                    if (null === r)
                        throw new Error("missing connected segments");
                    var s = this._findMaxRankInSegmentArray(n.concat(r)),
                        o = {
                            segIDs: n.map(function(e) {
                                return e.getID()
                            }),
                            rank: s
                        };
                    u.default.extend(this.attributes, o),
                        u.default.extend(this.bigJunction.attributes, o);
                    var a = null;
                    if (this.model.getTopCityId() && (a = this.model.cities.getObjectById(this.model.getTopCityId())),
                        null === a && null != this.model.getTopCountry()) {
                        var l = new d.default(this.model.getTopState(), this.model.getTopCountry(), "", !0);
                        this.doSubAction(l),
                            a = l.city
                    }
                    return null !== a && (this.attributes.cityID = a.getID(),
                            this.bigJunction.attributes.cityID = a.getID()),
                        this.bigJunction.getShortestTurns().forEach(function(t) {
                            return e.doSubAction(new p.default(e.model.getTurnGraph(), t))
                        }),
                        !0
                },
                t.prototype._findShortSegments = function() {
                    var e = this;
                    return this.model.segments.getObjectArray(function(t) {
                        var n = _.getVertices(t.geometry),
                            i = u.default.head(n),
                            r = u.default.last(n);
                        if (!i || !r)
                            throw new Error("segment is missing from or to vertex");
                        return !t.isDeleted() && t.isDrivable() && v.containsPoint(e.initialGeometry, i) && v.containsPoint(e.initialGeometry, r)
                    })
                },
                t.prototype._findMaxRankInSegmentArray = function(e) {
                    for (var t = 0, n = 0; n < e.length; n++) {
                        var i = e[n].getLockRank();
                        i > t && (t = i)
                    }
                    return t
                },
                t.prototype.undoAction = function() {
                    return e.prototype.undoAction.call(this),
                        this.model.bigJunctions.remove(this.bigJunction)
                },
                t.prototype.redoAction = function() {
                    this.model.bigJunctions.put(this.bigJunction),
                        e.prototype.redoAction.call(this)
                },
                t.prototype.serialize = function() {
                    var e = this.attributes;
                    return e.id = this.bigJunction.getID(),
                        e.geometry = this.initialGeometry, {
                            _objectType: m.default.BIG_JUNCTION,
                            action: c.default.TYPE.ADD,
                            attributes: e
                        }
                },
                t.prototype.getFocusFeatures = function() {
                    return [this.bigJunction]
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.AddBigJunction")
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this.bigJunction.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t
        }(h.default);
    t.default = y
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(791)),
        s = i(n(102)),
        o = i(n(83)),
        a = i(n(792)),
        l = n(141),
        u = i(n(120)),
        c = i(n(26)),
        d = i(n(255)),
        h = i(n(794)),
        p = function() {
            function e(e, t) {
                this._dataModel = e,
                    this._actionManager = e.actionManager,
                    this._currentUser = t
            }
            return e.prototype._deleteSegments = function(e) {
                    this._actionManager.add(new a.default(e.map(function(e) {
                        return new o.default(e, {
                            userInitiated: !0
                        })
                    })))
                },
                e.prototype._deleteSegment = function(e) {
                    this._actionManager.add(new o.default(e, {
                        userInitiated: !0
                    }))
                },
                e.prototype._deleteBigJunction = function(e) {
                    this._actionManager.add(new r.default(e))
                },
                e.prototype._deleteObject = function(e) {
                    this._actionManager.add(new s.default(e))
                },
                e.prototype._deleteSingleFeature = function(e) {
                    e instanceof u.default ? new h.default(this._dataModel).deleteNode(e) : e instanceof l.BigJunction ? this._deleteBigJunction(e) : e instanceof c.default ? this._deleteSegment(e) : this._deleteObject(e)
                },
                e.prototype._allAreSegments = function(e) {
                    return e.every(function(e) {
                        return e instanceof c.default
                    })
                },
                e.prototype._deleteMultipleFeatures = function(e) {
                    this._allAreSegments(e) && this._deleteSegments(e)
                },
                e.prototype.deleteFeatures = function(e) {
                    new d.default(this._dataModel, this._currentUser).canDeleteFeatures(e) && (1 === e.length ? this._deleteSingleFeature(e[0]) : this._deleteMultipleFeatures(e))
                },
                e
        }();
    t.default = p
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(42)),
        s = function() {
            function e() {
                this.urlParams = OpenLayers.Util.getParameters(window.location.href, {
                    splitArgs: !0
                })
            }
            return e.prototype.getRegionCode = function() {
                    return this.getAsStringOrNull(r.URL_PARAM_REGION_CODE)
                },
                e.prototype.getAsStringOrNull = function(e) {
                    var t = this.getValueOrNull(e);
                    return Array.isArray(t) ? t[0] : t
                },
                e.prototype.getValueOrNull = function(e) {
                    var t = this.urlParams[e];
                    return null != t && "" !== t ? t : null
                },
                e
        }();
    t.default = s
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(797)),
        s = n(47),
        o = new r.default;
    t.startReportingUnhanldedErrors = function() {
            o.start(s.buildConfig.stackdriver);
            var e = window.onerror;
            window.onerror = function(t, n, i, r, s) {
                return null != e && e(t, n, i, r, s),
                    !1
            }
        },
        t.reportError = function(e) {
            o.report(e)
        }
}, function(e, t, n) {
    n(1138),
        e.exports = n(1100)
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(63),
        r = n.n(i),
        s = n(42);
    OL.Map.prototype.setLayerZIndex = function(e, t) {
        var n = e instanceof OpenLayers.Layer.Markers || e instanceof r.a;
        e.setZIndex(s.Z_INDEX_BASE[e.isBaseLayer ? "BaseLayer" : n ? "MarkerOverlay" : "Overlay"] + 5 * t)
    }
}, , , , , , , function(e, t, n) {
    var i = {
        "./Waze/MapEditor/UI/Components/WazeCheckbox.hamlc": 477,
        "./Waze/MapEditor/UI/Components/WazeToggleSwitch.hamlc": 478,
        "./Waze/MapEditor/UI/Map/Balloons/templates/map-balloon-confirm.hamlc": 479,
        "./Waze/MapEditor/UI/Map/MapControls/templates/LayersSwitcherButton.hamlc": 480,
        "./Waze/MapEditor/UI/Map/MapControls/templates/mouse_position.hamlc": 481,
        "./Waze/MapEditor/UI/Map/MapControls/templates/overlayButtons.hamlc": 482,
        "./Waze/MapEditor/UI/Map/MapControls/templates/permalink.hamlc": 483,
        "./Waze/MapEditor/UI/Map/MapControls/templates/reloadButton.hamlc": 484,
        "./Waze/MapEditor/UI/Map/MapControls/templates/zoombar.hamlc": 485,
        "./Waze/MapEditor/UI/Map/templates/location-message.hamlc": 486,
        "./Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-item.hamlc": 487,
        "./Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-layout.hamlc": 488,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/action-view.hamlc": 489,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/changes-log-view.hamlc": 490,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/group-view.hamlc": 491,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-list-view.hamlc": 492,
        "./Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-view.hamlc": 493,
        "./Waze/MapEditor/UI/Modules/Chat/View/chat.hamlc": 494,
        "./Waze/MapEditor/UI/Modules/Chat/View/chat_message.hamlc": 495,
        "./Waze/MapEditor/UI/Modules/Chat/View/chat_user.hamlc": 496,
        "./Waze/MapEditor/UI/Modules/Cities/templates/feature_editor.hamlc": 497,
        "./Waze/MapEditor/UI/Modules/Closures/templates/closure-node-item-view.hamlc": 498,
        "./Waze/MapEditor/UI/Modules/Closures/templates/edit.hamlc": 499,
        "./Waze/MapEditor/UI/Modules/Closures/templates/item.hamlc": 500,
        "./Waze/MapEditor/UI/Modules/Closures/templates/layout.hamlc": 501,
        "./Waze/MapEditor/UI/Modules/Closures/templates/list.hamlc": 502,
        "./Waze/MapEditor/UI/Modules/Comments/templates/feature_editor.hamlc": 503,
        "./Waze/MapEditor/UI/Modules/Comments/templates/name_editor.hamlc": 504,
        "./Waze/MapEditor/UI/Modules/Conversation/templates/item.hamlc": 505,
        "./Waze/MapEditor/UI/Modules/Conversation/templates/list.hamlc": 506,
        "./Waze/MapEditor/UI/Modules/Conversation/templates/text.hamlc": 507,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/history_main.hamlc": 508,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_item.hamlc": 509,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_main.hamlc": 510,
        "./Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_related.hamlc": 511,
        "./Waze/MapEditor/UI/Modules/Feed/templates/feed.hamlc": 512,
        "./Waze/MapEditor/UI/Modules/Feed/templates/feed_group.hamlc": 513,
        "./Waze/MapEditor/UI/Modules/Feed/templates/issue_item.hamlc": 514,
        "./Waze/MapEditor/UI/Modules/Feed/templates/message_item.hamlc": 515,
        "./Waze/MapEditor/UI/Modules/Feed/templates/notification_detail.hamlc": 516,
        "./Waze/MapEditor/UI/Modules/Feed/templates/notification_item.hamlc": 517,
        "./Waze/MapEditor/UI/Modules/GeoLocation/templates/pan_button.hamlc": 518,
        "./Waze/MapEditor/UI/Modules/HouseNumbers/templates/house-numbers-lightbox.hamlc": 519,
        "./Waze/MapEditor/UI/Modules/HouseNumbers/templates/house-numbers-marker-tooltip.hamlc": 520,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes.hamlc": 521,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes_edit.hamlc": 522,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/lane_arrow.hamlc": 523,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/segment_lanes.hamlc": 524,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/turn_lane_checkbox.hamlc": 525,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/turn_lanes_edit.hamlc": 526,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/turn_override.hamlc": 527,
        "./Waze/MapEditor/UI/Modules/Lanes/templates/turn_override_option.hamlc": 528,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/checkbox.hamlc": 529,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layer-switcher.hamlc": 530,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layout.hamlc": 531,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/toggleSwitch.hamlc": 532,
        "./Waze/MapEditor/UI/Modules/LayerSwitcher/templates/togglers-tree.hamlc": 533,
        "./Waze/MapEditor/UI/Modules/Login/templates/email_verification.hamlc": 534,
        "./Waze/MapEditor/UI/Modules/Login/templates/login_main.hamlc": 535,
        "./Waze/MapEditor/UI/Modules/Login/templates/login_view.hamlc": 536,
        "./Waze/MapEditor/UI/Modules/Login/templates/session_expired.hamlc": 537,
        "./Waze/MapEditor/UI/Modules/MTE/templates/contributors/item.hamlc": 538,
        "./Waze/MapEditor/UI/Modules/MTE/templates/contributors/list.hamlc": 539,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/closures.hamlc": 540,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/loading.hamlc": 541,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/names.hamlc": 542,
        "./Waze/MapEditor/UI/Modules/MTE/templates/item_edit/twitter_urls.hamlc": 543,
        "./Waze/MapEditor/UI/Modules/MTE/templates/mte_edit_view.hamlc": 544,
        "./Waze/MapEditor/UI/Modules/MTE/templates/mte_item_view.hamlc": 545,
        "./Waze/MapEditor/UI/Modules/MTE/templates/mte_list.hamlc": 546,
        "./Waze/MapEditor/UI/Modules/MTE/templates/sidebar.hamlc": 547,
        "./Waze/MapEditor/UI/Modules/MTE/templates/toolbar_buttons.hamlc": 548,
        "./Waze/MapEditor/UI/Modules/MTE/templates/topbar.hamlc": 549,
        "./Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/edit.hamlc": 550,
        "./Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/item.hamlc": 551,
        "./Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/layout.hamlc": 552,
        "./Waze/MapEditor/UI/Modules/Problems/templates/_navigation.hamlc": 553,
        "./Waze/MapEditor/UI/Modules/Problems/templates/closure_description.hamlc": 554,
        "./Waze/MapEditor/UI/Modules/Problems/templates/edit.hamlc": 555,
        "./Waze/MapEditor/UI/Modules/RegionSwitcher/templates/region-switcher.hamlc": 556,
        "./Waze/MapEditor/UI/Modules/RestrictedDrivingAreas/templates/popover-restriction-item.hamlc": 557,
        "./Waze/MapEditor/UI/Modules/RestrictedDrivingAreas/templates/restricted-driving-area-marker-popover.hamlc": 558,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_blocked_edit.hamlc": 559,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_edit.hamlc": 560,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/drive_profile_free_item.hamlc": 561,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit.hamlc": 562,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_segment.hamlc": 563,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restriction_edit_validation.hamlc": 564,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_driving_segments.hamlc": 565,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_list_item.hamlc": 566,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main.hamlc": 567,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_pickup.hamlc": 568,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_driving_area.hamlc": 569,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_segments.hamlc": 570,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table.hamlc": 571,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_turn.hamlc": 572,
        "./Waze/MapEditor/UI/Modules/Restrictions/templates/timeframe_edit.hamlc": 573,
        "./Waze/MapEditor/UI/Modules/Save/templates/error_item.hamlc": 574,
        "./Waze/MapEditor/UI/Modules/Save/templates/error_list.hamlc": 575,
        "./Waze/MapEditor/UI/Modules/Save/templates/success.hamlc": 576,
        "./Waze/MapEditor/UI/Modules/Sidebar/templates/advanced-tools.hamlc": 577,
        "./Waze/MapEditor/UI/Modules/StreetView/templates/street-view-button.hamlc": 578,
        "./Waze/MapEditor/UI/Modules/StreetView/templates/street-view.hamlc": 579,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/mode-switcher.hamlc": 580,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/save.hamlc": 581,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/search-empty-view.hamlc": 582,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/search-result-item.hamlc": 583,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/search.hamlc": 584,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-group.hamlc": 585,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-tooltip.hamlc": 586,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item.hamlc": 587,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar.hamlc": 588,
        "./Waze/MapEditor/UI/Modules/Toolbar/templates/user-box.hamlc": 589,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/layout.hamlc": 590,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/loading-indicator.hamlc": 591,
        "./Waze/MapEditor/UI/Modules/Topbar/templates/location-info.hamlc": 592,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/description_selection_view.hamlc": 593,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/external_providers_view.hamlc": 594,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/image_item_view.hamlc": 595,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/images_selection_view.hamlc": 596,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/layout.hamlc": 597,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/main_selection_view.hamlc": 598,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/multi_selection_view.hamlc": 599,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/single_selection_view.hamlc": 600,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/landmark-item-view.hamlc": 601,
        "./Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/merge-venues.hamlc": 602,
        "./templates/add_update_details.hamlc": 603,
        "./templates/additional_details.hamlc": 604,
        "./templates/address/alt-street.hamlc": 605,
        "./templates/address/edit-alt-street.hamlc": 606,
        "./templates/address/edit.hamlc": 607,
        "./templates/archive-panel.hamlc": 608,
        "./templates/archive-sessions.hamlc": 609,
        "./templates/big-junction-edit.hamlc": 610,
        "./templates/camera-edit.hamlc": 611,
        "./templates/chrome_autofill_off.hamlc": 612,
        "./templates/editable-areas.hamlc": 613,
        "./templates/focus-buttons.hamlc": 614,
        "./templates/house-number.hamlc": 615,
        "./templates/instruction-override.hamlc": 616,
        "./templates/keyboard_shortcuts/list.hamlc": 617,
        "./templates/keyboard_shortcuts/modal.hamlc": 618,
        "./templates/lock/edit.hamlc": 619,
        "./templates/login/sandbox-message.hamlc": 620,
        "./templates/map.hamlc": 621,
        "./templates/node-edit.hamlc": 622,
        "./templates/opening_hours/add.hamlc": 623,
        "./templates/opening_hours/item.hamlc": 624,
        "./templates/opening_hours/layout.hamlc": 625,
        "./templates/place_updates/actions.hamlc": 626,
        "./templates/place_updates/add_details.hamlc": 627,
        "./templates/place_updates/add_image.hamlc": 628,
        "./templates/place_updates/add_venue.hamlc": 629,
        "./templates/place_updates/changed_field.hamlc": 630,
        "./templates/place_updates/changed_field_item.hamlc": 631,
        "./templates/place_updates/changed_field_parking_lot.hamlc": 632,
        "./templates/place_updates/delete_venue.hamlc": 633,
        "./templates/place_updates/external_provider/item.hamlc": 634,
        "./templates/place_updates/external_provider/list.hamlc": 635,
        "./templates/place_updates/flag.hamlc": 636,
        "./templates/place_updates/image.hamlc": 637,
        "./templates/place_updates/image_dialog.hamlc": 638,
        "./templates/place_updates/item.hamlc": 639,
        "./templates/place_updates/layout.hamlc": 640,
        "./templates/place_updates/panel_header.hamlc": 641,
        "./templates/place_updates/place_details.hamlc": 642,
        "./templates/place_updates/update_venue.hamlc": 643,
        "./templates/prefs-panel.hamlc": 644,
        "./templates/restricted_driving_area/restricted-driving-area-edit.hamlc": 645,
        "./templates/segment/average-speed-camera.hamlc": 646,
        "./templates/segment/edit-panel-attributes-form.hamlc": 647,
        "./templates/segment/edit-panel.hamlc": 648,
        "./templates/segment/flag-attribute.hamlc": 649,
        "./templates/segment/junction-exit-layout.hamlc": 650,
        "./templates/segment/junction-exit.hamlc": 651,
        "./templates/segment/routing.hamlc": 652,
        "./templates/segment/speed-limit.hamlc": 653,
        "./templates/segment/tts-playback-popover.hamlc": 654,
        "./templates/segment/tts-playback.hamlc": 655,
        "./templates/sidebar/links.hamlc": 656,
        "./templates/sidebar/sidebar.hamlc": 657,
        "./templates/sidebar/user-info.hamlc": 658,
        "./templates/sidebar/user-permissions-tooltip.hamlc": 659,
        "./templates/sidebar/user-sandbox.hamlc": 660,
        "./templates/snapshot-message.hamlc": 661,
        "./templates/snapshot-toggler.hamlc": 662,
        "./templates/tips/watch-tutorial.hamlc": 663,
        "./templates/turn-arrow-tooltip-timeframes.hamlc": 665,
        "./templates/turn-arrow-tooltip.hamlc": 666,
        "./templates/turn-arrow.hamlc": 667,
        "./templates/tutorial-lightbox.hamlc": 668,
        "./templates/user-greeting.hamlc": 669,
        "./templates/util/day-checkboxes.hamlc": 670,
        "./templates/util/toggle-checkboxes.hamlc": 671,
        "./templates/venue/alias.hamlc": 672,
        "./templates/venue/aliases-layout.hamlc": 673,
        "./templates/venue/category-tag.hamlc": 674,
        "./templates/venue/external-provider/item.hamlc": 675,
        "./templates/venue/external-provider/list.hamlc": 676,
        "./templates/venue/venue-categories.hamlc": 677,
        "./templates/venue/venue-edit-general.hamlc": 678,
        "./templates/venue/venue-edit-image.hamlc": 679,
        "./templates/venue/venue-edit-more-info-contact.hamlc": 680,
        "./templates/venue/venue-edit-more-info-parking-lot.hamlc": 681,
        "./templates/venue/venue-edit-more-info-services.hamlc": 682,
        "./templates/venue/venue-edit-more-info.hamlc": 683,
        "./templates/venue/venue-edit-no-images.hamlc": 684,
        "./templates/venue/venue-edit.hamlc": 685
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 476
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["wz-checkbox", "" + t(e(this.class))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='toggle' id='" + t(e(this.id)) + "' type='checkbox'>\n<label for='" + t(e(this.id)) + "'>"),
                            n.push("" + t(e(this.label))),
                            n.push("</label>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<span class='wz-toggle-switch'>\n<label class='wz-switch'>\n<input class='" + ["toggleSwitch", "" + t(e(this.class))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' id='" + t(e(this.id)) + "' type='checkbox'>\n<span class='wz-slider'></span>\n</label>\n</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='map-balloon-confirm'>\n<div class='title'>" + t(e(this.title)) + "</div>\n<p class='content'>" + t(e(this.content)) + "</p>\n<div class='controls-container'>\n<div class='dont-show-again-container'>\n<input class='checkbox-large' id='dont-show-again' type='checkbox' name='dont-show-again'>\n<label class='dont-show-again-label' for='dont-show-again'>" + t(e(this.t("edit.dont_show_again"))) + "</label>\n</div>\n<button class='apply-button waze-btn waze-btn-blue waze-btn-small'>" + t(e(this.t("edit.apply"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='layers-switcher-button overlay-button'>\n<i class='w-icon-layers'></i>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<span class='mouse-position' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>00.00000 00.00000</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div id='overlay-buttons'>\n<div class='overlay-buttons-container top'>\n<div class='layers-switcher-region'></div>\n<div class='reload-button-region'></div>\n</div>\n<div class='bottom overlay-buttons-container'>\n<div class='street-view-region'></div>\n<div class='geo-location-region'></div>\n<div class='zoom-bar-region'></div>\n</div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<a class='livemap-link' target='_blank' rel='noopener noreferrer'>\n<div class='icon'></div>\n</a>\n<a class='permalink' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>\n<div class='icon'></div>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='overlay-button'>\n<div class='w-icon-refresh'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='zoom-bar-container'>\n<div class='overlay-button zoom-button zoom-plus-button'>\n<i class='w-icon-plus'></i>\n</div>\n<div class='overlay-button zoom-button zoom-minus-button'>\n<i class='w-icon-minus'></i>\n</div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='footer-message location-message'>\nData for this location is on a different server environment,\n<a data-env='" + t(e(this.otherEnv)) + "' href='#'>switch now</a>\n<button class='close'>×</button>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='entry'>\n<i class='arrow fa fa-arrow-circle-right'></i>\n<span class='street-name'>" + t(e(this.streetName)) + "</span>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + t(e(this.t("edit.big_junction.entries") + ":"))),
                            n.push("<div class='list'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='left-side'>\n<div class='dot-container'>\n<div class='tooltip-item undo-tooltip' title='" + t(e(this.t("save.changes_log.undo_item"))) + "' data-toggle='tooltip' data-container='body'></div>\n<div class='redo-tooltip tooltip-item' title='" + t(e(this.t("save.changes_log.redo_item"))) + "' data-toggle='tooltip' data-container='body'></div>\n<div class='dot'></div>\n</div>\n<div class='line'></div>\n</div>\n<div class='right-side'>\n<div class='title'></div>\n<div class='ids-region'></div>\n<div class='timestamp'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='header'>\n<div class='title'></div>\n</div>\n<div class='sandbox-mode-notice'>\n<i class='fa fa-lock'></i>"),
                            n.push("" + t(e(this.t("save.changes_log.sandbox_notice")))),
                            n.push("</div>\n<div class='groups-list-region'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='actions'>\n<div class='action-button tooltip-item undo-all' title='" + t(e(this.t("save.changes_log.undo_all"))) + "' data-toggle='tooltip' data-container='body'></div>\n<div class='action-button redo-all tooltip-item' title='" + t(e(this.t("save.changes_log.redo_all"))) + "' data-toggle='tooltip' data-container='body'></div>\n</div>\n<div class='actions-items-list-region'></div>\n<div class='save-error-actions-region'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='error-list-container'>\n<div class='list-region'></div>\n<div class='error-actions'>\n<div class='save-and-ignore waze-btn waze-btn-blue waze-btn-smaller'>\n<span class='button-text'>"),
                            n.push("" + t(e(this.t("save.changes_log.ignore")))),
                            n.push("</span>\n<span class='loading'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='title-container'>\n<div class='title'></div>\n<a class='focus pan-button'>\n<i class='fa fa-crosshairs'></i>\n</a>\n</div>\n<div class='solution'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='chat-toggle'>\n<button class='toggle'></button>\n</div>\n<div id='chat'>\n<div class='header'>\n<span class='room-name single-room-label'></span>\n<div class='dropdown room-selector'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='room-name'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu rooms'></ul>\n</div>\n<div class='dropdown visibilty-menu'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='status'>" + t(e(this.status)) + "</span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu visibility'>\n<li class='visibility-visible'>\n<a href='#'>" + t(e(this.t("chat.visible"))) + "</a>\n</li>\n<li class='visibility-invisible'>\n<a href='#'>" + t(e(this.t("chat.invisible"))) + "</a>\n</li>\n</ul>\n</div>\n<button class='minimize' aria-hidden='true' type='button'>_</button>\n</div>\n<div class='not-connected-message'>Not Connected</div>\n<div class='chat-body'>\n<div class='messages'>\n<div class='message-list'></div>\n<a class='unread-messages-notification' href='#'></a>\n<div class='new-message'>\n<input class='message-input' placeholder='" + t(e(this.t("chat.placeholder"))) + "' data-auto-rtl>\n</div>\n</div>\n<div class='users'>\n<ul class='list-unstyled user-list'></ul>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='from'>" + t(e(this.from.name)) + "</div>\n<div class='body'>"),
                            i = 0,
                            r = (o = this.body.split("\n")).length; i < r; i++)
                            s = o[i],
                            n.push("<div>" + t(e(s)) + "</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<a class='" + ["user", "" + t(e(this.className))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#' data-id='" + t(e(this.id)) + "'>\n<div class='rank'>"),
                            this.rank < 6 ? n.push("" + t(e(this.rank + 1))) : n.push("&nbsp;"),
                            n.push("</div>\n<i class='crosshair fa fa-crosshairs'></i>\n<div class='username'>" + t(e(this.name)) + "</div>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='city-feature-editor'>\n<div class='feature-editor-header'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.city.title"))) + "</span>\n</div>\n<div class='preview'>\n<span class='city-name'>\n<span class='city-name-text'></span>\n</span>\n<a class='edit-button'>\n<i class='waze-icon-edit'></i>\n</a>\n</div>\n</div>\n<form class='attributes-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("edit.address.city")))),
                            n.push("</label>\n<div class='controls'>\n<input class='city-name form-control' type='text' autocomplete='off'>\n</div>\n</div>\n<div class='action-buttons'>\n<button class='save-button waze-btn waze-btn-blue waze-btn-smaller' type='button'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n<div class='loading waze-loader-sm'></div>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            "Waze/MapEditor/UI/Components/WazeToggleSwitch",
                            (n = []).push("<div class='closure-node-control' data-node-id='" + t(e(this.nodeId)) + "'>\n<label class='label-text' for='" + t(e("fromNodeClosed_" + this.nodeId)) + "'>" + t(e(this.label)) + "</label>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Components/WazeToggleSwitch", {
                                id: "fromNodeClosed_" + this.nodeId,
                                class: "fromNodeClosed"
                            }))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["edit-closure", "" + t(e(this.newClosure ? "new" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<form class='form' action='#' method='post'>\n<div class='form-group'>\n<label class='control-label' for='closure_reason'>" + t(e(this.t("closures.fields.reason"))) + "</label>\n<div class='controls'>\n<input class='form-control' type='text' name='closure_reason'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_direction'>" + t(e(this.t("closures.fields.direction"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='closure_direction'></select>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_startDate'>" + t(e(this.t("closures.fields.startDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='form-control start-date' type='text' name='closure_startDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text' name='closure_startTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_endDate'>" + t(e(this.t("closures.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='end-date form-control' type='text' name='closure_endDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' name='closure_endTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>"),
                            this.canEditMTE && (n.push("<div class='form-group'>\n<label class='control-label control-label-inline' for='closure_eventId'>" + t(e(this.t("closures.fields.event"))) + "</label>\n<i class='mte-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.mte"))) + "'></i>\n<div class='controls'>\n<div class='mte-message mte-message-empty'>"),
                                n.push("" + t(e(this.t("closures.no_events_empty_dates")))),
                                n.push("</div>\n<select class='form-control' name='closure_eventId' required='" + t(e(this.newClosure)) + "'></select>\n</div>\n</div>")),
                            n.push("<div class='checkbox controls-container'>\n<input id='closure-permanent-checkbox' type='checkbox' name='closure_permanent'>\n<label class='control-label-inline' for='closure-permanent-checkbox'>" + t(e(this.t("closures.fields.permanent"))) + "</label>\n<i class='permanent-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.permanent"))) + "'></i>\n</div>"),
                            this.isNodeClosureEnabled() && n.push("<div class='closure-nodes form-group'>\n<label class='control-label' for='fromNodeClosed'>" + t(e(this.t("closures.fields.fromNodeClosed"))) + "</label>\n<div class='closure-nodes-region controls'></div>\n</div>"),
                            n.push("<input type='submit' style='display: none;'>\n<ul class='additional-attributes list-unstyled'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this.closures[0]))),
                            null != this.getProvider() && n.push("<li>" + t(e(this.t("closures.fields.provider", {
                                provider: this.getProvider()
                            }))) + "</li>"),
                            n.push("</ul>\n<div class='message' style='display: none'></div>\n<div class='action-buttons'>\n<div class='save-button wz-button'>"),
                            this.newClosure ? n.push("" + t(e(this.t("edit.add")))) : n.push("" + t(e(this.t("toolbar.save.title")))),
                            n.push("</div>\n<div class='cancel-button is-secondary wz-button'>"),
                            n.push("" + t(e(this.t("edit.cancel")))),
                            n.push("</div>\n</div>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='closure-title section'>"),
                            n.push("" + t(e(this.reason))),
                            this.canEdit && (n.push("<div class='buttons'>"),
                                this.showLocateButton && n.push("<a class='locate'>\n<i class='waze-icon-crosshair'></i>\n</a>"),
                                this.showApplyToAll && n.push("<a class='apply-to-all is-secondary is-small wz-button' href='#'>" + t(e(this.t("closures.apply_to_all"))) + "</a>"),
                                n.push("<a class='delete'>\n<i class='waze-icon-trash'></i>\n</a>\n</div>")),
                            n.push("</div>\n<div class='details section'>\n<div class='direction'>"),
                            this.direction === this.DIRECTION.A_TO_B ? n.push("<div class='dir-icon dir-icon-a'>A</div>\n<div class='dir-sep'></div>\n<div class='dir-icon dir-icon-b'>B</div>") : this.direction === this.DIRECTION.B_TO_A ? n.push("<div class='dir-icon dir-icon-b'>B</div>\n<div class='dir-sep'></div>\n<div class='dir-icon dir-icon-a'>A</div>") : (n.push("<div class='dir-label span'>"),
                                n.push("" + t(e(this.t("segment.direction.label." + this.direction)))),
                                n.push("</div>")),
                            n.push("</div>\n<div class='dates'>\n<div class='start-date'>"),
                            this.isStartDateSet ? n.push("<div class='date'>" + t(e(this.formatDate(this.startDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.startDate))) + "</div>") : n.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            n.push("</div>\n<div class='date-separator'>\n-\n</div>\n<div class='end-date'>"),
                            this.isEndDateSet ? n.push("<div class='date'>" + t(e(this.formatDate(this.endDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.endDate))) + "</div>") : n.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            n.push("</div>\n</div>\n</div>"),
                            (this.eventName || this.description) && (n.push("<div class='bottom'>"),
                                this.eventName && (n.push("<div class='event-name'>\n<i class='waze-icon-event'></i>"),
                                    n.push("" + e(this.eventName)),
                                    n.push("</div>")),
                                this.description && n.push("<div class='description'>" + t(e(this.description)) + "</div>"),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='main'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.canEdit && this.canAdd || !this.showSaveMessage ? this.showActivateRepoMessage ? n.push("<div class='alert alert-danger'>" + t(e(this.t("closures.enable_layer"))) + "</div>") : !this.canEdit && this.canAdd && n.push("<div class='alert alert-danger'>" + t(e(this.t("closures.lock_message", {
                                lockLevel: this.h.formatRank(this.lockLevel)
                            }))) + "</div>") : n.push("<div class='alert alert-gray'>" + t(e(this.t("closures.save_your_changes"))) + "</div>"),
                            n.push("<ul class='full-closures list-unstyled'></ul>"),
                            this.showPartialClosuresHeader && n.push("<div class='partial-closures-header' style='display: none;'>" + t(e(this.t("closures.partial_header"))) + "</div>"),
                            n.push("<ul class='list-unstyled partial-closures'></ul>\n<div class='message' style='display: none'></div>"),
                            this.canEdit && this.canAdd && (n.push("<button class='add-closure-button is-expanded wz-button'>"),
                                n.push("" + t(e(this.t("closures.add")))),
                                n.push("</button>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.map_comment.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane'></div>\n<div class='name-editor-region'></div>\n<div class='conversation-region'></div>\n<form class='attributes-form side-panel-section'>\n<div class='new-comment-form'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control new-subject-input' type='text' name='subject'>\n<div class='input-max-length new-subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='form-control new-body-input' name='body'></textarea>\n<div class='input-max-length new-body-max-length'></div>\n</div>\n</div>\n</div>\n<div class='lock-edit-region'></div>\n<div class='end-date-form-group form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<span class='input-group-addon'>\n<input class='no-end-date' type='checkbox'>\n</span>\n<input class='end-date form-control' type='text' placeholder='" + t(e(this.t("edit.placeholder.date"))) + "'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' placeholder='" + t(e(this.t("edit.placeholder.time"))) + "'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='clear-btn'>" + t(e(this.t("edit.map_comment.clear"))) + "</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.type"))) + "</label>\n<div class='controls'>\n<div class='btn-group' data-toggle='buttons'>\n<label class='btn btn-default point-btn'>\n<input type='radio' name='isPoint' value='true'>"),
                            n.push("" + t(e(this.t("edit.map_comment.type.point")))),
                            n.push("</label>\n<label class='area-btn btn btn-default'>\n<input type='radio' name='isPoint' value='false'>"),
                            n.push("" + t(e(this.t("edit.map_comment.type.area")))),
                            n.push("</label>\n</div>\n</div>\n</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li class='feature-id'></li>\n</ul>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='preview'>\n<div class='subject-preview'></div>\n<div class='reported-date'>"),
                            n.push("" + t(e(this.createdDate))),
                            n.push("</div>\n<div class='body-preview'></div>\n</div>\n<form class='edit'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control subject-input' type='text'>\n<div class='input-max-length subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='body-textarea form-control'></textarea>\n<div class='body-max-length input-max-length'></div>\n</div>\n</div>\n<button class='apply-button waze-btn waze-btn-blue waze-btn-smaller' type='submit'>"),
                            n.push("" + t(e(this.t("edit.map_comment.name_edit.apply")))),
                            n.push("</button>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["comment-content", "" + t(e(this.isByReporter() ? "reporter" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='comment-title'>\n<span class='username'>" + t(e(this.getUserName())) + "</span>\n<span class='date'>" + t(e(I18n.l("date.formats.long", this.createdOn))) + "</span>\n</div>\n<div class='text'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='no-comments'>"),
                            n.push("" + t(e(this.t("conversation.no_comments")))),
                            n.push("<br>"),
                            n.push("" + t(e(this.t("conversation.ask")))),
                            n.push("</div>\n<ul class='comment-list list-unstyled'></ul>\n<form class='clearfix new-comment-form'>\n<div class='controls-container'>\n<textarea class='form-control new-comment-text' placeholder='" + t(e(this.t("conversation.enter"))) + "' required></textarea>\n<div class='input-max-length new-comment-max-length'></div>\n<button class='send-button waze-btn waze-btn-blue' type='submit'>" + t(e(this.t("conversation.send"))) + "</button>"),
                            n.push("" + e(this.h.checkbox(this.t("conversation.follow"), "follow", "on"))),
                            n.push("</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.isHref)
                            n.push("<a href='" + t(e(this.text)) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.text)) + "</a>");
                        else
                            for (r = i = 0,
                                s = (a = this.getCommentLines()).length; i < s; r = ++i)
                                o = a[r],
                                n.push("" + t(e(o))),
                                r < this.getCommentNumber() - 1 && n.push("<br>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='elementHistoryContainer'>\n<div class='toggleHistory'>\n<div class='showHistory'>"),
                            n.push("" + t(e(this.t("element_history.show")))),
                            n.push("</div>\n<div class='hideHistory'>"),
                            n.push("" + t(e(this.t("element_history.hide")))),
                            n.push("</div>\n</div>\n<div class='historyContent'>\n<div class='history-message historyEmpty'>"),
                            n.push("" + t(e(this.t("element_history.no_history")))),
                            n.push("</div>\n<div class='transactions'></div>\n<div class='loadingHistory'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='loadMoreContainer'>\n<div class='btn btn-block btn-default loadMoreHistory'>"),
                            n.push("" + t(e(this.t("element_history.load_more")))),
                            n.push("</div>\n</div>\n<div class='history-message historyError'>"),
                            n.push("" + t(e(this.t("element_history.history_error")))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='tx-header'>\n<div class='tx-summary'>\n<div class='tx-author-date'>"),
                            n.push("" + t(e(this.h.dateOnlyString(this.date)))),
                            n.push("" + t(e(this.t("element_history.changed_by")))),
                            n.push("" + e(this.userProfile)),
                            n.push("</div>\n<div class='tx-preview'>"),
                            this.mainObjectAction && (n.push("<div>"),
                                n.push("" + t(e(this.mainObjectAction))),
                                n.push("</div>")),
                            this.previewItems && (n.push("<div>"),
                                n.push("" + t(e(this.previewItems))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='flex-noshrink tx-toggle-closed'></div>\n</div>\n<div class='tx-content'>\n<div class='main-object-region tx-changes'></div>\n<div class='related-objects-region tx-changes'></div>"),
                            this.previewItems || (n.push("<div class='no-changed-attributes'>"),
                                n.push("" + t(e(this.t("element_history.no_changed_attributes")))),
                                n.push("</div>")),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            r = 0,
                            s = (o = this.changedAttributes).length; r < s; r++)
                            i = o[r],
                            n.push("<li class='" + ["tx-changed-attribute", "" + t(e(i.isVisual ? "ca-visual" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='ca-name'>"),
                            n.push("" + t(e(i.displayName))),
                            n.push("</div>\n<div class='" + ["ca-preview", "ca-" + t(e(i.name))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            i.oldValue && i.newValue ? (n.push("" + t(e(this.t("element_history.changed_from")))),
                                n.push("<span class='ca-value ca-value-old'>"),
                                i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : n.push("" + t(e(i.oldValue))),
                                n.push("</span>\n<span>"),
                                n.push("" + t(e(this.t("element_history.changed_to")))),
                                n.push("</span>\n<span class='ca-value ca-value-new'>"),
                                i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : n.push("" + t(e(i.newValue))),
                                n.push("</span>")) : (i.oldValue && (n.push("<span class='ca-value ca-value-old'>"),
                                    i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : n.push("" + t(e(i.oldValue))),
                                    n.push("</span>\n<span>"),
                                    n.push("" + t(e(this.t("element_history.actions.default.DELETE")))),
                                    n.push("</span>")),
                                i.newValue && (n.push("<span class='ca-value ca-value-new'>"),
                                    i.isVisual ? n.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : n.push("" + t(e(i.newValue))),
                                    n.push("</span>\n<span>"),
                                    n.push("" + t(e(this.t("element_history.actions.default.ADD")))),
                                    n.push("</span>"))),
                            n.push("</div>\n</li>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<span class='ro-name'>"),
                            n.push("" + t(e(this.displayName))),
                            n.push("</span>\n<span class='ro-value'>"),
                            n.push("" + t(e(this.displayValue))),
                            n.push("</span>\n<span class='ro-action'>"),
                            n.push("" + t(e(this.actionText))),
                            n.push("</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='feed-content'>\n<div class='feed-first-time-messages'></div>\n<div class='feed-mentoring'></div>\n<div class='feed-notifications'></div>\n<div class='feed-messages'></div>\n<div class='feed-issues'></div>\n</div>\n<div class='feed-load-section'>\n<div class='feed-loading sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='feed-empty'>\n<div class='feed-empty-message'>"),
                            n.push("" + t(e(this.t("feed.empty")))),
                            n.push("</div>\n<div class='feed-empty-image'></div>\n</div>\n<div class='feed-more'>\n<div class='feed-load-more waze-btn waze-btn-small waze-btn-white'>"),
                            n.push("" + t(e(this.t("feed.load_more")))),
                            n.push("</div>\n<div class='feed-loading-more sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n</div>\n<div class='feed-first-time-load'>\n<div class='feed-loading-text-container'>\n<div class='feed-loading-first-time-text'>" + t(e(this.t("feed.load_first_time"))) + "</div>\n<div class='dots-animation'></div>\n</div>\n<div class='feed-loading-first sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='toggle'>\n<a class='counter' href='#'></a>\n<span class='icon-toggle'></span>\n</div>\n<ul class='feed-list'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='inner'>\n<div class='delete'></div>\n<div class='icon_container'>\n<div class='icon'></div>\n</div>\n<div class='save-alert'></div>\n<div class='content'>\n<div class='title'>\n<span class='type'>" + t(e(this.type)) + "</span>\n<span class='timestamp'>"),
                            n.push("      " + t(e(this.timestamp))),
                            n.push("</span>\n</div>\n<div class='subtext'>"),
                            n.push("" + t(e(this.address))),
                            n.push("</div>"),
                            this.motivation && (n.push("<div class='motivation'>"),
                                n.push("" + t(e(this.motivation))),
                                n.push("</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='inner'>\n<div class='delete'></div>\n<div class='image'></div>\n<div class='content'>\n<div class='title'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>\n<div class='from'>"),
                            n.push("" + t(e(this.t("feed.messages.from")))),
                            n.push("<div class='sender'>"),
                            n.push("" + t(e(this.sender))),
                            n.push("</div>\n</div>\n<div class='timestamp'>"),
                            n.push("    " + t(e(this.timestamp))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='header'>\n<div class='buttons'>\n<div class='close-panel'></div>\n<div class='delete'></div>\n</div>\n<div class='title'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>\n<div class='timestamp'>"),
                            n.push("" + t(e(this.timestamp))),
                            n.push("</div>\n</div>\n<div class='body'>"),
                            this.imageURL && n.push("<section class='image'>\n<img src='" + t(e(this.imageURL)) + "'>\n</section>"),
                            this.subject && n.push("<section class='heading'>\n<h2>" + t(e(this.subject)) + "</h2>\n</section>"),
                            this.sender && (n.push("<section class='sender'>"),
                                n.push("" + t(e(this.t("feed.messages.from")))),
                                n.push("<a href='" + t(e(this.senderURL)) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.sender)) + "</a>\n</section>")),
                            n.push("<section class='content'>"),
                            n.push("" + t(e(this.message))),
                            n.push("</section>"),
                            this.linkText && n.push("<section class='link'>\n<a href='" + t(e(this.linkURL)) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.linkText)) + "</a>\n</section>"),
                            n.push("</div>\n<div class='footer'>\n<section class='buttons'>"),
                            this.buttonText && (n.push("<a class='waze-plain-btn' href='" + t(e(this.buttonURL)) + "' target='_blank' rel='noopener noreferrer'>"),
                                n.push("" + t(e(this.buttonText))),
                                n.push("</a>")),
                            this.secondButtonText && (n.push("<a class='waze-plain-btn' href='" + t(e(this.secondButtonURL)) + "' target='_blank' rel='noopener noreferrer'>"),
                                n.push("" + t(e(this.secondButtonText))),
                                n.push("</a>")),
                            this.hasNext ? (n.push("<div class='next waze-plain-btn'>"),
                                n.push("" + t(e(this.t("feed.details.next")))),
                                n.push("</div>")) : (n.push("<div class='done waze-plain-btn'>"),
                                n.push("" + t(e(this.t("feed.details.done")))),
                                n.push("</div>")),
                            n.push("</section>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='inner'>\n<div class='delete'></div>\n<div class='image_container'>\n<div class='image'></div>\n</div>\n<div class='content'>\n<div class='title'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>\n<div class='subtext'>"),
                            n.push("" + t(e(this.shortMessage))),
                            n.push("</div>\n<div class='timestamp'>"),
                            n.push("    " + t(e(this.timestamp))),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='geo-location-control overlay-button'>\n<i class='js-recenter w-icon-recenter'></i>\n<i class='fa fa-spin fa-spinner js-loading'></i>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='content'>\n<div class='header'>\n<div class='title'></div>\n<div class='loading-animation'></div>\n</div>\n<div class='success-message'>" + t(e(this.t("edit.house_numbers.save.success"))) + "</div>\n<div class='error-message'>"),
                            n.push("" + t(e(this.t("edit.house_numbers.loading_error")))),
                            n.push("</div>\n<div class='save-error-message'>"),
                            n.push("" + t(e(this.t("edit.house_numbers.save.error")))),
                            n.push("<br>\n<button class='continue-editing waze-btn waze-btn-smaller waze-btn-white'>"),
                            n.push("" + t(e(this.t("edit.house_numbers.save.continue")))),
                            n.push("</button>\n</div>\n<div class='zoom-message'>" + t(e(this.t("edit.house_numbers.zoom_to_edit"))) + "</div>\n<div class='last-edited'>\n<span class='last-edited-name'></span>\n</div>\n<div class='force-message'>\n<div class='invalid-message'>"),
                            n.push("" + t(e(this.t("edit.house_numbers.save.invalid")))),
                            n.push("</div>\n<div class='force-action'>\n<div class='force-title'>"),
                            n.push("" + t(e(this.t("edit.house_numbers.force.title")))),
                            n.push("</div>\n<button class='force-invalid waze-btn waze-btn-red waze-btn-smaller'>" + t(e(this.t("edit.house_numbers.force.action"))) + "</button>\n</div>\n<button class='continue-editing waze-btn waze-btn-smaller waze-btn-white'>" + t(e(this.t("edit.house_numbers.force.continue"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='house-number-marker-tooltip'>\n<div class='title'></div>\n<div class='edit-button fa fa-pencil'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='direction-lanes'>\n<div class='lane-instruction lane-instruction-from'>\n<div class='drawing'>\n<div class='line'></div>\n<div class='letter-circle'></div>\n</div>\n<div class='instruction'>\n<div class='instruction-text'>\n<span class='heading'></span>\n<span class='street-name'></span>\n</div>\n</div>\n</div>\n<div class='lane-instruction lane-instruction-to'>\n<div class='drawing'>\n<div class='letter-circle'></div>\n<div class='lanes-not-enabled-badge waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("lanes.not_shown_to_driver"))) + "'></div>\n</div>\n<div class='instruction'>\n<div class='instruction-text'>" + t(e(this.t("lanes.reach_intersection"))) + "</div>\n<div class='override-notification'>" + t(e(this.t("lanes.override.override_notification"))) + "</div>\n<div class='lane-arrows'></div>\n<div class='lane-edit'>\n<div>\n<span class='edit-lane-guidance'></span>\n</div>\n<div class='edit-region'></div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls direction-lanes-edit'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("lanes.lane_count"))) + "</label>\n<input class='form-control' type='number' size='" + t(e(3)) + "' name='laneCount' min='" + t(e(0)) + "' max='" + t(e(32)) + "'>\n</div>\n<div class='form-group turns'>\n<label class='control-label'>" + t(e(this.t("lanes.turns"))) + "</label>\n<div class='controls-container turns-region'></div>\n</div>\n<div class='alert alert-gray warning'></div>\n<hr>\n<div class='button-container'>\n<span class='cancel-button'>" + t(e(this.t("lanes.buttons.cancel"))) + "</span>\n<button class='apply-button waze-btn waze-btn-blue'>" + t(e(this.t("lanes.buttons.apply"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='empty-badge waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("lanes.empty_lane"))) + "'></div>\n<div class='uturn'>"),
                            n.push("" + e(this.uTurnSvgText)),
                            n.push("</div>\n<div class='small-uturn'>"),
                            n.push("" + e(this.uTurnSmallSvgText)),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<label class='control-label'>" + t(e(this.t("lanes.title"))) + "</label>\n<div class='fwd-lanes'></div>\n<div class='rev-lanes'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<input class='checkbox-large checkbox-white' type='checkbox' name='lane'>\n<label></label>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='turn-angle-icon'></div>\n<div class='right-turn-lanes-part'>\n<div class='street-name'></div>\n<div class='checkboxes-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='lanes-turn-override-popup'>\n<div class='title'>"),
                            n.push("" + t(e(this.t("lanes.override.title")))),
                            n.push("</div>\n<div class='turn-options'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='turn-angle-icon'></div>\n<div class='angle-label'></div>\n<div class='waze-selected-label'>"),
                            n.push("" + t(e(this.t("lanes.override.waze_selected")))),
                            n.push("</div>\n<div class='selected_v_sign w-icon-checkmark'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r;
                        return e = this.__cleanValue,
                            t = [],
                            n = "Waze/MapEditor/UI/Components/WazeCheckbox",
                            i = "layer-switcher-" + this.id.toLowerCase(),
                            r = this.t("layer_switcher.togglers." + this.id),
                            t.push("" + e(this.renderPartial(n, {
                                id: i,
                                label: r
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='menu'>\n<div class='title'>\n<span>"),
                            n.push("" + t(e(this.t("layer_switcher.title")))),
                            n.push("</span>\n<i class='js-close-layer-switcher w-icon-x'></i>\n</div>\n<div class='scrollable'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/LayerSwitcher/templates/togglers-tree", {
                                isLiveUsersLayerEnabled: this.isLiveUsersLayerEnabled,
                                isHouseNumbersLayerFeatureEnabled: this.isHouseNumbersLayerFeatureEnabled,
                                isRestrictedDrivingAreasLayerEnabled: this.isRestrictedDrivingAreasLayerEnabled
                            }))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='layer-switcher-wrapper'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            "Waze/MapEditor/UI/Components/WazeToggleSwitch",
                            i = "layer-switcher-" + this.id.toLowerCase(),
                            n.push("<div class='layer-switcher-toggler-tree-category'>\n<i class='toggle-category w-icon-caret-down' data-group-id='" + t(e(this.id)) + "'></i>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Components/WazeToggleSwitch", {
                                id: i,
                                class: i
                            }))),
                            n.push("<label class='label-text' for='" + t(e(i)) + "'>" + t(e(this.t("layer_switcher.togglers." + this.id))) + "</label>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return e = this.__cleanValue,
                            n = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/checkbox",
                            i = "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/toggleSwitch",
                            (t = []).push("<ul class='list-unstyled togglers'>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_ISSUES"
                            }))),
                            t.push("<ul class='collapsible-GROUP_ISSUES'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_MAP_ISSUES"
                            }))),
                            t.push("<ul class='collapsible-GROUP_MAP_ISSUES'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_MAP_PROBLEMS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_CLOSED_MAP_PROBLEMS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_CLOSED_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_PARKING_ISSUES"
                            }))),
                            t.push("<ul class='collapsible-GROUP_PARKING_ISSUES'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PARKING_MAP_PROBLEMS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PARKING_CLOSED_MAP_PROBLEMS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PARKING_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_PLACES"
                            }))),
                            t.push("<ul class='collapsible-GROUP_PLACES'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_VENUES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_RESIDENTIAL_PLACES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_PARKING_PLACES"
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_ROAD"
                            }))),
                            t.push("<ul class='collapsible-GROUP_ROAD'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_ROAD"
                            }))),
                            t.push("</li>"),
                            W.Config.big_junctions.enable && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(n, {
                                    id: "ITEM_JUNCTION_BOXES"
                                }))),
                                t.push("</li>")),
                            t.push("<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_CLOSURES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_SPEED_CAMERAS"
                            }))),
                            t.push("</li>"),
                            this.isHouseNumbersLayerFeatureEnabled && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(n, {
                                    id: "ITEM_HOUSE_NUMBERS"
                                }))),
                                t.push("</li>")),
                            t.push("</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_DISPLAY"
                            }))),
                            t.push("<ul class='collapsible-GROUP_DISPLAY'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_SATELLITE_IMAGERY"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_AREA_MANAGERS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_GPS_POINTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_EDITABLE_AREAS"
                            }))),
                            t.push("</li>"),
                            this.isLiveUsersLayerEnabled && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(n, {
                                    id: "ITEM_LIVE_USERS"
                                }))),
                                t.push("</li>")),
                            t.push("<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_DISALLOWED_TURNS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_MAP_COMMENTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "GROUP_CITIES"
                            }))),
                            t.push("<ul class='collapsible-GROUP_CITIES'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                id: "ITEM_CITY_NAMES"
                            }))),
                            t.push("</li>\n</ul>\n</li>"),
                            this.isRestrictedDrivingAreasLayerEnabled && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(n, {
                                    id: "GROUP_RESTRICTED_DRIVING_AREAS"
                                }))),
                                t.push("<ul class='collapsible-GROUP_RESTRICTED_DRIVING_AREAS'>\n<li>"),
                                t.push("" + e(this.renderPartial(n, {
                                    id: "ITEM_RESTRICTED_DRIVING_AREAS_NAMES"
                                }))),
                                t.push("</li>\n</ul>\n</li>")),
                            t.push("</ul>\n</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='login-verification-view'>\n<div class='step-email-missing'>\n<div class='verification-image verification-image-verify'></div>\n<div class='login-title verification-title'>"),
                            n.push("" + t(e(this.t("email_verification.missing.title")))),
                            n.push("</div>\n<div class='verification-messages'>"),
                            n.push("" + t(e(this.t("email_verification.missing.message")))),
                            n.push("</div>\n<div class='verification-actions'>\n<div class='btn-wrapper'>\n<button class='do-manage-email waze-btn waze-btn-blue waze-btn-small'>"),
                            n.push("" + t(e(this.t("email_verification.missing.add_email")))),
                            n.push("</button>\n</div>\n</div>\n</div>\n<div class='step-manage-email'>\n<div class='manage-email-content'>\n<div class='manage-email-column-image'></div>\n<div class='manage-email-column-text'>\n<div class='manage-email-text-section-top'>\n<div class='manage-email-text-h1'>"),
                            n.push("" + t(e(this.t("email_verification.manage.section_top_title")))),
                            n.push("</div>\n<div class='manage-email-text-normal'>"),
                            n.push("" + t(e(this.t("email_verification.manage.section_top_text")))),
                            n.push("</div>\n</div>\n<div class='manage-email-text-section-middle'>\n<div class='manage-email-text-h2'>"),
                            n.push("" + t(e(this.t("email_verification.manage.section_middle_title")))),
                            n.push("<ol class='manage-email-text-normal'>\n<li>" + t(e(this.t("email_verification.manage.section_middle_item_1"))) + "</li>\n<li>" + t(e(this.t("email_verification.manage.section_middle_item_2"))) + "</li>\n<li>" + t(e(this.t("email_verification.manage.section_middle_item_3"))) + "</li>\n<li>" + t(e(this.t("email_verification.manage.section_middle_item_4"))) + "</li>\n</ol>\n</div>\n</div>\n<div class='manage-email-text-section-bottom'>\n<div class='manage-email-text-normal'>"),
                            n.push("" + t(e(this.t("email_verification.manage.section_bottom_text")))),
                            n.push("</div>\n<a class='do-back waze-link'>\n&lt;"),
                            n.push("" + t(e(this.t("email_verification.back")))),
                            n.push("</a>\n</div>\n</div>\n</div>\n</div>\n<div class='step-verification'>\n<div class='verification-image verification-image-verify'></div>\n<div class='login-title verification-title'>"),
                            n.push("" + t(e(this.t("email_verification.verify.title")))),
                            n.push("</div>\n<div class='alert-danger verification-alert'>"),
                            n.push("" + t(e(this.t("email_verification.verify.error")))),
                            n.push("</div>\n<div class='verification-messages'>"),
                            n.push("" + t(e(this.t("email_verification.verify.message", {
                                recipient: this.recipient
                            })))),
                            n.push("</div>\n<div class='verification-actions'>\n<div class='btn-wrapper'>\n<button class='do-send-verification-email waze-btn waze-btn-blue waze-btn-small'>\n<span class='emailSending'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            n.push("" + t(e(this.t("email_verification.verify.send_email")))),
                            n.push("</button>\n</div>\n<div class='btn-wrapper'>\n<button class='do-manage-email waze-btn waze-btn-small waze-btn-white'>"),
                            n.push("" + t(e(this.t("email_verification.verify.change_email")))),
                            n.push("</button>\n</div>\n</div>\n</div>\n<div class='step-verification-sent'>\n<div class='verification-image verification-image-sent'></div>\n<div class='login-title verification-title'>"),
                            n.push("" + t(e(this.t("email_verification.sent.title")))),
                            n.push("</div>\n<div class='alert-success verification-alert'>"),
                            n.push("" + t(e(this.t("email_verification.sent.alert", {
                                recipient: this.recipient
                            })))),
                            n.push("</div>\n<div class='verification-messages'>"),
                            n.push("" + t(e(this.t("email_verification.sent.message")))),
                            n.push("</div>\n</div>\n<div class='login-verification-footer'>\n<a class='do-back waze-link'>\n&lt;"),
                            n.push("" + t(e(this.t("email_verification.back")))),
                            n.push("</a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='modal-content'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='login-popup'>\n<div class='login-popup-content'>\n<div class='welcome-image'></div>\n<div class='welcome-message'>\n<h2>" + t(e(this.t("welcome.title"))) + "</h2>\n<p>" + t(e(this.t("welcome.content"))) + "</p>\n</div>\n<a class='btn login waze-btn waze-btn-big waze-btn-blue' href='#'>" + t(e(this.t("welcome.login"))) + "</a>\n<p class='playmode'>\n<a href='#'>" + t(e(this.t("welcome.practice"))) + "</a>\n</p>\n</div>\n<div class='login-popup-footer'>\n<div class='language-select-container'>\n<div class='translate-icon'></div>\n<div class='language-select'>\n<select>"),
                            i = 0,
                            s = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"].length; i < s; i++)
                            r = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"][i],
                            n.push("<option value='" + t(e(r)) + "' selected='" + t(e(I18n.locale === r)) + "'>" + t(e({
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español (América Latina)",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "ไทย"
                            } [r])) + "</option>");
                        return n.push("</select>\n</div>\n</div>\n<div class='login-links'>\n<a class='tutorial' data-toggle='modal' href='#tutorial-dialog'>" + t(e(this.t("welcome.tutorial.title"))) + "</a>\n<a class='wiki' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>" + t(e(this.t("welcome.wiki.title"))) + "</a>\n<a class='forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>" + t(e(this.t("welcome.forum.title"))) + "</a>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='session-expired'>\n<div class='icon'></div>\n<h1 class='title'>" + t(e(this.t("session.expired.title"))) + "</h1>\n<p class='description'>" + t(e(this.t("session.expired.description"))) + "</p>\n<a class='btn login waze-btn waze-btn-big waze-btn-blue' href='#'>" + t(e(this.t("session.expired.log_in"))) + "</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='name'>" + t(e(this.h.formatUserName(this.userID))) + "</div>"),
                            this.isPartner && (n.push("<div class='partner'>" + t(e(this.t("mte.edit.contributors.partner"))) + "</div>"),
                                this.editable && n.push("<div class='remove-button'>\n<i class='fa fa-remove'></i>\n</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='add-partner-section'>\n<button class='add-partner-button btn btn-block btn-positive btn-primary'>\n<i class='fa fa-plus'></i>"),
                            n.push("" + t(e(this.t("mte.edit.contributors.add_partner")))),
                            n.push("</button>\n<form class='add-partner-form'>\n<div class='header'>\n<a class='cancel-button pull-right'>" + t(e(this.t("mte.edit.contributors.cancel"))) + "</a>\n<h4 class='title'>" + t(e(this.t("mte.edit.contributors.add_partner"))) + "</h4>\n</div>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control partner-select' required></select>\n</div>\n<button class='add-button btn btn-block btn-primary' type='submit'>"),
                            n.push("" + t(e(this.t("mte.edit.contributors.add")))),
                            n.push("</button>\n</div>\n</form>\n</div>\n<div class='list'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='closures'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='loading'>"),
                            n.push("" + t(e(this.loadingMessage))),
                            n.push("</div>\n<div class='error'>"),
                            n.push("" + t(e(this.errorMessage))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='preview'>\n<h3 class='english-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview'>"),
                            n.push("" + t(e(this.ENGLISH_LOCALE))),
                            n.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n<h3 class='local-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview local-language-preview'>"),
                            n.push("" + t(e(this.ENGLISH_LOCALE))),
                            n.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n</div>\n<form class='edit-form inner-form side-panel-section'>\n<div class='english-name form-group'>\n<div class='controls'>\n<input class='english-name form-control' required autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select' disabled>\n<option>English</option>\n</select>\n</div>\n</div>\n<div class='form-group local-name'>\n<div class='controls'>\n<button class='btn-link remove-local-name-button' type='button'>\n<i class='fa fa-remove'></i>\n</button>\n<input class='form-control local-name' autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select locale'></select>\n</div>\n</div>\n<button class='add-local-name-button btn-link' type='button'>\n<i class='fa fa-plus'></i>"),
                            n.push("" + t(e(this.t("mte.edit.name_list.add_language")))),
                            n.push("</button>\n<button class='apply-button btn waze-btn waze-btn-blue'>Apply</button>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group twitter-accounts-urls'>\n<label class='control-label'>" + t(e(this.t("mte.edit.twitter_accounts_urls"))) + "</label>\n<ul>"),
                            i = 0,
                            r = (s = this.twitterAccountsUrls).length; i < r; i++)
                            o = s[i],
                            n.push("<li>\n<a href='" + t(e(o)) + "' target='_blank' rel='noopener noreferrer'>" + t(e(o)) + "</a>\n</li>");
                        return n.push("</ul>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='edit-panel flex-parent mte-edit-view'>\n<div class='flex-noshrink navigation'>\n<button class='back-button btn-link' type='button'>\n&#60;"),
                            n.push("" + t(e(this.t("mte.edit.back_to_search")))),
                            n.push("</button>\n</div>\n<div class='contents'>\n<div class='no-outer-padding panel-header'>\n<div class='title'>\n<label class='control-label'>"),
                            this.newModel ? n.push("" + t(e(this.t("mte.edit.add_event_title")))) : n.push("" + t(e(this.t("mte.edit.edit_event_title")))),
                            n.push("</label>"),
                            this.newModel || n.push("<div class='submit-buttons'>\n<button class='btn btn-defaults submit-button'>" + t(e(this.t("mte.edit.submit"))) + "</button>\n<div class='submitted-indication'>" + t(e(this.t("mte.edit.submitted"))) + "</div>\n</div>\n<div class='publish-buttons'>\n<button class='btn btn-default publish-button'>" + t(e(this.t("mte.edit.publish"))) + "</button>\n<div class='published-indication'>" + t(e(this.t("mte.edit.published"))) + "</div>\n</div>"),
                            n.push("</div>\n<div class='names-container'>\n<div class='names-region'></div>\n<div class='validation-error' for='names'></div>\n</div>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#mte-edit-general'>"),
                            n.push("" + t(e(this.t("mte.edit.tabs.general")))),
                            n.push("</a>\n</li>\n<li class='closures-tab'>"),
                            this.newModel ? (n.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.closures_disabled"))) + "'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                n.push("</a>")) : (n.push("<a data-toggle='tab' href='#mte-edit-closures'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                n.push("</a>")),
                            n.push("</li>\n<li class='contributors-tab'>"),
                            this.newModel ? (n.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.partners_disabled"))) + "'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                n.push("</a>")) : (n.push("<a data-toggle='tab' href='#mte-edit-contributors'>"),
                                n.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                n.push("</a>")),
                            n.push("</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='mte-edit-general'>\n<form class='attributes-form'>"),
                            n.push("<button class='form-submit-button hidden'></button>\n<div class='form-group side-panel-section'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.category"))) + "</label>\n<div class='controls'>\n<select class='category form-control' required></select>\n</div>\n</div>\n<div class='side-panel-section'>\n<label class='control-label control-label-inline required-field'>" + t(e(this.t("mte.edit.fields.location"))) + "</label>\n<i class='location-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("mte.edit.location_tooltip"))) + "'></i>\n<div class='address-edit-region'></div>\n<div class='validation-error' for='cityID'></div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group start-date-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.start_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date form-control start-date' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='startDate'></div>\n</div>\n<div class='end-date-group form-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.end_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date end-date form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='endDate'></div>\n</div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("mte.edit.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control url' type='text'>\n</div>\n</div>"),
                            this.canEditTweetText && n.push("<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("mte.edit.tweet_text"))) + "</label>\n<textarea class='form-control' name='tweetText' maxlength='" + t(e(140)) + "'></textarea>\n</div>\n</div>"),
                            n.push("<div class='twitter-urls-region'></div>\n<div class='event-page form-group side-panel-section'>\n<a class='btn btn-block btn-primary' target='_blank' rel='noopener noreferrer'>"),
                            n.push("" + t(e(this.t("mte.edit.waze_event_page")))),
                            n.push("</a>\n</div>\n<div class='side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/additional_details", this.modelAttributes))),
                            n.push("</div>\n</form>\n</div>\n<div class='tab-pane' id='mte-edit-closures'></div>\n<div class='tab-pane' id='mte-edit-contributors'>\n<div class='contributors-region'></div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='icon'>\n<i class='mte-icon waze-icon-event'></i>"),
                            this.published && n.push("<i class='published-indication waze-icon-check'></i>"),
                            n.push("</div>\n<div class='name'>"),
                            n.push("" + t(e(this.name))),
                            n.push("</div>\n<div class='date'>"),
                            n.push("" + t(e(this.date))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, n, i, r, s, o;
                        for (s in n = this.__htmlEscape,
                            t = this.__cleanValue,
                            (i = []).push("<div class='flex-noshrink mte-search'>\n<div class='search-header'>\n<div class='title'>" + n(t(this.t("mte.search.title"))) + "</div>\n<div class='action date-switcher dropdown'>\n<a class='dropdown-toggle waze-dropdown' data-toggle='dropdown'>\n<span class='current-date-filter'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            o = this.dateFilters)
                            e.call(o, s) && (r = o[s],
                                i.push("<li class='waze-dropdown-item'>\n<a class='date-filter-item' data-filter='" + n(t(s)) + "'>" + n(t("" + r.name)) + "</a>\n</li>"));
                        return i.push("</ul>\n</div>\n</div>\n<input class='form-control search-input' type='text' placeholder='" + n(t(this.t("mte.search.placeholder"))) + "'>\n</div>\n<ul class='flex-noshrink list-unstyled mte-list'></ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='loaderRegion'>\n<div class='sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n<div class='mainRegion'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='add-button toolbar-button toolbar-button-with-icon toolbar-button-with-label' title='" + t(e(this.t("mte.edit.toolbar.add"))) + "'>\n<div class='item-container'>\n<i class='item-icon w-icon-calendar'></i>\n<span class='menu-title'>"),
                            n.push("" + t(e(this.t("mte.edit.toolbar.add")))),
                            n.push("</span>\n</div>\n</div>\n<div class='delete-button toolbar-button toolbar-button-with-icon toolbar-button-with-label' title='" + t(e(this.t("mte.edit.toolbar.delete"))) + "'>\n<div class='item-container'>\n<i class='item-icon w-icon-trash'></i>\n<span class='menu-title'>"),
                            n.push("" + t(e(this.t("mte.edit.toolbar.delete")))),
                            n.push("</span>\n</div>\n</div>\n<div class='save-button toolbar-button toolbar-button-with-label waze-icon-save' title='" + t(e(this.t("mte.edit.toolbar.save"))) + "'>\n<div class='item-container'>\n<span class='menu-title'>"),
                            n.push("" + t(e(this.t("mte.edit.toolbar.save")))),
                            n.push("</span>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='topbar topbar-mte'>\n<div class='mode-name'>"),
                            n.push("" + t(e(this.t("modes.name.mte")))),
                            n.push("</div>\n<div class='location-info-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<form class='edit-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.navigation_point.name"))) + "</label>\n<div class='controls'>\n<input class='form-control name' name='point_name'>\n</div>\n<div class='controls controls-container entry-controls'>\n<div class='is-primary-checkbox-container'>\n<input class='is-primary' id='" + t(e(this.isPrimaryInputId)) + "' name='is-primary' type='checkbox'>\n<label for='" + t(e(this.isPrimaryInputId)) + "'>" + t(e(this.t("edit.landmark.navigation_point.is_primary"))) + "</label>\n</div>\n</div>\n</div>\n<div class='buttons'>\n<button class='btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='preview'>\n<div class='arrow-icon'></div>\n<div class='name'></div>\n<div class='buttons'>\n<div class='edit-button waze-icon-edit'></div>\n<div class='focus-button waze-icon-crosshair'></div>\n<div class='delete-button waze-icon-trash'></div>\n</div>\n</div>\n<div class='edit-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='list-region'></div>\n<button class='add-button btn btn-link'>" + t(e(this.t("edit.landmark.navigation_point.add_button"))) + "</button>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.showNext ? n.push("<div class='next waze-plain-btn'>" + t(e(this.adapter.getNextButtonString())) + "</div>") : n.push("<div class='done waze-plain-btn'>" + t(e(this.t("problems.panel.done"))) + "</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            null != this.attributes.description && (n.push("<p class='description'>"),
                                n.push("" + t(e(this.attributes.description))),
                                n.push("</p>")),
                            null != this.attributes.extraInfo && (n.push("<p class='extraInfo'>"),
                                n.push("" + t(e(this.attributes.extraInfo))),
                                n.push("</p>")),
                            null != this.attributes.street && (n.push("<div class='street'>\n<strong>" + t(e(this.t("problems.panel.closure.street") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.street))),
                                n.push("</div>")),
                            null != this.attributes.fromCrossStreet && (n.push("<div class='fromCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.from_cross_street") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.fromCrossStreet))),
                                n.push("</div>")),
                            null != this.attributes.toCrossStreet && (n.push("<div class='toCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.to_cross_street") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.toCrossStreet))),
                                n.push("</div>")),
                            null != this.attributes.startTime && (n.push("<div class='startTime'>\n<strong>" + t(e(this.t("problems.panel.closure.start_time") + ":")) + "</strong>"),
                                n.push("" + t(e(I18n.l("time.formats.long", this.attributes.startTime)))),
                                n.push("</div>")),
                            null != this.attributes.endTime && (n.push("<div class='endTime'>\n<strong>" + t(e(this.t("problems.panel.closure.end_time") + ":")) + "</strong>"),
                                n.push("" + t(e(I18n.l("time.formats.long", this.attributes.endTime)))),
                                n.push("</div>")),
                            null != this.attributes.dailyHours && (n.push("<div class='dailyHours'>\n<strong>" + t(e(this.t("problems.panel.closure.schedule") + ":")) + "</strong>"),
                                n.push("" + t(e(this.attributes.dailyHours))),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["problem-edit", "" + t(e("severity-" + this.adapter.getSeverity()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='top-section'>\n<a class='close-panel'></a>\n<div class='header'>\n<div class='dot'></div>\n<div class='main-title'>" + t(e(this.mainTitle)) + "</div>\n<div class='title'>" + t(e(this.adapter.getTitle()))),
                            n.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            n.push("</div>\n<div class='reported'>" + t(e(this.adapter.getReportedString())) + "</div>"),
                            this.showDebug && n.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.adapter.problem.getID()
                            }))) + "</div>"),
                            n.push("</div>\n<div class='body'>\n<div class='problem-data'>"),
                            this.adapter.hasDescription() && (n.push("<div class='description section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.description"))) + "</div>\n<div class='collapsible content'>"),
                                null != this.adapter.getDescriptionTemplate() ? n.push("" + e(this.renderPartial(this.adapter.getDescriptionTemplate(), this.adapter.problem))) : n.push("" + t(e(this.adapter.getDescription()))),
                                n.push("</div>\n</div>")),
                            this.showMoreInfoSection()) {
                            for (n.push("<div class='collapsed more-info section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.more_info"))) + "</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<form class='controls-container'>\n<div class='not-available'>" + t(e(this.t("problems.panel.more_info.not_available"))) + "</div>"),
                                i = 0,
                                r = (s = this.adapter.getMoreInfoTypes()).length; i < r; i++)
                                o = (o = s[i]).get("name"),
                                n.push("<div class='" + ["more-info-checkbox", "more-info-" + t(e(o)) + "-checkbox"].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='" + ["legend", "more-info-" + t(e(o))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                                n.push("" + e(this.h.checkbox(this.t("problems.panel.more_info." + o), o, "on"))),
                                n.push("</div>");
                            n.push("</form>\n</div>\n</div>")
                        }
                        return this.adapter.isConversationAvailable() && (n.push("<div class='conversation section'>\n<div class='title'>"),
                                n.push("" + t(e(this.t("problems.panel.section.conversation")))),
                                n.push("<span class='comment-count-badge'></span>\n</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<div class='conversation-region'></div>\n</div>\n</div>")),
                            n.push("</div>\n</div>\n</div>\n<div class='actions'>"),
                            this.showCloseDetails() ? (n.push("<div class='close-details section'>\n<div class='content'>\n<div class='date'>" + e(this.getCloseDate()) + "</div>\n<div class='by'>" + e(this.getClosingUser()) + "</div>\n<div class='navigation'>"),
                                n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Problems/templates/_navigation", this))),
                                n.push("</div>\n</div>\n</div>")) : (n.push("<div class='section'>\n<div class='content'>\n<form class='controls-container'>"),
                                n.push("" + e(this.h.radio({
                                    label: this.adapter.getOpenStateString(),
                                    name: "state",
                                    value: "open",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                n.push("" + e(this.h.radio({
                                    label: this.adapter.getSolvedStateString(),
                                    name: "state",
                                    value: "solved",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                n.push("" + e(this.h.radio({
                                    label: this.adapter.getNotIdentifiedStateString(),
                                    name: "state",
                                    value: "not-identified",
                                    currentValue: null,
                                    enable: this.adapter.isEditable()
                                }))),
                                this.adapter.isEditable() || (this.adapter.rankAllowsEdit() ? n.push("<div class='alert alert-gray alert-lock no-permissions-alert'>" + t(e(this.t("problems.panel.no_permission"))) + "</div>") : n.push("<div class='alert alert-gray alert-lock no-permissions-alert'>" + t(e(this.t("problems.panel.no_permission_level", {
                                    level: this.adapter.minLevelForEdit()
                                }))) + "</div>")),
                                n.push("</form>\n<div class='navigation'>"),
                                n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Problems/templates/_navigation", this))),
                                n.push("</div>\n</div>\n</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<select class='form-control region-select'></select>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='left-section'>\n<div class='restriction-icon w-icon-alert-danger'></div>\n</div>\n<div class='right-section'>\n<div class='time-frame-text'>\n<div class='days'>" + t(e(this.daysString)) + "</div>\n<div class='hours'>" + t(e(this.hoursString)) + "</div>\n</div>\n<div class='summary-text'>"),
                            n.push("" + t(e(this.summaryString))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='marker-popover-container'>\n<div class='close-button w-icon-x'></div>\n<div class='title'>"),
                            n.push("" + t(e(this.t("restricted_driving_area.popover.title")))),
                            n.push("</div>\n<div class='name'></div>\n<div class='subscriptions-list'></div>\n<div id='restrictions-region'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='drive-profile-edit-blocked'>\n<div class='drive-profile-group'>\n<div class='controls-container'>\n<input id='all-vehicles-on-radio' type='radio' name='isAllVehicles' value='true'>\n<label for='all-vehicles-on-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                            n.push("</label>\n</div>\n</div>\n<div class='drive-profile-group drive-profile-vehicles-group'>\n<div class='controls-container'>\n<input id='all-vehicles-off-radio' type='radio' name='isAllVehicles' value='false'>\n<label class='drive-profile-vehicles-option-label' for='all-vehicles-off-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.only_vehicles")))),
                            n.push("</label>\n</div>\n<div class='drive-profile-vehicle-types'>"),
                            i = 0,
                            s = (o = this.getVehicleTypes()).length; i < s; i++)
                            r = o[i],
                            n.push("<div class='controls-container'>\n<input class='vehicle-type' id='vehicle-type-" + r.value + "-checkbox' type='checkbox' value='" + t(e(r.value)) + "'>\n<label class='vehicle-type-label' for='vehicle-type-" + t(e(r.value)) + "-checkbox'>"),
                            n.push("" + t(e(this.t("restrictions.vehicle_types." + r.key)))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='drive-profile-edit-free'>\n<div class='collection-region'></div>\n<div class='add-drive-profile-item do-add-item'>\n<span class='waze-icon-plus'></span>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.add_vehicle")))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a, l, u, c, d, h, p, g, f, m, v;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='drive-profile-item-attributes'>"),
                            this.isBlank)
                            n.push("<div class='is-blank'>"),
                            n.push("" + t(e(this.t("restrictions.editing.driving.no_vehicle")))),
                            n.push("</div>");
                        else {
                            if (n.push("<div class='vehicle-type'>"),
                                this.hasVehicleType) {
                                for (n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.vehicleName))),
                                    n.push("</span>\n<i class='do-delete-vehicle-type drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    r = 0,
                                    u = (p = this.vehicleTypesNames).length; r < u; r++)
                                    v = p[r],
                                    n.push("<li>\n<a class='do-set-vehicle-type' data-target='#' data-value='" + t(e(this.vehicleTypes[v])) + "'>"),
                                    n.push("" + t(e(this.t("restrictions.vehicle_types." + v)))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>")
                            } else
                                n.push("<div class='all-vehicles'>"),
                                n.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                                n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                n.push("</div>");
                            if (n.push("</div>"),
                                this.hasNumPassengers) {
                                for (n.push("<div class='num-passengers'>"),
                                    this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.t("restrictions.editing.driving.min_passengers", {
                                        count: this.numPassengers
                                    })))),
                                    n.push("</span>\n<i class='do-delete-num-passengers drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    o = 0,
                                    c = (g = this.numPassengersRange).length; o < c; o++)
                                    i = g[o],
                                    n.push("<li>\n<a class='do-set-num-passengers' data-target='#' data-value='" + t(e(i)) + "'>"),
                                    n.push("" + t(e(this.t("restrictions.editing.driving.min_passengers", {
                                        count: i
                                    })))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>\n</div>")
                            }
                            if (this.hasSubscription) {
                                for (n.push("<div class='subscription'>"),
                                    this.hasNumPassengers ? (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.and")))),
                                        n.push("</span>")) : this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.subscriptionName))),
                                    n.push("</span>\n<i class='do-delete-subscription drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    a = 0,
                                    d = (f = this.subscriptionOptions).length; a < d; a++)
                                    s = f[a],
                                    n.push("<li>\n<a class='do-set-subscription' data-target='#' data-value='" + t(e(s.value)) + "'>"),
                                    n.push("" + t(e(s.name))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>\n</div>")
                            }
                            if (this.hasLicensePlateNumber) {
                                for (n.push("<div class='license-plate'>"),
                                    this.hasSubscription ? (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.and")))),
                                        n.push("</span>")) : this.hasNumPassengers ? (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.and")))),
                                        n.push("</span>")) : this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + t(e(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + t(e(this.licensePlateNumberName))),
                                    n.push("</span>\n<i class='do-delete-license-plate drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    l = 0,
                                    h = (m = this.licensePlateNumberOptions).length; l < h; l++)
                                    s = m[l],
                                    n.push("<li>\n<a class='do-set-license-plate' data-target='#' data-value='" + t(e(s.value)) + "'>"),
                                    n.push("" + t(e(s.name))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>\n</div>")
                            }
                        }
                        return n.push("</div>"),
                            this.restrictionEditable && (n.push("<div class='drive-profile-item-actions'>\n<div class='do-delete-item drive-profile-item-action'>\n<i class='fa fa-trash'></i>\n</div>"),
                                this.isExhaustive || (n.push("<div class='btn-group'>\n<span class='drive-profile-item-action dropdown-toggle' data-toggle='dropdown'>\n<i class='fa fa-plus'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    this.hasVehicleType || (n.push("<li>\n<a class='do-init-vehicle-type' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.vehicle_type")))),
                                        n.push("</a>\n</li>")),
                                    !this.hasNumPassengers && this.supportsNumPassengers && (n.push("<li>\n<a class='do-init-num-passengers' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.num_passengers")))),
                                        n.push("</a>\n</li>")),
                                    !this.hasLicensePlateNumber && this.supportsLicensePlateNumber && (n.push("<li>\n<a class='do-init-license-plate' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.license_plate")))),
                                        n.push("</a>\n</li>")),
                                    !this.hasSubscription && this.supportsSubscriptions && this.subscriptionsAvailable && (n.push("<li>\n<a class='do-init-subscription' data-target='#'>"),
                                        n.push("" + t(e(this.t("restrictions.editing.driving.dropdowns.subscription")))),
                                        n.push("</a>\n</li>")),
                                    n.push("</ul>\n</div>")),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            this.isNewRestriction ? n.push("" + t(e(this.t("restrictions.modal_headers.creating_restriction")))) : n.push("" + t(e(this.t("restrictions.modal_headers.editing_restriction")))),
                            n.push("</h3>\n</div>\n<div class='modal-body'>\n<div class='restriction-editing-region'>\n<div class='restriction-validation-region'></div>\n<div class='restriction-editing-section'>\n<div class='restriction-editing-title restriction-editing-title-main'>"),
                            n.push("" + t(e(this.editingTitle))),
                            n.push("</div>\n<div class='segment-editing-region'></div>\n<div class='timeframe-editing-region'></div>\n</div>"),
                            this.showEditDriveProfile && (n.push("<div class='restriction-editing-section'>\n<div class='driving-modality-editing-region'>\n<div class='restriction-editing-title'>"),
                                n.push("" + t(e(this.t("restrictions.editing.sections.driving_prefix")))),
                                n.push("<select class='do-change-driving-modality driving-modality-select form-control'></select>"),
                                this.showTollDisabledTooltip && n.push("<i class='waze-tooltip' title='" + t(e(this.t("restrictions.editing.driving.toll_disabled"))) + "'></i>"),
                                n.push("" + t(e(this.t("restrictions.editing.sections.driving_suffix")))),
                                n.push("</div>\n</div>\n</div>")),
                            n.push("<div class='drive-profile-editing-region'></div>\n<div class='restriction-editing-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.more_info")))),
                            n.push("</div>\n<div class='description-editing-region'>\n<textarea class='form-control' name='description' placeholder='" + t(e(this.t("restrictions.editing.placeholders.description"))) + "'></textarea>\n</div>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>\n<div class='help-message-region'>\n<i class='fa fa-exclamation-circle'></i>\n<div class='help-message'></div>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-cancel'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>"),
                            this.isNewRestriction ? n.push("<button class='btn btn-primary do-create'>" + t(e(this.t("restrictions.buttons.add"))) + "</button>") : n.push("<button class='btn btn-primary do-update'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>"),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restriction-editing-container'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.segment.applies")))),
                            n.push("</div>\n<div class='segment-section-content'>\n<select class='form-control' name='disposition'></select>\n<select class='form-control' name='laneType'></select>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restriction-validation-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.validation")))),
                            n.push("</div>\n<div class='collection-region'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.forwardTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.reverseTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='bidi-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-bidi'>\n    <span class='direction-icon direction-icon-bidi'>"),
                            n.push("    " + t(e(this.t("segment.direction.label.3")))),
                            n.push("    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.bidiTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            n.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<td class='restriction-item-icon'>"),
                            this.isExpired && n.push("<div class='restriction-expired' title='" + t(e(this.t("restrictions.summary.tooltips.expired"))) + "'></div>"),
                            n.push("</td>\n<td class='restriction-segment-attribute'>" + t(e(this.laneStr)) + "</td>\n<td>" + t(e(this.daysStr)) + "</td>\n<td>" + t(e(this.timeStr)) + "</td>\n<td class='restriction-item-summary' title='" + t(e(this.summaryStr)) + "'>\n<div class='restriction-item-details'>"),
                            this.isAllowed && (n.push("<span class='restriction-item-badge restriction-item-badge-allowed'>"),
                                n.push("" + t(e(this.t("restrictions.summary.badges.allowed")))),
                                n.push("</span>")),
                            this.isBlocked && (n.push("<span class='restriction-item-badge restriction-item-badge-blocked'>"),
                                n.push("" + t(e(this.t("restrictions.summary.badges.blocked")))),
                                n.push("</span>")),
                            this.isTollFree && (n.push("<span class='restriction-item-badge restriction-item-badge-toll-free'>"),
                                n.push("" + t(e(this.t("restrictions.summary.badges.toll_free")))),
                                n.push("<i class='badge-tooltip fa fa-info-circle' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("restrictions.summary.tooltips.toll_free"))) + "'></i>\n</span>")),
                            n.push("<div class='restriction-item-details-summary'>"),
                            n.push("" + t(e(this.summaryStr))),
                            n.push("</div>\n</div>\n</td>\n<td>\n<div class='restriction-actions'>"),
                            this.canModifyRestriction && (n.push("<div class='restriction-editing-actions'>"),
                                this.canApplyToAll && n.push("<i class='apply-to-all-tooltip do-applyToAll fa fa-clone' title='" + t(e(this.t("restrictions.editing.actions.apply_to_all"))) + "'></i>"),
                                n.push("<i class='do-delete fa fa-trash' title='" + t(e(this.t("restrictions.editing.actions.delete"))) + "'></i>\n</div>")),
                            n.push("<i class='do-edit fa fa-chevron-right restriction-action-edit'></i>\n</div>\n</td>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='modal-dialog restrictions-modal'>\n<div class='modal-content'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.forwardTitle))),
                            n.push("</div>\n<div class='restriction-summary-filler'></div>\n<div class='restriction-summary-dropdown'>\n<select class='constraint-select constraint-select-fwd form-control' name='constraint'></select>\n</div>\n</div>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n    <span class='direction-icon direction-icon-b'>\n    B\n    </span>\n    <span class='direction-icon-to'>\n    &gt;\n    </span>\n    <span class='direction-icon direction-icon-a'>\n    A\n    </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.reverseTitle))),
                            n.push("</div>\n<div class='restriction-summary-filler'></div>\n<div class='restriction-summary-group-dropdown'>\n<select class='constraint-select constraint-select-rev form-control' name='constraint'></select>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            n.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            n.push("</h3>\n<div class='modal-header-messages'>"),
                            this.canEditRestrictions || (n.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='modal-body'>\n<div class='restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.summaryTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            n.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            n.push("</h3>\n<div class='modal-header-messages'>"),
                            this.editingMultipleSegments && (n.push("<div class='modal-header-message'>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.multiple_segments")))),
                                n.push("</div>")),
                            this.canEditRestrictions || (n.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='modal-body'>"),
                            this.enablePickupRestrictions ? (n.push("<ul class='nav nav-tabs restriction-tabs'>\n<li>\n<a data-toggle='tab' href='#driving-restrictions'>"),
                                n.push("" + t(e(this.t("restrictions.tab_headers.driving")))),
                                n.push("</a>\n</li>\n<li>\n<a data-toggle='tab' href='#pickup-restrictions'>"),
                                n.push("" + t(e(this.t("restrictions.tab_headers.pickup")))),
                                n.push("</a>\n</li>\n</ul>\n<div class='tab-content'>\n<div class='tab-pane' id='driving-restrictions'></div>\n<div class='tab-pane' id='pickup-restrictions'></div>\n</div>")) : n.push("<div id='driving-restrictions'></div>"),
                            n.push("</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-container'>\n<div class='driving-controls'>\n<input id='tollRoadCheckbox' type='checkbox' name='tollRoad'>\n<label for='tollRoadCheckbox'>"),
                            n.push("" + t(e(this.t("restrictions.editing.segment.toll_road")))),
                            n.push("</label>\n<i class='toll-road-tooltip waze-tooltip' title='" + t(e(this.t("restrictions.editing.segment.toll_road_disabled"))) + "'></i>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<table class='restrictions-table table'>\n<thead>\n<tr>\n<th></th>\n<th class='restriction-segment-attribute'>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.lane")))),
                            n.push("</th>\n<th>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.days")))),
                            n.push("</th>\n<th>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.time")))),
                            n.push("</th>\n<th>"),
                            n.push("" + t(e(this.t("restrictions.summary.table_headers.details")))),
                            n.push("</th>\n<th></th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            n.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            n.push("</h3>\n<div class='modal-header-messages'>"),
                            this.canEditRestrictions || (n.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                n.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                n.push("</div>")),
                            n.push("</div>\n</div>\n<div class='modal-body'>\n<div class='restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='restriction-summary-group-name'>"),
                            n.push("" + t(e(this.summaryTitle))),
                            n.push("</div>\n</div>\n<div class='restrictions-list-region'>"),
                            n.push("" + e(this.renderPartial("Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_table"))),
                            n.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>"),
                            this.canEditDifficultTurns && (n.push("<div class='controls-container'>\n<input id='is-difficult-checkbox' type='checkbox' name='isDifficult'>\n<label for='is-difficult-checkbox'>"),
                                n.push("" + t(e(this.t("restrictions.editing.turn.difficult_turn")))),
                                n.push("</label>\n</div>")),
                            n.push("</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restriction-editing-container'>\n<div class='timeframe-section timeframe-section-weekdays'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.days")))),
                            n.push("</div>\n<div class='timeframe-section-content'>\n<div class='timeframe-weekdays'>"),
                            r = 0,
                            s = (o = I18n.t("date.week_day_order")).length; r < s; r++)
                            i = o[r],
                            n.push("<div class='controls-container'>\n<input class='weekday' id='day-ordinal-" + i + "-checkbox' type='checkbox' value='" + t(e(this.getWeekdayFromOrdinal(i))) + "'>\n<label for='day-ordinal-" + t(e(i)) + "-checkbox'>"),
                            n.push("" + t(e(this.t("date.abbr_day_names")[i]))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n<div class='timeframe-weekdays-toggle'>"),
                            n.push("      " + t(e(this.t("restrictions.editing.toggle.select")))),
                            n.push("      <span>\n      :&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-all weekdays-toggle'>"),
                            n.push("      " + t(e(this.t("restrictions.editing.toggle.all")))),
                            n.push("      </span>\n      <span>\n      ,&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-none weekdays-toggle'>"),
                            n.push("      " + t(e(this.t("restrictions.editing.toggle.none")))),
                            n.push("      </span>\n</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-hours'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.hours")))),
                            n.push("</div>\n<div class='timeframe-hours-controls'>\n<div class='timeframe-section-content'>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-from-time' name='fromTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-to-time' name='toTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='controls-container timeframe-all-day'>\n<input id='is-all-day-checkbox' type='checkbox' name='isAllDay'>\n<label for='is-all-day-checkbox'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.all_day")))),
                            n.push("</label>\n</div>\n</div>\n<div class='timeframe-overnight-message'>\n<i class='waze-tooltip'></i>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.overnight")))),
                            n.push("</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-dates'>\n<div class='restriction-section-title'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.applies")))),
                            n.push("</div>\n<div class='timeframe-section-content'>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-off-radio' type='radio' name='isDuringDates' value='false'>\n<label for='is-during-dates-off-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.always")))),
                            n.push("</label>\n</div>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-on-radio' type='radio' name='isDuringDates' value='true'>\n<label class='label-datepicker' for='is-during-dates-on-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.every_month")))),
                            n.push("</label>\n<input class='btn btn-default datepicker'>\n</div>\n<div class='controls-container date-parity-section'>\n<input id='days-of-month-odd-radio' type='radio' name='daysOfMonth' value='odd'>\n<label class='label-days-of-month' for='days-of-month-odd-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.only_odd_dates")))),
                            n.push("</label>\n<input id='days-of-month-even-radio' type='radio' name='daysOfMonth' value='even'>\n<label class='label-days-of-month' for='days-of-month-even-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.only_even_dates")))),
                            n.push("</label>\n<input id='days-of-month-all-radio' type='radio' name='daysOfMonth' value='all'>\n<label class='label-days-of-month' for='days-of-month-all-radio'>"),
                            n.push("" + t(e(this.t("restrictions.editing.timeframe.all_dates")))),
                            n.push("</label>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<p class='description'>"),
                            n.push("" + t(e(this.title))),
                            this.collated && n.push("" + t(e(" (" + this.collated + ")"))),
                            this.showPanButton && n.push("<a class='focus'>\n<i class='fa fa-crosshairs'></i>\n</a>"),
                            n.push("</p>\n<div class='suggestion'>\n<span class='suggestion-title'>" + t(e(this.t("save.error.suggestion"))) + "</span>"),
                            n.push("" + t(e(this.solution))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='error-list'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.getTitle())) + "</h4>\n</div>\n<div class='body'>\n<ul class='list list-unstyled'></ul>\n</div>\n<div class='actions clearfix'>"),
                            this.showActionTitle() && n.push("<p class='actions-title'>" + t(e(this.t("save.error.actions.title"))) + "</p>"),
                            this.collection.isIgnorable() ? n.push("<button class='btn btn-default edit'>" + t(e(this.t("save.error.actions.edit"))) + "</button>\n<button class='btn btn-default save'>" + t(e(this.t("save.error.actions.save"))) + "</button>") : n.push("<button class='btn btn-default close-button'>" + t(e(this.t("save.error.actions.close"))) + "</button>"),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='success'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.t("save.success.title"))) + "</h4>\n</div>\n<div class='body'>\n<div class='change-count'>"),
                            n.push("" + e(this.getSaveCountTextFor("segments"))),
                            n.push("" + e(this.getSaveCountTextFor("nodes"))),
                            n.push("" + e(this.getSaveCountTextFor("venues"))),
                            n.push("" + e(this.getSaveCountTextFor("bigJunctions"))),
                            n.push("</div>"),
                            this.showPendingVenues() && (n.push("<div class='pending-venues'></div>"),
                                this.venueNames.length > 0 ? n.push("" + e(this.safe_t("save.success.pending_venues.with_names", {
                                    names: this.h.contentTag("strong", this.venueNames)
                                }))) : n.push("" + e(this.safe_t("save.success.pending_venues.no_names")))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='waze-staff-tools'>\n<div class='action dropdown env-switcher'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#'>"),
                            n.push("" + t(e(this.currentRegionName))),
                            n.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>\n<li>\n<a class='env-link' href='" + t(e(this.getURLForLocale(I18n.locale))) + "' data-env='row'>" + t(e(this.t("envs.row"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='" + t(e(this.getURLForLocale(I18n.locale))) + "' data-env='usa'>" + t(e(this.t("envs.usa"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='" + t(e(this.getURLForLocale(I18n.locale))) + "' data-env='il'>" + t(e(this.t("envs.il"))) + "</a>\n</li>\n</ul>\n</div>\n<div id='snapshot-toggler'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='overlay-button street-view-control'>\n<i class='w-icon-streetview-fill'></i>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div id='street-view-container'>\n<div class='panorama view-area'></div>\n<a class='close-button'>\n<i class='fa fa-remove'></i>\n</a>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='title-button'>\n<div class='short-title span'>" + t(e(this.t("title_short"))) + "</div>\n<i class='icon w-icon-caret-down'></i>\n</div>\n<menu class='dropdown-menu'>\n<ul class='list-unstyled'>\n<li class='mode-item' data-mode='" + t(e(0)) + "'>"),
                            n.push("" + t(e(this.t("modes.name.default")))),
                            n.push("</li>\n<li class='mode-item' data-mode='" + t(e(1)) + "'>"),
                            n.push("" + t(e(this.t("modes.name.mte")))),
                            n.push("</li>\n</ul>\n</menu>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='item-icon'></div>\n<span class='menu-title'></span>\n<span class='loader'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>\n<div class='v-sign'>\n<i class='w-icon-checkmark'></i>\n</div>\n<div class='changes-log-region'></div>\n<div class='counter'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='result-error-message results-error'>"),
                            n.push("" + t(e(this.t("toolbar.search_results.error")))),
                            n.push("</div>\n<div class='no-results-error-message results-error'>"),
                            n.push("" + t(e(this.t("toolbar.search_results.no_results")))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='search-result'>\n<div class='icon'></div>\n<div class='content'>\n<div class='" + ["title", "" + t(e(this.description ? void 0 : "no-description"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            n.push("" + t(e(this.title))),
                            n.push("</div>"),
                            this.description && (n.push("<div class='description'>"),
                                n.push("" + t(e(this.description))),
                                n.push("</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<form class='form-search'>\n<div class='input-wrapper'>\n<input class='search-query' autocomplete='off' name='q' spellcheck='off' type='text' placeholder='" + t(e(this.t("toolbar.search"))) + "'>\n<i class='fa fa-spin fa-spinner input-addon input-addon-right spinner'></i>\n<i class='search-icon w-icon-search'></i>\n</div>\n<div class='search-result-region'></div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<i class='" + ["toolbar-icon", "" + t(e(this.iconClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></i>\n<div class='group-title'>" + t(e(this.t("toolbar." + this.name))) + "</div>\n<menu class='dropdown-menu'></menu>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.icon && n.push("<div class='" + ["toolbar-tooltip-icon", "" + t(e(this.icon + "-icon"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                            n.push("<div class='toolbar-tooltip-text'>" + t(e(this.text)) + "</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='item-container'>\n<div class='item-icon'></div>\n<span class='menu-title'></span>\n<div class='drawing-controls'>\n<span class='drawing-control secondary-control waze-tooltip' data-toggle='tooltip'></span>\n<span class='drawing-control main-control waze-tooltip' data-toggle='tooltip'></span>\n</div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div id='search'></div>\n<div id='edit-buttons'></div>\n<div id='user-box-or-login-button-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='user-box-avatar'>\n<div class='user-box-avatar-container'>\n<img src='" + t(e(this.profileImageURL)) + "'>\n</div>\n</div>\n<div class='user-box-container'>\n<div class='user-box-header'>\n<a class='user-box-avatar-container' href='" + t(e(this.h.userProfileLink({
                                userName: this.userName
                            }))) + "' target='_blank'>\n<img src='" + t(e(this.profileImageURL)) + "'>\n</a>\n<span class='user-box-header-details'>\n<div class='user-box-level'>"),
                            this.isStaff ? n.push("" + t(e(this.t("user.info.staff_level_name")))) : n.push("" + t(e(this.t("user.info.level_name", {
                                level: this.normalizedLevel
                            })))),
                            n.push("</div>\n<div class='user-name'>"),
                            n.push("" + t(e(this.userName))),
                            n.push("</div>\n<div class='user-email'>"),
                            n.push("" + t(e(this.userEmail))),
                            n.push("</div>\n</span>\n</div>\n<div class='user-box-numbers'>\n<span class='number-box-container'>\n<span class='number-box-inner'>\n<div class='number'>"),
                            n.push("" + t(e(I18n.toNumber(this.totalPoints, {
                                precision: 0
                            })))),
                            n.push("</div>\n<div class='number-label'>"),
                            n.push("" + t(e(this.t("user.info.points")))),
                            n.push("</div>\n</span>\n</span>\n<span class='number-box-container'>\n<span class='number-box-inner'>\n<div class='number'>"),
                            n.push("" + t(e(I18n.toNumber(this.totalEdits, {
                                precision: 0
                            })))),
                            n.push("</div>\n<div class='number-label'>"),
                            n.push("" + t(e(this.t("user.info.edits")))),
                            n.push("</div>\n</span>\n</span>\n<span class='number-box-container'>\n<span class='number-box-inner'>\n<div class='number'>"),
                            n.push("" + t(e(I18n.toNumber(this.totalForumPosts, {
                                precision: 0
                            })))),
                            n.push("</div>\n<div class='number-label'>"),
                            n.push("" + t(e(this.t("user.info.posts")))),
                            n.push("</div>\n</span>\n</span>\n</div>\n<ul class='user-box-links'>\n<li>\n<a href='" + t(e(this.links.account)) + "' target='_blank'>"),
                            n.push("" + t(e(this.t("toolbar.user-box.account-settings")))),
                            n.push("</a>\n</li>\n<li>\n<a class='livemap-link' target='_blank'>"),
                            n.push("" + t(e(this.t("toolbar.user-box.livemap")))),
                            n.push("</a>\n</li>\n<li>\n<a href='" + t(e(this.links.editor)) + "'>"),
                            n.push("" + t(e(this.t("toolbar.user-box.editor")))),
                            n.push("</a>\n</li>\n<li>\n<a href='" + t(e(this.links.support)) + "' target='_blank'>"),
                            n.push("" + t(e(this.t("toolbar.user-box.support")))),
                            n.push("</a>\n</li>\n<li>\n<a class='js-logout-link'>"),
                            n.push("" + t(e(this.t("user.logout")))),
                            n.push("</a>\n</li>\n</ul>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='topbar'>\n<div class='location-info-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + t(e(this.operationText))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<span class='full-address'></span>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'>"),
                            i = 0,
                            r = (o = this.options).length; i < r; i++)
                            s = o[i],
                            n.push("<div class='option-container'>\n<input class='" + t(e(this.isEmpty(s) ? "empty" : void 0)) + "' id='" + t(e(this.optionToId(s))) + "' type='radio' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n</div>");
                        return n.push("<div class='option-container'>\n<input id='custom_description_radio' type='radio' value='" + t(e(this.CUSTOM_DESCRIPTION)) + "' name='" + t(e(this.name)) + "'>\n<label for='custom_description_radio'>"),
                            n.push("" + e(this.t("merge_places.custom_description"))),
                            n.push("</label>\n</div>\n<div class='text-container'>\n<textarea class='form-control'></textarea>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='selection-container'>\n<div class='fa-spin loader'>\n<div class='spinner'></div>\n</div>\n<div class='selection-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        return [].join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container images-selection selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'>"),
                            i = 0,
                            r = (o = this.options).length; i < r; i++)
                            s = o[i],
                            n.push("<div class='image-container'>\n<input id='" + t(e(this.optionToId(s))) + "' type='checkbox' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label class='image-label' for='" + t(e(this.optionToId(s))) + "'>\n<img class='image-preview' src='" + t(e(this.getUrlById(s))) + "'>\n</label>\n</div>");
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<div class='merge-landmark-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<div class='modal-title'>\n<h3>"),
                            t.push("" + e(this.t("merge_places.title", {
                                count: this.placesCount,
                                mainPlaceName: this.mainPlaceName
                            }))),
                            t.push("</h3>\n</div>\n</div>\n<div class='modal-body'>\n<div class='instruction'>"),
                            t.push("" + e(this.t("merge_places.instruction", {
                                count: this.placesCount,
                                mainPlaceName: this.mainPlaceName
                            }))),
                            t.push("</div>\n<div class='name-region'></div>\n<div class='description-region'></div>\n<div class='address-region'></div>\n<div class='lockRank-region'></div>\n<div class='categories-region'></div>\n<div class='alert alert-gray parking-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.parking_message"))),
                            t.push("</div>\n<div class='alert alert-gray brand-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.gas_message"))),
                            t.push("</div>\n<div class='brand-region'></div>\n<div class='alert alert-danger brand-invalid-error'>"),
                            t.push("" + e(this.t("edit.merge_landmark.invalid_brand"))),
                            t.push("</div>\n<div class='externalProviderIDs-region'></div>\n<div class='openingHours-region'></div>\n<div class='alert alert-danger overlapping-hours-message'>"),
                            t.push("" + e(this.t("edit.merge_landmark.overlapping_hours_message"))),
                            t.push("</div>\n<div class='url-region'></div>\n<div class='phone-region'></div>\n<div class='services-region'></div>\n<div class='images-region'></div>\n<div class='parking-attributes'>\n<div class='parkingType-region'></div>\n<div class='hasTBR-region'></div>\n<div class='canExitWhileClosed-region'></div>\n<div class='costType-region'></div>\n<div class='paymentType-region'></div>\n<div class='estimatedNumberOfSpots-region'></div>\n<div class='lotType-region'></div>\n</div>\n</div>\n<div class='modal-footer'>\n<button class='do-close waze-btn waze-btn-smaller waze-btn-white'>"),
                            t.push("" + e(this.t("merge_places.actions.cancel"))),
                            t.push("</button>\n<button class='do-apply waze-btn waze-btn-blue waze-btn-smaller'>"),
                            t.push("" + e(this.t("merge_places.actions.merge"))),
                            t.push("</button>\n</div>\n</div>\n</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'></div>"),
                            i = 0,
                            r = (o = this.options).length; i < r; i++)
                            s = o[i],
                            n.push("<div class='" + ["option-container", "" + t(e(this.isEmpty(s) ? "empty" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input id='" + t(e(this.optionToId(s))) + "' type='checkbox' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n<input class='main-button' id='" + t(e(this.optionToId(s) + "_radio")) + "' type='radio' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label class='main-label' for='" + t(e(this.optionToId(s) + "_radio")) + "' data-main-text='" + t(e(this.t("merge_places.name.main"))) + "' data-set-main-text='" + t(e(this.t("merge_places.name.set_main"))) + "'></label>\n</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container selection-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'>"),
                            i = 0,
                            r = (o = this.options).length; i < r; i++)
                            s = o[i],
                            n.push("<div class='option-container'>\n<input id='" + t(e(this.optionToId(s))) + "' type='checkbox' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='selection-container waze-radio-container'>"),
                            this.title && (n.push("<div class='title'>"),
                                n.push("" + e(this.title)),
                                n.push("</div>")),
                            n.push("<div class='options-container'></div>"),
                            i = 0,
                            r = (o = this.options).length; i < r; i++)
                            s = o[i],
                            n.push("<div class='option-container'>\n<input class='" + t(e(this.isEmpty(s) ? "empty" : void 0)) + "' id='" + t(e(this.optionToId(s))) + "' type='radio' value='" + t(e(this.optionToValue(s))) + "' name='" + t(e(this.name)) + "'>\n<label for='" + t(e(this.optionToId(s))) + "'>"),
                            n.push("" + e(this.getOptionLabel(s))),
                            n.push("</label>\n</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='merge-item'>\n<div class='icon-container'>\n<div class='" + ["icon", "" + t(e(this.categoryClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='badge-tooltip error-badge lock' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.lock_tooltip", {
                                rank: this.lockRank
                            }))) + "'></div>\n<div class='badge-tooltip error-badge purs' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.purs_tooltip", {
                                count: this.pursCount
                            }))) + "'></div>\n<div class='badge-tooltip error-badge new-badge' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.merge_landmark.new_landmark_tooltip"))) + "'></div>\n</div>\n<div class='point-icon'></div>\n<div class='polygon-icon'></div>\n<div class='do-remove'></div>\n<div class='content'>\n<div class='landmark-name'>"),
                            n.push("" + e(this.name)),
                            n.push("</div>\n<div class='details'>"),
                            this.createdBy && n.push("<div class='text'>" + e(this.safe_t("edit.merge_landmark.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            n.push("</div>\n</div>\n<div class='do-merge waze-btn waze-btn-white'>"),
                            n.push("" + e(this.t("edit.merge_landmark.merge"))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='merge-landmarks separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'></span>\n</div>\n<div class='alert alert-gray header-alert pending-changes-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.unresolved_message")))),
                            n.push("</div>\n<div class='ad-lock-alert alert alert-gray header-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.ad_locked")))),
                            n.push("</div>\n<div class='alert alert-gray header-alert lock-level-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.lock_message")))),
                            n.push("</div>\n<div class='alert alert-gray header-alert parking-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.parking_message")))),
                            n.push("</div>\n<div class='alert alert-gray count-alert header-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.count_message", {
                                count: this.maxLandmarksCount
                            })))),
                            n.push("</div>\n<div class='alert alert-gray distance-alert header-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.distance_message")))),
                            n.push("</div>\n<div class='alert alert-gray header-alert residential-alert'>"),
                            n.push("" + t(e(this.t("edit.merge_landmark.residential_message")))),
                            n.push("</div>\n<div class='tab-content'>\n<div class='active tab-pane'>\n<div id='mergeLandmarksCollection'></div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            null != this.updatedBy && t.push("<li>" + e(this.safe_t("edit.updated", {
                                time: this.h.dateOnlyString(this.updatedOn),
                                user: this.h.userProfile(this.updatedBy)
                            })) + "</li>"),
                            null != this.createdBy && t.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</li>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", {
                                createdBy: this.createdBy,
                                updatedBy: this.updatedBy
                            }))),
                            this.id && n.push("<li>" + t(e(this.t("edit.id", {
                                num: this.id
                            }))) + "</li>"),
                            n.push("</ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='alt-street' data-id='" + t(e(this.id)) + "'>\n<div class='city-name'>" + t(e(this.cityName)) + "</div>\n<div class='street-name'>" + t(e(this.streetName)) + "</div>\n<a class='alt-street-delete' href='#'></a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='alt-street-form-template new-alt-street'>\n<div class='alt-street-block'>"),
                            n.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            n.push("<div class='city-block form-group toggleable-input'>\n<label class='control-label'>" + t(e(this.t("edit.address.city"))) + "</label>\n<div class='controls-container'>"),
                            i = _.uniqueId("alt_street_empty_city"),
                            n.push("<input class='alt-address empty-city' id='" + t(e(i)) + "' type='checkbox'>\n<label for='" + t(e(i)) + "'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n<div class='city-container'>\n<label></label>\n<input class='alt-city-name form-control' type='text' autocomplete='off' title='" + t(e(this.t("edit.address.city"))) + "' maxlength='100'>\n</div>\n</div>\n<div class='form-group street-block toggleable-input'>\n<label class='control-label'>" + t(e(this.t("edit.address.street"))) + "</label>\n<input class='alt-street-name form-control' type='text' autocomplete='off' title='" + t(e(this.t("edit.address.street"))) + "' maxlength='100' required>\n</div>\n<a class='alt-street-delete' href='#'></a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='clearfix preview'>\n<div class='full-address-container'>\n<span class='full-address'></span>\n<div class='quota-tooltip waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.address.quota_exceeded", {
                                quota: this.maxAllowedStreetNamesChanges
                            }))) + "'></div>\n</div>"),
                            null != this.altStreets && this.altStreets.length > 0) {
                            for (n.push("<ul class='alt-street-list list-unstyled'>"),
                                r = 0,
                                s = (o = this.altStreets.models).length; r < s; r++)
                                i = o[r],
                                n.push("<li class='alt-street'>"),
                                n.push("" + t(e(i.get("streetName") + ", " + (i.get("cityName") || this.t("edit.address.no_city"))))),
                                n.push("</li>");
                            n.push("</ul>")
                        }
                        return n.push("</div>\n<form class='address-form clearfix inner-form'>"),
                            n.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            this.showStreetInput && (n.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                                n.push("" + t(e(this.t("edit.address.street")))),
                                n.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-street' id='empty-street' type='checkbox'>\n<label for='empty-street'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='" + ["controls", "" + t(e(this.enableTTS ? "input-group" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='form-control street-name tts-input' autocomplete='off' type='text' maxlength='" + t(e(this.MAX_LENGTH.STREET_NAME)) + "'>"),
                                this.enableTTS && n.push("<span class='input-group-btn tts-playback-region'></span>"),
                                n.push("</div>\n</div>")),
                            this.showHouseNumberInput && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.houseNumber"))) + "</label>\n<div class='controls'>\n<input class='form-control house-number' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.HOUSE_NUMBER)) + "' type='text'>\n</div>\n</div>"),
                            n.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("edit.address.city")))),
                            n.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-city' id='empty-city' type='checkbox'>\n<label for='empty-city'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls'>"),
                            this.showCitySelection ? n.push("<select class='city-id form-control' required></select>") : n.push("<input class='city-name form-control' type='text' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.CITY_NAME)) + "' pattern='" + t(e(this.CITY_NAME_PATTERN)) + "'>"),
                            n.push("</div>\n</div>"),
                            this.showStatesSelection && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.state"))) + "</label>\n<div class='controls'>\n<select class='form-control state-id' required></select>\n</div>\n</div>"),
                            n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.country"))) + "</label>\n<div class='controls'>\n<select class='country-id form-control' required></select>\n</div>\n</div>"),
                            this.showAltStreets && n.push("<div class='add-alt-street-form'>\n<div class='alt-streets'></div>\n<div class='alt-streets-actions'>\n<a class='add-alt-street-btn' href='#'>" + t(e("+ " + this.t("edit.segment.actions.add_alt_street"))) + "</a>\n</div>\n<div class='new-alt-streets'></div>\n</div>"),
                            n.push("<div class='action-buttons'>\n<button class='save-button waze-btn waze-btn-blue waze-btn-smaller' type='submit'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='archive-panel'>\n<div class='header'>\n<a class='close-panel'></a>"),
                            n.push("" + t(e(this.t("archive_panel.title")))),
                            n.push("</div>\n<div class='body'>"),
                            null != this.fromAddress && (n.push("<div class='from-address'>\n<strong>" + t(e(this.t("archive_panel.from") + ":")) + "</strong>"),
                                n.push("" + t(e(this.formatAddress(this.fromAddress)))),
                                n.push("</div>")),
                            null != this.toAddress && (n.push("<div class='to-address'>\n<strong>" + t(e(this.t("archive_panel.to") + ":")) + "</strong>"),
                                n.push("" + t(e(this.formatAddress(this.toAddress)))),
                                n.push("</div>")),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            _.isEmpty(this.sessions))
                            n.push("<p class='message'>\n<strong>"),
                            n.push("" + t(e(this.t("user.drives.no_drives")))),
                            n.push("</strong>\n</p>\n<p class='message'>"),
                            n.push("" + t(e(this.t("user.drives.no_drives_explanation")))),
                            n.push("</p>");
                        else {
                            for (n.push("<p class='message'>"),
                                n.push("" + t(e(this.t("user.drives.subtitle") + ":"))),
                                n.push("</p>\n<ul class='result-list' id='archive-sessions'>"),
                                i = 0,
                                r = (s = this.sessions).length; i < r; i++)
                                o = s[i],
                                n.push("<li class='" + ["result", "session", "" + t(e(o.hasFullSession ? "session-available" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-id='" + t(e(o.id)) + "'>\n<p class='title'>" + t(e(this.h.localizeDateString("date.formats.long_with_time", o.startTime))) + "</p>\n<p class='additional-info clearfix'>\n<span>" + t(e(this.h.lengthString(o.totalRoadMeters))) + "</span>\n<span>" + t(e(this.h.durationString(o.startTime, o.endTime))) + "</span>\n</p>\n</li>");
                            n.push("</ul>")
                        }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='big-junction separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.big_junction.title"))) + "</span>\n</div>\n<div class='alert alert-danger header-alert size-alert'>" + t(e(this.t("edit.big_junction.validation_errors.area_too_big", {
                                size: this.MAX_POLYGON_SIZE_DEGREES
                            }))) + "</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='big-junction-edit-general'>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text'>\n</div>\n</div>\n</form>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.entrances"))) + "</label>\n<div class='junction-entry-list-region'></div>\n</div>\n<div class='form-group side-panel-section'>\n<div class='controls junction-actions'>\n<button class='action-button select-short-segments waze-btn waze-btn-smaller waze-btn-white'>" + t(e(this.t("edit.big_junction.select_segments"))) + "</button>\n</div>\n</div>\n<div class='lock-edit'></div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='segment-count'></li>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li class='feature-id'></li>\n</ul>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='camera separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.camera.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='camera-edit-general'></div>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.type_label"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='type'></select>\n</div>\n</div>\n<div class='controls-container form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.speed")))),
                            n.push("" + t(e(this.h.speedString()))),
                            n.push("</label>\n<div class='controls'>\n<input class='form-control' type='number' name='speed' maxlength='4'>\n</div>\n</div>\n<div class='lock-edit'></div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li class='feature-id'></li>\n</ul>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div style='display:none'>\n<input type='text' name='PreventChromeAutocomplete' autocomplete='address-level4'>\n</div>"),
                            e.join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            _.isEmpty(this.areas))
                            n.push("<p class='message'>" + t(e(this.t("user.areas.no_areas"))) + "</p>");
                        else {
                            for (n.push("<p class='message'>" + t(e(this.t("user.areas.subtitle"))) + "\n<i class='w-icon-info' id='permissions-info'></i>\n</p>\n<ul class='result-list'>"),
                                r = 0,
                                s = (o = this.areas).length; r < s; r++)
                                i = o[r],
                                n.push("<li class='area result' data-index='" + t(e(i.get("num"))) + "'>"),
                                i.get("type") === this.EDITABLE_AREA_TYPES.DRIVE ? n.push("<p class='title'>" + t(e(this.t("user.areas.area", {
                                    num: i.get("num") + 1
                                }))) + "</p>") : n.push("<p class='title'>" + t(e(this.t("user.areas.managed_area"))) + "</p>"),
                                n.push("<p class='additional-info clearfix'>\n<span>" + t(e(this.h.areaString(i.get("area")))) + "</span>\n</p>\n</li>");
                            n.push("</ul>")
                        }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='focus-buttons'>\n<a class='focus' title='" + t(e(this.t("geolocation.focus-btn"))) + "'></a>\n<a class='street-view-btn' title='" + t(e(this.t("geolocation.street-view-btn"))) + "'></a>\n<a class='street-view-tooltip tooltip' title='" + t(e(this.t("geolocation.street-view-btn-disabled"))) + "' data-toggle='tooltip' data-placement='bottom'></a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["content", "" + t(e("valid-" + this.valid + " forced-" + this.forced))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='uneditable-number'>" + t(e(this.number)) + "</div>\n<div class='drag-handle'></div>\n<div class='" + ["input-wrapper", "" + t(e("side-" + (this.isLeft ? "left" : "right")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='number-preview'>" + t(e(this.number)) + "</div>\n<input class='number' value='" + t(e(this.number)) + "' type='text' placeholder='" + t(e(this.t("edit.segment.house_numbers.no_number"))) + "'>\n<div class='delete-button'>x</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='instruction-override-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<h3>" + t(e(this.t("instruction_override.title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control opcode-select'></select>\n</div>\n<div class='controls'>\n<button class='apply-button btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, n, i, r, s, o, a, l, u, c;
                        for (s in n = this.__htmlEscape,
                            t = this.__cleanValue,
                            i = [],
                            u = this.groups)
                            if (e.call(u, s)) {
                                for (r = u[s],
                                    i.push("<section class='shortcut-action-group'>"),
                                    null != r.members && i.push("<h2>" + n(t(this.t("keyboard_shortcuts.groups." + s + ".description"))) + "</h2>"),
                                    o = 0,
                                    a = (c = r.members).length; o < a; o++)
                                    (l = c[o]).changeable && (i.push("<p class='" + ["shortcut-action", "" + n(t(l.enabled ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-action='" + n(t(l.id)) + "'>"),
                                        null == l.shortcut || _.isEmpty(l.shortcut) ? i.push("<kbd class='no-shotcut'>None</kbd>") : (i.push("" + t(this.h.shortcutMaskToKeys(l.shortcut))),
                                            i.push("<kbd>" + n(t(this.h.getShortcutKey(l.shortcut))) + "</kbd>")),
                                        i.push("" + n(t(this.t("keyboard_shortcuts.groups." + s + ".members." + l.name)))),
                                        i.push("</p>"));
                                i.push("</section>")
                            }
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div id='shortcuts-dialog'>\n<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<button class='close' data-dismiss='modal' type='button'>×</button>\n<h3 class='modal-title'>" + t(e(this.t("keyboard_shortcuts.title"))) + "</h3>\n</div>\n<div class='modal-body'>"),
                            n.push("" + e(this.renderPartial("templates/keyboard_shortcuts/list", {
                                groups: this.groups
                            }))),
                            n.push("</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.lock"))) + "</label>\n<div class='controls'>\n<div class='form-control lock-level-displayer waze-radio-container'>"),
                            n.push("" + e(this.h.radio({
                                label: " ",
                                name: "lockRankDisplay",
                                enable: !1,
                                forceChecked: !0
                            }))),
                            n.push("</div>\n<div class='form-control lock-level-selector waze-radio-container'>"),
                            n.push("" + e(this.h.radio({
                                label: this.t("edit.multiple_values"),
                                value: "MIXED",
                                name: "lockRank"
                            }))),
                            n.push("" + e(this.h.radio({
                                label: " ",
                                className: "automatic",
                                value: "AUTO",
                                name: "lockRank"
                            }))),
                            r = i = 0,
                            s = this.maxRankToDisplay; 0 <= s ? i <= s : i >= s; r = 0 <= s ? ++i : --i)
                            n.push("" + e(this.h.radio({
                                label: this.h.formatRank(r),
                                value: r,
                                name: "lockRank"
                            })));
                        return n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='footer-message map-message sandbox-message'>\n<div class='map-message-icon'></div>\n<div class='title'>" + t(e(this.t("play_mode.title"))) + "</div>\n<div class='description'>" + t(e(this.t("play_mode.description"))) + "</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        return [].join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='node separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.node.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='node-edit-general'>\n<div class='form-group side-panel-section'>\n<div class='big-junction-error'>\n<span class='error'>" + t(e(this.t("edit.node.permissions.big_junction.title"))) + "</span>"),
                            n.push("" + t(e(this.t("edit.node.permissions.big_junction.description")))),
                            n.push("</div>\n<div class='connections-edit'>\n<p class='connectionStatus'></p>\n<button class='allow-connections btn btn-default'>" + t(e(this.t("edit.node.turns.allow_all"))) + "</button>\n<button class='btn btn-default disallow-connections'>" + t(e(this.t("edit.node.turns.disallow_all"))) + "</button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='feature-id'></li>\n</ul>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-content'>\n<div class='modal-header'>\n<h3 class='modal-title'>" + t(e(this.t("edit.landmark.opening_hours.add_title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<form class='add-opening-hour' action='#' method='post'>\n<div class='days section'>"),
                            n.push("" + e(this.renderPartial("templates/util/day-checkboxes"))),
                            n.push("" + e(this.renderPartial("templates/util/toggle-checkboxes"))),
                            n.push("</div>\n<div class='hours section'>\n<div class='clearfix'>\n<div class='labels'>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='on' checked='" + t(e(!1)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.all_day")))),
                            n.push("</label>\n</div>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='off' checked='" + t(e(!0)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.from") + ":"))),
                            n.push("</label>\n</div>\n</div>\n<div class='inputs'>\n<div class='col-xs-4'>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control from-time time-selector' type='text' name='fromTime'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='col-xs-4'>\n<div class='pull-left to-label'>"),
                            n.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.to") + ":"))),
                            n.push("</div>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control time-selector to-time' type='text' name='toTime'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class='validation-errors'></div>\n<div class='bottom'>\n<button class='waze-btn waze-btn-blue waze-btn-smaller'>" + t(e(this.t("edit.add"))) + "</button>\n<button class='cancel-button waze-btn waze-btn-smaller waze-btn-transparent'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</form>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + t(e(this.openingHourFormatted))),
                            this.isEditable && n.push("<a class='delete' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<div class='control-label'>" + t(e(this.t("edit.landmark.opening_hours.title"))) + "</div>\n</div>\n<ul class='list'></ul>"),
                            this.isEditable && n.push("<a class='add waze-btn waze-btn-white' href='#'>" + t(e(this.t("edit.landmark.opening_hours.add"))) + "</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["actions", "approve-intent-" + t(e(this.getApproveActionIntent())) + " " + t(e(this.model.get("updateType")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            this.model.isPlaceAdLocked() ? n.push("<div class='alert alert-danger'>" + t(e(I18n.t("venues.update_requests.panel.needs_staff_approval"))) + "</div>") : this.model.isEditableByUser() ? (n.push("<form class='controls-container'>"),
                                this.isOpened() ? (n.push("" + e(this.h.radio({
                                        label: this.getRejectActionName(),
                                        name: "approved",
                                        dataType: "boolean",
                                        value: !1,
                                        currentValue: this.model.get("approved"),
                                        className: "reject"
                                    }))),
                                    n.push("" + e(this.h.radio({
                                        label: this.getApproveActionName(),
                                        name: "approved",
                                        dataType: "boolean",
                                        value: !0,
                                        currentValue: this.model.get("approved"),
                                        className: "approve"
                                    })))) : this.isApproved() ? (n.push("<div class='approved status'>"),
                                    n.push("" + e(this.getApprovedLabel())),
                                    n.push("</div>")) : this.isRejected() && (n.push("<div class='rejected status'>"),
                                    n.push("" + e(this.getRejectedLabel())),
                                    n.push("</div>")),
                                n.push("</form>")) : n.push("<div class='alert alert-danger'>" + t(e(this.getNoPermissionsMessage())) + "</div>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<div class='add-details'>"),
                            this.dateAdded && t.push("<div class='date small'>" + e(this.safe_t("venues.update_requests.panel.added_on", {
                                added_on_title: this.t("venues.update_requests.panel." + this.type),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"),
                            !this.hideUserDetails && this.createdBy && t.push("<div class='small user'>" + e(this.safe_t("venues.update_requests.panel.added_by", {
                                added_by_title: this.t("venues.update_requests.panel.added_by_title"),
                                username: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return e = this.__cleanValue,
                            t = [],
                            n = this.model.getAddedImage(),
                            t.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: n,
                                IMAGE_SIZE: this.IMAGE_SIZE
                            }))),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !1,
                                dateAdded: n.get("date"),
                                createdBy: n.get("creatorUserId")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a, l, u, c;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.shouldShowName() && n.push("<div class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</div>"),
                            n.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n<div class='images'>\n<div class='carousel slide' id='" + t(e(this.getCarouselUniqueId())) + "' data-ride='carousel' data-interval='false'>\n<div class='carousel-inner' role='listbox'>"),
                            s = i = 0,
                            a = (u = this.getNewPlaceImages()).length; i < a; s = ++i)
                            r = u[s],
                            n.push("<div class='" + ["item", "" + t(e(0 === s ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: r,
                                IMAGE_SIZE: this.IMAGE_SIZE
                            }))),
                            n.push("</div>");
                        if (n.push("</div>"),
                            this.shouldShowCarousel()) {
                            for (n.push("<ol class='carousel-indicators list-unstyled'>"),
                                s = o = 0,
                                l = (c = this.getNewPlaceImages()).length; o < l; s = ++o)
                                r = c[s],
                                n.push("<li class='" + t(e(0 === s ? "active" : void 0)) + "' data-target='" + t(e("#" + this.getCarouselUniqueId())) + "' data-slide-to='" + t(e(s)) + "'></li>");
                            n.push("</ol>")
                        }
                        return n.push("</div>\n</div>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            this.isGeometry)
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.hover")))),
                            n.push("<div class='current location-button'>"),
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.current")))),
                            n.push("<i class='fa fa-crosshairs'></i>\n</div>\n<div class='location-button suggested'>"),
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.suggested")))),
                            n.push("<i class='fa fa-crosshairs'></i>\n</div>");
                        else if ("images" === this.fieldName) {
                            for (n.push("<div class='removed-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>\n<div class='remove-images'>"),
                                i = 0,
                                s = (o = this.getRemovedImages()).length; i < s; i++)
                                r = o[i],
                                n.push("<img class='image-preview' src='" + t(e(r.getUrl(this.IMAGE_SIZE.WEB))) + "' data-image-id='" + t(e(r.id)) + "'>");
                            n.push("</div>")
                        } else
                            n.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this)));
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.showChangeList)
                            if (this.isExternalProvider)
                                n.push("<div class='external-providers-view'></div>");
                            else {
                                for (n.push("<ul class='diff-list list-unstyled'>"),
                                    i = 0,
                                    s = (o = this.changeList).length; i < s; i++)
                                    r = o[i],
                                    n.push("<li class='" + ["diff", "" + t(e(r.changeType.toLowerCase()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<span class='name'>" + t(e(r.name)) + "</span>\n</li>");
                                n.push("</ul>")
                            }
                        else
                            this.currentValue && (this.removing ? n.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>") : n.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.current"))) + "</div>"),
                                n.push("<div class='current'>" + t(e(this.currentValue)) + "</div>")),
                            this.removing || n.push("<div class='suggested-title'>" + t(e(this.t("venues.update_requests.panel.change.suggested"))) + "</div>\n<div class='suggested'>" + t(e(this.suggestedValue)) + "</div>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.parking.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<h3>" + t(e(I18n.t("venues.update_requests.panel.place_deleted"))) + "</h3>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='anchor fa fa-crosshairs'></div>\n<div class='id span'>" + t(e(this.uuid)) + "</div>\n<a class='external-provider-link name' href='" + t(e(this.url)) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.name)) + "</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<ul class='diff-list external-providers-list list-unstyled'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            n.push("<div class='body'>\n<div class='scrollable'>\n<div class='request-details'>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                            this.showImage ? (n.push("" + e(this.renderPartial("templates/place_updates/image", {
                                    image: this.image,
                                    IMAGE_SIZE: this.IMAGE_SIZE
                                }))),
                                this.image && n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "picture_added_on_title",
                                    hideUserDetails: !this.showAddingUser,
                                    dateAdded: this.image.get("date"),
                                    createdBy: this.image.get("creatorUserId")
                                })))) : n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !this.showAddingUser,
                                dateAdded: this.venue.attributes.createdOn
                            }))),
                            n.push("</div>\n<div class='changes'>\n<div class='small'>" + t(e(I18n.t("venues.update_requests.panel.flag_reason"))) + "</div>\n<h3>" + t(e(this.t("venues.update_requests.flags." + this.model.get("type")))) + "</h3>"),
                            this.showComment && n.push("<div class='flag-comment'>" + t(e(this.model.get("comment"))) + "</div>"),
                            this.model.get("createdBy") && (n.push("<div class='reported-by small'>"),
                                n.push("" + e(this.safe_t("edit.reported", {
                                    time: this.h.dateOnlyString(this.model.get("dateAdded")),
                                    user: this.h.userProfile(this.model.get("createdBy"))
                                }))),
                                n.push("</div>")),
                            n.push("</div>"),
                            this.showDuplicateVenue && (n.push("<div class='duplicate request-details'>"),
                                n.push("" + e(this.renderPartial("templates/place_updates/place_details", _.defaults({
                                    venue: this.model.getDuplicateVenue()
                                }, this)))),
                                n.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "added_on_title",
                                    hideUserDetails: !0,
                                    dateAdded: this.model.getDuplicateVenue().attributes.createdOn
                                }))),
                                n.push("</div>")),
                            n.push("</div>"),
                            n.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.image ? n.push("<a>\n<img class='image-preview' src='" + t(e(this.image.getUrl(this.IMAGE_SIZE.MOBILE))) + "' data-image-id='" + t(e(this.image.id)) + "'>\n</a>") : n.push("<div class='missing-image'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-dialog venue-image-dialog'>\n<div class='modal-content'>\n<div class='" + ["prev-button", "waze-icon-full-arrow-left", "" + t(e(this.hasPrev ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='" + ["next-button", "waze-icon-full-arrow-right", "" + t(e(this.hasNext ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='modal-header'>\n<div class='close' data-dismiss='modal' type='button'>×</div>\n<div class='venue-name'>" + t(e(this.h.formatVenueName(this.venueName))) + "</div>\n</div>\n<div class='modal-body'>\n<img src='" + t(e(this.imageUrl)) + "'>\n<div class='details'>\n<div class='date small'>" + e(this.safe_t("venues.images.added_on", {
                                added_on_title: this.h.contentTag("strong", this.t("venues.images.added_on_title")),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"),
                            this.addingUserId && n.push("<div class='small user'>" + e(this.safe_t("venues.images.added_by", {
                                added_by_title: this.h.contentTag("strong", this.t("venues.images.added_by_title")),
                                username: this.h.userProfile(this.addingUserId)
                            })) + "</div>"),
                            this.showDelete && n.push("<div class='delete-button waze-icon-trash'>" + t(e(this.t("venues.images.delete"))) + "</div>"),
                            n.push("</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            t.push("<div class='body'>\n<div class='scrollable'>"),
                            this.hidePlaceDetails || (t.push("<div class='request-details'>"),
                                t.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                                t.push("</div>")),
                            t.push("<div class='changes'>"),
                            t.push("" + e(this.renderPartial(this.getChangesTemplate(), this))),
                            t.push("</div>\n</div>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='place-update'></div>\n<div class='navigation'>"),
                            this.showNextButton ? (n.push("<div class='next waze-plain-btn'>"),
                                n.push("" + t(e(this.nextButtonString))),
                                n.push("</div>")) : this.showNextVenueButton ? (n.push("<div class='next-venue waze-plain-btn'>"),
                                n.push("" + t(e(this.t("venues.update_requests.panel.next_venue")))),
                                n.push("</div>")) : (n.push("<div class='done waze-plain-btn'>"),
                                n.push("" + t(e(this.t("venues.update_requests.panel.done")))),
                                n.push("</div>")),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<a class='close-panel'></a>\n<div class='header'>\n<div class='dot'></div>\n<div class='main-title'>" + t(e(this.t("venues.update_requests.panel.title.MAIN_TITLE"))) + "</div>\n<div class='title'>" + t(e(this.getTitle()))),
                            n.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            n.push("</div>\n<div class='reported'></div>"),
                            this.showDebug && n.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.h.formatVenueUpdateRequestId(this.model.id)
                            }))) + "</div>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='place-details'>"),
                            this.shouldShowName() && n.push("<h3 class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</h3>"),
                            n.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<ul class='changed-fields list-unstyled'></ul>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='settings side-panel-section'>\n<h4>" + t(e(this.t("user.prefs.subtitle"))) + "</h4>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.two_way"), "twoWayRoad", "on"))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.turns_allowed"), "turnsAllowed", "on"))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.require_deselect"), "requireDeselect", "on"))),
                            n.push("</div>\n</div>\n<div class='form-group'>\n<div class='controls'>\n<label class='control-label'>" + t(e(this.t("user.prefs.units.title"))) + "</label>\n<div class='btn-group units-group waze-radio-container' data-type='boolean'>\n<input class='units-check' id='settings-units-imperial' type='radio' name='units-radio' value='true'>\n<label for='settings-units-imperial'>"),
                            n.push("" + t(e(this.t("user.prefs.units.imperial")))),
                            n.push("</label>\n<input class='units-check' id='settings-units-metric' type='radio' name='units-radio' value='false'>\n<label for='settings-units-metric'>"),
                            n.push("" + t(e(this.t("user.prefs.units.metric")))),
                            n.push("</label>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("envs.title")))),
                            n.push("</label>\n<div class='controls' id='env-select'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("user.prefs.language")))),
                            n.push("</label>\n<select class='form-control language-select'>"),
                            i = 0,
                            s = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"].length; i < s; i++)
                            r = ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"][i],
                            n.push("<option value='" + t(e(r)) + "' selected='" + t(e(r === I18n.currentLocale())) + "'>"),
                            n.push("" + t(e({
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español (América Latina)",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "ไทย"
                            } ["" + r]))),
                            n.push("</option>");
                        return n.push("</select>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("user.prefs.turn_arrows")))),
                            n.push("</label>\n<div class='controls-container'>"),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.spread_turn_arrows"), "spreadTurnArrows", "on"))),
                            n.push("" + e(this.h.checkbox(this.t("user.prefs.show_transparent_turn_arrows"), "showTransparentTurnArrows", "on"))),
                            n.push("</div>\n</div>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='restricted-driving-area separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.restricted_driving_area.title"))) + "</span>\n</div>\n<form class='attributes-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.restricted_driving_area.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control restricted-driving-area-name' type='text' autocomplete='off' name='name'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.restricted_driving_area.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>\n<div class='form-group restriction-editing'>\n<label class='control-label'>" + t(e(this.t("edit.restricted_driving_area.fields.restriction"))) + "</label>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-white'></button>\n</div>\n<div class='lock-edit'></div>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li class='feature-id'></li>\n</ul>\n</form>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<label class='control-label'>" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "</label>\n<div class='controls'>\n<div class='controls-container'>"),
                            (this.segment.mixed.fwdDirection || this.segment.attributes.fwdDirection) && n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "fwdSpeedCamera"
                            }))),
                            n.push("</div>\n<div class='controls-container'>"),
                            (this.segment.mixed.revDirection || this.segment.attributes.revDirection) && n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "revSpeedCamera"
                            }))),
                            n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='hide-walking-trail'>\n<div class='form-group'>\n<div class='hint routing-road-type-message'></div>\n<div class='controls'>\n<div class='controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "unpaved"
                            }))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "tunnel"
                            }))),
                            n.push("</div>\n<div class='controls-container headlights-reminder'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "headlights",
                                disabledTooltip: this.t("objects.common.rank_too_low")
                            }))),
                            n.push("</div>\n<div class='controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "nearbyHOV"
                            }))),
                            n.push("<i class='waze-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.segment.tooltips.nearbyHOV"))) + "'></i>\n</div>\n<div class='beacon-checkbox controls-container'>"),
                            n.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                attribute: "beacons",
                                disabledTooltip: this.t("edit.segment.tooltips.beacons_disabled")
                            }))),
                            n.push("</div>\n</div>\n</div>\n<div class='form-group routing-road-type-select'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='routingRoadType'></select>\n</div>\n</div>\n<div class='form-group toll-road-message'>\n<i class='waze-tooltip'></i>\n<span>" + t(e(this.t("edit.segment.fields.toll"))) + "</span>\n</div>\n<div class='form-group mixed-toll-road-message'>\n<i class='waze-tooltip'></i>\n<span>" + t(e(this.t("edit.segment.fields.mixed_toll"))) + "</span>\n</div>\n<div class='form-group restriction-editing'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.restriction"))) + "</label>\n<div class='restriction-list'>\n<div>\n<a class='restriction-count' href='#' data-restriction-type='driving'>\n<span class='number'></span>\n<span class='title'>" + t(e(this.t("edit.segment.restrictions.driving_restrictions"))) + "</span>\n</a>\n</div>\n<div>\n<a class='restriction-count' href='#' data-restriction-type='pickup'>\n<span class='number'></span>\n<span class='title'>" + t(e(this.t("edit.segment.restrictions.pickup_restrictions"))) + "</span>\n</a>\n</div>\n</div>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-white'></button>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.direction"))) + "</label>\n<div class='controls waze-radio-container'>"),
                            n.push("" + e(this.h.directionRadio(-1))),
                            n.push("" + e(this.h.directionRadio(3))),
                            n.push("" + e(this.h.directionRadio(1))),
                            n.push("" + e(this.h.directionRadio(2))),
                            n.push("" + e(this.h.directionRadio(0))),
                            n.push("</div>\n</div>\n<div class='form-group speed-limits'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.speed_limit"))) + "</label>\n<div class='clearfix controls speed-limit'>"),
                            n.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                direction: "fwd"
                            }))),
                            n.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                direction: "rev"
                            }))),
                            n.push("</div>\n</div>\n</div>\n<div class='lock-edit'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.level"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='level'></select>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a, l, u;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='segment separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.segment.title", {
                                count: this.numSegments
                            }))) + "</span>\n</div>\n<div class='inconsistent-direction segment-alert'>\n<i class='fa fa-info-circle'></i>"),
                            n.push("" + t(e(this.t("edit.segment.alerts.op_direction")))),
                            n.push("</div>\n<div class='inconsistent-driving-types segment-alert'>\n<i class='fa fa-info-circle'></i>"),
                            n.push("" + t(e(this.t("edit.segment.alerts.different_driving_types")))),
                            n.push("</div>\n<div class='segment-details'>\n<span class='error'>" + t(e(this.segmentErrorTitle)) + "</span>"),
                            n.push("" + t(e(this.segmentErrorDescription))),
                            n.push("</div>\n<section class='tabs-container'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#segment-edit-general'>" + t(e(this.t("edit.segment.tabs.general"))) + "</a>\n</li>\n<li>\n<a class='closures-tab' data-toggle='tab' href='#segment-edit-closures'>"),
                            n.push("" + t(e(this.t("edit.segment.tabs.closures")))),
                            n.push("</a>\n</li>\n<li class='lanes-tab-list-item'>\n<a class='lanes-tab' data-toggle='tab' href='#segment-edit-lanes'>"),
                            n.push("" + t(e(this.t("edit.segment.tabs.lanes")))),
                            n.push("</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='segment-edit-general'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.address"))) + "</label>\n<div class='address-edit'></div>\n<form class='attributes-form side-panel-section'>\n<div class='junction-exit-list-region'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.road_type"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='roadType'></select>\n</div>\n</div>"),
                            n.push("" + e(this.renderPartial("templates/segment/edit-panel-attributes-form", this))),
                            n.push("</form>\n<div class='form-group more-actions'>\n<button class='action-button select-entire-roundabout waze-btn waze-btn-white'>"),
                            n.push("" + t(e(this.t("edit.segment.actions.select_entire_roundabout")))),
                            n.push("</button>\n<button class='action-button select-entire-street waze-btn waze-btn-white'>"),
                            n.push("" + t(e(this.t("edit.segment.actions.select_entire_street")))),
                            n.push("</button>\n<div class='edit-house-numbers-btn-wrapper waze-tooltip' data-toggle='tooltip'>\n<button class='action-button edit-house-numbers waze-btn waze-btn-white'></button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li class='length-attribute'>\n<span class='name'>" + t(e(this.t("edit.segment.fields.length") + ":")) + "</span>\n<span class='value'></span>\n</li>"),
                            null != this.updatedOn)
                            if (1 === this.numSegments)
                                n.push("<li>" + e(this.safe_t("edit.updated", {
                                    time: this.h.dateOnlyString(this.updatedOn),
                                    user: this.h.userProfile(this.updatedBy)
                                })) + "\n&lrm;\n</li>");
                            else if (this.mixedUpdatedBy) {
                            for (n.push("<li>"),
                                n.push("" + t(e(this.t("edit.segment.fields.updated_by") + ":"))),
                                n.push("<ul class='list-unstyled updated-by-list'>"),
                                i = 0,
                                s = (a = this.updatedBy).length; i < s; i++)
                                u = a[i],
                                n.push("<li>" + e(this.h.userProfile(u)) + "\n&lrm;\n</li>");
                            n.push("</ul>\n</li>")
                        } else
                            n.push("<li>\n<span class='name'>" + t(e(this.t("edit.segment.fields.updated_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.updatedBy)) + "</span>\n</li>");
                        if (1 === this.numSegments)
                            null != this.createdBy && n.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "\n&lrm;\n</li>");
                        else if (this.mixedCreatedBy) {
                            for (n.push("<li>"),
                                n.push("" + t(e(this.t("edit.segment.fields.created_by") + ":"))),
                                n.push("<ul class='created-by-list list-unstyled'>"),
                                r = 0,
                                o = (l = this.createdBy).length; r < o; r++)
                                u = l[r],
                                n.push("<li>" + e(this.h.userProfile(u)) + "\n&lrm;\n</li>");
                            n.push("</ul>\n</li>")
                        } else
                            n.push("<li>\n<span>" + t(e(this.t("edit.segment.fields.created_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.createdBy)) + "</span>\n</li>");
                        return n.push("<li class='feature-id'></li>\n</ul>\n<div class='element-history-region'></div>\n</div>\n<div class='tab-pane' id='segment-edit-closures'>\n<div class='closures'></div>\n</div>\n<div class='tab-pane' id='segment-edit-lanes'>\n<div class='lanes'></div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            i = this.attribute + "Checkbox",
                            n.push("<input id='" + t(e(i)) + "' name='" + t(e(this.attribute)) + "' type='checkbox'>\n<label for='" + t(e(i)) + "'>" + t(e(this.t("edit.segment.fields." + this.attribute))) + "</label>"),
                            this.disabledTooltip && n.push("<div class='waze-flag-locked-toolip waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.disabledTooltip)) + "'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.junction_exits"))) + "</label>\n<div class='list'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='" + ["arrow", "fa", "fa-arrow-right", "" + t(e(this.isTurnAllowed ? "allowed" : "disallowed"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<span class='street-name'>" + t(e(this.streetName)) + "</span>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='routingRoadType' data-nullable>"),
                            this.segment.mixed.routingRoadType && n.push("<option value='' data-mixed-indicator='" + t(e(!0)) + "'>" + t(e(this.t("edit.multiple_values"))) + "</option>"),
                            n.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.prev"), this.routingRoadTypes.prev, this.segment.attributes.routingRoadType, !1, this.prevRouteRankDisabled))),
                            n.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.current"), null, this.segment.attributes.routingRoadType))),
                            n.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.next"), this.routingRoadTypes.next, this.segment.attributes.routingRoadType, !1, this.nextRouteRankDisabled))),
                            n.push("</select>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='speed-limit-" + this.direction + "'>\n<div class='speed-limit'>\n<div class='direction-label'>" + t(e(this.t("edit.segment.speed_limit." + this.direction + "MaxSpeed"))) + "</div>\n<input class='form-control' type='number' name='" + t(e(this.direction)) + "MaxSpeed' maxlength='4'>\n<i class='auto-speed-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.segment.speed_limit.added_automatically"))) + "'></i>\n<div class='unit-label'>"),
                            n.push("" + t(e(this.h.speedString()))),
                            n.push("</div>\n<div class='average-speed-camera controls-container'>\n<input id='speedCamera" + this.direction + "' name='" + t(e(this.direction)) + "SpeedCamera' type='checkbox'>\n<label for='speedCamera" + t(e(this.direction)) + "'>" + e("&nbsp;") + "</label>\n<div class='camera-icon waze-no-info-tooltip waze-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "'></div>\n<div class='waze-camera-tooltip waze-lock-tooltip' data-toggle='tooltip' data-placement='top' title='" + t(e(this.t("objects.common.rank_too_low"))) + "'></div>\n</div>\n</div>\n<div class='verify-buttons' data-direction='" + t(e(this.direction)) + "'>\n<button class='verify-btn waze-btn waze-btn-green waze-btn-small'>" + t(e(this.t("edit.segment.speed_limit.verify_speed_limit"))) + "</button>\n<button class='edit-btn waze-btn waze-btn-small waze-btn-white'>" + t(e(this.t("edit.segment.speed_limit.edit"))) + "</button>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<select class='form-control language-select locale-select'>"),
                            i = 0,
                            r = (o = this.locales).length; i < r; i++)
                            s = (a = o[i]).locale,
                            l = a.tts,
                            n.push("<option value='" + t(e(l)) + "'>" + t(e({
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español (América Latina)",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "ไทย"
                            } [s] || s || l)) + "</option>");
                        return n.push("</select>\n<buttton class='play-button waze-btn waze-btn-blue waze-btn-smaller'>" + t(e(this.t("tts.play"))) + "</buttton>\n<a class='report-problem-link' href='" + t(e(this.t("internal.tts_report_problem_url"))) + "' target='_blank' rel='noopener noreferrer'>"),
                            n.push("" + t(e(this.t("tts.report_problem")))),
                            n.push("</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<button class='tts-button' type='button' disabled='" + t(e(this.ttsDisabled)) + "'>\n<i class='fa fa-volume-up'></i>\n</button>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='list-unstyled'>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.t("footer.wiki"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.t("footer.forum"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='" + t(e(this.t("internal.status_page_link"))) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.t("footer.status"))) + "</a>\n</li>\n<li>\n<a class='waze-black-link' href='#keyboard-dialog' data-toggle='modal'>\n<kbd>?</kbd>"),
                            n.push("" + t(e(this.t("footer.keyboard_shortcuts")))),
                            n.push("</a>\n</li>\n</ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='overlay'></div>\n<div id='user-info'></div>\n<div id='edit-panel'>\n<div class='contents'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<section id='user-tabs'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#sidepanel-feed'>" + t(e(this.t("user.feed.title"))) + "\n<span class='fa fa-repeat feed-refresh nav-tab-icon'></span>\n</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-drives'>" + t(e(this.t("user.drives.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-areas'>" + t(e(this.t("user.areas.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-prefs'>\n<span class='fa fa-gear'></span>\n</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='sidepanel-feed'></div>\n<div class='tab-pane' id='sidepanel-drives'>\n<div class='loading-animation'></div>\n<div class='error hide'>"),
                            n.push("" + t(e(this.t("user.drives.error")))),
                            n.push("</div>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-areas'>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-prefs'></div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, r;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            r = n(40).UNIT,
                            W.Config.user_editing_enabled ? (i.push("" + t(e(this.t("user.info.edit_area.title", {
                                    distance: this.h.lengthString(this.editableMiles, {
                                        units: r.MILE,
                                        translationKey: "user.info.edit_area"
                                    })
                                })))),
                                this.isCountryManager ? i.push("" + t(e(this.t("user.info.country_manager")))) : this.isAreaManager && i.push("" + t(e(this.t("user.info.area_manager"))))) : i.push("" + e(this.safe_t("user.info.editing_restricted", {
                                forum_link: this.h.link(this.t("user.info.forum"), this.t("internal.ur_forum_link"))
                            }))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='sandbox'>\n<div class='welcome-container'>\n<div class='sandbox-logo'></div>\n<h2>" + t(e(this.t("play_mode.sidebar.hey"))) + "</h2>\n<div class='welcome-text'>" + t(e(this.t("play_mode.sidebar.join"))) + "</div>\n</div>\n<div class='links'>\n<a class='tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='icon'></div>\n<div class='title'>" + t(e(this.t("play_mode.sidebar.links.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("play_mode.sidebar.links.tutorial.description"))) + "</div>\n</a>\n<a class='wiki' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>\n<div class='icon'></div>\n<div class='title'>" + t(e(this.t("play_mode.sidebar.links.wiki.title"))) + "</div>\n<div class='description'>" + t(e(this.t("play_mode.sidebar.links.wiki.description"))) + "</div>\n</a>\n<a class='forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='icon'></div>\n<div class='title'>" + t(e(this.t("play_mode.sidebar.links.forum.title"))) + "</div>\n<div class='description'>" + t(e(this.t("play_mode.sidebar.links.forum.description"))) + "</div>\n</a>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='map-message snapshot-message-inner'>\n<div class='map-message-icon'></div>\n<div class='title'>" + t(e(this.t("snapshot.title"))) + "</div>\n<div class='description'>" + t(e(this.t("snapshot.description"))) + "</div>\n<a class='return-to-edit-mode'>" + t(e(this.t("snapshot.back_to_editing"))) + "</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            this.isOn ? n.push("<a class='toggler'>" + t(e(this.t("snapshot.exit"))) + "</a>") : n.push("<a class='toggler' disabled='" + t(e(!this.canToggleOn)) + "'>" + t(e(this.t("snapshot.enter"))) + "</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (i = []).push("<div class='clearfix hidable-message' id='show-tutorial-lightbox'>\n<div class='fa fa-times-circle hide-message' data-hide-message='tips/watch-tutorial'></div>\n<a data-toggle='modal' href='#tutorial-dialog'>\n<img src='" + t(e(n(664))) + "'>"),
                            i.push("" + t(e(this.t("tutorial.title")))),
                            i.push("</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    e.exports = n.p + "img/video-notext00f564d3d1e7b4eaa9f30c473da6a09f.png"
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            r = i = 0,
                            s = (o = this.timeFrames).length; i < s; r = ++i)
                            a = o[r],
                            n.push("" + t(e(a))),
                            r !== this.timeFrames.length - 1 && n.push("<br>");
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='turn-arrow-tooltip'>\n<div class='turn-header'>" + t(e(this.toStreet ? this.t("turn_tooltip.turn_to_street", {
                                street: this.toStreet
                            }) : "")) + "</div>\n<div class='tooltip-control'>"),
                            this.ioEditingDisabled = this.pathSelectorOnly || !this.canEditInstructionOverride,
                            n.push("<label class='" + t(e(this.ioEditingDisabled ? "disabled" : void 0)) + "' for='opcode-select'>" + t(e(this.t("turn_tooltip.instruction_override.title"))) + "</label>\n<select class='form-control opcode-select' id='opcode-select' disabled='" + t(e(this.ioEditingDisabled)) + "'></select>\n</div>\n<div class='tooltip-control'>\n<label class='" + t(e(this.pathSelectorOnly ? "disabled" : void 0)) + "'>" + t(e(this.t("turn_tooltip.restrictions"))) + "</label>\n<button class='edit-restrictions waze-btn waze-btn-small waze-btn-warning waze-btn-white' disabled='" + t(e(this.pathSelectorOnly)) + "'>"),
                            this.allowRestrictionEditing ? this.hasRestrictions ? n.push("" + t(e(this.t("edit.segment.actions.restrictions.edit")))) : n.push("" + t(e(this.t("edit.segment.actions.restrictions.add")))) : n.push("" + t(e(this.t("edit.segment.actions.restrictions.view")))),
                            n.push("</button>\n</div>"),
                            this.hasMultiplePaths && n.push("<div class='tooltip-control'>\n<label>" + t(e(this.t("turn_tooltip.switch_route"))) + "</label>\n<div class='path-switcher'>\n<button class='prev-path-button waze-btn waze-btn-small waze-btn-white'></button>\n<button class='next-path-button waze-btn waze-btn-small waze-btn-white'></button>\n<span class='path-progress'></span>\n</div>\n</div>"),
                            n.push("<div class='tooltip-control'>\n<label id='difficult_label'>" + t(e(this.t("turn_tooltip.difficult_turn"))) + "</label>\n<div class='difficult-turn waze-radio-container'>\n<input id='" + t(e("difficult_false")) + "' type='radio' name='isDifficult' value='false'>\n<label for='difficult_false'>" + t(e(this.t("formats.boolean.is_false"))) + "</label>\n<input id='" + t(e("difficult_true")) + "' type='radio' name='isDifficult' value='true'>\n<label for='difficult_true'>" + t(e(this.t("formats.boolean.is_true"))) + "</label>\n<div class='time-based-restrictions-button' data-toggle='tooltip' data-placement='top'></div>"),
                            this.canEditDifficultTurns || n.push("<div class='waze-lock-tooltip' data-toggle='tooltip' data-placement='bottom'></div>"),
                            n.push("</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='arrow-tooltip'></div>\n<div class='" + ["arrow", "" + t(e(this.arrowClasses))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' style='transform: rotate(" + t(e(this.angle)) + "deg'>"),
                            this.hasRestrictions && this.turnAllowed && n.push("<div class='restriction-badge' style='transform: rotate(" + t(e(-this.angle)) + "deg'></div>"),
                            this.turnAllowed || n.push("<div class='closed-badge' style='transform: rotate(" + t(e(-this.angle)) + "deg'></div>"),
                            n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='clearfix modal-body'>\n<div class='header'>" + t(e(this.t("tutorial.header"))) + "</div>\n<ul class='video-menu' style='display: none;'>"),
                            s = 0,
                            i = 0,
                            r = (o = this.videos).length; i < r; i++)
                            a = o[i],
                            s++,
                            n.push("<li class='video-link' data-video-key='" + t(e(a)) + "'>\n<div class='number'>" + t(e(s + ".")) + "</div>\n<div class='text'>" + t(e(this.t("tutorial.videos." + a + ".title"))) + "</div>\n</li>");
                        return n.push("</ul>\n<div id='tutorial-player'></div>\n<a class='dialog-close-button' href='#'></a>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            (t = []).push("<h2>" + e(this.safe_t("user.info.greeting", {
                                username: this.h.contentTag("strong", this.userName)
                            })) + "</h2>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container'>"),
                            r = 0,
                            o = (a = this.t("date.week_day_order")).length; r < o; r++)
                            s = "day-checkbox-" + (i = a[r]),
                            n.push("<input id='" + t(e(s)) + "' type='checkbox' name='days' value='" + t(e(i)) + "'>\n<label class='checkbox-inline' for='" + t(e(s)) + "'>" + t(e(this.t("date.abbr_day_names")[i])) + "</label>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='toggle'>\n<a class='select-all' href='#'>" + t(e(this.t("edit.select.all"))) + "</a>\n/\n<a class='select-none' href='#'>" + t(e(this.t("edit.select.none"))) + "</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<input class='alias-name form-control' type='text' value='" + t(e(this.name)) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='list list-unstyled'></ul>\n<a class='" + ["add", "waze-link", "" + t(e(this.hideAddButton ? "hidden" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#'>"),
                            n.push("" + t(e(this.t("edit.landmark.aliases.add")))),
                            n.push("</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='category' data-category='" + t(e(this.category)) + "'>\n<span class='category-name'></span>\n<a class='remove-choice select2-search-choice-close' href='#'>\n<i class='fa fa-remove'></i>\n</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<input class='uuid' value='" + t(e(this.uuid)) + "' type='hidden' placeholder='" + t(e(this.t("edit.landmark.external_providers.search"))) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>\n<a class='url' href='" + t(e(this.url)) + "' target='_blank' rel='noopener noreferrer'>\n<i class='fa fa-link'></i>\n</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<ul class='list list-unstyled'></ul>\n<a class='add waze-btn waze-btn-smaller waze-btn-white' href='#'>"),
                            n.push("" + t(e(this.t("edit.landmark.external_providers.add")))),
                            n.push("</a>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<input name='categories' data-placeholder='" + t(e(this.t("edit.landmark.select_categories"))) + "' type='hidden'>\n<div class='suggested-categories'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<form class='attributes-form side-panel-section'>\n<div class='hide-residential'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text'>\n<div class='aliases-view'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>" + t(e(this.t("edit.landmark.fields.categories"))) + "</label>\n<i class='categories-tooltip waze-tooltip' data-toggle='tooltip'></i>\n<div class='categories controls'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.description"))) + "</label>\n<div class='controls'>\n<textarea class='form-control' name='description' maxlength='" + t(e(300)) + "'></textarea>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.navigation_points"))) + "</label>\n<div class='controls'>\n<div class='navigation-point-region'></div>\n</div>\n</div>\n<div class='lock-edit'></div>\n<div class='hide-residential'>\n<div class='brand form-group'>\n<label class='control-label show-parking-lot'>" + t(e(this.t("edit.landmark.parking.operator"))) + "</label>\n<label class='control-label hide-parking-lot'>" + t(e(this.t("edit.landmark.fields.brand"))) + "</label>\n<div class='controls'>\n<select class='form-control select2style' name='brand'></select>\n</div>\n<div class='show-parking-lot'>\n<a class='add-brand-link waze-link' href='" + t(e(this.t("internal.add_operator_form"))) + "' target='_blank' rel='noopener noreferrer'>" + t(e(this.t("edit.landmark.add_operator.text"))) + "</a>\n</div>\n</div>\n<div class='form-group type-edit'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.type"))) + "</label>\n<div class='controls'>\n<div class='show-parking-lot'>\n<div class='btn btn-block btn-default convert-parking-lot-to-polygon'>"),
                            n.push("" + t(e(this.t("edit.landmark.type.convert_to_area")))),
                            n.push("</div>\n</div>\n<div class='hide-parking-lot'>\n<div class='btn-group' data-toggle='buttons'>\n<label class='btn btn-default point-btn'>\n<input type='radio' name='isPoint' value='true'>"),
                            n.push("" + t(e(this.t("edit.landmark.type.point")))),
                            n.push("</label>\n<label class='area-btn btn btn-default'>\n<input type='radio' name='isPoint' value='false'>"),
                            n.push("" + t(e(this.t("edit.landmark.type.area")))),
                            n.push("</label>\n</div>\n</div>\n</div>\n</div>\n<div class='external-providers form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.external_providers.title"))) + "</label>\n<div class='controls'>\n<div class='external-providers-view'></div>\n</div>\n</div>\n</div>\n<div class='form-group hide-parking-lot'>\n<div class='controls'>\n<button class='btn-link toggle-residential waze-link'>      </button>\n</div>\n</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<div class='image-preview-container'>\n<div class='image-container'>\n<img class='image-preview'>\n</div>\n<button class='image-delete-button'></button>\n<button class='btn fa fa-search image-enlarge-button'></button>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='url' type='text'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.phone"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='phone' type='tel'>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o, a, l, u, c, d, h, p, g, f;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<form class='attributes-form'>\n<fieldset class='controls-container'>\n<div class='side-panel-section'>\n<div class='form-group'>\n<template class='hidden parkingType-tooltip-template'>\n<ul class='list-unstyled parkingType-tooltip-content'>"),
                            i = 0,
                            a = (d = this.parkingTypes).length; i < a; i++)
                            f = d[i],
                            n.push("<li>\n<span class='parkingType-tooltip-header'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + f)))),
                            n.push("</span>\n<span>-</span>\n<span>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.titles.parkingType." + f)))),
                            n.push("</span>\n</li>");
                        for (n.push("</ul>\n</template>\n<label class='control-label control-label-inline'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.fields.parkingType")))),
                            n.push("</label>\n<i class='parkingType-tooltip waze-tooltip'></i>"),
                            r = 0,
                            l = (h = this.parkingTypes).length; r < l; r++)
                            f = h[r],
                            n.push("<div class='parking-type-option'>\n<input id='parking-type-" + f + "' type='radio' name='parkingType' value='" + t(e(f)) + "'>\n<label for='parking-type-" + t(e(f)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + f)))),
                            n.push("</label>\n</div>");
                        for (n.push("</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.fields.hasTBR")))),
                            n.push("</label>\n<i class='hasTBR-tooltip waze-tooltip' title='" + t(e(this.t("edit.landmark.parking.titles.hasTBR"))) + "'></i>\n<input id='has-tbr' type='checkbox' name='hasTBR'>\n<label for='has-tbr'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.general.true")))),
                            n.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='opening-hours'></div>\n<div class='controls-container form-group'>\n<input id='can-exit-checkbox' type='checkbox' name='canExitWhileClosed'>\n<label for='can-exit-checkbox'>"),
                            n.push("" + e(this.t("edit.landmark.parking.fields.canExitWhileClosed"))),
                            n.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.costType"))) + "</label>\n<select class='form-control' name='costType'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.paymentType"))) + "</label>"),
                            s = 0,
                            u = (p = this.paymentTypes).length; s < u; s++)
                            f = p[s],
                            n.push("<div class='payment-checkbox'>\n<input id='payment-checkbox-" + f + "' type='checkbox' name='paymentType' value='" + t(e(f)) + "'>\n<label for='payment-checkbox-" + t(e(f)) + "'>"),
                            n.push("" + e(this.t("edit.landmark.parking.types.paymentType." + f))),
                            n.push("</label>\n</div>");
                        for (n.push("</div>\n<div class='form-group services'></div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.estimatedNumberOfSpots"))) + "</label>\n<select class='form-control' name='estimatedNumberOfSpots'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.lotType"))) + "</label>"),
                            o = 0,
                            c = (g = this.lotTypes).length; o < c; o++)
                            f = g[o],
                            n.push("<div class='lot-checkbox'>\n<input id='lot-checkbox-" + f + "' type='checkbox' name='lotType' value='" + t(e(f)) + "'>\n<label for='lot-checkbox-" + t(e(f)) + "'>"),
                            n.push("" + e(this.t("edit.landmark.parking.types.lotType." + f))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>\n<div class='contact side-panel-section'></div>\n</fieldset>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, i, r, s, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='controls-container form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.services"))) + "</label>"),
                            i = 0,
                            r = (s = this.serviceTypes).length; i < r; i++)
                            o = s[i],
                            n.push("<div class='service-checkbox'>\n<input id='service-checkbox-" + o + "' type='checkbox' name='services' value='" + t(e(o)) + "'>\n<label for='service-checkbox-" + t(e(o)) + "'>" + t(e(this.t("venues.services." + o))) + "</label>\n</div>");
                        return n.push("</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return (e = []).push("<form class='attributes-form'>\n<div class='contact side-panel-section'></div>\n<div class='services side-panel-section'></div>\n<div class='opening-hours side-panel-section'></div>\n</form>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<em>" + t(e(this.t("edit.landmark.no_photos"))) + "</em>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            (n = []).push("<div class='landmark separator-line sidebar-column'>\n<div class='selection selection-icon'>\n<span class='text'>" + t(e(this.t("edit.landmark.title"))) + "</span>"),
                            n.push("" + e(this.renderPartial("templates/focus-buttons", this))),
                            n.push("<span class='geometry-button-region'></span>\n</div>\n<div class='alert alert-danger header-alert pending-changes-alert unapproved-alert'>"),
                            n.push("" + t(e(this.t("edit.landmark.update_requests.unapproved")))),
                            n.push("</div>\n<div class='alert alert-danger header-alert pending-changes-alert pending-changes-alert2'>"),
                            n.push("" + t(e(this.t("edit.landmark.update_requests.pending")))),
                            n.push("</div>\n<div class='alert alert-danger header-alert locked-alert'>"),
                            n.push("" + t(e(this.t("edit.landmark.update_requests.ad_locked")))),
                            n.push("</div>\n<div class='alert alert-danger header-alert requires-moderation-alert'>"),
                            n.push("" + t(e(this.t("edit.landmark.update_requests.moderation")))),
                            n.push("</div>\n<div class='alert alert-info header-alert pending-merge-note'>"),
                            n.push("" + t(e(this.t("edit.landmark.merge.pending")))),
                            n.push("</div>\n<div class='tabs-container'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#landmark-edit-general'>" + t(e(this.t("edit.landmark.tabs.general"))) + "</a>\n</li>\n<li class='hide-residential'>\n<a data-toggle='tab' href='#landmark-edit-more-info'>" + t(e(this.t("edit.landmark.tabs.more_info"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#landmark-edit-photos'>"),
                            n.push("" + t(e(this.t("edit.landmark.tabs.photos")))),
                            n.push("(\n<span class='img-count'></span>\n)\n</a>\n</li>\n</ul>\n<div class='tab-scroll-gradient'></div>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='landmark-edit-general'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.address"))) + "</label>\n<div class='address-edit side-panel-section'></div>\n</div>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-general", this))),
                            n.push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this))),
                            n.push("<li>" + t(e(this.t("edit.id", {
                                num: this.id
                            }))) + "</li>\n</ul>\n<div class='element-history-region'></div>\n</div>\n<div class='more-info tab-pane' id='landmark-edit-more-info'></div>\n<div class='images tab-pane' id='landmark-edit-photos'></div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(10);
    n.n(i).a.fn.booleanVal = function() {
        var e = this.val();
        return "null" === e ? null : "true" === e
    }
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(7),
        r = n.n(i),
        s = n(30);
    r.a.ajax = function(e) {
        !e.method && e.type && (e = Object.assign({}, e, {
            method: e.type
        }));
        var t = Object(s.httpRequest)(e.url, e.data, e);
        return t.then(function(t) {
            return e.success && e.success.call(e.context, t),
                t
        }).catch(function(n) {
            e.error && e.error.call(e.context, t, null, n.errorString)
        })
    }
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(4),
        r = n.n(i),
        s = n(33);
    r.a.View.prototype.renderOnceLater = function() {
        var e = this;
        this.__alreadyRenderedInCurrentTask || (this.__alreadyRenderedInCurrentTask = !0,
            s.runLater(function() {
                e.__alreadyRenderedInCurrentTask = !1,
                    e.render()
            }))
    }
}, function(e, t) {
    I18n.pluralization.ru = function(e) {
            return [e % 10 == 1 && e % 100 != 11 ? "one" : [2, 3, 4].indexOf(e % 10) >= 0 && [12, 13, 14].indexOf(e % 100) < 0 ? "few" : e % 10 == 0 || [5, 6, 7, 8, 9].indexOf(e % 10) >= 0 || [11, 12, 13, 14].indexOf(e % 100) >= 0 ? "many" : "other"]
        },
        I18n.pluralization.oneRule = function(e) {
            return ["other"]
        },
        ["ko", "ja", "ms", "zh", "zh", "zh-TW"].forEach(function(e) {
            I18n.pluralization[e] = I18n.pluralization.oneRule
        });
    var n = I18n.pluralization.get;
    I18n.pluralization.get = function() {
        var e = n.apply(this, arguments);
        return function() {
            var t = e.apply(void 0, arguments);
            return t.push("other"),
                t
        }
    }
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(162),
        r = function() {
            function e(e, t) {
                void 0 === t && (t = {
                        parse: !1
                    }),
                    t && t.parse && e && i.parseJsonObject(e, this.nested),
                    Object.assign(this, e)
            }
            return Object.defineProperty(e.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                e
        }();
    t.default = r
}, , , , function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.WEB_MERCATOR_PROJECTION = "EPSG:900913"
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(64)),
        s = i(n(38)),
        o = function() {
            function e(e) {
                var t = e.dataModel;
                this.dataModel = t
            }
            return e.prototype.getConnectedVertices = function(e) {
                    var t = this.getVertexNodeID(e),
                        n = null;
                    return null !== t && (n = r.default.nodeById(this.dataModel, t)),
                        null === n || void 0 === n ? [] : this._getNodeConnectedVertices(n).filter(function(t) {
                            return !t.equals(e)
                        })
                },
                e.prototype._getNodeConnectedVertices = function(e) {
                    var t = this,
                        n = [],
                        i = e.getID();
                    return e.attributes.segIDs.forEach(function(e) {
                            var o = r.default.segmentById(t.dataModel, e);
                            o && (o.attributes.fromNodeID === i && n.push(s.default.forwardOf(e)),
                                o.attributes.toNodeID === i && n.push(s.default.reverseOf(e)))
                        }),
                        n
                },
                e.prototype.getVertexNodeID = function(e) {
                    var t = r.default.segmentById(this.dataModel, e.getSegmentID());
                    if (null === t)
                        throw new Error("segment: " + e.getSegmentID() + " does not exist");
                    return e.isForward() ? t.attributes.toNodeID : t.attributes.fromNodeID
                },
                e.prototype.toJSON = function() {
                    var e = this,
                        t = {};
                    return r.default.allNodes(this.dataModel).forEach(function(n) {
                            if (!n.isDeleted()) {
                                var i = n.getID();
                                t[i] = e._getNodeConnectedVertices(n).map(function(e) {
                                    return e.getOpposite().toString()
                                })
                            }
                        }),
                        t
                },
                e.prototype.isTurnLegal = function(e, t) {
                    var n = r.default.directedSegment(this.dataModel, e),
                        i = r.default.directedSegment(this.dataModel, t);
                    return n && n.isDirectionAllowed() && i && i.isDirectionAllowed() && i.isDrivable()
                },
                e.prototype.areVerticesConnected = function(e, t) {
                    var n = r.default.directedSegment(this.dataModel, e),
                        i = r.default.directedSegment(this.dataModel, t.getOpposite());
                    return n && i && n.getNodeID() === i.getNodeID()
                },
                e
        }();
    t.default = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
        function e(e, t) {
            this._vertex = e,
                this._segment = t
        }
        return e.prototype.getVertex = function() {
                return this._vertex
            },
            e.prototype.getSegment = function() {
                return this._segment
            },
            e.prototype.getNode = function() {
                return this._segment.model.nodes.getObjectById(this.getNodeID())
            },
            e.prototype.isDirectionAllowed = function() {
                return this._vertex.isForward() ? this._segment.attributes.fwdDirection : this._segment.attributes.revDirection
            },
            e.prototype.getDrivingRestrictions = function() {
                var e = this._segment.getBidiDrivingRestrictions();
                return (this._vertex.isForward() ? this._segment.getForwardDrivingRestrictions() : this._segment.getReverseDrivingRestrictions()).concat(e)
            },
            e.prototype.getNodeID = function() {
                return this._vertex.isForward() ? this._segment.attributes.toNodeID : this._segment.attributes.fromNodeID
            },
            e.prototype.getCrossroads = function() {
                return this._vertex.isForward() ? this._segment.attributes.toCrossroads : this._segment.attributes.fromCrossroads
            },
            e.prototype.hasBigJunction = function() {
                return this.getCrossroads().length > 0
            },
            e.prototype.getBigJunction = function() {
                var e = this.getCrossroads()[0];
                return null == e ? null : this._segment.model.bigJunctions.getObjectById(e)
            },
            e.prototype.areTurnsLocked = function() {
                return this._vertex.isForward() ? this._segment.attributes.fwdTurnsLocked : this._segment.attributes.revTurnsLocked
            },
            e.prototype.isDrivable = function() {
                return this._segment.isDrivable()
            },
            e
    }();
    t.default = i
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(55)),
        s = function() {
            function e(e) {
                var t = void 0 === e ? {} : e,
                    n = (t.restrictionType,
                        t.driveProfiles),
                    i = void 0 === n ? [] : n;
                this._driveProfiles = i.map(function(e) {
                        return new r.default(e)
                    }),
                    Object.freeze(this)
            }
            return e.prototype.equals = function(e) {
                    return this._driveProfiles.every(function(t) {
                        return e._driveProfiles.some(function(e) {
                            return e.equals(t)
                        })
                    })
                },
                e.prototype.toJSON = function() {
                    return this._driveProfiles.map(function(e) {
                        return e.toJSON()
                    })
                },
                e.prototype.isAllVehicles = function() {
                    return 0 === this._driveProfiles.length || this._driveProfiles.some(function(e) {
                        return e.isAllVehicles()
                    })
                },
                e.prototype.getDriveProfiles = function() {
                    return this._driveProfiles.slice()
                },
                e.prototype.isEmpty = function() {
                    return 0 === this._driveProfiles.length
                },
                e
        }();
    t.RestrictionDriveProfileList = s
}, function(e, t, n) {
    var i = {
        "./af": 262,
        "./af.js": 262,
        "./ar": 263,
        "./ar-dz": 264,
        "./ar-dz.js": 264,
        "./ar-kw": 265,
        "./ar-kw.js": 265,
        "./ar-ly": 266,
        "./ar-ly.js": 266,
        "./ar-ma": 267,
        "./ar-ma.js": 267,
        "./ar-sa": 268,
        "./ar-sa.js": 268,
        "./ar-tn": 269,
        "./ar-tn.js": 269,
        "./ar.js": 263,
        "./az": 270,
        "./az.js": 270,
        "./be": 271,
        "./be.js": 271,
        "./bg": 272,
        "./bg.js": 272,
        "./bm": 273,
        "./bm.js": 273,
        "./bn": 274,
        "./bn.js": 274,
        "./bo": 275,
        "./bo.js": 275,
        "./br": 276,
        "./br.js": 276,
        "./bs": 277,
        "./bs.js": 277,
        "./ca": 278,
        "./ca.js": 278,
        "./cs": 279,
        "./cs.js": 279,
        "./cv": 280,
        "./cv.js": 280,
        "./cy": 281,
        "./cy.js": 281,
        "./da": 282,
        "./da.js": 282,
        "./de": 283,
        "./de-at": 284,
        "./de-at.js": 284,
        "./de-ch": 285,
        "./de-ch.js": 285,
        "./de.js": 283,
        "./dv": 286,
        "./dv.js": 286,
        "./el": 287,
        "./el.js": 287,
        "./en-au": 288,
        "./en-au.js": 288,
        "./en-ca": 289,
        "./en-ca.js": 289,
        "./en-gb": 290,
        "./en-gb.js": 290,
        "./en-ie": 291,
        "./en-ie.js": 291,
        "./en-il": 292,
        "./en-il.js": 292,
        "./en-nz": 293,
        "./en-nz.js": 293,
        "./eo": 294,
        "./eo.js": 294,
        "./es": 295,
        "./es-do": 296,
        "./es-do.js": 296,
        "./es-us": 297,
        "./es-us.js": 297,
        "./es.js": 295,
        "./et": 298,
        "./et.js": 298,
        "./eu": 299,
        "./eu.js": 299,
        "./fa": 300,
        "./fa.js": 300,
        "./fi": 301,
        "./fi.js": 301,
        "./fo": 302,
        "./fo.js": 302,
        "./fr": 303,
        "./fr-ca": 304,
        "./fr-ca.js": 304,
        "./fr-ch": 305,
        "./fr-ch.js": 305,
        "./fr.js": 303,
        "./fy": 306,
        "./fy.js": 306,
        "./gd": 307,
        "./gd.js": 307,
        "./gl": 308,
        "./gl.js": 308,
        "./gom-latn": 309,
        "./gom-latn.js": 309,
        "./gu": 310,
        "./gu.js": 310,
        "./he": 311,
        "./he.js": 311,
        "./hi": 312,
        "./hi.js": 312,
        "./hr": 313,
        "./hr.js": 313,
        "./hu": 314,
        "./hu.js": 314,
        "./hy-am": 315,
        "./hy-am.js": 315,
        "./id": 316,
        "./id.js": 316,
        "./is": 317,
        "./is.js": 317,
        "./it": 318,
        "./it.js": 318,
        "./ja": 319,
        "./ja.js": 319,
        "./jv": 320,
        "./jv.js": 320,
        "./ka": 321,
        "./ka.js": 321,
        "./kk": 322,
        "./kk.js": 322,
        "./km": 323,
        "./km.js": 323,
        "./kn": 324,
        "./kn.js": 324,
        "./ko": 325,
        "./ko.js": 325,
        "./ky": 326,
        "./ky.js": 326,
        "./lb": 327,
        "./lb.js": 327,
        "./lo": 328,
        "./lo.js": 328,
        "./lt": 329,
        "./lt.js": 329,
        "./lv": 330,
        "./lv.js": 330,
        "./me": 331,
        "./me.js": 331,
        "./mi": 332,
        "./mi.js": 332,
        "./mk": 333,
        "./mk.js": 333,
        "./ml": 334,
        "./ml.js": 334,
        "./mn": 335,
        "./mn.js": 335,
        "./mr": 336,
        "./mr.js": 336,
        "./ms": 337,
        "./ms-my": 338,
        "./ms-my.js": 338,
        "./ms.js": 337,
        "./mt": 339,
        "./mt.js": 339,
        "./my": 340,
        "./my.js": 340,
        "./nb": 341,
        "./nb.js": 341,
        "./ne": 342,
        "./ne.js": 342,
        "./nl": 343,
        "./nl-be": 344,
        "./nl-be.js": 344,
        "./nl.js": 343,
        "./nn": 345,
        "./nn.js": 345,
        "./pa-in": 346,
        "./pa-in.js": 346,
        "./pl": 347,
        "./pl.js": 347,
        "./pt": 348,
        "./pt-br": 349,
        "./pt-br.js": 349,
        "./pt.js": 348,
        "./ro": 350,
        "./ro.js": 350,
        "./ru": 351,
        "./ru.js": 351,
        "./sd": 352,
        "./sd.js": 352,
        "./se": 353,
        "./se.js": 353,
        "./si": 354,
        "./si.js": 354,
        "./sk": 355,
        "./sk.js": 355,
        "./sl": 356,
        "./sl.js": 356,
        "./sq": 357,
        "./sq.js": 357,
        "./sr": 358,
        "./sr-cyrl": 359,
        "./sr-cyrl.js": 359,
        "./sr.js": 358,
        "./ss": 360,
        "./ss.js": 360,
        "./sv": 361,
        "./sv.js": 361,
        "./sw": 362,
        "./sw.js": 362,
        "./ta": 363,
        "./ta.js": 363,
        "./te": 364,
        "./te.js": 364,
        "./tet": 365,
        "./tet.js": 365,
        "./tg": 366,
        "./tg.js": 366,
        "./th": 367,
        "./th.js": 367,
        "./tl-ph": 368,
        "./tl-ph.js": 368,
        "./tlh": 369,
        "./tlh.js": 369,
        "./tr": 370,
        "./tr.js": 370,
        "./tzl": 371,
        "./tzl.js": 371,
        "./tzm": 372,
        "./tzm-latn": 373,
        "./tzm-latn.js": 373,
        "./tzm.js": 372,
        "./ug-cn": 374,
        "./ug-cn.js": 374,
        "./uk": 375,
        "./uk.js": 375,
        "./ur": 376,
        "./ur.js": 376,
        "./uz": 377,
        "./uz-latn": 378,
        "./uz-latn.js": 378,
        "./uz.js": 377,
        "./vi": 379,
        "./vi.js": 379,
        "./x-pseudo": 380,
        "./x-pseudo.js": 380,
        "./yo": 381,
        "./yo.js": 381,
        "./zh-cn": 382,
        "./zh-cn.js": 382,
        "./zh-hk": 383,
        "./zh-hk.js": 383,
        "./zh-tw": 384,
        "./zh-tw.js": 384
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 698
}, , function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = function() {
        function e(e, t, n) {
            this.dataModel = e,
                this.angles = r(t),
                this.toVertexes = r(n)
        }
        return e.prototype.getToSegmentIDs = function() {
                return this.toVertexes.map(function(e) {
                    return e.getSegmentID()
                })
            },
            e.prototype.getAngles = function() {
                return this.angles
            },
            e.prototype.isEmpty = function() {
                return 0 === this.angles.length || 0 === this.toVertexes.length
            },
            e.prototype.getTurns = function(e) {
                var t = this;
                return this.toVertexes.map(function(n) {
                    return t.dataModel.getTurnGraph().getTurn(e, n)
                })
            },
            e.prototype.getToSegments = function() {
                var e = this;
                return this.getToSegmentIDs().map(function(t) {
                    return e.dataModel.segments.getObjectById(t)
                })
            },
            e
    }();
    t.default = s
}, function(e, t, n) {
    "use strict";
    var i = this && this.__assign || function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        r = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(0)),
        a = n(52),
        l = function() {
            function e(e, t, n, i, r) {
                this.fromSegmentID = e,
                    this.vertexInfo = new Map,
                    this.fromAzimuth = t,
                    this.fromRoadType = n,
                    this.fromStreetIDs = i,
                    this.leftHandTraffic = r
            }
            return e.prototype.addOutgoingVertex = function(e) {
                    var t = e.toVertex,
                        n = e.azimuth,
                        i = e.roadType,
                        r = e.streetIDs,
                        s = {
                            id: t.toString(),
                            segmentID: t.getSegmentID(),
                            roadType: i,
                            streetIDs: r,
                            azimuth: n,
                            rawAngle: this._calcRawAngle(this.fromAzimuth, n),
                            snappedAngle: null,
                            similarity: 0
                        };
                    s.similarity = this.vertexSimilarity(s),
                        this._setVertexInfo(s)
                },
                e.prototype._setVertexInfo = function(e) {
                    this.vertexInfo.set(e.id, e)
                },
                e.prototype._calcRawAngle = function(e, t) {
                    var n = a.toStandardLaneAngle(t - e);
                    return n = a.toStandardLaneAngle(180 - n)
                },
                e.prototype.snapAngles = function() {
                    var e = this;
                    this.vertexInfo.forEach(function(t) {
                            var n = a.toStandardLaneAngle(45 * Math.round(t.rawAngle / 45));
                            t.snappedAngle = n;
                            var i = t;
                            e._snapUTurns(i)
                        }),
                        this._resolveZeroAngleConflicts().forEach(function(t) {
                            e._setVertexInfo(t)
                        })
                },
                e.prototype._isBackToSameSegment = function(e) {
                    return this.fromSegmentID === e.segmentID
                },
                e.prototype._snapUTurns = function(e) {
                    this._isBackToSameSegment(e) ? this.leftHandTraffic ? e.snappedAngle = 180 : e.snappedAngle = -180 : a.isUTurn(e.snappedAngle) && (e.snappedAngle = e.snappedAngle > 0 ? 135 : -135)
                },
                e.prototype._resolveZeroAngleConflicts = function() {
                    var e = this,
                        t = this._getVertexesBySnappedAngle(0),
                        n = [];
                    if (t.length > 1) {
                        var s = r(this._sortVertexesBySimilarity(t)),
                            o = s[0];
                        n = s.slice(1).map(function(t) {
                            var n = e._isLeftTurn(o.rawAngle, t.rawAngle);
                            return i({}, t, {
                                snappedAngle: n ? -45 : 45
                            })
                        })
                    }
                    return n
                },
                e.prototype.getSnappedAngle = function(e) {
                    var t = this.vertexInfo.get(e.toString());
                    return void 0 !== t ? t.snappedAngle : null
                },
                e.prototype.getRawAngle = function(e) {
                    var t = this.vertexInfo.get(e.toString());
                    return void 0 !== t ? t.rawAngle : null
                },
                e.prototype._getVertexesBySnappedAngle = function(e) {
                    return Array.from(this.vertexInfo.values()).filter(function(t) {
                        return t.snappedAngle === e
                    })
                },
                e.prototype._sortVertexesBySimilarity = function(e) {
                    return o.default.sortBy(e, function(e) {
                        return -e.similarity
                    })
                },
                e.prototype._isLeftTurn = function(e, t) {
                    return a.toStandardLaneAngle(t) < a.toStandardLaneAngle(e)
                },
                e.prototype._sharesStreetIDs = function(e) {
                    return o.default.intersection(e.streetIDs, this.fromStreetIDs).length > 0
                },
                e.prototype.vertexSimilarity = function(e) {
                    var t = this._sharesStreetIDs(e),
                        n = e.roadType === this.fromRoadType,
                        i = 0;
                    return t && i++,
                        n && i++,
                        i += 1 - Math.abs(e.rawAngle) / 180
                },
                e
        }();
    t.default = l
}, , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t(t, n) {
            var i = e.call(this, t, n) || this;
            return Object.freeze(i.attributes),
                i.set = i._error,
                i
        }
        return r(t, e),
            t.prototype._error = function() {
                throw new TypeError("Cannot change attributes of an immutable object")
            },
            t
    }(s(n(7)).default.Model);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = n(141),
        o = i(n(707)),
        a = r(n(710)),
        l = r(n(1137)),
        u = r(n(716)),
        c = r(n(717)),
        d = r(n(719)),
        h = r(n(387)),
        p = r(n(188)),
        g = r(n(170)),
        f = r(n(123)),
        m = r(n(723)),
        v = r(n(120)),
        _ = r(n(390)),
        y = r(n(189)),
        b = r(n(26)),
        E = n(130),
        w = r(n(724)),
        S = r(n(86)),
        k = r(n(244)),
        T = r(n(726)),
        I = r(n(72)),
        A = r(n(727)),
        M = r(n(95)),
        O = r(n(67)),
        C = r(n(79)),
        R = r(n(728));
    t.TYPE_TO_FACTORY = {
            issues: l.default,
            problems: o,
            problemDetails: a.default
        },
        t.TYPE_TO_CLASS = {
            segments: b.default,
            nodes: v.default,
            streets: w.default,
            countries: d.default,
            cities: h.default,
            bigJunctions: s.BigJunction,
            updateRequestSessions: T.default,
            archives: u.default,
            archiveSessions: c.default,
            venues: f.default,
            users: I.default,
            cameras: E.SpeedCamera,
            mapUpdateRequests: k.default,
            segmentHouseNumbers: p.default,
            roadClosures: y.default,
            junctions: g.default,
            managedAreas: m.default,
            userAreas: A.default,
            notifications: M.default,
            majorTrafficEvents: O.default,
            restrictedEditingAreas: _.default,
            transactions: S.default,
            mapComments: C.default,
            restrictedDrivingAreas: R.default
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = i(n(38)),
        o = n(26),
        a = i(n(706)),
        l = n(53),
        u = function() {
            function e(e) {
                this.bigJunction = e,
                    this.dataModel = this.bigJunction.model
            }
            return e.for = function(t) {
                    return new e(t)
                },
                e.prototype.getAllTurns = function() {
                    var e = this,
                        t = [];
                    return this._getEntryVertices().forEach(function(n) {
                            var i = new a.default(e.dataModel),
                                r = new Set;
                            e._findAllTurns(n, i, r, t)
                        }),
                        t
                },
                e.prototype._findAllTurns = function(e, t, n, i) {
                    var r = this;
                    n.add(e.getID()),
                        t.appendVertex(e),
                        this._getConnectedVertices(e).forEach(function(e) {
                            var s = r.dataModel.segments.getObjectById(e.getSegmentID());
                            if (null === s)
                                throw new Error("segment: " + e.getSegmentID() + " does not exist");
                            r._isSegmentOutOfBigJunction(s) ? (t.appendVertex(e),
                                t.isPathLegal() && i.push(t.build()),
                                t.removeLastVertex()) : n.has(e.getID()) || r._findAllTurns(e, t, n, i)
                        }),
                        t.removeLastVertex(),
                        n.delete(e.getID())
                },
                e.prototype._getConnectedVertices = function(e) {
                    var t = this.dataModel.getRoadGraph();
                    return t.getConnectedVertices(e).filter(function(n) {
                        return t.isTurnLegal(e, n)
                    })
                },
                e.prototype._getEntryVertices = function() {
                    var e = this,
                        t = [],
                        n = this.bigJunction.getID();
                    return this._getAccessSegments().forEach(function(i) {
                            var r = null,
                                o = new l.SegmentsBigJunctionUseCase(e.dataModel, i);
                            if (o.hasFromBigJunction(n) && i.attributes.revDirection ? r = !1 : o.hasToBigJunction(n) && i.attributes.fwdDirection && (r = !0),
                                null !== r) {
                                var a = s.default.forwardOf(i.getID());
                                !1 === r && (a = a.getOpposite()),
                                    t.push(a)
                            }
                        }),
                        t
                },
                e.prototype._getAccessSegments = function() {
                    var e = this,
                        t = [];
                    return this.bigJunction.getShortSegments().forEach(function(e) {
                            t = (t = t.concat(e.getConnectedSegmentsByDirection(o.NodeName.FROM))).concat(e.getConnectedSegmentsByDirection(o.NodeName.TO))
                        }),
                        t = t.filter(function(t) {
                            return e._isSegmentOutOfBigJunction(t)
                        }),
                        r.default.uniqBy(t, function(e) {
                            return e.getID()
                        })
                },
                e.prototype._isSegmentOutOfBigJunction = function(e) {
                    return e.isDrivable() && !new l.SegmentsBigJunctionUseCase(this.dataModel, e).isBigJunctionShort()
                },
                e
        }();
    t.default = u
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(i(arguments[t]));
            return e
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(0)),
        l = s(n(64)),
        u = s(n(168)),
        c = o(n(81)),
        d = function() {
            function e(e) {
                this.dataModel = e,
                    this.vertices = []
            }
            return e.prototype.appendVertex = function(e) {
                    return this.vertices.push(e)
                },
                e.prototype.removeLastVertex = function() {
                    return this.vertices.pop()
                },
                e.prototype.isPathLegal = function() {
                    return this.vertices.length >= 2 && !this._trivialConnectionExists()
                },
                e.prototype._trivialConnectionExists = function() {
                    var e = a.default.first(this.vertices),
                        t = a.default.last(this.vertices);
                    if (e && t) {
                        var n = this.dataModel.getTurnGraph().getTurn(e, t);
                        return this.dataModel.getRoadGraph().isTurnLegal(e, t) && this.dataModel.getRoadGraph().areVerticesConnected(e, t) && n.getTurnData().isAllowed()
                    }
                },
                e.prototype.build = function() {
                    var e = a.default.first(this.vertices),
                        t = a.default.last(this.vertices),
                        n = this._getShortSegmentIDs(),
                        i = this.dataModel.getTurnGraph().getTurn(e, t);
                    if (a.default.isEqual(i.getTurnData().getSegmentPath(), n) && !i.getTurnData().isUnknown())
                        return i;
                    var r = this._isPathAllowed() ? c.TURN_STATE.ALLOWED : c.TURN_STATE.DISALLOWED,
                        s = c.default.create(r, this._getRestrictions(), null, n);
                    return new u.default(e, t, s)
                },
                e.prototype._isPathAllowed = function() {
                    var e = this,
                        t = this.dataModel.getTurnGraph();
                    return this.vertices.slice(0, -1).every(function(n, i) {
                        return t.getTurn(n, e.vertices[i + 1]).getTurnData().isAllowed()
                    })
                },
                e.prototype._getShortSegmentIDs = function() {
                    return this.vertices.slice(1, -1).map(function(e) {
                        return e.getSegmentID()
                    })
                },
                e.prototype._getRestrictions = function() {
                    var e = this,
                        t = this.dataModel.getTurnGraph(),
                        n = [],
                        i = [];
                    return this.vertices.forEach(function(t) {
                            var n = l.default.directedSegment(e.dataModel, t);
                            null != n && i.push.apply(i, r(n.getDrivingRestrictions()))
                        }),
                        n.push.apply(n, r(i.map(function(e) {
                            return e.withoutDirection()
                        }))),
                        this.vertices.slice(0, -1).forEach(function(i, s) {
                            var o = e.vertices[s + 1],
                                a = t.getTurn(i, o);
                            n.push.apply(n, r(a.getTurnData().getRestrictions()))
                        }),
                        n.filter(function(e, t) {
                            return n.findIndex(function(t) {
                                return t.equals(e)
                            }) === t
                        })
                },
                e
        }();
    t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = r(n(100)),
        a = s(n(708)),
        l = s(n(709)),
        u = ((i = {})[o.MAP_PROBLEM_TYPE.DISCONNECTION] = o.default,
            i[o.MAP_PROBLEM_TYPE.TURN] = a.default,
            i[o.MAP_PROBLEM_TYPE.DATA] = o.default,
            i[o.MAP_PROBLEM_TYPE.ROAD_CLOSURE] = l.default,
            i);
    t.TYPE_TO_CLASS = u,
        t.create = function(e) {
            var t = e.problemType;
            return new(0,
                u[t])(e, {
                parse: !0
            })
        }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(100)),
        a = function(e) {
            function t(t, n) {
                void 0 === n && (n = {
                    parse: !1
                });
                var i = e.call(this, t, n) || this;
                return i.editable = i.attributes.open,
                    i.attributes.reroutePercent = i.reroutePercent(),
                    i.setSeverity(i.attributes.priority),
                    i
            }
            return r(t, e),
                t.prototype.reroutePercent = function() {
                    return this.attributes.reroutesCounter / (this.attributes.reroutesCounter + this.attributes.routesCounter) * 100
                },
                t.prototype.setSeverity = function(e) {
                    var t = o.MAP_PROBLEM_SEVERITY.HIGH;
                    t = -1 === e ? o.MAP_PROBLEM_SEVERITY.LOW : this.attributes.reroutePercent >= 90 ? o.MAP_PROBLEM_SEVERITY.HIGH : o.MAP_PROBLEM_SEVERITY.MEDIUM,
                        this.attributes.severity = t
                },
                t
        }(o.default);
    Object.assign(a.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.TurnProblem"
        }),
        t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t(t, n) {
            void 0 === n && (n = {
                parse: !1
            });
            var i = e.call(this, t, n) || this;
            return i.location = i._calcLocation(),
                i
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry,
                        bounds: OpenLayers.Geometry,
                        endPoint: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype._calcLocation = function() {
                return this.hasEndPoint() ? this._getMiddlePoint() : this.attributes.geometry
            },
            t.prototype._getMiddlePoint = function() {
                return this.attributes.geometry.clone().resize(.5, this.attributes.endPoint)
            },
            t.prototype.hasEndPoint = function() {
                return null != this.attributes.endPoint
            },
            t.prototype.getLocation = function() {
                return this.location
            },
            t
    }(s(n(100)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = r(n(711)),
        o = r(n(713)),
        a = r(n(715)),
        l = n(100),
        u = {
            TYPE_TO_CLASS: (i = {},
                i[l.MAP_PROBLEMS_TYPES_WITH_DETAILS.DISCONNECTION] = s.default,
                i[l.MAP_PROBLEMS_TYPES_WITH_DETAILS.TURN] = o.default,
                i[l.MAP_PROBLEMS_TYPES_WITH_DETAILS.DATA] = a.default,
                i),
            create: function(e) {
                var t = e.problemType;
                return new(0,
                    this.TYPE_TO_CLASS[t])(e, {
                    parse: !0
                })
            }
        };
    t.default = u
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(712)),
        a = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            sessions: o.default,
                            average: o.default
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t
        }(s(n(43)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry,
                        nextSegGeom: OpenLayers.Geometry,
                        prevSegGeom: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(714)),
        a = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            routeNextSeg: OpenLayers.Geometry,
                            routePrevSeg: OpenLayers.Geometry,
                            alternatives: o.default
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t
        }(s(n(43)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        averageGeom: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        segmentGeom: OpenLayers.Geometry,
                        secondarySegmentGeom: OpenLayers.Geometry,
                        venueGeom: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t.prototype.getAverageSpeed = function() {
                return this.totalRoadMeters / (this.endTime - this.startTime) * 3600
            },
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(718)),
        a = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.bounds = null,
                    t
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            driveParts: o.default
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.getDriveBounds = function() {
                    return null !== this.bounds ? this.bounds : (this.bounds = this.driveParts.reduce(function(e, t) {
                            return t.geometry.calculateBounds(),
                                e.extend(t.geometry.bounds),
                                e
                        }, new OpenLayers.Bounds),
                        this.bounds)
                },
                t
        }(s(n(43)).default);
    Object.assign(a.prototype, {
            CLASS_NAME: "Waze.Feature.Vector.ArchiveSession"
        }),
        t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = "MATCHED",
        a = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.isMatched = function() {
                    return this.matchType === o
                },
                t
        }(s(n(43)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(7)),
        a = n(73),
        l = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.getUrl = function(e) {
                    return this.getUrlById(e, this.id)
                },
                t.prototype.getUrlById = function(e, t) {
                    return e === a.IMAGE_SIZE.ORIGINAL ? W.Config.venues.image_bucket_url + t : W.Config.venues.image_bucket_url + "thumbs/thumb" + e + "_" + t
                },
                t
        }(o.default.Model);
    t.default = l
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = i(n(388)),
        o = n(164),
        a = i(n(722)),
        l = n(389),
        u = n(242),
        c = function() {
            function e(e) {
                var t = e.isInEditArea,
                    n = e.isEditable,
                    i = e.isAdLockedEditable;
                this.isInEditArea = t,
                    this.isEditable = n,
                    this.isAdLockedEditable = i
            }
            return e.prototype.build = function(e, t) {
                    return this._isFlag(e) ? this._buildFlag(e, t) : this._buildRegularUpdate(e, t)
                },
                e.prototype._isFlag = function(e) {
                    return e.type === o.PLACE_UPDATE_TYPE.REQUEST && "subType" in e && e.subType === o.PLACE_UPDATE_SUB_TYPE.FLAG
                },
                e.prototype._buildFlag = function(e, t) {
                    return new a.default({
                        subject: e.flagSubjectType,
                        type: e.flagType,
                        comment: e.flagComment,
                        place: t,
                        dateAdded: e.dateAdded,
                        createdBy: e.createdBy,
                        entityId: e.flagEntityID,
                        id: e.id,
                        isInEditArea: this.isInEditArea,
                        isEditable: this.isEditable,
                        isAdLockedEditable: this.isAdLockedEditable
                    })
                },
                e.prototype._buildRegularUpdate = function(e, t) {
                    var n = o.PLACE_UPDATE_SUBJECT.VENUE,
                        i = o.PLACE_UPDATE_ACTION.ADD,
                        r = [];
                    return e.type === o.PLACE_UPDATE_TYPE.REQUEST ? "subType" in e && e.subType === o.PLACE_UPDATE_SUB_TYPE.UPDATE ? (i = o.PLACE_UPDATE_ACTION.UPDATE,
                            r = this._parseChangedFields(t, e.changedVenue)) : i = o.PLACE_UPDATE_ACTION.DELETE : e.type === o.PLACE_UPDATE_TYPE.IMAGE && (n = o.PLACE_UPDATE_SUBJECT.IMAGE),
                        new s.default({
                            action: i,
                            subject: n,
                            changedFields: r,
                            place: t,
                            dateAdded: e.dateAdded,
                            createdBy: e.createdBy,
                            id: e.id,
                            isInEditArea: this.isInEditArea,
                            isEditable: this.isEditable,
                            isAdLockedEditable: this.isAdLockedEditable
                        })
                },
                e.prototype._parseChangedFields = function(e, t) {
                    void 0 === t && (t = {});
                    var n = r.default.omit(t, ["permissions", "categoryAttributes"]),
                        i = (t.categoryAttributes || {}).PARKING_LOT || {};
                    return l.buildChangedField(n, e).concat(u.buildParkingLotChangedField(i, e))
                },
                e
        }();
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = n(164),
        a = function(e) {
            function t(t) {
                var n = e.call(this, t) || this;
                return n.set("updateType", "flag"),
                    n.isImage() && n.set("imageId", n.get("entityId")),
                    n.isVenue() && n.get("type") === o.FLAG_TYPE.DUPLICATE && n.set("duplicateVenueId", n.get("entityId")),
                    n
            }
            return r(t, e),
                t.prototype.getDuplicateVenue = function() {
                    var e = this.get("duplicateVenueId");
                    return this.get("place").model.venues.getObjectById(e)
                },
                t.prototype.getImage = function() {
                    return this._findImage(this.getImageId())
                },
                t.prototype.getImageId = function() {
                    return this.get("imageId")
                },
                t
        }(s(n(388)).default);
    t.default = a
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t(t, n) {
            void 0 === n && (n = {
                parse: !1
            });
            return t.id = t.id + "ma",
                e.call(this, t, n) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.getUserName = function() {
                var e = this.model.users.getObjectById(this.userID);
                return e ? e.userName : ""
            },
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = o(n(7)),
        l = o(n(15)),
        u = o(n(86)),
        c = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                t.prototype.defaults = function() {
                    return {
                        objectID: null,
                        objectType: null,
                        actionType: null,
                        newValue: null,
                        oldValue: null
                    }
                },
                t.prototype.isSegmentSplit = function() {
                    return this._isSegmentSplitMerge()[0]
                },
                t.prototype.isSegmentMerge = function() {
                    return this._isSegmentSplitMerge()[1]
                },
                t.prototype._isSegmentSplitMerge = function() {
                    var e, t = s([!1, !1], 2),
                        n = t[0],
                        i = t[1];
                    if (this.attributes.objectType === l.default.SEGMENT) {
                        var r = (this.attributes.newValue || {}).origIDs || [];
                        this.attributes.actionType === u.default.ACTIONS.ADD && (n = (e = s([1 === r.length, 2 === r.length], 2))[0],
                            i = e[1])
                    }
                    return [n, i]
                },
                t.prototype.isVenueMerge = function() {
                    return this.attributes.objectType === l.default.VENUE && this.attributes.newValue && this.attributes.newValue.mergedFrom && this.attributes.newValue.mergedFrom.length > 0
                },
                t
        }(a.default.Model);
    t.default = c
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        o = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var a = s(n(7)),
        l = s(n(43)),
        u = o(n(20)),
        c = n(30),
        d = function(e) {
            function t(t, n) {
                void 0 === t && (t = {}),
                    void 0 === n && (n = {
                        parse: !1
                    });
                var i = e.call(this, t, n) || this;
                return i.instructions = t.instructions,
                    i
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            driveGeometry: OpenLayers.Geometry,
                            routeGeometry: OpenLayers.Geometry
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.getInstruction = function(e, t) {
                    return {
                        code: e,
                        point: u.getVertices(t)[0]
                    }
                },
                t.prototype.getRouteInstructions = function() {
                    var e = this;
                    if (null == this.instructions)
                        if (this.routeInstructions) {
                            var t = u.getLines(this.routeGeometry);
                            this.instructions = this.routeInstructions.split(",").map(function(n, i) {
                                return e.getInstruction(n, t[i])
                            })
                        } else
                            this.instructions = [];
                    return this.instructions
                },
                t.prototype._updateCommentFlag = function() {
                    if (1 === this.comments.length) {
                        var e = this.model.mapUpdateRequests.getObjectById(this.getID());
                        e && (e.attributes.hasComments = !0,
                            this.model.mapUpdateRequests.changed(e))
                    }
                },
                t.prototype.hasPendingComments = function() {
                    var e = this.comments || [],
                        t = Number(Date.today().setTimeToNow().add(-2).weeks()),
                        n = e.filter(function(e) {
                            return e.createdOn > t
                        });
                    return 0 !== n.length && !n.some(function(e) {
                        return -1 === e.userID
                    })
                },
                t.prototype.getComments = function() {
                    return new a.default.Collection(this.comments)
                },
                t.prototype.getIsFollowing = function() {
                    return this.isFollowing
                },
                t.prototype.setFollowing = function(e) {
                    var t = this;
                    return c.httpPost(W.Config.paths.updateRequestFollow, {
                        mapUpdateRequestID: this.getID(),
                        follow: e
                    }).then(function() {
                        t.isFollowing = e
                    })
                },
                t.prototype.addComment = function(e) {
                    var t = this;
                    return c.httpPost(W.Config.paths.updateRequestComments, {
                        mapUpdateRequestID: this.getID(),
                        text: e
                    }).then(function(e) {
                        return e.isAutoFollowed && (t.isFollowing = !0),
                            t.comments.push(e.comment),
                            t._updateCommentFlag(),
                            e
                    }).then(function(e) {
                        return new a.default.Model(e.comment)
                    })
                },
                t.prototype.getCommentable = function() {
                    return {
                        getComments: this.getComments.bind(this),
                        isFollowing: this.getIsFollowing.bind(this),
                        setFollowing: this.setFollowing.bind(this),
                        addComment: this.addComment.bind(this)
                    }
                },
                t
        }(l.default);
    Object.assign(d.prototype, {
            CLASS_NAME: "Waze.Feature.UpdateRequestSession"
        }),
        t.default = d
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "nested", {
                get: function() {
                    return {
                        geometry: OpenLayers.Geometry
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t
    }(s(n(43)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = n(70),
        u = a(n(51)),
        c = a(n(43)),
        d = a(n(391)),
        h = a(n(80)),
        p = function(e) {
            function t(n, i) {
                return e.call(this, n, i, l.RestrictedDrivingAreaPermissions, t.defaults()) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "nested", {
                    get: function() {
                        return {
                            geometry: OpenLayers.Geometry,
                            center: OpenLayers.Geometry,
                            restrictions: d.default
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.defaults = function() {
                    return {
                        center: null,
                        cityID: null,
                        createdOn: null,
                        createdBy: null,
                        geometry: null,
                        id: null,
                        lockRank: null,
                        name: "",
                        permissions: c.default.ALL_PERMISSIONS,
                        rank: 0,
                        restrictions: [],
                        updatedBy: null,
                        updatedOn: null
                    }
                },
                t.prototype.getRestrictions = function() {
                    return o(this.attributes.restrictions)
                },
                t.prototype.getAddress = function() {
                    return h.default.fromCityID(this.attributes.cityID, this.model)
                },
                t
        }(u.default);
    t.default = p
}, function(e, t, n) {
    "use strict";
    var i, r, s, o, a = this && this.__read || function(e, t) {
        var n = "function" == typeof Symbol && e[Symbol.iterator];
        if (!n)
            return e;
        var i, r, s = n.call(e),
            o = [];
        try {
            for (;
                (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                o.push(i.value)
        } catch (e) {
            r = {
                error: e
            }
        } finally {
            try {
                i && !i.done && (n = s.return) && n.call(s)
            } finally {
                if (r)
                    throw r.error
            }
        }
        return o
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l, u, c, d, h, p, g, f = n(56),
        m = n(19);
    ! function(e) {
        e[e.OPEN = 0] = "OPEN",
            e[e.CLOSED = 1] = "CLOSED"
    }(l || (l = {})),
    function(e) {
        e[e.OPEN = 0] = "OPEN",
            e[e.CLOSED = 1] = "CLOSED"
    }(u || (u = {})),
    function(e) {
        e[e.OPEN = 0] = "OPEN",
            e[e.CLOSED = 1] = "CLOSED"
    }(c || (c = {})),
    function(e) {
        e[e.OPEN = 0] = "OPEN",
            e[e.CLOSED = 1] = "CLOSED"
    }(d || (d = {})),
    function(e) {
        e[e.SHOW = 0] = "SHOW",
            e[e.UPDATE_REQUEST = 1] = "UPDATE_REQUEST"
    }(h || (h = {})),
    function(e) {
        e[e.SHOW = 0] = "SHOW",
            e[e.UPDATE_REQUEST = 1] = "UPDATE_REQUEST"
    }(p || (p = {})),
    function(e) {
        e[e.SHOW = 0] = "SHOW",
            e[e.UPDATE_REQUEST = 1] = "UPDATE_REQUEST"
    }(g || (g = {}));
    var v = ((i = {})[f.RepositoryFilterName.PROBLEMS] = {
            togglers: (r = {},
                r[m.TogglerEnum.ITEM_MAP_PROBLEMS] = {
                    bitIndex: 0,
                    bit: l.OPEN
                },
                r[m.TogglerEnum.ITEM_CLOSED_MAP_PROBLEMS] = {
                    bitIndex: 0,
                    bit: l.CLOSED
                },
                r[m.TogglerEnum.ITEM_PARKING_MAP_PROBLEMS] = {
                    bitIndex: 1,
                    bit: u.OPEN
                },
                r[m.TogglerEnum.ITEM_PARKING_CLOSED_MAP_PROBLEMS] = {
                    bitIndex: 1,
                    bit: u.CLOSED
                },
                r),
            categoriesLength: 2
        },
        i[f.RepositoryFilterName.MAP_UPDATE_REQUESTS] = {
            togglers: (s = {},
                s[m.TogglerEnum.ITEM_UPDATE_REQUESTS] = {
                    bitIndex: 0,
                    bit: d.OPEN
                },
                s[m.TogglerEnum.ITEM_CLOSED_UPDATE_REQUESTS] = {
                    bitIndex: 0,
                    bit: d.CLOSED
                },
                s),
            categoriesLength: 2
        },
        i[f.RepositoryFilterName.VENUES] = {
            togglers: (o = {},
                o[m.TogglerEnum.ITEM_PLACE_UPDATE_REQUESTS] = {
                    bitIndex: 0,
                    bit: h.UPDATE_REQUEST
                },
                o[m.TogglerEnum.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS] = {
                    bitIndex: 1,
                    bit: p.UPDATE_REQUEST
                },
                o[m.TogglerEnum.ITEM_PARKING_PLACE_UPDATE_REQUESTS] = {
                    bitIndex: 2,
                    bit: g.UPDATE_REQUEST
                },
                o[m.TogglerEnum.ITEM_VENUES] = {
                    bitIndex: 0,
                    bit: h.SHOW
                },
                o[m.TogglerEnum.ITEM_RESIDENTIAL_PLACES] = {
                    bitIndex: 1,
                    bit: p.SHOW
                },
                o[m.TogglerEnum.ITEM_PARKING_PLACES] = {
                    bitIndex: 2,
                    bit: g.SHOW
                },
                o),
            categoriesLength: 3
        },
        i);
    t.getFilterBitArray = function(e, t) {
            var n = v[t];
            if (n) {
                var i = n.togglers,
                    r = new Array(n.categoriesLength).fill(0);
                return Object.entries(i).forEach(function(t) {
                        var n = a(t, 2),
                            i = n[0],
                            s = n[1],
                            o = e[i];
                        s && o && (r[s.bitIndex] = r[s.bitIndex] | 1 << s.bit)
                    }),
                    r
            }
            return []
        },
        t.filterToStateTree = function(e, t) {
            var n = {},
                i = v[e].togglers;
            Object.entries(i).filter(function(e) {
                var n = a(e, 2),
                    i = (n[0],
                        n[1]);
                return t[i.bitIndex] & i.bit
            }).forEach(function(e) {
                var t = a(e, 1)[0];
                n[t] = !0
            })
        },
        t.isFilterNonEmpty = function(e) {
            return e.some(function(e) {
                return 0 !== e
            })
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        r = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        },
        s = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = r(n(246)),
        a = n(731),
        l = s(n(12)),
        u = s(n(20)),
        c = s(n(25)),
        d = n(732);

    function h(e) {
        return null != e && 2 === e[0].length && 2 === e[1].length
    }

    function p(e) {
        if (2 !== e.length)
            return null;
        var t = i(e, 2),
            n = t[0],
            r = t[1],
            s = n.attributes.level === r.attributes.level,
            o = n.attributes.geometry,
            a = r.attributes.geometry,
            c = l.getBounds(o, !1),
            d = l.getBounds(a, !1),
            p = c.intersectsBounds(d);
        if (s && p) {
            var g = u.mutuallySplitLineStrings(o, a);
            if (h(g))
                return g
        }
        return null
    }
    t.SegmentSplits = d.SegmentSplits,
        t.isSegmentSplits = h,
        t.generateSplits = p,
        t.intersect = function(e, t) {
            var n = p(e);
            if (null != n) {
                var r = i(e, 2),
                    s = r[0],
                    l = r[1];
                s.isWalkingTrail() && l.isWalkingTrail() || !s.isWalkingTrail() && !l.isWalkingTrail() ? function(e, t, n) {
                    n.actionManager.add(new o.default(e, t))
                }(e, n, t) : function(e, t, n) {
                    var i = e[0].isWalkingTrail(),
                        r = i ? t[0] : t[1],
                        s = i ? e[0] : e[1],
                        o = i ? e[1] : e[0];
                    n.actionManager.add(new a.AddIntersectionVirtual(o, s, r))
                }(e, n, t)
            }
        },
        t.getIntersectionLonLat = function(e) {
            var t = e[1][1].components[0];
            return c.toLonLat(t)
        }
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__read || function(e, t) {
            var n = "function" == typeof Symbol && e[Symbol.iterator];
            if (!n)
                return e;
            var i, r, s = n.call(e),
                o = [];
            try {
                for (;
                    (void 0 === t || t-- > 0) && !(i = s.next()).done;)
                    o.push(i.value)
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    i && !i.done && (n = s.return) && n.call(s)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return o
        },
        o = this && this.__spread || function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e = e.concat(s(arguments[t]));
            return e
        },
        a = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var l = a(n(27)),
        u = a(n(66)),
        c = a(n(98)),
        d = a(n(26)),
        h = function(e) {
            function t(t, n, i) {
                var r = e.call(this, {}) || this;
                return r.nonWtSegment = t,
                    r.wtSegment = n,
                    r.splitsAsSegments = i.map(function(e) {
                        var t = new d.default({
                            geometry: e
                        });
                        return t.copyAttributes(n),
                            t
                    }),
                    r.splitNode = null,
                    r
            }
            return r(t, e),
                t.prototype.getFocusFeatures = function() {
                    return null != this.splitNode ? [this.splitNode] : []
                },
                t.prototype.generateDescription = function() {
                    this._description = I18n.t("save.changes_log.actions.AddIntersection")
                },
                t.prototype.doAction = function() {
                    var e = new c.default(this.wtSegment, {
                        splits: this.splitsAsSegments
                    });
                    if (this.doSubAction(e),
                        this.splitNode = e.getSplitNode(),
                        !this.splitNode)
                        throw new Error("missing split node");
                    var t = new u.default(this.splitNode, this.nonWtSegment, {
                        virtual: !0
                    });
                    this.doSubAction(t)
                },
                t.prototype.getAffectedUniqueIds = function() {
                    return o([this.wtSegment.getUniqueID(), this.nonWtSegment.getUniqueID()], e.prototype.getAffectedUniqueIds.call(this))
                },
                t
        }(l.default);
    t.AddIntersectionVirtual = h
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    })
}, , , , function(e, t, n) {
    var i = {
        "./camera2.png": 737,
        "./camera3.png": 738,
        "./camera4.png": 739
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 736
}, function(e, t, n) {
    e.exports = n.p + "img/camera2afd04923e745ff85f9b132ce1d08e73c.png"
}, function(e, t, n) {
    e.exports = n.p + "img/camera35aab8ac3d52b67ac2b4ef5f22667e317.png"
}, function(e, t, n) {
    e.exports = n.p + "img/camera419787cc5b17be6328baa0f706e30764c.png"
}, function(e, t, n) {
    var i = {
        "./big_direction_end.png": 741,
        "./big_direction_exit_left.png": 742,
        "./big_direction_exit_right.png": 743,
        "./big_direction_forward.png": 744,
        "./big_direction_left.png": 745,
        "./big_direction_right.png": 746,
        "./big_direction_u.png": 747,
        "./big_directions_roundabout.png": 748,
        "./big_directions_roundabout_UK.png": 749,
        "./big_directions_roundabout_UK_l.png": 750,
        "./big_directions_roundabout_UK_s.png": 751,
        "./big_directions_roundabout_l.png": 752,
        "./big_directions_roundabout_r.png": 753,
        "./big_directions_roundabout_r_UK.png": 754,
        "./big_directions_roundabout_s.png": 755,
        "./big_directions_roundabout_u.png": 756,
        "./big_directions_roundabout_u_UK.png": 757,
        "./unknown.png": 758
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 740
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_end25226c71aed0efd3a2db41978066febc.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_exit_left1c1498a6dec9582bae81d34ec9e6dc3b.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_exit_rightba4fee1380f556a8570252c6745f1442.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_forwardc0958c4d4c5c79bcb656d34f3afb3ea2.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_left5b94fa33f945d46ab1bdd1131ac0457e.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_right2d403871f04763260a40c537e231897e.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_direction_u63cf785b68a57e8663020098cd07ed76.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout9f9bf37022d431be50fecc457cd6e3df.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_UK7dce607d7359326a799fd9d3ad8542aa.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_UK_ldc86a0b99cfcd4ed03b0192d5b350c70.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_UK_s01ea5c47f4e08b20532505d84b3271e0.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_l54dc48b91e36549b26bae30135462780.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_rc114740b6cafc42177a53aa6c803c14d.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_r_UKc34794c4d01ec8a9fa012150d2f1e02a.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_sffadf4fd7b277b8ef2f21688e79b9351.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_u3634283a7d740f30eb18c203f6a357be.png"
}, function(e, t, n) {
    e.exports = n.p + "img/big_directions_roundabout_u_UKba204c8a12885976f9bc5b07165b8644.png"
}, function(e, t, n) {
    e.exports = n.p + "img/unknownb34dd18530431d8e3b14a4750cbe4352.png"
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t(t, n) {
            void 0 === t && (t = []);
            var i = this,
                r = new Set,
                s = new Set,
                o = new Set,
                a = new Set,
                l = [],
                u = new Set;
            t.forEach(function(e) {
                e.isEmpty() || (r.add(e.getStreet().id),
                    s.add(e.getCity().attributes.id),
                    o.add(e.getState().id),
                    a.add(e.getCountry().id),
                    null != e.attributes.altStreets && e.attributes.altStreets.forEach(function(e) {
                        if (!e.isEmpty()) {
                            var t = e.getStreet().id;
                            u.has(t) || (l.push(e),
                                u.add(t))
                        }
                    }))
            });
            var c = Array.from(r).map(function(e) {
                    return n.streets.getObjectById(e)
                }),
                d = Array.from(s).map(function(e) {
                    return n.cities.getObjectById(e)
                }),
                h = Array.from(o).map(function(e) {
                    return n.states.getObjectById(e)
                }),
                p = Array.from(a).map(function(e) {
                    return n.countries.getObjectById(e)
                });
            return (i = e.call(this, {
                    isEmpty: 0 === c.length,
                    street: c.length > 1 ? null : c[0],
                    city: d.length > 1 ? null : d[0],
                    state: h.length > 1 ? null : h[0],
                    country: p.length > 1 ? null : p[0],
                    altStreets: l
                }) || this).streets = c,
                i.cities = d,
                i.states = h,
                i.countries = p,
                i.addresses = t,
                i
        }
        return r(t, e),
            t.prototype.hasMixedStreets = function() {
                return this.streets.length > 1
            },
            t.prototype.hasMixedCities = function() {
                return this.cities.length > 1
            },
            t.prototype.hasMixedStates = function() {
                return this.states.length > 1
            },
            t.prototype.hasMixedCountries = function() {
                return this.countries.length > 1
            },
            t.prototype.getStreetName = function(e) {
                var t = (void 0 === e ? {} : e).emptyString;
                return this.hasMixedStreets() ? null : this.addresses[0].getStreetName({
                    emptyString: t
                })
            },
            t.prototype.isEmptyStreet = function() {
                return !this.hasMixedStreets() && this.addresses[0].isEmptyStreet()
            },
            t.prototype.getCityName = function(e) {
                var t = (void 0 === e ? {} : e).emptyString;
                return this.hasMixedCities() ? null : this.addresses[0].getCityName({
                    emptyString: t
                })
            },
            t.prototype.getStateName = function() {
                return this.hasMixedStates() ? null : this.addresses[0].getStateName()
            },
            t.prototype.getCountryName = function() {
                return this.hasMixedCountries() ? null : this.addresses[0].getCountryName()
            },
            t.prototype.format = function() {
                if (this.isEmpty())
                    return I18n.t("edit.landmark.no_address");
                var e = this.hasMixedStates() ? I18n.t("edit.segment.no_common.state") : this.getStateName(),
                    t = this.hasMixedCountries() ? I18n.t("edit.segment.no_common.country") : this.getCountryName();
                return [this.hasMixedStreets() ? I18n.t("edit.segment.no_common.street") : this.getStreetName(), this.hasMixedCities() ? I18n.t("edit.segment.no_common.city") : this.getCityName(), this.hasState() ? e : t].join(", ")
            },
            t.prototype.hasSingleNonEmptyStreet = function() {
                return 1 === this.streets.length && !this.isEmptyStreet()
            },
            t
    }(s(n(80)).default);
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__assign || function() {
            return (s = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var r in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e
            }).apply(this, arguments)
        },
        o = this && this.__rest || function(e, t) {
            var n = {};
            for (var i in e)
                Object.prototype.hasOwnProperty.call(e, i) && t.indexOf(i) < 0 && (n[i] = e[i]);
            if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                var r = 0;
                for (i = Object.getOwnPropertySymbols(e); r < i.length; r++)
                    t.indexOf(i[r]) < 0 && (n[i[r]] = e[i[r]])
            }
            return n
        },
        a = this && this.__importStar || function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var n in e)
                    Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t.default = e,
                t
        },
        l = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var u = a(n(7)),
        c = l(n(57)),
        d = a(n(25)),
        h = function(e) {
            function t(t) {
                var n = t.dataModel,
                    i = t.selection,
                    r = void 0 === i ? [] : i,
                    a = t.onCloseHandler,
                    l = o(t, ["dataModel", "selection", "onCloseHandler"]),
                    c = e.call(this, s({
                        dataModel: n,
                        selection: r
                    }, l)) || this;
                return c.popoverViewModel = new u.Model({
                        visible: !1
                    }),
                    c.onCloseHandler = a,
                    c
            }
            return r(t, e),
                t.prototype.className = function() {
                    return "map-marker-popover"
                },
                t.prototype.popoverBindings = function() {
                    return {
                        ":el": {
                            classes: {
                                show: "visible"
                            }
                        }
                    }
                },
                t.prototype.show = function() {
                    this.popoverViewModel.set("visible", !0)
                },
                t.prototype.hide = function() {
                    this.popoverViewModel.set("visible", !1)
                },
                t.prototype.getLonLat = function() {
                    var e = this.getFeature();
                    return e ? d.toLonLat(e.attributes.geometry.getCentroid()) : null
                },
                t.prototype.onRender = function() {
                    e.prototype.onRender.call(this),
                        this.stickit(this.popoverViewModel, this.popoverBindings())
                },
                t.prototype.setScreenLocation = function(e, t) {
                    this.$el.css({
                        position: "absolute",
                        top: t,
                        left: e
                    })
                },
                t
        }(c.default);
    t.Popover = h
}, , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(4)),
        a = n(133),
        l = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/RestrictedDrivingAreas/templates/popover-restriction-item"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(t.prototype, "className", {
                    get: function() {
                        return "popover-restriction-item-view"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.events = function() {
                    return {
                        click: "_onClick"
                    }
                },
                t.prototype._onClick = function() {
                    this.triggerMethod("restriction:click", this.getRestriction())
                },
                t.prototype.getRestriction = function() {
                    return this.model.attributes.restriction
                },
                t.createModel = function(e, t, n) {
                    var i = new a.TimeFrameViewHelpers({
                        timeFrame: e.getTimeFrame()
                    });
                    return {
                        daysString: i.formatWeekdays(),
                        hoursString: i.formatHours(),
                        summaryString: a.RestrictionViewHelpers.formatSummary(e, n, {}),
                        restriction: e
                    }
                },
                t
        }(o.default.View);
    t.PopoverRestrictionItemView = l
}, function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = s(n(7)),
        a = s(n(4)),
        l = s(n(179)),
        u = function(e) {
            function t(t) {
                var n = e.call(this) || this;
                return n._canEditRestrictions = t.canEditRestrictions,
                    n._title = t.title,
                    n._restrictions = t.restrictions,
                    n.model = new o.default.Model({
                        hasRestrictions: n._restrictions.length > 0,
                        canEditRestrictions: n._canEditRestrictions
                    }),
                    n
            }
            return r(t, e),
                Object.defineProperty(t.prototype, "template", {
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_driving_area"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(t.prototype, "className", {
                    get: function() {
                        return "restrictions-summary restrictions-summary-area"
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.regions = function() {
                    return {
                        listRegion: {
                            el: ".restrictions-list-region tbody",
                            replaceElement: !0
                        }
                    }
                },
                t.prototype.events = function() {
                    return {
                        "click .do-apply": "_onApplyChanges"
                    }
                },
                Object.defineProperty(t.prototype, "triggers", {
                    get: function() {
                        return {
                            "click .do-close": "restriction:summary:close",
                            "click .do-create": "restriction:summary:create"
                        }
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                t.prototype.bindings = function() {
                    return {
                        ".restrictions-list-region": {
                            observe: "hasRestrictions",
                            visible: !0
                        },
                        "input, .do-create, .do-apply": {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditRestrictions",
                                onGet: function(e) {
                                    return !e
                                }
                            }]
                        }
                    }
                },
                t.prototype.templateContext = function() {
                    return {
                        summaryTitle: this._title
                    }
                },
                t.prototype.onRender = function() {
                    this.stickit(),
                        this.showChildView("listRegion", new l.default({
                            restrictions: this._restrictions,
                            canEditRestrictions: this._canEditRestrictions
                        }))
                },
                t.prototype._onApplyChanges = function() {
                    this.triggerMethod("restriction:summary:apply")
                },
                t.prototype.onChildviewItemEdit = function(e) {
                    this.triggerMethod("restriction:item:edit", e.getRestriction())
                },
                t.prototype.onChildviewItemDelete = function(e) {
                    this.triggerMethod("restriction:item:delete", e.getRestriction())
                },
                t
        }(a.default.View);
    t.default = u
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(10),
        r = n.n(i),
        s = OL.Class(OL.Control, {
            googleAerialLayer: null,
            $div: null,
            $link: null,
            destroy: function() {
                return this.map.events.un({
                        changelayer: this.toggleVisibility,
                        scope: this
                    }),
                    OL.Control.prototype.destroy.apply(this, arguments)
            },
            draw: function() {
                return OL.Control.prototype.draw.apply(this, arguments),
                    this.map.events.on({
                        changelayer: this.toggleVisibility,
                        scope: this
                    }),
                    this.$div = r()(this.div).addClass("google-permalink"),
                    this.$link = r()("<a/>").attr({
                        target: "blank",
                        href: "http://maps.google.com"
                    }).appendTo(this.$div),
                    this.div
            },
            toggleVisibility: function() {
                var e = this.map.baseLayer,
                    t = e && e.getVisibility();
                return this.$div.toggle(t)
            }
        });
    t.default = s
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(5),
        o = n.n(s),
        a = n(3),
        l = n.n(a),
        u = n(34),
        c = n.n(u),
        d = n(1),
        h = n.n(d),
        p = n(6),
        g = n.n(p),
        f = n(10),
        m = n.n(f),
        v = n(4),
        _ = n.n(v),
        y = n(23),
        b = n(438),
        E = function(e) {
            function t(e, n) {
                var i;
                return r()(this, t),
                    (i = o()(this, l()(t).call(this, e, n)))._dataModel = e.dataModel,
                    i._mapState = e.mapState,
                    i._regionCode = e.regionCode,
                    i._otherEnv = null,
                    i._dataModel.restrictedEditingAreas.on(y.UPDATED, i._onRestrictedEditingAreasChanged, c()(i)),
                    i._onRestrictedEditingAreasChanged(),
                    i
            }
            return g()(t, e),
                h()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click a": "_onLocationLinkClicked",
                            "click .close": "_onCloseClicked"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Map/templates/location-message"
                    }
                }]),
                h()(t, [{
                    key: "_onRestrictedEditingAreasChanged",
                    value: function() {
                        var e = this,
                            t = Object(b.getInvalidEnvironments)(this._dataModel);
                        (t = t.filter(function(t) {
                            return t.attributes.env !== e._regionCode
                        })).length > 0 ? (this._otherEnv = t[0].attributes.env,
                            this.render(),
                            this.show()) : this.hide()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            otherEnv: this._otherEnv
                        }
                    }
                }, {
                    key: "_onLocationLinkClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = m()(e.target).data("env");
                        this._mapState.updateMapLocation(t),
                            W.app.changeAppRegion(t)
                    }
                }, {
                    key: "_onCloseClicked",
                    value: function() {
                        this.hide(),
                            this._dataModel.restrictedEditingAreas.off(y.UPDATED, this._onRestrictedEditingAreasChanged, this)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.$el.hide()
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.$el.show()
                    }
                }]),
                t
        }(_.a.View);
    t.default = E
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(4),
        r = n.n(i).a.View.extend({
            className: "snapshot-message",
            template: "templates/snapshot-message",
            events: {
                "click .return-to-edit-mode": "_onReturnToEditModeClicked"
            },
            initialize: function() {
                return this.snapshotManager = this.options.snapshotManager,
                    this.listenTo(this.snapshotManager, "change:state", this.render)
            },
            onRender: function() {
                return this.$el.toggle(this.snapshotManager.isSnapshotOn())
            },
            _onReturnToEditModeClicked: function() {
                return this.snapshotManager.toggle(!1)
            }
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(10),
        r = n.n(i),
        s = n(7),
        o = n.n(s),
        a = n(4),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(105),
        h = n(215),
        p = n(18),
        g = n(214),
        f = o.a.Model.extend({
            defaults: function() {
                return {
                    env: null,
                    lon: null,
                    lat: null,
                    zoom: null,
                    marker: !1,
                    appState: {},
                    selection: {},
                    s: 0
                }
            },
            hrefAttributes: ["env", "lon", "lat", "s", "zoom", "marker"],
            initialize: function(e) {
                return this.app = e.app,
                    this.mapState = e.mapState,
                    this._bindEvents(),
                    this._setAppState(),
                    this
            },
            onDestroy: function() {
                return this._unbindEvents()
            },
            _bindEvents: function() {
                this.listenTo(this.app, "change:mode", this._setAppState),
                    this.listenTo(this.app, d.STATE_CHANGED, this._setAppState),
                    this.mapState.on("statechanged", this._setMapState, this)
            },
            _unbindEvents: function() {
                return this.mapState.off("statechanged", this._setMapState, this)
            },
            _setAppState: function() {
                this.set({
                    appState: this.app.getState()
                })
            },
            _setMapState: function(e) {
                return this.set({
                    lon: e.center.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: e.center.lat.toFixed(W.Config.units.lonLatPrecision),
                    s: e.s,
                    zoom: e.center.zoom,
                    marker: !!e.marker || void 0,
                    selection: e.selection
                })
            },
            getHref: function() {
                var e = c.a.pick(this.attributes, this.hrefAttributes);
                c.a.extend(e, this.get("appState")),
                    c.a.extend(e, this.get("selection"));
                var t = OL.Util.getParameterString(e);
                return "".concat(window.location.origin).concat(window.location.pathname, "?").concat(t)
            }
        }),
        m = l.a.View.extend({
            template: "Waze/MapEditor/UI/Map/MapControls/templates/permalink",
            mapState: null,
            marker: null,
            clipboard: null,
            ui: {
                permalink: ".permalink",
                livemapLink: ".livemap-link"
            },
            events: {
                "click @ui.permalink": "_onPermalinkClick",
                "mouseover @ui.permalink": "_onPermalinkMouseOver"
            },
            initialize: function(e) {
                return l.a.View.prototype.initialize.apply(this, arguments),
                    this.mapState = e.mapState,
                    this.mapState.on("statechanged", this._setLiveMapLink, this),
                    this.permalinkModel = new f({
                        app: e.app,
                        mapState: e.mapState,
                        env: e.regionCode
                    }),
                    this.listenTo(this.permalinkModel, "change", this._setPermalinkLink),
                    this.clipboard = new h.a,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }),
                    !0
            },
            _onPermalinkClick: function(e) {
                return e.stopPropagation(),
                    p.reportAnalytic.generalAction("permalink_clicked")
            },
            _onPermalinkMouseOver: function(e) {
                return this.clipboard.set(r()(e.target).attr("href"))
            },
            _onClipboardCopied: function(e) {
                return this.ui.permalink.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.link_copied"))
            },
            _setPermalinkLink: function() {
                var e = this.permalinkModel.getHref();
                return this.ui.permalink.attr("href", e)
            },
            _setLiveMapLink: function(e) {
                var t = Object(g.getLiveMapLinkFromCenter)(e.center);
                return this.ui.livemapLink.attr("href", t)
            },
            onRender: function() {
                return this.ui.permalink.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.permalink)
            }
        });
    t.default = m
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(4),
        r = n.n(i),
        s = n(215),
        o = n(21),
        a = r.a.View.extend({
            granularity: 10,
            numDigits: 5,
            lastXy: null,
            mouseOver: !1,
            clipboard: null,
            template: "Waze/MapEditor/UI/Map/MapControls/templates/mouse_position",
            ui: {
                mousePosition: ".mouse-position"
            },
            events: {
                "mouseover @ui.mousePosition": "_onMouseOver",
                "mouseout @ui.mousePosition": "_onMouseOut"
            },
            initialize: function(e) {
                return this.map = e.map,
                    this.map.getMapEventsListener().register("mousemove", this, this._onMapMouseMove),
                    this.clipboard = new s.a,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }),
                    !0
            },
            onDestroy: function() {
                return this.map.getMapEventsListener().unregister("mousemove", this, this._onMapMouseMove),
                    this.clipboard.events.un({
                        copied: this._onClipboardCopied,
                        scope: this
                    })
            },
            onRender: function() {
                return this.ui.mousePosition.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.mousePosition)
            },
            _formatOutput: function(e) {
                var t = parseInt(this.numDigits, 10);
                return "".concat(e.lon.toFixed(t), " ").concat(e.lat.toFixed(t))
            },
            _onMouseOver: function(e) {
                this.mouseOver = !0;
                var t = this.map.getExtent().getCenterLonLat();
                return o.unproject(t),
                    this._updateHtmlFromLonLat(t),
                    this.clipboard.set(this.ui.mousePosition.html())
            },
            _onMouseOut: function(e) {
                this.mouseOver = !1
            },
            _onClipboardCopied: function(e) {
                return this.ui.mousePosition.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.coords_copied"))
            },
            _updateHtmlFromLonLat: function(e) {
                var t = this._formatOutput(e);
                if (t !== this.ui.mousePosition.html())
                    return this.ui.mousePosition.html(t)
            },
            _onMapMouseMove: function(e) {
                if (null != e && !this.mouseOver) {
                    (null == this.lastXy || Math.abs(e.xy.x - this.lastXy.x) > this.granularity || Math.abs(e.xy.y - this.lastXy.y) > this.granularity) && (this.lastXy = e.xy);
                    var t = this.map.getLonLatFromPixel(e.xy);
                    if (null == t)
                        return;
                    o.unproject(t),
                        this._updateHtmlFromLonLat(t),
                        this.lastXy = e.xy
                }
            }
        });
    t.default = a
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(4),
        r = n.n(i).a.Region.extend({
            el: "#panel-container",
            mapHeight: null,
            initialize: function(e) {
                return e.map.getMapEventsListener().register("resize", this, this._onMapResize),
                    this._bindCloseButtons()
            },
            onShow: function(e, t) {
                return this._ensureElement(),
                    t.$el.addClass("panel"),
                    Promise.resolve().then(function() {
                        t.$el.addClass("show")
                    }),
                    this._setViewHeight()
            },
            _bindCloseButtons: function() {
                var e = this;
                return this.$el.on("click", ".close-panel, .done", function(t) {
                    return e.trigger("closeClicked"),
                        e.empty()
                })
            },
            _onMapResize: function(e) {
                return this.mapHeight = e.height,
                    this._setViewHeight()
            },
            _setViewHeight: function(e) {
                if (this.currentView && !this.currentView.isDestroyed()) {
                    var t = this.mapHeight;
                    t -= parseInt(this.currentView.$el.css("marginTop"), 10),
                        t -= parseInt(this.currentView.$el.css("marginBottom"), 10),
                        this.currentView.setMaxHeight && this.currentView.setMaxHeight(t)
                }
            }
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(7),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(60),
        h = n(37),
        p = function() {
            function e(t) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    extendedMode: !1
                };
                r()(this, e),
                    this._map = t,
                    this._extendedMode = n.extendedMode,
                    this._vectorLayer = null,
                    this._markerLayer = null,
                    this._styleMap = null,
                    this._map.getMapEventsListener().register("zoomend", this, this._onMapZoomed)
            }
            return o()(e, [{
                    key: "destroy",
                    value: function() {
                        null !== this._vectorLayer && (this._map.removeLayer(this._vectorLayer),
                                this._vectorLayer.destroy()),
                            null !== this._markerLayer && (this._map.removeLayer(this._markerLayer),
                                this._markerLayer.destroy()),
                            this._map.getMapEventsListener().unregister("zoomend", this, this._onMapZoomed)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this._getVectorLayer().addFeatures(e)
                    }
                }, {
                    key: "redrawFeature",
                    value: function(e) {
                        this._getVectorLayer().drawFeature(e)
                    }
                }, {
                    key: "addGeometry",
                    value: function(e) {
                        this.addFeatures([new OL.Feature.Vector(e.clone())])
                    }
                }, {
                    key: "createMarker",
                    value: function(e, t, n) {
                        return new OpenLayers.Marker(new OL.LonLat(e, t), n)
                    }
                }, {
                    key: "createIconMarker",
                    value: function(e, t, n) {
                        return this.createMarker(e, t, new h.default(n))
                    }
                }, {
                    key: "removeMarkers",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            t._getMarkerLayer().removeMarker(e)
                        })
                    }
                }, {
                    key: "removeFeatures",
                    value: function(e) {
                        this._getVectorLayer().removeFeatures(e)
                    }
                }, {
                    key: "addMarkers",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            t._getMarkerLayer().addMarker(e),
                                e.layer = t._getMarkerLayer()
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this.removeAllFeatures(),
                            this.removeAllMarkers()
                    }
                }, {
                    key: "removeAllMarkers",
                    value: function() {
                        if (null !== this._markerLayer && null !== this._markerLayer.markers) {
                            var e = this._markerLayer.markers.slice();
                            this._markerLayer.clearMarkers(),
                                e.forEach(function(e) {
                                    return e.destroy()
                                })
                        }
                    }
                }, {
                    key: "removeAllFeatures",
                    value: function() {
                        null !== this._vectorLayer && this._vectorLayer.removeAllFeatures()
                    }
                }, {
                    key: "setStyleMap",
                    value: function(e) {
                        this._styleMap = e,
                            null !== this._vectorLayer && (this._vectorLayer.styleMap = e)
                    }
                }, {
                    key: "moveLayerToTop",
                    value: function() {
                        this._map.moveLayerToTop(this._getVectorLayer()),
                            this._map.moveLayerToTop(this._getMarkerLayer())
                    }
                }, {
                    key: "_getVectorLayer",
                    value: function() {
                        return null === this._vectorLayer && this._initVectorLayer(),
                            this._vectorLayer
                    }
                }, {
                    key: "_getMarkerLayer",
                    value: function() {
                        return null === this._markerLayer && (this._markerLayer = new OL.Layer.Markers(c.a.uniqueId("marker_drawing_context_")),
                                this._map.addLayer(this._markerLayer)),
                            this._markerLayer
                    }
                }, {
                    key: "_initVectorLayer",
                    value: function() {
                        var e = {
                            styleMap: this._styleMap
                        };
                        this._extendedMode && (e.renderers = [d.a]),
                            this._vectorLayer = new OL.Layer.Vector(c.a.uniqueId("vector_drawing_context_"), e),
                            this._map.addLayer(this._vectorLayer)
                    }
                }, {
                    key: "_onMapZoomed",
                    value: function() {
                        this.trigger("zoomend")
                    }
                }, {
                    key: "pixelToMapUnits",
                    value: function(e) {
                        return this._map.getResolution() * e
                    }
                }, {
                    key: "mapUnitsToPixel",
                    value: function(e) {
                        return e / this._map.getResolution()
                    }
                }, {
                    key: "getMapZoom",
                    value: function() {
                        return this._map.getZoom()
                    }
                }, {
                    key: "getMapExtent",
                    value: function() {
                        return this._map.getExtent()
                    }
                }]),
                e
        }();
    c.a.extend(p.prototype, l.a.Events),
        t.default = p
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "default", function() {
            return d
        });
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(225),
        c = n(76),
        d = function() {
            function e(t, n, i) {
                o()(this, e),
                    this._drawingContext = t,
                    this._dataModel = n,
                    this._appPreferences = i,
                    this._turnArrowViewGenerator = new u.a(this._drawingContext, this._dataModel, this._appPreferences, {
                        includeJunctionTurns: !1,
                        includeUturns: !1,
                        includeOnlyDisallowedTurns: !0
                    }),
                    this._drawingContext.on("zoomend", this.draw, this),
                    this._appPreferences.on("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                    this._dataModel.getTurnGraph().on(c.CHANGE_EVENT, this.draw, this)
            }
            return l()(e, [{
                    key: "draw",
                    value: function() {
                        var e, t = this;
                        this._drawingContext.clear();
                        var n = this._getAllVisibleSegment().map(function(e) {
                            return t._turnArrowViewGenerator.generate(e)
                        });
                        (e = []).concat.apply(e, r()(n)).forEach(function(e) {
                            return e.render()
                        })
                    }
                }, {
                    key: "_getAllVisibleSegment",
                    value: function() {
                        var e = this;
                        return this._dataModel.segments.getObjectArray(function(t) {
                            return !t.isDeleted() && t.isDrivable() && t.geometry.bounds.intersectsBounds(e._drawingContext.getMapExtent())
                        })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this._drawingContext.off("zoomend", this.draw, this),
                            this._drawingContext.destroy(),
                            this._appPreferences.off("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                            this._dataModel.getTurnGraph().off(c.CHANGE_EVENT, this.draw, this)
                    }
                }]),
                e
        }()
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.convertBitsToNumber = function(e) {
            return e.reduce(function(e, t) {
                return t.value ? e + Math.pow(2, t.bit) : e
            }, 0)
        },
        t.convertNumberToBits = function(e) {
            for (var t = e, n = [], i = 0; t > 0;) {
                var r = t % 2 == 1;
                n.push({
                        bit: i,
                        value: r
                    }),
                    t = Math.floor(t / 2),
                    i++
            }
            return n
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(774));
    t.generateCityOptions = function(e) {
            var t = new r.default(e);
            return t.getCities().map(function(e) {
                return {
                    label: function(e, t) {
                        var n = t.attributes.name;
                        if (!e.hasMultipleCitiesWithName(n))
                            return n;
                        var i = e.getStateByCity(t);
                        return i && i.name ? n + ", " + i.name : n + " (id: " + t.getID() + ")"
                    }(t, e),
                    value: e.getID()
                }
            }).sort(function(e, t) {
                return e.label.localeCompare(t.label)
            })
        },
        t.generateStreetOptions = function(e, t) {
            var n = new r.default(e),
                i = t && !t.isEmpty();
            return (i ? n.getStreetsByCity(t) : n.getStreets()).map(function(e) {
                return {
                    label: function(e, t, n) {
                        var i = t.name;
                        if (n || !e.hasMultipleStreetsWithName(i))
                            return i;
                        var r = e.getCityByStreet(t);
                        return !r || r.isEmpty() || e.hasMultipleStreetsWithSameCityName(i) ? i + ", (id: " + t.getID() + ")" : i + ", " + r.getName()
                    }(n, e, i),
                    value: e.getID()
                }
            }).sort(function(e, t) {
                return e.label.localeCompare(t.label)
            })
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(0)),
        s = i(n(64)),
        o = function() {
            function e(e) {
                this._dataModel = e
            }
            return e.prototype.getCities = function() {
                    return s.default.citiesWithName(this._dataModel)
                },
                e.prototype.getStreets = function() {
                    return s.default.streetsWithNames(this._dataModel)
                },
                e.prototype._getStreetsByName = function(e) {
                    return this.getStreets().filter(function(t) {
                        return t.name === e
                    })
                },
                e.prototype._getCitiesByName = function(e) {
                    return this.getCities().filter(function(t) {
                        return t.getName() === e
                    })
                },
                e.prototype.hasMultipleStreetsWithName = function(e) {
                    return this._getStreetsByName(e).length > 1
                },
                e.prototype.hasMultipleStreetsWithSameCityName = function(e) {
                    var t = this,
                        n = this._getStreetsByName(e).filter(function(e) {
                            return t.getCityByStreet(e)
                        }).map(function(e) {
                            return t.getCityByStreet(e)
                        }).map(function(e) {
                            return e.getName()
                        });
                    return r.default.uniq(n).length < n.length
                },
                e.prototype.hasMultipleCitiesWithName = function(e) {
                    return this._getCitiesByName(e).length > 1
                },
                e.prototype.getStateByCity = function(e) {
                    var t = e.attributes.stateID;
                    return this._dataModel.states.getObjectById(t)
                },
                e.prototype.getCityByStreet = function(e) {
                    var t = e.cityID,
                        n = this._dataModel.cities.getObjectById(t);
                    if (null === n)
                        throw new Error("city: " + t + " does not exist");
                    return n
                },
                e.prototype.getStreetsByCity = function(e) {
                    var t = this.getStreets();
                    return e ? t.filter(function(t) {
                        return e.getID() === t.cityID
                    }) : t
                },
                e
        }();
    t.default = o
}, , function(e, t, n) {
    "use strict";
    var i, r = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } ||
                    function(e, t) {
                        for (var n in t)
                            t.hasOwnProperty(n) && (e[n] = t[n])
                    }
                )(e, t)
            },
            function(e, t) {
                function n() {
                    this.constructor = e
                }
                i(e, t),
                    e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
                        new n)
            }
        ),
        s = this && this.__importDefault || function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var o = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return r(t, e),
            Object.defineProperty(t.prototype, "className", {
                get: function() {
                    return "lanes-turn-override-option"
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "template", {
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/turn_override_option"
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.bindings = function() {
                return {
                    ".angle-label": "label",
                    ".waze-selected-label": {
                        classes: {
                            visible: "wazeSelected"
                        }
                    },
                    ".selected_v_sign": {
                        classes: {
                            visible: "selected"
                        }
                    },
                    ".turn-angle-icon": {
                        attributes: [{
                            name: "class",
                            observe: "angle",
                            onGet: function(e) {
                                return "angle-" + e
                            }
                        }]
                    }
                }
            },
            Object.defineProperty(t.prototype, "triggers", {
                get: function() {
                    return {
                        click: "option:click"
                    }
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.onRender = function() {
                this.stickit()
            },
            t
    }(s(n(4)).default.View);
    t.default = o
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = n(26);
    t.FLAG_ATTRIBUTES = i.FLAG_ATTRIBUTES;
    var r = function() {
        function e(e) {
            this.segment = e
        }
        return e.prototype.flagAttributesToMasks = function(e) {
                var t = this,
                    n = {};
                return Object.keys(e).forEach(function(i) {
                        t.isFlagAttribute(i) && t.flagAttributeToMask(n, i, e[i])
                    }),
                    n
            },
            e.prototype.isFlagAttribute = function(e) {
                return Object.keys(i.FLAG_ATTRIBUTES).includes(e)
            },
            e.prototype.flagAttributeToMask = function(e, t, n) {
                var r = i.FLAG_ATTRIBUTES[t].mask,
                    s = e[r] || this.segment.attributes[r];
                e[r] = n ? i.FLAG_ATTRIBUTES[t].flag | s : ~i.FLAG_ATTRIBUTES[t].flag & s
            },
            e
    }();
    t.SegmentFlagsCalculator = r
}, function(e, t, n) {
    var i = {
        "./L1.png": 779,
        "./L2.png": 780,
        "./L3.png": 781,
        "./L4.png": 782,
        "./L5.png": 783,
        "./L6.png": 784
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 778
}, function(e, t, n) {
    e.exports = n.p + "img/L1aa3ff82ea2f14d52e379e924ac025d65.png"
}, function(e, t, n) {
    e.exports = n.p + "img/L22dc5c82bd679f68dbe140b301ec76c9d.png"
}, function(e, t, n) {
    e.exports = n.p + "img/L3ac7b9bcdb2761b4d5faeadbdeac5c756.png"
}, function(e, t, n) {
    e.exports = n.p + "img/L47e180dd07fa503114cf8f00cb5865edc.png"
}, function(e, t, n) {
    e.exports = n.p + "img/L53af0fd602ca0bee9a1a240a706edc01e.png"
}, function(e, t, n) {
    e.exports = n.p + "img/L6d6f7e86f1b72079dfa7cada9eec90905.png"
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(46),
        r = OpenLayers.Class(OpenLayers.Control.Button, i.a, {
            actionManager: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("undo", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.unregister("undo", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                this.actionManager.canUndo() ? this.enable() : this.disable()
            },
            trigger: function() {
                this.enabled && (this.onUndo(),
                    this.actionManager.undo())
            },
            onUndo: function() {}
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(46),
        r = OpenLayers.Class(OpenLayers.Control.Button, i.a, {
            actionManager: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("redo", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.unregister("redo", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                this.actionManager.canRedo() ? this.enable() : this.disable()
            },
            trigger: function() {
                this.enabled && (this.onRedo(),
                    this.actionManager.redo())
            },
            onRedo: function() {}
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(46),
        r = OpenLayers.Class(OpenLayers.Control.Button, i.a, {
            trigger: function() {
                W.accelerators.events.triggerEvent("exitHouseNumbers")
            }
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(46),
        r = OpenLayers.Class(OpenLayers.Control.Button, i.a, {
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    this._registerEvents(),
                    this.setEnabled(this.editingAllowedInZoom())
            },
            destroy: function() {
                this._unregisterEvents(),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            _registerEvents: function() {
                this.map.events.register("zoomend", this, this._onZoomChanged)
            },
            _onZoomChanged: function() {
                this.setEnabled(this.editingAllowedInZoom())
            },
            editingAllowedInZoom: function() {
                return this.map.getZoom() >= W.Config.houseNumbers.minEditZoom
            },
            _unregisterEvents: function() {
                this.map.events.unregister("zoomend", this, this._onZoomChanged)
            },
            trigger: function() {
                W.accelerators.events.triggerEvent("editHouseNumbers")
            }
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(254),
        r = OpenLayers.Class(i.default, {
            _save: function() {
                this.enabled && W.commands.execute("save:start")
            }
        });
    t.default = r
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(8),
        o = n.n(s),
        a = n(0),
        l = n.n(a),
        u = n(46),
        c = n(72),
        d = n.n(c),
        h = n(117),
        p = n.n(h),
        g = n(202),
        f = n(31),
        m = n(465),
        v = n.n(m),
        _ = n(255),
        y = n.n(_),
        b = n(159),
        E = n.n(b),
        w = n(151),
        S = n(12),
        k = new OpenLayers.Class(OpenLayers.Control.Button, u.a, {
            keyboardCodes: null,
            keyboardHandler: null,
            initialize: function(e, t, n) {
                u.a.prototype.initialize.apply(this, [n]),
                    OpenLayers.Control.prototype.initialize.apply(this, [n]),
                    this.model = e,
                    this._selectionManager = t,
                    this.keyboardCodes = [OpenLayers.Event.KEY_DELETE],
                    this.keyboardHandler = new g.a(this, {
                        keydown: this.handleKeypress
                    }),
                    this.setEnabled(!1),
                    this._selectionManager.events.register("selectionchanged", this, this._onSelectionChanged),
                    this.model.actionManager.events.on({
                        scope: this,
                        afteraction: this._onActionChange,
                        afterundoaction: this._onActionChange,
                        afterclearactions: this._onActionChange
                    })
            },
            destroy: function() {
                u.a.prototype.destroy.apply(this, arguments),
                    this.keyboardHandler.destroy(),
                    this._selectionManager.events.unregister("selectionchanged", this, this._onSelectionChanged),
                    this.model.actionManager.events.un({
                        scope: this,
                        afteraction: this._onActionChange,
                        afterundoaction: this._onActionChange,
                        afterclearactions: this._onActionChange
                    })
            },
            _onSelectionChanged: function(e) {
                var t = l()(e.selected).map("model").value();
                this.setEnabledByFeatures(t || [])
            },
            _onActionChange: function() {
                var e = this._selectionManager.getSelectedFeatures(),
                    t = l.a.map(e, "model");
                this.setEnabledByFeatures(t)
            },
            _getPrompt: function(e) {
                var t;
                return (t = {},
                    o()(t, b.DELETION_CONFIRMATION_REASON.MULTIPLE_SEGMENTS, {
                        title: I18n.t("edit.segment.delete_confirm.title"),
                        content: I18n.t("edit.segment.delete_confirm.multiple"),
                        dontShowAgainKey: "delete-hn"
                    }),
                    o()(t, b.DELETION_CONFIRMATION_REASON.MULTIPLE_SEGMENTS_HAVE_HOUSE_NUMBERS, {
                        title: I18n.t("edit.segment.delete_confirm.title"),
                        content: I18n.t("edit.segment.delete_confirm.multiple_hn"),
                        dontShowAgainKey: "delete-hn"
                    }),
                    o()(t, b.DELETION_CONFIRMATION_REASON.SEGMENT_HAS_HOUSE_NUMBERS, {
                        title: I18n.t("edit.segment.delete_confirm.title"),
                        content: I18n.t("edit.segment.delete_confirm.hn"),
                        dontShowAgainKey: "delete-hn"
                    }),
                    o()(t, b.DELETION_CONFIRMATION_REASON.DELETE_NODE, {
                        title: I18n.t("edit.node.delete_confirm.delete_node_title"),
                        content: I18n.t("edit.node.delete_confirm.delete_node_content"),
                        dontShowAgainKey: "delete-nodes"
                    }),
                    t)[e]
            },
            trigger: function() {
                var e = this;
                if (this.enabled) {
                    var t = this.features;
                    if (!l.a.isEmpty(t)) {
                        var n = new E.a;
                        if (n.shouldShowPrompt(t)) {
                            var i = n.deletionConfirmationPrompt(t),
                                r = this._getPrompt(i);
                            this.showConfirmBox(S.getBoundsCenterLonLat(t[0].geometry), r).then(function() {
                                e.deleteFeatures()
                            }).catch(function() {})
                        } else
                            this.deleteFeatures()
                    }
                }
            },
            deleteFeatures: function() {
                var e = this.features;
                new v.a(this.model, W.loginManager.user).deleteFeatures(e),
                    this.onFeatureDelete(e)
            },
            showConfirmBox: function(e, t) {
                return w.a.showAsync({
                    lonlat: e,
                    title: t.title,
                    content: t.content,
                    dontShowAgainKey: t.dontShowAgainKey
                })
            },
            setTooltipByReason: function(e) {
                var t, n, i = Object(f.getServerConfig)(),
                    s = i.minRankForDeletingSegment,
                    a = i.maxAllowedSegmentDeletions,
                    l = (t = {},
                        o()(t, p.a.USER_QUOTA_EXCEEDED, ["toolbar.delete_rejection_reasons.quota_exceeded", {
                            quota: a
                        }]),
                        o()(t, p.a.USER_RANK_TOO_LOW, ["toolbar.delete_rejection_reasons.rank_too_low"]),
                        o()(t, p.a.USER_RANK_TOO_LOW_FOR_SEGMENT, ["toolbar.delete_rejection_reasons.rank_not_allowed", {
                            min_rank: d.a.normalizeLevel(s)
                        }]),
                        o()(t, p.a.HAS_PENDING_MERGE, ["toolbar.delete_rejection_reasons.has_pending_merge"]),
                        o()(t, p.a.IN_BIG_JUNCTION, ["toolbar.delete_rejection_reasons.in_big_junction"]),
                        o()(t, p.a.HAS_CLOSURES, ["toolbar.delete_rejection_reasons.has_closures"]),
                        t)[e];
                Boolean(l) ? this.setTooltip((n = I18n).t.apply(n, r()(l))) : this.clearTooltip()
            },
            setEnabledByFeatures: function(e) {
                if (!e || l.a.isEmpty(e))
                    return this.setEnabled(!1),
                        void this.clearTooltip();
                var t = new y.a(this.model, W.loginManager.user).getDeleteRejection(e);
                t.allowed ? this.clearTooltip() : this.setTooltipByReason(t.reason),
                    this.features = e,
                    this.setEnabled(t.allowed)
            },
            handleKeypress: function(e) {
                this.keyboardCodes.includes(e.keyCode) && 1 === this.features.length && this.trigger()
            },
            clearTooltip: function() {
                this.tooltip = void 0,
                    this.events.triggerEvent("tooltipchanged")
            },
            setTooltip: function(e) {
                this.tooltip = e,
                    this.events.triggerEvent("tooltipchanged")
            },
            setEnabled: function(e, t) {
                u.a.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyboardHandler.activate() : this.keyboardHandler.deactivate()
            },
            onFeatureDelete: function(e) {}
        });
    t.default = k
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(5),
        c = n.n(u),
        d = n(3),
        h = n.n(d),
        p = n(14),
        g = n.n(p),
        f = n(6),
        m = n.n(f),
        v = n(27),
        _ = n.n(v),
        y = n(41),
        b = n.n(y),
        E = n(15),
        w = n.n(E),
        S = n(29),
        k = n.n(S),
        T = n(223),
        I = n.n(T),
        A = n(44),
        M = n.n(A),
        O = function(e) {
            function t(e, n) {
                var i;
                return o()(this, t),
                    (i = c()(this, h()(t).call(this, n))).bigJunction = e,
                    i.prevJunctionState = null,
                    i
            }
            return m()(t, e),
                l()(t, [{
                    key: "getFocusFeatures",
                    value: function() {
                        return [this.bigJunction]
                    }
                }, {
                    key: "getAffectedUniqueIds",
                    value: function() {
                        return [this.bigJunction.getUniqueID()].concat(r()(g()(h()(t.prototype), "getAffectedUniqueIds", this).call(this)))
                    }
                }, {
                    key: "doAction",
                    value: function() {
                        var e = this;
                        if (this.bigJunction.state === OpenLayers.State.DELETE)
                            return !1;
                        this.bigJunction.getPossibleTurns().filter(function(e) {
                            return e.getTurnData().hasSegmentPath()
                        }).forEach(function(t) {
                            e.doSubAction(new M.a(e.model.getTurnGraph(), t.withUnknownTurnData(), {
                                dontSerialize: !0
                            }))
                        });
                        var t = this.bigJunction.attributes.segIDs.map(function(t) {
                            return e.model.segments.getObjectById(t)
                        });
                        t.forEach(function(t) {
                                e.doSubAction(new k.a(t, {
                                    crossroadID: null
                                }, {
                                    dontSerialize: !0
                                }))
                            }),
                            this.doSubAction(new I.a(this.bigJunction.getID(), t, T.UPDATE_BIG_JUNCTION_TYPES.REMOVE_JUNCTION_FROM_SEGMENT)),
                            this.prevJunctionState = this.bigJunction.state,
                            this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                                this.model.bigJunctions.stateDeleted(this.bigJunction))
                    }
                }, {
                    key: "undoAction",
                    value: function() {
                        "Undoing deletion of junction ".concat(this.bigJunction.getID()),
                            this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.put(this.bigJunction) : (this.bigJunction.state = this.prevJunctionState,
                                this.model.bigJunctions.changed(this.bigJunction)),
                            g()(h()(t.prototype), "undoAction", this).call(this)
                    }
                }, {
                    key: "redoAction",
                    value: function() {
                        this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                                this.model.bigJunctions.stateDeleted(this.bigJunction)),
                            g()(h()(t.prototype), "redoAction", this).call(this)
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return {
                            _objectType: w.a.BIG_JUNCTION,
                            action: b.a.TYPE.DELETE,
                            attributes: {
                                id: this.bigJunction.getID()
                            }
                        }
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this.bigJunction.name,
                            t = this.bigJunction.getAddress(),
                            n = t ? t.getCityName({
                                emptyString: null
                            }) : null;
                        this._description = e ? I18n.t("save.changes_log.actions.DeleteBigjunction.has_name", {
                            name: e
                        }) : n ? I18n.t("save.changes_log.actions.DeleteBigjunction.has_city", {
                            cityName: n
                        }) : I18n.t("save.changes_log.actions.DeleteBigjunction.default")
                    }
                }]),
                t
        }(_.a);
    t.default = O
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(5),
        l = n.n(a),
        u = n(3),
        c = n.n(u),
        d = n(6),
        h = n.n(d),
        p = n(71),
        g = function(e) {
            function t() {
                return r()(this, t),
                    l()(this, c()(t).apply(this, arguments))
            }
            return h()(t, e),
                o()(t, [{
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.DeleteSegments", {
                            count: this.subActions.length
                        })
                    }
                }]),
                t
        }(n.n(p).a);
    t.default = g
}, function(e, t, n) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.acceptOperation = function() {
            return {
                allowed: !0
            }
        },
        t.rejectOperation = function(e) {
            return {
                allowed: !1,
                reason: e
            }
        }
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importDefault || function(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(192)),
        s = n(20),
        o = function() {
            function e(e) {
                this._dataModel = e,
                    this._actionManager = e.actionManager
            }
            return e.prototype.deleteNode = function(e) {
                    var t = this,
                        n = e.attributes.segIDs.map(function(e) {
                            return t._dataModel.segments.getObjectById(e)
                        });
                    if (this.isSegmentPair(n)) {
                        var i = this.findMainAndAuxSegments(n),
                            s = i.mainSegment,
                            o = i.auxiliarySegment;
                        this._actionManager.add(new r.default(s, o, e))
                    }
                },
                e.prototype.isSegmentPair = function(e) {
                    return 2 === e.length && null !== e[0] && null != e[1]
                },
                e.prototype.findMainAndAuxSegments = function(e) {
                    var t = [s.getLength(e[0].attributes.geometry), s.getLength(e[1].attributes.geometry)];
                    return t[0] > t[1] ? {
                        mainSegment: e[0],
                        auxiliarySegment: e[1]
                    } : {
                        mainSegment: e[1],
                        auxiliarySegment: e[0]
                    }
                },
                e
        }();
    t.default = o
}, function(e, t, n) {
    "use strict";
    var i = this && this.__importStar || function(e) {
        if (e && e.__esModule)
            return e;
        var t = {};
        if (null != e)
            for (var n in e)
                Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
        return t.default = e,
            t
    };
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var r = i(n(25));
    t.findFamiliarLocation = function(e) {
        var t = e.getAddress(),
            n = e.getEditableAreaBounds();
        return null != t ? {
            lonLat: r.toLonLat(t)
        } : function(e) {
            return null != e
        }(n) ? {
            lonLat: n.getCenterLonLat(),
            bounds: n
        } : null
    }
}, function(e, t, n) {
    "use strict";
    n.r(t),
        n.d(t, "initCommunityScriptsSupport", function() {
            return Ue
        });
    var i = n(47),
        r = n(217),
        s = n.n(r),
        o = n(176),
        a = n.n(o),
        l = n(246),
        u = n.n(l),
        c = n(222),
        d = n.n(c),
        h = n(131),
        p = n.n(h),
        g = n(124),
        f = n.n(g),
        m = n(142),
        v = n.n(m),
        _ = n(91),
        y = n.n(_),
        b = n(66),
        E = n.n(b),
        w = n(65),
        S = n.n(w),
        k = n(224),
        T = n(177),
        I = n(102),
        A = n.n(I),
        M = n(83),
        O = n(99),
        C = n.n(O),
        R = n(192),
        D = n.n(R),
        L = n(174),
        P = n.n(L),
        N = n(249),
        x = n.n(N),
        V = n(250),
        j = n.n(V),
        U = n(206),
        F = n.n(U),
        B = n(71),
        G = n.n(B),
        H = n(193),
        z = n(44),
        q = n.n(z),
        Y = n(98),
        $ = n(152),
        K = n(84),
        J = n.n(K),
        Z = n(166),
        Q = n.n(Z),
        X = n(29),
        ee = n.n(X),
        te = n(209),
        ne = n.n(te),
        ie = n(132),
        re = n(15),
        se = n.n(re),
        oe = n(56),
        ae = n(48),
        le = n(36),
        ue = n(81),
        ce = n.n(ue),
        de = n(76),
        he = n.n(de),
        pe = n(38),
        ge = n.n(pe),
        fe = n(51),
        me = n.n(fe),
        ve = n(170),
        _e = n.n(ve),
        ye = n(123),
        be = n.n(ye),
        Ee = n(120),
        we = n.n(Ee),
        Se = n(110),
        ke = n(26),
        Te = n.n(ke),
        Ie = n(244),
        Ae = n.n(Ie),
        Me = n(155),
        Oe = n.n(Me),
        Ce = n(59),
        Re = n(180),
        De = n(37),
        Le = n(89),
        Pe = n(138),
        Ne = n(58),
        xe = n(53),
        Ve = n(93),
        je = n(111);

    function Ue() {
        W.map.controls = W.map.getOLMap().controls,
            W.map.events = W.map.getOLMap().events,
            W.map.getLayerIndex = W.map.getOLMap().getLayerIndex,
            W.map.getLayersByName = W.map.getOLMap().getLayersByName,
            W.map.getViewport = W.map.getOLMap().getViewport,
            W.map.isValidLonLat = W.map.getOLMap().isValidLonLat,
            W.map.layers = W.map.getOLMap().layers,
            W.map.moveTo = W.map.getOLMap().moveTo,
            W.map.setLayerIndex = W.map.getOLMap().setLayerIndex,
            W.map.zoom = W.map.getOLMap().zoom,
            W.map.zoomToExtent = W.map.getOLMap().zoomToExtent,
            window.Waze = new Proxy(W, {
                get: function(e, t) {
                    var n = t;
                    return console.warn("Waze is deprecated and will be removed soon, use W instead"),
                        e[n]
                }
            }),
            Oe.a.prototype.get = function(e) {
                return console.warn("repository get method is deprecated and will be removed soon, use getObjectById instead"),
                    this.getObjectById(e)
            },
            Oe.a.prototype.getByAttributes = function(e) {
                console.warn("repository getByAttributes method is deprecated and will be removed soon");
                var t = Object.keys(e);
                return 0 === t.length ? [] : this.getObjectArray().filter(function(n) {
                    return t.every(function(t) {
                        return (n instanceof me.a ? n.getFeatureAttributes() : n)[t] === e[t]
                    })
                })
            },
            Oe.a.prototype.getAsync = function(e) {
                var t = this;
                return this.getRepositoryName() === oe.RepositoryName.UPDATE_REQUEST_SESSIONS ? (console.warn("getAsync() is deprecated and will be removed soon"),
                    (new Ce.a).getUpdateRequestSessionsByIds(e).then(function(e) {
                        return t.model.mergeResponse(e),
                            e.updateRequestSessions.objects
                    })) : Promise.reject(new Error("getAsync is valid only for updateRequestSessions"))
            },
            Object.defineProperty(Oe.a.prototype, "top", {
                get: function() {
                    return this.objectType === se.a.COUNTRY ? this.model.getTopCountry() : this.objectType === se.a.STATE ? this.model.getTopState() : void 0
                }
            }),
            Re.a.prototype.hasSelectedItems = function() {
                return console.warn("hasSelectedItems method is deprecated and will be removed soon, use hasSelectedFeatures instead"),
                    this.hasSelectedFeatures()
            },
            Re.a.prototype.getReversedSegments = function() {
                var e = this.getSegmentSelection(),
                    t = {
                        multipleConnectedComponents: e.hasMultipleConnectedComponents(),
                        numReversed: e.getNumberOfReversedSegments()
                    };
                return e.getSelectedSegments().forEach(function(n) {
                        var i = n.getID();
                        null != i && (t[i] = e.isReversed(n))
                    }),
                    t
            },
            _e.a.prototype.getAllSegments = function() {
                return console.warn("Junction getAllSegments method is deprecated and will be removed soon, use W.model.segments.getByIds(Junction.getSegmentsIds()) instead"),
                    this.model.segments.getByIds(this.attributes.segIDs)
            },
            Te.a.prototype.isLockedByHigherRank = function() {
                return new Ve.SegmentsPermissionsUseCase(this.model, this).isLockedByHigherRank()
            },
            Te.a.prototype.isWalkingRoadType = function() {
                return this.isWalkingTrail()
            },
            Te.a.prototype.isRoutable = function() {
                return Object(ae.isRoutingRoadType)(this.attributes.roadType)
            },
            Te.a.prototype.isInBigJunction = function() {
                return new xe.SegmentsBigJunctionUseCase(this.model, this).isInBigJunction()
            },
            Te.a.prototype.isBigJunctionShort = function() {
                return new xe.SegmentsBigJunctionUseCase(this.model, this).isBigJunctionShort()
            },
            Te.a.prototype.hasFromBigJunction = function(e) {
                return new xe.SegmentsBigJunctionUseCase(this.model, this).hasFromBigJunction(e)
            },
            Te.a.prototype.hasToBigJunction = function(e) {
                return new xe.SegmentsBigJunctionUseCase(this.model, this).hasToBigJunction(e)
            },
            Te.a.prototype.getRoundabout = function() {
                return this.isInRoundabout() ? this.model.junctions.getObjectById(this.attributes.junctionID) : null
            },
            we.a.prototype.areConnectionsEditable = function() {
                return new je.CanEditTurnsUseCase(this.model).canEditNodeTurns(this)
            },
            W.Config.user_profile = i.buildConfig.user_profile,
            W.Config.venues.categories = le.VENUE_MAIN_CATEGORIES_LIST,
            W.Config.venues.subcategories = le.VENUE_SUBCATEGORIES,
            Object.freeze(W.Config),
            window.require = function(e) {
                var t = {
                    "Waze/Action/AddAlternateStreet": s.a,
                    "Waze/Action/AddIntersection": u.a,
                    "Waze/Action/AddLandmark": d.a,
                    "Waze/Action/AddNode": p.a,
                    "Waze/Action/AddOrGetCity": f.a,
                    "Waze/Action/AddOrGetStreet": v.a,
                    "Waze/Action/AddSegment": y.a,
                    "Waze/Action/ConnectSegment": E.a,
                    "Waze/Action/CreateObject": S.a,
                    "Waze/Action/CreateRoundabout": k.a,
                    "Waze/Action/DeleteObject": A.a,
                    "Waze/Action/DeleteSegment": M.default,
                    "Waze/Action/DisconnectSegment": C.a,
                    "Waze/Action/MergeSegments": D.a,
                    "Waze/Action/ModifyAllConnections": P.a,
                    "Waze/Action/MoveNode": F.a,
                    "Waze/Action/MultiAction": G.a,
                    "Waze/Action/SplitSegments": Y.default,
                    "Waze/Action/UpdateFeatureAddress": $.a,
                    "Waze/Action/UpdateFeatureGeometry": J.a,
                    "Waze/Action/UpdateHouseNumber": Q.a,
                    "Waze/Action/MoveHouseNumber": x.a,
                    "Waze/Actions/AddHouseNumber": a.a,
                    "Waze/Actions/DeleteHouseNumber": T.default,
                    "Waze/Actions/ReplaceHouseNumberSegment": H.default,
                    "Waze/Actions/MoveHouseNumberFractionPoint": j.a,
                    "Waze/Action/UpdateObject": ee.a,
                    "Waze/Action/UpdatePlaceUpdate": ne.a,
                    "Waze/Action/UpdateSegmentGeometry": ie.default,
                    "Waze/DivIcon": De.default,
                    "Waze/Feature/Vector/Landmark": be.a,
                    "Waze/Feature/Vector/Segment": Te.a,
                    "Waze/Feature/Vector/UpdateRequest": Ae.a,
                    "Waze/Handler/DragElement": Le.a,
                    "Waze/Model/Graph/Actions/SetTurn": q.a,
                    "Waze/Model/Graph/TurnData": ce.a,
                    "Waze/Model/Graph/TurnGraph": he.a,
                    "Waze/Model/Graph/Vertex": ge.a,
                    "Waze/Model/Objects/OpeningHour": Se.OpeningHour,
                    "Waze/Modules/Closures/Models/ClosureActionBuilder": Pe.a,
                    "Waze/Modules/Closures/Models/SharedClosure": Ne.b
                } [e];
                if (null != t)
                    return t;
                throw new Error("Cannot find module ".concat(e))
            }
    }
}, , , , , , , , , , , , , function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(8),
        r = n.n(i);
    var s, o = document.documentElement.lang,
        a = n(810);
    a.missingBehaviour = "guess",
        a.missingTranslationPrefix = "'",
        a.locale = o,
        a.translations = r()({}, o, (s = document.getElementById("localeStrings").textContent,
            JSON.parse(s))),
        window.I18n = a
}, , , , , function(e, t) {
    var n = "א".charCodeAt(0),
        i = "ת".charCodeAt(0);
    $.fn.autoRTL = function() {
            arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            return this.each(function() {
                var e, t, r = $(this),
                    s = r.is(":input") ? r.val() : r.text();
                if (0 !== (s = $.trim(s)).length)
                    return (e = s.charAt(0),
                        n <= (t = e.charCodeAt(0)) && t <= i) ? r.css({
                        direction: "rtl",
                        textAlign: "right"
                    }) : r.css({
                        direction: "ltr",
                        textAlign: "left"
                    })
            })
        },
        $("body").on("keypress", "[data-auto-rtl]", function() {
            return $(this).autoRTL()
        })
}, , , , , , , , , , , , , , , , , , , function(e, t, n) {
    var i = {
        "./af-ZA.js": 834,
        "./ar-AE.js": 835,
        "./ar-BH.js": 836,
        "./ar-DZ.js": 837,
        "./ar-EG.js": 838,
        "./ar-IQ.js": 839,
        "./ar-JO.js": 840,
        "./ar-KW.js": 841,
        "./ar-LB.js": 842,
        "./ar-LY.js": 843,
        "./ar-MA.js": 844,
        "./ar-OM.js": 845,
        "./ar-QA.js": 846,
        "./ar-SA.js": 847,
        "./ar-SY.js": 848,
        "./ar-TN.js": 849,
        "./ar-YE.js": 850,
        "./az-Cyrl-AZ.js": 851,
        "./az-Latn-AZ.js": 852,
        "./be-BY.js": 853,
        "./bg-BG.js": 854,
        "./bs-Latn-BA.js": 855,
        "./ca-ES.js": 856,
        "./cs-CZ.js": 857,
        "./cy-GB.js": 858,
        "./da-DK.js": 859,
        "./de-AT.js": 860,
        "./de-CH.js": 861,
        "./de-DE.js": 862,
        "./de-LI.js": 863,
        "./de-LU.js": 864,
        "./dv-MV.js": 865,
        "./el-GR.js": 866,
        "./en-029.js": 867,
        "./en-AU.js": 868,
        "./en-BZ.js": 869,
        "./en-CA.js": 870,
        "./en-GB.js": 871,
        "./en-IE.js": 872,
        "./en-JM.js": 873,
        "./en-NZ.js": 874,
        "./en-PH.js": 875,
        "./en-TT.js": 876,
        "./en-ZA.js": 877,
        "./en-ZW.js": 878,
        "./es-AR.js": 879,
        "./es-BO.js": 880,
        "./es-CL.js": 881,
        "./es-CO.js": 882,
        "./es-CR.js": 883,
        "./es-DO.js": 884,
        "./es-EC.js": 885,
        "./es-ES.js": 886,
        "./es-GT.js": 887,
        "./es-HN.js": 888,
        "./es-MX.js": 889,
        "./es-NI.js": 890,
        "./es-PA.js": 891,
        "./es-PE.js": 892,
        "./es-PR.js": 893,
        "./es-PY.js": 894,
        "./es-SV.js": 895,
        "./es-UY.js": 896,
        "./es-VE.js": 897,
        "./et-EE.js": 898,
        "./eu-ES.js": 899,
        "./fa-IR.js": 900,
        "./fi-FI.js": 901,
        "./fo-FO.js": 902,
        "./fr-BE.js": 903,
        "./fr-CA.js": 904,
        "./fr-CH.js": 905,
        "./fr-FR.js": 906,
        "./fr-LU.js": 907,
        "./fr-MC.js": 908,
        "./gl-ES.js": 909,
        "./gu-IN.js": 910,
        "./he-IL.js": 911,
        "./hi-IN.js": 912,
        "./hr-BA.js": 913,
        "./hr-HR.js": 914,
        "./hu-HU.js": 915,
        "./hy-AM.js": 916,
        "./id-ID.js": 917,
        "./is-IS.js": 918,
        "./it-CH.js": 919,
        "./it-IT.js": 920,
        "./ja-JP.js": 921,
        "./ka-GE.js": 922,
        "./kk-KZ.js": 923,
        "./kn-IN.js": 924,
        "./ko-KR.js": 925,
        "./kok-IN.js": 926,
        "./ky-KG.js": 927,
        "./lt-LT.js": 928,
        "./lv-LV.js": 929,
        "./mi-NZ.js": 930,
        "./mk-MK.js": 931,
        "./mn-MN.js": 932,
        "./mr-IN.js": 933,
        "./ms-BN.js": 934,
        "./ms-MY.js": 935,
        "./mt-MT.js": 936,
        "./nb-NO.js": 937,
        "./nl-BE.js": 938,
        "./nl-NL.js": 939,
        "./nn-NO.js": 940,
        "./ns-ZA.js": 941,
        "./pa-IN.js": 942,
        "./pl-PL.js": 943,
        "./pt-BR.js": 944,
        "./pt-PT.js": 945,
        "./quz-BO.js": 946,
        "./quz-EC.js": 947,
        "./quz-PE.js": 948,
        "./ro-RO.js": 949,
        "./ru-RU.js": 950,
        "./sa-IN.js": 951,
        "./se-FI.js": 952,
        "./se-NO.js": 953,
        "./se-SE.js": 954,
        "./sk-SK.js": 955,
        "./sl-SI.js": 956,
        "./sma-NO.js": 957,
        "./sma-SE.js": 958,
        "./smj-NO.js": 959,
        "./smj-SE.js": 960,
        "./smn-FI.js": 961,
        "./sms-FI.js": 962,
        "./sq-AL.js": 963,
        "./sr-Cyrl-BA.js": 964,
        "./sr-Cyrl-CS.js": 965,
        "./sr-Latn-BA.js": 966,
        "./sr-Latn-CS.js": 967,
        "./sv-FI.js": 968,
        "./sv-SE.js": 969,
        "./sw-KE.js": 970,
        "./syr-SY.js": 971,
        "./ta-IN.js": 972,
        "./te-IN.js": 973,
        "./th-TH.js": 974,
        "./tn-ZA.js": 975,
        "./tr-TR.js": 976,
        "./tt-RU.js": 977,
        "./uk-UA.js": 978,
        "./ur-PK.js": 979,
        "./uz-Cyrl-UZ.js": 980,
        "./uz-Latn-UZ.js": 981,
        "./vi-VN.js": 982,
        "./xh-ZA.js": 983,
        "./zh-CN.js": 984,
        "./zh-HK.js": 985,
        "./zh-MO.js": 986,
        "./zh-SG.js": 987,
        "./zh-TW.js": 988,
        "./zu-ZA.js": 989
    };

    function r(e) {
        var t = s(e);
        return n(t)
    }

    function s(e) {
        var t = i[e];
        if (!(t + 1)) {
            var n = new Error("Cannot find module '" + e + "'");
            throw n.code = "MODULE_NOT_FOUND",
                n
        }
        return t
    }
    r.keys = function() {
            return Object.keys(i)
        },
        r.resolve = s,
        e.exports = r,
        r.id = 833
}function(e, t, n) {
    n(1101),
        n(1106),
        n(1108),
        n(1113),
        n(1116),
        n(1118),
        n(1121),
        n(1124),
        n(1126),
        n(1128),
        n(1131)
}, , , , , , function(e, t, n) {}, , , , , , , function(e, t, n) {}, , , function(e, t, n) {}, , function(e, t, n) {}, , , function(e, t, n) {}, , , , , , , function(e, t, n) {}, , , function(e, t, n) {}, , function(e, t, n) {
    "use strict";
    n.r(t);
    var i, r = n(8),
        s = n.n(r),
        o = n(4),
        a = n.n(o),
        l = n(198),
        u = n.n(l),
        c = n(105),
        d = n(13),
        h = n.n(d),
        p = n(7),
        g = n.n(p),
        f = n(77),
        m = n.n(f),
        v = n(95),
        _ = g.a.Collection.extend({
            model: v.default,
            initialize: function() {
                this.serializer = new m.a
            },
            url: function() {
                return W.Config.paths.notifications
            },
            parse: function(e) {
                return this.serializer.read(e),
                    e.notifications.objects.filter(function(e) {
                        return e.isNotification()
                    })
            }
        }),
        y = _.extend({
            parse: function(e) {
                return this.serializer.read(e),
                    e.notifications.objects.filter(function(e) {
                        return e.isForumMessage()
                    })
            }
        }),
        b = n(2),
        E = n.n(b),
        w = n(1),
        S = n.n(w),
        k = n(5),
        T = n.n(k),
        I = n(3),
        A = n.n(I),
        M = n(6),
        O = n.n(M),
        C = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "parse",
                    value: function(e) {
                        return this.serializer.read(e),
                            e.notifications.objects.filter(function(e) {
                                return e.isFirstTimeMessage()
                            })
                    }
                }]),
                t
        }(_),
        R = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "parse",
                    value: function(e) {
                        return this.serializer.read(e),
                            e.notifications.objects.filter(function(e) {
                                return e.isMentoringMessage()
                            })
                    }
                }]),
                t
        }(_),
        D = n(0),
        L = n.n(D),
        P = n(50),
        N = n(23),
        x = P.a.prototype.TYPE,
        V = g.a.Collection.extend({
            model: P.a,
            initialize: function() {
                this.dataModel = W.model,
                    this.dataModelRefs = {},
                    this.serializer = new m.a
            },
            url: function() {
                return W.Config.paths.issues
            },
            parse: function(e) {
                if (!e.issues || !e.issues.objects)
                    return [];
                this.serializer.read(e),
                    this.dataModel.putPersistent(e);
                var t = this._setReferences(e.issues.objects);
                return this._setListeners(),
                    t
            },
            _setReferences: function(e) {
                for (var t = [], n = 0; n < e.length; n++) {
                    var i = e[n],
                        r = void 0,
                        s = void 0,
                        o = void 0,
                        a = {};
                    switch (i.attributes.type) {
                        case x.MAP_PROBLEM:
                            s = null != (r = this._getProblem(i)),
                                a = {
                                    problem: r
                                };
                            break;
                        case x.UPDATE_REQUEST:
                            s = null != (r = this._getUpdateRequest(i)),
                                a = {
                                    updateRequest: r
                                };
                            break;
                        case x.VENUE_UPDATE_REQUEST:
                            r = this._getVenue(i),
                                o = this._getVenueUpdateRequest(i),
                                s = null != r && null != o,
                                a = {
                                    venue: r,
                                    updateRequest: o,
                                    initialApproved: o ? o.get("approved") : void 0
                                }
                    }
                    var l = this._getKey(r);
                    s && null != l ? (i.set(a),
                        this.dataModelRefs[l] || (this.dataModelRefs[l] = []),
                        this.dataModelRefs[l].push(i),
                        t.push(i)) : console.error("invalid issue: ".concat(i.get("type"), " ").concat(i.get("id")))
                }
                return t
            },
            _setListeners: function() {
                return this._bindRepositoryEvents(this.dataModel.problems),
                    this._bindRepositoryEvents(this.dataModel.mapUpdateRequests),
                    this._bindRepositoryEvents(this.dataModel.venues)
            },
            _bindRepositoryEvents: function(e) {
                var t = this,
                    n = {};
                n[N.ATTR_CHANGED] = this._makeTrigger("onModelChanged"),
                    n[N.REMOVED] = this._makeTrigger("onModelRemoved"),
                    n[N.SYNCED] = this._makeTrigger("onModelSynced"),
                    Object.keys(n).forEach(function(i) {
                        var r = n[i];
                        e.on(i, r, t)
                    })
            },
            _makeTrigger: function(e) {
                var t = this;
                return function(n) {
                    for (var i = 0; i < n.length; i++) {
                        var r = n[i],
                            s = t._getIssues(r);
                        null != s && s.forEach(function(t) {
                            return t[e].call(t)
                        })
                    }
                }
            },
            _getProblem: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.problems.getObjectById(t)
            },
            _getUpdateRequest: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.mapUpdateRequests.getObjectById(t)
            },
            _getVenue: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.venues.getObjectById(t)
            },
            _getVenueUpdateRequest: function(e) {
                var t = this._getVenue(e).attributes.venueUpdateRequests,
                    n = e.attributes.venueUpdateRequestId;
                return L()(t).find({
                    id: n
                })
            },
            _getKey: function(e) {
                if (e)
                    return "".concat(e.type, "_").concat(e.getID())
            },
            _getIssues: function(e) {
                var t = this._getKey(e);
                return this.dataModelRefs[t]
            }
        }),
        j = function() {
            function e(t) {
                var n = this;
                E()(this, e),
                    this.intervalTime = 5e3,
                    this.count = 0,
                    this.maxCount = 3,
                    this.task = function() {},
                    this.repeatUntil = function() {
                        return !1
                    },
                    Object.assign(this, t),
                    this._lastTaskResult = null,
                    this._timeout = 0,
                    this.reject = null,
                    this.resolve = null,
                    this._stopped = !1,
                    this._started = !1,
                    this._promise = new Promise(function(e, t) {
                        n.resolve = e,
                            n.reject = t
                    })
            }
            return S()(e, [{
                    key: "startLoop",
                    value: function() {
                        return this._started ? this._promise : (this._started = !0,
                            this._pollingLoop(),
                            this._promise)
                    }
                }, {
                    key: "_resolve",
                    value: function(e) {
                        this._stopPollingLoop(),
                            this._stopped || (this._stopped = !0,
                                this.resolve(e))
                    }
                }, {
                    key: "_reject",
                    value: function(e) {
                        this._stopPollingLoop(),
                            this._stopped || (this._stopped = !0,
                                this.reject(e))
                    }
                }, {
                    key: "breakLoop",
                    value: function() {
                        this._reject(!1)
                    }
                }, {
                    key: "_stopPollingLoop",
                    value: function() {
                        this._timeout && (window.clearTimeout(this._timeout),
                            this._timeout = 0)
                    }
                }, {
                    key: "_pollingLoop",
                    value: function() {
                        var e = this;
                        if (!this._stopped)
                            if (this.count >= this.maxCount)
                                this._reject(!1);
                            else {
                                var t = this.intervalTime;
                                0 === this.count && (t = 0),
                                    this._timeout = window.setTimeout(function() {
                                        e.count++;
                                        var t = e.task();
                                        Promise.resolve(t).catch(function() {}).then(e._responseCallback.bind(e))
                                    }, t)
                            }
                    }
                }, {
                    key: "_responseCallback",
                    value: function(e) {
                        this._lastTaskResult = e,
                            this._next()
                    }
                }, {
                    key: "_next",
                    value: function() {
                        this._stopPollingLoop(),
                            this.checkAndStopIfFinished() || this._pollingLoop()
                    }
                }, {
                    key: "checkAndStopIfFinished",
                    value: function() {
                        return !!this.repeatUntil(this._lastTaskResult) && (this._resolve(!0),
                            !0)
                    }
                }]),
                e
        }(),
        U = n(30),
        F = g.a.Model.extend({
            defaults: {
                empty: !0,
                loading: !1,
                loadingMore: !1,
                lastIssueId: null,
                firstTimePolling: !1
            },
            initialize: function() {
                return this.serializer = new m.a,
                    this.notifications = new _,
                    this.notifications.on("all", this._updateSelf, this),
                    this.messages = new y,
                    this.messages.on("all", this._updateSelf, this),
                    this.firstTimeMessages = new C,
                    this.firstTimeMessages.on("all", this._updateSelf, this),
                    this.mentoringMessages = new R,
                    this.mentoringMessages.on("all", this._updateSelf, this),
                    this.issues = new V,
                    this.issues.on("all", this._updateSelf, this)
            },
            startFirstTimePolling: function() {
                var e = this;
                this.set("firstTimePolling", !0),
                    this.notificationsPolling = new j({
                        intervalTime: 3e3,
                        maxCount: 4,
                        task: function() {
                            return Object(U.httpGet)(W.Config.paths.notifications).then(function(t) {
                                e._onNotificationsResponse(t)
                            })
                        },
                        repeatUntil: function() {
                            return e.firstTimeMessages.length > 0
                        }
                    }),
                    this.issuesPolling = new j({
                        intervalTime: 5e3,
                        maxCount: 4,
                        task: function() {
                            return e.issues.fetch({
                                reset: !0
                            })
                        },
                        repeatUntil: function() {
                            return e.issues.length > 0
                        }
                    });
                var t = this.notificationsPolling.startLoop(),
                    n = this.issuesPolling.startLoop();
                Promise.all([t, n]).then(function() {
                    e.set("firstTimePolling", !1)
                }, function() {
                    e.set("firstTimePolling", !1)
                })
            },
            refresh: function() {
                var e = this;
                if (!this.attributes.loading) {
                    this.set("loading", !0);
                    var t = Object(U.httpGet)(W.Config.paths.notifications),
                        n = this.issues.fetch({
                            reset: !0
                        });
                    return Promise.all([t, n]).then(function(t) {
                        var n = h()(t, 2),
                            i = n[0],
                            r = n[1];
                        return e._onNotificationsResponse(i),
                            e.notificationsPolling && e.notificationsPolling.checkAndStopIfFinished(),
                            e.set("lastIssueId", r.lastIssueId)
                    }).finally(function() {
                        return e.set("loading", !1)
                    })
                }
            },
            _onNotificationsResponse: function(e) {
                var t = this;
                if (this.serializer.read(e),
                    e.notifications) {
                    var n = e.notifications.objects,
                        i = n.filter(function(e) {
                            return e.isNotification()
                        }),
                        r = n.filter(function(e) {
                            return e.isForumMessage()
                        }),
                        s = n.filter(function(e) {
                            return e.isMentoringMessage()
                        }),
                        o = n.filter(function(e) {
                            return e.isFirstTimeMessage()
                        }).filter(function(e) {
                            return e.attributes.type !== e.TYPE.CHECK_YOUR_NEIGHBORHOOD || t._hasHome(e)
                        });
                    this.notifications.reset(i),
                        this.messages.reset(r),
                        this.firstTimeMessages.reset(o),
                        this.mentoringMessages.reset(s)
                }
            },
            _hasHome: function(e) {
                return Boolean(e.attributes.parameters.address)
            },
            loadMore: function() {
                var e = this;
                if (!this.attributes.loadingMore)
                    return this.set("loadingMore", !0),
                        Promise.resolve(this.issues.fetch({
                            remove: !1,
                            data: {
                                lastIssueId: this.get("lastIssueId")
                            }
                        })).then(function(t) {
                            return e.set("lastIssueId", t.lastIssueId)
                        }).finally(function() {
                            return e.set("loadingMore", !1)
                        })
            },
            _updateSelf: function() {
                var e = this.notifications.length + this.messages.length + this.firstTimeMessages.length + this.issues.length === 0;
                return this.set("empty", e)
            }
        }),
        B = n(18),
        G = n(9),
        H = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/Feed/templates/feed",
            events: {
                "click .feed-load-more": "_onLoadMoreClick"
            },
            regions: {
                notifications: ".feed-notifications",
                firstTimeMessages: ".feed-first-time-messages",
                messages: ".feed-messages",
                mentoringMessages: ".feed-mentoring",
                issues: ".feed-issues"
            },
            bindings: {
                ".feed-loading": {
                    observe: "loading",
                    visible: !0,
                    visibleFn: G.b
                },
                ".feed-content": {
                    observe: "loading",
                    visible: function(e) {
                        return !e
                    }
                },
                ".feed-empty": {
                    observe: ["empty", "loading"],
                    visible: function(e) {
                        var t = h()(e, 2),
                            n = t[0],
                            i = t[1];
                        return n && !i
                    }
                },
                ".feed-load-more": {
                    observe: ["loading", "loadingMore"],
                    visible: function(e) {
                        var t = h()(e, 2),
                            n = t[0],
                            i = t[1];
                        return !n && !i
                    }
                },
                ".feed-loading-more": {
                    observe: "loadingMore",
                    visible: !0,
                    visibleFn: G.b
                },
                ".feed-load-section": {
                    observe: "firstTimePolling",
                    visible: L.a.negate(L.a.identity)
                },
                ".feed-first-time-load": {
                    observe: "firstTimePolling",
                    visible: !0,
                    visibleFn: G.b
                }
            },
            onRender: function() {
                return this.stickit()
            },
            _onLoadMoreClick: function() {
                this.model.loadMore(),
                    B.reportAnalytic.feedAction("load_more")
            }
        }),
        z = n(16),
        q = a.a.View.extend({
            tagName: "li",
            className: "feed-item",
            triggers: {
                click: "click"
            },
            events: {
                "click .delete": "_onClickDelete"
            },
            initialize: function() {
                this.model.on("change:selected", this._toggleSelected, this),
                    this.model.on("delegate:delete", this._destroyModel, this),
                    this.model.on("resolved", this._destroyModel, this)
            },
            serializeData: function() {
                return {
                    title: this.model.getParameter("title"),
                    shortMessage: this.model.getParameter("shortMessage"),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _onClickDelete: function(e) {
                return e.stopPropagation(),
                    this._destroyModel()
            },
            _destroyModel: function() {
                var e = this;
                this.$el.one("transitionend", function() {
                        return e.model.destroy()
                    }),
                    this.$el.addClass("deleting"),
                    B.reportAnalytic.feedAction("dismiss", this.model.get("type"))
            },
            _toggleSelected: function() {
                var e = this.model.get("selected");
                this.$el.toggleClass("selected", e),
                    e && this.el.scrollIntoViewIfNeeded()
            },
            _formatTimestamp: function() {
                return z.default.localizeDateString("date.formats.long_with_time", this.model.get("timestamp"))
            }
        }),
        Y = q.extend({
            className: function() {
                return "feed-item feed-notification"
            },
            template: "Waze/MapEditor/UI/Modules/Feed/templates/notification_item",
            serializeData: function() {
                return L.a.extend(q.prototype.serializeData.apply(this, arguments), {
                    title: this._getValueOrTemplate("title"),
                    shortMessage: this._getValueOrTemplate("shortMessage")
                })
            },
            _getValueOrTemplate: function(e) {
                var t = this.model.getParameter(e);
                if (null == t) {
                    var n = "feed.notifications.type.".concat(this.model.attributes.type, ".").concat(e);
                    void 0 !== I18n.lookup(n) && (t = I18n.translate(n, this.model.attributes.parameters))
                }
                return t
            }
        }),
        $ = n(442),
        K = n.n($),
        J = n(443),
        Z = n.n(J),
        Q = n(444),
        X = n.n(Q),
        ee = n(445),
        te = n.n(ee),
        ne = n(446),
        ie = n.n(ne),
        re = I18n.t("internal.wiki_best_practices_link"),
        se = I18n.t("internal.wiki_area_manager"),
        oe = I18n.t("internal.wiki_country_manager"),
        ae = I18n.t("internal.wiki_mentoring"),
        le = I18n.t("internal.wiki_rank_link"),
        ue = I18n.t("internal.editing_local_forum_link"),
        ce = {
            FLAGGED_USER: re,
            BLOCKED_USER: re,
            ACTIVATED_USER: re,
            WELCOME_NEW_EDITOR: ue,
            WELCOME_TO_WME: re,
            SOON_TO_BE_UPGRADED: le,
            LEVEL_UPGRADE: le,
            LEVEL_UPGRADE_3: le,
            LEVEL_UPGRADE_4: le,
            LEVEL_UPGRADE_5: le
        },
        de = {
            MEET_FELLOW_EDITORS: ue,
            LEVEL_UPGRADE_2: le,
            LEVEL_UPGRADE_3: se,
            LEVEL_UPGRADE_4: ae,
            LEVEL_UPGRADE_5: oe,
            MENTOR_FEEDBACK_REQUEST: I18n.t("internal.mentoring_feedback_url"),
            USER_FIRST_EDIT: re
        },
        he = {
            USER_FIRST_EDIT: ue
        },
        pe = {
            LEVEL_UPGRADE_2: K.a,
            LEVEL_UPGRADE_3: Z.a,
            LEVEL_UPGRADE_4: X.a,
            LEVEL_UPGRADE_5: te.a,
            LEVEL_UPGRADE_6: ie.a
        },
        ge = Y.extend({
            tagName: "div",
            template: "Waze/MapEditor/UI/Modules/Feed/templates/notification_detail",
            className: "notification-detail",
            triggers: {
                "click .next": "nextClicked"
            },
            initialize: function() {
                return this.model.on("destroy", this.destroy, this)
            },
            _onClickDelete: function() {
                return this.$el.addClass("deleting"),
                    this.model.trigger("delegate:delete")
            },
            serializeData: function() {
                return L.a.extend(Y.prototype.serializeData.apply(this, arguments), {
                    hasNext: this.options.hasNext,
                    subject: this._getValueOrTemplate("subject"),
                    message: this._getValueOrTemplate("message"),
                    linkText: this._getValueOrTemplate("linkText"),
                    buttonText: this._getValueOrTemplate("buttonText"),
                    secondButtonText: this._getValueOrTemplate("secondButtonText"),
                    linkURL: this._getLinkURL(),
                    buttonURL: this._getButtonURL(),
                    secondButtonURL: this._getSecondButtonURL(),
                    imageURL: this._getImageURL()
                })
            },
            setMaxHeight: function(e) {
                return this.$el.css({
                    maxHeight: e
                })
            },
            _getLinkURL: function() {
                return this._getParamByTypeAndMap("linkURL", ce)
            },
            _getButtonURL: function() {
                return this._getButtonUrlByButtonNameAndMap("buttonURL", de)
            },
            _getSecondButtonURL: function() {
                return this._getButtonUrlByButtonNameAndMap("secondButtonURL", he)
            },
            _getButtonUrlByButtonNameAndMap: function(e, t) {
                switch (this.model.get("type")) {
                    case v.NOTIFICATION_TYPES.MENTEE_CLICKED_LINK:
                    case v.NOTIFICATION_TYPES.MENTEE_RETURNED_TO_WME:
                        return this._buildProfileLink();
                    case v.NOTIFICATION_TYPES.MENTOR_ENCOURAGMENT:
                        return this._getStartMentoringLink();
                    default:
                        return this._getParamByTypeAndMap(e, t)
                }
            },
            _buildProfileLink: function() {
                return z.default.userProfileLink({
                    userName: this.model.attributes.parameters.username
                })
            },
            _getStartMentoringLink: function() {
                return "".concat(z.default.userProfileLink({
                    userName: this.options.user.userName
                }), "#startMentoring")
            },
            _getImageURL: function() {
                return this._getParamByTypeAndMap("imageURL", pe)
            },
            _getParamByTypeAndMap: function(e, t) {
                var n = this.model.getParameter(e);
                return n || t[this.model.get("type")]
            }
        }),
        fe = ge.extend({
            className: "notification-detail notification-detail-pm",
            serializeData: function() {
                return L.a.extend(ge.prototype.serializeData.apply(this, arguments), {
                    type: "pm",
                    sender: this.model.getParameter("sender"),
                    senderURL: this.model.getParameter("senderURL")
                })
            }
        }),
        me = v.default.prototype.TYPE,
        ve = P.a.prototype.TYPE,
        _e = a.a.Object.extend({
            initialize: function(e) {
                return this.currentFeedItem = null,
                    this.collection = e.collection,
                    this.container = e.container,
                    this.app = e.app,
                    this.listenTo(this.container, "closeClicked", this.destroy),
                    W.accelerators.events.register("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.register("prevFeedItem", this, this._prevItemClicked)
            },
            browse: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return this._setCurrent(this.collection.at(e)),
                    this._show(this.currentFeedItem)
            },
            showNext: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_next", this.currentFeedItem),
                    this._setCurrent(this.collection.at(++e)),
                    this._show(this.currentFeedItem)
            },
            showPrev: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_prev", this.currentFeedItem),
                    this._setCurrent(this.collection.at(--e)),
                    this._show(this.currentFeedItem)
            },
            _reportEvent: function(e, t) {
                var n = t.get("type");
                B.reportAnalytic.feedAction(e, n)
            },
            _nextItemClicked: function() {
                if (!this._isDone())
                    return this.showNext()
            },
            _prevItemClicked: function() {
                if (!this._isAtBeginning())
                    return this.showPrev()
            },
            onDestroy: function() {
                return this._clearCurrent(),
                    W.accelerators.events.unregister("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.unregister("prevFeedItem", this, this._prevItemClicked)
            },
            _show: function(e) {
                e instanceof v.default ? this._showNotification(e) : this._showIssue(e),
                    B.reportAnalytic.feedAction("show", e.get("type"))
            },
            _showNotification: function(e) {
                var t = new(e.get("type") === me.PRIVATE_FORUM_MESSAGE ? fe : ge)({
                    model: e,
                    user: this.app.get("user"),
                    hasNext: !this._isDone()
                });
                return this.listenTo(t, "nextClicked", this.showNext),
                    this.container.show(t)
            },
            _showIssue: function(e) {
                var t, n = {
                    showNext: !this._isDone(),
                    nextButtonString: I18n.t("feed.issues.next")
                };
                switch (e.get("type")) {
                    case ve.MAP_PROBLEM:
                        t = W.reqres.request("problems:browse", L.a.extend(n, {
                            problem: e.get("problem")
                        }));
                        break;
                    case ve.UPDATE_REQUEST:
                        t = W.reqres.request("problems:browse", L.a.extend(n, {
                            problem: e.get("updateRequest")
                        }));
                        break;
                    case ve.VENUE_UPDATE_REQUEST:
                        t = W.reqres.request("updaterequests:browse", L.a.extend(n, {
                            updateRequest: e.get("updateRequest")
                        }))
                }
                return t.on("next", this.showNext.bind(this))
            },
            _isDone: function() {
                return this.currentFeedItem === this.collection.last()
            },
            _isAtBeginning: function() {
                return this.currentFeedItem === this.collection[0]
            },
            _onItemDestroy: function() {
                return this._isDone() ? (this._clearCurrent(),
                    this.container.empty()) : this.showNext()
            },
            _setCurrent: function(e) {
                return this._clearCurrent(),
                    this.currentFeedItem = e,
                    this.currentFeedItem.set("selected", !0),
                    this.currentFeedItem.on("destroy", this._onItemDestroy, this)
            },
            _clearCurrent: function() {
                this.currentFeedItem && (this.currentFeedItem.set("selected", !1),
                        this.currentFeedItem.off("destroy", this._onItemDestroy)),
                    this.currentFeedItem = null
            }
        }),
        ye = a.a.CompositeView.extend({
            className: "feed-group",
            template: "Waze/MapEditor/UI/Modules/Feed/templates/feed_group",
            childView: Y,
            childViewContainer: ".feed-list",
            childViewEventPrefix: "notifications",
            collapseItemsMessage: "feed.notifications.collapsed_message",
            events: {
                "click .toggle": "toggleGrouping"
            },
            bindings: {
                ":el": {
                    classes: {
                        grouped: "grouped",
                        groupable: {
                            observe: "length",
                            onGet: function(e) {
                                return e > 3
                            }
                        }
                    }
                },
                ".toggle": {
                    observe: "length",
                    visible: function(e) {
                        return e > 3
                    }
                },
                ".counter": {
                    observe: "length",
                    onGet: function(e) {
                        return I18n.t(this.collapseItemsMessage, {
                            count: e
                        })
                    }
                }
            },
            initialize: function() {
                var e = this;
                return this.model = new g.a.Model({
                        length: 0,
                        grouped: !1
                    }),
                    this.collection.on("reset sync", function() {
                        var t = e.collection.length;
                        return e.model.set({
                            length: t,
                            grouped: t > 3
                        })
                    }),
                    this.collection.on("reset add remove", function() {
                        return e.model.set({
                            length: e.collection.length
                        })
                    }),
                    this.collection.on("remove", function() {
                        if (e.collection.length <= 3)
                            return e.model.set({
                                grouped: !1
                            })
                    })
            },
            onRender: function() {
                return this.stickit()
            },
            toggleGrouping: function() {
                return this.model.set({
                    grouped: !this.model.get("grouped")
                })
            }
        }),
        be = q.extend({
            className: "feed-item feed-notification-pm",
            template: "Waze/MapEditor/UI/Modules/Feed/templates/message_item",
            serializeData: function() {
                return L.a.extend(q.prototype.serializeData.apply(this, arguments), {
                    title: this.model.getParameter("subject"),
                    sender: this.model.getParameter("sender")
                })
            }
        }),
        Ee = ye.extend({
            childView: be,
            childViewEventPrefix: "messages",
            collapseItemsMessage: "feed.messages.collapsed_message"
        }),
        we = n(121),
        Se = function(e) {
            return {
                observe: "state",
                onGet: function(t) {
                    return t === e
                }
            }
        },
        ke = q.extend({
            className: function() {
                return "feed-item feed-issue feed-issue-".concat(this.model.getFeedIssueState())
            },
            template: "Waze/MapEditor/UI/Modules/Feed/templates/issue_item",
            bindings: {
                ":el": {
                    classes: {
                        modified: "modified",
                        "feed-issue-open": Se("open"),
                        "feed-issue-rejected": Se("rejected"),
                        "feed-issue-solved": Se("solved"),
                        "feed-issue-approved": Se("approved"),
                        "feed-issue-not-identified": Se("not-identified")
                    }
                }
            },
            onRender: function() {
                this.stickit()
            },
            getType: function() {
                return null
            },
            getStateClass: function() {
                return ""
            },
            serializeData: function() {
                return {
                    type: this.getType(),
                    address: this._formatAddress(),
                    motivation: this._getMotivationText(),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _formatAddress: function() {
                return [this._getPlaceText(), this.model.get("streetText"), this.model.get("cityText"), this.model.get("stateText"), this.model.get("countryText")].filter(function(e) {
                    return null != e && "" !== e
                }).join(", ")
            },
            _formatTimestamp: function() {
                return z.default.timeDistanceInWords(this.model.get("timestamp"))
            },
            _getMotivationText: function() {
                for (var e = new we.default(this.model.get("motivation")), t = 0, n = Object.keys(P.a.prototype.MOTIVATIONS); t < n.length; t++) {
                    var i = n[t],
                        r = P.a.prototype.MOTIVATIONS[i];
                    if (e.isEnabled(i))
                        return I18n.t("feed.issues.motivations.".concat(r))
                }
                return null
            },
            _getPlaceText: function() {
                var e = this.model.get("venue");
                return e ? e.attributes.name : ""
            },
            _getSeverityClass: function() {
                return this.model.getSeverity() ? "severity-".concat(this.model.getSeverity()) : ""
            }
        }),
        Te = n(14),
        Ie = n.n(Te),
        Ae = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "".concat(Ie()(A()(t.prototype), "className", this).call(this), " feed-issue-mp ").concat(this._getSeverityClass())
                    }
                }, {
                    key: "getType",
                    value: function() {
                        var e = this.model.attributes.problem;
                        return I18n.t("problems.types.".concat(e.attributes.subType, ".title"))
                    }
                }]),
                t
        }(ke),
        Me = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "".concat(Ie()(A()(t.prototype), "className", this).call(this), " feed-issue-ur ").concat(this._getSeverityClass())
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return this.model.attributes.updateRequest.getTypeText()
                    }
                }]),
                t
        }(ke),
        Oe = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "".concat(Ie()(A()(t.prototype), "className", this).call(this), " feed-issue-pu ").concat(this._getSeverityClass(), " ").concat(this.getTypeClass())
                    }
                }, {
                    key: "getType",
                    value: function() {
                        var e = this.model.attributes.updateRequest,
                            t = e.get("subject"),
                            n = e.get("updateType");
                        return "flag" === n ? I18n.t("venues.update_requests.panel.flag_title.".concat(t)) : I18n.t("venues.update_requests.panel.title.".concat(n))
                    }
                }, {
                    key: "getTypeClass",
                    value: function() {
                        return this.model.attributes.updateRequest.get("updateType").toLowerCase()
                    }
                }]),
                t
        }(ke),
        Ce = P.a.prototype.TYPE,
        Re = a.a.CollectionView.extend({
            TYPE_TO_VIEW: (i = {},
                s()(i, Ce.MAP_PROBLEM, Ae),
                s()(i, Ce.UPDATE_REQUEST, Me),
                s()(i, Ce.VENUE_UPDATE_REQUEST, Oe),
                i),
            tagName: "ul",
            className: "feed-list",
            childView: ke,
            childViewEventPrefix: "issues",
            buildChildView: function(e, t, n) {
                var i = e.attributes.type;
                return new(0,
                    this.TYPE_TO_VIEW[i])({
                    model: e
                })
            }
        }),
        De = n(10),
        Le = n.n(De),
        Pe = n(21),
        Ne = n(153),
        xe = n(17),
        Ve = n(49),
        je = I18n.t("internal.editing_local_forum_link"),
        Ue = I18n.t("internal.wiki_link"),
        Fe = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "".concat(Ie()(A()(t.prototype), "className", this).call(this), " feed-first-time type-").concat(this.model.attributes.type.toLowerCase())
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .inner": "_onClick",
                            "click .delete": "_onClickDelete"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.overlayRenderer = null
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return L.a.extend(Y.prototype.serializeData.apply(this, arguments), {
                            title: this._getValueOrTemplate("title"),
                            shortMessage: this._getValueOrTemplate("shortMessage"),
                            linkUrl: this._getValueOrTemplate("linkUrl")
                        })
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        var e = this.model.TYPE,
                            t = this.model.attributes.type;
                        switch (B.reportAnalytic.feedAction("show", t),
                            B.reportAnalytic.feedAction("click_on_card", t),
                            t) {
                            case e.DISCOVER_COMMUNITY_FORUM:
                                this._openUrl(je);
                                break;
                            case e.DISCOVER_LOCAL_WIKI:
                                this._openUrl(Ue);
                                break;
                            case e.FIRST_TIME_VIDEOS:
                                this._openVideoTutorial();
                                break;
                            case e.CHECK_YOUR_NEIGHBORHOOD:
                                this._goToNeighborhood()
                        }
                    }
                }, {
                    key: "_openVideoTutorial",
                    value: function() {
                        Le()("#tutorial-dialog").modal("show")
                    }
                }, {
                    key: "_goToNeighborhood",
                    value: function() {
                        var e = this.model.attributes.parameters.address;
                        if (e) {
                            var t = Number(e.split(",")[0]),
                                n = Number(e.split(",")[1]),
                                i = xe.createLonLat(t, n);
                            Pe.project(i),
                                this._animateSpotLight(i)
                        }
                    }
                }, {
                    key: "_animateSpotLight",
                    value: function(e) {
                        this.overlayRenderer && this.overlayRenderer.destroy(),
                            this.overlayRenderer = new Ne.a(W.map),
                            this.overlayRenderer.drawOverlay(),
                            this.overlayRenderer.animateHome(e)
                    }
                }, {
                    key: "_openUrl",
                    value: function(e) {
                        e && Ve.popup({
                            url: e,
                            name: "_blank"
                        })
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this.overlayRenderer && this.overlayRenderer.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Feed/templates/notification_item"
                    }
                }]),
                t
        }(Y),
        Be = function() {
            function e(t) {
                E()(this, e),
                    this.startDelay = 0,
                    this.numberOfCycles = 3,
                    this.cyclesIntervalTime = 3e4,
                    this.itemIntervalTime = 5e3,
                    this.handler = null,
                    Object.assign(this, t),
                    this._currentCycle = 0,
                    this._nextItemTimeout = 0,
                    this._cyclesTimeout = 0,
                    this._isRuning = !1,
                    this._currentIndex = -1
            }
            return S()(e, [{
                    key: "start",
                    value: function() {
                        this.stop(),
                            this._isRuning = !0,
                            this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.startDelay)
                    }
                }, {
                    key: "stop",
                    value: function() {
                        this._isRuning && (this._cyclesTimeout && window.clearTimeout(this._cyclesTimeout),
                            this.stopCycle(),
                            this._cyclesTimeout = 0,
                            this._isRuning = !1)
                    }
                }, {
                    key: "_animationLoop",
                    value: function() {
                        this._currentCycle < this.numberOfCycles ? (this._currentCycle++,
                            this._startCycle(),
                            this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.cyclesIntervalTime)) : this.stop()
                    }
                }, {
                    key: "_startCycle",
                    value: function() {
                        this.stopCycle(),
                            this._currentIndex = -1,
                            this._cycleAnimationLoop()
                    }
                }, {
                    key: "stopCycle",
                    value: function() {
                        this._nextItemTimeout && (window.clearTimeout(this._nextItemTimeout),
                            this._nextItemTimeout = 0)
                    }
                }, {
                    key: "_cycleAnimationLoop",
                    value: function() {
                        this._currentIndex++,
                            "function" == typeof this.handler && this.handler(),
                            this._nextItemTimeout = window.setTimeout(this._cycleAnimationLoop.bind(this), this.itemIntervalTime)
                    }
                }, {
                    key: "setHandler",
                    value: function(e) {
                        "function" == typeof e && (this.handler = e)
                    }
                }, {
                    key: "getCurrentIndex",
                    value: function() {
                        return this._currentIndex
                    }
                }]),
                e
        }(),
        Ge = a.a.CollectionView.extend({
            className: "feed-group list-unstyled",
            tagName: "ul",
            childView: Fe,
            childViewEventPrefix: "first-time",
            initialize: function() {
                this.cyclesTimeout = new Be({
                    numberOfCycles: 3,
                    cyclesIntervalTime: 3e4,
                    itemIntervalTime: 5e3,
                    startDelay: 3e3,
                    handler: this._cycleAnimationLoop.bind(this)
                })
            },
            _cycleAnimationLoop: function() {
                if (this.cyclesTimeout) {
                    var e = this.cyclesTimeout.getCurrentIndex(),
                        t = this.children.toArray();
                    if (e < this.children.length)
                        t[this.cyclesTimeout.getCurrentIndex()].$el.addClass("animate").siblings().removeClass("animate");
                    else
                        this.cyclesTimeout.stopCycle()
                }
            },
            onRender: function() {
                this.cyclesTimeout.start()
            },
            onDestroy: function() {
                this.cyclesTimeout.stop()
            }
        }),
        We = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "".concat(Ie()(A()(t.prototype), "className", this).call(this), " feed-mentoring type-").concat(this.model.attributes.type.toLowerCase())
                    }
                }]),
                t
        }(Y),
        He = a.a.CollectionView.extend({
            className: "feed-group list-unstyled",
            tagName: "ul",
            childView: We,
            childViewEventPrefix: "mentoring",
            initialize: function() {}
        }),
        ze = a.a.Object.extend({
            browser: null,
            initialize: function(e) {
                this.model = new F,
                    this.container = e.container,
                    this.app = e.app,
                    this.startNotificationId = e.startNotificationId
            },
            render: function(e) {
                this.layout = new H({
                        el: e.el,
                        model: this.model
                    }),
                    this.layout.render(),
                    this._createViews(),
                    this._bindEvents(),
                    this._showViews(),
                    this._loadAppState()
            },
            refresh: function() {
                return this.model.refresh()
            },
            startFirstTimePolling: function() {
                this.model.startFirstTimePolling()
            },
            destroy: function() {
                this.layout && this.layout.destroy(),
                    this.browser && this.browser.destroy()
            },
            _createViews: function() {
                this.views = {
                    notifications: new ye({
                        collection: this.model.notifications
                    }),
                    messages: new Ee({
                        collection: this.model.messages
                    }),
                    issues: new Re({
                        collection: this.model.issues
                    }),
                    firstTimeMessages: new Ge({
                        collection: this.model.firstTimeMessages
                    }),
                    mentoringMessages: new He({
                        collection: this.model.mentoringMessages
                    })
                }
            },
            _showViews: function() {
                this.layout.showChildView("firstTimeMessages", this.views.firstTimeMessages),
                    this.layout.showChildView("notifications", this.views.notifications),
                    this.layout.showChildView("mentoringMessages", this.views.mentoringMessages),
                    this.layout.showChildView("messages", this.views.messages),
                    this.layout.showChildView("issues", this.views.issues)
            },
            _loadAppState: function() {
                var e = this,
                    t = this.startNotificationId;
                if (t) {
                    var n = [this.model.messages, this.model.notifications, this.model.mentoringMessages];
                    this.listenTo(this.model, "change:loading", function(i, r) {
                        if (!r)
                            for (var s = 0, o = 0; s < n.length; s++)
                                if ((o = n[s].models.findIndex(function(e) {
                                        return e.get("id") === t
                                    })) > -1)
                                    return e._browseItemByIndex(n[s], o)
                    })
                }
            },
            _browseItemByIndex: function(e, t) {
                -1 !== t && (this._browseCollection(e),
                    this.browser.browse(t))
            },
            _browseCollection: function(e) {
                this.browser = new _e({
                    collection: e,
                    container: this.container,
                    app: this.app
                })
            },
            _bindEvents: function() {
                return this.listenTo(this.views.issues, "issues:click", this._onItemClick),
                    this.listenTo(this.views.messages, "messages:click", this._onItemClick),
                    this.listenTo(this.views.mentoringMessages, "mentoring:click", this._onItemClick),
                    this.listenTo(this.views.notifications, "notifications:click", this._onItemClick)
            },
            _onItemClick: function(e) {
                this.browser && this.browser.destroy();
                var t = e.model,
                    n = t.collection,
                    i = n.indexOf(t);
                this._browseCollection(n),
                    this.browser.browse(i),
                    this.listenTo(this.browser, "destroy", function() {
                        this.browser = null
                    })
            }
        }),
        qe = n(57),
        Ye = n(37),
        $e = n(12),
        Ke = n(25),
        Je = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function() {
                        var e = this.model.get("junction"),
                            t = this.model.get("segment").geometry,
                            n = new Ye.default("junction-entry-marker fa fa-arrow-right");
                        n.div.style = "transform: rotate(".concat(180 - e.getAngleAtIntersection(t), "deg)");
                        var i = e.getIntersectionPoint(t);
                        this._marker = new OL.Marker(Ke.toLonLat(i), n),
                            this._marker.events.on({
                                click: this._onMarkerClick,
                                mouseover: this._onMouseOver,
                                mouseout: this._onMouseOut,
                                scope: this
                            }),
                            this._drawingContext = this.options.drawingContext
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            mouseover: "_onMouseOver",
                            mouseout: "_onMouseOut"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            click: "click"
                        }
                    }
                }, {
                    key: "_onMarkerClick",
                    value: function() {
                        this.trigger("click", this)
                    }
                }, {
                    key: "_onMouseOver",
                    value: function() {
                        this._drawingContext.addFeatures([new OL.Feature.Vector($e.cloneGeometry(this.getSegment().geometry), {}, {
                            strokeColor: "#00ece3",
                            strokeWidth: 6
                        })])
                    }
                }, {
                    key: "_onMouseOut",
                    value: function() {
                        this._drawingContext.removeAllFeatures()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            streetName: this.model.get("segment").getAddress().getStreetName()
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._drawingContext.addMarkers([this._marker])
                    }
                }, {
                    key: "getSegment",
                    value: function() {
                        return this.model.get("segment")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-item"
                    }
                }]),
                t
        }(a.a.View),
        Ze = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "junction-entry-view"
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._junction = this.options.junction,
                            this._drawingContext = this.options.drawingContext,
                            this._drawingContext.moveLayerToTop(),
                            this._selectionManager = this.options.selectionManager
                    }
                }, {
                    key: "_getEntryModels",
                    value: function() {
                        var e = this,
                            t = this._junction.getShortestTurns();
                        return (t = L.a.uniqBy(t, function(e) {
                            return e.getFromVertex().getID()
                        })).map(function(t) {
                            return new g.a.Model({
                                vertex: t.getFromVertex(),
                                junction: e._junction,
                                segment: e._junction.model.segments.getObjectById(t.getFromVertex().getSegmentID())
                            })
                        })
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("list", new a.a.CollectionView({
                            childView: Je,
                            childViewOptions: {
                                dataModel: this._junction.model,
                                drawingContext: this._drawingContext
                            },
                            collection: new g.a.Collection(this._getEntryModels()),
                            onChildviewClick: this._onItemClicked.bind(this)
                        }))
                    }
                }, {
                    key: "_onItemClicked",
                    value: function(e) {
                        this._selectionManager.setSelectedModels([e.getSegment()])
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/BigJunction/templates/junction-entry-layout"
                    }
                }]),
                t
        }(a.a.View),
        Qe = n(103),
        Xe = n(85),
        et = n(141);

    function tt(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function nt(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? tt(Object(n), !0).forEach(function(t) {
                s()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : tt(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var it = function(e) {
            function t() {
                var e;
                return E()(this, t),
                    (e = T()(this, A()(t).apply(this, arguments))).selectionManager = e.options.selectionManager,
                    e
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return nt({}, Ie()(A()(t.prototype), "events", this).call(this), {
                            "click .select-short-segments": "_selectShortSegments"
                        })
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            addressEdit: ".address-edit",
                            lockEdit: ".lock-edit",
                            junctionEntryList: ".junction-entry-list-region"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return nt({}, Ie()(A()(t.prototype), "templateContext", this).apply(this, arguments), {
                            MAX_POLYGON_SIZE_DEGREES: et.MAX_POLYGON_SIZE_DEGREES
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/big-junction-edit"
                    }
                }]),
                S()(t, [{
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            isSizeLegal: e.isPolygonAreaLegal(),
                            name: e.attributes.name,
                            segmentCount: e.getSegmentCount(),
                            rank: e.attributes.rank
                        }
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            name: this.simpleAttribute("name"),
                            lockEditable: !1
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return nt({}, Ie()(A()(t.prototype), "bindings", this).call(this), {
                            ".size-alert": {
                                observe: "isSizeLegal",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity)
                            },
                            "[name=name]": {
                                observe: "name",
                                events: ["blur"]
                            },
                            ".segment-count": {
                                observe: "segmentCount",
                                onGet: function(e) {
                                    return I18n.t("edit.big_junction.segments", {
                                        segments: e
                                    })
                                }
                            }
                        })
                    }
                }, {
                    key: "_selectShortSegments",
                    value: function() {
                        var e = this.getFeature(),
                            t = this._dataModel.segments.getByIds(e.attributes.segIDs);
                        return this.selectionManager.setSelectedModels(t)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this.getFeature();
                        this.showChildView("addressEdit", new Qe.default({
                                getAddress: function() {
                                    return e.getAddress()
                                },
                                dataModel: this._dataModel,
                                features: [e],
                                editable: e.arePropertiesEditable(),
                                editStreet: !1
                            })),
                            this.showChildView("junctionEntryList", new Ze({
                                junction: e,
                                drawingContext: this.options.map.getDrawingContext(),
                                selectionManager: this.selectionManager
                            })),
                            this.showChildView("lockEdit", new Xe.default({
                                model: this.viewModel,
                                propertiesEditableAttribute: "lockEditable"
                            })),
                            Ie()(A()(t.prototype), "onRender", this).apply(this, arguments)
                    }
                }]),
                t
        }(qe.default),
        rt = n(190),
        st = n(130),
        ot = n(231),
        at = n(40);

    function lt(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    for (var ut, ct = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            lockEditRegion: ".lock-edit"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? lt(Object(n), !0).forEach(function(t) {
                                    s()(e, t, n[t])
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : lt(Object(n)).forEach(function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                })
                            }
                            return e
                        }({}, Ie()(A()(t.prototype), "bindings", this).call(this), {
                            "[name=type]": {
                                observe: "type",
                                selectOptions: {
                                    collection: Object.values(rt.CAMERA_TYPES).map(function(e) {
                                        return {
                                            name: I18n.t("edit.camera.fields.type.".concat(e)),
                                            type: e
                                        }
                                    }),
                                    labelPath: "name",
                                    valuePath: "type"
                                }
                            },
                            "[name=speed]": {
                                observe: "speed",
                                events: ["blur"],
                                classes: {
                                    invalid: {
                                        observe: "speedFieldValid",
                                        onGet: L.a.negate(L.a.identity)
                                    }
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "speedFieldEnabled",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            }
                        })
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            speed: function(e, t) {
                                t.speed = at.default.getOriginalValue(e, st.UNITS.speed)
                            },
                            type: this.simpleAttribute("type"),
                            lockRank: this.simpleAttribute("lockRank")
                        }
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        var t = new ot.SpeedUseCase;
                        return {
                            speed: z.default.getDisplayUnitValue(e.attributes.speed, st.UNITS.speed, !0),
                            type: e.attributes.type,
                            rank: e.attributes.rank,
                            lockRank: e.attributes.lockRank,
                            lockRankMixed: !1,
                            allowDefaultRank: !0,
                            speedFieldEnabled: t.supportsSpeed(e.attributes.type),
                            speedFieldValid: t.isSpeedValid(e.attributes.speed, e.attributes.type)
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).apply(this, arguments),
                            this._renderLockEdit()
                    }
                }, {
                    key: "onSpeedRelatedChanges",
                    value: function(e) {
                        var t = new ot.SpeedUseCase,
                            n = t.isSpeedValid(e.attributes.speed, e.attributes.type),
                            i = t.supportsSpeed(e.attributes.type),
                            r = i ? e.attributes.speed : ot.DEFAULT_SPEED;
                        e.set({
                            speedFieldValid: n,
                            speedFieldEnabled: i,
                            speed: r
                        })
                    }
                }, {
                    key: "_renderLockEdit",
                    value: function() {
                        var e = new Xe.default({
                            model: this.viewModel
                        });
                        this.showChildView("lockEditRegion", e)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/camera-edit"
                    }
                }, {
                    key: "modelEvents",
                    get: function() {
                        return {
                            "change:type change:speed": "onSpeedRelatedChanges"
                        }
                    }
                }]),
                t
        }(qe.default), dt = n(59), ht = function(e) {
            function t() {
                var e;
                return E()(this, t),
                    (e = T()(this, A()(t).apply(this, arguments))).formModel = new g.a.Model({
                        editing: !1,
                        submitting: !1
                    }),
                    e
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .edit-button": function() {
                                this._toggleEditing(!0)
                            },
                            "click .cancel-button": "_cancelChanges",
                            "click .save-button": "_applyChanges",
                            "submit form": function() {
                                return !1
                            }
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".preview .city-name-text": "name",
                            ".edit-button": {
                                observe: "propertiesEditable",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "formBindings",
                    value: function() {
                        return {
                            ".preview": {
                                observe: "editing",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity)
                            },
                            "form .city-name": {
                                observe: "name",
                                events: ["blur"]
                            },
                            "form.attributes-form": {
                                observe: "editing",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "form.attributes-form input": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "submitting"
                                }]
                            }
                        }
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            name: e.attributes.name
                        }
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            name: this.simpleAttribute("name")
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            cityNameInput: ".attributes-form .city-name"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Cities/templates/feature_editor"
                    }
                }]),
                S()(t, [{
                    key: "onRender",
                    value: function() {
                        this.stickit(this.formModel, this.formBindings()),
                            Ie()(A()(t.prototype), "onRender", this).apply(this, arguments)
                    }
                }, {
                    key: "_toggleEditing",
                    value: function(e) {
                        this.formModel.set({
                                editing: e
                            }),
                            e && (this.formModel.set({
                                    name: this.viewModel.attributes.name
                                }),
                                this.ui.cityNameInput.focus())
                    }
                }, {
                    key: "_toggleSubmitting",
                    value: function(e) {
                        this.formModel.set({
                            submitting: e
                        })
                    }
                }, {
                    key: "_cancelChanges",
                    value: function() {
                        this._toggleEditing(!1)
                    }
                }, {
                    key: "_applyChanges",
                    value: function() {
                        this.formModel.attributes.name !== this.viewModel.attributes.name ? this._checkExistance().then(this._commitChanges.bind(this), window.alert) : this._toggleEditing(!1)
                    }
                }, {
                    key: "_checkExistance",
                    value: function() {
                        var e = this,
                            t = this.formModel.attributes.name,
                            n = this.getFeature().attributes,
                            i = n.countryID,
                            r = n.stateID;
                        this._toggleSubmitting(!0);
                        var s = new dt.a;
                        return new Promise(function(n, o) {
                            s.getCityExists(t, i, r).then(function(t) {
                                var i = t.existingCity;
                                if (i && i.id !== e.getFeature().getID()) {
                                    var r = I18n.t("edit.city.name_exists", {
                                        name: t.existingCity.name
                                    });
                                    o(r)
                                } else
                                    e._toggleEditing(!1),
                                    n()
                            }).catch(function(e) {
                                return o(e)
                            }).finally(function() {
                                return e._toggleSubmitting(!1)
                            })
                        })
                    }
                }, {
                    key: "_commitChanges",
                    value: function() {
                        this.viewModel.set({
                            name: this.formModel.attributes.name
                        })
                    }
                }]),
                t
        }(qe.default), pt = n(22), gt = n.n(pt), ft = n(84), mt = n.n(ft), vt = n(27), _t = n.n(vt), yt = n(29), bt = n.n(yt), Et = function(e) {
            function t(e, n) {
                var i, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return E()(this, t),
                    (i = T()(this, A()(t).call(this, r)))._venue = e,
                    i._toResidential = n,
                    i
            }
            return O()(t, e),
                S()(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._venue;
                        if (this._toResidential && !e.isPoint()) {
                            var t = e.getPointGeometry(),
                                n = new mt.a(e, e.model.venues, e.geometry, t);
                            this.doSubAction(n)
                        }
                        return this.doSubAction(new bt.a(this._venue, {
                                residential: this._toResidential
                            })),
                            !0
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._venue]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        this._description = I18n.t("save.changes_log.actions.UpdateLandmarkResidential.".concat(Boolean(this._toResidential)))
                    }
                }]),
                t
        }(_t.a), wt = n(449), St = n(39), kt = n(128), Tt = function() {
            function e(t) {
                E()(this, e),
                    this.dataModel = t
            }
            return S()(e, [{
                    key: "buildChanges",
                    value: function(e, t, n) {
                        return Object(kt.buildChanges)(this.dataModel, e, t, n)
                    }
                }, {
                    key: "userProfile",
                    value: function(e) {
                        return Object(St.userProfile)(e, this.dataModel)
                    }
                }]),
                e
        }(), It = n(15), At = n.n(It), Mt = n(86), Ot = n.n(Mt), Ct = n(146), Rt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mouseenter .ca-geometry .ca-value-old": this._showOldGeometry,
                            "mouseenter .ca-geometry .ca-value-new": this._showNewGeometry,
                            "mouseleave .ca-visual .ca-value": this._destroyDrawingContext
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._map = this.options.map,
                            this._historyChangesBuilder = this.options.historyChangesBuilder,
                            this._drawingContext = null,
                            this._changedAttributes = this._buildChanges()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "getChangedAttributesNames",
                    value: function() {
                        return this._changedAttributes.map(function(e) {
                            return e.displayName
                        })
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            changedAttributes: this._changedAttributes
                        }
                    }
                }, {
                    key: "_buildChanges",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.objectType,
                            n = e.newValue,
                            i = e.oldValue;
                        return this._historyChangesBuilder.buildChanges(t, n, i)
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        null != this._drawingContext && (this._drawingContext.destroy(),
                            this._drawingContext = null)
                    }
                }, {
                    key: "_drawGeometry",
                    value: function(e) {
                        var t = Pe.parse(e);
                        this._getDrawingContext().addFeatures([new OL.Feature.Vector($e.cloneGeometry(t))])
                    }
                }, {
                    key: "_showOldGeometry",
                    value: function() {
                        this._drawGeometry(this.model.attributes.oldValue.geometry)
                    }
                }, {
                    key: "_showNewGeometry",
                    value: function() {
                        this._drawGeometry(this.model.attributes.newValue.geometry)
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this._drawingContext && (this._drawingContext = this._map.getDrawingContext(),
                                this._drawingContext.setStyleMap(Ct.a),
                                this._drawingContext.moveLayerToTop()),
                            this._drawingContext
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "ul"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_main"
                    }
                }]),
                t
        }(a.a.View), Dt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return Object.assign({}, L.a.result(Rt.prototype, "events"), {
                            "mouseenter .ca-entryExitPoints .ca-value-new": this._showNewEntryExitPoints,
                            "mouseenter .ca-entryExitPoints .ca-value-old": this._showOldExtryExitPoints
                        })
                    }
                }, {
                    key: "_drawEntryExitPoints",
                    value: function(e) {
                        var t = e.filter(function(e) {
                            return null != e.point
                        }).map(function(e) {
                            return Pe.parse(e.point)
                        }).map(function(e) {
                            return new OL.Feature.Vector(e.clone())
                        });
                        this._getDrawingContext().addFeatures(t)
                    }
                }, {
                    key: "_showNewEntryExitPoints",
                    value: function() {
                        this._drawEntryExitPoints(this.model.attributes.newValue.entryExitPoints)
                    }
                }, {
                    key: "_showOldExtryExitPoints",
                    value: function() {
                        this._drawEntryExitPoints(this.model.attributes.oldValue.entryExitPoints)
                    }
                }]),
                t
        }(Rt), Lt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "tx-changed-ro"
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._actionType = this.model.attributes.actionType,
                            this._objectType = this.model.attributes.objectType,
                            this._historyChangesBuilder = this.options.historyChangesBuilder
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            displayName: Object(St.formatObjectName)(this._objectType),
                            displayValue: null,
                            actionText: this._getActionText()
                        }
                    }
                }, {
                    key: "_getActionText",
                    value: function() {
                        var e = "element_history.actions.".concat(this._objectType, ".").concat(this._actionType);
                        return I18n.lookup(e) ? I18n.t(e) : I18n.t("element_history.actions.default.".concat(this._actionType))
                    }
                }, {
                    key: "_getByActionType",
                    value: function(e) {
                        var t = null;
                        return this._actionType === Ot.a.ACTIONS.ADD && this.model.attributes.newValue ? t = this.model.attributes.newValue[e] : this._actionType === Ot.a.ACTIONS.DELETE && this.model.attributes.oldValue && (t = this.model.attributes.oldValue[e]),
                            t
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_object_related"
                    }
                }]),
                t
        }(a.a.View), Pt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "templateContext",
                    value: function() {
                        return Object.assign(Ie()(A()(t.prototype), "templateContext", this).call(this), {
                            displayValue: this._getByActionType("number")
                        })
                    }
                }]),
                t
        }(Lt), Nt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "templateContext",
                    value: function() {
                        var e = Ie()(A()(t.prototype), "templateContext", this).call(this);
                        return null != this.isApproved && (e.actionText = this.isApproved ? I18n.t("element_history.approved") : I18n.t("element_history.rejected")),
                            e
                    }
                }, {
                    key: "isApproved",
                    get: function() {
                        var e = null;
                        return this._actionType === Ot.a.ACTIONS.DELETE && this.model.attributes.oldValue && (e = this.model.attributes.oldValue.approve),
                            e
                    }
                }]),
                t
        }(Lt), xt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "_lanesUpdated",
                    value: function() {
                        return null != this.model.attributes.newValue && Boolean(this.model.attributes.newValue.lanes)
                    }
                }, {
                    key: "_getToSegmentID",
                    value: function() {
                        var e = this.model.attributes.newValue;
                        return null == e ? this.model.attributes.oldValue.id.toSegID : e.id.toSegID
                    }
                }, {
                    key: "_getStreetNameFromDataModel",
                    value: function(e, t) {
                        var n = e.segments.getObjectById(t);
                        return null != n ? Object(St.formatStreetName)(n.attributes.primaryStreetID, e) : null
                    }
                }, {
                    key: "_getToSegmentStreetName",
                    value: function(e) {
                        var t = this._historyChangesBuilder.dataModel,
                            n = this._getStreetNameFromDataModel(t, e);
                        return null == n && (n = this._getStreetNameFromDataModel(W.model, e)),
                            null == n && (n = e),
                            n
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = Ie()(A()(t.prototype), "templateContext", this).call(this),
                            n = this._getToSegmentID(),
                            i = this._getToSegmentStreetName(n);
                        return e.displayName = I18n.t("element_history.turn_object", {
                                streetName: i
                            }),
                            this._lanesUpdated() && (e.actionText = I18n.t("element_history.lanes_updated")),
                            e
                    }
                }]),
                t
        }(Lt), Vt = (ut = {},
            s()(ut, At.a.HOUSE_NUMBER, Pt),
            s()(ut, At.a.VENUE_UPDATE_REQUEST, Nt),
            s()(ut, At.a.NC, xt),
            ut), jt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "childView",
                    value: function(e) {
                        var t = e.attributes.objectType,
                            n = Vt[t];
                        return null == n && (n = Lt),
                            n
                    }
                }]),
                t
        }(a.a.CollectionView), Ut = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "element-history-item closed"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .tx-header": "_toggleClosed"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            mainObjectRegion: ".main-object-region",
                            relatedObjectsRegion: ".related-objects-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._map = this.options.map,
                            this._historyDataModel = this.options.historyDataModel,
                            this._historyChangesBuilder = new Tt(this._historyDataModel),
                            this._objectType = this.options.objectType,
                            this._objectID = this.options.objectID,
                            this._actionType = this.model.attributes.actionType;
                        var e = this._getMainObject(),
                            t = this._getRelatedObjects(),
                            n = null != e && this._actionType === Ot.a.ACTIONS.UPDATE;
                        if (this._hasRelated = t.length > 0,
                            this._hasContent = n || this._hasRelated,
                            n) {
                            var i = this._getMainObjectViewClass();
                            this._mainObjectView = new i({
                                map: this._map,
                                model: e,
                                historyChangesBuilder: this._historyChangesBuilder
                            })
                        }
                        t.length && (this._relatedObjectsView = new jt({
                            historyChangesBuilder: this._historyChangesBuilder,
                            collection: new g.a.Collection(t)
                        }))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.el.classList.toggle("tx-has-content", this._hasContent),
                            this.el.classList.toggle("tx-has-related", this._hasRelated),
                            this.el.dataset.transactionID = this.model.attributes.transactionID,
                            null != this._mainObjectView && this.showChildView("mainObjectRegion", this._mainObjectView),
                            null != this._relatedObjectsView && this.showChildView("relatedObjectsRegion", this._relatedObjectsView)
                    }
                }, {
                    key: "_toggleClosed",
                    value: function() {
                        this.el.classList.toggle("closed")
                    }
                }, {
                    key: "_getMainObjectViewClass",
                    value: function() {
                        switch (this._objectType) {
                            case At.a.VENUE:
                                return Dt;
                            default:
                                return Rt
                        }
                    }
                }, {
                    key: "_getMainObject",
                    value: function() {
                        return this.model.getObject(this._objectType, this._objectID)
                    }
                }, {
                    key: "_getRelatedObjects",
                    value: function() {
                        var e = this;
                        return this.model.attributes.objects.filter(function(t) {
                            return t.attributes.objectID !== e._objectID
                        })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.date,
                            n = e.userID;
                        return {
                            date: t,
                            userProfile: this._historyChangesBuilder.userProfile(n),
                            previewItems: this._serializeChangesPreview(),
                            mainObjectAction: this._serializeMainObjectAction()
                        }
                    }
                }, {
                    key: "_serializeChangesPreview",
                    value: function() {
                        var e = [];
                        if (null != this._mainObjectView && e.push.apply(e, gt()(this._mainObjectView.getChangedAttributesNames())),
                            null != this._relatedObjectsView) {
                            var t = this._relatedObjectsView.collection.map(function(e) {
                                return Object(St.formatObjectName)(e.attributes.objectType)
                            });
                            e.push.apply(e, gt()(t))
                        }
                        if (e.length > 1)
                            return I18n.t("element_history.multiple_changes");
                        if (1 === e.length) {
                            var n = "element_history.preview_actions.".concat(this._actionType);
                            return I18n.t(n, {
                                field: e[0]
                            })
                        }
                        return null
                    }
                }, {
                    key: "_serializeMainObjectAction",
                    value: function() {
                        var e = this._getMainObject();
                        return null == e ? null : this._objectType === At.a.SEGMENT ? this._serializeSegmentAction(e) : this._objectType === At.a.VENUE ? this._serializeVenueAction(e) : this._serializeAction()
                    }
                }, {
                    key: "_serializeSegmentAction",
                    value: function(e) {
                        return e.isSegmentSplit() ? I18n.t("element_history.segment_created_by_split") : e.isSegmentMerge() ? I18n.t("element_history.segment_created_by_merge") : this._serializeAction()
                    }
                }, {
                    key: "_serializeVenueAction",
                    value: function(e) {
                        return e.isVenueMerge() ? I18n.t("element_history.venue_updated_by_merge") : this._serializeAction()
                    }
                }, {
                    key: "_serializeAction",
                    value: function() {
                        var e, t = Object(St.formatObjectName)(this._objectType);
                        return this._actionType === Ot.a.ACTIONS.ADD ? e = "element_history.object_created" : this._actionType === Ot.a.ACTIONS.DELETE && (e = "element_history.object_deleted"),
                            null != e ? I18n.t(e, {
                                object: t
                            }) : ""
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ElementHistory/templates/tx_item"
                    }
                }]),
                t
        }(a.a.View), Ft = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "childView",
                    value: function() {
                        return Ut
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.collection = new g.a.Collection
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "ul"
                    }
                }]),
                t
        }(a.a.CollectionView), Bt = n(199), Gt = n.n(Bt), Wt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "defaults",
                    get: function() {
                        return {
                            loading: !1,
                            showHistory: !1,
                            hasMore: !1,
                            isEmpty: !0,
                            hasError: !1
                        }
                    }
                }]),
                t
        }(g.a.Model), Ht = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            txRegion: ".transactions"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .toggleHistory": "_toggleHistory",
                            "click .loadMoreHistory": "_loadMoreHistory"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".showHistory": {
                                observe: "showHistory",
                                visible: L.a.negate(L.a.identity)
                            },
                            ".hideHistory": {
                                observe: "showHistory",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".historyContent": {
                                observe: "showHistory",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".loadingHistory": {
                                observe: "loading",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".transactions": {
                                observe: "isEmpty",
                                visible: L.a.negate(L.a.identity)
                            },
                            ".historyEmpty": {
                                observe: ["isEmpty", "hasError", "loading"],
                                visible: function(e) {
                                    var t = h()(e, 3),
                                        n = t[0],
                                        i = t[1],
                                        r = t[2];
                                    return n && !i & !r
                                }
                            },
                            ".historyError": {
                                observe: ["hasError", "loading"],
                                visible: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0];
                                    return !t[1] && n
                                }
                            },
                            ".loadMoreContainer": {
                                observe: ["hasMore", "hasError", "loading"],
                                visible: function(e) {
                                    var t = h()(e, 3),
                                        n = t[0],
                                        i = t[1];
                                    return !t[2] && n && !i
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e.model;
                        this._map = e.map,
                            this._objectType = t.type,
                            this._objectID = t.getID(),
                            this._descartes = new dt.a,
                            this._historyDataModel = new Gt.a,
                            this._nextTransaction = null,
                            this._historyLoaded = !1,
                            this._viewModel = new Wt,
                            this._transactionsView = new Ft({
                                map: this._map,
                                historyDataModel: this._historyDataModel,
                                objectType: this._objectType,
                                objectID: this._objectID
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.getRegion("txRegion").show(this._transactionsView),
                            this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onHistorySuccess",
                    value: function(e) {
                        this._historyDataModel.mergeObjects(new OL.Bounds, e, !0),
                            this._nextTransaction = e.transactions.nextTransaction,
                            this._transactionsView.collection.add(e.transactions.objects),
                            this._viewModel.set({
                                hasMore: null != this._nextTransaction,
                                isEmpty: 0 === this._transactionsView.collection.length
                            })
                    }
                }, {
                    key: "_onHistoryFail",
                    value: function() {
                        this._viewModel.set("hasError", !0)
                    }
                }, {
                    key: "_toggleLoading",
                    value: function(e) {
                        this._viewModel.set("loading", e)
                    }
                }, {
                    key: "_toggleHistory",
                    value: function() {
                        var e = this,
                            t = this._viewModel.attributes.showHistory;
                        t = !t,
                            this._viewModel.set("showHistory", t),
                            t && !this._historyLoaded && (B.reportAnalytic.elementHistoryAction("show", this._objectType),
                                this._fetchHistory().then(function() {
                                    return e._historyLoaded = !0
                                }))
                    }
                }, {
                    key: "_fetchHistory",
                    value: function(e) {
                        var t = this;
                        return this._toggleLoading(!0),
                            this._viewModel.set("hasError", !1),
                            this._descartes.getElementHistory(this._objectType, this._objectID, e).then(this._onHistorySuccess.bind(this), this._onHistoryFail.bind(this)).then(function() {
                                t._toggleLoading(!1)
                            })
                    }
                }, {
                    key: "_loadMoreHistory",
                    value: function() {
                        var e = this;
                        B.reportAnalytic.elementHistoryAction("load_more", this._objectType),
                            this._fetchHistory(this._nextTransaction).then(function() {
                                null == e._nextTransaction && B.reportAnalytic.elementHistoryAction("load_all", e._objectType)
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ElementHistory/templates/history_main"
                    }
                }]),
                t
        }(a.a.View), zt = n(36), qt = zt.VENUE_MAIN_CATEGORIES_LIST, Yt = L.a.zipObject(qt, qt), $t = [], Kt = 0; Kt < qt.length; Kt++) {
        var Jt = qt[Kt];
        $t.push({
            id: Jt
        });
        for (var Zt = 0; Zt < zt.VENUE_SUBCATEGORIES[Jt].length; Zt++) {
            var Qt = zt.VENUE_SUBCATEGORIES[Jt][Zt];
            $t.push({
                id: Qt
            })
        }
    }
    var Xt = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "select2-search-choice suggested-category"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            click: this._onClick
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ":el": {
                                attributes: [{
                                    name: "data-category",
                                    observe: "category"
                                }]
                            },
                            ".remove-choice": {
                                observe: "hideClose",
                                onGet: function(e) {
                                    return !e
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".category-name": {
                                observe: "category",
                                onGet: function(e) {
                                    return I18n.t("venues.categories.".concat(e))
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        this.triggerMethod("click", this.model.attributes.category)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/category-tag"
                    }
                }]),
                t
        }(a.a.View),
        en = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "list-unstyled clearfix"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return Xt
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            click: "suggestedCategoryClick"
                        }
                    }
                }]),
                t
        }(a.a.CollectionView),
        tn = n(232),
        nn = n.n(tn),
        rn = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).categoriesAttribute = e.categoriesAttribute || "categories",
                    n.propertiesEditableAttribute = e.propertiesEditableAttribute || "propertiesEditable",
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            select: "[name=categories]",
                            suggestedCategories: ".suggested-categories"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "change [name=categories]": this._onUICategoriesChanged
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change categories": this._onCategoriesChanged
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            suggestedCategories: ".suggested-categories"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=categories]": {
                                observe: this.categoriesAttribute,
                                onGet: function(e) {
                                    return e.join(",")
                                },
                                update: function(e, t, n) {
                                    e.select2("data", n.attributes[this.categoriesAttribute].map(function(e) {
                                            return {
                                                id: e
                                            }
                                        })),
                                        e.val(t)
                                },
                                updateModel: !1
                            }
                        }
                    }
                }, {
                    key: "_setCategories",
                    value: function(e) {
                        this.model.set(s()({}, this.categoriesAttribute, e))
                    }
                }, {
                    key: "_onUICategoriesChanged",
                    value: function(e) {
                        var t = this.model.attributes.categories,
                            n = e.val;
                        this._setCategories((new nn.a).setCategories(t, n))
                    }
                }, {
                    key: "_resetSuggestedCategories",
                    value: function() {
                        var e = this.model.attributes.suggestedCategories;
                        null != e ? e.reset(this._getSuggestedCategoriesCollection()) : this.model.set({
                            suggestedCategories: new g.a.Collection(this._getSuggestedCategoriesCollection())
                        })
                    }
                }, {
                    key: "_onCategoriesChanged",
                    value: function() {
                        this._resetSuggestedCategories()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-categories"
                    }
                }]),
                S()(t, [{
                    key: "_isEditable",
                    value: function() {
                        return this.model.attributes[this.propertiesEditableAttribute]
                    }
                }, {
                    key: "_isMainCategory",
                    value: function(e) {
                        return Yt[e]
                    }
                }, {
                    key: "_getCategories",
                    value: function() {
                        return this.model.attributes[this.categoriesAttribute]
                    }
                }, {
                    key: "_hasOnlyMainCategory",
                    value: function() {
                        var e = this._getCategories();
                        return 1 === e.length && this._isMainCategory(e[0])
                    }
                }, {
                    key: "_getSuggestedCategories",
                    value: function() {
                        if (!this._isEditable())
                            return [];
                        var e = this._getCategories();
                        return L.a.isEmpty(e) ? qt : this._hasOnlyMainCategory() ? zt.VENUE_SUBCATEGORIES[e[0]] : []
                    }
                }, {
                    key: "_getSuggestedCategoriesCollection",
                    value: function() {
                        return this._getSuggestedCategories().map(function(e) {
                            return {
                                category: e,
                                hideClose: !0
                            }
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this;

                        function t(e) {
                            return I18n.t("venues.categories.".concat(e.id))
                        }
                        this.stickit(),
                            this.ui.select.select2({
                                width: "100%",
                                formatResult: t,
                                formatSelection: function(t) {
                                    var n = new Xt({
                                        model: new g.a.Model({
                                            category: t.id,
                                            hideClose: !e._isEditable()
                                        })
                                    });
                                    return n.render(),
                                        n.$el.html()
                                },
                                data: {
                                    results: $t,
                                    text: t
                                },
                                multiple: !0,
                                sortResults: function(e, n, i) {
                                    return e.sort(function(e, n) {
                                        return t(e).localeCompare(t(n))
                                    })
                                }
                            }),
                            this._resetSuggestedCategories(),
                            this.showChildView("suggestedCategories", new en({
                                collection: this.model.attributes.suggestedCategories
                            })),
                            this._bindCategoryClickEvent()
                    }
                }, {
                    key: "_bindCategoryClickEvent",
                    value: function() {
                        this.$el.find(".select2-choices").on("click", ".category", this.onCategoryClicked.bind(this))
                    }
                }, {
                    key: "onChildviewSuggestedCategoryClick",
                    value: function(e) {
                        this._setCategories((new nn.a).addSuggestedCategory(this.model.attributes.categories, e))
                    }
                }, {
                    key: "onCategoryClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = Le()(e.currentTarget).data("category");
                        this._setCategories((new nn.a).setMainCategory(this.model.attributes.categories, t))
                    }
                }]),
                t
        }(a.a.View),
        sn = n(73),
        on = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .image-delete-button": "_onDeleteImageClicked",
                            "click .image-preview-container": "_onImagePreviewClicked"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "img.image-preview": {
                                attributes: [{
                                    name: "src",
                                    observe: "id",
                                    onGet: function() {
                                        return this.model.getUrl(sn.IMAGE_SIZE.WEB)
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onDeleteImageClicked",
                    value: function(e) {
                        return this.triggerMethod("delete", this.model.id),
                            !1
                    }
                }, {
                    key: "_onImagePreviewClicked",
                    value: function(e) {
                        this.triggerMethod("preview", this.model.id),
                            e.preventDefault && e.preventDefault()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit-image"
                    }
                }]),
                t
        }(a.a.View),
        an = n(210),
        ln = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "childView",
                    value: function() {
                        return on
                    }
                }, {
                    key: "emptyView",
                    value: function() {
                        return a.a.View.extend({
                            template: "templates/venue/venue-edit-no-images"
                        })
                    }
                }, {
                    key: "collectionEvents",
                    value: function() {
                        return {
                            reset: this._onCollectionReset
                        }
                    }
                }, {
                    key: "_deleteImageById",
                    value: function(e) {
                        this.triggerMethod("deleteImage", e)
                    }
                }, {
                    key: "onChildviewDelete",
                    value: function(e) {
                        this._deleteImageById(e)
                    }
                }, {
                    key: "_onCollectionReset",
                    value: function() {
                        null != this.imageDialogView && (0 === this.collection.length ? (this.imageDialogView.destroy(),
                            this.imageDialogView = null) : this.imageDialogView.setImages(this.collection.models))
                    }
                }, {
                    key: "onChildviewPreview",
                    value: function(e) {
                        var t = this;
                        this.imageDialogView = new an.a({
                                images: this.collection.models,
                                imageId: e,
                                venueName: this.options.venueName,
                                canDelete: !0,
                                canScroll: !0
                            }),
                            this.listenTo(this.imageDialogView, "deleteImageClicked", function(e) {
                                t._deleteImageById(e)
                            }),
                            W.app.layout.getRegion("dialogRegion").show(this.imageDialogView)
                    }
                }]),
                t
        }(a.a.CollectionView),
        un = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "templateContext",
                    value: function() {
                        return {
                            serviceTypes: this.options.serviceTypes
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=services]": "services"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit-more-info-services"
                    }
                }]),
                t
        }(a.a.View),
        cn = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=phone]": {
                                observe: "phone",
                                events: ["blur"]
                            },
                            "[name=url]": {
                                observe: "url",
                                events: ["blur"]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit-more-info-contact"
                    }
                }]),
                t
        }(a.a.View),
        dn = n(135),
        hn = n.n(dn),
        pn = a.a.View.extend({
            tagName: "li",
            template: "templates/opening_hours/item",
            triggers: {
                "click .delete": "delete"
            },
            templateContext: function() {
                var e = this.model.attributes,
                    t = e.days,
                    n = e.isAllDay,
                    i = e.fromHour,
                    r = e.toHour;
                return {
                    openingHourFormatted: z.default.formatOpeningHour(t, n, i, r),
                    isEditable: this.options.editable
                }
            }
        }),
        gn = n(92),
        fn = n(219);

    function mn(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var vn = [0, 1, 2, 3, 4, 5, 6],
        _n = [],
        yn = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? mn(Object(n), !0).forEach(function(t) {
                                s()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : mn(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({}, e, {
                        model: new fn.OpeningHourViewModel
                    })))).errorsModel = new g.a.Model({
                        validationErrors: []
                    }),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            timeSelectors: ".time-selector"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            submit: "onSubmit",
                            "click .select-all": "selectAllDays",
                            "click .select-none": "deselectAllDays"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "input[name=fromTime]": "fromHour",
                            "input[name=toTime]": "toHour",
                            "input[name=days]": {
                                observe: "days",
                                onGet: function(e) {
                                    return e.map(function(e) {
                                        return "".concat(e)
                                    })
                                },
                                onSet: function(e) {
                                    return e.map(function(e) {
                                        return parseInt(e, 10)
                                    })
                                }
                            },
                            "input[name=allDay]": {
                                observe: "isAllDay",
                                onGet: function(e) {
                                    return e ? "on" : "off"
                                },
                                onSet: function(e) {
                                    return "on" === e
                                }
                            },
                            ".time-selector": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "isAllDay"
                                }]
                            }
                        }
                    }
                }, {
                    key: "errorsBindings",
                    value: function() {
                        return {
                            ".validation-errors": {
                                observe: "validationErrors",
                                onGet: function(e) {
                                    return null == e ? "" : e.join(", ")
                                }
                            }
                        }
                    }
                }, {
                    key: "selectAllDays",
                    value: function(e) {
                        e.preventDefault(),
                            this.model.set({
                                days: vn
                            })
                    }
                }, {
                    key: "deselectAllDays",
                    value: function(e) {
                        e.preventDefault(),
                            this.model.set({
                                days: _n
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.stickit(this.errorsModel, this.errorsBindings()),
                            this.ui.timeSelectors.timepicker(gn.a.prototype.timepickerOptions)
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        return this.ui.timeSelectors.timepicker("remove")
                    }
                }, {
                    key: "onSubmit",
                    value: function(e) {
                        e.preventDefault(),
                            this.model.isValid() ? (this.triggerMethod("addOpeningHours", this.model),
                                this.destroy()) : this.errorsModel.set({
                                validationErrors: this.model.validationError
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/opening_hours/add"
                    }
                }]),
                t
        }(a.a.View),
        bn = n(260),
        En = n(110),
        wn = a.a.CompositeView.extend({
            template: "templates/opening_hours/layout",
            childView: pn,
            childViewContainer: ".list",
            events: {
                "click .add": "onAddClicked"
            },
            childViewOptions: function() {
                return {
                    editable: this.options.editable
                }
            },
            onAddClicked: function(e) {
                return e.preventDefault(),
                    this.showAddDialog()
            },
            onChildviewDelete: function(e) {
                var t = e.model,
                    n = W.model.venues.getObjectById(this.options.landmarkId);
                if (n) {
                    var i = this.collection.indexOf(t);
                    Object(bn.deleteOpeningHour)(W.model.actionManager, n, i)
                }
            },
            showAddDialog: function() {
                var e = this,
                    t = new yn({
                        collection: this.collection
                    });
                return t.once("addOpeningHours", function(t) {
                        var n = W.model.venues.getObjectById(e.options.landmarkId);
                        n && Object(bn.addOpeningHour)(W.model.actionManager, n, t.get("isAllDay") ? En.OpeningHour.createAllDay(t.get("days")) : new En.OpeningHour({
                            fromHour: t.get("fromHour"),
                            toHour: t.get("toHour"),
                            days: t.get("days")
                        }))
                    }),
                    W.app.layout.getRegion("dialogRegion").show(t)
            },
            serializeData: function() {
                return {
                    isEditable: this.options.editable
                }
            }
        }),
        Sn = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e)))._changing = !1,
                    n.options.serviceTypes = e.serviceTypes || hn.a.GENERAL,
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:openingHours": this._onModelOpeningHoursChanged
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            services: ".services",
                            contact: ".contact",
                            openingHours: ".opening-hours"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("services", new un({
                                model: this.model,
                                serviceTypes: this.options.serviceTypes,
                                serviceSet: this.options.serviceSet
                            })),
                            this.showChildView("contact", new cn({
                                model: this.model
                            })),
                            this.options.isResidential || this._initOpeningHoursView()
                    }
                }, {
                    key: "_initOpeningHoursView",
                    value: function() {
                        this.openingHoursLayout || (this.openingHoursLayout = new wn({
                                collection: new g.a.Collection(this.model.attributes.openingHours),
                                editable: this.model.attributes.propertiesEditable,
                                landmarkId: this.model.attributes.id
                            }),
                            this.showChildView("openingHours", this.openingHoursLayout))
                    }
                }, {
                    key: "_onModelOpeningHoursChanged",
                    value: function() {
                        this.openingHoursLayout && this.openingHoursLayout.collection.reset(this.model.attributes.openingHours)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit-more-info"
                    }
                }]),
                t
        }(a.a.View),
        kn = n(106),
        Tn = n(129),
        In = n.n(Tn);

    function An(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function Mn(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? An(Object(n), !0).forEach(function(t) {
                s()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : An(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var On = function(e) {
            function t(e) {
                var n;
                E()(this, t);
                var i = (n = T()(this, A()(t).call(this, Mn({}, e, {
                    serviceTypes: hn.a.PARKING_LOT
                }))))._cloneCategoryAttributes(n.model.attributes.categoryAttributes.PARKING_LOT);
                return n.parkingModel = new In.a(i),
                    n.listenTo(n.parkingModel, "change", n._onParkingModelChange),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "modelEvents",
                    value: function() {
                        return Mn({}, Ie()(A()(t.prototype), "modelEvents", this).call(this), {
                            "change:categoryAttributes": this._onModelCategoryAttributesChanged
                        })
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            parkingTypeTooltip: ".parkingType-tooltip",
                            parkingTypeTooltipTemplate: ".parkingType-tooltip-template",
                            hasTBRTooltip: ".hasTBR-tooltip"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=canExitWhileClosed]": "canExitWhileClosed",
                            "[name=lotType]": "lotType",
                            "[name=parkingType]": "parkingType",
                            "[name=hasTBR]": "hasTBR",
                            "[name=paymentType]": "paymentType",
                            "[name=estimatedNumberOfSpots]": {
                                observe: "estimatedNumberOfSpots",
                                selectOptions: G.a.selectOptionsFromList(kn.SPOTS_ESTIMATE_LIST.map(function(e) {
                                    return e.value
                                }), function(e) {
                                    return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots.".concat(e))
                                })
                            },
                            "[name=costType]": {
                                observe: "costType",
                                selectOptions: {
                                    collection: Object.values(kn.COST_TYPE).map(function(e) {
                                        return {
                                            value: e,
                                            label: I18n.t("edit.landmark.parking.types.costType.".concat(e))
                                        }
                                    }),
                                    defaultOption: {
                                        value: kn.UNKNOWN,
                                        label: ""
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).call(this),
                            this.stickit(this.parkingModel),
                            this.ui.hasTBRTooltip.tooltip(),
                            this.ui.parkingTypeTooltip.tooltip({
                                title: this.ui.parkingTypeTooltipTemplate.html(),
                                html: !0,
                                placement: "right",
                                container: "body"
                            })
                    }
                }, {
                    key: "_cloneCategoryAttributes",
                    value: function(e) {
                        return Le.a.extend(!0, {}, e)
                    }
                }, {
                    key: "_onParkingModelChange",
                    value: function(e, t) {
                        if (t.stickitChange) {
                            var n = this._cloneCategoryAttributes(this.model.attributes.categoryAttributes);
                            n.PARKING_LOT = this.parkingModel.clone().attributes,
                                this.model.set({
                                    categoryAttributes: n
                                })
                        }
                    }
                }, {
                    key: "_onModelCategoryAttributesChanged",
                    value: function(e, t, n) {
                        if (n.fromRepo) {
                            var i = this._cloneCategoryAttributes(t.PARKING_LOT);
                            this.parkingModel.set(i)
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            parkingTypes: Object.values(kn.PARKING_TYPE),
                            paymentTypes: Object.values(kn.PAYMENT_TYPE),
                            lotTypes: Object.values(kn.LOT_TYPE)
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit-more-info-parking-lot"
                    }
                }]),
                t
        }(Sn),
        Cn = a.a.Behavior.extend({
            _lastTabId: null,
            events: {
                "show.bs.tab a[data-toggle=tab]": "_onTabShown"
            },
            _onTabShown: function(e) {
                this._lastTabId = Le()(e.target).attr("href")
            },
            _restoreLastTab: function() {
                if (null !== this._lastTabId)
                    return this.$("a[href='".concat(this._lastTabId, "']")).tab("show")
            },
            onRender: function() {
                return this._restoreLastTab()
            }
        }),
        Rn = {
            ENTRY: "entry",
            EXIT: "exit",
            BOTH: "both"
        },
        Dn = function() {
            function e(t, n, i) {
                E()(this, e),
                    this._navigationPoint = t,
                    this._landmark = n,
                    this._index = i,
                    this._landmarkCentroid = null
            }
            return S()(e, [{
                    key: "getNavigationPoint",
                    value: function() {
                        return this._navigationPoint
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return Rn.ENTRY
                    }
                }, {
                    key: "isLocatedAtCentroid",
                    value: function() {
                        return this._navigationPoint.getPoint().equals(this.getLandmarkCentroid())
                    }
                }, {
                    key: "getIndex",
                    value: function() {
                        return this._index
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._landmark.arePropertiesEditable()
                    }
                }, {
                    key: "getArrowIconClass",
                    value: function() {
                        var e = this.getType();
                        return e === Rn.BOTH ? "waze-icon-full-arrow-two-sided" : e === Rn.ENTRY ? "waze-icon-full-arrow-right" : "waze-icon-full-arrow-left"
                    }
                }, {
                    key: "getLandmarkCentroid",
                    value: function() {
                        return null === this._landmarkCentroid && (this._landmarkCentroid = this._landmark.attributes.geometry.getCentroid()),
                            this._landmarkCentroid
                    }
                }, {
                    key: "getName",
                    value: function() {
                        return this._navigationPoint.getName().length > 0 ? this._navigationPoint.getName() : I18n.t("edit.landmark.navigation_point.no_name")
                    }
                }, {
                    key: "getLandmarkGeometry",
                    value: function() {
                        return this._landmark.attributes.geometry
                    }
                }]),
                e
        }(),
        Ln = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._navigationPointDecorator = e.navigationPointDecorator;
                        var t = this._navigationPointDecorator.getNavigationPoint();
                        this.model = new g.a.Model({
                            name: t.getName(),
                            isPrimary: t.isPrimary(),
                            entry: t.getEntry(),
                            exit: t.getExit()
                        })
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=point_name]": "name",
                            "[name=is-primary]": "isPrimary",
                            "[name=type]": {
                                observe: ["entry", "exit"],
                                onGet: function(e, t) {
                                    return t.view._navigationPointDecorator.getType()
                                },
                                onSet: function(e) {
                                    var t = !0,
                                        n = !0;
                                    return e === Rn.EXIT && (t = !1),
                                        e === Rn.ENTRY && (n = !1),
                                        [t, n]
                                }
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "submit form": "_onFormSubmit",
                            "click .cancel-button": "destroy"
                        }
                    }
                }, {
                    key: "_onFormSubmit",
                    value: function(e) {
                        e.preventDefault();
                        var t = this._navigationPointDecorator.getNavigationPoint().with({
                            name: this.model.attributes.name,
                            primary: this.model.attributes.isPrimary,
                            entry: this.model.attributes.entry,
                            exit: this.model.attributes.exit
                        });
                        this.trigger("submit", this._navigationPointDecorator, t)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            NAVIGATION_POINT_TYPE: Rn,
                            isPrimaryInputId: "navigation-point-is-primary-".concat(this._navigationPointDecorator.getIndex())
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/edit"
                    }
                }]),
                t
        }(a.a.View),
        Pn = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._navigationPointDecorator = e.model.get("decorator"),
                            this._viewModel = new g.a.Model({
                                showDeleteButton: e.deleteable,
                                showEditButton: e.editable,
                                arrowIconClass: this._navigationPointDecorator.getArrowIconClass(),
                                isPrimary: this._navigationPointDecorator.getNavigationPoint().isPrimary(),
                                name: this._navigationPointDecorator.getName()
                            })
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "navigation-point-list-item"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".name": "name",
                            ".edit-button": {
                                observe: "showEditButton",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".delete-button": {
                                observe: "showDeleteButton",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".arrow-icon": {
                                attributes: [{
                                    name: "class",
                                    observe: "arrowIconClass"
                                }]
                            },
                            ".preview": {
                                attributes: [{
                                    name: "class",
                                    observe: "isPrimary",
                                    onGet: function(e) {
                                        return e ? "primary" : ""
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            editRegion: ".edit-region"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .delete-button": "deleteClicked",
                            mouseleave: "mouseLeave"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .edit-button": "_onEditClicked",
                            mouseenter: "_onMouseEnter",
                            "click .focus-button": "_onFocusClick"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            submit: "submitClicked"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onMouseEnter",
                    value: function() {
                        this.trigger("mouseEnter", this._navigationPointDecorator)
                    }
                }, {
                    key: "_onFocusClick",
                    value: function() {
                        this.trigger("focusClick", this._navigationPointDecorator)
                    }
                }, {
                    key: "_onEditClicked",
                    value: function() {
                        this.showChildView("editRegion", new Ln({
                            navigationPointDecorator: this._navigationPointDecorator
                        }))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/item"
                    }
                }]),
                t
        }(a.a.View),
        Nn = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._editable = e.editable,
                            this._deleteable = e.deleteable
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return Pn
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            editable: this._editable,
                            deleteable: this._deleteable
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            mouseEnter: "listItemMouseEnter",
                            focusClick: "listItemFocusClick",
                            mouseLeave: "listItemMouseLeave",
                            submitClicked: "listItemSubmitClicked",
                            deleteClicked: "listItemDeleteClicked"
                        }
                    }
                }]),
                t
        }(a.a.CollectionView),
        xn = n(34),
        Vn = n.n(xn),
        jn = n(89),
        Un = n(20),
        Fn = function(e) {
            function t(e, n) {
                var i, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    s = r.transparent,
                    o = void 0 !== s && s,
                    a = r.highlight,
                    l = void 0 !== a && a;
                E()(this, t);
                var u = Ke.toLonLat(e.getNavigationPoint().getPoint()),
                    c = new Ye.default("navigation-point");
                return (i = T()(this, A()(t).call(this, u, c)))._navigationPointDecorator = e,
                    i._drawingContext = n,
                    i._highlight = l,
                    i._dragBounds = i._calcDragBounds(i._navigationPointDecorator.getLandmarkGeometry()),
                    i._dragHandler = null,
                    i._addMarkerClasses(),
                    i._navigationPointDecorator.isLocatedAtCentroid() || i._rotateToCentoid(),
                    i._lineToCentroid = i._createLineToCentroid(),
                    i._dragBoundaryVector = new OL.Feature.Vector(i._dragBounds.toGeometry(), null, {
                        fillOpacity: 0,
                        strokeDashstyle: "dash",
                        pointerEvents: "none"
                    }),
                    !0 === o && i._makeTransparent(),
                    i._drawingContext.addMarkers([Vn()(i)]),
                    i._drawingContext.addFeatures([i._lineToCentroid]),
                    i
            }
            return O()(t, e),
                S()(t, [{
                    key: "_makeTransparent",
                    value: function() {
                        this._lineToCentroid.style.strokeOpacity = .06,
                            this.icon.$div.addClass("transparent")
                    }
                }, {
                    key: "_createLineToCentroid",
                    value: function() {
                        var e = this._navigationPointDecorator.getNavigationPoint().isPrimary();
                        return new OL.Feature.Vector(xe.createLineString([this._navigationPointDecorator.getLandmarkCentroid(), this._navigationPointDecorator.getNavigationPoint().getPoint().clone()]), null, {
                            strokeWidth: 2,
                            strokeColor: "white",
                            strokeOpacity: e || this._highlight ? 1 : .24,
                            strokeLinecap: "square",
                            strokeDashstyle: "dash"
                        })
                    }
                }, {
                    key: "_addMarkerClasses",
                    value: function() {
                        this._navigationPointDecorator.isLocatedAtCentroid() ? (this.icon.$div.addClass("centered"),
                                this.icon.$div.append(Le()("<div/>").addClass("arrow-up waze-icon-full-arrow-up"), Le()("<div/>").addClass("arrow-down waze-icon-full-arrow-up"), Le()("<div/>").addClass("arrow-left waze-icon-full-arrow-up"), Le()("<div/>").addClass("arrow-right waze-icon-full-arrow-up"))) : this.icon.$div.addClass(this._navigationPointDecorator.getArrowIconClass()),
                            this.icon.$div.toggleClass("primary", this._navigationPointDecorator.getNavigationPoint().isPrimary()),
                            this._navigationPointDecorator.isEditable() && this.icon.$div.addClass("draggable")
                    }
                }, {
                    key: "_calcDragBounds",
                    value: function(e) {
                        var t = $e.getBounds(e, !0);
                        return t.left -= 500,
                            t.right += 500,
                            t.top += 500,
                            t.bottom -= 500,
                            t
                    }
                }, {
                    key: "draw",
                    value: function(e) {
                        return this._navigationPointDecorator.isEditable() && this._initDragHandler(),
                            Ie()(A()(t.prototype), "draw", this).call(this, e)
                    }
                }, {
                    key: "_rotateToCentoid",
                    value: function() {
                        var e = this._getAngleToCentroid();
                        this.icon.$div.css({
                            transform: "rotate(".concat(Math.PI - e, "rad)")
                        })
                    }
                }, {
                    key: "_initDragHandler",
                    value: function() {
                        this._dragHandler = new jn.a(this.map),
                            this._dragHandler.down = this._onDragStart.bind(this),
                            this._dragHandler.move = this._onDragMove.bind(this),
                            this._dragHandler.done = this._onDragDone.bind(this),
                            this._dragHandler.activate(this.icon.$div)
                    }
                }, {
                    key: "_onDragStart",
                    value: function() {
                        this.icon.$div.addClass("dragging"),
                            this._drawingContext.addFeatures([this._dragBoundaryVector])
                    }
                }, {
                    key: "_onDragMove",
                    value: function(e) {
                        var t = this.map.getLonLatFromViewPortPx(e.xy);
                        this.icon.$div.removeClass("centered"),
                            t.lon = Math.max(t.lon, this._dragBounds.left),
                            t.lon = Math.min(t.lon, this._dragBounds.right),
                            t.lat = Math.max(t.lat, this._dragBounds.bottom),
                            t.lat = Math.min(t.lat, this._dragBounds.top),
                            this.lonlat = t,
                            this.layer.drawMarker(this),
                            this._rotateToCentoid(),
                            this._updateLineToCentroid()
                    }
                }, {
                    key: "_onDragDone",
                    value: function() {
                        this.icon.$div.removeClass("dragging");
                        var e = this._navigationPointDecorator.getNavigationPoint().with({
                            point: Ke.fromLonLat(this.lonlat)
                        });
                        this.trigger("navigationPointDragged", this._navigationPointDecorator, e)
                    }
                }, {
                    key: "_getAngleToCentroid",
                    value: function() {
                        var e = this._navigationPointDecorator.getLandmarkCentroid();
                        return Math.atan2(this.lonlat.lat - e.y, this.lonlat.lon - e.x)
                    }
                }, {
                    key: "_updateLineToCentroid",
                    value: function() {
                        Un.setVertex(this._lineToCentroid.geometry, 1, this.lonlat.lon, this.lonlat.lat),
                            this._drawingContext.redrawFeature(this._lineToCentroid)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        Ie()(A()(t.prototype), "destroy", this).call(this),
                            null !== this._dragHandler && this._dragHandler.deactivate()
                    }
                }]),
                t
        }(OL.Marker);
    Object.assign(Fn.prototype, g.a.Events);
    var Bn = Fn,
        Gn = n(243),
        Wn = n.n(Gn),
        Hn = function(e) {
            function t(e, n, i) {
                var r;
                return E()(this, t),
                    (r = T()(this, A()(t).call(this)))._navigationPoint = e,
                    r._landmark = n,
                    r._navigationPointIndex = i,
                    r
            }
            return O()(t, e),
                S()(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        this._navigationPoint.isPrimary() && this._makeAllPointsNonPrimary(e),
                            e[this._navigationPointIndex] = this._navigationPoint,
                            this.doSubAction(new bt.a(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "_makeAllPointsNonPrimary",
                    value: function(e) {
                        e.forEach(function(t, n) {
                            t.isPrimary() && (e[n] = t.with({
                                primary: !1
                            }))
                        })
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name,
                            t = this.subActions[0],
                            n = t.newAttributes.entryExitPoints,
                            i = t.oldAttributes.entryExitPoints;
                        if (n.length === i.length) {
                            for (var r = null, s = null, o = 0, a = 0; a < n.length; a++)
                                L.a.isEqual(n[a], i[a]) || (r = n[a],
                                    s = i[a],
                                    o++);
                            var l = Object(kt.buildChanges)(this.model, "entryExitPoints", r.toJSON(), s.toJSON());
                            if (l.some(function(e) {
                                    return "primary" === e.name
                                }))
                                this._description = I18n.t("save.changes_log.actions.UpdateNavigationPoint.changed_main");
                            else if (1 === o)
                                if (1 === l.length) {
                                    var u = l[0],
                                        c = u.name,
                                        d = u.newValue,
                                        h = u.displayName;
                                    this._description = "point" === c ? e ? I18n.t("save.changes_log.actions.UpdateNavigationPoint.moved.has_name", {
                                        venueName: e
                                    }) : I18n.t("save.changes_log.actions.UpdateNavigationPoint.moved.default") : I18n.t("save.changes_log.actions.UpdateNavigationPoint.single", {
                                        propertyName: h,
                                        value: d
                                    })
                                } else
                                    this._description = I18n.t("save.changes_log.actions.UpdateNavigationPoint.multiple");
                            else
                                this._description = I18n.t("save.changes_log.actions.UpdateNavigationPoint.multiple_points")
                        }
                    }
                }]),
                t
        }(_t.a),
        zn = function(e) {
            function t(e, n) {
                var i;
                return E()(this, t),
                    (i = T()(this, A()(t).call(this)))._navigationPoint = e,
                    i._landmark = n,
                    i
            }
            return O()(t, e),
                S()(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        e.push(this._navigationPoint),
                            this.doSubAction(new bt.a(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name;
                        this._description = e ? I18n.t("save.changes_log.actions.AddNavigationPoint.has_name", {
                            venueName: e
                        }) : I18n.t("save.changes_log.actions.AddNavigationPoint.default")
                    }
                }]),
                t
        }(_t.a),
        qn = function(e) {
            function t(e, n) {
                var i;
                return E()(this, t),
                    (i = T()(this, A()(t).call(this)))._landmark = e,
                    i._navigationPointIndex = n,
                    i
            }
            return O()(t, e),
                S()(t, [{
                    key: "doAction",
                    value: function() {
                        var e = this._landmark.getNavigationPoints().slice();
                        e.splice(this._navigationPointIndex, 1),
                            this.doSubAction(new bt.a(this._landmark, {
                                entryExitPoints: e
                            }))
                    }
                }, {
                    key: "getFocusFeatures",
                    value: function() {
                        return [this._landmark]
                    }
                }, {
                    key: "generateDescription",
                    value: function() {
                        var e = this._landmark.attributes.name;
                        this._description = e ? I18n.t("save.changes_log.actions.DeleteNavigationPoint.has_name", {
                            venueName: e
                        }) : I18n.t("save.changes_log.actions.DeleteNavigationPoint.default")
                    }
                }]),
                t
        }(_t.a),
        Yn = n(31),
        $n = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function(e) {
                        var t = e.landmark,
                            n = e.drawingContext,
                            i = e.actionManager,
                            r = e.pannable;
                        this._landmark = t,
                            this._drawingContext = n,
                            this._actionManager = i,
                            this._pannable = r,
                            this._navigationPointDecorators = this._createNavigationPointDecorators(this._landmark),
                            this._viewModel = new g.a.Model({
                                enableAddButton: this._shouldEnableAddButton()
                            })
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "navigation-point-view"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .add-button": "_onAddClicked"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            listItemMouseEnter: "_onListItemMouseEnter",
                            listItemFocusClick: "_onListItemFocusClick",
                            listItemMouseLeave: "_onListItemMouseLeave",
                            listItemSubmitClicked: "_onNavigationPointChanged",
                            listItemDeleteClicked: "_onDeleteClicked"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            listRegion: ".list-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add-button": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "enableAddButton",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this._viewModel),
                            this._showListView(),
                            this._drawNavigationPoints(null)
                    }
                }, {
                    key: "_getMaxNavigationPoints",
                    value: function() {
                        var e = Object(Yn.getServerConfig)().maxVenueNavigationPoints;
                        return null == e && (e = 1),
                            this._landmark.isPoint() ? 1 : e
                    }
                }, {
                    key: "_shouldEnableAddButton",
                    value: function() {
                        var e = this._getMaxNavigationPoints();
                        return this._landmark.arePropertiesEditable() && this._navigationPointDecorators.every(function(e) {
                            return !e.isLocatedAtCentroid()
                        }) && this._landmark.getNavigationPoints().length < e
                    }
                }, {
                    key: "_createNavigationPointDecorators",
                    value: function(e) {
                        return e.getNavigationPoints().map(function(t, n) {
                            return new Dn(t, e, n)
                        }).sort(function(e, t) {
                            return t.getNavigationPoint().isPrimary() - e.getNavigationPoint().isPrimary()
                        })
                    }
                }, {
                    key: "_showListView",
                    value: function() {
                        var e = new g.a.Collection(this._navigationPointDecorators.map(function(e) {
                                return new g.a.Model({
                                    decorator: e
                                })
                            })),
                            t = this._getMaxNavigationPoints(),
                            n = new Nn({
                                collection: e,
                                editable: this._landmark.arePropertiesEditable() && t > 1,
                                deleteable: this._landmark.arePropertiesEditable()
                            });
                        this.showChildView("listRegion", n)
                    }
                }, {
                    key: "_onListItemMouseEnter",
                    value: function(e) {
                        this._drawNavigationPoints(e)
                    }
                }, {
                    key: "_onListItemFocusClick",
                    value: function(e) {
                        this._focusOnNavigationPoint(e)
                    }
                }, {
                    key: "_onListItemMouseLeave",
                    value: function() {
                        this._drawNavigationPoints(null)
                    }
                }, {
                    key: "_drawNavigationPoints",
                    value: function(e) {
                        var t = this;
                        this._drawingContext.clear(),
                            this._navigationPointDecorators.forEach(function(n, i) {
                                var r = {
                                    transparent: !1,
                                    highlight: !1
                                };
                                null !== e && (e === n ? r.highlight = !0 : r.transparent = !0),
                                    new Bn(n, t._drawingContext, r).on("navigationPointDragged", t._onNavigationPointChanged, t)
                            })
                    }
                }, {
                    key: "_focusOnNavigationPoint",
                    value: function(e) {
                        var t = e.getNavigationPoint().getPoint();
                        this._pannable.panTo(Ke.toLonLat(t))
                    }
                }, {
                    key: "_onDeleteClicked",
                    value: function(e) {
                        var t = e.model.get("decorator"),
                            n = new qn(this._landmark, t.getIndex());
                        this._actionManager.add(n)
                    }
                }, {
                    key: "_onAddClicked",
                    value: function() {
                        var e = new Wn.a({
                                point: this._landmark.geometry.getCentroid(),
                                primary: 0 === this._landmark.getNavigationPoints().length
                            }),
                            t = new zn(e, this._landmark);
                        this._actionManager.add(t)
                    }
                }, {
                    key: "_onNavigationPointChanged",
                    value: function(e, t) {
                        var n = new Hn(t, this._landmark, e.getIndex());
                        this._actionManager.add(n)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/NavigationPoint/FeatureEditor/layout"
                    }
                }]),
                t
        }(a.a.View),
        Kn = n(220),
        Jn = n(233),
        Zn = n.n(Jn),
        Qn = a.a.View.extend({
            template: "templates/venue/alias",
            tagName: "li",
            ui: {
                name: ".alias-name"
            },
            events: {
                "click .delete": "_onDeleteClicked",
                "change .alias-name": "_onNameChanged"
            },
            _getIndex: function() {
                return this.model.collection.indexOf(this.model)
            },
            _onNameChanged: function() {
                var e = this.ui.name.val();
                this.isNew() ? new Zn.a(W.model, this.options.landmarkId).addAlias(e) : new Zn.a(W.model, this.options.landmarkId).changeAlias(this._getIndex(), e)
            },
            isNew: function() {
                return this.model.attributes.new
            },
            _onDeleteClicked: function() {
                this.isNew() ? this.model.collection.remove(this.model) : new Zn.a(W.model, this.options.landmarkId).removeAlias(this._getIndex())
            }
        }),
        Xn = a.a.CompositeView.extend({
            MAX_ALIASES: 4,
            template: "templates/venue/aliases-layout",
            childView: Qn,
            childViewContainer: ".list",
            events: {
                "click .add": "_onAddClicked"
            },
            childViewOptions: function() {
                return {
                    landmarkId: this.options.landmarkId
                }
            },
            ui: {
                addButton: ".add"
            },
            initialize: function() {
                this.listenTo(this.collection, "reset", this._toggleAddButton)
            },
            templateContext: function() {
                return {
                    hideAddButton: this._shouldHideAddButton()
                }
            },
            _onAddClicked: function(e) {
                e.preventDefault && e.preventDefault(),
                    this.collection.add(new Kn.Item({
                        name: "",
                        new: !0
                    }))
            },
            _shouldHideAddButton: function() {
                return this.collection.length >= this.MAX_ALIASES || !this.options.editable
            },
            _toggleAddButton: function() {
                return this.ui.addButton.toggleClass("hidden", this._shouldHideAddButton())
            }
        }),
        ei = n(208),
        ti = n(134),
        ni = 3,
        ii = 250,
        ri = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "external-provider-item"
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .delete": "externalProviderItem:delete"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "change .uuid": "_onUuidChanged"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            uuid: ".uuid"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".url": {
                                observe: "url",
                                update: function(e, t) {
                                    e.attr("href", t)
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._initAutoComplete()
                    }
                }, {
                    key: "_onUuidChanged",
                    value: function(e) {
                        e.stopPropagation(),
                            this.model.set({
                                uuid: this.ui.uuid.val(),
                                name: null,
                                url: null
                            }),
                            null !== this.model.get("uuid") && (Object(ti.populateExternalProviderDetails)(this.model, this._placesApiSessionToken),
                                this._generatePlacesApiSessionToken())
                    }
                }, {
                    key: "_initAutoComplete",
                    value: function() {
                        var e = this;
                        this._generatePlacesApiSessionToken();
                        var t = Pe.getUnprojectedGeometry(this.options.venueCentroid);
                        return this.ui.uuid.select2({
                            minimumInputLength: ni,
                            initSelection: this._getInitialSelection.bind(this),
                            ajax: {
                                transport: function(n) {
                                    var i = n.data.input,
                                        r = n.success,
                                        s = {
                                            input: i,
                                            location: new google.maps.LatLng(t.y, t.x),
                                            radius: 5,
                                            sessionToken: e._placesApiSessionToken
                                        };
                                    (new ei.GooglePlacesService).getPredictions(s).then(r).catch(function(e) {
                                        return console.error(e)
                                    })
                                },
                                data: function(e) {
                                    return {
                                        input: e
                                    }
                                },
                                dataType: "json",
                                quietMillis: ii,
                                results: this._parseAutoCompleteResults
                            }
                        })
                    }
                }, {
                    key: "_generatePlacesApiSessionToken",
                    value: function() {
                        this._placesApiSessionToken = ei.GooglePlacesService.generateSessionToken()
                    }
                }, {
                    key: "_parseAutoCompleteResults",
                    value: function(e) {
                        return {
                            results: e.map(function(e) {
                                return {
                                    id: e.place_id,
                                    text: e.description
                                }
                            })
                        }
                    }
                }, {
                    key: "_getInitialSelection",
                    value: function(e, t) {
                        var n = this;
                        return Object(ti.populateExternalProviderDetails)(this.model).then(function(e) {
                            return t({
                                id: n.model.get("uuid"),
                                text: e.name
                            })
                        })
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        return this.ui.uuid.select2("close")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/external-provider/item"
                    }
                }]),
                t
        }(a.a.View),
        si = g.a.Model.extend({
            MAX_ITEMS: 4,
            defaults: {
                showAddButton: !0
            },
            initialize: function(e, t) {
                this.collection = t.collection,
                    this.listenTo(this.collection, "add remove", this._onCollectionChanged),
                    this.set({
                        showAddButton: this._shouldShowAddButton()
                    })
            },
            _onCollectionChanged: function() {
                return this.set({
                    showAddButton: this._shouldShowAddButton()
                })
            },
            _shouldShowAddButton: function() {
                return this.collection.length < this.MAX_ITEMS
            }
        }),
        oi = n(171),
        ai = n.n(oi),
        li = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .add": "_onAddClicked"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add": {
                                observe: "showAddButton",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "collectionEvents",
                    value: function() {
                        return {
                            "remove change:uuid": "_onCollectionChanged"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.venue = this.options.venue,
                            this.collection = new g.a.Collection(this.venue.attributes.externalProviderIDs.map(function(e) {
                                return e.clone()
                            })),
                            this.viewModel = new si(null, {
                                collection: this.collection
                            })
                    }
                }, {
                    key: "_onCollectionChanged",
                    value: function() {
                        var e = this.collection.models.filter(function(e) {
                            return e.get("uuid").length
                        });
                        this.triggerMethod("externalProvidersList:change", e)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this.showChildView("list", new a.a.CollectionView({
                                childView: ri,
                                collection: this.collection,
                                childViewOptions: {
                                    venueCentroid: this.venue.geometry.getCentroid()
                                },
                                onChildviewExternalProviderItemDelete: function(t) {
                                    e.collection.remove(t.model)
                                }
                            })),
                            this.stickit(this.viewModel)
                    }
                }, {
                    key: "_onAddClicked",
                    value: function(e) {
                        return e.preventDefault && e.preventDefault(),
                            this.collection.add(new ai.a({
                                uuid: ""
                            }))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/external-provider/list"
                    }
                }]),
                t
        }(a.a.View),
        ui = n(252),
        ci = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).dataModel = e.dataModel,
                    n.streetViewController = e.streetViewController,
                    n.previousGeometry = null,
                    n.listenTo(n.viewModel, "change:isPoint", n._onIsPointChanged),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            restoreLastTab: {
                                behaviorClass: Cn
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            tooltips: ".tooltip",
                            residentialTooltip: ".residential-tooltip",
                            categoriesTooltip: ".categories-tooltip",
                            brandInput: ".form-control[name=brand]"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return L.a.extend({}, Ie()(A()(t.prototype), "events", this).call(this), {
                            "click .pending-changes-alert": "_onPendingChangesAlertClicked",
                            "click .toggle-residential": "_onResidentialToggled",
                            "click .focus": "_onLocateButtonClicked",
                            "click .street-view-btn": "_onLocateStreetViewButtonClicked",
                            "click .convert-parking-lot-to-polygon": "_onConvertParkingLotToPolygonClicked"
                        })
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            categoriesRegion: ".categories",
                            aliasesRegion: ".aliases-view",
                            externalProvidersRegion: ".external-providers-view",
                            moreInfoRegion: ".more-info",
                            imagesRegion: ".images",
                            addressEdit: ".address-edit",
                            historyRegion: ".element-history-region",
                            navigationPointRegion: ".navigation-point-region",
                            lockEditRegion: ".lock-edit",
                            geometryButtonRegion: ".geometry-button-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            ".landmark.sidebar-column": {
                                attributes: [{
                                    name: "class",
                                    observe: "categoryClass"
                                }]
                            },
                            "span.img-count": {
                                observe: "imageCount"
                            },
                            ".street-view-btn": {
                                observe: "streetViewAvailable",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".street-view-tooltip": {
                                observe: "streetViewAvailable",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(Boolean)
                            },
                            ".unapproved-alert": {
                                observe: "showUnapprovedAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".pending-changes-alert2": {
                                observe: "showPendingChangesAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".locked-alert": {
                                observe: "showAdLockedAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".requires-moderation-alert": {
                                observe: "showRequiresModerationAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".pending-merge-note": {
                                observe: "showPendingMergeNote",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".show-residential": {
                                observe: "isResidential",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".hide-residential": {
                                observe: "isResidential",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity)
                            },
                            ".show-parking-lot": {
                                observe: "isParkingLot",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".hide-parking-lot": {
                                observe: "isParkingLot",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity)
                            },
                            "[name=name]": {
                                observe: "name",
                                events: ["blur"]
                            },
                            "[name=description]": {
                                observe: "description",
                                events: ["blur"]
                            },
                            ".brand": {
                                observe: "hasBrand",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "select[name=brand]": {
                                observe: ["brand", "brands"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0];
                                    t[1];
                                    return n
                                },
                                onSet: function(e) {
                                    return [e, this.viewModel.attributes.brands]
                                },
                                selectOptions: {
                                    collection: function() {
                                        return e.viewModel.attributes.brands.map(function(e) {
                                            return {
                                                value: e,
                                                label: e
                                            }
                                        })
                                    }
                                }
                            },
                            ".type-edit": {
                                observe: "canEditType",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "input[name=isPoint]": {
                                observe: "isPoint",
                                onGet: function(e) {
                                    return e ? "true" : "false"
                                },
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            "label.point-btn": {
                                classes: {
                                    active: "isPoint"
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "propertiesEditable",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            },
                            "label.area-btn": {
                                classes: {
                                    active: {
                                        observe: "isPoint",
                                        onGet: L.a.negate(L.a.identity)
                                    }
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "propertiesEditable",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            },
                            ".external-providers": {
                                observe: "showExternalProviderView",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "button.toggle-residential": {
                                observe: "toggleResidentialTitle",
                                attributes: [{
                                    name: "disabled",
                                    observe: "canToggleResidential",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/venue/venue-edit"
                    }
                }]),
                S()(t, [{
                    key: "_toggleStreetViewButton",
                    value: function(e) {
                        var t = this;
                        this.streetViewController && this.streetViewController.hasPlacePanaorama(e).then(function(e) {
                            t.viewModel.set({
                                streetViewAvailable: e
                            })
                        })
                    }
                }, {
                    key: "_hasHouseNumber",
                    value: function(e) {
                        return e.getAddress().has("houseNumber")
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        var t = e.getApprovedImages();
                        return {
                            id: e.getID(),
                            name: e.attributes.name,
                            description: e.attributes.description,
                            streetViewAvailable: !1,
                            canEditType: this._canEditType(e),
                            hasHouseNumber: this._hasHouseNumber(e),
                            showExternalProviderView: this._isExternalProviderEditingAllowed(e),
                            rank: e.attributes.rank,
                            lockRank: e.attributes.lockRank,
                            categories: gt()(e.getCategorySet()),
                            lockRankMixed: !1,
                            allowDefaultRank: !1,
                            showDefaultRank: !1,
                            imageCount: t.length,
                            hasImages: t.length > 0,
                            showUnapprovedAlert: !e.attributes.approved,
                            showPendingMergeNote: Object(ui.hasPendingMerge)(this.dataModel.actionManager, e),
                            showPendingChangesAlert: e.hasUpdateRequests(),
                            showRequiresModerationAlert: e.requiresModeration(),
                            showAdLockedAlert: e.attributes.adLocked,
                            brand: e.attributes.brand,
                            hasBrand: !L.a.isEmpty(this._getAvailableBrands(e)),
                            brands: this._getAvailableBrands(e),
                            categoryClass: this._getCategoryClassName(e),
                            images: t,
                            isResidential: e.isResidential(),
                            isParkingLot: e.isParkingLot(),
                            isPoint: e.isPoint(),
                            canToggleResidential: this._canToggleResidential(e),
                            toggleResidentialTitle: e.isResidential() ? I18n.t("edit.landmark.residential.convert_from") : I18n.t("edit.landmark.residential.convert_to"),
                            externalProviderIDs: e.attributes.externalProviderIDs,
                            services: gt()(e.getServiceSet()),
                            url: e.attributes.url,
                            phone: e.attributes.phone,
                            categoryAttributes: e.attributes.categoryAttributes,
                            openingHours: this._createOpeningHourViewModels(e),
                            aliases: this._getAliases(e)
                        }
                    }
                }, {
                    key: "_createOpeningHourViewModels",
                    value: function(e) {
                        return e.attributes.openingHours.map(function(e) {
                            return new fn.OpeningHourViewModel({
                                fromHour: e.fromHour,
                                toHour: e.toHour,
                                days: e.days,
                                isAllDay: e.isAllDay()
                            })
                        })
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            name: this.simpleAttribute("name"),
                            description: this.simpleAttribute("description"),
                            lockRank: this.simpleAttribute("lockRank"),
                            categories: this.simpleAttribute("categories"),
                            externalProviderIDs: this.simpleAttribute("externalProviderIDs"),
                            brand: this.simpleAttribute("brand"),
                            url: this.simpleAttribute("url"),
                            phone: this.simpleAttribute("phone"),
                            services: this.simpleAttribute("services"),
                            categoryAttributes: this.simpleAttribute("categoryAttributes")
                        }
                    }
                }, {
                    key: "_canToggleResidential",
                    value: function(e) {
                        return e.isResidential() ? e.canConvertToPublic() : this._hasHouseNumber(e) && e.arePropertiesEditable()
                    }
                }, {
                    key: "_getAvailableBrands",
                    value: function(e) {
                        var t;
                        return e.isGasStation() && (t = this.dataModel.getGasStationBrands()),
                            e.isParkingLot() && (t = this.dataModel.getParkingLotBrands()),
                            Array.isArray(t) ? t.sort(function(e, t) {
                                return e.localeCompare(t)
                            }) : []
                    }
                }, {
                    key: "_getCategoryClassName",
                    value: function(e) {
                        var t = e.getMainCategory() || "";
                        return "venue-category-".concat(z.default.categoryToClassName(t))
                    }
                }, {
                    key: "_canEditType",
                    value: function(e) {
                        return !e.isParkingLot() || e.isPoint()
                    }
                }, {
                    key: "_getAliases",
                    value: function(e) {
                        return e.attributes.aliases.map(function(e) {
                            return {
                                name: e
                            }
                        })
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank(),
                            t = this.model.attributes.lockRank,
                            n = Math.max(e, t);
                        return L.a.range(0, n + 1)
                    }
                }, {
                    key: "_isExternalProviderEditingAllowed",
                    value: function(e) {
                        return e.areExternalProvidersEditable()
                    }
                }, {
                    key: "_onPendingChangesAlertClicked",
                    value: function() {
                        return W.commands.execute("place_updates:list", this.getFeature())
                    }
                }, {
                    key: "_onIsPointChanged",
                    value: function(e, t, n) {
                        n.fromRepo || this._togglePointOrPolygonGeomerty(t)
                    }
                }, {
                    key: "_togglePointOrPolygonGeomerty",
                    value: function(e) {
                        var t, n = this.getFeature();
                        t = e ? n.getPointGeometry() : this.previousGeometry ? $e.cloneGeometry(this.previousGeometry) : n.getPolygonGeometry();
                        var i = new mt.a(n, this.dataModel.venues, n.geometry, t);
                        this.dataModel.actionManager.add(i)
                    }
                }, {
                    key: "_initOrUpdateSubviews",
                    value: function(e) {
                        e.isResidential() || (this._initAliasesView(e),
                                this._initMoreInfoTab(e),
                                this._isExternalProviderEditingAllowed(e) && this._initExternalProvidersView(e)),
                            this._initBrandAutoComplete(e),
                            this._initImagesView(e),
                            this._renderNavigationPoints(e)
                    }
                }, {
                    key: "onFeaturesChanged",
                    value: function(e) {
                        Ie()(A()(t.prototype), "onFeaturesChanged", this).call(this, e);
                        var n = this.getFeature();
                        this.hasEditedModelChanged(e) && !n.isPoint() && (this.previousGeometry = n.geometry),
                            this._initOrUpdateSubviews(n)
                    }
                }, {
                    key: "_onResidentialToggled",
                    value: function(e) {
                        e.preventDefault();
                        var t = this.getFeature(),
                            n = t.isResidential();
                        (this._hasHouseNumber(t) || n) && this.dataModel.actionManager.add(new Et(t, !n))
                    }
                }, {
                    key: "_initAliasesView",
                    value: function(e) {
                        this.aliasesLayout ? this.aliasesLayout.collection.reset(this._getAliases(e)) : (this.aliasesLayout = new Xn({
                                collection: new Kn.Collection(this.viewModel.attributes.aliases),
                                editable: e.arePropertiesEditable(),
                                landmarkId: this.featureID
                            }),
                            this.showChildView("aliasesRegion", this.aliasesLayout))
                    }
                }, {
                    key: "_initExternalProvidersView",
                    value: function(e) {
                        this.showChildView("externalProvidersRegion", new li({
                            venue: e
                        }))
                    }
                }, {
                    key: "onChildviewExternalProvidersListChange",
                    value: function(e) {
                        this.viewModel.set({
                            externalProviderIDs: e
                        })
                    }
                }, {
                    key: "_initLockEditView",
                    value: function() {
                        var e = new Xe.default({
                            model: this.viewModel
                        });
                        this.showChildView("lockEditRegion", e)
                    }
                }, {
                    key: "_initCategoriesView",
                    value: function() {
                        this.suggestedCategoriesView = new rn({
                                model: this.viewModel
                            }),
                            this.showChildView("categoriesRegion", this.suggestedCategoriesView)
                    }
                }, {
                    key: "_initMoreInfoTab",
                    value: function(e) {
                        if (!this.moreInfoView) {
                            var t = e.isParkingLot() ? On : Sn;
                            this.moreInfoView = new t({
                                    model: this.viewModel,
                                    serviceSet: e.getServiceSet(),
                                    isResidential: e.isResidential()
                                }),
                                this.showChildView("moreInfoRegion", this.moreInfoView)
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).call(this);
                        var e = this.getFeature();
                        e.isPoint() || (this.previousGeometry = e.geometry),
                            this._toggleStreetViewButton(e),
                            this.ui.categoriesTooltip.tooltip({
                                placement: "bottom",
                                title: I18n.t(e.isParkingLot() ? "edit.landmark.tooltip.parking_lot" : "edit.landmark.tooltip.categories")
                            }),
                            e.isResidential() || this._initCategoriesView(e),
                            this._hasHouseNumber(e) || this.ui.residentialTooltip.tooltip(),
                            this._initLockEditView(),
                            this._renderAddressEdit(e),
                            this._renderElementHistory(e),
                            this._initBrandAutoComplete(e),
                            this._initOrUpdateSubviews(e),
                            this.ui.tooltips.tooltip(),
                            this._renderCopyGeometryButton()
                    }
                }, {
                    key: "_renderCopyGeometryButton",
                    value: function() {
                        var e = this;
                        this.showChildView("geometryButtonRegion", new wt.ClipboardElementView({
                            messages: {
                                title: I18n.t("edit.landmark.clipboard.copy_geometry"),
                                confirmation: I18n.t("edit.landmark.clipboard.copy_confirmation")
                            },
                            textGenerator: function() {
                                var t = e.getFeature(),
                                    n = Object(Pe.getUnprojectedGeometry)(t.geometry);
                                return $e.toWktString(n)
                            }
                        }))
                    }
                }, {
                    key: "_initImagesView",
                    value: function(e) {
                        this.imagesView ? this.imagesView.collection.reset(this.viewModel.attributes.images) : (this.imagesView = new ln({
                                collection: new g.a.Collection(this.viewModel.attributes.images),
                                venueName: e.attributes.name
                            }),
                            this.showChildView("imagesRegion", this.imagesView))
                    }
                }, {
                    key: "onChildviewDeleteImage",
                    value: function(e) {
                        var t = {
                            images: this.viewModel.attributes.images.filter(function(t) {
                                return t.id !== e
                            })
                        };
                        this.dataModel.actionManager.add(new bt.a(this.getFeature(), t))
                    }
                }, {
                    key: "_initBrandAutoComplete",
                    value: function(e) {
                        (e.isParkingLot() || e.isGasStation()) && this.ui.brandInput && this.ui.brandInput.select2({
                            allowClear: !0
                        })
                    }
                }, {
                    key: "_renderAddressEdit",
                    value: function(e) {
                        this.showChildView("addressEdit", new Qe.default({
                            getAddress: function() {
                                return e.getAddress()
                            },
                            dataModel: this.dataModel,
                            features: [e],
                            editable: e.arePropertiesEditable(),
                            editHouseNumber: !0
                        }))
                    }
                }, {
                    key: "_renderElementHistory",
                    value: function(e) {
                        this.showChildView("historyRegion", new Ht({
                            map: this.options.map,
                            model: e
                        }))
                    }
                }, {
                    key: "_renderNavigationPoints",
                    value: function(e) {
                        var t = new $n({
                            landmark: e,
                            drawingContext: this.options.map.getDrawingContext(),
                            pannable: this.options.map.getPannable(),
                            actionManager: this.dataModel.actionManager
                        });
                        this.showChildView("navigationPointRegion", t)
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this.ui.brandInput && this.ui.brandInput.select2("destroy")
                    }
                }, {
                    key: "_onLocateButtonClicked",
                    value: function() {
                        var e = this.getFeature(),
                            t = W.map.getPannable(),
                            n = Ke.toLonLat(e.geometry.getCentroid().clone());
                        t.panTo(n),
                            B.reportAnalytic.focusAction("locate", "venue_locate_clicked", e.attributes.categories[0])
                    }
                }, {
                    key: "_onLocateStreetViewButtonClicked",
                    value: function() {
                        var e = this.getFeature();
                        this.streetViewController.lookAtPlace(e),
                            B.reportAnalytic.focusAction("streetview", "venue_streetview_clicked", e.attributes.categories[0])
                    }
                }, {
                    key: "_onConvertParkingLotToPolygonClicked",
                    value: function() {
                        this._togglePointOrPolygonGeomerty(!1)
                    }
                }]),
                t
        }(qe.default),
        di = n(174),
        hi = n.n(di),
        pi = n(112),
        gi = n(76),
        fi = n(111);

    function mi(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var vi = function(e) {
            function t(e) {
                var n, i = e.dataModel,
                    r = void 0 === i ? null : i;
                e.selection;
                E()(this, t),
                    (n = T()(this, A()(t).apply(this, arguments))).dataModel = r,
                    n.listenTo(n.dataModel.segments, N.ATTR_CHANGED, n.onSegmentsChanged);
                var s = n.dataModel.getTurnGraph();
                return n.listenTo(s, gi.CHANGE_EVENT, n.onTurnGraphChanged),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            accelerators: {
                                behaviorClass: pi.a
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .disallow-connections": "_disallowAllConnections",
                            "click .allow-connections": "_allowAllConnections"
                        }
                    }
                }, {
                    key: "accelerators",
                    value: function() {
                        return {
                            disallowAllConnections: "_disallowAllConnections",
                            allowAllConnections: "_allowAllConnections"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? mi(Object(n), !0).forEach(function(t) {
                                    s()(e, t, n[t])
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : mi(Object(n)).forEach(function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                })
                            }
                            return e
                        }({}, Ie()(A()(t.prototype), "bindings", this).call(this), {
                            ".big-junction-error": {
                                observe: "isInBigJunction",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".connections-edit": {
                                observe: ["isConnectedToBigJunction", "connectionsExist"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return !n && i
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".connectionStatus": {
                                observe: ["areAllConnectionsEnabled", "areAllConnectionsDisabled"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n ? I18n.t("edit.node.turns.all_allowed") : i ? I18n.t("edit.node.turns.all_disallowed") : void 0
                                }
                            },
                            "button.allow-connections": {
                                observe: "areAllConnectionsEnabled",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity),
                                attributes: [{
                                    attributes: {
                                        name: "disabled",
                                        observe: "areConnectionsEditable",
                                        onGet: L.a.negate(L.a.identity)
                                    }
                                }]
                            },
                            "button.disallow-connections": {
                                observe: "areAllConnectionsDisabled",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity),
                                attributes: [{
                                    attributes: {
                                        name: "disabled",
                                        observe: "areConnectionsEditable",
                                        onGet: L.a.negate(L.a.identity)
                                    }
                                }]
                            }
                        })
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            areConnectionsEditable: new fi.CanEditTurnsUseCase(this.dataModel).canEditNodeTurns(e),
                            isConnectedToBigJunction: e.isConnectedToBigJunction(),
                            connectionsExist: e.connectionsExist(),
                            areAllConnectionsEnabled: e.areAllConnectionsEnabled(),
                            areAllConnectionsDisabled: e.areAllConnectionsDisabled()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/node-edit"
                    }
                }]),
                S()(t, [{
                    key: "onTurnGraphChanged",
                    value: function(e) {
                        if (e) {
                            var t = this.getFeature(),
                                n = t.attributes.segIDs;
                            (n.includes(e.getFromVertex().getSegmentID()) || n.includes(e.getToVertex().getSegmentID())) && this.onFeaturesChanged([t])
                        }
                    }
                }, {
                    key: "onSegmentsChanged",
                    value: function(e) {
                        var t = this.getFeature();
                        e.some(function(e) {
                            return t.isConnectedToSegment(e)
                        }) && this.onFeaturesChanged([t])
                    }
                }, {
                    key: "_setAllConnections",
                    value: function(e, t) {
                        new fi.CanEditTurnsUseCase(this.dataModel).canEditNodeTurns(e) && this.dataModel.actionManager.add(new hi.a(e, t))
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        if (Ie()(A()(t.prototype), "hasEditedModelChanged", this).apply(this, arguments))
                            return !0
                    }
                }, {
                    key: "_allowAllConnections",
                    value: function() {
                        var e = this.getFeature();
                        e.areAllConnectionsEnabled() || this._setAllConnections(e, !0)
                    }
                }, {
                    key: "_disallowAllConnections",
                    value: function() {
                        var e = this.getFeature();
                        e.areAllConnectionsDisabled() || this._setAllConnections(e, !1)
                    }
                }]),
                t
        }(qe.default),
        _i = n(48),
        yi = n(96),
        bi = n(26),
        Ei = n.n(bi),
        wi = n(58),
        Si = g.a.Collection.extend({
            model: wi.b,
            findOpposite: function(e) {
                return this.find(function(t) {
                    return t.isOppositeTo(e)
                })
            }
        }),
        ki = {
            getSharedClosures: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    r = arguments.length > 3 ? arguments[3] : void 0,
                    s = arguments.length > 4 ? arguments[4] : void 0,
                    o = L.a.keyBy(e, function(e) {
                        return e.getID()
                    });
                i || (i = this._getClosuresForSegments(s, o));
                for (var a = L()(i).groupBy(function(e) {
                        return t._getClosureKey(e, n)
                    }).value(), l = new Si, u = 0, c = Object.keys(a); u < c.length; u++) {
                    var d = a[c[u]],
                        h = L()(d).map(function(e) {
                            return o[e.segID]
                        }).uniq().value(),
                        p = h.length !== e.length,
                        g = new wi.b({
                            closures: d,
                            segments: h,
                            partial: p,
                            reverseSegments: this._getClosureReverseSegments(h, n)
                        }, {
                            segmentSelection: r,
                            dataModel: s
                        }),
                        f = l.findOpposite(g);
                    null != f ? f.mergeWithOpposite(g) : l.push(g)
                }
                return l
            },
            _getClosuresForSegments: function(e, t) {
                return e.roadClosures.getObjectArray(function(e) {
                    return null != t[e.segID]
                })
            },
            _getClosureReverseSegments: function(e, t) {
                var n = L()(e).invokeMap("getID").value();
                return L()(t).pick(n).value()
            },
            _getClosureKey: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = e.forward || !1;
                return !0 === t[e.segID] && (n = !n),
                    [e.startDate, e.endDate, e.reason, e.location, n, e.createdBy, e.eventId].join(":")
            }
        },
        Ti = n(138),
        Ii = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/Closures/templates/item",
            className: "closure-item",
            tagName: "li",
            triggers: {
                click: "edit",
                "click .delete": "delete",
                "click .locate": "locate",
                "click .apply-to-all": "applyToAll"
            },
            serializeData: function() {
                var e = a.a.View.prototype.serializeData.apply(this, arguments);
                return e.isStartDateSet = this.model.isStartDateSet(),
                    e.isEndDateSet = this.model.isEndDateSet(),
                    e.startDate = this.model.get("startDate"),
                    e.endDate = this.model.get("endDate"),
                    e.showApplyToAll = this.model.attributes.partial && this.options.allowApplyToAll,
                    e.description = this.options.getDescription(this.model),
                    e.canEdit = this.options.canEdit,
                    e.showLocateButton = this.options.showLocateButton,
                    e.eventName = this._getEventName(),
                    e.DIRECTION = wi.a,
                    e
            },
            _getEventName: function() {
                if (this.options.showEventName) {
                    var e = this.options.dataModel.majorTrafficEvents.getObjectById(this.model.get("eventId"));
                    return e ? e.getEnglishName() : null
                }
                return null
            },
            templateContext: {
                formatDate: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    return I18n.l("date.formats.default", e)
                },
                formatTime: function() {
                    return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "").split(" ")[1]
                }
            }
        }),
        Ai = {
            ERROR: "error",
            SUCCESS: "success",
            LOADING: "loading"
        },
        Mi = {
            CONTAINER: "closures-status-message",
            ICON: "closures-status-message-icon",
            ICON_BY_TYPE: {
                error: "fa fa-exclamation-circle icon-exclamation-sign",
                success: "fa fa-check icon-ok",
                loading: "icon-spinner icon-spin fa fa-spinner fa-spin"
            }
        },
        Oi = function() {
            function e(t, n) {
                E()(this, e),
                    null == n && (n = {}),
                    this.options = n,
                    this.$el = Le()(t).addClass(Mi.CONTAINER),
                    null == this.options.showIcon && (this.options.showIcon = !0),
                    this.ui = {
                        text: Le()("<span>").appendTo(this.$el),
                        icon: null
                    }
            }
            return S()(e, [{
                    key: "showError",
                    value: function(e) {
                        this.show(e, Ai.ERROR)
                    }
                }, {
                    key: "showSuccess",
                    value: function(e) {
                        this.show(e, Ai.SUCCESS)
                    }
                }, {
                    key: "showLoading",
                    value: function(e) {
                        this.show(e, Ai.LOADING)
                    }
                }, {
                    key: "show",
                    value: function(e, t) {
                        this._setText(e),
                            this._setClass(t),
                            this.options.showIcon && this._setIcon(t),
                            this.$el.show()
                    }
                }, {
                    key: "_setText",
                    value: function(e) {
                        null == e && (e = ""),
                            e.htmlSafe ? this.ui.text.html(e) : this.ui.text.text(e)
                    }
                }, {
                    key: "_setClass",
                    value: function(e) {
                        for (var t = 0, n = Object.keys(Ai); t < n.length; t++) {
                            var i = n[t],
                                r = Ai[i];
                            this.$el.toggleClass(r, r === e)
                        }
                    }
                }, {
                    key: "_setIcon",
                    value: function(e) {
                        var t = Mi.ICON_BY_TYPE[e];
                        null != t ? this._showIcon(t) : null != this.ui.icon && this.ui.icon.hide()
                    }
                }, {
                    key: "_showIcon",
                    value: function(e) {
                        var t = "".concat(Mi.ICON, " ").concat(e);
                        null != this.ui.icon ? this.ui.icon.attr({
                            class: t
                        }) : this.ui.icon = Le()("<span>").addClass(t).prependTo(this.$el)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.$el.hide()
                    }
                }]),
                e
        }(),
        Ci = a.a.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/Closures/templates/list",
            className: "closures-list",
            childView: Ii,
            childViewOptions: function() {
                var e = L.a.pick(this.options, ["dataModel", "canEdit"]);
                return L.a.extend(e, this.options.extendedChildViewOptions)
            },
            ui: {
                message: ".message",
                partial: ".partial-closures",
                partialHeader: ".partial-closures-header",
                full: ".full-closures"
            },
            triggers: {
                "click .add-closure-button": "add"
            },
            initialize: function() {
                var e = this;
                return this.on("childview:edit", function(t) {
                        return e.trigger("edit", t.model)
                    }),
                    this.on("childview:delete", function(t) {
                        return e.trigger("delete", t.model)
                    }),
                    this.on("childview:locate", function(t) {
                        return e.trigger("locate", t.model)
                    }),
                    this.on("childview:applyToAll", function(t) {
                        return e.trigger("applyToAll", t.model)
                    })
            },
            attachHtml: function(e, t, n) {
                return t.model.get("partial") ? (this.ui.partial.append(t.el),
                    this.ui.partialHeader.show()) : this.ui.full.append(t.el)
            },
            viewComparator: function(e, t) {
                var n = Date.parse(e.get("startDate")),
                    i = Date.parse(t.get("startDate")),
                    r = Date.parse(e.get("endDate")),
                    s = Date.parse(t.get("endDate"));
                if (n > i)
                    return 1;
                if (n === i) {
                    if (r > s)
                        return 1;
                    if (r === s)
                        return 0
                }
                return -1
            },
            onRender: function() {
                return this.message = new Oi(this.ui.message),
                    null != this.options.successMessage ? this.message.showSuccess(this.options.successMessage) : null != this.options.errorMessage ? this.message.showError(this.options.errorMessage) : void 0
            },
            serializeData: function() {
                return {
                    canAdd: this.options.canAdd,
                    canEdit: this.options.canEdit,
                    lockLevel: this.options.lockLevel,
                    showActivateRepoMessage: this.options.showActivateRepoMessage,
                    showSaveMessage: this.options.showSaveMessage,
                    showPartialClosuresHeader: this.options.showPartialClosuresHeader
                }
            }
        }),
        Ri = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            mouseenter: "_onMouseEnter",
                            mouseleave: "_onMouseLeave"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".fromNodeClosed": {
                                observe: "isClosed",
                                attributes: [{
                                    observe: "isDisabled",
                                    name: "disabled"
                                }]
                            }
                        }
                    }
                }, {
                    key: "_getNode",
                    value: function() {
                        return this.model.get("node")
                    }
                }, {
                    key: "_onMouseEnter",
                    value: function() {
                        this.model.get("isDisabled") && this.$el.tooltip("show"),
                            this.triggerMethod("closureNodeItem:enter", this._getNode())
                    }
                }, {
                    key: "_onMouseLeave",
                    value: function() {
                        this.model.get("isDisabled") ? this.$el.tooltip("hide") : this.triggerMethod("closureNodeItem:leave", this._getNode())
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this.$el.tooltip("destroy")
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$el.tooltip({
                                title: I18n.t("closures.disable_node_edit"),
                                placement: "right",
                                container: "body",
                                trigger: "manual"
                            }),
                            this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Closures/templates/closure-node-item-view"
                    }
                }]),
                t
        }(a.a.View),
        Di = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "childView",
                    value: function() {
                        return Ri
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "closureNodeItem:enter": "closureNodeItem:enter",
                            "closureNodeItem:leave": "closureNodeItem:leave"
                        }
                    }
                }]),
                t
        }(a.a.CollectionView),
        Li = n(211),
        Pi = {
            pointRadius: 10,
            fillOpacity: .4,
            fillColor: "transparent",
            strokeWidth: 15,
            strokeOpacity: .4,
            strokeColor: "black",
            graphicZIndex: 0
        },
        Ni = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this.options = e,
                            this.mteBindings = {
                                ".mte-message-empty": {
                                    observe: ["startDate", "endDate"],
                                    visible: "_datesNotSet"
                                },
                                "[name=closure_eventId]": {
                                    observe: "eventId",
                                    update: function(e) {
                                        if (g.a.Stickit.getConfiguration(e).update.apply(this, arguments),
                                            this.options.newClosure) {
                                            var t = G.a.selectionRequiredOption(I18n.t("closures.choose_event"));
                                            return e.prepend(t)
                                        }
                                    },
                                    selectOptions: {
                                        collection: "this.eventOptions",
                                        defaultOption: {
                                            label: "None",
                                            value: null
                                        }
                                    }
                                }
                            },
                            this.highlightedNode = null,
                            this.listenTo(this.model, "change:direction", this._renderNodeList)
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            nodeList: ".closure-nodes-region"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            form: "form",
                            formSubmit: "form input[type=submit]",
                            message: ".message",
                            mteTooltip: ".mte-tooltip",
                            permanentTooltip: ".permanent-tooltip"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .save-button": "save",
                            "submit form": "save"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .cancel-button": "editCancelled"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            "closureNodeItem:enter": "_onNodeMouseEnter",
                            "closureNodeItem:leave": "_onNodeMouseLeave"
                        }
                    }
                }, {
                    key: "_onNodeMouseEnter",
                    value: function(e) {
                        this.highlightedNode = e,
                            this._redrawNodesOnTheMap()
                    }
                }, {
                    key: "_onNodeMouseLeave",
                    value: function() {
                        this.highlightedNode = null,
                            this._redrawNodesOnTheMap()
                    }
                }, {
                    key: "_drawNodeClosureMarker",
                    value: function(e) {
                        var t = this._getDrawingContext(),
                            n = t.createIconMarker(e.x, e.y, "closure-node-edit");
                        t.addMarkers([n])
                    }
                }, {
                    key: "_drawOpenedNode",
                    value: function(e) {
                        var t = this._getDrawingContext(),
                            n = e.clone();
                        t.addFeatures([new OL.Feature.Vector(n, {}, Li.b.regularNodeDragPoint)])
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this._drawingContext && (this._drawingContext = W.map.getDrawingContext(),
                                this._drawingContext.moveLayerToTop()),
                            this._drawingContext
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        this._drawingContext && this._drawingContext.destroy(),
                            this._drawingContext = null
                    }
                }, {
                    key: "_renderNodeList",
                    value: function() {
                        var e = this;
                        if (Object(Yn.isFeatureFlagEnabled)(Yn.FEATURE_FLAGS.NODE_CLOSURES)) {
                            var t = this.model.closureNodes,
                                n = new Di({
                                    collection: t
                                });
                            this.showChildView("nodeList", n),
                                t.on("change:isClosed", function() {
                                    e._redrawNodesOnTheMap()
                                }),
                                this._redrawNodesOnTheMap()
                        }
                    }
                }, {
                    key: "_drawHighlightedNodeIfNeeded",
                    value: function() {
                        if (this.highlightedNode) {
                            var e = this._getDrawingContext(),
                                t = this.highlightedNode.geometry.clone();
                            e.addFeatures([new OL.Feature.Vector(t, {}, Pi)])
                        }
                    }
                }, {
                    key: "_redrawNodesOnTheMap",
                    value: function() {
                        var e = this;
                        this._destroyDrawingContext(),
                            this._drawHighlightedNodeIfNeeded(),
                            this.model.closureNodes.forEach(function(t) {
                                var n = t.get("node");
                                t.get("isClosed") ? e._drawNodeClosureMarker(n.geometry) : e._drawOpenedNode(n.geometry)
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._renderNodeList(),
                            this.stickit(this.model, this.bindings),
                            this.options.canEditMTE && this._populateMTEOptions(),
                            this.message = new Oi(this.ui.message),
                            this.ui.mteTooltip.tooltip(),
                            this.ui.permanentTooltip.tooltip()
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "save",
                    value: function(e) {
                        e.preventDefault && e.preventDefault(),
                            this._hideErrors();
                        var t = this.ui.form.get(0).checkValidity();
                        return this.model.validate() && t ? this.trigger("save") : this._showErrors()
                    }
                }, {
                    key: "_datesNotSet",
                    value: function() {
                        return !this.model.get("startDate") || !this.model.get("endDate")
                    }
                }, {
                    key: "_showErrors",
                    value: function() {
                        var e = this;
                        this.ui.formSubmit.click(),
                            Object.keys(this.model.errors).forEach(function(t) {
                                var n = e.model.errors[t];
                                e._showError(t, n)
                            })
                    }
                }, {
                    key: "_showError",
                    value: function(e, t) {
                        var n = (e = this.$el.find("[name=closure_".concat(e, "]"))).closest(".form-group");
                        return n.addClass("has-error"),
                            Le()("<span>").addClass("help-block error-message").text(I18n.t("closures.validation.".concat(t))).appendTo(n.find(".controls"))
                    }
                }, {
                    key: "_hideErrors",
                    value: function() {
                        return this.$el.find(".error-message").remove(),
                            this.$el.find(".form-group").removeClass("has-error")
                    }
                }, {
                    key: "_populateMTEOptions",
                    value: function() {
                        var e = this.options.availableEvents.map(function(e) {
                            return {
                                label: e.getEnglishName() || e.getID(),
                                value: e.getID()
                            }
                        });
                        this.eventOptions = L.a.sortBy(e, function(e) {
                                return e.label.toString().toLowerCase()
                            }),
                            this.stickit(this.model, this.mteBindings)
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        var e = a.a.View.prototype.serializeData.apply(this, arguments);
                        return e.newClosure = this.options.newClosure,
                            e.canEditMTE = this.options.canEditMTE,
                            e
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getProvider: function() {
                                return this.closures[0] ? this.closures[0].provider : null
                            },
                            isNodeClosureEnabled: function() {
                                return Object(Yn.isFeatureFlagEnabled)(Yn.FEATURE_FLAGS.NODE_CLOSURES)
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Closures/templates/edit"
                    }
                }, {
                    key: "behaviors",
                    get: function() {
                        return {
                            dateTimePickers: {
                                behaviorClass: gn.a
                            }
                        }
                    }
                }, {
                    key: "bindings",
                    get: function() {
                        return {
                            "[name=closure_event]": "event",
                            "[name=closure_permanent]": "permanent",
                            "[name=closure_reason]": "reason",
                            "[name=closure_direction]": {
                                observe: "direction",
                                selectOptions: {
                                    collection: [wi.a.A_TO_B, wi.a.B_TO_A, wi.a.TWO_WAY].map(function(e) {
                                        return {
                                            value: e,
                                            label: I18n.t("closures.direction.".concat(e))
                                        }
                                    })
                                }
                            }
                        }
                    }
                }]),
                t
        }(a.a.View),
        xi = n(74),
        Vi = n(61),
        ji = n(122),
        Ui = n(221),
        Fi = n(45);

    function Bi(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function Gi(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? Bi(Object(n), !0).forEach(function(t) {
                s()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Bi(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var Wi = a.a.Object.extend({
            segmentSelection: null,
            initialize: function(e) {
                this.region = e.region,
                    this.pannable = e.pannable,
                    this.listViewConfig = e.listViewConfig,
                    this.editViewConfig = e.editViewConfig,
                    this.allClosures = e.allClosures,
                    this.segmentSelection = e.segmentSelection,
                    this.segments = this.segmentSelection.getSelectedSegments(),
                    this.dataModel = e.dataModel,
                    this._reverseSegments = this.makeReverseSegments()
            },
            makeReverseSegments: function() {
                var e = this;
                return this.segments.reduce(function(t, n) {
                    return e.segmentSelection.isReversed(n) ? Gi({}, t, s()({}, n.getID(), !0)) : t
                }, {})
            },
            showClosures: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = ki.getSharedClosures(this.segments, this._reverseSegments, this.allClosures, this.segmentSelection, this.dataModel),
                    i = Gi({
                        dataModel: this.dataModel,
                        collection: n,
                        showActivateRepoMessage: !this.options.repoActive,
                        showSaveMessage: !this.options.canSaveClosures,
                        lockLevel: this._getClosureLockLevel(),
                        canEdit: this._areClosuresEditable(),
                        canAdd: this.options.canAdd
                    }, this.listViewConfig, {}, t),
                    r = new Ci(i);
                r.on("add", function() {
                        return e.newClosure()
                    }),
                    r.on("edit", function(t) {
                        return e.editClosure(t)
                    }),
                    r.on("delete", function(t) {
                        return e.deleteClosure(t)
                    }),
                    r.on("applyToAll", function(t) {
                        return e.applyClosureToAllSegments(t)
                    }),
                    r.on("locate", function(t) {
                        var n = L.a.head(t.attributes.segments),
                            i = $e.getBoundsCenterLonLat(n.geometry);
                        return e.pannable.panTo(i)
                    }),
                    this._show(r)
            },
            _areClosuresEditable: function() {
                return new ji.SegmentClosuresUseCase(this.segmentSelection.getSelectedSegments()).canEditClosures() && this.options.repoActive && this.options.canSaveClosures
            },
            _getClosureLockLevel: function() {
                var e = 0;
                return this.segmentSelection.getSelectedSegments().forEach(function(t) {
                        var n = t.getAddress();
                        n && n.getCountry() && (e = Math.max(e, t.attributes.lockRank, n.getCountry().allowRoadClosureRank))
                    }),
                    e
            },
            newClosure: function() {
                var e = this,
                    t = this.createSharedClosure();
                this._createEditView(t, {
                    newClosure: !0
                }).on("save", function() {
                    e.saveClosure(t, !0)
                })
            },
            editClosure: function(e) {
                var t = this;
                this._createEditView(e).on("save", function() {
                    t.saveClosure(e, !1)
                })
            },
            _createEditView: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                L.a.defaults(n, {
                        newClosure: !1
                    }),
                    L.a.extend(n, this.editViewConfig),
                    n.model = e,
                    n.availableEvents = this.dataModel.majorTrafficEvents.getObjectArray();
                var i = new Ni(n);
                return i.on("editCancelled", function() {
                        return t.showClosures()
                    }),
                    this._show(i),
                    i
            },
            applyClosureToAllSegments: function(e) {
                var t = Ti.a.applyToAllSegments(e, this.segments, this._reverseSegments, this.dataModel, this.segmentSelection);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.apply_to_all"),
                    successMessage: I18n.t("closures.success.apply_to_all")
                })
            },
            _show: function(e) {
                this.view = e,
                    this.region && this.region.show(this.view)
            },
            deleteClosure: function(e) {
                var t;
                if (t = e.isPresent("reason") ? I18n.t("closures.delete_confirm", {
                        info: e.get("reason")
                    }) : I18n.t("closures.delete_confirm_no_reason"),
                    window.confirm(t)) {
                    var n = Ti.a.delete(e);
                    return this._runAction(n, {
                        loadingMessage: I18n.t("closures.loading.delete"),
                        successMessage: I18n.t("closures.success.delete")
                    })
                }
            },
            saveNewClosure: function(e) {
                var t = Ti.a.add(e);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.add"),
                    successMessage: I18n.t("closures.success.add")
                })
            },
            saveExistingClosure: function(e) {
                var t = Ti.a.update(e);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.update"),
                    successMessage: I18n.t("closures.success.update")
                })
            },
            saveClosure: function(e, t) {
                this._confirmPermanent(e) && (t ? this.saveNewClosure(e) : this.saveExistingClosure(e))
            },
            _confirmPermanent: function(e) {
                if (e.attributes.permanent) {
                    var t = I18n.t("closures.permanent_confirm");
                    return window.confirm(t)
                }
                return !0
            },
            _runAction: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.view.message.showLoading(n.loadingMessage),
                    this._disableControls(),
                    e.setModel(this.dataModel),
                    e.doAction(),
                    n.actions = [e],
                    W.controller.save(n).then(function(i) {
                        var r = !1;
                        return i.unsavedFeatures && (r = !L.a.isEmpty(i.unsavedFeatures.roadClosures)),
                            r ? t._handlePartialSuccess(i.unsavedFeatures.roadClosures, e) : t.showClosures({
                                successMessage: n.successMessage
                            })
                    }).catch(function(n) {
                        if (n instanceof xi.a)
                            return t._onError(n.errors, e);
                        throw n
                    }).finally(function() {
                        return t._enableControls()
                    })
            },
            _enableControls: function() {
                return this._toggleControls(!1)
            },
            _disableControls: function() {
                return this._toggleControls(!0)
            },
            _toggleControls: function(e) {
                this.region && this.region.$el.find("a, .btn, button, input, textarea, select").toggleClass("disabled", e)
            },
            _handlePartialSuccess: function(e, t) {
                this._undoFailedActions(e, t);
                var n = Object.values(e).map(function(e) {
                        return e.errorList
                    }),
                    i = L.a.flatten(n.map(function(e) {
                        return e.map(function(e) {
                            return e.details
                        })
                    })),
                    r = "".concat(I18n.t("closures.partial_error"), ": ").concat(i.join(",\n"));
                return this.showClosures({
                    errorMessage: r
                })
            },
            _undoFailedActions: function(e, t) {
                if (null != t.subActions)
                    for (var n = 0; n < t.subActions.length; n++) {
                        var i = t.subActions[n];
                        if (null != i.subActions)
                            this._undoFailedActions(e, i);
                        else if (null != i.closure) {
                            e[i.closure.getID()] && i.undoAction()
                        }
                    }
            },
            _onError: function(e, t) {
                var n = e[0];
                t.undoAction();
                var i = I18n.t("save.error_types"),
                    r = Number(n.get("code")),
                    s = i[r] && i[r].title || n.get("details");
                return this.view.message.showError(s)
            },
            createSharedClosure: function() {
                var e = this.segments.concat(),
                    t = new Vi.SegmentStreetsUseCase(this.dataModel, this.segmentSelection.getSelectedSegments()).getAddress(),
                    n = {
                        location: null == t || t.isEmpty() ? "" : "".concat(t.getStreetName(), ", ").concat(t.getCityName()),
                        segments: e,
                        reverseSegments: this._reverseSegments
                    },
                    i = new Ui.SegmentsDirectionUseCase(this.dataModel, this.segmentSelection).getDirection();
                return i !== Fi.MixedValue && (n.direction = i),
                    new wi.b(n, {
                        dataModel: this.dataModel,
                        segmentSelection: this.segmentSelection,
                        isNew: !0
                    })
            }
        }),
        Hi = {
            SEGMENT: {
                canEditMTE: !0
            },
            MTE: {
                canEditMTE: !1
            }
        },
        zi = {
            SEGMENT: {
                showPartialClosuresHeader: !0,
                extendedChildViewOptions: {
                    allowApplyToAll: !0,
                    showLocateButton: !1,
                    showEventName: !0,
                    getDescription: function(e) {
                        return null
                    }
                }
            },
            MTE: {
                showPartialClosuresHeader: !1,
                extendedChildViewOptions: {
                    allowApplyToAll: !1,
                    showLocateButton: !0,
                    showEventName: !1,
                    getDescription: function(e) {
                        return e.get("location")
                    }
                }
            }
        },
        qi = n(225),
        Yi = function() {
            function e(t, n, i, r, s) {
                E()(this, e),
                    this._segments = t,
                    this._drawingContext = n,
                    this._driveRenderer = i,
                    this._dataModel = r,
                    this._appPreferences = s,
                    this._turnArrowViewGenerator = new qi.a(this._drawingContext, this._dataModel, this._appPreferences, {
                        includeJunctionTurns: !0
                    }),
                    this._turnArrowViews = [],
                    this._lastHighlightedTurnArrow = null,
                    this._appPreferences.on("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                    this._drawingContext.on("zoomend", this.draw, this)
            }
            return S()(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy(),
                            this._driveRenderer.clear(),
                            this._appPreferences.off("change:spreadTurnArrows change:showTransparentTurnArrows", this.draw, this),
                            this._drawingContext.off("zoomend", this.draw, this),
                            this._destroyTurnArrowViews()
                    }
                }, {
                    key: "draw",
                    value: function() {
                        if (this._drawingContext.clear(),
                            this._driveRenderer.clear(),
                            !(this._segments.length > 1)) {
                            var e = this._segments[0];
                            e.type === At.a.SEGMENT && e.isDrivable() && (this._destroyTurnArrowViews(),
                                this._drawTurnArrowsForSegment(e))
                        }
                    }
                }, {
                    key: "_drawTurnArrowsForSegment",
                    value: function(e) {
                        var t = this;
                        if (this._turnArrowViews = this._turnArrowViewGenerator.generate(e),
                            this._turnArrowViews.forEach(function(e) {
                                e.on("mouseleave", t._onTurnArrowOut, t),
                                    e.on("mouseenter", t._onTurnArrowHover, t),
                                    e.render()
                            }),
                            null !== this._lastHighlightedTurnArrow) {
                            var n = this._turnArrowViews.find(function(e) {
                                return e.getTurnArrow().getTurn().verticesEqual(t._lastHighlightedTurnArrow.getTurn())
                            });
                            void 0 === n ? this._drawSegmentPaths() : n.highlightArrowShowTooltip()
                        } else
                            this._drawSegmentPaths()
                    }
                }, {
                    key: "highlightArrowFor",
                    value: function(e) {
                        var t = this._turnArrowViews.find(function(t) {
                            return t.getTurnArrow().getTurn().verticesEqual(e)
                        });
                        void 0 !== t && t.highlightArrow()
                    }
                }, {
                    key: "outArrowFor",
                    value: function(e) {
                        var t = this._turnArrowViews.find(function(t) {
                            return t.getTurnArrow().getTurn().verticesEqual(e)
                        });
                        void 0 !== t && t.unhighlightArrowHideTooltip()
                    }
                }, {
                    key: "_onTurnArrowHover",
                    value: function(e) {
                        this._lastHighlightedTurnArrow = e.getTurnArrow(),
                            this._driveRenderer.clear(),
                            this._drawSegmentPath(e)
                    }
                }, {
                    key: "_destroyTurnArrowViews",
                    value: function() {
                        var e = this;
                        this._turnArrowViews.forEach(function(t) {
                                t.off("mouseleave", e._onTurnArrowOut, e),
                                    t.off("mouseenter", e._onTurnArrowHover, e),
                                    t.destroy()
                            }),
                            this._turnArrowViews = []
                    }
                }, {
                    key: "_drawSegmentPath",
                    value: function(e) {
                        var t = e.getTurnArrow(),
                            n = t.getSegmentPathGeometry();
                        t.getTurn().getTurnData().isAllowed() ? this._driveRenderer.drawUserDrive(n) : this._driveRenderer.drawDisallowedPath(n)
                    }
                }, {
                    key: "_onTurnArrowOut",
                    value: function() {
                        this._lastHighlightedTurnArrow = null,
                            this._drawSegmentPaths()
                    }
                }, {
                    key: "_drawSegmentPaths",
                    value: function() {
                        var e = this;
                        this._driveRenderer.clear(),
                            this._turnArrowViews.forEach(function(t) {
                                return e._drawSegmentPath(t)
                            })
                    }
                }]),
                e
        }();
    Object.assign(Yi.prototype, g.a.Events);
    var $i = Yi,
        Ki = n(148),
        Ji = n(182),
        Zi = n.n(Ji),
        Qi = n(53),
        Xi = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "triggers",
                    value: function() {
                        return {
                            mouseover: "over",
                            mouseout: "out",
                            click: "click"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.get("toSegment").getAddress(),
                            t = "";
                        return null != e && (t = e.getStreetName()), {
                            streetName: t,
                            isTurnAllowed: this.model.get("turn").getTurnData().isAllowed()
                        }
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "exit-item"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/junction-exit"
                    }
                }]),
                t
        }(a.a.View),
        er = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            list: ".list"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._showExitList = e.showExitList,
                            this._selection = e.segmentSelection,
                            W.editingMediator.get("editingHouseNumbers") || this._createTurnEditor(),
                            this.listenTo(W.editingMediator, "change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this),
                            this._dataModel.getTurnGraph().on(gi.CHANGE_EVENT, this.render, this)
                    }
                }, {
                    key: "_createTurnEditor",
                    value: function() {
                        this._turnEditor = new $i(this._selection.getSelectedSegments(), this.options.map.getDrawingContext(), new Ki.a(this.options.map.bigJunctionPathLayer), this.options.dataModel, W.prefs)
                    }
                }, {
                    key: "_destroyTurnEditor",
                    value: function() {
                        this._turnEditor && (this._turnEditor.destroy(),
                            this._turnEditor = null)
                    }
                }, {
                    key: "_onEditingHouseNumbersChanged",
                    value: function() {
                        W.editingMediator.get("editingHouseNumbers") ? this._destroyTurnEditor() : this._createTurnEditor(),
                            this.render()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyTurnEditor(),
                            this._dataModel.getTurnGraph().off("change", this.render, this)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        var e = this;
                        this._turnEditor && this._turnEditor.draw(),
                            this._showExitList && this.showChildView("list", new a.a.CollectionView({
                                collection: this._createTurnCollection(this._createTurnCollection()),
                                className: "junction-exit-view",
                                childView: Xi,
                                onChildviewOver: function(t) {
                                    e.highlightArrow(t.model.get("turn"))
                                },
                                onChildviewOut: function(t) {
                                    e.outArrow(t.model.get("turn"))
                                },
                                onChildviewClick: function(t) {
                                    e._toggleTurn(t.model.get("turn"))
                                }
                            }))
                    }
                }, {
                    key: "_toggleTurn",
                    value: function(e) {
                        new Zi.a(this._dataModel, e).toggleTurn()
                    }
                }, {
                    key: "highlightArrow",
                    value: function(e) {
                        this._turnEditor.highlightArrowFor(e)
                    }
                }, {
                    key: "outArrow",
                    value: function(e) {
                        this._turnEditor.outArrowFor(e)
                    }
                }, {
                    key: "_createTurnCollection",
                    value: function() {
                        var e = this,
                            t = new Qi.SegmentsBigJunctionUseCase(this._dataModel, this._selection.getSelectedSegments()).getJunctionTurns().map(function(t) {
                                var n = e._dataModel.segments.getObjectById(t.getToVertex().getSegmentID());
                                return new g.a.Model({
                                    turn: t,
                                    toSegment: n
                                })
                            });
                        return new g.a.Collection(t)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return this._showExitList ? "templates/segment/junction-exit-layout" : L.a.noop
                    }
                }]),
                t
        }(a.a.View),
        tr = n(227),
        nr = n(52),
        ir = n(450),
        rr = n.n(ir),
        sr = n(451),
        or = n.n(sr),
        ar = n(452),
        lr = n.n(ar),
        ur = function(e) {
            function t() {
                var e, n;
                return E()(this, t),
                    (n = T()(this, A()(t).apply(this, arguments))).ARROW_POINTS = (e = {
                            0: n._straightArrow.bind(Vn()(n)),
                            45: n._slightRightArrow.bind(Vn()(n)),
                            90: n._rightArrow.bind(Vn()(n)),
                            135: n._hardRightArrow.bind(Vn()(n))
                        },
                        s()(e, -45, n._slightLeftArrow.bind(Vn()(n))),
                        s()(e, -90, n._leftArrow.bind(Vn()(n))),
                        s()(e, -135, n._hardLeftArrow.bind(Vn()(n))),
                        e),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "lane-arrow"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Lanes/templates/lane_arrow"
                    }
                }]),
                S()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".empty-badge": {
                                observe: "angles",
                                onGet: function(e) {
                                    return 0 === e.length
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".uturn": {
                                observe: "angles",
                                onGet: function(e) {
                                    return this._shouldDrawLargeUTurn(e)
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".small-uturn": {
                                observe: "angles",
                                onGet: function(e) {
                                    return this._shouldDrawSmallUTurn(e)
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ":el": {
                                classes: {
                                    "has-small-uturn": {
                                        observe: "angles",
                                        onGet: function(e) {
                                            return this._shouldDrawSmallUTurn(e)
                                        }
                                    },
                                    "right-uturn": {
                                        observe: "angles",
                                        onGet: function(e) {
                                            return this._uTurnIsRight(e)
                                        }
                                    },
                                    "small-arrow": {
                                        onGet: function() {
                                            return this.options.smallArrow
                                        }
                                    },
                                    "override-arrow": {
                                        onGet: function() {
                                            return this.options.isOverride
                                        }
                                    },
                                    "grey-arrow": {
                                        observe: "isComplete",
                                        onGet: function(e) {
                                            return !e && !this.options.smallArrow
                                        }
                                    }
                                },
                                attributes: [{
                                    name: "title",
                                    observe: "title"
                                }]
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            mouseenter: "_onEnter",
                            mouseleave: "_onLeave",
                            click: "_onClick"
                        }
                    }
                }, {
                    key: "_onEnter",
                    value: function() {
                        this.triggerMethod("arrow:enter", this.model.attributes.index)
                    }
                }, {
                    key: "_onLeave",
                    value: function() {
                        this.triggerMethod("arrow:leave", this.model.attributes.index)
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        this.triggerMethod("lanes:arrow:click", this.el)
                    }
                }, {
                    key: "_isComplete",
                    value: function() {
                        return this.model.attributes.isComplete
                    }
                }, {
                    key: "_isAngleDrawable",
                    value: function(e) {
                        return Boolean(this.ARROW_POINTS[e])
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit();
                        var e = this.model.attributes.angles;
                        if (e.length > 0) {
                            var t = rr()(this.el).size(26, 38);
                            this._drawArrows(t, e),
                                this._alignArrows(t, e)
                        }
                    }
                }, {
                    key: "_getUTurn",
                    value: function(e) {
                        return e.filter(function(e) {
                            return Object(nr.isUTurn)(e)
                        })[0]
                    }
                }, {
                    key: "_shouldDrawSmallUTurn",
                    value: function(e) {
                        return e.length > 1 && null != this._getUTurn(e)
                    }
                }, {
                    key: "_shouldDrawLargeUTurn",
                    value: function(e) {
                        return 1 === e.length && Object(nr.isUTurn)(e[0])
                    }
                }, {
                    key: "_uTurnIsRight",
                    value: function(e) {
                        var t = this._getUTurn(e);
                        if (null != t)
                            return t > 0
                    }
                }, {
                    key: "_drawArrows",
                    value: function(e, t) {
                        var n = this;
                        this._shouldDrawLargeUTurn(t) || t.forEach(function(i) {
                            n._isAngleDrawable(i) ? n._drawRegularArrow(e, i, t) : Object(nr.isUTurn)(i) || console.error("Can't draw angle with value ".concat(i))
                        })
                    }
                }, {
                    key: "_drawUTurn",
                    value: function(e, t) {
                        t ? this._drawLeftUTUrn(e) : this._drawRightUTurn(e)
                    }
                }, {
                    key: "_drawRegularArrow",
                    value: function(e, t, n) {
                        var i = this.ARROW_POINTS[t](n),
                            r = i.finalPoint,
                            s = i.bendingPoint,
                            o = this._drawArrowLine(e, s, r);
                        this._drawArrowTip(o)
                    }
                }, {
                    key: "_drawArrowLine",
                    value: function(e, t, n) {
                        return e.polyline(L.a.compact([
                            [13, 30], t, n
                        ])).stroke({
                            width: 3,
                            linecap: "round",
                            linejoin: "round",
                            fill: "transparent"
                        }).addClass("arrow-line").fill("none")
                    }
                }, {
                    key: "_drawArrowTip",
                    value: function(e) {
                        e.marker("end", 2, 2, function(e) {
                            e.polygon("0,0 0,2 2,1").addClass("arrow-tip").stroke({
                                linejoin: "round"
                            })
                        })
                    }
                }, {
                    key: "_alignArrows",
                    value: function(e, t) {
                        var n = 0,
                            i = 0;
                        if (t.some(function(e) {
                                return 0 !== e
                            }) && (t.every(function(e) {
                                return e >= 0
                            }) ? n = -3 : t.every(function(e) {
                                return e <= 0
                            }) && (n = 3)),
                            this.options.smallArrow) {
                            var r = h()(t, 1)[0];
                            if (this.ARROW_POINTS[r])
                                i -= this.ARROW_POINTS[r](t).finalPoint[1] - 4
                        }
                        e.translate(n, i)
                    }
                }, {
                    key: "_straightArrow",
                    value: function() {
                        return {
                            finalPoint: [13, 11],
                            bendingPoint: null
                        }
                    }
                }, {
                    key: "_slightRightArrow",
                    value: function(e) {
                        return {
                            finalPoint: e.includes(0) ? [20, 13] : [21, 11],
                            bendingPoint: [13, 20]
                        }
                    }
                }, {
                    key: "_rightArrow",
                    value: function() {
                        return {
                            finalPoint: [21, 19],
                            bendingPoint: [13, 19]
                        }
                    }
                }, {
                    key: "_hardRightArrow",
                    value: function() {
                        return {
                            finalPoint: [21, 26],
                            bendingPoint: [13, 19]
                        }
                    }
                }, {
                    key: "_slightLeftArrow",
                    value: function(e) {
                        return {
                            finalPoint: e.includes(0) ? [6, 13] : [5, 11],
                            bendingPoint: [13, 20]
                        }
                    }
                }, {
                    key: "_leftArrow",
                    value: function() {
                        return {
                            finalPoint: [5, 19],
                            bendingPoint: [13, 19]
                        }
                    }
                }, {
                    key: "_hardLeftArrow",
                    value: function() {
                        return {
                            finalPoint: [5, 26],
                            bendingPoint: [13, 19]
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            uTurnSmallSvgText: or.a,
                            uTurnSvgText: lr.a
                        }
                    }
                }]),
                t
        }(a.a.View),
        cr = n(453),
        dr = n.n(cr),
        hr = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "turn-lane-checkbox"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "input[type=checkbox]": {
                                observe: "checked",
                                attributes: [{
                                    name: "id",
                                    observe: "uniqueId"
                                }]
                            },
                            label: {
                                attributes: [{
                                    name: "for",
                                    observe: "uniqueId"
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Lanes/templates/turn_lane_checkbox"
                    }
                }]),
                t
        }(a.a.View),
        pr = n(126),
        gr = n.n(pr),
        fr = n(38),
        mr = n.n(fr),
        vr = n(454),
        _r = n.n(vr),
        yr = n(455);

    function br(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function Er(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? br(Object(n), !0).forEach(function(t) {
                s()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : br(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var wr = function(e) {
            function t(e) {
                var n;
                E()(this, t),
                    (n = T()(this, A()(t).apply(this, arguments)))._dataModel = e.dataModel,
                    n._overrideAngleMenu = null;
                var i = n.model.attributes,
                    r = i.laneCount,
                    s = i.checkedIndexes;
                return n.model.attributes.checkboxes = new g.a.Collection(n._getCheckboxModels(r, s)),
                    n.listenTo(n.model.attributes.checkboxes, "change:checked", n._onCheckboxChange),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            mouseenter: this._onMouseEnter,
                            mouseleave: this._onMouseLeave,
                            "click .street-name": "_toggleAngleOverrideMenu",
                            "click .turn-angle-icon": "_toggleAngleOverrideMenu"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            leftTurnLaneArrow: ".turn-angle-icon"
                        }
                    }
                }, {
                    key: "_onMouseEnter",
                    value: function() {
                        var e = this._getExistingTurn();
                        this.trigger("enter", e)
                    }
                }, {
                    key: "_onMouseLeave",
                    value: function() {
                        var e = this._getExistingTurn();
                        this.trigger("leave", e)
                    }
                }, {
                    key: "_toggleAngleOverrideMenu",
                    value: function() {
                        this._supportAngleOverride() && (this._overrideAngleMenu ? this._hideAngleOverrideMenu() : this._showAngleOverrideMenu())
                    }
                }, {
                    key: "_supportAngleOverride",
                    value: function() {
                        return !this._isUTurn() && Object(Yn.isFeatureFlagEnabled)(Yn.FEATURE_FLAGS.LANES_ANGLE_OVERRIDE)
                    }
                }, {
                    key: "_hideAngleOverrideMenu",
                    value: function() {
                        this._overrideAngleMenu && (this._overrideAngleMenu.hide(),
                            this._overrideAngleMenu = null)
                    }
                }, {
                    key: "_showAngleOverrideMenu",
                    value: function() {
                        var e = this,
                            t = this.ui.leftTurnLaneArrow[0],
                            n = null,
                            i = new yr.TurnOverride({
                                model: new g.a.Model({
                                    wazeAngle: this.model.get("angle"),
                                    selectedAngle: this._getEffectiveAngle()
                                }),
                                childViewEvents: {
                                    "option:click": function(t) {
                                        var i = t.model.get("angle");
                                        e._setOverrideAngle(i),
                                            n && n.hide()
                                    }
                                }
                            });
                        (n = new _r.a({
                            view: i,
                            targetElement: t
                        }, {
                            trigger: "manual"
                        })).show(),
                            this._overrideAngleMenu = n
                    }
                }, {
                    key: "_setOverrideAngle",
                    value: function(e) {
                        this.model.get("angle") === e ? this.model.set("angleOverride", null) : this.model.set("angleOverride", e),
                            this.trigger("lanes:change")
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            ":el": {
                                classes: {
                                    "u-turn": "isUTurn"
                                }
                            },
                            ".street-name": "streetName",
                            ".turn-angle-icon": {
                                attributes: [{
                                    name: "class",
                                    observe: ["angle", "angleOverride"],
                                    onGet: function(t, n) {
                                        var i = e._getEffectiveAngle();
                                        return e._hasOverrideAngle() ? "angle-".concat(i, " override") : "angle-".concat(i)
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            checkboxesRegion: ".checkboxes-region",
                            leftRegion: ".left-turn-lanes-part"
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:laneCount": this._onLaneCountChange
                        }
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "turn-lane-edit"
                    }
                }, {
                    key: "_onCheckboxChange",
                    value: function(e) {
                        this._updateCheckedIndexes(),
                            this.trigger("lanes:change")
                    }
                }, {
                    key: "_onLaneCountChange",
                    value: function(e, t) {
                        this.model.attributes.checkboxes.reset(this._getCheckboxModels(t, this._getCheckedIndexes())),
                            this._updateCheckedIndexes()
                    }
                }, {
                    key: "_updateCheckedIndexes",
                    value: function() {
                        this.model.set({
                            checkedIndexes: this._getCheckedIndexes()
                        })
                    }
                }, {
                    key: "_getCheckboxModels",
                    value: function(e, t) {
                        return gt()(Array(e).keys()).map(function(e) {
                            return new g.a.Model({
                                index: e,
                                checked: t.includes(e),
                                uniqueId: L.a.uniqueId("checkbox")
                            })
                        })
                    }
                }, {
                    key: "_getCheckedIndexes",
                    value: function() {
                        return this.model.attributes.checkboxes.filter(function(e) {
                            return e.attributes.checked
                        }).map(function(e) {
                            return e.attributes.index
                        })
                    }
                }, {
                    key: "_hasAngle",
                    value: function() {
                        return null != this._getEffectiveAngle()
                    }
                }, {
                    key: "_hasOverrideAngle",
                    value: function() {
                        return null !== this.model.attributes.angleOverride
                    }
                }, {
                    key: "_getEffectiveAngle",
                    value: function() {
                        return this._hasOverrideAngle() ? this.model.attributes.angleOverride : this.model.attributes.angle
                    }
                }, {
                    key: "_getExistingTurn",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.fromVertexID,
                            n = e.toVertexID;
                        return this._dataModel.getTurnGraph().getTurn(mr.a.fromID(t), mr.a.fromID(n))
                    }
                }, {
                    key: "_isUTurn",
                    value: function() {
                        return this._getExistingTurn().isUturn()
                    }
                }, {
                    key: "_getExistingTurnLaneData",
                    value: function() {
                        return this._getExistingTurn().getTurnData().getLaneData()
                    }
                }, {
                    key: "lanesChanged",
                    value: function() {
                        var e = this._getExistingTurnLaneData(),
                            t = this.getTurnLaneData();
                        return gr.a.hasChanged(e, t)
                    }
                }, {
                    key: "getTurnLaneData",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.checkedIndexes,
                            n = e.angle,
                            i = e.angleOverride,
                            r = null,
                            s = null;
                        return t.length > 0 ? (r = L.a.min(t),
                            s = L.a.max(t),
                            new gr.a(r, s, n, i)) : null
                    }
                }, {
                    key: "getToVertexID",
                    value: function() {
                        return this.model.attributes.toVertexID
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("checkboxesRegion", new a.a.CollectionView({
                                childView: hr,
                                collection: this.model.attributes.checkboxes
                            })),
                            this._isUTurn() && this.ui.leftTurnLaneArrow.tooltip({
                                title: I18n.t("lanes.override.u_turn_tooltip"),
                                placement: "right",
                                container: "body"
                            })
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this.ui.leftTurnLaneArrow.tooltip("destroy")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Lanes/templates/turn_lanes_edit"
                    }
                }], [{
                    key: "createTurnViewModel",
                    value: function(e, t, n, i) {
                        var r = n.getToVertex().getSegmentID(),
                            s = {
                                laneCount: t,
                                streetName: e.segments.getObjectById(r).getAddress().getStreetName(),
                                fromVertexID: n.getFromVertex().getID(),
                                toVertexID: n.getToVertex().getID(),
                                isUTurn: n.isUturn()
                            },
                            o = n.getTurnData().getLaneData();
                        return s = Er({}, s, o ? {
                                angle: o.getArrowAngle(),
                                angleOverride: o.getArrowOverrideAngle(),
                                checkedIndexes: o.getLaneIndexes()
                            } : {
                                angle: i,
                                angleOverride: null,
                                checkedIndexes: []
                            }),
                            new g.a.Model(s)
                    }
                }]),
                t
        }(a.a.View),
        Sr = n(62),
        kr = n.n(Sr),
        Tr = n(204);

    function Ir(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function Ar(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? Ir(Object(n), !0).forEach(function(t) {
                s()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ir(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var Mr = function(e) {
        function t(e) {
            var n;
            E()(this, t);
            var i = e.dataModel,
                r = e.segmentID,
                s = e.direction,
                o = t._createViewModel(i, r, s);
            return (n = T()(this, A()(t).call(this, Ar({}, e, {
                    model: o
                }))))._dataModel = i,
                n
        }
        return O()(t, e),
            S()(t, [{
                key: "modelEvents",
                value: function() {
                    return {
                        change: "_onModelChanged"
                    }
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        "input[name=laneCount]": {
                            observe: "laneCount",
                            onSet: function(e) {
                                return Number(e)
                            },
                            updateModel: function(e, t, n) {
                                return t.target.validity.valid
                            }
                        },
                        ".turns": {
                            observe: "laneCount",
                            visible: !0,
                            visibleFn: G.b
                        },
                        ".apply-button": {
                            attributes: [{
                                name: "disabled",
                                observe: "applyEnabled",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        },
                        ".warning": {
                            observe: "hasCollisions",
                            onGet: function(e) {
                                return e ? I18n.t("lanes.conflicting_lanes") : ""
                            }
                        }
                    }
                }
            }, {
                key: "events",
                value: function() {
                    return {
                        "click .apply-button": "_onApplyClick",
                        "click .cancel-button": "_onCancelClick"
                    }
                }
            }, {
                key: "regions",
                value: function() {
                    return {
                        turnsRegion: ".turns-region"
                    }
                }
            }, {
                key: "childViewEvents",
                value: function() {
                    return {
                        "child:lanes:change": "_onLanesChanged"
                    }
                }
            }, {
                key: "childViewTriggers",
                value: function() {
                    return {
                        "childview:enter": "turn:enter",
                        "childview:leave": "turn:leave"
                    }
                }
            }, {
                key: "_onLanesChanged",
                value: function() {
                    this._updateHasChanged();
                    var e = this.getChildView("turnsRegion"),
                        n = t._calculateLaneValidationAttributes(e.collection.models);
                    this.model.set(n)
                }
            }, {
                key: "_onModelChanged",
                value: function() {
                    this._updateApplyEnabled(),
                        this._updateTurnModelsLanesCount(),
                        this._updateHasChanged()
                }
            }, {
                key: "_updateHasChanged",
                value: function() {
                    this.model.set({
                        hasChanged: this._hasChanges()
                    })
                }
            }, {
                key: "_updateApplyEnabled",
                value: function() {
                    this.model.set({
                        applyEnabled: this._shouldEnableApply()
                    })
                }
            }, {
                key: "_updateTurnModelsLanesCount",
                value: function() {
                    var e = this;
                    this.model.attributes.turns.forEach(function(t) {
                        t.set({
                            laneCount: e.model.attributes.laneCount
                        })
                    })
                }
            }, {
                key: "_shouldEnableApply",
                value: function() {
                    var e = this.model.attributes,
                        t = e.hasGaps,
                        n = e.hasChanged;
                    return !t && n
                }
            }, {
                key: "_onCancelClick",
                value: function() {
                    this.destroy()
                }
            }, {
                key: "_onApplyClick",
                value: function() {
                    this._hasChanges() && (this._applyChanges(),
                        this.destroy())
                }
            }, {
                key: "_collectModifiedTurnLaneDatas",
                value: function() {
                    return this._getChangedLanesTurnEditViews().reduce(function(e, t) {
                        return Ar({}, e, s()({}, t.getToVertexID(), t.getTurnLaneData()))
                    }, {})
                }
            }, {
                key: "_didTurnsChange",
                value: function() {
                    return this._getChangedLanesTurnEditViews().length > 0
                }
            }, {
                key: "_getChangedLanesTurnEditViews",
                value: function() {
                    return this.getChildView("turnsRegion").children.filter(function(e) {
                        return e.lanesChanged()
                    })
                }
            }, {
                key: "_didLaneCountChange",
                value: function() {
                    var e = this.options,
                        t = e.segmentID,
                        n = e.direction,
                        i = this._dataModel.segments.getObjectById(t).getLaneCount(n);
                    return this.model.attributes.laneCount !== i
                }
            }, {
                key: "_hasChanges",
                value: function() {
                    return this._didTurnsChange() || this._didLaneCountChange()
                }
            }, {
                key: "_applyChanges",
                value: function() {
                    var e = this.options,
                        t = e.segmentID,
                        n = e.direction,
                        i = this._dataModel.segments.getObjectById(t),
                        r = {};
                    this._didLaneCountChange() && (r.laneCount = this.model.attributes.laneCount),
                        this._didTurnsChange() && (r.turnLaneDatas = this._collectModifiedTurnLaneDatas()),
                        this._dataModel.actionManager.add(new Tr.a(i, n, r))
                }
            }, {
                key: "_showTurnsView",
                value: function() {
                    this.showChildView("turnsRegion", new a.a.CollectionView({
                        childView: wr,
                        collection: this.model.attributes.turns,
                        childViewOptions: {
                            dataModel: this._dataModel
                        },
                        childViewTriggers: {
                            "lanes:change": "child:lanes:change"
                        }
                    }))
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit(),
                        this._showTurnsView()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes_edit"
                }
            }], [{
                key: "_createViewModel",
                value: function(e, n, i) {
                    var r = e.segments.getObjectById(n),
                        s = r.getLaneCount(i);
                    s = s || 0;
                    var o = nr.getLaneAngleCalculator(e, r, i);
                    o.snapAngles();
                    var a = nr.getOutgoingEnabledTurns(e, r, i).map(function(t) {
                        return wr.createTurnViewModel(e, s, t, o.getSnappedAngle(t.getToVertex()))
                    });
                    return new g.a.Model(Ar({
                        laneCount: s,
                        hasChanged: !1,
                        fromVertexID: i === Sr.SEGMENT_LANE_DIRECTION.FWD ? mr.a.forwardOf(n).getID() : mr.a.reverseOf(n).getID(),
                        turns: new g.a.Collection(a, {
                            comparator: function(e) {
                                var t = e.attributes.angle;
                                return nr.toStandardLaneAngle(t)
                            }
                        })
                    }, t._calculateLaneValidationAttributes(a)))
                }
            }, {
                key: "_calculateLaneValidationAttributes",
                value: function(e) {
                    var n = new dr.a;
                    return e.forEach(function(e) {
                            var t = gr.a.getEffectiveAngle(e.attributes.angle, e.attributes.angleOverride);
                            n.addTurnIndexes(t, e.attributes.checkedIndexes)
                        }),
                        t._lanesValidationAttributes(n)
                }
            }, {
                key: "_lanesValidationAttributes",
                value: function(e) {
                    return {
                        hasGaps: e.hasGaps(),
                        hasCollisions: e.hasCollisions()
                    }
                }
            }]),
            t
    }(a.a.View);

    function Or(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var Cr = function(e) {
            function t(e) {
                var n, i = e.dataModel,
                    r = e.segmentID,
                    o = e.direction;
                E()(this, t),
                    (n = T()(this, A()(t).apply(this, arguments)))._dataModel = i,
                    n._segmentID = r,
                    n._direction = o,
                    n._drawingContext = W.map.getDrawingContext();
                var a = i.segments.getObjectById(r),
                    l = n._getSegmentLanes(a);
                n.model = new g.a.Model(function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? Or(Object(n), !0).forEach(function(t) {
                                s()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Or(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({}, n._getViewModelAttributes(l), {
                        lanes: new g.a.Collection(n._getLaneModels(l))
                    })),
                    n.listenTo(n.model, "change:showLanesNotEnabledBadge", n._onIsEnabledChange);
                var u = i.getTurnGraph();
                return n.listenTo(u, gi.CHANGE_EVENT, n._onTurnGraphChanged),
                    n.listenTo(i.segments, N.ATTR_CHANGED, n._onSegmentChanged),
                    n.listenTo(i.segments, N.CHANGED_ID, n._onSegmentChangedID),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            arrowRegion: ".lane-arrows",
                            editRegion: ".edit-region"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .edit-lane-guidance": "_editLaneGuidance"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            "arrow:enter": "_onArrowEnter",
                            "arrow:leave": "_onArrowLeave"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "turn:enter": "edit:turn:enter",
                            "turn:leave": "edit:turn:leave"
                        }
                    }
                }, {
                    key: "_getTurnsForLaneIndex",
                    value: function(e) {
                        var t = this._dataModel.segments.getObjectById(this._segmentID);
                        return this._getSegmentLanes(t).getTurnsForLane(e)
                    }
                }, {
                    key: "_onArrowEnter",
                    value: function(e) {
                        var t = this;
                        this._getTurnsForLaneIndex(e).forEach(function(e) {
                            return t.triggerMethod("edit:turn:enter", e)
                        })
                    }
                }, {
                    key: "_onArrowLeave",
                    value: function(e) {
                        var t = this;
                        this._getTurnsForLaneIndex(e).forEach(function(e) {
                            return t.triggerMethod("edit:turn:leave", e)
                        })
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".lane-instruction-from .instruction .heading": {
                                observe: "heading",
                                onGet: function(e) {
                                    return I18n.t("lanes.instruction", {
                                        heading: I18n.t("segment.heading")[e]
                                    })
                                }
                            },
                            ".lane-instruction-from .instruction .street-name": {
                                observe: "streetName"
                            },
                            ".lane-edit": {
                                observe: "editable",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".edit-lane-guidance": "editTitle",
                            ".lane-arrows": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "laneCount",
                                onGet: function(e) {
                                    return e > 0
                                }
                            },
                            ".lane-instruction-from .letter-circle": {
                                observe: "direction",
                                onGet: function(e) {
                                    return e === Sr.SEGMENT_LANE_DIRECTION.FWD ? "A" : "B"
                                }
                            },
                            ".lane-instruction-to .letter-circle": {
                                observe: "direction",
                                onGet: function(e) {
                                    return e === Sr.SEGMENT_LANE_DIRECTION.FWD ? "B" : "A"
                                }
                            },
                            ".lanes-not-enabled-badge": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "showLanesNotEnabledBadge"
                            },
                            ".override-notification": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "hasAngleOverride"
                            }
                        }
                    }
                }, {
                    key: "_getEditTitle",
                    value: function(e, t) {
                        return t ? "" : e > 0 ? I18n.t("lanes.edit_lanes") : I18n.t("lanes.add_lanes")
                    }
                }, {
                    key: "_getLaneModels",
                    value: function(e) {
                        return e.getLanes().map(function(t, n) {
                            return new g.a.Model({
                                angles: t.getAngles(),
                                isComplete: e.isComplete(),
                                index: n,
                                title: t.getToSegments().map(function(e) {
                                    return e.getAddress().getStreetName()
                                }).join("\n")
                            })
                        })
                    }
                }, {
                    key: "_lanesEditable",
                    value: function(e) {
                        return e.isEditable()
                    }
                }, {
                    key: "_getViewModelAttributes",
                    value: function(e) {
                        var t = e.getSegment(),
                            n = e.getDirection(),
                            i = e.getLaneCount(),
                            r = e.getNode();
                        return {
                            direction: n,
                            heading: n === Sr.SEGMENT_LANE_DIRECTION.FWD ? t.getFwdHeading() : t.getRevHeading(),
                            streetName: t.getAddress().getStreetName(),
                            laneCount: i,
                            showLanesNotEnabledBadge: !(e.isEnabled() || e.isEmpty()),
                            editable: this._lanesEditable(e),
                            segmentID: t.getID(),
                            editing: !1,
                            editTitle: this._getEditTitle(i, !1),
                            nodeX: null != r ? r.geometry.x : null,
                            nodeY: null != r ? r.geometry.y : null,
                            hasAngleOverride: nr.hasAngleOverrideTurn(this._dataModel, t, n)
                        }
                    }
                }, {
                    key: "_editLaneGuidance",
                    value: function() {
                        var e = this.model.attributes.laneCount;
                        this.model.set({
                                editTitle: this._getEditTitle(e, !0)
                            }),
                            this.showChildView("editRegion", new Mr({
                                dataModel: this._dataModel,
                                segmentID: this.model.attributes.segmentID,
                                direction: this.model.attributes.direction
                            }))
                    }
                }, {
                    key: "_closeEditingLaneGuidance",
                    value: function() {
                        var e = this.model.attributes.laneCount;
                        this.model.set({
                            editTitle: this._getEditTitle(e, !1)
                        })
                    }
                }, {
                    key: "onChildviewDestroy",
                    value: function(e) {
                        e instanceof Mr && this._closeEditingLaneGuidance()
                    }
                }, {
                    key: "_getSegmentLanes",
                    value: function(e) {
                        return kr.a.forSegment(this._dataModel, e, this._direction)
                    }
                }, {
                    key: "_onSegmentChanged",
                    value: function(e) {
                        var t = this,
                            n = e.find(function(e) {
                                return t._isSegmentRelevant(e)
                            });
                        if (null != n) {
                            var i = this._getSegmentLanes(n);
                            this._updateViewModel(i)
                        }
                    }
                }, {
                    key: "_onSegmentChangedID",
                    value: function(e) {
                        var t = e.oldID,
                            n = e.newID;
                        this._segmentID === t && (this._segmentID = n)
                    }
                }, {
                    key: "_isSegmentRelevant",
                    value: function(e) {
                        return e.getID() === this._segmentID
                    }
                }, {
                    key: "_onTurnGraphChanged",
                    value: function(e) {
                        if (null != e && this._isTurnRelevant(e)) {
                            var t = this._dataModel.segments.getObjectById(this._segmentID),
                                n = this._getSegmentLanes(t);
                            this._updateViewModel(n)
                        }
                    }
                }, {
                    key: "_vertexDirectionMatches",
                    value: function(e) {
                        return nr.vertexToLanesDirection(e) === this._direction
                    }
                }, {
                    key: "_isTurnRelevant",
                    value: function(e) {
                        var t = e.getFromVertex();
                        return t.getSegmentID() === this._segmentID && this._vertexDirectionMatches(t)
                    }
                }, {
                    key: "_updateViewModel",
                    value: function(e) {
                        this.model.set(this._getViewModelAttributes(e)),
                            this.model.attributes.lanes.reset(this._getLaneModels(e))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("arrowRegion", new a.a.CollectionView({
                                childView: ur,
                                collection: this.model.attributes.lanes,
                                childViewTriggers: {
                                    "arrow:enter": "arrow:enter",
                                    "arrow:leave": "arrow:leave"
                                }
                            })),
                            this._refreshNotEnabledBadge(),
                            this.$(".waze-tooltip, .waze-lock-tooltip").tooltip({
                                container: "body"
                            })
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._removeNotEnabledBadge()
                    }
                }, {
                    key: "_onIsEnabledChange",
                    value: function() {
                        this._refreshNotEnabledBadge()
                    }
                }, {
                    key: "_refreshNotEnabledBadge",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.nodeX,
                            n = e.nodeY;
                        e.showLanesNotEnabledBadge && null != t && null != n ? this._drawNotEnabledBadge(t, n) : this._removeNotEnabledBadge()
                    }
                }, {
                    key: "_removeNotEnabledBadge",
                    value: function() {
                        this._drawingContext.removeAllMarkers()
                    }
                }, {
                    key: "_drawNotEnabledBadge",
                    value: function(e, t) {
                        this._drawingContext.addMarkers([this._drawingContext.createIconMarker(e, t, "incomplete-lanes-badge")])
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Lanes/templates/direction_lanes"
                    }
                }]),
                t
        }(a.a.View),
        Rr = n(82),
        Dr = n.n(Rr),
        Lr = function(e) {
            function t(e) {
                var n, i = e.dataModel,
                    r = e.segmentId;
                return E()(this, t),
                    (n = T()(this, A()(t).apply(this, arguments)))._segmentId = r,
                    n._dataModel = i,
                    n.listenTo(n._dataModel.segments, N.ATTR_CHANGED, n._onSegmentChanged),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            fwdLanesRegion: ".fwd-lanes",
                            revLanesRegion: ".rev-lanes"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "edit:turn:enter": "edit:turn:enter",
                            "edit:turn:leave": "edit:turn:leave"
                        }
                    }
                }, {
                    key: "_shouldShowFwdLanes",
                    value: function(e) {
                        return new Dr.a(this._dataModel, [e]).supportsFwdLanes()
                    }
                }, {
                    key: "_shouldShowRevLanes",
                    value: function(e) {
                        return new Dr.a(this._dataModel, [e]).supportsRevLanes()
                    }
                }, {
                    key: "_showForwardView",
                    value: function() {
                        var e = this._dataModel.segments.getObjectById(this._segmentId);
                        this._shouldShowFwdLanes(e) && this.showChildView("fwdLanesRegion", this._createDirectionView(e, Sr.SEGMENT_LANE_DIRECTION.FWD))
                    }
                }, {
                    key: "_showReverseView",
                    value: function() {
                        var e = this._dataModel.segments.getObjectById(this._segmentId);
                        this._shouldShowRevLanes(e) && this.showChildView("revLanesRegion", this._createDirectionView(e, Sr.SEGMENT_LANE_DIRECTION.REV))
                    }
                }, {
                    key: "_createDirectionView",
                    value: function(e, t) {
                        return new Cr({
                            dataModel: this._dataModel,
                            segmentID: e.getID(),
                            direction: t
                        })
                    }
                }, {
                    key: "_onSegmentChanged",
                    value: function(e) {
                        var t = this;
                        e.find(function(e) {
                            return e.getID() === t._segmentId
                        }) && this.render()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._showForwardView(),
                            this._showReverseView()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Lanes/templates/segment_lanes"
                    }
                }]),
                t
        }(a.a.View),
        Pr = n(35),
        Nr = n.n(Pr),
        xr = n(127),
        Vr = n(145),
        jr = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.segments,
                    i = void 0 === n ? [] : n,
                    r = t.getRestrictions,
                    s = void 0 === r ? function() {
                        return []
                    } :
                    r;
                E()(this, e),
                    this._segmentSelection = new Vr.SegmentSelection(i),
                    this._segmentIDs = i.map(function(e) {
                        return e.getID()
                    }),
                    this._restrictionsBySegmentID = i.reduce(function(e, t) {
                        return e[t.getID()] = s(t),
                            e
                    }, {})
            }
            return S()(e, [{
                    key: "hasMultipleSegments",
                    value: function() {
                        return Object.keys(this._segmentIDs).length > 1
                    }
                }, {
                    key: "hasTollRestriction",
                    value: function() {
                        var e = this;
                        return this._segmentIDs.some(function(t) {
                            return e.getRestrictions(t).some(function(e) {
                                return e.isTollFreeModality()
                            })
                        })
                    }
                }, {
                    key: "appliesToAllSegments",
                    value: function(e) {
                        var t = this;
                        return this._segmentIDs.every(function(n) {
                            return t.getRestrictions(n).some(function(i) {
                                return t._withCorrectDirection(n, i).equals(e)
                            })
                        })
                    }
                }, {
                    key: "_addRestrictionToSegment",
                    value: function(e, t) {
                        var n = this.getRestrictions(t),
                            i = this._withCorrectDirection(t, e);
                        n.some(function(e) {
                            return e.equals(i)
                        }) || n.push(i)
                    }
                }, {
                    key: "_updateRestrictionInSegment",
                    value: function(e, t, n) {
                        var i = this,
                            r = this.getRestrictions(n),
                            s = r.findIndex(function(t) {
                                return t.equals(i._withCorrectDirection(n, e))
                            }),
                            o = this._withCorrectDirection(n, t);
                        return s > -1 && (r.splice(s, 1, o),
                            !0)
                    }
                }, {
                    key: "addRestriction",
                    value: function(e) {
                        var t = this;
                        this._segmentIDs.forEach(function(n) {
                            t._addRestrictionToSegment(e, n)
                        })
                    }
                }, {
                    key: "updateRestriction",
                    value: function(e, t) {
                        var n = this;
                        this._segmentIDs.forEach(function(i) {
                            n._updateRestrictionInSegment(e, t, i)
                        })
                    }
                }, {
                    key: "deleteRestriction",
                    value: function(e) {
                        this.deleteRestrictionsIf(function(t) {
                            return t.equals(e)
                        })
                    }
                }, {
                    key: "deleteRestrictionsIf",
                    value: function(e) {
                        var t = this;
                        this._segmentIDs.forEach(function(n) {
                            var i = t.getRestrictions(n);
                            t._setRestrictions(n, L.a.reject(i, function(i) {
                                return e(t._withCorrectDirection(n, i))
                            }))
                        })
                    }
                }, {
                    key: "getRestrictions",
                    value: function(e) {
                        return this._restrictionsBySegmentID[e]
                    }
                }, {
                    key: "_setRestrictions",
                    value: function(e, t) {
                        this._restrictionsBySegmentID[e] = t
                    }
                }, {
                    key: "getForwardRestrictions",
                    value: function() {
                        var e, t = this,
                            n = (e = []).concat.apply(e, gt()(this._segmentIDs.map(function(e) {
                                return t._getForwardRestrictions(e)
                            })));
                        return xr.dedupRestrictions(n)
                    }
                }, {
                    key: "getReverseRestrictions",
                    value: function() {
                        var e, t = this,
                            n = (e = []).concat.apply(e, gt()(this._segmentIDs.map(function(e) {
                                return t._getReverseRestrictions(e)
                            })));
                        return xr.dedupRestrictions(n)
                    }
                }, {
                    key: "getBidiRestrictions",
                    value: function() {
                        var e, t = this,
                            n = (e = []).concat.apply(e, gt()(this._segmentIDs.map(function(e) {
                                return t._getBidiRestrictions(e)
                            })));
                        return xr.dedupRestrictions(n)
                    }
                }, {
                    key: "_getForwardRestrictions",
                    value: function(e) {
                        var t = this;
                        return this.getRestrictions(e).map(function(n) {
                            return t._withCorrectDirection(e, n)
                        }).filter(function(e) {
                            return e.isForward()
                        })
                    }
                }, {
                    key: "_getReverseRestrictions",
                    value: function(e) {
                        var t = this;
                        return this.getRestrictions(e).map(function(n) {
                            return t._withCorrectDirection(e, n)
                        }).filter(function(e) {
                            return e.isReverse()
                        })
                    }
                }, {
                    key: "_getBidiRestrictions",
                    value: function(e) {
                        return this.getRestrictions(e).filter(function(e) {
                            return e.isBidi()
                        })
                    }
                }, {
                    key: "_withCorrectDirection",
                    value: function(e, t) {
                        return this._segmentSelection.isReversedById(e) ? t.withReverseDirection() : t
                    }
                }]),
                e
        }(),
        Ur = n(136),
        Fr = n(179),
        Br = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-segment"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".do-create, .do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditRestrictions",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".forward-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasFwdAll",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".forward-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasFwdSome",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".reverse-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasRevAll",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".reverse-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasRevSome",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".bidi-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasBidiAll",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".bidi-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasBidiSome",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            forwardAllListRegion: {
                                el: ".forward-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            forwardSomeListRegion: {
                                el: ".forward-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            },
                            reverseAllListRegion: {
                                el: ".reverse-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            reverseSomeListRegion: {
                                el: ".reverse-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            },
                            bidiAllListRegion: {
                                el: ".bidi-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            bidiSomeListRegion: {
                                el: ".bidi-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .forward-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(Pr.RESTRICTION_SEGMENT_DIRECTION.FWD)
                            },
                            "click .reverse-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(Pr.RESTRICTION_SEGMENT_DIRECTION.REV)
                            },
                            "click .bidi-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(Pr.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            viewHelpers: null,
                            restrictionBuilder: null,
                            canEditRestrictions: !1,
                            subscriptions: {},
                            tollRoadModel: null,
                            supportsLicensePlateNumber: !1
                        };
                        this._viewHelpers = e.viewHelpers,
                            this._restrictionsBuilder = e.restrictionBuilder,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._subscriptions = e.subscriptions,
                            this._supportsLicensePlateNumber = e.supportsLicensePlateNumber;
                        var t = L.a.partition(this._restrictionsBuilder.getForwardRestrictions(), this._appliesToAll.bind(this)),
                            n = h()(t, 2);
                        this._fwdAll = n[0],
                            this._fwdSome = n[1];
                        var i = L.a.partition(this._restrictionsBuilder.getReverseRestrictions(), this._appliesToAll.bind(this)),
                            r = h()(i, 2);
                        this._revAll = r[0],
                            this._revSome = r[1];
                        var s = L.a.partition(this._restrictionsBuilder.getBidiRestrictions(), this._appliesToAll.bind(this)),
                            o = h()(s, 2);
                        this._bidiAll = o[0],
                            this._bidiSome = o[1],
                            this.model = new g.a.Model({
                                canEditRestrictions: this._canEditRestrictions,
                                hasFwdAll: this._fwdAll.length > 0,
                                hasFwdSome: this._fwdSome.length > 0,
                                hasRevAll: this._revAll.length > 0,
                                hasRevSome: this._revSome.length > 0,
                                hasBidiAll: this._bidiAll.length > 0,
                                hasBidiSome: this._bidiSome.length > 0
                            })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            forwardTitle: this._viewHelpers.getDrivingRestrictedTitle(Pr.RESTRICTION_SEGMENT_DIRECTION.FWD),
                            reverseTitle: this._viewHelpers.getDrivingRestrictedTitle(Pr.RESTRICTION_SEGMENT_DIRECTION.REV),
                            bidiTitle: this._viewHelpers.getDrivingRestrictedTitle(Pr.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.$(".waze-tooltip").tooltip(),
                            this.showChildView("forwardAllListRegion", this._createListView(this._fwdAll)),
                            this.showChildView("forwardSomeListRegion", this._createListView(this._fwdSome, !0)),
                            this.showChildView("reverseAllListRegion", this._createListView(this._revAll)),
                            this.showChildView("reverseSomeListRegion", this._createListView(this._revSome, !0)),
                            this.showChildView("bidiAllListRegion", this._createListView(this._bidiAll)),
                            this.showChildView("bidiSomeListRegion", this._createListView(this._bidiSome, !0))
                    }
                }, {
                    key: "_createListView",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        return new Fr.default({
                            restrictions: e,
                            canApplyToAll: t,
                            subscriptions: this._subscriptions,
                            canEditRestrictions: this._canEditRestrictions,
                            supportsLicensePlateNumber: this._supportsLicensePlateNumber
                        })
                    }
                }, {
                    key: "_onCreateRestriction",
                    value: function(e) {
                        this.triggerMethod("restriction:summary:create", {
                            direction: e
                        })
                    }
                }, {
                    key: "onChildviewItemEdit",
                    value: function(e) {
                        this.triggerMethod("restriction:item:edit", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.triggerMethod("restriction:item:delete", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemApplyToAll",
                    value: function(e) {
                        this.triggerMethod("restriction:item:applyToAll", e.getRestriction())
                    }
                }, {
                    key: "_appliesToAll",
                    value: function(e) {
                        return this._restrictionsBuilder.appliesToAllSegments(e)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_driving_segments"
                    }
                }]),
                t
        }(a.a.View),
        Gr = n(169),
        Wr = n.n(Gr),
        Hr = {
            MULTIPLE: 0,
            UNKNOWN: 1,
            ALLOWED: 2,
            NOT_ALLOWED: 3
        };

    function zr(e, t) {
        if (0 === t.length)
            return Hr.UNKNOWN;
        if (t.every(function(t) {
                return e.appliesToAllSegments(t)
            })) {
            if (t.every(function(e) {
                    return e.isAllowed()
                }))
                return Hr.ALLOWED;
            if (t.every(function(e) {
                    return e.isNotAllowed()
                }))
                return Hr.NOT_ALLOWED
        }
        return Hr.MULTIPLE
    }
    var qr = function(e) {
        function t() {
            return E()(this, t),
                T()(this, A()(t).apply(this, arguments))
        }
        return O()(t, e),
            S()(t, [{
                key: "initialize",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                        viewHelpers: null,
                        restrictionBuilder: null
                    };
                    this._restrictionsBuilder = e.restrictionBuilder,
                        this._viewHelpers = e.viewHelpers,
                        this._forwardPickupConstraints = this._getPickupConstraints(this.model.get("forwardConstraint") !== Hr.MULTIPLE),
                        this._reversePickupConstraints = this._getPickupConstraints(this.model.get("reverseConstraint") !== Hr.MULTIPLE)
                }
            }, {
                key: "bindings",
                value: function() {
                    return {
                        ".constraint-select-fwd": {
                            observe: "forwardConstraint",
                            selectOptions: {
                                collection: this._forwardPickupConstraints
                            }
                        },
                        ".constraint-select-rev": {
                            observe: "reverseConstraint",
                            selectOptions: {
                                collection: this._reversePickupConstraints
                            }
                        }
                    }
                }
            }, {
                key: "templateContext",
                value: function() {
                    return {
                        forwardTitle: this._viewHelpers.getPickupTitle(Pr.RESTRICTION_SEGMENT_DIRECTION.FWD),
                        reverseTitle: this._viewHelpers.getPickupTitle(Pr.RESTRICTION_SEGMENT_DIRECTION.REV)
                    }
                }
            }, {
                key: "modelEvents",
                value: function() {
                    return {
                        "change:forwardConstraint": "_onFwdConstraintChange",
                        "change:reverseConstraint": "_onRevConstraintChange"
                    }
                }
            }, {
                key: "_pickupRestrictionForConstraint",
                value: function(e, t) {
                    return t === Hr.UNKNOWN ? null : new Wr.a({
                        direction: e,
                        defaultType: {
                            allowed: t === Hr.ALLOWED
                        }
                    })
                }
            }, {
                key: "_onFwdConstraintChange",
                value: function(e, t) {
                    this._onConstraintChange("forwardConstraint", Pr.RESTRICTION_SEGMENT_DIRECTION.FWD, e, t)
                }
            }, {
                key: "_onRevConstraintChange",
                value: function(e, t) {
                    this._onConstraintChange("reverseConstraint", Pr.RESTRICTION_SEGMENT_DIRECTION.REV, e, t)
                }
            }, {
                key: "_onConstraintChange",
                value: function(e, t, n, i) {
                    t === Pr.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._restrictionsBuilder.deleteRestrictionsIf(function(e) {
                        return e.isForward()
                    }) : t === Pr.RESTRICTION_SEGMENT_DIRECTION.REV && this._restrictionsBuilder.deleteRestrictionsIf(function(e) {
                        return e.isReverse()
                    });
                    var r = this._pickupRestrictionForConstraint(t, i);
                    r && this._restrictionsBuilder.addRestriction(r)
                }
            }, {
                key: "_getPickupConstraints",
                value: function(e) {
                    var t = [{
                        value: Hr.UNKNOWN,
                        label: I18n.t("restrictions.editing.pickup.unknown")
                    }, {
                        value: Hr.ALLOWED,
                        label: I18n.t("restrictions.editing.pickup.allowed")
                    }, {
                        value: Hr.NOT_ALLOWED,
                        label: I18n.t("restrictions.editing.pickup.not_allowed")
                    }];
                    return e || t.push({
                            value: Hr.MULTIPLE,
                            label: I18n.t("restrictions.editing.pickup.multiple"),
                            disabled: !0
                        }),
                        t
                }
            }, {
                key: "onRender",
                value: function() {
                    this.stickit()
                }
            }, {
                key: "template",
                get: function() {
                    return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_pickup"
                }
            }]),
            t
    }(a.a.View);
    var Yr = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-segment"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        var e = {
                            drivingRegion: "#driving-restrictions"
                        };
                        return this.options.enablePickupRestrictions && (e.pickupRegion = "#pickup-restrictions"),
                            e
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            drivingTab: ".restriction-tabs a[href='#driving-restrictions']",
                            pickupTab: ".restriction-tabs a[href='#pickup-restrictions']"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".driving-controls": {
                                observe: "currentTab",
                                onGet: function(e) {
                                    return "driving" === e
                                },
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            enablePickupRestrictions: this.options.enablePickupRestrictions
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e,
                            n = t.drivingRestrictionsBuilder,
                            i = t.pickupRestrictionsBuilder;
                        e = L.a.omit(e, "drivingRestrictionsBuilder", "pickupRestrictionsBuilder"),
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._showRestrictionType = e.showRestrictionType,
                            this._drivingView = new Br(Object.assign({}, e, {
                                restrictionBuilder: n
                            })),
                            this._pickupView = function(e) {
                                var t = zr(e.restrictionBuilder, e.restrictionBuilder.getForwardRestrictions()),
                                    n = zr(e.restrictionBuilder, e.restrictionBuilder.getReverseRestrictions());
                                return new qr(Object.assign({
                                    model: new g.a.Model({
                                        forwardConstraint: t,
                                        reverseConstraint: n
                                    })
                                }, e))
                            }(Object.assign({}, e, {
                                restrictionBuilder: i
                            })),
                            this.model = new g.a.Model({
                                canEditRestrictions: this._canEditRestrictions,
                                editingMultipleSegments: n.hasMultipleSegments(),
                                currentTab: "driving"
                            }),
                            this._tollRoadModel = e.tollRoadModel
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "restriction:summary:create": "restriction:summary:create",
                            "restriction:item:edit": "restriction:item:edit",
                            "restriction:item:delete": "restriction:item:delete"
                        }
                    }
                }, {
                    key: "_showDrivingTab",
                    value: function() {
                        this.ui.drivingTab.tab("show")
                    }
                }, {
                    key: "_showPickupTab",
                    value: function() {
                        this.ui.pickupTab.tab("show")
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-close": "restriction:summary:close"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-apply": "_onApplyChanges",
                            "shown.bs.tab @ui.drivingTab": "_onDrivingTabShown",
                            "shown.bs.tab @ui.pickupTab": "_onPickupTabShown"
                        }
                    }
                }, {
                    key: "_onApplyChanges",
                    value: function() {
                        this.triggerMethod("restriction:summary:apply", {})
                    }
                }, {
                    key: "_onDrivingTabShown",
                    value: function() {
                        this.model.set({
                            currentTab: "driving"
                        })
                    }
                }, {
                    key: "_onPickupTabShown",
                    value: function() {
                        this.model.set({
                            currentTab: "pickup"
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("drivingRegion", this._drivingView),
                            this.options.enablePickupRestrictions && this.showChildView("pickupRegion", this._pickupView),
                            this.stickit(),
                            this.stickit(this._tollRoadModel, this.tollRoadBindings)
                    }
                }, {
                    key: "onChildviewRestrictionItemApplyToAll",
                    value: function(e) {
                        this.triggerMethod("restriction:item:applyToAll", e)
                    }
                }, {
                    key: "onAttach",
                    value: function() {
                        switch (this._showRestrictionType) {
                            case "driving":
                                this._showDrivingTab();
                                break;
                            case "pickup":
                                this._showPickupTab()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_summary_segments"
                    }
                }, {
                    key: "tollRoadBindings",
                    get: function() {
                        return {
                            ".toll-road-tooltip": {
                                observe: "hasTollRestriction",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "[name=tollRoad]": {
                                observe: ["isTollRoad", "isTollRoadMixed"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "hasTollRestriction"
                                }, {
                                    name: "mixed",
                                    observe: "isTollRoadMixed"
                                }]
                            }
                        }
                    }
                }]),
                t
        }(a.a.View),
        $r = n(133),
        Kr = n(125),
        Jr = n(456),
        Zr = n.n(Jr),
        Qr = n(178),
        Xr = n.n(Qr),
        es = n(158),
        ts = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: {
                                el: ".modal-content",
                                regionClass: Kr.DialogContentRegion,
                                onEscapeKeydown: this._onEscapeKeydown.bind(this)
                            }
                        }
                    }
                }, {
                    key: "_onEscapeKeydown",
                    value: function(e) {
                        if (this.getChildView("contentRegion") instanceof Ur.default)
                            return e.preventDefault(),
                                this._showSummaryView(),
                                !1
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e.segmentSelection,
                            n = e.canEditRestrictions,
                            i = t.getFirstSegment();
                        this._dataModel = e.dataModel,
                            this._segments = t.getSelectedSegments(),
                            this._canEditRestrictions = n,
                            this._viewHelpers = new $r.SegmentRestrictionViewHelpers({
                                segment: i,
                                dataModel: this._dataModel
                            }),
                            this._drivingRestrictionsBuilder = new jr({
                                segments: this._segments,
                                getRestrictions: function(e) {
                                    return e.getDrivingRestrictions()
                                }
                            }),
                            this._pickupRestrictionsBuilder = new jr({
                                segments: this._segments,
                                getRestrictions: function(e) {
                                    return e.getPickupRestrictions()
                                }
                            }),
                            this._tollRoadModel = new g.a.Model({
                                isTollRoad: e.isTollRoad,
                                isTollRoadMixed: e.isTollRoadMixed,
                                hasTollRestriction: this._drivingRestrictionsBuilder.hasTollRestriction()
                            }),
                            this._showRestrictionType = e.showRestrictionType
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemEdit",
                    value: function(e) {
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !1
                        })
                    }
                }, {
                    key: "onChildviewRestrictionItemDelete",
                    value: function(e) {
                        this._drivingRestrictionsBuilder.deleteRestriction(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemApplyToAll",
                    value: function(e) {
                        this._drivingRestrictionsBuilder.addRestriction(e),
                            e.isTollFreeModality() && this._tollRoadModel.set({
                                isTollRoad: !1,
                                isTollRoadMixed: !1
                            }),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCancel",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditUpdate",
                    value: function(e, t) {
                        this._drivingRestrictionsBuilder.updateRestriction(e, t),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCreate",
                    value: function(e) {
                        this._drivingRestrictionsBuilder.addRestriction(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryClose",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryCreate",
                    value: function(e) {
                        this._showCreateSegmentsRestrictionView({
                            direction: e.direction
                        })
                    }
                }, {
                    key: "onChildviewRestrictionSummaryApply",
                    value: function() {
                        this.trigger("restriction:summary:apply", {
                                isTollRoad: this._tollRoadModel.attributes.isTollRoad
                            }),
                            this._applyChanges(),
                            this.destroy()
                    }
                }, {
                    key: "_showSummaryView",
                    value: function() {
                        this._tollRoadModel.set({
                            hasTollRestriction: this._drivingRestrictionsBuilder.hasTollRestriction()
                        });
                        var e = new Xr.a;
                        this.showChildView("contentRegion", new Yr({
                            viewHelpers: this._viewHelpers,
                            subscriptions: e.getSupportedSubscriptions(this._segments[0]),
                            drivingRestrictionsBuilder: this._drivingRestrictionsBuilder,
                            pickupRestrictionsBuilder: this._pickupRestrictionsBuilder,
                            canEditRestrictions: this._canEditRestrictions,
                            tollRoadModel: this._tollRoadModel,
                            enablePickupRestrictions: new es.SegmentsRestrictionsUseCase(this._dataModel, this.options.segmentSelection).supportsPickupRestrictions(),
                            showRestrictionType: this._showRestrictionType,
                            supportsLicensePlateNumber: e.segmentsSupportLicensePlateRestrictions(this._segments)
                        }))
                    }
                }, {
                    key: "_showEditView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.restriction,
                            n = e.isNewRestriction,
                            i = void 0 !== n && n,
                            r = new Xr.a;
                        this.showChildView("contentRegion", new Ur.default({
                            restriction: t,
                            isNewRestriction: i,
                            canEditRestrictions: this._canEditRestrictions,
                            canAddTollRestriction: !this._tollRoadModel.attributes.isTollRoad,
                            subscriptions: r.getSupportedSubscriptions(this._segments[0]),
                            editingTitle: this._viewHelpers.getEditingDrivingTitle(t),
                            supportsLicensePlateNumber: r.segmentsSupportLicensePlateRestrictions(this._segments),
                            supportsDaysOfMonthParity: r.segmentsSupportDaysOfMonthParity(this._segments)
                        }))
                    }
                }, {
                    key: "_showCreateSegmentsRestrictionView",
                    value: function() {
                        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).direction,
                            t = void 0 === e ? Pr.RESTRICTION_SEGMENT_DIRECTION.FWD : e,
                            n = new Nr.a({
                                direction: t
                            });
                        this._showEditView({
                            restriction: n,
                            isNewRestriction: !0
                        })
                    }
                }, {
                    key: "_applyChanges",
                    value: function() {
                        var e = this,
                            t = new es.SegmentsRestrictionsUseCase(this._dataModel, this.options.segmentSelection),
                            n = t.isTollRoad(),
                            i = t.isTollRoadMixed(),
                            r = this._tollRoadModel.attributes.isTollRoad,
                            s = this._tollRoadModel.attributes.isTollRoadMixed,
                            o = new Zr.a(this._segments.map(function(o) {
                                var a = {
                                    restrictions: e._drivingRestrictionsBuilder.getRestrictions(o.getID())
                                };
                                return t.supportsPickupRestrictions() && (a.pickupRestrictions = e._pickupRestrictionsBuilder.getRestrictions(o.getID())),
                                    i === s && n === r || (a.fwdToll = r,
                                        a.revToll = r),
                                    new bt.a(o, a)
                            }));
                        this._dataModel.actionManager.add(o)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Restrictions/templates/restrictions_main"
                    }
                }]),
                t
        }(a.a.View),
        ns = n(88),
        is = n(457),
        rs = n(137),
        ss = n(458),
        os = n(235),
        as = n(93),
        ls = n(87),
        us = n(261),
        cs = n(459),
        ds = n(460),
        hs = n(109),
        ps = n(461),
        gs = n(108);

    function fs(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }

    function ms(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? fs(Object(n), !0).forEach(function(t) {
                s()(e, t, n[t])
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : fs(Object(n)).forEach(function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            })
        }
        return e
    }
    var vs = ["highways", "streets", "other_drivable", "non_drivable"],
        _s = {
            highways: _i.HIGHWAY_ROAD_TYPES,
            streets: [_i.ROAD_TYPE.PRIMARY_STREET, _i.ROAD_TYPE.STREET, _i.ROAD_TYPE.ALLEY],
            other_drivable: [_i.ROAD_TYPE.OFF_ROAD, _i.ROAD_TYPE.PARKING_LOT_ROAD, _i.ROAD_TYPE.PRIVATE_ROAD, _i.ROAD_TYPE.FERRY],
            non_drivable: [_i.ROAD_TYPE.RAILROAD, _i.ROAD_TYPE.RUNWAY_TAXIWAY]
        },
        ys = function(e) {
            function t(e) {
                e.dataModel;
                var n, i = e.segmentSelection,
                    r = void 0 === i ? [] : i;
                return E()(this, t),
                    (n = T()(this, A()(t).apply(this, arguments))).selectionManager = n.options.selectionManager,
                    n.segmentSelection = n.options.segmentSelection,
                    n.segmentIDs = r.getSelectedSegments().map(function(e) {
                        return e.getID()
                    }),
                    n._toggleEvents(!0),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "behaviors",
                    value: function() {
                        return {
                            restoreLastTab: {
                                behaviorClass: Cn
                            },
                            accelerators: {
                                behaviorClass: pi.a
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return ms({}, Ie()(A()(t.prototype), "events", this).call(this), {
                            "click .segment .select-entire-street": "selectEntireStreetClicked",
                            "click .segment .select-entire-roundabout": "selectEntireRoundaboutClicked",
                            "click .segment .edit-house-numbers": "editHouseNumbersClicked",
                            "click .segment .edit-restrictions": "editRestrictionsClicked",
                            "click .segment .restriction-count": "editRestrictionTypeClicked",
                            "click .verify-buttons .verify-btn": "verifySpeedButtonClicked",
                            "click .verify-buttons .edit-btn": "editSpeedButtonClicked"
                        })
                    }
                }, {
                    key: "accelerators",
                    value: function() {
                        return {
                            toggleSegmentDirection: "toggleDirection",
                            editSegmentAddress: "editSegmentShortcutClicked",
                            editHouseNumbers: "editHouseNumbersShortcutClicked",
                            editRestrictions: "editRestrictionsShortcutClicked",
                            selectEntireStreet: "selectEntireStreetShortcutClick",
                            increaseSegmentLevel: "increaseSegmentLevel",
                            decreaseSegmentLevel: "decreaseSegmentLevel",
                            editClosures: "editClosures"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            closuresRegion: ".closures",
                            lanesRegion: ".lanes",
                            historyRegion: ".element-history-region",
                            junctionExitListRegion: ".junction-exit-list-region",
                            addressEditRegion: ".address-edit",
                            lockEditRegion: ".lock-edit"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            closuresTab: "a[href='#segment-edit-closures']"
                        }
                    }
                }, {
                    key: "_getRegularRoadTypeOptions",
                    value: function() {
                        var e = vs.map(function(e) {
                                return I18n.t("segment.categories.".concat(e))
                            }),
                            t = vs.reduce(function(e, t) {
                                var n = I18n.t("segment.categories.".concat(t));
                                return ms({}, e, s()({}, n, _s[t].map(function(e) {
                                    return {
                                        label: I18n.t("segment.road_types.".concat(e)),
                                        value: e
                                    }
                                })))
                            }, {
                                opt_labels: e
                            });
                        return this.viewModel.attributes.mixedRoadType && (t[I18n.t("edit.multiple_values")] = [{
                                    label: I18n.t("edit.multiple_values"),
                                    value: "MIXED"
                                }],
                                t.opt_labels.unshift(I18n.t("edit.multiple_values"))),
                            t
                    }
                }, {
                    key: "_getWalkingRoadTypeOptions",
                    value: function() {
                        var e = _i.WALKING_ROAD_TYPES.map(function(e) {
                            return {
                                label: I18n.t("segment.road_types.".concat(e)),
                                value: e
                            }
                        });
                        return this.viewModel.attributes.mixedRoadType && e.push({
                                label: I18n.t("edit.multiple_values"),
                                value: "MIXED"
                            }),
                            e
                    }
                }, {
                    key: "_getRoadTypeOptions",
                    value: function() {
                        var e = _i.NOT_SUPPORTED_ROAD_TYPES.includes(this.viewModel.attributes.roadType),
                            t = this.viewModel.attributes.isWalkingRoadType ? this._getWalkingRoadTypeOptions() : this._getRegularRoadTypeOptions();
                        if (e) {
                            var n = I18n.t("segment.categories.not_supported");
                            t[n] = _i.NOT_SUPPORTED_ROAD_TYPES.map(function(e) {
                                    return {
                                        label: I18n.t("segment.road_types.".concat(e)),
                                        value: e,
                                        disabled: !0
                                    }
                                }),
                                t.opt_labels.unshift(n)
                        }
                        return t
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return ms({}, Ie()(A()(t.prototype), "bindings", this).call(this), {
                            ".segment": {
                                classes: {
                                    roundabout: "isEntireRoundabout"
                                }
                            },
                            ".inconsistent-direction": {
                                observe: "consistentDirection",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity)
                            },
                            ".inconsistent-driving-types": {
                                observe: "consistentDrivability",
                                visible: !0,
                                visibleFn: G.b,
                                onGet: L.a.negate(L.a.identity)
                            },
                            ".segment-details": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: ["segmentErrorTitle", "segmentErrorDescription"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return Boolean(n) || Boolean(i)
                                },
                                classes: {
                                    "junction-box-message": "isInBigJunction"
                                }
                            },
                            ".closures-tab": {
                                classes: {
                                    disabled: {
                                        observe: "isClosuresSupported",
                                        onGet: L.a.negate(L.a.identity)
                                    }
                                }
                            },
                            ".lanes-tab-list-item": {
                                observe: "showLanesTab",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "flex" : "none")
                                }
                            },
                            "select[name=roadType]": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["consistentDrivability", "propertiesEditable"],
                                    onGet: function(e) {
                                        var t = h()(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return !n || !i
                                    }
                                }],
                                observe: "roadType",
                                onGet: function(e) {
                                    return e === Fi.MixedValue ? "MIXED" : e
                                },
                                selectOptions: {
                                    collection: this._getRoadTypeOptions
                                }
                            },
                            "button.select-entire-roundabout": {
                                observe: ["isInRoundabout", "isEntireRoundabout"],
                                visible: !0,
                                visibleFn: G.b,
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                }
                            },
                            "button.select-entire-street": {
                                observe: "showSelectEntireStreetButton",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".edit-house-numbers-btn-wrapper": {
                                observe: "showHouseNumbersButton",
                                visible: !0,
                                visibleFn: G.b,
                                attributes: [{
                                    name: "title",
                                    observe: "houseNumberTitle"
                                }, {
                                    name: "data-original-title",
                                    observe: "houseNumberTitle"
                                }]
                            },
                            "button.edit-house-numbers": {
                                observe: "canEnterHouseNumbersMode",
                                onGet: function(e) {
                                    return e ? I18n.t("edit.segment.actions.edit_house_numbers") : I18n.t("edit.segment.actions.view_house_numbers")
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEnterHouseNumbersMode",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            },
                            ".length-attribute": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "length"
                            },
                            ".length-attribute .value": {
                                observe: "length",
                                onGet: function(e) {
                                    return null != e && z.default.lengthString(e)
                                }
                            },
                            ".routing-road-type-message": ms({}, G.a.contentsAndVisiblity("routingRoadTypeMessage", "shouldShowRoutingRoadTypeMessage"), {
                                updateMethod: "html"
                            }),
                            ".hide-walking-trail": {
                                observe: "isWalkingRoadType",
                                onGet: L.a.negate(L.a.identity),
                                visible: !0,
                                visibleFn: G.b
                            }
                        }, this._checkboxBinding("unpaved", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditUnpaved",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        }), {}, this._checkboxBinding("tunnel", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditTunnel",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        }), {
                            ".headlights-reminder": {
                                observe: "shouldShowHeadlightsReminder",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }, this._checkboxBinding("headlights", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditHeadlightsReminder",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        }), {}, this._checkboxBinding("nearbyHOV", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditNearbyHOV",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        }), {
                            ".beacon-checkbox": {
                                observe: "shouldShowBeacons",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }, this._checkboxBinding("beacons", {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditBeacons",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        }), {
                            ".routing-road-type-select": {
                                observe: "shouldShowRoutingSelect",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "select[name=routingRoadType]": {
                                observe: ["routingRoadType", "routingRoadTypes"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0];
                                    t[1];
                                    return n
                                },
                                onSet: function(e) {
                                    return [e, this.viewModel.attributes.routingRoadTypes]
                                },
                                selectOptions: {
                                    collection: function() {
                                        var t = e.viewModel.get("routingRoadTypes"),
                                            n = [{
                                                label: I18n.t("edit.segment.routing.road_type.prev"),
                                                value: t.prev,
                                                disabled: null === t.prev
                                            }, {
                                                label: I18n.t("edit.segment.routing.road_type.current"),
                                                value: -1
                                            }, {
                                                label: I18n.t("edit.segment.routing.road_type.next"),
                                                value: t.next,
                                                disabled: null === t.next
                                            }];
                                        return e.viewModel.get("routingRoadTypeMixed") && n.unshift({
                                                label: I18n.t("edit.multiple_values"),
                                                value: ""
                                            }),
                                            n
                                    }
                                }
                            },
                            ".toll-road-message": {
                                observe: ["isTollRoad", "isTollRoadMixed"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".mixed-toll-road-message": {
                                observe: "isTollRoadMixed",
                                onGet: function(e) {
                                    return e
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".restriction-editing": {
                                observe: "showRestrictionEditing",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "button.edit-restrictions": {
                                observe: ["allowRestrictionEditing", "restrictionCounts"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n ? i.driving + i.pickup > 0 ? I18n.t("edit.segment.actions.restrictions.edit") : I18n.t("edit.segment.actions.restrictions.add") : I18n.t("edit.segment.actions.restrictions.view")
                                }
                            },
                            ".restriction-list": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving + e.pickup > 0
                                }
                            },
                            "a.restriction-count[data-restriction-type='driving']": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving > 0
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            "a.restriction-count[data-restriction-type='driving'] .number": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.driving
                                }
                            },
                            "a.restriction-count[data-restriction-type='pickup']": {
                                observe: ["restrictionCounts", "supportsPickupRestrictions"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0];
                                    return t[1] && n.pickup > 0
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            "a.restriction-count[data-restriction-type='pickup'] .number": {
                                observe: "restrictionCounts",
                                onGet: function(e) {
                                    return e.pickup
                                }
                            },
                            "input[name='direction']": {
                                observe: ["direction", "directionMixed"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0];
                                    return t[1] ? -1 : n
                                },
                                onSet: function(e) {
                                    return [e, !1]
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditDirection",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            },
                            "input[name='direction'][value='-1'] + label": {
                                observe: "directionMixed",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "input[name='direction'][value='0'] + label": {
                                observe: ["allowNoDirection", "allowNoDirectionMixed"],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n && !i
                                },
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".speed-limits": {
                                observe: "allowSpeedLimit",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }, this._speedBindings("fwd"), {}, this._speedBindings("rev"), {
                            "select[name=level]": {
                                observe: "level",
                                selectOptions: {
                                    collection: function() {
                                        var t = L.a.range(bi.MAX_LEVEL, bi.MIN_LEVEL, -1).map(function(e) {
                                            return {
                                                label: I18n.t("edit.segment.levels")[e] || e,
                                                value: e
                                            }
                                        });
                                        return e.viewModel.attributes.levelMixed && t.unshift({
                                                label: I18n.t("edit.multiple_values"),
                                                value: null
                                            }),
                                            t
                                    }
                                }
                            }
                        })
                    }
                }, {
                    key: "_speedBindings",
                    value: function(e) {
                        var t, n, i = "fwd" === e ? "Fwd" : "Rev";
                        return ms((t = {},
                            s()(t, ".speed-limit-".concat(e), {
                                observe: ["".concat(e, "Direction"), "".concat(e, "DirectionMixed")],
                                onGet: function(e) {
                                    var t = h()(e, 2),
                                        n = t[0],
                                        i = t[1];
                                    return n || i
                                },
                                visible: !0,
                                visibleFn: G.b
                            }),
                            s()(t, "input[name=".concat(e, "MaxSpeed]"), {
                                observe: "".concat(e, "MaxSpeed"),
                                events: ["blur"],
                                onSet: function(e) {
                                    return "" === e ? null : Number(e)
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEdit".concat(i, "MaxSpeed"),
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            }),
                            s()(t, ".speed-limit-".concat(e, " .auto-speed-tooltip"), {
                                observe: "".concat(e, "MaxSpeedUnverified"),
                                visible: !0,
                                visibleFn: G.b
                            }),
                            s()(t, ".speed-limit-".concat(e, " .verify-buttons"), {
                                observe: "canChange".concat(i, "MaxSpeedUnverified"),
                                visible: !0,
                                visibleFn: G.b
                            }),
                            s()(t, ".speed-limit-".concat(e, " .average-speed-camera"), {
                                observe: "shouldShowAverageSpeedCamera",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "inline-block" : "none")
                                },
                                classes: {
                                    locked: {
                                        observe: "canEditAverageSpeedCamera",
                                        onGet: L.a.negate(L.a.identity)
                                    }
                                }
                            }),
                            t), this._checkboxBinding("".concat(e, "SpeedCamera"), {
                            attributes: [{
                                name: "disabled",
                                observe: "canEditAverageSpeedCamera",
                                onGet: L.a.negate(L.a.identity)
                            }]
                        }), (n = {},
                            s()(n, "input[name=".concat(e, "SpeedCamera] + label"), {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditAverageSpeedCamera",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            }),
                            s()(n, ".speed-limit-".concat(e, " .waze-camera-tooltip"), {
                                observe: "canEditAverageSpeedCamera",
                                visible: !0,
                                visibleFn: function(e, t) {
                                    e.css("display", t ? "inline-block" : "none")
                                },
                                onGet: L.a.negate(L.a.identity)
                            }),
                            n))
                    }
                }, {
                    key: "_checkboxBinding",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "".concat(e, "Mixed");
                        return s()({}, "input[name='".concat(e, "']"), ms({
                            observe: [e, n],
                            onGet: function(e) {
                                var t = h()(e, 2),
                                    n = t[0],
                                    i = t[1];
                                return n && !i
                            },
                            onSet: function(e) {
                                return [e, !1]
                            },
                            attributes: [{
                                name: "mixed",
                                observe: n
                            }].concat(gt()(t.attributes || []))
                        }, L.a.without(t, "attributes")))
                    }
                }, {
                    key: "_getSegmentError",
                    value: function() {
                        var e, t = Object(gs.getSegmentError)(this._dataModel, this.segmentSelection);
                        if (null == t)
                            return {};
                        var n = new as.SegmentsPermissionsUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()),
                            i = (e = {},
                                s()(e, gs.SEGMENT_ERROR_TYPE.MULTIPLE, {
                                    title: I18n.t("edit.segment.permissions.multiple.title"),
                                    description: I18n.t("edit.segment.permissions.multiple.description")
                                }),
                                s()(e, gs.SEGMENT_ERROR_TYPE.HAS_CLOSURES, {
                                    title: I18n.t("edit.segment.permissions.has_closures.title"),
                                    description: I18n.t("edit.segment.permissions.has_closures.description")
                                }),
                                s()(e, gs.SEGMENT_ERROR_TYPE.LOCKED_EXCEPT_CLOSURES, {
                                    title: I18n.t("edit.segment.permissions.locked_except_closures.title"),
                                    description: I18n.t("edit.segment.permissions.locked_except_closures.description", {
                                        lockLevel: z.default.formatRank(n.getEffectiveLockRank())
                                    })
                                }),
                                s()(e, gs.SEGMENT_ERROR_TYPE.LOCKED, {
                                    title: I18n.t("edit.segment.permissions.locked.title"),
                                    description: I18n.t("edit.segment.permissions.locked.description", {
                                        lockLevel: z.default.formatRank(n.getEffectiveLockRank())
                                    })
                                }),
                                s()(e, gs.SEGMENT_ERROR_TYPE.SNAPSHOT_MODE, {
                                    title: I18n.t("edit.segment.permissions.snapshot_mode.title"),
                                    description: I18n.t("edit.segment.permissions.snapshot_mode.description")
                                }),
                                s()(e, gs.SEGMENT_ERROR_TYPE.OUTSIDE_AREA, {
                                    title: I18n.t("edit.segment.permissions.area.title"),
                                    description: I18n.t("edit.segment.permissions.area.description")
                                }),
                                s()(e, gs.SEGMENT_ERROR_TYPE.IN_BIG_JUNCTION, {
                                    title: I18n.t("edit.segment.permissions.big_junction.title"),
                                    description: I18n.t("edit.segment.permissions.big_junction.description")
                                }),
                                e);
                        return {
                            segmentErrorTitle: i[t].title,
                            segmentErrorDescription: i[t].description
                        }
                    }
                }, {
                    key: "_getSegmentFlags",
                    value: function() {
                        var e = new Fi.SegmentReducer(this.segmentSelection.getSelectedSegments(), new hs.SegmentDirectionalReader(this.segmentSelection));
                        return {
                            tunnel: e.reduceTunnel(),
                            tunnelMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.tunnel),
                            unpaved: e.reduceUnpaved(),
                            unpavedMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.unpaved),
                            headlights: e.reduceHeadlights(),
                            headlightsMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.headlights),
                            beacons: e.reduceBeacons(),
                            beaconsMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.beacons),
                            nearbyHOV: e.reduceNearbyHOV(),
                            nearbyHOVMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.nearbyHOV),
                            fwdSpeedCamera: e.reduceFwdSpeedCamera(),
                            fwdSpeedCameraMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.fwdSpeedCamera),
                            revSpeedCamera: e.reduceRevSpeedCamera(),
                            revSpeedCameraMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.revSpeedCamera),
                            fwdLanesEnabled: e.reduceFwdLanesEnabled(),
                            fwdLanesEnabledMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.fwdLanesEnabled),
                            revLanesEnabled: e.reduceRevLanesEnabled(),
                            revLanesEnabledMixed: e.isFlagHasMixedValues(bi.SegmentFlagAttributesName.revLanesEnabled)
                        }
                    }
                }, {
                    key: "getFeatureBaseAttributes",
                    value: function() {
                        return new ns.SegmentsBaseAttributesUseCase(this.segmentSelection.getSelectedSegments())
                    }
                }, {
                    key: "featureToViewModel",
                    value: function() {
                        var e = new ls.SegmentsRoadTypeUseCase(this.segmentSelection.getSelectedSegments()),
                            t = new cs.SegmentsRoutingUseCase(this.segmentSelection),
                            n = new Qi.SegmentsBigJunctionUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()),
                            i = new ji.SegmentClosuresUseCase(this.segmentSelection.getSelectedSegments()),
                            r = new us.SegmentsRoundaboutUseCase(this._dataModel, this.segmentSelection),
                            s = new rs.SegmentsHouseNumbersUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()),
                            o = new Ui.SegmentsDirectionUseCase(this._dataModel, this.segmentSelection),
                            a = new ds.SegmentsSpeedUseCase(this._dataModel, this.segmentSelection),
                            l = new es.SegmentsRestrictionsUseCase(this._dataModel, this.segmentSelection),
                            u = new as.SegmentsPermissionsUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()),
                            c = new os.SegmentsLevelUseCase(this.segmentSelection.getSelectedSegments()),
                            d = new ss.SegmentsLengthUseCase(this.segmentSelection.getSelectedSegments()),
                            h = new ns.SegmentsBaseAttributesUseCase(this.segmentSelection.getSelectedSegments()),
                            p = new is.SegmentsFlagsUseCase(this._dataModel, this.segmentSelection),
                            g = e.getRoadType(),
                            f = t.getRoutingRoadType(),
                            m = g === Fi.MixedValue,
                            v = a.getMaxSpeed(yi.DIRECTION.FORWARD),
                            _ = a.getMaxSpeed(yi.DIRECTION.REVERSE);
                        return ms({
                            numSegments: this.segmentSelection.getSegmentCount(),
                            consistentDirection: 0 === this.segmentSelection.getNumberOfReversedSegments() && !this.segmentSelection.hasMultipleConnectedComponents(),
                            consistentDrivability: e.hasConsistentDrivability(),
                            consistentWalkability: e.hasConsistentWalkability(),
                            isInBigJunction: n.isInBigJunction(),
                            isClosuresSupported: i.isClosuresSupported(),
                            isWalkingRoadType: e.isWalkingRoadType(),
                            mixedRoadType: m,
                            roadType: g,
                            isInRoundabout: r.isInRoundabout(),
                            isEntireRoundabout: r.isEntireRoundabout(),
                            showSelectEntireStreetButton: this.shouldShowSelectEntireStreetButton(),
                            showHouseNumbersButton: s.shouldShowHouseNumbersButton(),
                            canEnterHouseNumbersMode: s.canEnterHouseNumbersMode(),
                            canEditUnpaved: p.canEditUnpaved(),
                            canEditTunnel: p.canEditTunnel(),
                            canEditNearbyHOV: p.canEditNearbyHOV(),
                            shouldShowHeadlightsReminder: p.shouldShowHeadlightsReminder(),
                            canEditHeadlightsReminder: p.canEditHeadlightsReminder(),
                            shouldShowBeacons: p.shouldShowBeacons(),
                            canEditBeacons: p.canEditBeacons(),
                            canEditDirection: o.canEditDirection(),
                            canEditFwdMaxSpeed: a.canEditMaxSpeed(yi.DIRECTION.FORWARD),
                            canEditRevMaxSpeed: a.canEditMaxSpeed(yi.DIRECTION.REVERSE),
                            houseNumberTitle: this.getHouseNumberTitle(s),
                            length: d.getLength(),
                            mixedUpdatedBy: h.isUpdatedByMixed(),
                            mixedCreatedBy: h.isCreatedByMixed(),
                            shouldShowRoutingRoadTypeMessage: this._shouldShowRoutingRoadTypeMessage(g, f),
                            routingRoadTypeMessage: this._getRoutingRoadTypeMessage(g, f),
                            shouldShowRoutingSelect: t.canEditRoutingRoadTypes(),
                            routingRoadTypes: t.getAvailableRoutingRoadTypes(),
                            routingRoadType: f || -1,
                            routingRoadTypeMixed: f === Fi.MixedValue,
                            isTollRoad: l.isTollRoad(),
                            isTollRoadMixed: l.isTollRoadMixed(),
                            showRestrictionEditing: l.supportsRestrictions(),
                            allowRestrictionEditing: l.canEditRestrictions(),
                            restrictionCounts: l.getRestrictionCounts(),
                            supportsPickupRestrictions: l.supportsPickupRestrictions(),
                            showLanesTab: this.shouldShowLanesTab(),
                            direction: o.getDirection(),
                            directionMixed: o.getDirection() === Fi.MixedValue,
                            fwdDirection: o.isForward(),
                            revDirection: o.isReverse(),
                            fwdDirectionMixed: o.isForward() === Fi.MixedValue,
                            revDirectionMixed: o.isReverse() === Fi.MixedValue,
                            allowNoDirection: o.allowNoDirection(),
                            allowNoDirectionMixed: o.allowNoDirection() === Fi.MixedValue,
                            allowSpeedLimit: a.allowSpeedLimit(),
                            fwdMaxSpeed: v !== Fi.MixedValue ? z.default.getDisplayUnitValue(v, at.UNIT.KILOMETER, !0) : null,
                            revMaxSpeed: _ !== Fi.MixedValue ? z.default.getDisplayUnitValue(_, at.UNIT.KILOMETER, !0) : null,
                            fwdMaxSpeedUnverified: a.getMaxSpeedUnverified(yi.DIRECTION.FORWARD),
                            revMaxSpeedUnverified: a.getMaxSpeedUnverified(yi.DIRECTION.REVERSE),
                            canChangeFwdMaxSpeedUnverified: a.canChangeMaxSpeedUnverified(yi.DIRECTION.FORWARD),
                            canChangeRevMaxSpeedUnverified: a.canChangeMaxSpeedUnverified(yi.DIRECTION.REVERSE),
                            shouldShowAverageSpeedCamera: a.supportsAverageSpeedCamera(),
                            canEditAverageSpeedCamera: a.canEditAverageSpeedCamera(),
                            rank: u.getRank(),
                            lockRank: u.getLockRank(),
                            lockRankMixed: u.getLockRank() === Fi.MixedValue,
                            allowDefaultRank: u.allowDefaultRank(),
                            level: c.getLevel(),
                            levelMixed: c.getLevel() === Fi.MixedValue
                        }, this._getSegmentFlags(), {}, this._getSegmentError())
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            roadType: function(e, t) {
                                e !== Fi.MixedValue && (t.roadType = e,
                                    t.routingRoadType = null)
                            },
                            routingRoadType: function(e, t) {
                                t.routingRoadType = -1 === e ? null : e
                            },
                            direction: function(e, t) {
                                e >= 0 && (t.fwdDirection = 0 != (1 & e),
                                    t.revDirection = 0 != (2 & e))
                            },
                            fwdMaxSpeed: function(e, t) {
                                t.fwdMaxSpeed = at.default.getOriginalValue(e, at.UNIT.KILOMETER)
                            },
                            revMaxSpeed: function(e, t) {
                                t.revMaxSpeed = at.default.getOriginalValue(e, at.UNIT.KILOMETER)
                            },
                            fwdMaxSpeedUnverified: this.simpleAttribute("fwdMaxSpeedUnverified"),
                            revMaxSpeedUnverified: this.simpleAttribute("revMaxSpeedUnverified"),
                            lockRank: this.simpleAttribute("lockRank"),
                            level: this.simpleAttribute("level"),
                            tunnel: this.simpleAttribute("tunnel"),
                            unpaved: this.simpleAttribute("unpaved"),
                            headlights: this.simpleAttribute("headlights"),
                            beacons: this.simpleAttribute("beacons"),
                            nearbyHOV: this.simpleAttribute("nearbyHOV"),
                            fwdSpeedCamera: this.simpleAttribute("fwdSpeedCamera"),
                            revSpeedCamera: this.simpleAttribute("revSpeedCamera")
                        }
                    }
                }, {
                    key: "getFeature",
                    value: function() {
                        return null
                    }
                }, {
                    key: "_updateObjectsInRepository",
                    value: function(e, t) {
                        new ps.UpdateSegmentsUseCase(this._dataModel.actionManager, this.segmentSelection).updateSegments(t)
                    }
                }, {
                    key: "_getRepositoryObjectsToUpdate",
                    value: function() {
                        var e = this.repository.getByIds(this.segmentIDs),
                            t = L.a.partition(e, function(e) {
                                return null == e
                            }),
                            n = h()(t, 2),
                            i = n[0],
                            r = n[1];
                        return i.length > 0 && console.error("Cannot update a non-existing objects with ids [".concat(this.segmentIDs.join(","), "] and type ").concat(this.repository.objectType)),
                            r
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return ms({}, Ie()(A()(t.prototype), "templateContext", this).call(this), {}, L.a.pick(this.viewModel.attributes, "segmentErrorTitle", "segmentErrorDescription", "numSegments", "length", "mixedUpdatedBy", "mixedCreatedBy"))
                    }
                }, {
                    key: "_shouldShowBigJunctionExits",
                    value: function() {
                        var e = this.options.segmentSelection;
                        return !(e.getSegmentCount() > 1) && new Qi.SegmentsBigJunctionUseCase(this._dataModel, e.getSelectedSegments()).isJunctionEntry()
                    }
                }, {
                    key: "_toggleEvents",
                    value: function(e) {
                        var t = e ? "on" : "off",
                            n = e ? "on" : "un";
                        this._dataModel.roadClosures[t]("change:active", this.renderOnceLater, this),
                            this._dataModel.actionManager.events[n]({
                                hasActions: this.onActionsChanged,
                                noActions: this.onActionsChanged,
                                scope: this
                            })
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._toggleEvents(!1)
                    }
                }, {
                    key: "selectEntireStreetClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this._selectEntireStreet()
                    }
                }, {
                    key: "selectEntireStreetShortcutClick",
                    value: function(e) {
                        this._selectEntireStreet()
                    }
                }, {
                    key: "_selectEntireStreet",
                    value: function() {
                        new Vi.SegmentStreetsUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()).selectEntireStreet(this.options.selectionManager)
                    }
                }, {
                    key: "selectEntireRoundaboutClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this._selectEntireRoundabout()
                    }
                }, {
                    key: "_selectEntireRoundabout",
                    value: function() {
                        new us.SegmentsRoundaboutUseCase(this._dataModel, this.segmentSelection).selectEntireRoundabout(this.options.selectionManager)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).apply(this, arguments),
                            this._renderAndShowChildViews(),
                            this.$(".waze-tooltip, .waze-lock-tooltip").tooltip({
                                container: "body"
                            })
                    }
                }, {
                    key: "_renderAndShowChildViews",
                    value: function() {
                        this._renderClosuresTab(),
                            this._renderLanesTab(),
                            this._renderElementHistory(),
                            this._renderAndShowRepositoryBoundChildViews()
                    }
                }, {
                    key: "_renderAndShowRepositoryBoundChildViews",
                    value: function() {
                        this._renderAddressEdit(),
                            this._renderTurnView(),
                            this._renderLockEdit()
                    }
                }, {
                    key: "_reflectRepositoryChanges",
                    value: function() {
                        Ie()(A()(t.prototype), "_reflectRepositoryChanges", this).call(this),
                            this._renderAndShowRepositoryBoundChildViews()
                    }
                }, {
                    key: "_renderTurnView",
                    value: function() {
                        this._turnView = new er({
                                segmentSelection: this.segmentSelection,
                                map: this.options.map,
                                dataModel: this._dataModel,
                                showExitList: this._shouldShowBigJunctionExits()
                            }),
                            this.showChildView("junctionExitListRegion", this._turnView)
                    }
                }, {
                    key: "_renderElementHistory",
                    value: function() {
                        this.showChildView("historyRegion", new Ht({
                            map: this.options.map,
                            model: this.segmentSelection.getFirstSegment()
                        }))
                    }
                }, {
                    key: "_renderClosuresTab",
                    value: function() {
                        new Wi({
                            region: this.getRegion("closuresRegion"),
                            pannable: W.map.getPannable(),
                            segmentSelection: this.segmentSelection,
                            repoActive: this._dataModel.roadClosures.active,
                            canSaveClosures: !this._dataModel.actionManager.canSave(),
                            canAdd: !0,
                            dataModel: this._dataModel,
                            editViewConfig: Hi.SEGMENT,
                            listViewConfig: zi.SEGMENT
                        }).showClosures()
                    }
                }, {
                    key: "_renderLanesTab",
                    value: function() {
                        var e = new Lr({
                            dataModel: this._dataModel,
                            segmentId: this.segmentSelection.getFirstSegment().getID()
                        });
                        this.showChildView("lanesRegion", e)
                    }
                }, {
                    key: "onChildviewEditTurnEnter",
                    value: function(e) {
                        this._turnView.highlightArrow(e)
                    }
                }, {
                    key: "onChildviewEditTurnLeave",
                    value: function(e) {
                        this._turnView.outArrow(e)
                    }
                }, {
                    key: "_renderAddressEdit",
                    value: function() {
                        var e = this,
                            t = new ns.SegmentsBaseAttributesUseCase(this.segmentSelection.getSelectedSegments()),
                            n = new Vi.SegmentStreetsUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()),
                            i = new Qe.default({
                                getAddress: function() {
                                    return new Vi.SegmentStreetsUseCase(e._dataModel, e.segmentSelection.getSelectedSegments()).getAddress()
                                },
                                dataModel: this._dataModel,
                                features: this.segmentSelection.getSelectedSegments(),
                                editable: t.arePropertiesEditable(),
                                editStreet: !0,
                                streetIDField: "primaryStreetID",
                                editAltStreets: !0,
                                disableEmptyStreet: n.shouldDisableEmptyStreet(),
                                disableEmptyCity: n.shouldDisableEmptyCity(),
                                enableTTS: !0,
                                emptyCityForAltStreets: n.emptyCityForAltStreets()
                            });
                        this.showChildView("addressEditRegion", i)
                    }
                }, {
                    key: "_renderLockEdit",
                    value: function() {
                        var e = new Xe.default({
                            model: this.viewModel
                        });
                        this.showChildView("lockEditRegion", e)
                    }
                }, {
                    key: "shouldShowSelectEntireStreetButton",
                    value: function() {
                        var e = new Vi.SegmentStreetsUseCase(this._dataModel, this.segmentSelection.getSelectedSegments());
                        return e.hasSingleNonEmptyStreet() && !e.isEntireStreetSelected(this.segmentSelection)
                    }
                }, {
                    key: "_maxSpeedChanged",
                    value: function(e, t) {
                        var n = {};
                        n[e] = t,
                            n["".concat(e, "Unverified")] = !1,
                            this.viewModel.set(n)
                    }
                }, {
                    key: "_maxSpeedUnverfiedChanged",
                    value: function(e, t) {
                        var n = "".concat(e, "MaxSpeedUnverified");
                        this.viewModel.set(s()({}, n, t))
                    }
                }, {
                    key: "verifySpeedButtonClicked",
                    value: function(e) {
                        var t = Le()(e.target).parent().data("direction");
                        this._maxSpeedUnverfiedChanged(t, !1),
                            e.preventDefault()
                    }
                }, {
                    key: "editSpeedButtonClicked",
                    value: function(e) {
                        var t = Le()(e.target).parent().data("direction"),
                            n = "".concat(t, "MaxSpeed");
                        this._maxSpeedChanged(n, null),
                            e.preventDefault()
                    }
                }, {
                    key: "_shouldShowRoutingRoadTypeMessage",
                    value: function(e, t) {
                        return t !== Fi.MixedValue && (null !== t && e !== t)
                    }
                }, {
                    key: "_getRoutingRoadTypeMessage",
                    value: function(e, t) {
                        if (!this._shouldShowRoutingRoadTypeMessage(e, t))
                            return "";
                        var n = z.default.contentTag("strong", I18n.t("segment.road_types.".concat(t)));
                        return z.default.safe_t("edit.segment.routing.info", {
                            roadType: n
                        })
                    }
                }, {
                    key: "shouldShowLanesTab",
                    value: function() {
                        var e = this.options.segmentSelection,
                            t = new Dr.a(this._dataModel, e.getSelectedSegments());
                        return t.supportsFwdLanes() || t.supportsRevLanes()
                    }
                }, {
                    key: "getHouseNumberTitle",
                    value: function(e) {
                        return e.shouldDisableHouseNumbersButtonDueToActions() ? I18n.t("segment.house_number_disable_messages.has_changes") : e.shouldDisableHouseNumberDueToEmptyStreet() ? I18n.t("segment.house_number_disable_messages.empty_street") : ""
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        var t = e.map(function(e) {
                            return e.getID()
                        });
                        return L.a.intersection(t, this.segmentIDs).length > 0
                    }
                }, {
                    key: "_onFeatureChangedIDs",
                    value: function(e) {
                        var t = e.oldID,
                            n = e.newID,
                            i = this.segmentIDs.indexOf(t);
                        i > -1 && (this.segmentIDs[i] = n)
                    }
                }, {
                    key: "increaseSegmentLevel",
                    value: function() {
                        var e = new os.SegmentsLevelUseCase(this.segmentSelection.getSelectedSegments()).increaseSegmentLevel();
                        null != e && this.viewModel.set({
                            level: e
                        })
                    }
                }, {
                    key: "decreaseSegmentLevel",
                    value: function() {
                        var e = new os.SegmentsLevelUseCase(this.segmentSelection.getSelectedSegments()).decreaseSegmentLevel();
                        null != e && this.viewModel.set({
                            level: e
                        })
                    }
                }, {
                    key: "toggleDirection",
                    value: function() {
                        if (!this.viewModel.attributes.directionMixed && !this.viewModel.attributes.isInBigJunction && this.viewModel.attributes.propertiesEditable) {
                            var e = (this.viewModel.attributes.direction + 1) % 4;
                            0 === e && e++,
                                this.viewModel.set({
                                    direction: e
                                })
                        }
                    }
                }, {
                    key: "editSegmentShortcutClicked",
                    value: function() {
                        this.getChildView("addressEditRegion").editAddress()
                    }
                }, {
                    key: "editHouseNumbersShortcutClicked",
                    value: function() {
                        new rs.SegmentsHouseNumbersUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()).canEnterHouseNumbersMode() && this.editHouseNumbers()
                    }
                }, {
                    key: "editHouseNumbersClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.editHouseNumbers()
                    }
                }, {
                    key: "editHouseNumbers",
                    value: function() {
                        var e = new Vi.SegmentStreetsUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()).getEntireStreet(this.segmentSelection.getFirstSegment()),
                            t = new rs.SegmentsHouseNumbersUseCase(this._dataModel, this.segmentSelection.getSelectedSegments()).canEditHouseNumbers();
                        this._confirmHouseNumbersClearRedo() && (this._dataModel.actionManager.clear(),
                            new tr.a({
                                model: this._dataModel,
                                map: W.map,
                                editable: t,
                                segments: e
                            }))
                    }
                }, {
                    key: "_confirmHouseNumbersClearRedo",
                    value: function() {
                        return !this._dataModel.actionManager.canRedo() || window.confirm(I18n.t("edit.house_numbers.confirm_clear_redo"))
                    }
                }, {
                    key: "editRestrictionsClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this.editRestrictions()
                    }
                }, {
                    key: "editRestrictionsShortcutClicked",
                    value: function() {
                        this.editRestrictions()
                    }
                }, {
                    key: "editRestrictionTypeClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = e.currentTarget.dataset.restrictionType;
                        this.editRestrictions(e, t)
                    }
                }, {
                    key: "editRestrictions",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "driving",
                            n = this.options.segmentSelection,
                            i = new es.SegmentsRestrictionsUseCase(this._dataModel, n);
                        if (i.supportsRestrictions()) {
                            var r = i.isTollRoad(),
                                s = i.isTollRoadMixed(),
                                o = new ts({
                                    dataModel: this._dataModel,
                                    isTollRoad: r,
                                    isTollRoadMixed: s,
                                    showRestrictionType: t,
                                    segmentSelection: this.segmentSelection,
                                    canEditRestrictions: i.canEditRestrictions()
                                });
                            W.app.layout.getRegion("dialogRegion").show(o)
                        }
                    }
                }, {
                    key: "editClosures",
                    value: function(e) {
                        this.ui.closuresTab.tab("show")
                    }
                }, {
                    key: "onActionsChanged",
                    value: function() {
                        var e = new rs.SegmentsHouseNumbersUseCase(this._dataModel, this.segmentSelection.getSelectedSegments());
                        this.viewModel.set({
                            canEnterHouseNumbersMode: e.canEnterHouseNumbersMode(),
                            houseNumberTitle: this.getHouseNumberTitle(e)
                        }, {
                            fromRepo: !0
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/segment/edit-panel"
                    }
                }]),
                t
        }(qe.default),
        bs = n(213),
        Es = n.n(bs),
        ws = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e)))._venue = n.model.get("venue"),
                    n.viewModel = new g.a.Model({
                        lockedForMerge: n.model.get("lockedForMerge"),
                        venue: n._venue,
                        lockedForLevel: n._isLockedForLevel(),
                        hasPURs: n._venue.hasUpdateRequests(),
                        isNew: n._venue.isNew(),
                        mergeButtonDisabled: n.isMergeButtonDisabled(),
                        isPolygon: n._venue.is2D()
                    }),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .do-merge": "_onDoMergeButtonClick",
                            "click .do-remove": "_onCardRemoveButtonClick",
                            "mouseover .merge-item": "_onCardMouseOver",
                            "mouseleave .merge-item": "_onCardMouseLeave",
                            "click .purs": "_onPURsBadgeClicked"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            mergeClick: "mergeClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".merge-item": {
                                classes: {
                                    disabled: {
                                        observe: "mergeButtonDisabled"
                                    }
                                }
                            },
                            ".lock": {
                                observe: "lockedForLevel",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".purs": {
                                observe: "hasPURs",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".new-badge": {
                                observe: "isNew",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".polygon-icon": {
                                observe: "isPolygon",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".point-icon": {
                                observe: "isPolygon",
                                onGet: L.a.negate(L.a.identity),
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".icon-container": {
                                classes: {
                                    disabled: {
                                        observe: ["hasPURs", "lockedForLevel", "isNew"],
                                        onGet: function(e) {
                                            return e.some(function(e) {
                                                return e
                                            })
                                        }
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            badgeTooltips: ".badge-tooltip"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/landmark-item-view"
                    }
                }]),
                S()(t, [{
                    key: "isMergeButtonDisabled",
                    value: function() {
                        return this.model.get("lockedForMerge") || !this._venue.canMergeTo()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.viewModel, this.bindings()),
                            this.ui.badgeTooltips.tooltip()
                    }
                }, {
                    key: "_onDoMergeButtonClick",
                    value: function() {
                        this.viewModel.get("lockedForMerge") || this.trigger("mergeClick", this._venue)
                    }
                }, {
                    key: "_onCardRemoveButtonClick",
                    value: function() {
                        this.trigger("removeClick", this._venue)
                    }
                }, {
                    key: "_onCardMouseOver",
                    value: function() {
                        this.trigger("cardMouseOver", this._venue)
                    }
                }, {
                    key: "_onCardMouseLeave",
                    value: function() {
                        this.trigger("cardMouseLeave", this._venue)
                    }
                }, {
                    key: "_onPURsBadgeClicked",
                    value: function() {
                        return W.commands.execute("place_updates:list", this.viewModel.get("venue"))
                    }
                }, {
                    key: "_getCategoryClassNames",
                    value: function() {
                        var e = [],
                            t = this._venue.attributes.categories;
                        t.length > 0 && e.push(t[0]);
                        var n = this._venue.getMainCategory();
                        return null != n && e.push(n),
                            L.a.uniq(e).join(" ").toLowerCase()
                    }
                }, {
                    key: "_isLockedForLevel",
                    value: function() {
                        return this._venue.requiresModeration()
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this.ui.badgeTooltips.tooltip("destroy")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this._venue;
                        return {
                            categoryClass: this._getCategoryClassNames(),
                            name: e.attributes.name,
                            createdBy: e.attributes.createdBy,
                            createdOn: e.attributes.createdOn,
                            lockRank: z.default.formatRank(e.attributes.lockRank),
                            pursCount: e.attributes.venueUpdateRequests.length
                        }
                    }
                }]),
                t
        }(a.a.View),
        Ss = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "childView",
                    value: function() {
                        return ws
                    }
                }, {
                    key: "onChildviewMergeClick",
                    value: function(e) {
                        this.trigger("mergeClick", e)
                    }
                }, {
                    key: "onChildviewRemoveClick",
                    value: function(e) {
                        this.trigger("removeClick", e)
                    }
                }, {
                    key: "onChildviewCardMouseOver",
                    value: function(e) {
                        this.trigger("cardMouseOver", e)
                    }
                }, {
                    key: "onChildviewCardMouseLeave",
                    value: function(e) {
                        this.trigger("cardMouseLeave", e)
                    }
                }]),
                t
        }(a.a.CollectionView),
        ks = function(e) {
            function t(e) {
                var n;
                E()(this, t);
                var i = e.observeAttribute || "currentSelection",
                    r = e.model && e.model.get(i) || e.currentSelection || e.optionsList[0];
                return L.a.defaults(e, {
                        model: new g.a.Model(s()({}, i, r))
                    }),
                    (n = T()(this, A()(t).call(this, e))).observeAttribute = i,
                    n.name = i || n._generateRandomName(),
                    n.optionsList = e.optionsList,
                    n.labels = e.labels,
                    n.title = e.title,
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "single-selection ".concat(this.options.style)
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            input: {
                                observe: this.observeAttribute,
                                onGet: function(t) {
                                    return e._optionToValue(t)
                                },
                                onSet: function(t) {
                                    return e._valueToOption(t)
                                }
                            }
                        }
                    }
                }, {
                    key: "defaults",
                    value: function() {
                        return {
                            optionsList: [],
                            labels: null,
                            name: "",
                            title: ""
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        var e = this.options.observeAttribute || "currentSelection";
                        return s()({}, "change:".concat(e), "_onModelChange")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/single_selection_view"
                    }
                }]),
                S()(t, [{
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onModelChange",
                    value: function() {
                        this.trigger("selection:changed", {
                            attribute: this.observeAttribute,
                            selection: this.getSelected()
                        })
                    }
                }, {
                    key: "getSelected",
                    value: function() {
                        return this.model.get(this.observeAttribute)
                    }
                }, {
                    key: "select",
                    value: function(e) {
                        this.model.set(this.observeAttribute, e)
                    }
                }, {
                    key: "_optionToInputId",
                    value: function(e) {
                        var t = (e || "").toString().replace(/[^a-zA-Z0-9]/gi, ""),
                            n = this.optionsList.indexOf(e);
                        return "id_".concat(this.name, "_").concat(t, "_").concat(n)
                    }
                }, {
                    key: "_optionToValue",
                    value: function(e) {
                        return this.optionsList.indexOf(e)
                    }
                }, {
                    key: "_valueToOption",
                    value: function(e) {
                        return this.optionsList[e]
                    }
                }, {
                    key: "_getOptionLabel",
                    value: function(e) {
                        if (this.labels && this.labels.length > 0) {
                            var t = this.optionsList.indexOf(e);
                            return this.labels[t]
                        }
                        return e
                    }
                }, {
                    key: "_generateRandomName",
                    value: function() {
                        return Math.random().toString(16).replace(".", "")
                    }
                }, {
                    key: "_isEmptyOption",
                    value: function(e) {
                        return null === e || "" === e
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            model: this.model,
                            optionToId: this._optionToInputId.bind(this),
                            optionToValue: this._optionToValue.bind(this),
                            getOptionLabel: this._getOptionLabel.bind(this),
                            isEmpty: this._isEmptyOption,
                            options: this.optionsList,
                            name: this.name,
                            title: this.title
                        }
                    }
                }]),
                t
        }(a.a.View),
        Ts = function(e) {
            function t(e) {
                var n;
                E()(this, t);
                var i = (n = T()(this, A()(t).call(this, e))).model.get(n.observeAttribute);
                return Array.isArray(i) || n.model.set(n.observeAttribute, [i]),
                    n.minSelectionCount = e.minSelectionCount || 0,
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            input: {
                                observe: this.observeAttribute,
                                updateModel: "_confirmUpdate",
                                update: function(e, t, n, i) {
                                    e.val(t)
                                },
                                onGet: function(t) {
                                    return t.map(e._optionToValue.bind(e))
                                },
                                onSet: function(t) {
                                    return Array.isArray(t) || (t = null === t ? [] : [t]),
                                        t.map(e._valueToOption.bind(e))
                                }
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/multi_selection_view"
                    }
                }]),
                S()(t, [{
                    key: "_confirmUpdate",
                    value: function(e, t, n) {
                        return !((e && e.length || 0) < this.minSelectionCount) || (Le()(t.currentTarget).prop("checked", !0),
                            !1)
                    }
                }, {
                    key: "select",
                    value: function(e) {
                        var t = this.getSelected();
                        t.push(e),
                            this.setSelection(t)
                    }
                }, {
                    key: "setSelection",
                    value: function(e) {
                        e = L.a.uniq(e),
                            this.model.set(this.observeAttribute, e),
                            this.model.trigger("change:".concat(this.observeAttribute), this.model, e)
                    }
                }]),
                t
        }(ks),
        Is = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).mainAttribute = e.mainAttribute,
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            "input[type=checkbox]": {
                                observe: this.observeAttribute,
                                updateModel: "_confirmUpdate",
                                update: function(e, t, n, i) {
                                    e.val(t)
                                },
                                onGet: function(t) {
                                    return t.map(e._optionToValue.bind(e))
                                },
                                onSet: function(t) {
                                    return Array.isArray(t) || (t = null === t ? [] : [t]),
                                        t.map(e._valueToOption.bind(e))
                                }
                            },
                            "input[type=radio]": {
                                observe: this.mainAttribute,
                                onGet: function(t) {
                                    return e.optionsList.indexOf(t)
                                },
                                onSet: function(t) {
                                    return e.optionsList[t]
                                }
                            }
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        var e, t = this.options.observeAttribute || "currentSelection",
                            n = this.options.mainAttribute;
                        return e = {},
                            s()(e, "change:".concat(t), "_onModelChange"),
                            s()(e, "change:".concat(n), "_onMainChange"),
                            e
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click button": "_onButtonClick"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/main_selection_view"
                    }
                }]),
                S()(t, [{
                    key: "getMainOption",
                    value: function() {
                        return this.model.get(this.mainAttribute)
                    }
                }, {
                    key: "_onMainChange",
                    value: function(e, t) {
                        var n = this.getSelected(); -
                        1 === n.indexOf(t) && (n.push(t),
                            this.setSelection(n))
                    }
                }, {
                    key: "_onModelChange",
                    value: function(e, t) {
                        var n = this.getMainOption();
                        if (-1 === t.indexOf(n))
                            t.length > 0 ? this.model.set(this.mainAttribute, t[0]) : (this.model.set(this.observeAttribute, [""]),
                                this.model.set(this.mainAttribute, ""));
                        else if ("" === n && t.length > 1) {
                            var i = L.a.compact(t);
                            this.model.set(this.observeAttribute, i),
                                this.model.set(this.mainAttribute, i[0])
                        } else
                            "" !== n && t.indexOf("") > -1 && (t = L.a.without(t, ""),
                                this.model.set(this.observeAttribute, t));
                        this.trigger("selection:changed", {
                            attribute: this.observeAttribute,
                            selection: this.getSelected()
                        })
                    }
                }]),
                t
        }(Ts),
        As = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e)))._viewModel = new g.a.Model({
                        isMainVenuePoint: e.isMainVenuePoint,
                        parkingCategoryToolTipMessage: n._getParkingLotCategoryTooltipMessage(e.isMainVenuePoint)
                    }),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "categoryBindings",
                    value: function() {
                        var e;
                        return e = {},
                            s()(e, "input[value=".concat(this._optionToValue(zt.VENUE_PARKING_LOT), "]"), {
                                attributes: [{
                                    name: "disabled",
                                    observe: "isMainVenuePoint"
                                }]
                            }),
                            s()(e, "input[value=".concat(this._optionToValue(zt.VENUE_PARKING_LOT), "] + label"), {
                                attributes: [{
                                    name: "title",
                                    observe: "parkingCategoryToolTipMessage"
                                }]
                            }),
                            e
                    }
                }]),
                S()(t, [{
                    key: "_getParkingLotCategoryTooltipMessage",
                    value: function(e) {
                        return e ? I18n.t("merge_places.parking_point_tooltip") : ""
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).call(this),
                            this.stickit(this._viewModel, this.categoryBindings())
                    }
                }, {
                    key: "_onModelChange",
                    value: function(e, n) {
                        var i = e.previous(this.observeAttribute).indexOf(zt.VENUE_PARKING_LOT) > -1,
                            r = n.indexOf(zt.VENUE_PARKING_LOT) > -1;
                        i ? r && n.length > 1 && (n = L.a.without(n, zt.VENUE_PARKING_LOT),
                                this.model.set(this.observeAttribute, n)) : r && n.length > 1 && this.model.set(this.observeAttribute, [zt.VENUE_PARKING_LOT]),
                            Ie()(A()(t.prototype), "_onModelChange", this).call(this, e, n)
                    }
                }, {
                    key: "_onMainChange",
                    value: function(e, t) {
                        var n = this.getSelected(); -
                        1 === n.indexOf(t) && (t === zt.VENUE_PARKING_LOT || n.indexOf(zt.VENUE_PARKING_LOT) > -1 ? n = [t] : n.push(t),
                            this.setSelection(n))
                    }
                }]),
                t
        }(Is),
        Ms = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).imagesUrls = e.imagesUrls,
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/images_selection_view"
                    }
                }]),
                S()(t, [{
                    key: "_getUrlById",
                    value: function(e) {
                        var t = this.optionsList.indexOf(e);
                        return this.imagesUrls[t]
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return Object.assign(Ie()(A()(t.prototype), "templateContext", this).call(this), {
                            getUrlById: this._getUrlById.bind(this)
                        })
                    }
                }]),
                t
        }(Ts),
        Os = n(104),
        Cs = n.n(Os),
        Rs = {
            NAME: "name",
            ALIASES: "aliases",
            DESCRIPTION: "description",
            LOCK_RANK: "lockRank",
            BRAND: "brand",
            CATEGORIES: "categories",
            EXTERNAL_PROVIDER_IDS: "externalProviderIDs",
            OPENING_HOURS: "openingHours",
            URL: "url",
            PHONE: "phone",
            SERVICES: "services",
            IMAGES: "images"
        },
        Ds = {
            PARKING_TYPE: "parkingType",
            HAS_TBR: "hasTBR",
            CAN_EXIT_WHILE_CLOSED: "canExitWhileClosed",
            COST_TYPE: "costType",
            PAYMENT_TYPE: "paymentType",
            EXTIMATED_NUMBER_OF_SPOTS: "estimatedNumberOfSpots",
            LOT_TYPE: "lotType"
        },
        Ls = Object.values(Rs),
        Ps = Object.values(Ds),
        Ns = "CUSTOM_DESCRIPTION",
        xs = "mainCategory",
        Vs = "address",
        js = function() {
            function e(t) {
                E()(this, e);
                var n = new In.a;
                this._defaultParkingAttributes = n.attributes,
                    this.venues = t.venues,
                    this.mainVenue = t.mainVenue,
                    this.dataModel = t.dataModel,
                    this.model = this._createModel(),
                    this.startModel = this._createModel()
            }
            return S()(e, [{
                    key: "_createModel",
                    value: function() {
                        var e = this,
                            t = {};
                        return [Ns, xs, Vs].concat(gt()(Ls), gt()(Ps)).forEach(function(n) {
                                t[n] = e.getPropertySuggestedValue(n)
                            }),
                            new g.a.Model(t)
                    }
                }, {
                    key: "getModel",
                    value: function() {
                        return this.model
                    }
                }, {
                    key: "getPropertySuggestedValue",
                    value: function(e) {
                        switch (e) {
                            case Ns:
                                return "";
                            case xs:
                                return this._getSuggestedProperties(Rs.CATEGORIES)[0];
                            case Vs:
                                return this._getSuggestedAddress();
                            case Rs.ALIASES:
                                return this._getSuggestedNames();
                            case Rs.CATEGORIES:
                            case Rs.SERVICES:
                                return this._getSuggestedProperties(e);
                            case Rs.EXTERNAL_PROVIDER_IDS:
                                return this._getSuggestedExternalProviderIds();
                            case Rs.OPENING_HOURS:
                                return this._getSuggestedOpeningHours();
                            case Rs.IMAGES:
                                return this._getSuggestedImages();
                            case Ds.HAS_TBR:
                            case Ds.CAN_EXIT_WHILE_CLOSED:
                            case Ds.PARKING_TYPE:
                            case Ds.COST_TYPE:
                            case Ds.PAYMENT_TYPE:
                            case Ds.EXTIMATED_NUMBER_OF_SPOTS:
                            case Ds.LOT_TYPE:
                                return this._getSuggestedParkingProperty(e);
                            default:
                                return this._getSuggestedProperty(e)
                        }
                    }
                }, {
                    key: "_getSuggestedProperty",
                    value: function(e) {
                        return this.mainVenue.attributes[e]
                    }
                }, {
                    key: "_getSuggestedNames",
                    value: function() {
                        var e = this.mainVenue,
                            t = e.attributes.name,
                            n = e.attributes.aliases;
                        return L.a.uniq([t].concat(gt()(n)))
                    }
                }, {
                    key: "_getSuggestedAddress",
                    value: function() {
                        return this.mainVenue.getAddress().format({
                            formatStreet: !0
                        })
                    }
                }, {
                    key: "_getAddressList",
                    value: function() {
                        return L.a.uniq(this.venues.map(function(e) {
                            return e.getAddress().format({
                                formatStreet: !0
                            })
                        }))
                    }
                }, {
                    key: "_getSuggestedParkingProperty",
                    value: function(e) {
                        var t = this.mainVenue,
                            n = t && t.attributes.categoryAttributes;
                        return n && n.PARKING_LOT && n.PARKING_LOT[e] || this._defaultParkingAttributes[e]
                    }
                }, {
                    key: "_getSuggestedProperties",
                    value: function(e) {
                        return Array.isArray(this.mainVenue.attributes[e]) ? L.a.compact(this.mainVenue.attributes[e]) : []
                    }
                }, {
                    key: "_getSuggestedExternalProviderIds",
                    value: function() {
                        return this._getSuggestedProperties("externalProviderIDs").map(function(e) {
                            return "object" === Cs()(e) ? e.id || e.attributes.uuid : e
                        })
                    }
                }, {
                    key: "_getSuggestedImages",
                    value: function() {
                        return L.a.compact(this.mainVenue.attributes.images.filter(function(e) {
                            return e.attributes.approved
                        }).map(function(e) {
                            return e.attributes.id
                        }))
                    }
                }, {
                    key: "getPropertyOptions",
                    value: function(e, t) {
                        switch (e) {
                            case Rs.NAME:
                                return this._getNameList();
                            case Vs:
                                return this._getAddressList();
                            case xs:
                                return this._createPropertyList(Rs.CATEGORIES, !1)[0];
                            case Rs.LOCK_RANK:
                                return this._getLockRankRange();
                            case Rs.EXTERNAL_PROVIDER_IDS:
                                return this._createProviderIdList();
                            case Rs.OPENING_HOURS:
                                return this._getOpeningHours();
                            case Rs.IMAGES:
                                return this._createImagesIdsList();
                            case Rs.SERVICES:
                                return this._createServicesList();
                            default:
                                return this._createPropertyList(e, t)
                        }
                    }
                }, {
                    key: "getParkingPropertyOptions",
                    value: function(e, t) {
                        return this._createParkingPropertyList(e, t)
                    }
                }, {
                    key: "_createPropertyList",
                    value: function(e, t) {
                        var n = [];
                        return this.venues.forEach(function(t) {
                                n.push(t.attributes[e])
                            }),
                            n = L.a.flatten(n),
                            n = L.a.uniq(n),
                            t || (n = L.a.compact(n)),
                            n
                    }
                }, {
                    key: "_createServicesList",
                    value: function() {
                        var e = this._isParkingLot(),
                            t = this._createPropertyList(Rs.SERVICES),
                            n = e ? hn.a.PARKING_LOT : hn.a.GENERAL;
                        return L.a.intersection(t, n)
                    }
                }, {
                    key: "_createParkingPropertyList",
                    value: function(e, t) {
                        var n = this,
                            i = [];
                        return this.venues.forEach(function(t) {
                                var r = t.attributes.categoryAttributes;
                                r && r.PARKING_LOT ? i.push(r.PARKING_LOT[e] || n._defaultParkingAttributes[e]) : t === n.mainVenue && i.push(n._defaultParkingAttributes[e])
                            }),
                            i = L.a.flatten(i),
                            i = L.a.uniq(i),
                            t || (i = L.a.compact(i)),
                            i
                    }
                }, {
                    key: "createImagesList",
                    value: function() {
                        var e = [];
                        return this.venues.forEach(function(t) {
                                e.push(t.attributes.images)
                            }),
                            e = L.a.flatten(e),
                            L.a.compact(L.a.uniq(e))
                    }
                }, {
                    key: "_createImagesIdsList",
                    value: function() {
                        var e = this.createImagesList(Rs.IMAGES).filter(function(e) {
                            return e.attributes.approved
                        });
                        return L.a.compact(e.map(function(e) {
                            return e.attributes.id
                        }))
                    }
                }, {
                    key: "_formatOpeningHours",
                    value: function(e) {
                        return z.default.formatOpeningHour(e.days, e.isAllDay(), e.fromHour, e.toHour)
                    }
                }, {
                    key: "_getOpeningHours",
                    value: function() {
                        var e = this,
                            t = this.venues.map(function(t) {
                                return t.attributes.openingHours.map(e._formatOpeningHours)
                            });
                        return L.a.uniq(L.a.flatten(t))
                    }
                }, {
                    key: "_getSuggestedOpeningHours",
                    value: function() {
                        var e = this.mainVenue.attributes.openingHours.map(this._formatOpeningHours);
                        return L.a.uniq(L.a.flatten(e))
                    }
                }, {
                    key: "_createProviderIdList",
                    value: function() {
                        var e = this.venues.map(function(e) {
                            return e.attributes.externalProviderIDs.map(function(e) {
                                return "object" === Cs()(e) ? e.id || e.attributes.uuid : e
                            })
                        });
                        return L.a.compact(L.a.uniq(L.a.flatten(e)))
                    }
                }, {
                    key: "_getNameList",
                    value: function() {
                        var e = [];
                        return this.venues.forEach(function(t) {
                                e.push(t.attributes.name),
                                    e.push(t.attributes.aliases)
                            }),
                            e = L.a.flatten(e),
                            L.a.uniq(e)
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank();
                        return L.a.range(0, e + 1)
                    }
                }, {
                    key: "_getVenueAttribute",
                    value: function(e) {
                        var t = this.model;
                        switch (e) {
                            case Rs.CATEGORIES:
                                return [t.get(xs)].concat(L.a.without(t.get(Rs.CATEGORIES), t.get(xs)));
                            case Rs.ALIASES:
                                return L.a.without(t.get(Rs.ALIASES), t.get(Rs.NAME));
                            case Rs.DESCRIPTION:
                                return t.get(Rs.DESCRIPTION) === Ns ? t.get(Ns) : t.get(Rs.DESCRIPTION);
                            case Rs.EXTERNAL_PROVIDER_IDS:
                                return this._idsListToObjects(Rs.EXTERNAL_PROVIDER_IDS, t.get(Rs.EXTERNAL_PROVIDER_IDS));
                            case Rs.OPENING_HOURS:
                                return this._openingHoursToObjects(t.get(Rs.OPENING_HOURS));
                            case Rs.IMAGES:
                                return this._idsListToObjects(Rs.IMAGES, t.get(Rs.IMAGES));
                            default:
                                return t.get(e)
                        }
                    }
                }, {
                    key: "_getParkingAttribute",
                    value: function(e) {
                        return this.model.get(e)
                    }
                }, {
                    key: "getAttributeValue",
                    value: function(e) {
                        return Ls.indexOf(e) > -1 ? this._getVenueAttribute(e) : Ps.indexOf(e) > -1 ? this._getParkingAttribute(e) : void 0
                    }
                }, {
                    key: "_isAttributeChanged",
                    value: function(e) {
                        var t = this.model.get(e),
                            n = this.startModel.get(e);
                        switch (e) {
                            case Rs.CATEGORIES:
                                return !L.a.isEqual(n, t) || this.model.get(xs) !== this.startModel.get(xs);
                            default:
                                return !L.a.isEqual(n, t)
                        }
                    }
                }, {
                    key: "_idsListToObjects",
                    value: function(e, t) {
                        var n = this.venues.map(function(n) {
                            return n.attributes[e].map(function(e) {
                                if ("object" === Cs()(e)) {
                                    var n = e.id || e.attributes.uuid;
                                    if (t.indexOf(n) > -1)
                                        return e
                                }
                                return null
                            })
                        });
                        return L.a.uniq(L.a.compact(L.a.flatten(n)))
                    }
                }, {
                    key: "_openingHoursToObjects",
                    value: function(e) {
                        var t = this,
                            n = [];
                        return this.venues.forEach(function(i) {
                                i.attributes.openingHours.length > 0 && i.attributes.openingHours.forEach(function(i) {
                                    e.indexOf(t._formatOpeningHours(i)) > -1 && n.push(i)
                                })
                            }),
                            n = L.a.flatten(n),
                            n = L.a.uniqBy(n, function(e) {
                                return t._formatOpeningHours(e)
                            })
                    }
                }, {
                    key: "_getAddressByAddressString",
                    value: function(e) {
                        return this.venues.map(function(e) {
                            return e.getAddress()
                        }).filter(function(t) {
                            return t.format({
                                formatStreet: !0
                            }) === e
                        })[0]
                    }
                }, {
                    key: "getNewAttributes",
                    value: function() {
                        var e = this,
                            t = {};
                        if ((Ls.forEach(function(n) {
                                    e._isAttributeChanged(n) && (t[n] = e.getAttributeValue(n))
                                }),
                                this._isParkingLot()) && Ps.some(function(t) {
                                return e._isAttributeChanged(t)
                            })) {
                            var n = {};
                            Ps.forEach(function(t) {
                                    n[t] = e.getAttributeValue(t)
                                }),
                                t.categoryAttributes = s()({}, zt.VENUE_PARKING_LOT, n)
                        }
                        return !t.brand || this._isGasStation() || this._isParkingLot() || delete t.brand,
                            this._handleAddressChange(t),
                            t.id = this.mainVenue.attributes.id,
                            t
                    }
                }, {
                    key: "_isParkingLot",
                    value: function() {
                        return this.getAttributeValue(Rs.CATEGORIES)[0] === zt.VENUE_PARKING_LOT
                    }
                }, {
                    key: "_isGasStation",
                    value: function() {
                        return this.getAttributeValue(Rs.CATEGORIES).includes(zt.VENUE_GAS_STATION)
                    }
                }, {
                    key: "_getSupportedBrands",
                    value: function() {
                        var e = [];
                        return this._isGasStation() && (e = this.dataModel.getGasStationBrands()),
                            this._isParkingLot() && (e = this.dataModel.getParkingLotBrands()),
                            e
                    }
                }, {
                    key: "isBrandValid",
                    value: function() {
                        var e = this.getAttributeValue(Rs.BRAND),
                            t = this._getSupportedBrands();
                        return !e || t.includes(e)
                    }
                }, {
                    key: "_handleAddressChange",
                    value: function(e) {
                        var t = this.model.get(Vs),
                            n = this.startModel.get(Vs);
                        if (t !== n) {
                            var i = this._getAddressByAddressString(t),
                                r = this._getAddressByAddressString(n);
                            i.getStreet() !== r.getStreet() && (e.streetID = i.getStreet() ? i.getStreet().getID() : 0),
                                i.getHouseNumber() !== r.getHouseNumber() && (e.houseNumber = i.getHouseNumber())
                        }
                    }
                }, {
                    key: "getSourceVenues",
                    value: function() {
                        return L.a.without(this.venues, this.mainVenue)
                    }
                }, {
                    key: "getTargetVenue",
                    value: function() {
                        return this.mainVenue
                    }
                }]),
                e
        }(),
        Us = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).model.set(Ns, ""),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "bindings",
                    value: function() {
                        return L.a.extend(Ie()(A()(t.prototype), "bindings", this).call(this), {
                            textarea: Ns,
                            ".text-container": {
                                observe: this.observeAttribute,
                                visible: function(e) {
                                    return e === Ns
                                }
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/description_selection_view"
                    }
                }]),
                S()(t, [{
                    key: "_optionToValue",
                    value: function(e) {
                        return e === Ns ? e : this.optionsList.indexOf(e)
                    }
                }, {
                    key: "_valueToOption",
                    value: function(e) {
                        return e === Ns ? e : this.optionsList[e]
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return Object.assign(Ie()(A()(t.prototype), "templateContext", this).call(this), {
                            CUSTOM_DESCRIPTION: Ns
                        })
                    }
                }]),
                t
        }(ks),
        Fs = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).selectionOptions = e,
                    n.model = new g.a.Model({
                        loading: !0
                    }),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            externalProviders: ".selection-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".loader": {
                                observe: "loading",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/external_providers_view"
                    }
                }]),
                S()(t, [{
                    key: "_loadExternalProvidersData",
                    value: function() {
                        var e = this;
                        this.externalProviders = this.selectionOptions.optionsList.map(function(e) {
                            return new ai.a({
                                uuid: e
                            })
                        });
                        var t = this.externalProviders.map(function(e) {
                            return Object(ti.populateExternalProviderDetails)(e)
                        });
                        Promise.all(t).finally(function() {
                            e._onExternalProvidersLoaded()
                        })
                    }
                }, {
                    key: "_onExternalProvidersLoaded",
                    value: function() {
                        this.model.set("loading", !1),
                            this._showSelectionView()
                    }
                }, {
                    key: "_showSelectionView",
                    value: function() {
                        this.selectionOptions.labels = this.externalProviders.map(function(e) {
                                return e.get("name")
                            }),
                            this.showChildView("externalProviders", new Ts(this.selectionOptions))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._loadExternalProvidersData()
                    }
                }]),
                t
        }(a.a.View),
        Bs = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    -1 === (n = T()(this, A()(t).call(this, e))).optionsList.indexOf("") && (n.minSelectionCount = 1),
                    n
            }
            return O()(t, e),
                t
        }(Is),
        Gs = n(462);

    function Ws(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var Hs = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "merge-landmark-view"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-close": "_onCloseClicked",
                            "click .do-apply": "_onApplyClicked"
                        }
                    }
                }, {
                    key: "childViewEvents",
                    value: function() {
                        return {
                            "selection:changed": "_onSelectionChanged"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        var e = this;
                        return {
                            ".parking-attributes": {
                                observe: Rs.CATEGORIES,
                                visible: function(e) {
                                    return e.indexOf(zt.VENUE_PARKING_LOT) > -1
                                }
                            },
                            ".parking-message": {
                                observe: Rs.CATEGORIES,
                                visible: function(t) {
                                    return e._hasParkingLot() && -1 === t.indexOf(zt.VENUE_PARKING_LOT)
                                }
                            },
                            ".brand-region": {
                                observe: Rs.CATEGORIES,
                                visible: function(e) {
                                    return e.indexOf(zt.VENUE_GAS_STATION) > -1 || e.indexOf(zt.VENUE_PARKING_LOT) > -1
                                }
                            },
                            ".brand-message": {
                                observe: Rs.CATEGORIES,
                                visible: function(t) {
                                    return e._hasGasStation() && -1 === t.indexOf(zt.VENUE_GAS_STATION)
                                }
                            },
                            ".brand-invalid-error": {
                                observe: "isBrandInvalid",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".overlapping-hours-message": {
                                observe: "doOpeningHoursOverlap",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["doOpeningHoursOverlap", "isBrandInvalid"],
                                    onGet: function(e) {
                                        var t = h()(e, 2),
                                            n = t[0],
                                            i = t[1];
                                        return n || i
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        var e;
                        return e = {},
                            s()(e, Rs.NAME, ".name-region"),
                            s()(e, Rs.DESCRIPTION, ".description-region"),
                            s()(e, Vs, ".address-region"),
                            s()(e, Rs.LOCK_RANK, ".lockRank-region"),
                            s()(e, Rs.BRAND, ".brand-region"),
                            s()(e, Rs.CATEGORIES, ".categories-region"),
                            s()(e, Rs.EXTERNAL_PROVIDER_IDS, ".externalProviderIDs-region"),
                            s()(e, Rs.OPENING_HOURS, ".openingHours-region"),
                            s()(e, Rs.URL, ".url-region"),
                            s()(e, Rs.PHONE, ".phone-region"),
                            s()(e, Rs.SERVICES, ".services-region"),
                            s()(e, Rs.IMAGES, ".images-region"),
                            s()(e, Ds.PARKING_TYPE, ".parkingType-region"),
                            s()(e, Ds.HAS_TBR, ".hasTBR-region"),
                            s()(e, Ds.CAN_EXIT_WHILE_CLOSED, ".canExitWhileClosed-region"),
                            s()(e, Ds.COST_TYPE, ".costType-region"),
                            s()(e, Ds.PAYMENT_TYPE, ".paymentType-region"),
                            s()(e, Ds.EXTIMATED_NUMBER_OF_SPOTS, ".estimatedNumberOfSpots-region"),
                            s()(e, Ds.LOT_TYPE, ".lotType-region"),
                            e
                    }
                }, {
                    key: "fieldsConfig",
                    value: function(e, t) {
                        var n, i;
                        return {
                            VENUE_FIELDS: (n = {
                                    DEFAULT: {
                                        title: function(e) {
                                            return I18n.t("edit.landmark.fields.".concat(e))
                                        },
                                        optionsList: t.getPropertyOptions.bind(t),
                                        minLength: 2,
                                        view: Ts,
                                        observeAttribute: L.a.identity,
                                        model: e,
                                        allowNull: !1,
                                        labels: this._optionsListToLabels
                                    }
                                },
                                s()(n, Rs.NAME, {
                                    view: Bs,
                                    observeAttribute: Rs.ALIASES,
                                    mainAttribute: Rs.NAME
                                }),
                                s()(n, Rs.DESCRIPTION, {
                                    view: Us,
                                    minLength: 0,
                                    allowNull: !0
                                }),
                                s()(n, Vs, {
                                    view: ks,
                                    allowNull: !0,
                                    style: "single-line"
                                }),
                                s()(n, Rs.LOCK_RANK, {
                                    view: ks,
                                    minLength: 0,
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return z.default.formatRank(e)
                                        })
                                    }
                                }),
                                s()(n, Rs.BRAND, {
                                    view: ks,
                                    allowNull: !0,
                                    style: "single-line"
                                }),
                                s()(n, Rs.CATEGORIES, {
                                    view: As,
                                    minLength: 2,
                                    minSelectionCount: 1,
                                    mainAttribute: xs,
                                    isMainVenuePoint: !t.getTargetVenue().is2D(),
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return I18n.t("venues.categories.".concat(e))
                                        })
                                    }
                                }),
                                s()(n, Rs.EXTERNAL_PROVIDER_IDS, {
                                    view: Fs,
                                    minLength: 1,
                                    labels: this._createProviderIdLabels
                                }),
                                s()(n, Rs.OPENING_HOURS, {
                                    minLength: 1
                                }),
                                s()(n, Rs.URL, {
                                    view: ks,
                                    style: "single-line",
                                    allowNull: !0
                                }),
                                s()(n, Rs.PHONE, {
                                    view: ks,
                                    style: "single-line",
                                    allowNull: !0
                                }),
                                s()(n, Rs.SERVICES, {
                                    minLength: 1,
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return I18n.t("venues.services.".concat(e))
                                        })
                                    }
                                }),
                                s()(n, Rs.IMAGES, {
                                    view: Ms,
                                    imagesUrls: function() {
                                        var e = t.createImagesList(Rs.IMAGES).filter(function(e) {
                                            return e.attributes.approved
                                        });
                                        return L.a.compact(e.map(function(e) {
                                            return e.getUrl(sn.IMAGE_SIZE.WEB)
                                        }))
                                    },
                                    minLength: 1,
                                    style: "waze-checkbox-select"
                                }),
                                n),
                            PARKING_FIELDS: (i = {
                                    DEFAULT: {
                                        title: function(e) {
                                            return I18n.t("edit.landmark.parking.fields.".concat(e))
                                        },
                                        optionsList: t.getParkingPropertyOptions.bind(t),
                                        minLength: 2,
                                        view: ks,
                                        observeAttribute: L.a.identity,
                                        model: e,
                                        allowNull: !1,
                                        labels: function(e, t) {
                                            return t.map(function(t) {
                                                return t ? I18n.t("edit.landmark.parking.types.".concat(e, ".").concat(t)) : I18n.t("merge_places.empty")
                                            })
                                        }
                                    }
                                },
                                s()(i, Ds.PARKING_TYPE, {
                                    allowNull: !0,
                                    style: "single-line"
                                }),
                                s()(i, Ds.HAS_TBR, {
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return e ? I18n.t("edit.landmark.parking.general.true") : I18n.t("edit.landmark.parking.general.false")
                                        })
                                    }
                                }),
                                s()(i, Ds.CAN_EXIT_WHILE_CLOSED, {
                                    allowNull: !0,
                                    style: "single-line",
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return e ? I18n.t("edit.landmark.parking.general.true") : I18n.t("edit.landmark.parking.general.false")
                                        })
                                    }
                                }),
                                s()(i, Ds.COST_TYPE, {
                                    allowNull: !0,
                                    style: "single-line"
                                }),
                                s()(i, Ds.PAYMENT_TYPE, {
                                    view: Ts,
                                    minLength: 1
                                }),
                                s()(i, Ds.EXTIMATED_NUMBER_OF_SPOTS, {
                                    style: "single-line",
                                    allowNull: !0,
                                    labels: function(e, t) {
                                        return t.map(function(t) {
                                            return t ? I18n.t("edit.landmark.parking.types.".concat(e, ".").concat(t)) : I18n.t("merge_places.estimate")
                                        })
                                    }
                                }),
                                s()(i, Ds.LOT_TYPE, {
                                    view: Ts,
                                    minLength: 1,
                                    labels: function(e, t) {
                                        return t.map(function(e) {
                                            return I18n.t("edit.landmark.parking.types.lotType.".concat(e))
                                        })
                                    }
                                }),
                                i)
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.venues = e.venues,
                            this.mainVenue = e.mainVenue,
                            this.dataModel = e.dataModel,
                            this.merger = new js({
                                venues: this.venues,
                                mainVenue: this.mainVenue,
                                dataModel: this.dataModel
                            }),
                            this.model = this.merger.getModel()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._createAttributes(),
                            this.stickit()
                    }
                }, {
                    key: "_createAttributes",
                    value: function() {
                        var e = this.fieldsConfig(this.model, this.merger),
                            t = e.VENUE_FIELDS,
                            n = e.PARKING_FIELDS;
                        this._createSelectionFields(t),
                            this._hasParkingLot() && this._createSelectionFields(n)
                    }
                }, {
                    key: "_createSelectionFields",
                    value: function(e) {
                        var t = this;
                        L.a.without(Object.keys(e), "DEFAULT").forEach(function(n) {
                            var i = L.a.extend({}, e.DEFAULT, e[n]);
                            t._createSelectionView(n, i)
                        })
                    }
                }, {
                    key: "_createSelectionView",
                    value: function(e, t) {
                        var n = this;
                        if (t.optionsList = this._getOrCAll(t, "optionsList", e, t.allowNull),
                            L.a.without(Object.keys(t), "view", "optionsList").forEach(function(i) {
                                t[i] = n._getOrCAll(t, i, e, t.optionsList)
                            }),
                            t.optionsList.length >= t.minLength) {
                            var i = t.view;
                            this.showChildView(e, new i(t), t.optionsList)
                        }
                    }
                }, {
                    key: "_onSelectionChanged",
                    value: function(e) {
                        var t = e.attribute;
                        t === Rs.CATEGORIES ? this._onCategoryChanged() : t === Rs.OPENING_HOURS ? this._onOpeningHoursChanged() : t === Rs.BRAND && this._validateBrand()
                    }
                }, {
                    key: "_onCategoryChanged",
                    value: function() {
                        this._rebuildServicesView(),
                            this._validateBrand()
                    }
                }, {
                    key: "_onOpeningHoursChanged",
                    value: function() {
                        var e = this._doOpeningHoursOverlap();
                        this.model.set("doOpeningHoursOverlap", e)
                    }
                }, {
                    key: "_doOpeningHoursOverlap",
                    value: function() {
                        var e = this.merger.getAttributeValue(Rs.OPENING_HOURS);
                        return Object(Gs.containsOverlappingOpeningHours)(e)
                    }
                }, {
                    key: "_rebuildServicesView",
                    value: function() {
                        var e = this.fieldsConfig(this.model, this.merger).VENUE_FIELDS,
                            t = function(e) {
                                for (var t = 1; t < arguments.length; t++) {
                                    var n = null != arguments[t] ? arguments[t] : {};
                                    t % 2 ? Ws(Object(n), !0).forEach(function(t) {
                                        s()(e, t, n[t])
                                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ws(Object(n)).forEach(function(t) {
                                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                    })
                                }
                                return e
                            }({}, e.DEFAULT, {}, e[Rs.SERVICES]);
                        this._createSelectionView(Rs.SERVICES, t)
                    }
                }, {
                    key: "_validateBrand",
                    value: function() {
                        this.model.set("isBrandInvalid", !this.merger.isBrandValid())
                    }
                }, {
                    key: "_getOrCAll",
                    value: function(e, t, n, i) {
                        return "function" == typeof e[t] ? e[t].call(this, n, i) : e[t]
                    }
                }, {
                    key: "_optionsListToLabels",
                    value: function(e, t) {
                        return t.map(function(e) {
                            return null === e || "" === e ? I18n.t("merge_places.empty") : e
                        })
                    }
                }, {
                    key: "_hasParkingLot",
                    value: function() {
                        return this.venues.some(function(e) {
                            return e.isParkingLot()
                        })
                    }
                }, {
                    key: "_hasGasStation",
                    value: function() {
                        return this.venues.some(function(e) {
                            return e.isGasStation()
                        })
                    }
                }, {
                    key: "_onCloseClicked",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "_createProviderIdLabels",
                    value: function() {
                        return this.merger.getPropertyOptions(Rs.EXTERNAL_PROVIDER_IDS)
                    }
                }, {
                    key: "_onApplyClicked",
                    value: function() {
                        var e = this.merger.getNewAttributes(),
                            t = this.merger.getSourceVenues(),
                            n = this.merger.getTargetVenue();
                        this.trigger("doMerge", {
                                attributes: e,
                                sourceVenues: t,
                                targetVenues: n
                            }),
                            this.destroy()
                    }
                }, {
                    key: "_getLockRankRange",
                    value: function() {
                        var e = this.dataModel.loginManager.getUserRank();
                        return L.a.range(0, e + 1)
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            placesCount: this.venues.length,
                            mainPlaceName: this.mainVenue.attributes.name
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Dialog/templates/layout"
                    }
                }]),
                t
        }(a.a.View),
        zs = n(154),
        qs = n(253);

    function Ys(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var $s = function(e) {
            function t(e) {
                var n, i = e.dataModel,
                    r = void 0 === i ? null : i,
                    o = e.selection,
                    a = void 0 === o ? [] : o,
                    l = e.selectionManager,
                    u = void 0 === l ? null : l,
                    c = e.map,
                    d = void 0 === c ? null : c,
                    h = Es()(e, ["dataModel", "selection", "selectionManager", "map"]);
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? Ys(Object(n), !0).forEach(function(t) {
                                s()(e, t, n[t])
                            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ys(Object(n)).forEach(function(t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            })
                        }
                        return e
                    }({
                        dataModel: r,
                        selection: a,
                        selectionManager: u,
                        map: d
                    }, h)))).map = d,
                    n.selectionManager = u,
                    n._landmarkIds = a.concat().map(function(e) {
                        return e.getID()
                    }),
                    n._highlightedVenue = null,
                    n._drawingContext = null,
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            landmarksCollection: "#mergeLandmarksCollection"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".pending-changes-alert": {
                                observe: "showPendingUpdateRequestAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".ad-lock-alert": {
                                observe: "showAdLockAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".lock-level-alert": {
                                observe: "showLockLevelAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".parking-alert": {
                                observe: "showParkingAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".count-alert": {
                                observe: "showCountAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".distance-alert": {
                                observe: "showDistanceAlert",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".selection .text": {
                                observe: "numVenues",
                                onGet: function(e) {
                                    return I18n.t("edit.merge_landmark.title", {
                                        count: e
                                    })
                                }
                            },
                            ".residential-alert": {
                                observe: "showResidentialAlert",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Venues/MergeLandmark/Sidebar/templates/merge-venues"
                    }
                }]),
                S()(t, [{
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).call(this),
                            this._showLandmarksCollectionView()
                    }
                }, {
                    key: "_onFeatureChangedIDs",
                    value: function(e) {
                        var t = e.oldID,
                            n = e.newID,
                            i = this._landmarkIds.indexOf(t);
                        i > -1 && (this._landmarkIds.splice(i, 1, n),
                            this._reflectRepositoryChanges())
                    }
                }, {
                    key: "_reflectRepositoryChanges",
                    value: function() {
                        this._showLandmarksCollectionView(),
                            this.viewModel.set(this._makeViewModelAttributes())
                    }
                }, {
                    key: "_getSelectedVenuesCount",
                    value: function() {
                        return this._landmarkIds.length
                    }
                }, {
                    key: "_makeViewModelAttributes",
                    value: function() {
                        return {
                            numVenues: this._getSelectedVenuesCount(),
                            showPendingUpdateRequestAlert: this._hasUpdateRequests(),
                            showAdLockAlert: this._hasAdLockAlert(),
                            showLockLevelAlert: this._isLockedForLevel(),
                            showParkingAlert: this._hasMixedParkingCategory(),
                            showCountAlert: this._hasCountLock(),
                            showDistanceAlert: this._isPlacesTooFar(),
                            showResidentialAlert: this._hasResidentialPlace(),
                            maxLandmarksCount: 5
                        }
                    }
                }, {
                    key: "_showLandmarksCollectionView",
                    value: function() {
                        this.landmarksCollection = this._creteLandmarksCollection(),
                            this.showChildView("landmarksCollection", new Ss({
                                collection: this.landmarksCollection
                            }))
                    }
                }, {
                    key: "_creteLandmarksCollection",
                    value: function() {
                        var e = this;
                        return new g.a.Collection(this.getLandmarks().map(function(t) {
                            return {
                                lockedForMerge: e._isLockedForMerge(),
                                venue: t
                            }
                        }))
                    }
                }, {
                    key: "getLandmarks",
                    value: function() {
                        return this.repository.getByIds(this._landmarkIds)
                    }
                }, {
                    key: "hasEditedModelChanged",
                    value: function(e) {
                        var t = e.map(function(e) {
                            return e.getID()
                        });
                        return L.a.intersection(this._landmarkIds, t).length > 0
                    }
                }, {
                    key: "_isLockedForMerge",
                    value: function() {
                        return this._isLockedForLevel() || this._hasUpdateRequests() || this._hasAdLockAlert() || this._hasCountLock() || this._hasResidentialPlace() || this._isPlacesTooFar()
                    }
                }, {
                    key: "_isLockedForLevel",
                    value: function() {
                        return this.getLandmarks().some(function(e) {
                            return e.requiresModeration()
                        })
                    }
                }, {
                    key: "_hasUpdateRequests",
                    value: function() {
                        return this.getLandmarks().some(function(e) {
                            return e.hasUpdateRequests()
                        })
                    }
                }, {
                    key: "_hasAdLockAlert",
                    value: function() {
                        return this.getLandmarks().some(function(e) {
                            return e.isAdLocked()
                        })
                    }
                }, {
                    key: "_hasCountLock",
                    value: function() {
                        return this.getLandmarks().length > 5
                    }
                }, {
                    key: "_hasResidentialPlace",
                    value: function() {
                        return this.getLandmarks().some(function(e) {
                            return e.isResidential()
                        })
                    }
                }, {
                    key: "_hasMixedParkingCategory",
                    value: function() {
                        var e = this.getLandmarks(),
                            t = e.some(function(e) {
                                return e.isParkingLot()
                            }),
                            n = e.some(function(e) {
                                return !e.isParkingLot()
                            });
                        return t && n
                    }
                }, {
                    key: "_isPlacesTooFar",
                    value: function() {
                        for (var e = this.getLandmarks(), t = 0; t < e.length; t++)
                            for (var n = 0; n < t; n++)
                                if (this._isLandmarksTooFar(e[t], e[n], 400))
                                    return !0;
                        return !1
                    }
                }, {
                    key: "onChildviewMergeClick",
                    value: function(e) {
                        var t = this,
                            n = new Hs({
                                venues: this.getLandmarks(),
                                dataModel: this._dataModel,
                                mainVenue: e
                            });
                        n.on("doMerge", function(e) {
                                var n = new qs.default(e.sourceVenues, e.targetVenues, e.attributes);
                                t._dataModel.actionManager.add(n)
                            }),
                            W.app.layout.getRegion("dialogRegion").show(n)
                    }
                }, {
                    key: "onChildviewRemoveClick",
                    value: function(e) {
                        this.selectionManager.setSelectedModels(L.a.reject(this.getLandmarks(), function(t) {
                            return t.getID() === e.getID()
                        }))
                    }
                }, {
                    key: "onChildviewCardMouseOver",
                    value: function(e) {
                        this._highlightVenue(e)
                    }
                }, {
                    key: "onChildviewCardMouseLeave",
                    value: function(e) {
                        this._unHighlightVenue(e)
                    }
                }, {
                    key: "_highlightVenue",
                    value: function(e) {
                        this._highlightedVenue && e && this._highlightedVenue.getID() === e.getID() || (this._highlightedVenue = e,
                            this._drawGeometry(e.attributes.geometry))
                    }
                }, {
                    key: "_unHighlightVenue",
                    value: function(e) {
                        this._highlightedVenue === e && (this._highlightedVenue = null,
                            this._drawingContext && (this._drawingContext.clear(),
                                this._destroyDrawingContext()))
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this._drawingContext && (this._drawingContext = this.map.getDrawingContext(),
                                this._drawingContext.setStyleMap(zs.a),
                                this._drawingContext.moveLayerToTop()),
                            this._drawingContext
                    }
                }, {
                    key: "_drawGeometry",
                    value: function(e) {
                        this._getDrawingContext().addFeatures([new OL.Feature.Vector($e.cloneGeometry(e))])
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        null != this._drawingContext && (this._drawingContext.destroy(),
                            this._drawingContext = null)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "_isLandmarksTooFar",
                    value: function(e, t, n) {
                        return e.geometry.distanceTo(t.geometry) > 400
                    }
                }, {
                    key: "toggleEnabled",
                    value: function(e) {
                        e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            maxLandmarksCount: 5
                        }
                    }
                }]),
                t
        }(qe.default),
        Ks = n(79),
        Js = n.n(Ks),
        Zs = n(150),
        Qs = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).model.set({
                        showingPreview: !0
                    }),
                    n.formModel = new g.a.Model({
                        subject: n.model.get("subject"),
                        body: n.model.get("body")
                    }),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "map-comment-name-editor"
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            editButton: ".edit-button",
                            applyButton: ".apply-button"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click @ui.editButton": "_onEditButtonClicked",
                            "submit form": "_onApplyButtonClicked"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".preview": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "showingPreview"
                            },
                            ".edit": {
                                visible: !0,
                                visibleFn: G.b,
                                observe: "showingPreview",
                                onGet: L.a.negate(L.a.identity)
                            },
                            ".subject-preview": "subject",
                            ".body-preview": {
                                observe: "body",
                                classes: {
                                    "edit-button": "propertiesEditable"
                                }
                            }
                        }
                    }
                }, {
                    key: "formBindings",
                    value: function() {
                        return {
                            ".subject-input": "subject",
                            ".body-textarea": "body"
                        }
                    }
                }, {
                    key: "behaviors",
                    value: function() {
                        return {
                            charCount: {
                                behaviorClass: Zs.a,
                                charLimits: [{
                                    inputSelector: ".subject-input",
                                    charCountSelector: ".subject-max-length",
                                    maxLength: Js.a.prototype.MAX_SUBJECT_LENGTH,
                                    modelAttribute: "formModel",
                                    observe: "subject"
                                }, {
                                    inputSelector: ".body-textarea",
                                    charCountSelector: ".body-max-length",
                                    maxLength: Js.a.prototype.MAX_BODY_LENGTH,
                                    modelAttribute: "formModel",
                                    observe: "body"
                                }]
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Comments/templates/name_editor"
                    }
                }]),
                S()(t, [{
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.stickit(this.formModel, this.formBindings())
                    }
                }, {
                    key: "_onEditButtonClicked",
                    value: function() {
                        this.model.set({
                            showingPreview: !1
                        })
                    }
                }, {
                    key: "_onApplyButtonClicked",
                    value: function(e) {
                        return e.preventDefault(),
                            this.model.set({
                                showingPreview: !0,
                                subject: this.formModel.get("subject"),
                                body: this.formModel.get("body")
                            }),
                            !1
                    }
                }]),
                t
        }(a.a.View),
        Xs = n(229);

    function eo(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var to = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        return "map-comment-feature-editor separator-line"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            lockEditRegion: ".lock-edit-region",
                            nameEditorRegion: ".name-editor-region",
                            conversationRegion: ".conversation-region"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "blur .new-subject-input": this._onNewSubjectBlur,
                            "blur .new-body-input": this._onNewBodyBlur
                        }
                    }
                }, {
                    key: "behaviors",
                    value: function() {
                        return {
                            dateTimePickers: {
                                behaviorClass: gn.a,
                                modelAttribute: "viewModel"
                            },
                            charCount: {
                                behaviorClass: Zs.a,
                                charLimits: [{
                                    inputSelector: ".new-subject-input",
                                    charCountSelector: ".new-subject-max-length",
                                    maxLength: Js.a.prototype.MAX_SUBJECT_LENGTH,
                                    modelAttribute: "newFormModel",
                                    observe: "subject"
                                }, {
                                    inputSelector: ".new-body-input",
                                    charCountSelector: ".new-body-max-length",
                                    maxLength: Js.a.prototype.MAX_BODY_LENGTH,
                                    modelAttribute: "newFormModel",
                                    observe: "body"
                                }]
                            }
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? eo(Object(n), !0).forEach(function(t) {
                                    s()(e, t, n[t])
                                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : eo(Object(n)).forEach(function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                })
                            }
                            return e
                        }({}, Ie()(A()(t.prototype), "bindings", this).call(this), {
                            ".new-comment-form": {
                                observe: "isNew",
                                visible: !0,
                                visibleFn: G.b
                            },
                            "[name=isPoint]": {
                                observe: "isPoint"
                            },
                            ".point-btn, .area-btn": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "propertiesEditable",
                                    onGet: L.a.negate(L.a.identity)
                                }]
                            },
                            ".point-btn": {
                                classes: {
                                    active: {
                                        observe: "isPoint",
                                        onGet: function(e) {
                                            return "true" === e
                                        }
                                    }
                                }
                            },
                            ".area-btn": {
                                classes: {
                                    active: {
                                        observe: "isPoint",
                                        onGet: function(e) {
                                            return "false" === e
                                        }
                                    }
                                }
                            }
                        })
                    }
                }, {
                    key: "featureToViewModel",
                    value: function(e) {
                        return {
                            isNew: e.isNew(),
                            isPoint: e.isPoint() ? "true" : "false",
                            body: e.attributes.body,
                            subject: e.attributes.subject,
                            endDate: e.attributes.endDate,
                            rank: e.attributes.lockRank,
                            lockRank: e.attributes.lockRank,
                            lockRankMixed: !1,
                            allowDefaultRank: !1,
                            createdDate: this._getCreateDisplayDate(e)
                        }
                    }
                }, {
                    key: "viewModelToFeature",
                    value: function() {
                        return {
                            lockRank: this.simpleAttribute("lockRank"),
                            endDate: this.simpleAttribute("endDate"),
                            body: this.simpleAttribute("body"),
                            subject: this.simpleAttribute("subject")
                        }
                    }
                }, {
                    key: "onFeaturesChanged",
                    value: function(e) {
                        Ie()(A()(t.prototype), "onFeaturesChanged", this).apply(this, arguments),
                            e[0].isNew() && this.newFormModel.set({
                                subject: this.viewModel.attributes.subject,
                                body: this.viewModel.attributes.body
                            })
                    }
                }, {
                    key: "_getCreateDisplayDate",
                    value: function(e) {
                        return e.attributes.createdOn ? I18n.l("time.formats.long", new Date(e.attributes.createdOn)) : ""
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        Ie()(A()(t.prototype), "onRender", this).apply(this, arguments);
                        var e = this.getFeature();
                        e.isNew() ? this.newFormModel = new g.a.Model({
                                subject: this.viewModel.attributes.subject,
                                body: this.viewModel.attributes.body
                            }) : (this._renderNameEditor(e),
                                this._renderConversationRegion(e)),
                            this.listenTo(this.viewModel, "change:isPoint", this._isPointChanged),
                            this._renderLockEdit()
                    }
                }, {
                    key: "_renderLockEdit",
                    value: function() {
                        var e = new Xe.default({
                            model: this.viewModel
                        });
                        this.showChildView("lockEditRegion", e)
                    }
                }, {
                    key: "_renderNameEditor",
                    value: function(e) {
                        var t = new Qs({
                            model: this.viewModel
                        });
                        return this.showChildView("nameEditorRegion", t)
                    }
                }, {
                    key: "_renderConversationRegion",
                    value: function(e) {
                        var t = new Xs.a({
                            commentable: e
                        });
                        return this.showChildView("conversationRegion", t)
                    }
                }, {
                    key: "_isPointChanged",
                    value: function(e, t, n) {
                        if (n.stickitChange) {
                            var i, r = this.getFeature();
                            i = "true" === t ? r.getPointGeometry() : r.getPolygonGeometry();
                            var s = new mt.a(r, W.model.mapComments, r.geometry, i);
                            W.model.actionManager.add(s)
                        }
                    }
                }, {
                    key: "_onNewSubjectBlur",
                    value: function() {
                        this.viewModel.set({
                            subject: this.newFormModel.attributes.subject
                        })
                    }
                }, {
                    key: "_onNewBodyBlur",
                    value: function() {
                        this.viewModel.set({
                            body: this.newFormModel.attributes.body
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Comments/templates/feature_editor"
                    }
                }]),
                t
        }(qe.default),
        no = n(463),
        io = function() {
            function e(t) {
                E()(this, e),
                    this.options = t,
                    this.singleTypeToEditorClass = L.a.clone(this.SINGLE_SELECTION.TYPE_TO_EDITOR_CLASS),
                    this.multiTypeToEditorClass = L.a.clone(this.MULTI_SELECTION.TYPE_TO_EDITOR_CLASS)
            }
            return S()(e, [{
                    key: "SINGLE_SELECTION",
                    get: function() {
                        var e, t;
                        return {
                            TYPE_TO_EDITOR_CLASS: (e = {},
                                s()(e, At.a.SEGMENT, ys),
                                s()(e, At.a.VENUE, ci),
                                s()(e, At.a.NODE, vi),
                                s()(e, At.a.SPEED_CAMERA, ct),
                                s()(e, At.a.BIG_JUNCTION, it),
                                s()(e, At.a.CITY, ht),
                                s()(e, At.a.MAP_COMMENT, to),
                                s()(e, At.a.RESTRICTED_DRIVING_AREA, no.RestrictedDrivingAreaFeatureEditor),
                                e),
                            TYPE_TO_OPTIONS: (t = {},
                                s()(t, At.a.SEGMENT, function() {
                                    return {
                                        selectionManager: this.options.selectionManager,
                                        segmentSelection: this.options.selectionManager.getSegmentSelection()
                                    }
                                }),
                                s()(t, At.a.VENUE, function() {
                                    return {
                                        streetViewController: this.options.streetViewController
                                    }
                                }),
                                s()(t, At.a.BIG_JUNCTION, function() {
                                    return {
                                        selectionManager: this.options.selectionManager
                                    }
                                }),
                                t)
                        }
                    }
                }, {
                    key: "MULTI_SELECTION",
                    get: function() {
                        return {
                            TYPE_TO_EDITOR_CLASS: s()({}, At.a.VENUE, $s),
                            TYPE_TO_OPTIONS: s()({}, At.a.VENUE, function() {
                                return {
                                    selectionManager: this.options.selectionManager
                                }
                            })
                        }
                    }
                }]),
                S()(e, [{
                    key: "create",
                    value: function() {
                        var e = this.options.selectionManager,
                            t = this.options.dataModel,
                            n = L()(e.getSelectedFeatures()).map("model").value(),
                            i = n[0].type,
                            r = this.singleTypeToEditorClass[i],
                            s = {};
                        return this.SINGLE_SELECTION.TYPE_TO_OPTIONS[i] && (s = this.SINGLE_SELECTION.TYPE_TO_OPTIONS[i].call(this)),
                            n.length > 1 && this.multiTypeToEditorClass[i] && (r = this.multiTypeToEditorClass[i],
                                this.MULTI_SELECTION.TYPE_TO_OPTIONS && this.MULTI_SELECTION.TYPE_TO_OPTIONS[i] && (s = this.MULTI_SELECTION.TYPE_TO_OPTIONS[i].call(this))),
                            new r(L.a.defaults({
                                dataModel: t,
                                selection: n,
                                map: W.map
                            }, s))
                    }
                }]),
                e
        }(),
        ro = n(46),
        so = n(54),
        oo = function() {
            function e(t) {
                E()(this, e),
                    this.events = new OpenLayers.Events(this),
                    this.$element = t,
                    this.render()
            }
            return S()(e, [{
                    key: "render",
                    value: function() {
                        var e = this;
                        this.$element.delegate(".result", "click", function() {
                                var t = this.dataset.id;
                                Le()(this).hasClass("session-available") && e.events.triggerEvent("sessionClicked", {
                                    id: t
                                })
                            }),
                            Le()('a[href="#'.concat(this.$element.attr("id"), '"]')).on("show.bs.tab", function() {
                                e.events.triggerEvent("shown")
                            })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.events.destroy()
                    }
                }, {
                    key: "setLoading",
                    value: function(e) {
                        e ? (this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").addClass("loading"),
                            this.$element.find(".loading-animation").removeClass("hide")) : (this.$element.find(".pagination").removeClass("loading"),
                            this.$element.find(".loading-animation").addClass("hide"))
                    }
                }, {
                    key: "setSessions",
                    value: function(e) {
                        this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                            this.$element.find(".pagination").pagination(e, {
                                callback: this.onPaginationLinkClicked.bind(this),
                                items_per_page: this.ResultsPerPage,
                                num_display_entries: this.ResultsPerPage - 1,
                                next_text: "",
                                prev_text: "",
                                num_edge_entries: 1,
                                ellipse_text: "..."
                            })
                    }
                }, {
                    key: "setSessionsPage",
                    value: function(e, t, n) {
                        var i = this;
                        this.$element.find(".result-list-container").html(Object(so.getHTML)("templates/archive-sessions", {
                                sessions: e,
                                username: t,
                                isStaff: n
                            })),
                            this.$element.find(".sessions-search form").on("submit", function(e) {
                                e.preventDefault();
                                var t = Le()(e.target);
                                i.events.triggerEvent("searchSubmitted", {
                                    username: t.find("input[name=username]").val()
                                })
                            })
                    }
                }, {
                    key: "setSelectedSession",
                    value: function(e) {
                        this.$element.find("#archive-sessions .result").removeClass("selected"),
                            null !== e && this.$element.find("#archive-sessions .result[data-id=".concat(e, "]")).addClass("selected")
                    }
                }, {
                    key: "onPaginationLinkClicked",
                    value: function(e) {
                        this.events.triggerEvent("paginationLinkClicked", {
                            index: e
                        })
                    }
                }, {
                    key: "onAreaPaginationLinkClicked",
                    value: function(e) {
                        this.events.triggerEvent("areasPaginationLinkClicked", {
                            index: e
                        })
                    }
                }, {
                    key: "showError",
                    value: function() {
                        this.$element.find(".error").removeClass("hide")
                    }
                }, {
                    key: "reset",
                    value: function() {}
                }, {
                    key: "show",
                    value: function() {}
                }, {
                    key: "hide",
                    value: function() {}
                }]),
                e
        }();
    Object.assign(oo.prototype, {
        ResultsPerPage: 15,
        CLASS_NAME: "Waze.View.Archive"
    });
    var ao = oo,
        lo = a.a.View.extend({
            template: "templates/archive-panel",
            serializeData: function() {
                return {
                    fromAddress: this.model.fromLocation,
                    toAddress: this.model.toLocation
                }
            },
            templateContext: {
                formatAddress: function(e) {
                    var t = [e.city, e.street];
                    return (t = L.a.compact(t)).join(", ")
                }
            }
        }),
        uo = n(240),
        co = function() {
            function e(t, n) {
                E()(this, e),
                    this.events = new OpenLayers.Events(this),
                    this.$element = t,
                    this.user = n,
                    this.render()
            }
            return S()(e, [{
                    key: "render",
                    value: function() {
                        var e = this;
                        this.$element.delegate(".result", "click", function() {
                            var t = Le()(this).data("index");
                            e.events.triggerEvent("areaClicked", {
                                areaIndex: t
                            })
                        })
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.events.destroy()
                    }
                }, {
                    key: "setLoading",
                    value: function(e) {
                        e ? (this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").addClass("loading")) : this.$element.find(".pagination").removeClass("loading")
                    }
                }, {
                    key: "setEditableAreas",
                    value: function(e) {
                        this.$element.find(".result-list-container").empty(),
                            this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                            this.$element.find(".pagination").pagination(e, {
                                callback: this.onAreaPaginationLinkClicked.bind(this),
                                items_per_page: this.ResultsPerPage,
                                num_display_entries: this.ResultsPerPage - 1,
                                next_text: "",
                                prev_text: "",
                                num_edge_entries: 1,
                                ellipse_text: "..."
                            })
                    }
                }, {
                    key: "setEditableAreasPage",
                    value: function(e) {
                        this.$element.find(".result-list-container").html(Object(so.getHTML)("templates/editable-areas", {
                                areas: e,
                                EDITABLE_AREA_TYPES: uo.EDITABLE_AREA_TYPES
                            })),
                            this.$element.find("#permissions-info").tooltip({
                                placement: "bottom",
                                title: Object(so.getHTML)("templates/sidebar/user-permissions-tooltip", {
                                    editableMiles: this.user.editableMiles,
                                    isCountryManager: this.user.isCountryManager(),
                                    isAreaManager: this.user.isAreaManager
                                }),
                                html: !0
                            })
                    }
                }, {
                    key: "onAreaPaginationLinkClicked",
                    value: function(e) {
                        this.events.triggerEvent("areasPaginationLinkClicked", {
                            index: e
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {}
                }, {
                    key: "show",
                    value: function() {}
                }, {
                    key: "hide",
                    value: function() {}
                }]),
                e
        }();
    Object.assign(co.prototype, {
        ResultsPerPage: 15,
        CLASS_NAME: "Waze.View.EditableAreas"
    });
    var ho = co,
        po = OpenLayers.Class(OpenLayers.Control, ro.a, {
            sidePanelView: null,
            editableAreasListView: null,
            layerView: null,
            panelView: null,
            editableAreasLayer: null,
            model: null,
            currentSessionList: null,
            currentSessionData: null,
            currentSession: null,
            currentUser: null,
            editableAreas: null,
            initialize: function(e) {
                var t = e.user;
                OpenLayers.Control.prototype.initialize.apply(this, arguments),
                    this.sidePanelView = new ao(Le()("#sidepanel-drives")),
                    this.editableAreasListView = new ho(Le()("#sidepanel-areas"), t),
                    this.layerView = W.map.archiveLayer,
                    this.editableAreasLayer = W.map.userLayer,
                    this.layerView.pm = this,
                    this.model = W.model,
                    this._descartesClient = new dt.a,
                    this._createEditableAreas()
            },
            _createEditableAreas: function() {
                var e = this.model.loginManager.user;
                this.editableAreas = e.areas.map(function(e, t) {
                    var n = L.a.extend({}, e, {
                        num: t
                    });
                    return new g.a.Model(n)
                })
            },
            registerListeners: function() {
                this.sidePanelView.events.on({
                        shown: this.onSessionsListShown,
                        sessionClicked: this.onSessionClicked,
                        paginationLinkClicked: this.onPaginationLinkClicked,
                        searchSubmitted: this.onSearchSubmitted,
                        scope: this
                    }),
                    this.editableAreasListView.events.on({
                        areaClicked: this.onAreaClicked,
                        areasPaginationLinkClicked: this.onAreasPaginationLinkClicked,
                        scope: this
                    })
            },
            reset: function(e) {
                this.currentSessionList = null,
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.loadSessions(-1),
                    this.sidePanelView.reset(),
                    this.loadEditableAreas(),
                    this.layerView.clearDrive()
            },
            activate: function() {
                OpenLayers.Control.prototype.activate.apply(this, arguments),
                    this.registerListeners()
            },
            show: function() {
                this.sidePanelView.events.triggerEvent("shown")
            },
            onSessionsListShown: function(e) {
                null === this.currentSessionList && (this.loadSessions(0),
                    B.reportAnalytic.generalAction("userdrive_clicked"))
            },
            onPaginationLinkClicked: function(e) {
                this.loadSessions(e.index)
            },
            onAreasPaginationLinkClicked: function(e) {
                var t = this.editableAreasListView.ResultsPerPage,
                    n = e.index,
                    i = this.editableAreas.slice(n * t, (n + 1) * t);
                this.editableAreasListView.setEditableAreasPage(i)
            },
            loadEditableAreas: function() {
                var e = this.model.loginManager.user,
                    t = [];
                e && (t = e.areas || []),
                    this.editableAreasListView.setEditableAreas(t.length),
                    this.onAreasPaginationLinkClicked({
                        index: 0
                    })
            },
            loadSessions: function(e) {
                var t = this;
                if (this.model.loginManager.user && -1 !== e) {
                    this.sidePanelView.setLoading(!0);
                    var n = {
                        minDistance: 1e3,
                        offset: e * this.sidePanelView.ResultsPerPage,
                        count: this.sidePanelView.ResultsPerPage
                    };
                    null !== this.currentUser && (n.username = this.currentUser),
                        this._descartesClient.getArchives(n).then(function(e) {
                            return t.model.mergeResponse(e),
                                e
                        }).then(function(e) {
                            var n = e.archives.objects,
                                i = e.archives.totalSessions;
                            null === t.currentSessionList && t.sidePanelView.setSessions(i),
                                t.sidePanelView.setSessionsPage(n, t.currentUser, t.model.loginManager.user.isStaff),
                                t.currentSessionList = n
                        }).catch(function() {
                            t.sidePanelView.showError()
                        }).finally(function() {
                            t.sidePanelView.setLoading(!1)
                        })
                } else
                    this.sidePanelView.setSessions(0)
            },
            onAreaClicked: function(e) {
                var t = this.model.loginManager.user.areas[e.areaIndex];
                this.editableAreasLayer.setVisibility(!0),
                    this.ZoomToEditableArea(t)
            },
            ZoomToEditableArea: function(e) {
                var t = $e.getBounds(e.geometry),
                    n = $e.getBoundsCenterLonLat(e.geometry),
                    i = this.map.getZoomForExtent(t);
                this.map.setCenter(n, i)
            },
            _getFullArchiveDataById: function(e) {
                return Promise.all([this._descartesClient.getArchiveById(e), this._descartesClient.getArchiveSessionById(e)])
            },
            onSessionClicked: function(e) {
                var t = this,
                    n = this;
                this._getFullArchiveDataById(e.id).then(function(e) {
                    var n = h()(e, 2),
                        i = n[0],
                        r = n[1];
                    return t.model.mergeResponse(i),
                        t.model.mergeResponse(r),
                        [i.archives.objects[0], r.archiveSessions.objects[0]]
                }).then(function(t) {
                    var i = h()(t, 2),
                        r = i[0],
                        s = i[1];
                    n.currentSession = r,
                        n.sidePanelView.setSelectedSession(e.id),
                        Le.a.isArray(s) && (s = s[0]),
                        n.currentSessionData = s,
                        null !== n.panelView && (n.panelView.off(),
                            n.panelView.destroy()),
                        n.panelView = new lo({
                            model: s
                        }),
                        n.panelView.on("destroy", n.onPanelClosed, n),
                        W.map.panelRegion.show(n.panelView),
                        n.layerView.drawDrive(),
                        n.layerView.zoomToDrive()
                })
            },
            onSearchSubmitted: function(e) {
                e.username ? this.currentUser = e.username : this.currentUser = null,
                    this.currentSessionList = null,
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.loadSessions(0),
                    this.sidePanelView.reset(),
                    this.loadEditableAreas(),
                    this.layerView.clearDrive()
            },
            onPanelClosed: function() {
                this.sidePanelView.setSelectedSession(null),
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.layerView.clearDrive()
            },
            disable: function() {
                ro.a.prototype.disable.apply(this, arguments),
                    this.onPanelClosed()
            },
            CLASS_NAME: "Waze.Control.Archive"
        }),
        go = n(42),
        fo = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "change .region-select": "onRegionSelected"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".region-select": {
                                observe: "regionCode",
                                selectOptions: {
                                    collection: this.regionOptions
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.model = new g.a.Model({
                                regionCode: e.regionCode
                            }),
                            this.regionOptions = go.REGION_CODES.map(function(e) {
                                return {
                                    label: I18n.t("envs.".concat(e)),
                                    value: e
                                }
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "onRegionSelected",
                    value: function(e) {
                        var t = Le()(e.target).val();
                        W.app.changeAppRegion(t)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/RegionSwitcher/templates/region-switcher"
                    }
                }]),
                t
        }(a.a.View),
        mo = g.a.Marionette.View.extend({
            template: "templates/prefs-panel",
            regions: {
                envSelectRegion: "#env-select"
            },
            behaviors: {
                accelerators: {
                    behaviorClass: pi.a
                }
            },
            events: {
                "change .language-select": "_onLanguageChange"
            },
            accelerators: {
                spreadArrows: "_onSpreadArrowsClicked",
                hideArrows: "_onHideArrowClicked"
            },
            bindings: {
                "input[name=twoWayRoad]": "twoWaySegmentsByDefault",
                "input[name=turnsAllowed]": "enableTurnsByDefault",
                "input[name=requireDeselect]": "requireFeatureDeselect",
                "input[name=units-radio]": "isImperial",
                "input[name=spreadTurnArrows]": "spreadTurnArrows",
                "input[name=showTransparentTurnArrows]": "showTransparentTurnArrows"
            },
            onRender: function() {
                this.showChildView("envSelectRegion", new fo({
                        regionCode: W.app.getAppRegionCode()
                    })),
                    this.stickit()
            },
            _onLanguageChange: function(e) {
                var t = Le()(e.target).val();
                W.app.changeAppLocale(t)
            },
            _onSpreadArrowsClicked: function() {
                this.model.set({
                    spreadTurnArrows: !this.model.get("spreadTurnArrows")
                })
            },
            _onHideArrowClicked: function() {
                this.model.set({
                    showTransparentTurnArrows: !this.model.get("showTransparentTurnArrows")
                })
            }
        }),
        vo = a.a.View.extend({
            template: "templates/sidebar/user-info",
            className: "flex-parent",
            ui: {
                feedContainer: "#sidepanel-feed",
                feedRefresh: ".feed-refresh"
            },
            regions: {
                preferencesRegion: "#sidepanel-prefs"
            },
            initialize: function(e) {
                this.user = this.model.get("user"),
                    this.feedControl = e.feedControl
            },
            onRender: function() {
                var e = this;
                return this.showChildView("preferencesRegion", new mo({
                        model: W.prefs
                    })),
                    this.feedControl.render({
                        el: this.ui.feedContainer
                    }),
                    Le()(this.ui.feedRefresh).click(function() {
                        return e.feedControl.refresh()
                    })
            },
            onAttach: function() {
                this.archiveControl = new po({
                        user: this.model.attributes.user
                    }),
                    W.map.addControl(this.archiveControl),
                    this.archiveControl.activate(),
                    this.archiveControl.reset()
            },
            onDestroy: function() {
                this.archiveControl = null,
                    this.preferencesView && this.preferencesView.destroy(),
                    this.preferencesView = null
            },
            serializeData: function() {
                return {
                    user: this.user
                }
            }
        }),
        _o = a.a.View.extend({
            template: "templates/sidebar/user-sandbox"
        }),
        yo = a.a.View.extend({
            template: "templates/sidebar/sidebar",
            className: "sidebar-layout",
            regions: {
                editRegion: "#edit-panel .contents",
                userRegion: "#user-info"
            },
            ui: {
                overlay: ".overlay"
            },
            bindings: {
                "#edit-panel": {
                    observe: "featureSelected",
                    visible: !0,
                    visibleFn: function(e, t, n) {
                        if (t && this._storeScroll(),
                            e.toggle(t),
                            t)
                            return this.$el.scrollTop(0)
                    }
                },
                "#user-info": {
                    observe: "featureSelected",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    },
                    visibleFn: function(e, t, n) {
                        if (e.toggle(t),
                            t)
                            return this._restoreScroll()
                    }
                }
            },
            scrollTop: null,
            initialize: function(e) {
                this.dataModel = e.dataModel,
                    this.selectionManager = e.selectionManager,
                    this.editingMediator = e.editingMediator,
                    this.streetViewController = e.streetViewController,
                    this.featureEditorFactory = new io({
                        selectionManager: this.selectionManager,
                        dataModel: this.dataModel,
                        streetViewController: this.streetViewController
                    }),
                    this.scrollTop = 0
            },
            onBeforeRender: function() {
                this.listenTo(this.model, "selectionChanged", this._onSelectionChanged),
                    this.editingMediator.on("change:editingEnabled", this._toggleEditing, this)
            },
            onBeforeDestroy: function() {
                this.editingMediator.off("change:editingEnabled", this._toggleEditing, this)
            },
            onRender: function() {
                this._renderUserInfo(),
                    this._toggleEditing(),
                    this._toggleHouseNumbers(),
                    this.stickit()
            },
            _onSelectionChanged: function(e) {
                return e.selection.length ? (this.editView = this.featureEditorFactory.create(),
                    this.showChildView("editRegion", this.editView),
                    this._toggleEditing()) : this.getRegion("editRegion").empty()
            },
            _toggleEditing: function() {
                var e = this.editingMediator.get("editingEnabled");
                this.ui.overlay.toggleClass("editingDisabled", !e),
                    this.getChildView("editRegion") && this.getChildView("editRegion").toggleEnabled(e)
            },
            _toggleHouseNumbers: function() {
                var e = this.editingMediator.get("editingHouseNumbers");
                this.ui.overlay.toggleClass("houseNumbersVisible", e)
            },
            onEditingHouseNumbersChanged: function() {
                this._toggleHouseNumbers()
            },
            _renderUserInfo: function() {
                return this.options.sandbox ? this.showChildView("userRegion", new _o) : this.options.loggedIn ? this.showChildView("userRegion", new vo({
                    model: this.model,
                    feedControl: this.options.feedControl
                })) : this.getRegion("userRegion").empty()
            },
            _storeScroll: function() {
                this.scrollTop = this.$el.scrollTop()
            },
            _restoreScroll: function() {
                return this.$el.scrollTop(this.scrollTop)
            }
        }),
        bo = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar",
            className: "toolbar",
            regions: {
                search: "#search",
                editButtons: "#edit-buttons",
                userBoxOrLoginButton: "#user-box-or-login-button-region"
            }
        }),
        Eo = n(107),
        wo = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".result-error-message": {
                                observe: "showRetrieveError",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".no-results-error-message": {
                                observe: "showNoResultsError",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/search-empty-view"
                    }
                }]),
                t
        }(a.a.View),
        So = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mousedown .search-result": "_onClick"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".search-result": {
                                classes: {
                                    selected: {
                                        observe: "selected"
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        this.trigger("selected", this.model)
                    }
                }, {
                    key: "_getTitle",
                    value: function() {
                        var e = this.model.get("venue");
                        return e.name || e.street || e.city
                    }
                }, {
                    key: "_getDescription",
                    value: function() {
                        var e = this.model.get("venue"),
                            t = "";
                        e.house_number && (t = "house_"),
                            e.street && (t = "".concat(t, "street_")),
                            e.city && (t = "".concat(t, "city_")),
                            t = t.slice(0, -1);
                        var n = "";
                        e.state && (n = "state_"),
                            e.country && (n = "".concat(n, "country_")),
                            n = n.slice(0, -1);
                        var i = I18n.t("toolbar.search_results.address_part2.".concat(n), {
                            state: e.state,
                            country: e.country
                        });
                        if (t) {
                            var r = I18n.t("toolbar.search_results.address_part1.".concat(t), {
                                house_number: e.house_number,
                                street: e.street,
                                city: e.city
                            });
                            return n ? I18n.t("toolbar.search_results.full_address", {
                                address_part1: r,
                                address_part2: i
                            }) : r
                        }
                        return n ? i : ""
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            title: this._getTitle(),
                            description: this._getDescription()
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/search-result-item"
                    }
                }]),
                t
        }(a.a.View),
        ko = new RegExp(/^\s?(-?\d+(?:\.\d+)?)\s*[,\s]{1}\s*(-?\d+(?:\.\d+)?)\s*$/),
        To = [{
            test: function(e) {
                return null !== ko.exec(e)
            },
            search: function(e) {
                var t = ko.exec(e);
                this._goToResult(new g.a.Model({
                        venue: {
                            location: {
                                x: t[1],
                                y: t[2]
                            }
                        }
                    })),
                    B.reportAnalytic.searchAction("search", "custom_lonlat")
            }
        }],
        Io = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            searchField: "input",
                            searchForm: "form"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            results: ".search-result-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".search-query": "searchQuery",
                            ".search-result-region": {
                                observe: "showResults",
                                visible: !0,
                                visibleFn: G.b
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "keydown .search-query": "_onKeyDown",
                            "blur .search-query": "_hideResultsList"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.map = e.map,
                            this.model = new g.a.Model({
                                showResults: !1,
                                showRetrieveError: !1,
                                showNoResultsError: !1,
                                searchQuery: ""
                            }),
                            this.collection = new g.a.Collection([]),
                            this._registerEvents()
                    }
                }, {
                    key: "_getCurrentSelectionIndex",
                    value: function() {
                        return this.collection && this.collection.length > 0 ? this.collection.findIndex(function(e) {
                            return e.get("selected")
                        }) : -1
                    }
                }, {
                    key: "_registerEvents",
                    value: function() {
                        var e = this;
                        this._getSearchLayer().events.on({
                                moveend: this._onMapMove,
                                scope: this
                            }),
                            W.accelerators.events.register("search", this, function() {
                                return e.ui.searchField.focus()
                            })
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        var t = !1;
                        switch (e.which) {
                            case 38:
                                this._moveUp(),
                                    t = !0;
                                break;
                            case 40:
                                this._moveDown(),
                                    t = !0;
                                break;
                            case 27:
                                this._hideResultsList();
                                break;
                            case 13:
                                e.preventDefault(),
                                    e.stopPropagation(),
                                    -1 === this._getCurrentSelectionIndex() ? this._doSearch(this.model.get("searchQuery")) : this._goToSelection()
                        }
                        this.model.get("showResults") && t && e.preventDefault()
                    }
                }, {
                    key: "_moveUp",
                    value: function() {
                        var e = this._getCurrentSelectionIndex();
                        --e < 0 && (e = this.collection.length - 1),
                            this._select(e)
                    }
                }, {
                    key: "_moveDown",
                    value: function() {
                        var e = this._getCurrentSelectionIndex();
                        ++e >= this.collection.length && (e = 0),
                            this._select(e)
                    }
                }, {
                    key: "_hideResultsList",
                    value: function() {
                        this.model.set("showResults", !1),
                            this._unselectAll()
                    }
                }, {
                    key: "_showResultsList",
                    value: function() {
                        var e = this;
                        this.showChildView("results", new a.a.CollectionView({
                                collection: this.collection,
                                childView: So,
                                emptyView: wo,
                                emptyViewOptions: function() {
                                    return {
                                        model: e.model
                                    }
                                },
                                onChildviewSelected: this._onChildViewSelected.bind(this)
                            })),
                            this.model.set("showResults", !0)
                    }
                }, {
                    key: "_unselectAll",
                    value: function() {
                        this.collection.forEach(function(e) {
                            e.set("selected", !1)
                        })
                    }
                }, {
                    key: "_select",
                    value: function(e) {
                        this._unselectAll(),
                            e >= 0 && e < this.collection.length && this.collection.at(e).set("selected", !0)
                    }
                }, {
                    key: "_unRegisterEvents",
                    value: function() {
                        this._getSearchLayer().events.un({
                            moveend: this._onMapMove,
                            scope: this
                        })
                    }
                }, {
                    key: "_getSearchLayer",
                    value: function() {
                        return this.map.getLayerByUniqueName(Eo.LAYER_UNIQUE_NAMES.SEARCH)
                    }
                }, {
                    key: "_doSearch",
                    value: function(e) {
                        this._parseCustomSearch(e) || this._serverRequest(e)
                    }
                }, {
                    key: "_parseCustomSearch",
                    value: function(e) {
                        for (var t = To, n = 0; n < t.length; n++) {
                            var i = t[n];
                            if (i.test.call(this, e))
                                return i.search.call(this, e),
                                    !0
                        }
                        return !1
                    }
                }, {
                    key: "_serverRequest",
                    value: function(e) {
                        var t = this,
                            n = this.map.getCenter();
                        n = Pe.getUnprojectedGeometry(n);
                        var i = {
                            q: e,
                            max_distance_kms: W.Config.search.maxDistance,
                            lon: n.lon,
                            lat: n.lat,
                            format: "PROTO_JSON_FULL"
                        };
                        Object(U.httpGet)(W.Config.search.server, i, {
                                dataType: "json"
                            }).then(function(e) {
                                t.collection.reset(e),
                                    t._showResultsList()
                            }).catch(function(e) {
                                t.collection.reset([]);
                                var n = 404 === e.status,
                                    i = !n;
                                t.model.set({
                                        showNoResultsError: n,
                                        showRetrieveError: i
                                    }),
                                    t._showResultsList()
                            }),
                            B.reportAnalytic.searchAction("search", "server_request")
                    }
                }, {
                    key: "_onChildViewSelected",
                    value: function(e) {
                        this._goToResult(e),
                            B.reportAnalytic.searchAction("result_click")
                    }
                }, {
                    key: "_goToSelection",
                    value: function() {
                        var e = this.collection.at(this._getCurrentSelectionIndex());
                        e && (this._goToResult(e),
                            B.reportAnalytic.searchAction("result_enter"))
                    }
                }, {
                    key: "_onResultSelect",
                    value: function(e, t, n, i) {
                        this._goToResult(e)
                    }
                }, {
                    key: "_goToResult",
                    value: function(e) {
                        var t = e.get("venue"),
                            n = Pe.project(Ke.toLonLat(t.location)),
                            i = Ke.fromLonLat(n),
                            r = new OL.Feature.Vector(i),
                            s = this._getSearchLayer();
                        s.removeAllFeatures(),
                            this.map.setCenter(n, W.Config.search.resultZoom),
                            this.map.focus(),
                            s.addFeatures(r)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.map.setLayerVisibility(Eo.LAYER_UNIQUE_NAMES.SEARCH, !0),
                            this.stickit()
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.ui.searchField.removeAttr("disabled")
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.ui.searchField.attr("disabled", "disabled")
                    }
                }, {
                    key: "_onMapMove",
                    value: function(e) {
                        e.zoomChanged || this._getSearchLayer().removeAllFeatures()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._unRegisterEvents(),
                            this.map.setLayerVisibility(Eo.LAYER_UNIQUE_NAMES.SEARCH, !1)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/search"
                    }
                }]),
                t
        }(a.a.View),
        Ao = n(175),
        Mo = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            userBoxAvatar: ".user-box-avatar",
                            userBoxContainer: ".user-box-container"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .user-box-avatar": "_toggleUserBox"
                        }
                    }
                }, {
                    key: "mapStateBindings",
                    value: function() {
                        return {
                            ".livemap-link": {
                                attributes: [{
                                    name: "href",
                                    observe: "livemapLink"
                                }]
                            }
                        }
                    }
                }, {
                    key: "_toggleUserBox",
                    value: function() {
                        var e = this.viewModel.get("visible");
                        this.viewModel.set("visible", !e)
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.viewModel = new g.a.Model({
                                visible: !1
                            }),
                            this.mapState = e.mapState
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.viewModel),
                            this.stickit(this.mapState, this.mapStateBindings()),
                            this.tippy = Ao.default.one(this.ui.userBoxAvatar[0], {
                                content: this.ui.userBoxContainer[0],
                                arrow: !0,
                                trigger: "click",
                                placement: "bottom",
                                interactive: !0,
                                distance: -5,
                                theme: "user-box",
                                onMount: this._onTooltipMount.bind(this)
                            })
                    }
                }, {
                    key: "_onTooltipMount",
                    value: function(e) {
                        Le()(e.popper).find(".js-logout-link").on("click", function() {
                            return W.loginManager.logout()
                        })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model,
                            t = e.normalizedLevel,
                            i = e.userName,
                            r = e.isStaff,
                            s = e.totalPoints,
                            o = e.totalForumPosts,
                            a = e.totalEdits,
                            l = n(778)("./L".concat(t, ".png"));
                        return this.model.hasProfileImageURL() && (l = this.model.getProfileImageURL()), {
                            profileImageURL: l,
                            normalizedLevel: t,
                            userName: i,
                            userEmail: this.model.getEmailAddress(),
                            isStaff: r,
                            totalPoints: s,
                            totalForumPosts: o,
                            totalEdits: a,
                            links: {
                                account: I18n.t("internal.account_relative_url"),
                                carpool: I18n.t("internal.carpool_relative_url"),
                                editor: I18n.t("internal.editor_relative_url"),
                                support: I18n.t("internal.support_url")
                            }
                        }
                    }
                }, {
                    key: "onBeforeDestroy",
                    value: function() {
                        this.tippy.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/user-box"
                    }
                }]),
                t
        }(a.a.View),
        Oo = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "className",
                    value: function() {
                        var e = [],
                            t = this.model.get("control");
                        e.push(null != this.parent ? "toolbar-group-item" : "toolbar-button"),
                            this.enabled && t.enabled ? this.isActive() ? e.push("ItemActive") : e.push("ItemInactive") : e.push("ItemDisabled"),
                            t.tooltip && e.push("waze-tooltip");
                        var n = this.model.get("toolbarMenuItemClass");
                        return n && e.push(n),
                            this.model.get("showLabel") && e.push("toolbar-button-with-label"),
                            this.model.get("iconClass") && e.push("toolbar-button-with-icon"),
                            t.displayClass && e.push(t.displayClass),
                            e.join(" ")
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            click: "_onToolbarButtonClick",
                            "click .secondary-control": "_onSecondaryControlClick"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            container: ".item-container",
                            icon: ".item-icon"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".menu-title": "title",
                            ".drawing-controls": {
                                observe: "showDrawingControls",
                                visible: !0,
                                visibleFn: G.b
                            },
                            ".main-control": this._createControlBindings("control", "controlDrawingType", "controlTitle"),
                            ".secondary-control": this._createControlBindings("secondaryControl", "secondaryControlDrawingType", "secondaryControlTitle")
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        return this.enabled = !0,
                            this.control = this.model.get("control"),
                            this.secondaryControl = this.model.get("secondaryControl"),
                            this.parent = e.parent,
                            this.map = e.map,
                            this.control && this._addControlToMap(this.control),
                            this.secondaryControl && this._addControlToMap(this.secondaryControl),
                            this._initializeModelAttributes(),
                            this._addEventListeners()
                    }
                }, {
                    key: "_initializeModelAttributes",
                    value: function() {
                        this.model.set({
                            controlDrawingType: this.control.drawingType,
                            controlTitle: this.control ? I18n.t("drawing.".concat(this.control.drawingType)) : "",
                            secondaryControlDrawingType: this.secondaryControl ? this.secondaryControl.drawingType : "",
                            secondaryControlTitle: this.secondaryControl ? I18n.t("drawing.".concat(this.secondaryControl.drawingType)) : ""
                        })
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        return this._removeEventListeners(),
                            this.control.deactivate(),
                            this.control.destroy()
                    }
                }, {
                    key: "_addControlToMap",
                    value: function(e) {
                        !0 === e.autoActivate ? (e.autoActivate = !1,
                            this.map.addControl(e),
                            e.autoActivate = !0) : (this.map.addControl(e),
                            e.deactivate())
                    }
                }, {
                    key: "_addEventListeners",
                    value: function() {
                        return this.control.events.on({
                            activate: this.syncModelAndRender,
                            deactivate: this.syncModelAndRender,
                            visibilitychanged: this.render,
                            enablechanged: this.render,
                            tooltipchanged: this.render,
                            scope: this
                        })
                    }
                }, {
                    key: "_removeEventListeners",
                    value: function() {
                        return this.control.events.un({
                            activate: this.syncModelAndRender,
                            deactivate: this.syncModelAndRender,
                            visibilitychanged: this.render,
                            enablechanged: this.render,
                            tooltipchanged: this.render,
                            scope: this
                        })
                    }
                }, {
                    key: "syncModelAndRender",
                    value: function() {
                        return this.model.set("active", this.isActive()),
                            this.render()
                    }
                }, {
                    key: "isActive",
                    value: function() {
                        return this.control && this.control.active || this.secondaryControl && this.secondaryControl.active
                    }
                }, {
                    key: "renderTooltip",
                    value: function() {
                        var e = this.model.get("control").tooltip;
                        e ? (this.ui.container.attr("title", ""),
                            this.ui.container.tooltip({
                                placement: "bottom",
                                html: !0,
                                title: Object(so.getHTML)("Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-tooltip", {
                                    text: e,
                                    icon: "lock-light"
                                })
                            })) : this.$el.attr("title", this.model.get("title"))
                    }
                }, {
                    key: "onBeforeRender",
                    value: function() {
                        this.ui.container && (this.ui.container.tooltip("destroy"),
                            this.ui.container.attr("title", this.model.get("title")))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        if (this.$el.attr({
                                class: L.a.result(this, "className")
                            }),
                            null == this.parent && this.renderTooltip(),
                            null != this.control.onRender)
                            return this.control.onRender(this.$el);
                        this.ui.icon.addClass(this.model.get("iconClass")),
                            this.stickit()
                    }
                }, {
                    key: "_onToolbarButtonClick",
                    value: function() {
                        return this._triggerControl(this.control)
                    }
                }, {
                    key: "_onSecondaryControlClick",
                    value: function(e) {
                        return e.stopPropagation(),
                            this._triggerControl(this.secondaryControl)
                    }
                }, {
                    key: "_triggerControl",
                    value: function(e) {
                        if (e) {
                            if (!e.enabled)
                                return !1;
                            switch (e.type) {
                                case OL.Control.TYPE_BUTTON:
                                    e.trigger();
                                    break;
                                case OL.Control.TYPE_TOGGLE:
                                    this.model.get("active") ? e.deactivate() : e.activate();
                                    break;
                                default:
                                    return e.activate(),
                                        !1
                            }
                            this.trigger("controlTriggered")
                        }
                    }
                }, {
                    key: "_createControlBindings",
                    value: function(e, t, n) {
                        return {
                            observe: e,
                            visible: !0,
                            visibleFn: G.b,
                            classes: {
                                point: {
                                    observe: t,
                                    onGet: function(e) {
                                        return "point" === e
                                    }
                                },
                                polygon: {
                                    observe: t,
                                    onGet: function(e) {
                                        return "polygon" === e
                                    }
                                }
                            },
                            attributes: [{
                                name: "title",
                                observe: n
                            }, {
                                name: "name",
                                observe: "featureName"
                            }]
                        }
                    }
                }, {
                    key: "enable",
                    value: function() {
                        return this.enabled = !0,
                            this.render()
                    }
                }, {
                    key: "disable",
                    value: function() {
                        return this.enabled = !1,
                            this.render()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item"
                    }
                }]),
                t
        }(a.a.View),
        Co = {
            "map-comments": "w-icon-chat",
            venues: "w-icon-location",
            drawing: "w-icon-road"
        },
        Ro = a.a.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/Toolbar/templates/toolbar-item-group",
            enabled: !0,
            className: function() {
                var e;
                return e = this.enabled && this._hasEnabledChildren() ? this._hasActiveChildren() ? "ItemActive" : "ItemInactive" : "ItemDisabled",
                    "toolbar-submenu toolbar-group toolbar-group-".concat(this._getGroupItemName(), " ").concat(e)
            },
            events: {
                mouseover: "_showMenu",
                mouseout: "_hideMenu"
            },
            childViewEvents: {
                controlTriggered: "_hideMenu"
            },
            childView: Oo,
            childViewContainer: "menu",
            collectionEvents: {
                "change:active": function(e, t) {
                    return this.setClassName()
                }
            },
            onRender: function() {
                return this.setClassName()
            },
            _getGroupItemName: function() {
                return this.model.get("name")
            },
            templateContext: function() {
                return {
                    iconClass: Co[this._getGroupItemName()]
                }
            },
            setClassName: function() {
                return this.$el.attr({
                    class: L.a.result(this, "className")
                })
            },
            _showMenu: function() {
                return this.$el.addClass("open")
            },
            _hideMenu: function() {
                return this.$el.removeClass("open")
            },
            _hasActiveChildren: function() {
                return this.model.children.some(function(e) {
                    return e.get("control").active
                })
            },
            _hasEnabledChildren: function() {
                return this.model.children.some(function(e) {
                    return e.get("control").enabled
                })
            },
            enable: function() {
                return this.children.invoke("enable"),
                    this.enabled = !0,
                    this.setClassName()
            },
            disable: function() {
                return this.children.invoke("disable"),
                    this.enabled = !1,
                    this.setClassName()
            },
            initialize: function(e) {
                var t = this;
                this.collection = this.model.children,
                    this.map = e.map,
                    this.childViewOptions = function(e, n) {
                        return {
                            parent: t.model,
                            map: t.map
                        }
                    }
            },
            buildChildView: function(e, t, n) {
                var i = L.a.extend({
                    model: e
                }, n);
                return new(e.get("childView") ? e.get("childView") : t)(i)
            }
        }),
        Do = n(68),
        Lo = function(e) {
            function t(e) {
                var n;
                return E()(this, t),
                    (n = T()(this, A()(t).call(this, e))).actionManager = e.actionManager,
                    n._control = e.control,
                    n._enableChangesLog = e.enableChangesLog,
                    n._saveController = n._control.saveController,
                    n._changesLogView = null,
                    n.model = new g.a.Model({
                        title: e.title,
                        hasErrors: !1,
                        success: !1,
                        failed: !1,
                        saving: !1,
                        enabled: !1,
                        unsavedActionsCounter: 0
                    }),
                    n._bindEvents(),
                    n
            }
            return O()(t, e),
                S()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            click: "_save",
                            mouseenter: "_onMouseEnter",
                            mouseleave: "_onMouseLeave"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            changesLogRegion: ".changes-log-region"
                        }
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "toolbar-button toolbar-button-with-label waze-icon-save"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ":el": {
                                classes: {
                                    ItemDisabled: {
                                        observe: "enabled",
                                        onGet: L.a.negate(L.a.identity)
                                    },
                                    loading: {
                                        observe: "saving"
                                    },
                                    "has-error": {
                                        observe: "hasErrors"
                                    },
                                    success: {
                                        observe: "success"
                                    }
                                }
                            },
                            ".counter": {
                                observe: "unsavedActionsCounter",
                                visible: !0,
                                visibleFn: G.b,
                                updateView: !0
                            },
                            ".menu-title": "title"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Toolbar/templates/save"
                    }
                }]),
                S()(t, [{
                    key: "_bindEvents",
                    value: function() {
                        this._saveController && (this.listenTo(this._saveController, Do.a.SAVE_START, this._onSaveStarted),
                                this.listenTo(this._saveController, Do.a.SAVE_FAIL, this._onSaveFailed),
                                this.listenTo(this._saveController, Do.a.SAVE_SUCCESS, this._onSaveSuccess)),
                            this.actionManager.events.on({
                                scope: this,
                                afteraction: this._onActionChange,
                                afterundoaction: this._onActionChange,
                                afterclearactions: this._onActionChange
                            })
                    }
                }, {
                    key: "_onSaveStarted",
                    value: function() {
                        this.model.set({
                            saving: !0,
                            success: !1
                        })
                    }
                }, {
                    key: "_onSaveFailed",
                    value: function() {
                        var e = this;
                        this._updateHasErrors(),
                            this.model.set({
                                saving: !1,
                                failed: !0
                            }),
                            this._doAfterAnimation(function() {
                                e.model.set("failed", !1)
                            }),
                            this._showChangesLog()
                    }
                }, {
                    key: "_onSaveSuccess",
                    value: function() {
                        var e = this;
                        this._updateHasErrors(),
                            this.model.set({
                                saving: !1,
                                success: !0
                            }),
                            this._doAfterAnimation(function() {
                                e.model.set("success", !1)
                            })
                    }
                }, {
                    key: "_doAfterAnimation",
                    value: function(e) {
                        window.setTimeout(e, 1500)
                    }
                }, {
                    key: "_updateHasErrors",
                    value: function() {
                        this._saveController && this.model.set("hasErrors", this._saveController.hasErrors())
                    }
                }, {
                    key: "_unbindEvents",
                    value: function() {
                        this.actionManager.events.un({
                            scope: this,
                            afteraction: this._onActionChange,
                            afterundoaction: this._onActionChange,
                            afterclearactions: this._onActionChange
                        })
                    }
                }, {
                    key: "_save",
                    value: function() {
                        this.model.get("enabled") && (B.reportAnalytic.generalAction("save_clicked", this.actionManager.unsavedActionsNum()),
                            this._control.trigger(),
                            go.ENABLE_SAVE_IN_GROUPS || this._destroyChangesLog())
                    }
                }, {
                    key: "_onActionChange",
                    value: function() {
                        this._updateHasErrors(),
                            this._updateNumberOfActions(),
                            this._updateEnableDisableState()
                    }
                }, {
                    key: "_updateNumberOfActions",
                    value: function() {
                        var e = this.actionManager.unsavedActionsNum();
                        this.model.set("unsavedActionsCounter", e)
                    }
                }, {
                    key: "_updateEnableDisableState",
                    value: function() {
                        this.actionManager.canSave() ? this._enable() : this._disable()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.model)
                    }
                }, {
                    key: "_onMouseEnter",
                    value: function() {
                        this._showChangesLog()
                    }
                }, {
                    key: "_showChangesLog",
                    value: function() {
                        !this._changesLogView && this._enableChangesLog && this.actionManager.getActionsNum() > 0 && (this._destroyChangesLog(),
                            this._changesLogView = W.changesLogController.createChangesLogView(),
                            this.showChildView("changesLogRegion", this._changesLogView))
                    }
                }, {
                    key: "_onMouseLeave",
                    value: function() {
                        this._destroyChangesLog()
                    }
                }, {
                    key: "_destroyChangesLog",
                    value: function() {
                        this._changesLogView && (this._changesLogView.destroy(),
                            this._changesLogView = null)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._unbindEvents()
                    }
                }, {
                    key: "_enable",
                    value: function() {
                        this.model.set("enabled", !0)
                    }
                }, {
                    key: "_disable",
                    value: function() {
                        this.model.set("enabled", !1)
                    }
                }]),
                t
        }(a.a.View);

    function Po(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var No = a.a.CollectionView.extend({
        childView: Oo,
        itemGroupView: Ro,
        initialize: function(e) {
            this.map = e.map
        },
        buildChildView: function(e) {
            var t = {
                    model: e,
                    map: this.map
                },
                n = null != e.children;
            return e.get("isSaveButton") ? new Lo(function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? Po(Object(n), !0).forEach(function(t) {
                        s()(e, t, n[t])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Po(Object(n)).forEach(function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    })
                }
                return e
            }({}, e.attributes, {
                map: this.map
            })) : n ? new this.itemGroupView(t) : new this.childView(t)
        },
        enable: function() {
            return this.children.invoke("enable")
        },
        disable: function() {
            return this.children.invoke("disable")
        }
    });

    function xo(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                })),
                n.push.apply(n, i)
        }
        return n
    }
    var Vo, jo = a.a.CollectionView.extend({
            childView: Oo,
            initialize: function(e) {
                this.map = e.map,
                    this.mediator = e.mediator,
                    this.mediator.on("change:saving", this._onSavingChanged, this),
                    this._onSavingChanged()
            },
            buildChildView: function(e) {
                var t = {
                    model: e,
                    map: this.map
                };
                return e.get("isSaveButton") ? new Lo(function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? xo(Object(n), !0).forEach(function(t) {
                            s()(e, t, n[t])
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : xo(Object(n)).forEach(function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                        })
                    }
                    return e
                }({}, e.attributes, {
                    map: this.map
                })) : new this.childView(t)
            },
            onDestroy: function() {
                this.mediator.off("change:saving", this._onSavingChanged, this)
            },
            _onSavingChanged: function() {
                this.mediator.get("saving") ? this.disable() : this.enable()
            },
            enable: function() {
                return this.children.invoke("enable")
            },
            disable: function() {
                return this.children.invoke("disable")
            }
        }),
        Uo = n(222),
        Fo = n.n(Uo),
        Bo = n(464),
        Go = n.n(Bo),
        Wo = n(203),
        Ho = n(101),
        zo = OpenLayers.Class(OpenLayers.Control.DrawFeature, ro.a, {
            keyHandler: null,
            snapControl: null,
            snappedFrom: null,
            editingMediator: null,
            targetLayer: null,
            type: OL.Control.TYPE_TOGGLE,
            drawingAccuracy: 2,
            keyUp: function(e) {
                this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && this.handler.cancel()
            },
            handleShortcut: function(e) {
                this.isEnabled() && this.activate()
            },
            isEnabled: function() {
                return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
            },
            featureCancelled: function(e) {},
            onDrawCancel: function(e) {
                this.deactivate(),
                    this.featureCancelled(e)
            },
            createFeature: function(e) {
                return new Ei.a({
                    geometry: e
                })
            },
            drawFeature: function(e) {
                var t = this.createFeature(e);
                !1 !== this.layer.events.triggerEvent("sketchcomplete", {
                        feature: t
                    }) && ("OpenLayers.Geometry.LineString" === t.geometry.CLASS_NAME && (t.geometry = $e.simplify(t.geometry, this.drawingAccuracy * this.map.getResolution())),
                        t.state = OpenLayers.State.INSERT,
                        this.enableSnapping ? (this.snappedFrom && (this.snappedFrom.feature = this.snappedFrom.feature.model,
                                this.snappedFrom.feature && this.snappedFrom.feature.setSnapped(!1)),
                            this.snapControl.snappedFeature && (this.snapControl.snappedFeature.feature = this.snapControl.snappedFeature.feature.model),
                            this.snapControl.snappedFeature && this.snapControl.snappedFeature.feature.outOfScope && (this.snapControl.snappedFeature = null),
                            this.snappedFrom && this.snappedFrom.feature.outOfScope && (this.snappedFrom = null),
                            this.snapControl.snappedFeature && this.snappedFrom && this.snapControl.snappedFeature.feature === this.snappedFrom.feature && (this.snappedFrom = null),
                            this.featureAdded(t, this.snappedFrom, this.snapControl.snappedFeature)) : this.featureAdded(t)),
                    this.deactivate()
            },
            initialize: function(e, t, n, i) {
                ro.a.prototype.initialize.apply(this, [i]),
                    this.callbacks = Object.assign({
                        cancel: this.onDrawCancel
                    }, this.callbacks),
                    this.editingMediator = W.editingMediator,
                    this.drawingLayer = e,
                    this.targetLayer = t,
                    this.segmentLayer = i.segmentLayer,
                    this.nodeLayer = i.nodeLayer,
                    OpenLayers.Control.DrawFeature.prototype.initialize.apply(this, [e, n, i]),
                    this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                        keyup: this.keyUp
                    }),
                    this.accelerator && W.accelerators.events.register(this.accelerator, this, this.handleShortcut)
            },
            setMap: function() {
                OL.Control.DrawFeature.prototype.setMap.apply(this, arguments),
                    this.enableSnapping && this._createSnappingControl()
            },
            _createSnappingControl: function() {
                this.snapControl = new Wo.a({
                        layer: this.drawingLayer,
                        targets: [{
                            layer: this.nodeLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.isConnectedToBigJunction()
                                }
                            }
                        }, {
                            layer: this.segmentLayer,
                            filter: {
                                evaluate: function(e) {
                                    return new Ho.CanEditGeometryUseCase(e.model.model).canEditSegmentGeometry(e.model)
                                }
                            }
                        }]
                    }),
                    this.snapControl.events.on({
                        snap: function() {
                            var e = this.handler.getGeometry();
                            e && e.components && 1 === e.components.length && (this.snapControl.snappedFeature.feature.model && this.snapControl.snappedFeature.feature.model.setSnapped(!0),
                                this.snappedFrom = this.snapControl.snappedFeature)
                        },
                        scope: this
                    })
            },
            setEnabled: function(e, t) {
                ro.a.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyHandler.activate() : this.keyHandler.deactivate()
            },
            activate: function() {
                this.active || (OpenLayers.Control.DrawFeature.prototype.activate.apply(this, arguments),
                    this.keyHandler.activate(),
                    this.targetLayer.getVisibility() || this.targetLayer.setVisibility(!0),
                    this.editingMediator.setDrawingInProgress(),
                    this.enableSnapping && (this.map.addControl(this.snapControl),
                        this.snapControl.activate()))
            },
            deactivate: function() {
                if (this.snappedFrom) {
                    var e = this.snappedFrom.feature;
                    e.setSnapped || (e = e.model),
                        e.setSnapped(!1)
                }
                this.snappedFrom = null,
                    this.active && (this.editingMediator.setDrawingDone(),
                        this.keyHandler.deactivate(),
                        this.enableSnapping && (this.snapControl.deactivate(),
                            this.map.removeControl(this.snapControl)),
                        OpenLayers.Control.DrawFeature.prototype.deactivate.apply(this, arguments))
            },
            CLASS_NAME: "Waze.Control.DrawFeature"
        }),
        qo = n(60),
        Yo = n(116),
        $o = n(185),
        Ko = OpenLayers.Class(OpenLayers.Handler, {
            drawing: !1,
            dragging: !1,
            layer: null,
            style: null,
            point: null,
            lastDown: null,
            lastMove: null,
            distanceLine: null,
            radius: 0,
            rx: 0,
            ry: 0,
            regular: !1,
            oldOnselectstart: null,
            initialize: function(e, t, n) {
                n && n.layerOptions && n.layerOptions.styleMap || (this.style = Object.assign(OpenLayers.Feature.Vector.style.default, {})),
                    OpenLayers.Handler.prototype.initialize.apply(this, arguments)
            },
            setRegular: function(e) {
                this.regular !== e && (this.regular = e,
                    this.modifyFeature(this.lastMove))
            },
            activate: function() {
                if (!OpenLayers.Handler.prototype.activate.apply(this, arguments))
                    return !1;
                var e = Object.assign({
                        calculateInRange: function() {
                            return !0
                        }
                    }, this.layerOptions),
                    t = OpenLayers.Layer.Vector.prototype.renderers;
                return OpenLayers.Layer.Vector.prototype.renderers = [qo.a],
                    this.layer = new OpenLayers.Layer.Vector(this.CLASS_NAME, e),
                    OpenLayers.Layer.Vector.prototype.renderers = t,
                    this.map.addLayer(this.layer),
                    this.map.events.on({
                        zoomend: this.onZoom,
                        scope: this
                    }),
                    !0
            },
            deactivate: function() {
                return !!OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.drawing && this.cancel(),
                    this.destroyFeature(),
                    null !== this.layer.map && this.layer.destroy(!1),
                    this.map.events.un({
                        zoomend: this.zoomend
                    }),
                    this.layer = null,
                    !0)
            },
            onZoom: function() {
                this.drawing && this.cancel()
            },
            dblclick: function(e) {
                return OpenLayers.Event.stop(e),
                    !1
            },
            mouseup: function(e) {
                if (this.drawing && this.dragging)
                    return this.finalize(),
                        !1
            },
            mousedown: function(e) {
                return this.drawing ? (this.finalize(),
                    !1) : (this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : function() {
                        return !0
                    }),
                    document.onselectstart = function() {
                        return !1
                    },
                    !this.checkModifiers(e) || (!(!this.lastDown || !this.lastDown.equals(e.xy)) || (this.drawing = !0,
                        null === this.lastDown && this.createFeature(e.xy),
                        this.lastDown = e.xy,
                        !1)))
            },
            createFeature: function(e) {
                var t, n = this.map.getLonLatFromPixel(e),
                    i = xe.createLineString();
                t = this.style ? Object.assign({}, this.style) : Object.assign({}, this.layerOptions.styleMap.styles.default.defaultStyle);
                var r = Yo.metersToPixels(this.map, $o.MIN_ROUNDABOUT_RADIUS_IN_METERS);
                t.rx = r,
                    t.ry = r,
                    this.point = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(n.lon, n.lat), {}, t),
                    Un.addPoint(i, $e.cloneGeometry(this.point.geometry)),
                    Un.addPoint(i, $e.cloneGeometry(this.point.geometry)),
                    this.distanceLine = new OpenLayers.Feature.Vector(i),
                    this.callback("create", [this.point.geometry, this.point]),
                    this.point.geometry.clearBounds(),
                    this.layer.addFeatures([this.point], {
                        silent: !0
                    })
            },
            finalize: function(e) {
                document.onselectstart = this.oldOnselectstart;
                var t, n = e ? "cancel" : "done";
                this.point && (t = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y)),
                    this.drawing = !1,
                    this.dragging = !1,
                    this.regular = !1,
                    this.destroyFeature(),
                    Math.min(this.rx, this.ry) >= Yo.metersToPixels(this.map, $o.MIN_ROUNDABOUT_RADIUS_IN_METERS) && this.callback(n, [{
                        x: t.lon,
                        y: t.lat,
                        rx: this.rx,
                        ry: this.ry
                    }]),
                    this.lastDown = null,
                    this.rx = 0,
                    this.ry = 0
            },
            destroyFeature: function() {
                this.layer && this.layer.destroyFeatures(),
                    this.point = null,
                    this.distanceLine = null
            },
            cancel: function() {
                this.finalize(!0)
            },
            modifyFeature: function(e, t) {
                var n, i, r, s = Un.getLastVertex(this.distanceLine.geometry),
                    o = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y);
                this.lastMove = e;
                var a = this.map.getPixelFromLonLat(o),
                    l = e.y - a.y,
                    u = e.x - a.x;
                Math.atan2(l, u),
                    this.rx = Math.abs(u),
                    this.ry = Math.abs(l);
                var c = Yo.metersToPixels(this.map, $o.MIN_ROUNDABOUT_RADIUS_IN_METERS);
                this.rx < c && (this.rx = c),
                    this.ry < c && (this.ry = c);
                var d = Yo.metersToPixels(this.map, $o.MAX_ROUNDABOUT_RADIUS_IN_METERS);
                this.rx > d && (this.rx = d),
                    this.ry > d && (this.ry = d);
                var h = Math.max(this.rx, this.ry),
                    p = Yo.pixelsToMeters(this.map, h);
                t.shiftKey || (this.rx = h,
                        this.ry = h),
                    this.ry > this.rx ? (i = this.rx / this.ry,
                        r = 1) : (r = this.ry / this.rx,
                        i = 1),
                    n = Math.atan2(l / r, u / i),
                    this.callback("modify", [this.point.geometry, this.point]),
                    s.x = o.lon + this.rx * Math.cos(n) * this.map.getResolution(),
                    s.y = o.lat - this.ry * Math.sin(n) * this.map.getResolution(),
                    s.clearBounds(),
                    this.distanceLine.geometry.clearBounds(),
                    this.point.geometry.clearBounds(),
                    this.point.style.rx = this.rx,
                    this.point.style.ry = this.ry,
                    this.point.style.label = this._getRadiusLabel(p),
                    this.drawCircle()
            },
            _getRadiusLabel: function(e) {
                var t = at.default.localizeUnit(at.UNIT.METER),
                    n = at.default.getLocalizedValue(e, at.UNIT.METER),
                    i = Math.floor(n);
                return I18n.t("measurements.length.".concat(t), {
                    count: i
                })
            },
            drawCircle: function() {
                this.layer.drawFeature(this.point),
                    this.layer.drawFeature(this.distanceLine)
            },
            mousemove: function(e) {
                return this.drawing && (this.dragging = !0,
                        this.modifyFeature(e.xy, e),
                        this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                            document.onselectstart = function() {
                                return !1
                            }
                        )),
                    !1
            },
            CLASS_NAME: "Waze.Handler.Ellipse"
        }),
        Jo = OpenLayers.Class(OpenLayers.Control, ro.a, {
            keyHandler: null,
            handler: null,
            type: OL.Control.TYPE_TOGGLE,
            editingMediator: null,
            keyUp: function(e) {
                this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && (this.handler.cancel(),
                    this.deactivate())
            },
            handleShortcut: function(e) {
                this.isEnabled() && this.activate()
            },
            onDrawCancel: function(e) {
                this.deactivate(),
                    this.featureCancelled(e)
            },
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    ro.a.prototype.initialize.apply(this, [e]),
                    this.callbacks = Object.assign({
                        cancel: this.onDrawCancel
                    }, this.callbacks),
                    this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                        keyup: this.keyUp
                    }),
                    W.accelerators.events.register("drawRoundabout", this, this.handleShortcut),
                    this.handler = new Ko(this, {
                        done: this.onEllipseDrawn,
                        cancel: this.onCancel
                    }),
                    this.editingMediator = W.editingMediator
            },
            onDrawStart: function() {
                OpenLayers.Element.addClass(this.map.viewPortDiv, "".concat(this.displayClass, "Over"))
            },
            onDrawEnd: function() {
                OpenLayers.Element.removeClass(this.map.viewPortDiv, "".concat(this.displayClass, "Over"))
            },
            isEnabled: function() {
                return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
            },
            onEllipseDrawn: function(e) {
                this.onDrawEnd();
                var t = new OpenLayers.LonLat(e.x, e.y),
                    n = e.rx * this.map.getResolution(),
                    i = e.ry * this.map.getResolution();
                t.x = t.lon,
                    t.y = t.lat;
                var r = new OpenLayers.Bounds(e.x - n, e.y - i, e.x + n, e.y + i);
                this.deactivate(),
                    this.onRoundaboutAdded({
                        center: t,
                        rx: n,
                        ry: i,
                        bounds: r
                    })
            },
            onCancel: function() {
                this.onDrawEnd(),
                    this.deactivate()
            },
            onRoundaboutAdded: function() {},
            setEnabled: function(e, t) {
                ro.a.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyHandler.activate() : this.keyHandler.deactivate()
            },
            activate: function() {
                this.active || (OpenLayers.Control.prototype.activate.apply(this, arguments),
                    this.editingMediator.setDrawingInProgress(),
                    this.keyHandler.activate())
            },
            deactivate: function() {
                this.active && (this.keyHandler.deactivate(),
                    this.editingMediator.setDrawingDone(),
                    OpenLayers.Control.prototype.deactivate.apply(this, arguments))
            },
            CLASS_NAME: "Waze.Control.DrawRoundabout"
        }),
        Zo = n(224),
        Qo = n(65),
        Xo = n.n(Qo),
        ea = function(e) {
            function t(e, n) {
                var i;
                E()(this, t);
                var r = new st.SpeedCamera({
                    geometry: e,
                    rank: t.getNewCameraAutoRank(n.loginManager.getUserRank(), n.getTopCountry().allowCamerasRank)
                });
                return (i = T()(this, A()(t).call(this, r, n.cameras)))._camera = r,
                    i
            }
            return O()(t, e),
                S()(t, [{
                    key: "getCamera",
                    value: function() {
                        return this._camera
                    }
                }], [{
                    key: "getNewCameraAutoRank",
                    value: function(e, t) {
                        return null != t ? Math.max(e, t) : e
                    }
                }]),
                t
        }(Xo.a),
        ta = n(123),
        na = n.n(ta),
        ia = n(91),
        ra = n.n(ia),
        sa = g.a.Model.extend({
            defaults: {
                name: null,
                displayClass: null,
                featureName: null,
                parent: null,
                children: null,
                control: null,
                secondaryControl: null
            },
            initialize: function() {
                var e = this.get("children");
                if (null != e)
                    return this.children = new oa(e),
                        this.unset("children")
            }
        }),
        oa = g.a.Collection.extend({
            model: sa
        }),
        aa = n(97),
        la = function() {
            function e(t) {
                var n = this;
                E()(this, e),
                    this.actionManager = t.actionManager,
                    this.map = t.map,
                    this.selectionManager = t.selectionManager,
                    this.dataModel = t.dataModel,
                    this.controller = t.controller,
                    this.loginManager = t.loginManager,
                    this.editingMediator = t.editingMediator,
                    this.saveController = t.saveController,
                    this.app = t.app,
                    this.app.on("change:loggedIn", function() {
                        n._enableControlsByRank(n.app.get("user"))
                    })
            }
            return S()(e, [{
                    key: "getToolbarButtons",
                    value: function() {
                        var e = [].concat(this._generateCommentsMenu(), this._generateVenueMenu(), this._generateDrawingControls(), this._generateEditingControls());
                        return new oa(e)
                    }
                }, {
                    key: "getHouseNumbersToolbarButtons",
                    value: function(e) {
                        return new oa(this._generateEditingHouseNumbersControls())
                    }
                }, {
                    key: "_enableControlsByRank",
                    value: function(e) {
                        W.Config.big_junctions.enable && this.drawBigJunction.control.setEnabled(null != e && this.loginManager.canEditBigJunctions())
                    }
                }, {
                    key: "_generateEditingControls",
                    value: function() {
                        var e = this.actionManager,
                            t = this.dataModel,
                            n = this.selectionManager,
                            i = this.map,
                            r = this.editingMediator,
                            s = this.saveController;
                        return [Object(aa.createDeleteButtonModel)({
                            dataModel: t,
                            selectionManager: n
                        }), Object(aa.createUndoButtonModel)({
                            actionManager: e
                        }), Object(aa.createRedoButtonModel)({
                            actionManager: e
                        }), Object(aa.createSaveButtonModel)({
                            actionManager: e,
                            map: i,
                            editingMediator: r,
                            saveController: s
                        })]
                    }
                }, {
                    key: "_generateEditingHouseNumbersControls",
                    value: function() {
                        var e = this.actionManager,
                            t = this.map,
                            n = this.editingMediator;
                        return [Object(aa.createHouseNumberButtonModel)({
                            map: t
                        }), Object(aa.createExitHouseNumberButtonModel)(), Object(aa.createUndoButtonModel)({
                            actionManager: e
                        }), Object(aa.createRedoButtonModel)({
                            actionManager: e
                        }), Object(aa.createSaveHouseNumberButtonModel)({
                            actionManager: e,
                            editingMediator: n
                        })]
                    }
                }, {
                    key: "_generateDrawingControls",
                    value: function() {
                        var e = this,
                            t = [{
                                title: I18n.t("drawing.road"),
                                toolbarMenuItemClass: "road",
                                control: new zo(this.map.getSketchLayer(), this.map.getSegmentLayer(), OL.Handler.Path, {
                                    segmentLayer: this.map.getSegmentLayer(),
                                    nodeLayer: this.map.getNodeLayer(),
                                    accelerator: "drawSegment",
                                    enableSnapping: !0,
                                    featureAdded: function(t, n, i) {
                                        e.actionManager.add(new ra.a(t, {
                                                createNodes: !0,
                                                openAllTurns: W.prefs.get("enableTurnsByDefault"),
                                                createTwoWay: W.prefs.get("twoWaySegmentsByDefault"),
                                                snappedFeatures: [n, i]
                                            })),
                                            L.a.defer(function() {
                                                return e.selectionManager.setSelectedModels([t])
                                            })
                                    }
                                })
                            }, {
                                title: I18n.t("drawing.walking_trail"),
                                toolbarMenuItemClass: "walking-trail",
                                control: new zo(this.map.getSketchLayer(), this.map.getSegmentLayer(), OL.Handler.Path, {
                                    segmentLayer: this.map.getSegmentLayer(),
                                    nodeLayer: this.map.getNodeLayer(),
                                    accelerator: "drawSegment",
                                    enableSnapping: !0,
                                    featureAdded: function(t, n, i) {
                                        t.attributes.roadType = _i.ROAD_TYPE.WALKING_TRAIL,
                                            e.actionManager.add(new ra.a(t, {
                                                createNodes: !0,
                                                openAllTurns: !1,
                                                createTwoWay: !0,
                                                snappedFeatures: [n, i]
                                            })),
                                            L.a.defer(function() {
                                                return e.selectionManager.setSelectedModels([t])
                                            })
                                    }
                                })
                            }, {
                                title: I18n.t("drawing.roundabout"),
                                toolbarMenuItemClass: "roundabout",
                                control: new Jo({
                                    onRoundaboutAdded: function(t) {
                                        var n = new Zo.a(t);
                                        e.actionManager.add(n),
                                            L.a.defer(function() {
                                                var t = n.getRoundaboutSegments();
                                                t && t.length > 0 && e.selectionManager.setSelectedModels(t)
                                            })
                                    }
                                })
                            }, {
                                title: I18n.t("drawing.camera"),
                                toolbarMenuItemClass: "camera",
                                control: new zo(this.map.getSketchLayer(), this.map.getCamerasLayer(), OL.Handler.Point, {
                                    segmentLayer: this.map.getSegmentLayer(),
                                    nodeLayer: this.map.getNodeLayer(),
                                    enableSnapping: !0,
                                    featureAdded: function(t) {
                                        var n = new ea(t.geometry, e.dataModel);
                                        e.actionManager.add(n),
                                            L.a.defer(function() {
                                                var t = n.getCamera();
                                                t && e.selectionManager.setSelectedModels([t])
                                            })
                                    }
                                })
                            }];
                        return W.Config.big_junctions.enable && (this.drawBigJunction = {
                                    title: I18n.t("drawing.big_junction"),
                                    toolbarMenuItemClass: "junction-box",
                                    control: new zo(this.map.getSketchLayer(), this.map.getBigJunctionLayer(), OL.Handler.Polygon, {
                                        accelerator: "drawBigJunction",
                                        featureAdded: function(t) {
                                            var n = new et.BigJunction({
                                                geometry: t.geometry
                                            });
                                            e.actionManager.add(new Go.a(n)),
                                                L.a.defer(function() {
                                                    e.selectionManager.setSelectedModels([n])
                                                })
                                        }
                                    })
                                },
                                t.push(this.drawBigJunction)),
                            [{
                                name: "drawing",
                                children: t
                            }]
                    }
                }, {
                    key: "_generateCommentsMenu",
                    value: function() {
                        return this.createMenu({
                            name: "map-comments",
                            items: [{
                                title: I18n.t("drawing.map_comment_point"),
                                featureName: I18n.t("drawing.map_comment"),
                                primaryShape: "point",
                                secondaryShape: "",
                                layerUniqueName: Eo.LAYER_UNIQUE_NAMES.MAP_COMMENTS,
                                createFeature: function(e, t) {
                                    var n = new Js.a({
                                            geometry: e
                                        }),
                                        i = new Xo.a(n, t.mapComments);
                                    return t.actionManager.add(i),
                                        i.object
                                }
                            }, {
                                title: I18n.t("drawing.map_comment_area"),
                                featureName: I18n.t("drawing.map_comment"),
                                primaryShape: "polygon",
                                secondaryShape: "",
                                layerUniqueName: Eo.LAYER_UNIQUE_NAMES.MAP_COMMENTS,
                                createFeature: function(e, t) {
                                    var n = new Js.a({
                                            geometry: e
                                        }),
                                        i = new Xo.a(n, t.mapComments);
                                    return t.actionManager.add(i),
                                        i.object
                                }
                            }]
                        })
                    }
                }, {
                    key: "_generateVenueMenu",
                    value: function() {
                        var e = zt.VENUE_MAIN_CATEGORIES_LIST.map(this._generateVenueMenuItem.bind(this));
                        return this.createMenu({
                            name: "venues",
                            items: e
                        })
                    }
                }, {
                    key: "_generateVenueMenuItem",
                    value: function(e) {
                        var t = {
                            primaryShape: "point",
                            secondaryShape: "polygon",
                            title: I18n.t("venues.categories.".concat(e)),
                            featureName: I18n.t("drawing.venue"),
                            toolbarMenuItemClass: z.default.categoryToClassName(e),
                            layerUniqueName: Eo.LAYER_UNIQUE_NAMES.LANDMARKS,
                            createFeature: function(t, n) {
                                var i = new na.a({
                                    geometry: t,
                                    categories: [e]
                                });
                                return n.actionManager.add(new Fo.a(i)),
                                    i
                            }
                        };
                        return e === zt.VENUE_PARKING_LOT && (t.primaryShape = "polygon",
                                t.secondaryShape = null),
                            t
                    }
                }, {
                    key: "createMenu",
                    value: function(e) {
                        var t = this;
                        return {
                            name: e.name,
                            displayClass: e.displayClass,
                            children: e.items.map(function(e) {
                                return t.createMenuItem(e)
                            })
                        }
                    }
                }, {
                    key: "createMenuItem",
                    value: function(e) {
                        var t, n = this,
                            i = function(t) {
                                return t = e.createFeature(t.geometry, n.dataModel),
                                    L.a.defer(function() {
                                        return n.selectionManager.setSelectedModels([t])
                                    })
                            },
                            r = this.map.getLayersBy("uniqueName", e.layerUniqueName)[0],
                            s = this.createDrawControl(e.primaryShape, r, i, e.enableSnapping);
                        e.secondaryShape && (t = this.createDrawControl(e.secondaryShape, r, i, e.enableSnapping));
                        var o = null != e.secondaryShape;
                        return {
                            title: e.title,
                            featureName: e.featureName,
                            toolbarMenuItemClass: e.toolbarMenuItemClass,
                            iconClass: e.iconClass,
                            control: s,
                            showDrawingControls: o,
                            secondaryControl: t
                        }
                    }
                }, {
                    key: "createDrawControl",
                    value: function(e, t, n, i) {
                        var r;
                        return r = "point" === e ? OL.Handler.Point : OL.Handler.Polygon,
                            new zo(this.map.getSketchLayer(), t, r, {
                                enableSnapping: i,
                                featureAdded: n,
                                drawingType: e
                            })
                    }
                }]),
                e
        }(),
        ua = function(e) {
            function t() {
                return E()(this, t),
                    T()(this, A()(t).apply(this, arguments))
            }
            return O()(t, e),
                S()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this.loginManager = e.loginManager
                    }
                }, {
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            click: function() {
                                e.loginManager.login()
                            }
                        }
                    }
                }, {
                    key: "template",
                    value: function() {
                        return '<div class="toolbar toolbar-button toolbar-login-button">'.concat(I18n.t("welcome.login"), "</div>")
                    }
                }]),
                t
        }(a.a.View),
        ca = a.a.Object.extend({
            initialize: function(e) {
                this.map = e.map,
                    this.controller = e.controller,
                    this.editingMediator = e.mediator,
                    this.actionManager = e.actionManager,
                    this.selectionManager = e.selectionManager,
                    this.dataModel = e.dataModel,
                    this.app = e.app,
                    this.loginManager = e.loginManager,
                    this.saveController = e.saveController,
                    this.toolbarLayout = new bo({
                        model: this.app
                    }),
                    this.listenTo(this.toolbarLayout, "render", this._onRender),
                    this.toolbarCollectionBuilder = new la({
                        actionManager: this.actionManager,
                        controller: this.controller,
                        map: this.map,
                        app: this.app,
                        selectionManager: this.selectionManager,
                        dataModel: this.dataModel,
                        loginManager: this.loginManager,
                        editingMediator: this.editingMediator,
                        saveController: this.saveController
                    }),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.searchView = new Io({
                        map: this.map
                    })
            },
            destroy: function() {
                this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            _onRender: function() {
                return this._showToolbar(),
                    this._showUserBoxOrLoginButton(),
                    this.toolbarLayout.showChildView("search", this.searchView),
                    this._setToolbarState(this.editingMediator.get("editingEnabled"))
            },
            _showToolbar: function() {
                this.editingMediator.get("editingHouseNumbers") ? this._showHouseNumbersToolbar() : this._showEditingToolbar()
            },
            _showUserBoxOrLoginButton: function() {
                var e, t = this.app.get("user");
                e = t ? new Mo({
                        model: t,
                        mapState: this.map.mapState
                    }) : new ua({
                        loginManager: this.loginManager
                    }),
                    this.toolbarLayout.showChildView("userBoxOrLoginButton", e)
            },
            _showEditingToolbar: function() {
                this.toolbarCollectionView = new No({
                        collection: this.toolbarCollectionBuilder.getToolbarButtons(),
                        map: this.map
                    }),
                    this.toolbarLayout.showChildView("editButtons", this.toolbarCollectionView)
            },
            _showHouseNumbersToolbar: function() {
                var e = this.toolbarCollectionBuilder.getHouseNumbersToolbarButtons();
                this.toolbarCollectionView = new jo({
                        collection: e,
                        map: this.map,
                        mediator: this.editingMediator
                    }),
                    this.toolbarLayout.showChildView("editButtons", this.toolbarCollectionView)
            },
            _setToolbarState: function(e) {
                this.enabled = e,
                    this.enabled ? (this.searchView.enable(),
                        this.toolbarCollectionView.enable()) : (this.searchView.disable(),
                        this.toolbarCollectionView.disable())
            },
            _onEditingEnabledChanged: function() {
                return this._setToolbarState(this.editingMediator.get("editingEnabled"))
            },
            onEditingHouseNumbersChanged: function() {
                this._showToolbar()
            }
        }),
        da = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/Topbar/templates/loading-indicator",
            className: "loading-indicator",
            initialize: function() {
                return this.globalVent = this.options.globalVent,
                    this.operations = [],
                    this.globalVent.on("operationPending", this._onOperationPending, this),
                    this.globalVent.on("operationDone", this._onOperationDone, this)
            },
            onDestroy: function() {
                return this.globalVent.off("operationPending", this._onOperationPending, this),
                    this.globalVent.off("operationDone", this._onOperationDone, this)
            },
            _onOperationPending: function(e) {
                return this.operations.push(e.operation),
                    this.render()
            },
            _onOperationDone: function(e) {
                return this.operations = L.a.without(this.operations, e.operation),
                    this.render()
            },
            _hasOperations: function() {
                return this.operations.length > 0
            },
            serializeData: function() {
                var e;
                if (this._hasOperations()) {
                    var t = L.a.last(this.operations);
                    e = t.text || I18n.t(t.id)
                } else
                    e = "";
                return {
                    operationText: e
                }
            }
        }),
        ha = n(80),
        pa = n.n(ha),
        ga = n(172),
        fa = n(56),
        ma = a.a.View.extend({
            className: "location-info",
            template: "Waze/MapEditor/UI/Modules/Topbar/templates/location-info",
            bindings: {
                ".full-address": "fullAddress"
            },
            initialize: function() {
                this._dataModel = this.options.dataModel,
                    this._map = this.options.map,
                    this.model = new g.a.Model({
                        fullAddress: ""
                    }),
                    this._dataModel.events.register("mergeend", this, this._update),
                    this._dataModel.events.register("zoomend", this, this._update)
            },
            onDestroy: function() {
                this._dataModel.events.unregister("mergeend", this, this._update),
                    this._dataModel.events.unregister("zoomend", this, this._update)
            },
            _update: function() {
                var e = this._getAddressFromTopCity() || this._getAddressFromMainCountry() || "";
                this.model.set({
                    fullAddress: e
                })
            },
            _getAddressFromTopCity: function() {
                return this._shouldShowTopCity() ? pa.a.fromCityID(this._dataModel.getTopCityId(), this._dataModel).format({
                    formatStreet: !1
                }) : null
            },
            _getAddressFromMainCountry: function() {
                var e = this._dataModel.getTopCountry();
                return null === e ? null : e.name
            },
            _shouldShowTopCity: function() {
                return this._map.getZoom() >= Object(ga.getMinDisplayZoom)(fa.RepositoryName.SEGMENTS) && null !== this._dataModel.getTopCityId()
            },
            onRender: function() {
                this.stickit()
            }
        }),
        va = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/Topbar/templates/layout",
            regions: {
                loadingIndicator: ".loading-indicator-region",
                locationInfo: ".location-info-region"
            },
            onRender: function() {
                this.showChildView("loadingIndicator", this.options.loadingIndicatorView),
                    this.showChildView("locationInfo", this.options.locationInfoView)
            }
        }),
        _a = a.a.Object.extend({
            initialize: function() {
                var e = new da({
                        globalVent: this.options.globalVent
                    }),
                    t = new ma({
                        dataModel: this.options.dataModel,
                        map: this.options.map
                    });
                this.layout = new va({
                    loadingIndicatorView: e,
                    locationInfoView: t
                })
            },
            destroy: function() {}
        }),
        ya = a.a.Object.extend({
            sidebarLayout: null,
            feedControl: null,
            initialize: function() {
                this.feedControl = this._createFeed(),
                    this.sidebarLayout = new yo({
                        model: W.app,
                        selectionManager: W.selectionManager,
                        editingMediator: W.editingMediator,
                        dataModel: W.model,
                        sandbox: W.app.isSandboxMode(),
                        loggedIn: W.app.isLoggedIn(),
                        feedControl: this.feedControl,
                        streetViewController: W.streetViewController
                    }),
                    this.toolbarController = new ca({
                        actionManager: W.model.actionManager,
                        togglerTree: W.togglerTree,
                        app: W.app,
                        controller: W.controller,
                        dataModel: W.model,
                        loginManager: W.loginManager,
                        map: W.map,
                        mediator: W.editingMediator,
                        selectionManager: W.selectionManager,
                        saveController: W.saveController,
                        layerSwitcherController: W.layerSwitcherController
                    }),
                    this.topbarController = new _a({
                        dataModel: W.model,
                        globalVent: W.vent,
                        map: W.map
                    })
            },
            _onEditingHouseNumbersChanged: function() {
                this.toolbarController.onEditingHouseNumbersChanged(),
                    this.sidebarLayout.onEditingHouseNumbersChanged()
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getTopbarLayout: function() {
                return this.topbarController.layout
            },
            enter: function() {
                this.feedControl && W.app.loginManager.isLoggedIn() && (W.app.loginManager.isFirstLogin() ? this.feedControl.startFirstTimePolling() : this.feedControl.refresh()),
                    W.editingMediator.on("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this)
            },
            exit: function() {
                return this.feedControl && this.feedControl.destroy(),
                    this.toolbarController.destroy(),
                    this.topbarController.destroy(),
                    W.editingMediator.off("change:editingHouseNumbers", this._onEditingHouseNumbersChanged, this),
                    W.selectionManager.unselectAll()
            },
            blockingExit: function() {
                return W.model.actionManager.canUndo()
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            _createFeed: function() {
                return this.feedControl = new ze({
                        container: W.map.panelRegion,
                        startNotificationId: W.app._urlParams.notification,
                        app: W.app
                    }),
                    this.feedControl
            }
        }),
        ba = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/toolbar_buttons",
            triggers: {
                "click .save-button": "saveClicked",
                "click .add-button": "addClicked",
                "click .delete-button": "deleteClicked"
            },
            bindings: {
                ".save-button": {
                    attributes: (Vo = "pendingChanges",
                        [{
                            name: "disabled",
                            observe: ["saving", Vo],
                            onGet: function(e) {
                                var t = h()(e, 2),
                                    n = t[0],
                                    i = t[1];
                                return n || !i
                            }
                        }])
                },
                ".add-button": {
                    attributes: function(e) {
                        return [{
                            name: "disabled",
                            observe: ["saving", e],
                            onGet: function(e) {
                                var t = h()(e, 2),
                                    n = t[0],
                                    i = t[1];
                                return n || i
                            }
                        }]
                    }("pendingChanges")
                },
                ".delete-button": {
                    attributes: [{
                        name: "disabled",
                        observe: ["editedModel", "showingList", "saving"],
                        onGet: function(e) {
                            var t = h()(e, 3),
                                n = t[0],
                                i = t[1];
                            return t[2] || i || n && n.isNew()
                        }
                    }]
                }
            },
            initialize: function(e) {
                this.mteModeState = e.mteModeState
            },
            onRender: function() {
                return this.stickit(this.mteModeState)
            }
        }),
        Ea = a.a.Object.extend({
            initialize: function(e) {
                return this.app = e.app,
                    this.map = e.map,
                    this.editingMediator = e.editingMediator,
                    this.actionManager = e.actionManager,
                    this.mteModeState = e.mteModeState,
                    this.searchView = new Io({
                        map: this.map
                    }),
                    this.toolbarButtons = new ba({
                        mteModeState: this.mteModeState
                    }),
                    this.toolbarButtons.on("saveClicked", this._onSaveClicked, this),
                    this.toolbarButtons.on("addClicked", this._onAddClicked, this),
                    this.toolbarButtons.on("deleteClicked", this._onDeleteClicked, this),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.toolbarLayout = new bo({
                        editingMediator: this.editingMediator,
                        model: this.app,
                        className: "toolbar toolbar-mte"
                    }),
                    this.listenTo(this.toolbarLayout, "render", this._onRender)
            },
            destroy: function() {
                return this.toolbarLayout.destroy(),
                    this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            _onRender: function() {
                this.toolbarLayout.showChildView("editButtons", this.toolbarButtons),
                    this.toolbarLayout.showChildView("search", this.searchView)
            },
            _onSaveClicked: function() {
                return this.trigger("saveClicked")
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDeleteClicked: function() {
                return this.trigger("deleteClicked")
            },
            _onEditingEnabledChanged: function() {}
        }),
        wa = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/sidebar",
            className: "sidebar-layout",
            regions: {
                loaderRegion: ".loaderRegion",
                mainRegion: ".mainRegion"
            },
            bindings: {
                ".loaderRegion": {
                    observe: "loadingFeatures",
                    visible: !0,
                    visibleFn: G.b
                },
                ".mainRegion": {
                    observe: "loadingFeatures",
                    visible: L.a.negate(L.a.identity),
                    visibleFn: G.b
                }
            },
            initialize: function(e) {
                this.app = e.app
            },
            onRender: function() {
                return this.stickit(this.app)
            }
        }),
        Sa = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/topbar",
            regions: {
                loadingIndicator: ".loading-indicator-region",
                locationInfo: ".location-info-region"
            },
            onRender: function() {
                this.showChildView("loadingIndicator", new da({
                        globalVent: this.options.globalVent
                    })),
                    this.showChildView("locationInfo", new ma({
                        dataModel: this.options.dataModel,
                        map: this.options.map
                    }))
            }
        }),
        ka = a.a.View.extend({
            tagName: "li",
            className: "mte-item",
            template: "Waze/MapEditor/UI/Modules/MTE/templates/mte_item_view",
            triggers: {
                click: "click"
            },
            serializeData: function() {
                return {
                    published: this.model.get("published"),
                    name: this.model.getEnglishName(),
                    date: this._shortDate()
                }
            },
            _shortDate: function() {
                var e = Date.parse(this.model.get("startDate")),
                    t = Date.parse(this.model.get("endDate"));
                return z.default.formatMonthRange(e, t)
            }
        }),
        Ta = {
            THIS_WEEK: {
                name: I18n.t("mte.search.this_week"),
                endDate: 7..day().fromNow()
            },
            THIS_MONTH: {
                name: I18n.t("mte.search.this_month"),
                endDate: 1..month().fromNow()
            },
            NEXT_3_MONTHS: {
                name: I18n.t("mte.search.next_3_months"),
                endDate: 3..month().fromNow()
            },
            NEXT_YEAR: {
                name: I18n.t("mte.search.next_year"),
                endDate: 1..year().fromNow()
            }
        },
        Ia = a.a.View.extend({
            className: "empty-message",
            template: function() {
                return I18n.t("mte.search.empty")
            }
        }),
        Aa = a.a.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/mte_list",
            className: "flex-parent",
            childView: ka,
            childViewContainer: "ul.mte-list",
            emptyView: Ia,
            ui: {
                search: ".search-input",
                list: "ul.mte-list"
            },
            events: {
                "focus @ui.search": "_onFocusChange",
                "blur @ui.search": "_onFocusChange",
                "click .add-mte-button": "_onAddClicked",
                "click .date-filter-item": "_onDateFilterClicked"
            },
            childViewEvents: {
                click: "_onItemClicked"
            },
            bindings: {
                ".search-input": {
                    observe: "query",
                    onSet: function(e) {
                        return e.toLowerCase()
                    }
                },
                ".current-date-filter": {
                    observe: "dateFilter",
                    onGet: function(e) {
                        return e.name
                    }
                },
                "ul.mte-list": {
                    classes: {
                        disabled: {
                            observe: ["typing", "query"],
                            onGet: function(e) {
                                var t = h()(e, 2),
                                    n = t[0],
                                    i = t[1];
                                return n && !i
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                return this.dataModel = e.dataModel,
                    this.model = new g.a.Model({
                        query: "",
                        typing: !1,
                        dateFilter: Ta.THIS_MONTH
                    }),
                    this.listenTo(this.model, "change:query change:dateFilter", function() {
                        return t._renderChildren()
                    })
            },
            filter: function(e) {
                if (Date.parse(e.get("startDate")) > this.model.get("dateFilter").endDate)
                    return !1;
                var t = this.model.get("query"),
                    n = e.getEnglishName(),
                    i = this.dataModel.cities.getObjectById(e.get("cityID"));
                return i && (n = "".concat(n, " ").concat(i.attributes.englishName, " ").concat(i.attributes.name)),
                    n.toLowerCase().indexOf(t) > -1
            },
            onRender: function() {
                return this.stickit()
            },
            serializeData: function() {
                return {
                    dateFilters: Ta
                }
            },
            _onFocusChange: function(e) {
                return this.model.set("typing", this.ui.search.is(":focus"))
            },
            _onItemClicked: function(e) {
                return this.trigger("mteItemClicked", e.model)
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDateFilterClicked: function(e) {
                var t = Le()(e.target);
                return this.model.set("dateFilter", Ta[t.data().filter])
            }
        }),
        Ma = n(102),
        Oa = n.n(Ma),
        Ca = g.a.Model.extend({
            defaults: {
                segments: null,
                closures: null,
                contributors: null,
                partners: null,
                availablePartners: null
            }
        }),
        Ra = a.a.Object.extend({
            initialize: function(e) {
                this.dataModel = e.dataModel
            },
            getMTEDetails: function(e) {
                var t = this,
                    n = {
                        id: e,
                        mapVersionID: this.dataModel.lastTransactionID
                    };
                return Object(U.httpGet)(W.Config.paths.mteDetails, n).then(function(e) {
                    var n = L.a.omit(e, "extendedDetails"),
                        i = (new m.a).read(n);
                    t.dataModel.putPersistent(i);
                    var r = L.a.extend(e.extendedDetails, {
                        segments: i.segments.objects,
                        closures: i.roadClosures.objects
                    });
                    return new Ca(r)
                })
            },
            submit: function(e) {
                return Object(U.httpPost)(W.Config.paths.mteReady, {
                    id: e.getID()
                }).then(function(t) {
                    return e.set(t.majorTrafficEvents.objects[0]),
                        e
                })
            },
            publish: function(e) {
                return Object(U.httpPost)(W.Config.paths.mtePublish, {
                    id: e.getID()
                }).then(function(t) {
                    return e.set(t.majorTrafficEvents.objects[0]),
                        e
                })
            }
        }),
        Da = n(67),
        La = new RegExp("^[".concat("a-zA-Z0-9", "]{1,1}[\\s").concat("a-zA-Z0-9").concat("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~", "]{0,").concat(26, "}$"), "i"),
        Pa = g.a.Model.extend({
            isValid: function() {
                return L.a.isEmpty(this.attributes)
            },
            clearErrorFor: function(e) {
                return this.unset(e)
            }
        });
    Pa.validate = function(e) {
            var t = {},
                n = e.get("startDate"),
                i = e.get("endDate"),
                r = e.getEnglishName();
            return e.getAddress().get("isEmpty") && (t.cityID = I18n.t("mte.edit.validation_errors.location")),
                null === r ? t.names = I18n.t("mte.edit.validation_errors.names") : r.length > 27 ? t.names = I18n.t("mte.edit.validation_errors.english_name_length") : La.test(r) || (t.names = I18n.t("mte.edit.validation_errors.english_name")),
                null === n && (t.startDate = I18n.t("mte.edit.validation_errors.start_date")),
                null === i && (t.endDate = I18n.t("mte.edit.validation_errors.end_date")),
                null !== n && null !== i && Date.parse(n) > Date.parse(i) && (t.endDate = I18n.t("mte.edit.validation_errors.end_before_start")),
                new Pa(t)
        },
        Pa.ENGLISH_NAME_PATTERN = La;
    var Na = Pa,
        xa = g.a.Model.extend({
            defaults: {
                englishName: "",
                localName: "",
                locale: "es",
                showAddButton: !0,
                showLocalName: !1,
                showPreview: !0,
                editable: !0
            }
        }),
        Va = a.a.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/names",
            className: "mte-names-edit-view",
            events: {
                "click .add-local-name-button": "_onAddLocalNameButtonClicked",
                "click .remove-local-name-button": "_onRemoveLocalNameButtonClicked",
                "click .edit-names-button": "_onEditNamesButtonClicked",
                submit: "_onFormSubmitted"
            },
            bindings: {
                ".preview": {
                    observe: "showPreview",
                    visible: !0,
                    visibleFn: G.b
                },
                ".edit-form": {
                    observe: "showPreview",
                    visible: L.a.negate(L.a.identity)
                },
                ".english-name-preview .name": {
                    observe: "englishName",
                    onGet: function(e) {
                        return L.a.isEmpty(e) ? I18n.t("mte.edit.name_list.add_name") : e
                    }
                },
                ".english-name-preview": {
                    classes: {
                        empty: {
                            observe: "englishName",
                            onGet: L.a.negate(L.a.identity)
                        }
                    }
                },
                ".language-preview": {
                    observe: "englishName",
                    visible: !0,
                    visibleFn: G.b,
                    onGet: function(e) {
                        return !L.a.isEmpty(e)
                    }
                },
                ".local-name-preview": {
                    observe: "showLocalName",
                    visible: !0,
                    visibleFn: G.b
                },
                ".local-language-preview": "locale",
                ".local-name-preview .name": "localName",
                ".english-name input": "englishName",
                ".local-name input": {
                    observe: "localName",
                    attributes: [{
                        name: "required",
                        observe: "showLocalName"
                    }]
                },
                ".locale": {
                    observe: "locale",
                    selectOptions: {
                        collection: "this.localeOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.name_list.select_language")
                        }
                    },
                    attributes: [{
                        observe: "showLocalName",
                        name: "required"
                    }]
                },
                ".form-group.local-name": {
                    observe: "showLocalName",
                    visible: !0,
                    visibleFn: G.b
                },
                ".add-local-name-button": {
                    observe: "showAddButton",
                    visible: !0,
                    visibleFn: G.b
                },
                ".edit-names-button": {
                    attributes: [{
                        name: "disabled",
                        observe: "editable",
                        onGet: L.a.negate(L.a.identity)
                    }]
                },
                ".edit-names-button .waze-icon-edit": {
                    observe: "editable",
                    visible: !0,
                    visibleFn: G.b
                }
            },
            initialize: function(e) {
                var t = this.model.getLocale();
                this.viewModel = new xa({
                        englishName: this.model.getEnglishName(),
                        localName: this.model.getLocalName(),
                        locale: t,
                        editable: e.editable
                    }),
                    null !== t && this.viewModel.set({
                        showLocalName: !0,
                        showAddButton: !1
                    });
                var n = L.a.without(["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"], Da.ENGLISH_LOCALE).map(function(e) {
                        return {
                            label: {
                                en: "English",
                                "en-US": "US English",
                                "en-GB": "English (UK)",
                                es: "Español",
                                "es-419": "Español (América Latina)",
                                "fa-IR": "پارسی",
                                fr: "Français",
                                it: "Italiano",
                                ru: "Русский",
                                ja: "日本語",
                                he: "עברית",
                                de: "Deutsch",
                                ro: "Română",
                                tr: "Türkçe",
                                af: "Afrikaans",
                                cs: "Čeština",
                                ko: "한국어",
                                ms: "Melayu",
                                pl: "Polski",
                                "pt-BR": "Português (Brasil)",
                                "pt-PT": "Português (Portugal)",
                                hu: "Magyar",
                                nl: "Nederlands",
                                sv: "Svenska",
                                no: "Norsk",
                                sk: "Slovenčina",
                                da: "Dansk",
                                gl: "Galego",
                                lt: "Lietuvių",
                                zh: "中文 (简体)",
                                "zh-TW": "中文（繁體）",
                                bg: "Български",
                                fi: "Suomi",
                                hr: "Hrvatski",
                                ca: "Català",
                                et: "Eesti",
                                lv: "Latviešu",
                                sr: "Srpski",
                                ar: "العربية",
                                uk: "Українська",
                                th: "ไทย"
                            } [e],
                            value: e
                        }
                    }),
                    i = Object.keys(Da.MTE_LOCALES).map(function(e) {
                        return {
                            label: Da.MTE_LOCALES[e],
                            value: e
                        }
                    });
                this.localeOptions = L.a.sortBy(n.concat(i), "value")
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            serializeData: function() {
                return {
                    ENGLISH_LOCALE: Da.ENGLISH_LOCALE
                }
            },
            toggleEditable: function(e) {
                return !1 === e && this.viewModel.set({
                        showPreview: !0
                    }),
                    this.viewModel.set({
                        editable: e
                    })
            },
            _onAddLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !0,
                    showAddButton: !1
                })
            },
            _onRemoveLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !1,
                    showAddButton: !0
                })
            },
            _onEditNamesButtonClicked: function() {
                return this.viewModel.set({
                    showPreview: !1
                })
            },
            _onFormSubmitted: function(e) {
                e.preventDefault(),
                    this.viewModel.set({
                        showPreview: !0
                    });
                var t = [{
                    locale: Da.ENGLISH_LOCALE,
                    value: this.viewModel.get("englishName")
                }];
                return this.viewModel.get("showLocalName") && t.push({
                        locale: this.viewModel.get("locale"),
                        value: this.viewModel.get("localName")
                    }),
                    this.trigger("namesChanged", t)
            }
        }),
        ja = g.a.Model.extend({
            defaults: {
                loading: !1,
                error: !1,
                loadingMessage: "",
                errorMessage: ""
            }
        }),
        Ua = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/loading",
            bindings: {
                ".loading": {
                    observe: "loading",
                    visible: !0,
                    visibleFn: G.b
                },
                ".error": {
                    observe: "error",
                    visible: !0,
                    visibleFn: G.b
                }
            },
            initialize: function(e) {
                this.model = new ja(e)
            },
            onRender: function() {
                return this.stickit()
            }
        }),
        Fa = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/contributors/item",
            className: "mte-contributors-item",
            triggers: {
                "click .remove-button": "removeClicked"
            },
            serializeData: function() {
                var e = this;
                return L.a.tap(a.a.View.prototype.serializeData.apply(this, arguments), function(t) {
                    t.editable = e.options.editable
                })
            }
        }),
        Ba = a.a.CompositeView.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/contributors/list",
            className: "mte-contributors-list",
            childView: Fa,
            childViewContainer: ".list",
            childViewOptions: function() {
                return {
                    editable: this.options.editable
                }
            },
            events: {
                "click .add-partner-button": "_onAddClicked",
                "click .cancel-button": "_onCancelClicked",
                "submit .add-partner-form": "_onPartnerFormSubmitted"
            },
            childViewEvents: {
                removeClicked: "_onRemoveClicked"
            },
            bindings: {
                ".add-partner-form": {
                    observe: "showAddPartnerForm",
                    visible: !0,
                    visibleFn: G.b
                },
                ".add-partner-button": {
                    observe: ["showAddPartnerForm", "editable"],
                    visible: !0,
                    visibleFn: G.b,
                    onGet: function(e) {
                        var t = h()(e, 2),
                            n = t[0];
                        return t[1] && !n
                    }
                },
                ".partner-select": {
                    observe: "selectedPartner",
                    selectOptions: {
                        collection: "this._partnerOptions",
                        defaultOption: {
                            label: I18n.t("mte.edit.contributors.choose_partner"),
                            value: null
                        }
                    }
                }
            },
            initialize: function() {
                var e = this.options.mteModel.get("partners").map(function(e) {
                        return {
                            userID: e,
                            isPartner: !0
                        }
                    }),
                    t = this.options.detailsModel.get("contributors").map(function(e) {
                        return {
                            userID: e
                        }
                    });
                this.collection = new g.a.Collection(e.concat(t)),
                    this.collection.on("reset add remove", this._onPartnersChanged, this),
                    this._generatePartnerOptions(),
                    this.viewModel = new g.a.Model({
                        showAddPartnerForm: !1,
                        selectedPartner: null,
                        editable: this.options.editable
                    })
            },
            _generatePartnerOptions: function() {
                var e = this.collection.where({
                        isPartner: !0
                    }).map(function(e) {
                        return e.get("userID")
                    }),
                    t = L.a.difference(this.options.detailsModel.get("availablePartners"), e);
                this._partnerOptions = t.map(function(e) {
                    return {
                        label: z.default.formatUserName(e),
                        value: e
                    }
                }).sort(function(e, t) {
                    return e.label.localeCompare(t.label)
                })
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            _onAddClicked: function() {
                return this.viewModel.set({
                    showAddPartnerForm: !0
                })
            },
            _onCancelClicked: function() {
                return this.viewModel.set({
                    showAddPartnerForm: !1
                })
            },
            _onRemoveClicked: function(e) {
                return this.collection.remove(e.model)
            },
            _onPartnerFormSubmitted: function(e) {
                e.preventDefault();
                var t = new g.a.Model({
                    userID: this.viewModel.get("selectedPartner"),
                    isPartner: !0
                });
                return this.collection.add(t),
                    this.viewModel.set({
                        showAddPartnerForm: !1,
                        selectedPartner: null
                    })
            },
            _updateModel: function() {
                var e = this.collection.where({
                    isPartner: !0
                }).map(function(e) {
                    return e.get("userID")
                });
                return this.options.mteModel.set({
                    partners: e
                })
            },
            _onPartnersChanged: function() {
                return this._generatePartnerOptions(),
                    this.stickit(this.viewModel),
                    this._updateModel()
            }
        }),
        Ga = new OL.StyleMap;
    Ga.addUniqueValueRules("default", "type", {
        outline: {
            strokeColor: "black",
            strokeWidth: 14
        },
        fill: {
            strokeColor: "white",
            strokeWidth: 10
        },
        dash: {
            strokeColor: "red",
            strokeDashstyle: "dash",
            strokeDashArray: "10 10",
            strokeLinecap: "butt",
            strokeWidth: 10
        }
    });
    var Wa, Ha = Ga,
        za = a.a.View.extend({
            template: function() {
                return I18n.t("mte.edit.closures.empty")
            }
        }),
        qa = a.a.View.extend({
            template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/closures",
            regions: {
                closuresRegion: ".closures"
            },
            initialize: function(e) {
                this.segments = e.detailsModel.get("segments"),
                    this.closures = e.detailsModel.get("closures"),
                    this.map = e.map,
                    this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.drawingContext = e.drawingContext,
                    this.closuresMarkerLayer = e.closuresMarkerLayer,
                    this._showClosures() && (this.segmentSelection = new Vr.SegmentSelection(this.segments))
            },
            onRender: function() {
                this._showClosures() ? (new Wi({
                        region: this.getRegion("closuresRegion"),
                        pannable: this.map.getPannable(),
                        dataModel: this.dataModel,
                        segmentSelection: this.segmentSelection,
                        allClosures: this.closures,
                        repoActive: this.dataModel.roadClosures.active,
                        canSaveClosures: this._canSaveClosures(),
                        listViewConfig: zi.MTE,
                        editViewConfig: Hi.MTE
                    }).showClosures(),
                    this._drawClosures(),
                    this._toggleNonMteMarkers(!1)) : this.showChildView("closuresRegion", new za)
            },
            _showClosures: function() {
                return Boolean(this.segments.length)
            },
            _canSaveClosures: function() {
                return this.model.arePropertiesEditable() && !this.mteModeState.get("pendingChanges")
            },
            _drawClosures: function() {
                var e, t = this;
                return this.drawingContext.setStyleMap(Ha),
                    ["outline", "fill", "dash"].map(function(n) {
                        return e = t.segments.map(function(e) {
                                return new OL.Feature.Vector($e.cloneGeometry(e.geometry), {
                                    type: n
                                })
                            }),
                            t.drawingContext.addFeatures(e)
                    })
            },
            _toggleNonMteMarkers: function(e) {
                var t = L.a.map(this.closures, "id");
                this.closuresMarkerLayer.toggleMarkers(e, function(e) {
                    return !t.includes(e)
                })
            },
            onDestroy: function() {
                this.drawingContext.destroy(),
                    this._toggleNonMteMarkers(!0)
            }
        }),
        Ya = n(47),
        $a = a.a.View.extend({
            className: "mte-edit-view",
            template: "Waze/MapEditor/UI/Modules/MTE/templates/mte_edit_view",
            behaviors: {
                dateTimePickers: {
                    behaviorClass: gn.a
                }
            },
            regions: {
                namesRegion: ".names-region",
                addressEditRegion: ".address-edit-region",
                closuresRegion: "#mte-edit-closures",
                contributorsRegion: ".contributors-region",
                twitterUrlsRegion: ".twitter-urls-region"
            },
            events: {
                "click .back-button": "_onBackButtonClicked",
                "show.bs.tab .closures-tab": "_onClosuresTabClick",
                "show.bs.tab .contributors-tab": "_onContributorsTabClick",
                "click .submit-button": "_onSubmitClicked",
                "click .publish-button": "_onPublishClicked",
                "submit @ui.attributesForm": "_onFormSubmitted"
            },
            ui: {
                formSubmit: ".form-submit-button",
                attributesForm: ".attributes-form",
                formInputs: "form button, form input, form select",
                locationTooltip: ".location-tooltip"
            },
            bindings: {
                ".url": "url",
                ".event-page": {
                    observe: "uniqueName",
                    visible: !0,
                    visibleFn: G.b
                },
                ".event-page a": {
                    attributes: [{
                        name: "href",
                        observe: "uniqueName",
                        onGet: function(e) {
                            return e ? "".concat(Ya.buildConfig.mte.root_url, "/").concat(e) : null
                        }
                    }]
                },
                ".submit-buttons": {
                    observe: "published",
                    visible: !0,
                    visibleFn: G.b,
                    onGet: function(e) {
                        return !e
                    }
                },
                ".category": {
                    observe: "category",
                    selectOptions: {
                        collection: "this.categoryOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.select_category")
                        }
                    }
                },
                "[name=tweetText]": {
                    observe: "tweetText",
                    attributes: [{
                        name: "disabled",
                        observe: "published"
                    }]
                }
            },
            submitButtonBindings: {
                ".submit-button": {
                    observe: "submitted",
                    visible: !0,
                    visibleFn: G.b,
                    onGet: function(e) {
                        return !e
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "submitting"
                    }]
                },
                ".submitted-indication": {
                    observe: "submitted",
                    visible: !0,
                    visibleFn: G.b
                }
            },
            publishBindings: {
                ".publish-button": {
                    observe: ["published", "canPublish"],
                    visible: !0,
                    visibleFn: G.b,
                    onGet: function(e) {
                        var t = h()(e, 2),
                            n = t[0],
                            i = t[1];
                        return !n && i
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "publishing"
                    }]
                },
                ".published-indication": {
                    observe: ["published", "canPublish"],
                    visible: !0,
                    visibleFn: G.b,
                    onGet: function(e) {
                        var t = h()(e, 2),
                            n = t[0],
                            i = t[1];
                        return n && i
                    }
                }
            },
            validationErrorsBindings: {
                ".validation-error[for=cityID]": "cityID",
                ".validation-error[for=names]": "names",
                ".validation-error[for=startDate]": "startDate",
                ".validation-error[for=endDate]": "endDate",
                ".start-date-group": {
                    classes: {
                        "has-error": {
                            observe: "startDate"
                        }
                    }
                },
                ".end-date-group": {
                    classes: {
                        "has-error": {
                            observe: "endDate"
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                return this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.api = new Ra({
                        dataModel: this.dataModel
                    }),
                    this.repositoryMte = e.repositoryMte,
                    this.api = new Ra({
                        dataModel: this.dataModel
                    }),
                    this.submitViewModel = new g.a.Model({
                        submitting: !1,
                        submitted: this.repositoryMte.get("ready")
                    }),
                    this.publishViewModel = new g.a.Model({
                        publishing: !1,
                        canPublish: this.model.canPublish(),
                        published: this.repositoryMte.get("published")
                    }),
                    this.categoryOptions = Object.keys(Da.CATEGORIES).map(function(e) {
                        return {
                            label: I18n.t("mte.edit.categories.".concat(e)),
                            value: e
                        }
                    }),
                    this.listenTo(this.repositoryMte, "change", function(e) {
                        return t.model.set(e.changed),
                            t.submitViewModel.set({
                                submitted: t.repositoryMte.get("ready")
                            }),
                            t.publishViewModel.set({
                                published: t.repositoryMte.get("published"),
                                canPublish: t.repositoryMte.canPublish()
                            })
                    }),
                    this.listenTo(this.model, "change", this._onModelChanged),
                    this.listenTo(this.mteModeState, "change:saving", this._onSavingChanged)
            },
            _onModelChanged: function(e) {
                if (null != this.validator)
                    for (var t = 0, n = Object.keys(e.changed); t < n.length; t++) {
                        var i = n[t];
                        this.validator.clearErrorFor(i)
                    }
                var r = Object.keys(e.changed);
                if (L.a.intersection(r, Da.WRITABLE_ATTRIBUTES).length > 0)
                    return this.trigger("modelChanged")
            },
            onRender: function() {
                var e = this;
                this.namesView = new Va({
                        model: this.model,
                        editable: this.model.arePropertiesEditable()
                    }),
                    this.listenTo(this.namesView, "namesChanged", function(t) {
                        return e.model.set({
                            names: t
                        })
                    }),
                    this.showChildView("namesRegion", this.namesView),
                    this.addressView = new Qe.default({
                        getAddress: function() {
                            return e.model.getAddress()
                        },
                        dataModel: this.dataModel,
                        features: [this.model],
                        editable: this.model.arePropertiesEditable(),
                        editStreet: !1,
                        showCitySelection: !0
                    }),
                    this.listenTo(this.addressView, "addressChanged", function() {
                        e.trigger("modelChanged"),
                            e.validator && e.validator.clearErrorFor("cityID")
                    }),
                    this.showChildView("addressEditRegion", this.addressView),
                    this._showTwitterUrls(),
                    this.stickit(),
                    this.stickit(this.submitViewModel, this.submitButtonBindings),
                    this.stickit(this.publishViewModel, this.publishBindings),
                    this.model.arePropertiesEditable() || this._toggleFormInputs(!1),
                    this.ui.locationTooltip.tooltip()
            },
            _showTwitterUrls: function() {
                this.getRegion("twitterUrlsRegion").empty();
                var e = this.model.attributes.twitterAccountsUrls;
                e.length > 0 && this.showChildView("twitterUrlsRegion", new a.a.View({
                    template: "Waze/MapEditor/UI/Modules/MTE/templates/item_edit/twitter_urls",
                    templateContext: {
                        twitterAccountsUrls: e
                    }
                }))
            },
            templateContext: function() {
                return {
                    modelAttributes: this.model.attributes,
                    canEditTweetText: this.model.canEditTweetText(),
                    newModel: this.model.isNew()
                }
            },
            _onSavingChanged: function(e, t) {
                if (this.model.arePropertiesEditable())
                    return this._toggleFormInputs(!t),
                        this.namesView.toggleEditable(!t),
                        this.addressView.toggleEditable(!t)
            },
            _toggleFormInputs: function(e) {
                return this.ui.formInputs.prop("disabled", !e)
            },
            validate: function() {
                return !!this._isMTEValid() || (this._showValidationErrors(),
                    !1)
            },
            _isMTEValid: function() {
                var e = this.ui.attributesForm.get(0).checkValidity();
                return null != this.validator && this.unstickit(this.validator, this.validationErrorsBindings),
                    this.validator = Na.validate(this.model),
                    this.stickit(this.validator, this.validationErrorsBindings),
                    this.validator.isValid() && e
            },
            _showValidationErrors: function() {
                return this.ui.formSubmit.click()
            },
            getAction: function() {
                var e;
                return (e = this.model.isNew() ? new Xo.a(this.model, this.dataModel.majorTrafficEvents) : new bt.a(this.repositoryMte, this.model.attributes)).setModel(this.dataModel),
                    e
            },
            _onBackButtonClicked: function() {
                var e = !0;
                if (this.mteModeState.get("pendingChanges") && (e = window.confirm(I18n.t("mte.edit.pending_changes"))),
                    e)
                    return this.trigger("backButtonClicked")
            },
            _loadMTEDetails: function(e, t) {
                return e.show(new Ua({
                        loading: !0,
                        loadingMessage: t
                    })),
                    this.api.getMTEDetails(this.model.get("id"))
            },
            _showMTEDetailsError: function(e, t) {
                e.show(new Ua({
                    error: !0,
                    errorMessage: t
                }))
            },
            _onClosuresTabClick: function() {
                var e = this,
                    t = this.getRegion("closuresRegion");
                return this._loadMTEDetails(t, I18n.t("mte.edit.closures.loading")).then(function(t) {
                    return e.showChildView("closuresRegion", new qa({
                        map: e.options.map,
                        model: e.model,
                        mteModeState: e.mteModeState,
                        dataModel: e.dataModel,
                        detailsModel: t,
                        canAdd: !1,
                        drawingContext: e.options.map.getSvgDrawingContext(),
                        closuresMarkerLayer: e.options.map.closuresMarkerLayer
                    }))
                }).catch(function() {
                    e._showMTEDetailsError(t, I18n.t("mte.edit.closures.error"))
                })
            },
            _onContributorsTabClick: function() {
                var e = this,
                    t = this.getRegion("contributorsRegion");
                return this._loadMTEDetails(t, I18n.t("mte.edit.contributors.loading")).then(function(t) {
                    return e.showChildView("contributorsRegion", new Ba({
                        detailsModel: t,
                        mteModel: e.model,
                        editable: e.model.canEditPartners()
                    }))
                }).catch(function() {
                    e._showMTEDetailsError(t, I18n.t("mte.edit.contributors.error"))
                })
            },
            _onSubmitClicked: function() {
                var e = this;
                if (window.confirm(I18n.t("mte.edit.submit_confirm", {
                        eventsUrl: Ya.buildConfig.mte.eventsUrl
                    })))
                    return this.submitViewModel.set({
                            submitting: !0
                        }),
                        this.api.submit(this.repositoryMte).catch(function(e) {
                            if (!(e instanceof U.FetchError))
                                throw e;
                            var t = e.response.errorList,
                                n = t ? t[0].code : void 0;
                            console.error(e),
                                window.alert(z.default.getSaveErrorTitle(n, "mte.edit.submit_failed"))
                        }).finally(function() {
                            e.submitViewModel.set({
                                submitting: !1
                            })
                        })
            },
            _onPublishClicked: function() {
                var e = this;
                return this.publishViewModel.set({
                        publishing: !0
                    }),
                    this.api.publish(this.repositoryMte).finally(function() {
                        e.publishViewModel.set({
                                publishing: !1
                            }),
                            e._showTwitterUrls()
                    }).catch(function(e) {
                        if (!(e instanceof U.FetchError))
                            throw e;
                        var t = e.response.errorList,
                            n = t ? t[0].code : void 0;
                        window.alert(z.default.getSaveErrorTitle(n, "mte.edit.publish_failed"))
                    })
            },
            _onFormSubmitted: function(e) {
                return e.preventDefault()
            }
        }),
        Ka = n(216),
        Ja = n(226),
        Za = g.a.Collection.extend({
            comparator: function(e) {
                return (e.getEnglishName() || "").toLowerCase()
            }
        }),
        Qa = a.a.Object.extend({
            initialize: function(e) {
                var t = this;
                return this.toolbarController = e.toolbarController,
                    this.sidebarLayout = e.sidebarLayout,
                    this.mteModeState = e.mteModeState,
                    this.dataModel = e.dataModel,
                    this.repository = e.repository,
                    this.controller = e.controller,
                    this.editingMediator = e.editingMediator,
                    this.map = e.map,
                    this.mteCollection = new Za,
                    this.mteListView = new Aa({
                        collection: this.mteCollection,
                        dataModel: this.dataModel
                    }),
                    this.listenTo(this.repository, N.UPDATED, this._updateCollection),
                    this.listenTo(this.toolbarController, "saveClicked", this._onSaveClicked),
                    this.listenTo(this.toolbarController, "addClicked", this._onAddClicked),
                    this.listenTo(this.toolbarController, "deleteClicked", this._onDeleteClicked),
                    this.listenTo(this.mteListView, "mteItemClicked", this._onMteItemClicked),
                    this.savePopoverRegion = new Ka.a({
                        saveButtonSelector: ".toolbar-mte .save-button"
                    }),
                    this.listenTo(this.sidebarLayout, "render", function() {
                        return t._updateCollection(),
                            t._showListView()
                    })
            },
            _updateCollection: function(e) {
                return this.mteCollection.reset(this.repository.getObjectArray())
            },
            _onSaveClicked: function() {
                this.editView.validate() && this._save(this.editView.getAction())
            },
            _save: function(e) {
                var t = this;
                e.doAction(),
                    this.mteModeState.set({
                        saving: !0
                    });
                var n = new Ja.a({
                    map: this.map,
                    mediator: this.editingMediator,
                    popoverRegion: this.savePopoverRegion
                });
                return this.controller.save({
                    actions: [e]
                }).then(function(e) {
                    n.success(e),
                        t.mteModeState.set({
                            pendingChanges: !1
                        })
                }).catch(function(i) {
                    if (t._rollbackChanges(e),
                        !(i instanceof xi.a))
                        throw i;
                    n.fail(i.errors)
                }).finally(function() {
                    t.mteModeState.set({
                        saving: !1
                    })
                })
            },
            _onMteItemClicked: function(e) {
                return this.showEditView(e)
            },
            showEditView: function(e) {
                return this.mteModeState.set({
                        showingList: !1,
                        pendingChanges: !1,
                        editedModel: e
                    }),
                    this.editView = new $a({
                        model: e.clone(),
                        repositoryMte: e,
                        dataModel: this.dataModel,
                        map: this.map,
                        mteModeState: this.mteModeState
                    }),
                    this.sidebarLayout.showChildView("mainRegion", this.editView, {
                        preventDestroy: !0
                    }),
                    this.editView.on("backButtonClicked", this._showListView, this),
                    this.editView.on("modelChanged", this._onModelChanged, this)
            },
            _onAddClicked: function() {
                var e = new Da.default;
                return e.model = this.dataModel,
                    this.showEditView(e),
                    this.mteModeState.set({
                        pendingChanges: !0
                    })
            },
            _onDeleteClicked: function() {
                if (!this.mteModeState.get("pendingChanges") || window.confirm(I18n.t("mte.edit.pending_changes_delete"))) {
                    var e = new Oa.a(this.mteModeState.get("editedModel"));
                    return e.setModel(this.dataModel),
                        this._save(e).then(this._showListView.bind(this))
                }
            },
            _onModelChanged: function() {
                return this.mteModeState.set({
                    pendingChanges: !0
                })
            },
            _showListView: function() {
                return this.mteModeState.set({
                        showingList: !0,
                        pendingChanges: !1,
                        editedModel: null
                    }),
                    this.sidebarLayout.showChildView("mainRegion", this.mteListView)
            },
            _rollbackChanges: function(e) {
                return e.undoAction(),
                    this.dataModel.actionManager.clear()
            },
            onDestroy: function() {
                return this.savePopoverRegion.destroy()
            }
        }),
        Xa = n(19),
        el = g.a.Model.extend({
            defaults: {
                pendingChanges: !1,
                showingList: !0,
                saving: !1,
                editedModel: null
            }
        }),
        tl = a.a.Object.extend({
            _editingLock: null,
            initialize: function() {
                this.app = W.app,
                    this.map = W.map,
                    this.dataModel = W.model,
                    this.controller = W.controller,
                    this.repo = this.dataModel.majorTrafficEvents,
                    this.mteModeState = new el,
                    this.listenTo(this.mteModeState, "change", this.trigger.bind(this, c.STATE_CHANGED)),
                    this._layerSwitcherController = W.layerSwitcherController,
                    this.toolbarController = new Ea({
                        app: W.app,
                        map: this.map,
                        editingMediator: W.editingMediator,
                        actionManager: this.dataModel.actionManager,
                        mteModeState: this.mteModeState,
                        controller: this.controller,
                        togglerTree: W.togglerTree,
                        layerSwitcherController: this._layerSwitcherController
                    }),
                    this.topbarLayout = new Sa({
                        map: this.map,
                        dataModel: this.dataModel,
                        globalVent: W.vent
                    }),
                    this.sidebarLayout = new wa({
                        app: W.app
                    }),
                    this.mteController = new Qa({
                        toolbarController: this.toolbarController,
                        sidebarLayout: this.sidebarLayout,
                        mteModeState: this.mteModeState,
                        dataModel: this.dataModel,
                        repository: this.repo,
                        controller: this.controller,
                        editingMediator: W.editingMediator,
                        map: this.map
                    })
            },
            enter: function() {
                this._editingLock = W.editingMediator.lockEditing(),
                    this._activateClosureLayer()
            },
            exit: function() {
                W.editingMediator.releaseEditing(this._editingLock),
                    this.toolbarController.destroy(),
                    this.mteController.destroy(),
                    this._restoreClosureLayerState()
            },
            _activateClosureLayer: function() {
                this._initialClosureState = this._layerSwitcherController.getTogglerState(Xa.TogglerEnum.ITEM_CLOSURES),
                    this._layerSwitcherController.setTogglerState(Xa.TogglerEnum.ITEM_CLOSURES, !0),
                    this._layerSwitcherController.disableToggler(Xa.TogglerEnum.ITEM_CLOSURES)
            },
            _restoreClosureLayerState: function() {
                this._layerSwitcherController.setTogglerState(Xa.TogglerEnum.ITEM_CLOSURES, this._initialClosureState),
                    this._layerSwitcherController.enableToggler(Xa.TogglerEnum.ITEM_CLOSURES)
            },
            blockingExit: function() {
                return this.mteModeState.get("pendingChanges")
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getTopbarLayout: function() {
                return this.topbarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getState: function() {
                var e = this.mteModeState.get("editedModel");
                return {
                    majorTrafficEvent: e ? e.getID() : void 0
                }
            },
            restore: function() {
                var e = this,
                    t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).majorTrafficEvent;
                if (null != t) {
                    var n = function() {
                        var n = e.repo.getObjectById(t);
                        return null != n && e.mteController.showEditView(n),
                            null != n
                    };
                    return n() ? void 0 : this.listenToOnce(this.repo, N.ADDED, n)
                }
            }
        }),
        nl = a.a.Object.extend({
            MODE_TO_CLASS: (Wa = {},
                s()(Wa, u.a.DEFAULT, ya),
                s()(Wa, u.a.MTE, tl),
                Wa),
            initialize: function(e) {
                this.model = e.model,
                    this.sidebarRegion = e.layout.getRegion("sidebarRegion"),
                    this.toolbarRegion = e.layout.getRegion("toolbarRegion"),
                    this.topbarRegion = e.layout.getRegion("topbarRegion")
            },
            activate: function() {
                return this.model.on("change:mode change:sandbox change:user", this._onModeChange, this),
                    W.prefs.on("change:isImperial", this._onModeChange, this),
                    this._onModeChange("activate")
            },
            restore: function(e) {
                this.mode.restore && this.mode.restore(e)
            },
            canExitMode: function() {
                return this.mode && !this.mode.blockingExit()
            },
            getExitError: function() {
                if (this.mode)
                    return this.mode.blockingExitReason()
            },
            getState: function() {
                if (this.mode && this.mode.getState)
                    return this.mode.getState()
            },
            _onModeChange: function() {
                return this._setMode(this.model.get("mode"))
            },
            _setMode: function(e) {
                this.mode && (this.mode.exit(),
                    this.mode.off(c.STATE_CHANGED, this._onModeStateChange, this));
                var t = this.MODE_TO_CLASS[e];
                return this.mode = new t,
                    this.toolbarRegion.show(this.mode.getToolbarLayout()),
                    this.topbarRegion.show(this.mode.getTopbarLayout()),
                    this.sidebarRegion.show(this.mode.getSidebarLayout()),
                    this.mode.enter(),
                    this.mode.on(c.STATE_CHANGED, this._onModeStateChange, this)
            },
            _onModeStateChange: function() {
                return this.trigger(c.STATE_CHANGED)
            }
        });
    t.default = nl
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(2),
        r = n.n(i),
        s = n(1),
        o = n.n(s),
        a = n(10),
        l = n.n(a),
        u = n(7),
        c = n.n(u),
        d = n(199),
        h = n.n(d),
        p = n(74),
        g = n(5),
        f = n.n(g),
        m = n(3),
        v = n.n(m),
        _ = n(6),
        y = n.n(_),
        b = n(0),
        E = n.n(b),
        w = n(413),
        S = n.n(w),
        k = function(e) {
            function t(e) {
                var n;
                return r()(this, t),
                    (n = f()(this, v()(t).call(this)))._editingLocks = {},
                    n.set({
                        drawing: !1,
                        editingEnabled: !1,
                        saving: !1,
                        navigation: !1,
                        advancedTools: !1,
                        editingHouseNumbers: !1
                    }),
                    n._lockingService = new S.a(e),
                    n
            }
            return y()(t, e),
                o()(t, [{
                    key: "activate",
                    value: function() {
                        return this.model = W.app,
                            this.model.on("change:editing", this._onEditingChanged, this)
                    }
                }, {
                    key: "lockEditing",
                    value: function() {
                        var e = E.a.uniqueId("editingLock_");
                        return this._editingLocks[e] = !0,
                            this.set("editingEnabled", !1),
                            e
                    }
                }, {
                    key: "releaseEditing",
                    value: function(e) {
                        return delete this._editingLocks[e],
                            this.set("editingEnabled", E.a.isEmpty(this._editingLocks))
                    }
                }, {
                    key: "_onEditingChanged",
                    value: function() {
                        var e = this.model.get("loggedIn"),
                            t = this.model.get("user"),
                            n = this.model.get("editing");
                        this.set({
                            editingEnabled: n,
                            advancedTools: e && t.isStaff,
                            navigation: n
                        })
                    }
                }, {
                    key: "setDrawingInProgress",
                    value: function() {
                        return this.set("drawing", !0)
                    }
                }, {
                    key: "setDrawingDone",
                    value: function() {
                        return this.set("drawing", !1)
                    }
                }, {
                    key: "enterEditingHouseNumbers",
                    value: function() {
                        this.set("editingHouseNumbers", !0)
                    }
                }, {
                    key: "exitEditingHouseNumbers",
                    value: function() {
                        this.set("editingHouseNumbers", !1)
                    }
                }, {
                    key: "isInUse",
                    value: function(e) {
                        return this._lockingService.isInUse(e)
                    }
                }, {
                    key: "setInUse",
                    value: function(e, t) {
                        return this._lockingService.setInUse(e, t)
                    }
                }, {
                    key: "onObjectChangedId",
                    value: function(e, t) {
                        var n = t.oldID,
                            i = t.newID;
                        this._lockingService.onObjectChangedId(e, {
                            oldID: n,
                            newID: i
                        })
                    }
                }, {
                    key: "clearInUse",
                    value: function(e, t) {
                        return this._lockingService.clearInUse(e, t)
                    }
                }, {
                    key: "getObjectsInUseGroupedByRepository",
                    value: function() {
                        return this._lockingService.getObjectsInUseGroupedByRepository()
                    }
                }]),
                t
        }(c.a.Model),
        T = n(47),
        I = 0,
        A = 1,
        M = 2,
        O = c.a.Model.extend({
            socket: null,
            displayProjection: new OpenLayers.Projection("EPSG:4326"),
            initialize: function(e) {
                var t = e.app,
                    n = void 0 === t ? null : t;
                this._app = n,
                    this._mode = I,
                    this._app.on("change:loggedIn", this._onLoginChanged, this)
            },
            _onLoginChanged: function() {
                if (this._app.get("loggedIn"))
                    return this.activate()
            },
            activate: function() {
                var e = this;
                if (null == this.socket) {
                    var t = "".concat(T.buildConfig.marx_path);
                    return this.socket = io(t, {
                            path: t,
                            transports: ["websocket"]
                        }),
                        this.socket.on("connect", function() {
                            return e._mode === I ? (e._mode = A,
                                e.trigger("firstConnect")) : (e._mode = M,
                                e.trigger("reconnect"))
                        }),
                        this.socket.on("error", function(e) {
                            console.error("Could not establish connection to marx", e)
                        }),
                        this.socket.on("disconnect", function() {
                            return e.trigger("disconnect")
                        })
                }
            },
            CLASS_NAME: "Waze.Model.Marx"
        }),
        C = n(180),
        R = n(34),
        D = n.n(R),
        L = n(4),
        P = n.n(L),
        N = n(202),
        x = n(49),
        V = n(42),
        j = 27,
        U = function(e) {
            function t(e, n, i) {
                var s;
                r()(this, t),
                    (s = f()(this, v()(t).call(this)))._map = e,
                    s._layers = n,
                    s._rootContainerLayer = null,
                    s._listenToKeys = ["shiftKey", "metaKey", "ctrlKey", "altKey"],
                    s._xy = null,
                    s._downFeature = null,
                    s._hadMouseDown = !1,
                    s._hadMouseUp = !1,
                    s._lastOverFeature = null,
                    s._duringBoxSelection = !1,
                    s._keyboardShortcuts = null,
                    s._downKeys = [],
                    s._deselectKey = j,
                    s._selectRenderIntent = "select",
                    s._highlightRenderIntent = "highlight",
                    s._highlightSelectedRenderIntent = "highlightselected",
                    s._deletedRenderIntent = "delete",
                    s._highlightDeletedRenderIntent = "highlightdeleted",
                    s._clickOut = !0,
                    s._multipleSelectMode = !1,
                    s.clickTolerance = 4,
                    s.stopClick = !0,
                    s.supportedGeometryTypes = null,
                    s.boxSelectionLayers = null,
                    s.multipleKeys = ["metaKey", "ctrlKey"],
                    s.pathKeys = ["altKey"],
                    Object.assign(D()(s), i),
                    s._initLayers(n);
                var o = OpenLayers.Handler.MOD_META | OpenLayers.Handler.MOD_SHIFT,
                    a = OpenLayers.Handler.MOD_CTRL | OpenLayers.Handler.MOD_SHIFT;
                return Object(x.isMac)() ? s._createBoxHandler(o) : s._createBoxHandler(a),
                    s._bindEvents(),
                    s
            }
            return y()(t, e),
                o()(t, [{
                    key: "_initLayers",
                    value: function(e) {
                        this._rootContainerLayer = new OpenLayers.Layer.Vector.RootContainer("".concat(this.id, "_container"), {
                                layers: e
                            }),
                            this._map.addLayer(this._rootContainerLayer),
                            this._moveContainerLayerToTop()
                    }
                }, {
                    key: "_moveContainerLayerToTop",
                    value: function() {
                        var e = Math.max(V.Z_INDEX_BASE.Feature - 1, this._rootContainerLayer.getZIndex()) + 1;
                        this._rootContainerLayer.setZIndex(e)
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._map.getMapEventsListener().registerPriority("mousedown", this, this._onMouseDown),
                            this._map.getMapEventsListener().registerPriority("mouseup", this, this._onMouseUp),
                            this._map.getMapEventsListener().registerPriority("click", this, this._onMouseClick),
                            this._map.getMapEventsListener().registerPriority("touchstart", this, this._onTouchStart),
                            this._map.getMapEventsListener().registerPriority("mousemove", this, this._onMouseMove),
                            this._map.getMapEventsListener().on({
                                removelayer: this._handleMapEvents,
                                changelayer: this._handleMapEvents,
                                scope: this
                            }),
                            this._keyboardShortcuts = new N.a(this, {
                                keydown: this._onKeyDown
                            }),
                            this._keyboardShortcuts.activate()
                    }
                }, {
                    key: "_createBoxHandler",
                    value: function(e) {
                        new OpenLayers.Handler.Box(new OpenLayers.Control({
                            map: this._map.getOLMap(),
                            layer: this._rootContainerLayer
                        }), {
                            down: this._onBoxSelectionStart.bind(this),
                            done: this._onBoxSelectionDone.bind(this)
                        }, {
                            boxDivClassName: "olHandlerBoxSelectFeature",
                            keyMask: e
                        }).activate()
                    }
                }, {
                    key: "_getSupportedFeatureFromEvent",
                    value: function(e) {
                        var t = this._rootContainerLayer.getFeatureFromEvent(e);
                        if (t && this._isGeometryTypeSupported(t))
                            return t;
                        return null
                    }
                }, {
                    key: "_onKeyDown",
                    value: function(e) {
                        this._deselectKey === e.keyCode && this._onDeselectKey()
                    }
                }, {
                    key: "_onMouseDown",
                    value: function(e) {
                        if (this._hadMouseDown = !0,
                            this._setDownKeysFromEvent(e),
                            this._xy = e.xy,
                            OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) {
                            this._xy = e.xy;
                            var t = this._getSupportedFeatureFromEvent(e);
                            t && (this._downFeature = t)
                        }
                    }
                }, {
                    key: "_onMouseUp",
                    value: function(e) {
                        this._setDownKeysFromEvent(e),
                            this._hadMouseUp = !0
                    }
                }, {
                    key: "_onMouseClick",
                    value: function(e) {
                        this._setDownKeysFromEvent(e);
                        var t = this._getSupportedFeatureFromEvent(e),
                            n = this._downFeature;
                        (this._downFeature = null,
                            this._hadMouseDown && this._hadMouseUp) && (Math.sqrt(Math.pow(e.xy.x - this._xy.x, 2) + Math.pow(e.xy.y - this._xy.y, 2)) <= this.clickTolerance && (t ? n === t && this._onFeatureClick(t) : this._clickOut && this._onClickOut()));
                        return this._resetMouseState(),
                            this._handleStopClick(t)
                    }
                }, {
                    key: "_resetMouseState",
                    value: function() {
                        this._hadMouseDown = !1,
                            this._hadMouseUp = !1,
                            this._downFeature = null
                    }
                }, {
                    key: "_onTouchStart",
                    value: function(e) {
                        var t = this._getSupportedFeatureFromEvent(e),
                            n = null != t,
                            i = this._clickOut;
                        n ? this._onFeatureClick(t) : i && this._onClickOut()
                    }
                }, {
                    key: "_handleStopClick",
                    value: function(e) {
                        if (this.stopClick && e)
                            return !1
                    }
                }, {
                    key: "_onMouseMove",
                    value: function(e) {
                        this._setDownKeysFromEvent(e);
                        var t = this._getSupportedFeatureFromEvent(e);
                        t && !t.layer && (t = null),
                            t ? (t !== this._lastOverFeature && (this._lastOverFeature && this._onFeatureOut(this._lastOverFeature),
                                    this._onFeatureIn(t)),
                                this._lastOverFeature = t) : this._lastOverFeature && (this._onFeatureOut(this._lastOverFeature),
                                this._lastOverFeature = null)
                    }
                }, {
                    key: "_onBoxSelectionStart",
                    value: function() {
                        this._duringBoxSelection = !0
                    }
                }, {
                    key: "_onBoxSelectionDone",
                    value: function(e) {
                        if (e instanceof OpenLayers.Bounds) {
                            for (var t, n = this._map.getLonLatFromPixel(new OpenLayers.Pixel(e.left, e.bottom)), i = this._map.getLonLatFromPixel(new OpenLayers.Pixel(e.right, e.top)), r = new OpenLayers.Bounds(n.lon, n.lat, i.lon, i.lat).toGeometry(), s = this.boxSelectionLayers || this._rootContainerLayer.layers || [this._rootContainerLayer], o = [], a = 0; a < s.length; ++a)
                                for (var l = 0, u = (t = s[a]).features.length; l < u; ++l) {
                                    var c = t.features[l];
                                    c.getVisibility() && this._isGeometryTypeSupported(c) && r.intersects(c.geometry) && o.push(c)
                                }
                            this._duringBoxSelection = !1,
                                this.triggerMethod("map:selection:featureBoxSelection", o)
                        }
                    }
                }, {
                    key: "_onDeselectKey",
                    value: function() {
                        this.triggerMethod("map:selection:deselectKey")
                    }
                }, {
                    key: "_onFeatureIn",
                    value: function(e) {
                        this.triggerMethod("map:selection:featureIn", e)
                    }
                }, {
                    key: "_onFeatureOut",
                    value: function(e) {
                        this.triggerMethod("map:selection:featureOut", e)
                    }
                }, {
                    key: "_onFeatureClick",
                    value: function(e) {
                        this._isPathSelect() ? this.triggerMethod("map:selection:pathSelect", {
                            feature: e
                        }) : this.triggerMethod("map:selection:featureClick", {
                            feature: e,
                            addSelection: this._isMultiSelect()
                        })
                    }
                }, {
                    key: "_onClickOut",
                    value: function() {
                        this._isMultiSelect() || this.triggerMethod("map:selection:clickOut", {
                            addSelection: this._isMultiSelect()
                        })
                    }
                }, {
                    key: "_setDownKeysFromEvent",
                    value: function(e) {
                        this._downKeys = this._listenToKeys.filter(function(t) {
                            return Boolean(e[t])
                        })
                    }
                }, {
                    key: "_isMultiSelect",
                    value: function() {
                        var e = this;
                        return this._multipleSelectMode || this._downKeys.some(function(t) {
                            return e.multipleKeys.indexOf(t) > -1
                        })
                    }
                }, {
                    key: "_isPathSelect",
                    value: function() {
                        var e = this;
                        return this._downKeys.some(function(t) {
                            return e.pathKeys.indexOf(t) > -1
                        })
                    }
                }, {
                    key: "highlight",
                    value: function(e, t, n) {
                        var i = e.layer,
                            r = this.selectStyle;
                        r || (r = n ? this._highlightDeletedRenderIntent : t ? this._duringBoxSelection ? this._selectRenderIntent : this._highlightSelectedRenderIntent : this._highlightRenderIntent),
                            i.drawFeature(e, r)
                    }
                }, {
                    key: "unhighlight",
                    value: function(e, t, n) {
                        var i = e.layer;
                        if (i) {
                            var r = this.selectStyle;
                            r || (r = n ? this._deletedRenderIntent : t ? this._selectRenderIntent : e.layer.style || "default"),
                                i.drawFeature(e, r)
                        }
                    }
                }, {
                    key: "_isGeometryTypeSupported",
                    value: function(e) {
                        return null === this.supportedGeometryTypes || this.supportedGeometryTypes.indexOf(e.geometry.CLASS_NAME) > -1
                    }
                }, {
                    key: "toggleMultipleSelection",
                    value: function() {
                        this._multipleSelectMode = !this._multipleSelectMode,
                            this._clickOut = !this._multipleSelectMode
                    }
                }, {
                    key: "getLayer",
                    value: function() {
                        return this._rootContainerLayer
                    }
                }, {
                    key: "resetState",
                    value: function() {
                        this._downKeys = [],
                            this._resetMouseState()
                    }
                }, {
                    key: "_handleMapEvents",
                    value: function() {
                        this._moveContainerLayerToTop()
                    }
                }]),
                t
        }(P.a.Object),
        F = function() {
            function e(t) {
                r()(this, e),
                    this.currentIntent = null,
                    this.flashTimeMillis = 100,
                    this.flashIntent = "flash",
                    Object.assign(this, t),
                    this.pendingFeatures = [],
                    this.current = null
            }
            return o()(e, [{
                    key: "destroy",
                    value: function() {
                        this.pendingFeatures.splice(0, this.pendingFeatures.length)
                    }
                }, {
                    key: "addFeature",
                    value: function(e) {
                        this.pendingFeatures.push(e),
                            this.current || this.flash()
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this.pendingFeatures = this.pendingFeatures.concat(e),
                            this.current || this.flash()
                    }
                }, {
                    key: "flash",
                    value: function() {
                        if (this.current && this.current.layer && this.current.renderIntent === this.flashIntent && this.current.layer.drawFeature(this.current, this.currentIntent),
                            0 !== this.pendingFeatures.length) {
                            if (this.current = this.pendingFeatures.shift(),
                                this.current = W.map.segmentLayer.getVector(this.current),
                                this.current) {
                                this.currentIntent = this.current.renderIntent,
                                    this.current.layer && this.current.layer.drawFeature(this.current, this.flashIntent);
                                var e = this;
                                window.setTimeout(function() {
                                    e.flash()
                                }, this.flashTimeMillis)
                            }
                        } else
                            this.current = null
                    }
                }]),
                e
        }();
    Object.assign(F.prototype, {
        CLASS_NAME: "Waze.Service.FlashService"
    });
    var B = F,
        G = n(23),
        H = function() {
            function e(t, n) {
                r()(this, e),
                    Object.assign(this, n),
                    this.model = t,
                    this.flashService = new B
            }
            return o()(e, [{
                    key: "destroy",
                    value: function() {
                        this.flashService.destroy()
                    }
                }, {
                    key: "activate",
                    value: function() {
                        this.model.segments.on(G.ATTR_CHANGED, this.onSegmentsChanged, this),
                            this.model.segments.on(G.STATE_DELETED, this.onSegmentsChanged, this),
                            this.model.segments.on(G.ADDED, this.onSegmentsAdded, this)
                    }
                }, {
                    key: "deactivate",
                    value: function() {
                        this.model.segments.off(G.ATTR_CHANGED, this.onSegmentsChanged, this),
                            this.model.segments.off(G.STATE_DELETED, this.onSegmentsChanged, this),
                            this.model.segments.off(G.ADDED, this.onSegmentsAdded, this)
                    }
                }, {
                    key: "flash",
                    value: function(e) {
                        e instanceof Array ? this.flashService.addFeatures(e) : this.flashService.addFeature(e)
                    }
                }, {
                    key: "onSegmentsChanged",
                    value: function(e) {
                        for (var t = [], n = 0, i = e.length; n < i; n++)
                            e[n].state || t.push(e[n]);
                        t.length > 0 && this.flash(t)
                    }
                }, {
                    key: "onSegmentsAdded",
                    value: function(e) {
                        for (var t = [], n = 0; n < 2; n++)
                            for (var i = 0, r = e.length; i < r; i++)
                                e[i].state === OpenLayers.State.INSERT && e[i].attributes.origIDs && t.push(e[i]);
                        t.length > 0 && this.flash(t)
                    }
                }]),
                e
        }();
    Object.assign(H.prototype, {
        CLASS_NAME: "Waze.Service.Services"
    });
    var z = H,
        q = n(187),
        Y = function(e) {
            function t(e) {
                var n;
                return r()(this, t),
                    (n = f()(this, v()(t).call(this)))._snapshot = !1,
                    n._actionManager = e,
                    n._actionManager.events.on({
                        hasActions: n._onActionsChanged,
                        noActions: n._onActionsChanged,
                        scope: D()(n)
                    }),
                    n
            }
            return y()(t, e),
                o()(t, [{
                    key: "isSnapshotOn",
                    value: function() {
                        return this._snapshot
                    }
                }, {
                    key: "canToggleOn",
                    value: function() {
                        return !this._actionManager.canSave()
                    }
                }, {
                    key: "toggle",
                    value: function(e) {
                        if (e !== this._snapshot)
                            return !1 === e && this._actionManager.clear(),
                                this._snapshot = e,
                                this._actionManager.toggleSavingEnabled(!e),
                                this.trigger("change:state")
                    }
                }, {
                    key: "_onActionsChanged",
                    value: function() {
                        return this.trigger("change:togglable")
                    }
                }]),
                t
        }(n.n(q).a);
    E.a.extend(Y.prototype, c.a.Events);
    var $ = Y,
        K = n(8),
        J = n.n(K),
        Z = n(33),
        Q = n(46),
        X = OpenLayers.Class(OpenLayers.Handler, {
            EVENTMAP: {
                mousemove: {
                    in: "over",
                    out: "out"
                },
                click: {
                    in: "click"
                },
                dblclick: {
                    in: "dblclick",
                    out: null
                }
            },
            feature: null,
            lastFeature: null,
            geometryTypes: null,
            initialize: function(e, t, n, i) {
                OpenLayers.Handler.prototype.initialize.apply(this, [e, n, i]),
                    this.layer = t
            },
            mousemove: function(e) {
                return !this.callbacks.over && !this.callbacks.out || (this.handle(e),
                    !0)
            },
            click: function(e) {
                return !this.handle(e) || !this.stopClick
            },
            geometryTypeMatches: function(e) {
                return null === this.geometryTypes || OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) > -1
            },
            handle: function(e) {
                this.feature && !this.feature.layer && (this.feature = null);
                var t = e.type,
                    n = !1,
                    i = Boolean(this.feature);
                if (this.feature = this.layer.getFeatureFromEvent(e),
                    this.feature && !this.feature.layer && (this.feature = null),
                    this.lastFeature && !this.lastFeature.layer && (this.lastFeature = null),
                    this.feature) {
                    var r = this.feature !== this.lastFeature,
                        s = r && this.feature._virtualParent === this.lastFeature,
                        o = "click" === t || "dblclick" === t || "touchstart" === t;
                    this.geometryTypeMatches(this.feature) && this.feature.layer && !this.feature.layer.featuresNonSelectable ? (i && r && !s ? (this.lastFeature && this.triggerCallback(t, "out", [this.lastFeature]),
                            this.triggerCallback(t, "in", [this.feature])) : i && !o || this.triggerCallback(t, "in", [this.feature]),
                        this.lastFeature = this.feature,
                        n = !0) : (this.lastFeature && i && r && this.triggerCallback(t, "out", [this.lastFeature]),
                        this.feature = null)
                } else
                    this.lastFeature && i && this.triggerCallback(t, "out", [this.lastFeature]);
                return n
            },
            triggerCallback: function(e, t, n) {
                var i = this.EVENTMAP[e][t];
                i && this.callback(i, n)
            },
            activate: function() {
                var e = !1;
                return OpenLayers.Handler.prototype.activate.apply(this, arguments) && (this.moveLayerToTop(),
                        this.map.events.on({
                            removelayer: this.handleMapEvents,
                            changelayer: this.handleMapEvents,
                            scope: this
                        }),
                        e = !0),
                    e
            },
            deactivate: function() {
                var e = !1;
                return OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.moveLayerBack(),
                        this.feature = null,
                        this.lastFeature = null,
                        this.down = null,
                        this.up = null,
                        this.map.events.un({
                            removelayer: this.handleMapEvents,
                            changelayer: this.handleMapEvents,
                            scope: this
                        }),
                        e = !0),
                    e
            },
            handleMapEvents: function(e) {
                e.property && "order" !== e.property || this.moveLayerToTop()
            },
            moveLayerToTop: function() {
                var e = Math.max(V.Z_INDEX_BASE.Feature - 1, this.layer.getZIndex()) + 1;
                this.layer.setZIndex(e)
            },
            moveLayerBack: function() {
                var e = this.layer.getZIndex() - 1;
                e >= V.Z_INDEX_BASE.Feature ? this.layer.setZIndex(e) : this.map.setLayerZIndex(this.layer, this.map.getLayerIndex(this.layer))
            },
            CLASS_NAME: "Waze.Handler.Feature"
        }),
        ee = n(203),
        te = OpenLayers.Class(OpenLayers.Geometry.Point, {
            points: null,
            initialize: function(e) {
                OpenLayers.Geometry.Point.prototype.initialize.apply(this, [e[0].x, e[0].y]),
                    this.points = e
            },
            clone: function() {
                return new te(this.points)
            },
            calculateBounds: function() {
                OpenLayers.Geometry.Point.prototype.calculateBounds.apply(this);
                for (var e = 0; e < this.points.length; e++)
                    this.points[e].calculateBounds()
            },
            move: function(e, t) {
                OpenLayers.Geometry.Point.prototype.move.apply(this, arguments);
                for (var n = 0; n < this.points.length; n++)
                    this.points[n].move(e, t)
            },
            translate: function(e, t) {
                this.x = e,
                    this.y = t,
                    this.clearBounds(),
                    this.points.forEach(function(n) {
                        n.x = e,
                            n.y = t,
                            n.clearBounds()
                    })
            },
            rotate: function(e, t) {
                OpenLayers.Geometry.Point.prototype.rotate.apply(this, arguments);
                for (var n = 0; n < this.points.length; n++)
                    this.points[n].rotate(e, t)
            },
            resize: function(e, t, n) {
                OpenLayers.Geometry.Point.prototype.resize.apply(this, arguments);
                for (var i = 0; i < this.points.length; i++)
                    this.points[i].resize(e, t, n)
            },
            transform: function(e, t) {
                OpenLayers.Geometry.Point.prototype.transform.apply(this, arguments);
                for (var n = 0; n < this.points.length; n++)
                    this.points[n].transform(e, t)
            }
        }),
        ne = te,
        ie = n(12),
        re = OpenLayers.Class(OL.Feature.Vector, {
            initialize: function(e, t, n) {
                OL.Feature.Vector.prototype.initialize.apply(this, [new ne(e), t, n])
            },
            getID: function() {
                return this.id
            },
            clone: function() {
                return new re(this.geometry ? ie.cloneGeometry(this.geometry) : null, this.attributes, this.style)
            },
            CLASS_NAME: "Waze.Feature.AggregatePointVector"
        }),
        se = re,
        oe = n(414),
        ae = n.n(oe),
        le = n(37),
        ue = n(25),
        ce = n(417),
        de = n.n(ce),
        he = n(151),
        pe = function() {
            function e(t, n, i) {
                r()(this, e),
                    this._segments = t,
                    this._drawingContext = n,
                    this._dataModel = i,
                    this._useCase = new de.a(this._dataModel, this._segments)
            }
            return o()(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "_onMarkerClicked",
                    value: function() {
                        var e = this;
                        this._drawingContext.clear(),
                            this._confirmBridge().then(function() {
                                e._useCase.bridgeSegments()
                            }).catch(function(e) {})
                    }
                }, {
                    key: "_getLonLat",
                    value: function() {
                        var e = this._useCase.findConnectingNode();
                        return ue.toLonLat(e.geometry)
                    }
                }, {
                    key: "_confirmBridge",
                    value: function() {
                        return he.a.showAsync({
                            lonlat: this._getLonLat(),
                            title: I18n.t("edit.node.delete_confirm.bridge_node_title"),
                            content: I18n.t("edit.node.delete_confirm.bridge_node_content"),
                            dontShowAgainKey: "bridge-segments"
                        })
                    }
                }, {
                    key: "drawBridgeMarker",
                    value: function() {
                        if (this._drawingContext.clear(),
                            this._useCase.canBridgeSegments()) {
                            var e = new OL.Marker(this._getLonLat(), new le.default("add-bridge"));
                            e.events.register("click", this, this._onMarkerClicked),
                                this._drawingContext.addMarkers([e])
                        }
                    }
                }]),
                e
        }(),
        ge = n(101),
        fe = n(26),
        me = n.n(fe),
        ve = OpenLayers.Class(OpenLayers.Control, Q.a, {
            geometryTypes: null,
            clickout: !0,
            toggle: !0,
            toggleKey: null,
            multiple: !1,
            multipleKey: null,
            standalone: !1,
            sketchLayer: null,
            segmentLayer: null,
            nodeLayer: null,
            draggingIntent: "drag",
            features: null,
            dragHandles: null,
            nodeDragHandles: null,
            virtualDragHandles: null,
            directionArrows: null,
            dragPointsPaddingVertices: null,
            selectionManager: null,
            featureHover: null,
            dragControl: null,
            snapControl: null,
            handlers: null,
            verticesStyle: null,
            mode: null,
            modified: [],
            radiusHandle: null,
            dragHandle: null,
            initialize: function(e, t, n, i) {
                this.sketchLayer = e,
                    this.segmentLayer = t,
                    this.nodeLayer = n,
                    this.dragHandles = {},
                    this.nodeDragHandles = {},
                    this.virtualDragHandles = {},
                    this.directionArrows = {},
                    this.dragPointsPaddingVertices = [],
                    this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                    OpenLayers.Control.prototype.initialize.apply(this, [i]);
                var r = this.features.map(function(e) {
                    return e.model
                }).filter(function(e) {
                    return e instanceof me.a
                });
                this.bridgeCreator = new pe(r, i.map.getDrawingContext(), this.model),
                    this.nodeCreator = new ae.a(r, i.map.getDrawingContext(), this.model),
                    W.accelerators.events.register("toggleMultipleSelection", this, this.toggleMultipleSelection),
                    W.accelerators.events.register("deleteVertex", this, this.deleteVertex);
                var s = this;
                this.featureHover = new X(this, this.selectionManager.selectionMediator.getLayer(), {
                    over: function(e) {
                        var t = e.parent;
                        !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t) && (this.drawSegmentDraggingHandles(t),
                            this.sketchLayer.removeFeatures(this.directionArrows[t.model.getID()] || [], {
                                silent: !0
                            }))
                    },
                    out: function(e) {
                        var t = e.parent;
                        !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t) && (this.removeAllFeatures(this.virtualDragHandles),
                            this.removeAllFeatures(this.dragHandles),
                            this.sketchLayer.addFeatures(this.directionArrows[t.model.getID()] || [], {
                                silent: !0
                            }))
                    },
                    click: function(e) {
                        var t = e.parent;
                        if (!this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.includes(t))
                            return this.selectionManager.unselectFeature(t),
                                !1
                    }
                });
                var o = {
                    geometryTypes: ["OpenLayers.Geometry.Point"],
                    snappingOptions: this.snappingOptions,
                    onStart: function(e, t) {
                        s.dragStart.apply(s, [e, t])
                    },
                    onDrag: function(e, t) {
                        s.dragVertex.apply(s, [e, t])
                    },
                    onComplete: function(e) {
                        s.dragComplete.apply(s, [e])
                    },
                    featureCallbacks: {
                        over: function(e) {
                            e._sketch && s.dragControl.overFeature.apply(s.dragControl, [e])
                        },
                        click: function(e) {
                            s.clickOnDragPoint.apply(s, [e])
                        }
                    },
                    dragCallbacks: {}
                };
                this.dragControl = new OpenLayers.Control.DragFeature(this.sketchLayer, o),
                    this.dragControl.handlers.feature.geometryTypeMatches = function(e) {
                        return OpenLayers.Handler.Feature.prototype.geometryTypeMatches.apply(this, arguments) && !e.uneditable
                    },
                    this.snapControl = new ee.a({
                        layer: this.sketchLayer,
                        targets: [{
                            layer: this.nodeLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.isConnectedToBigJunction()
                                }
                            }
                        }, {
                            layer: this.segmentLayer,
                            filter: {
                                evaluate: function(e) {
                                    return new ge.CanEditGeometryUseCase(e.model.model).canEditSegmentGeometry(e.model)
                                }
                            }
                        }]
                    });
                var a = function(e) {
                    this.dragControl.feature && this.dragControl.feature._nodeDragPoint && this.dragControl.feature.geometry.translate(e.point.x, e.point.y)
                };
                this.snapControl.events.on({
                    unsnap: a,
                    snap: a,
                    scope: this
                })
            },
            destroy: function() {
                this.dragControl.destroy(),
                    this.snapControl.destroy(),
                    this.bridgeCreator.destroy(),
                    this.nodeCreator.destroy(),
                    this.featureHover.destroy(),
                    this.map.events.un({
                        zoomend: this.resetVertices,
                        scope: this
                    }),
                    W.accelerators.events.unregister("toggleMultipleSelection", this, this.toggleMultipleSelection),
                    W.accelerators.events.unregister("deleteVertex", this, this.deleteVertex),
                    OpenLayers.Control.prototype.destroy.apply(this, [])
            },
            activate: function() {
                return this.standalone || this.selectionManager.enable(),
                    this.featureHover.activate() && this.snapControl.activate() && OpenLayers.Control.prototype.activate.apply(this, arguments)
            },
            deactivate: function() {
                var e = !1;
                return OpenLayers.Control.prototype.deactivate.apply(this, arguments) && (this.removeAllFeatures(this.dragHandles),
                        this.removeAllFeatures(this.virtualDragHandles),
                        this.dragHandles = [],
                        this.dragControl.deactivate(),
                        this.featureHover.deactivate(),
                        this.snapControl.deactivate(),
                        e = !0),
                    e
            },
            removeAllFeatures: function(e) {
                var t = this;
                Object.values(e).forEach(function(e) {
                    t.sketchLayer.removeFeatures(e, {
                        silent: !0
                    })
                })
            },
            addAllFeatures: function(e) {
                var t = this;
                Object.values(e).forEach(function(e) {
                    t.sketchLayer.addFeatures(e, {
                        silent: !0
                    })
                })
            },
            selectFeature: function() {
                this.features.forEach(function(e) {
                        this.drawSegmentDraggingHandles(e)
                    }, this),
                    this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                    this.resetVertices(),
                    this.dragControl.activate()
            },
            unselectFeature: function(e) {
                e || (e = this.features),
                    e instanceof Array || (e = [e]),
                    e.concat().forEach(function(e) {
                        e._highlightPlaceHolder && (e = e.parent),
                            this.features.includes(e) && (OpenLayers.Util.removeItem(this.features, e),
                                e.layer && (e.layer.events.triggerEvent("afterfeaturemodified", {
                                        feature: e,
                                        modified: OpenLayers.Util.indexOf(this.modified, e) >= 0
                                    }),
                                    e._sketch && (delete e._sketch,
                                        e.layer.drawFeature(e))),
                                OpenLayers.Util.removeItem(this.modified, e))
                    }, this),
                    0 === this.features.length && this.dragControl.deactivate(),
                    this.resetVertices()
            },
            clickOnDragPoint: function(e) {},
            dragStart: function(e, t) {
                var n = this;
                this.onModificationStart(e),
                    e.parents.forEach(function(e) {
                        n.sketchLayer.removeFeatures(n.directionArrows[e.model.getID()], {
                            silent: !0
                        })
                    }),
                    OpenLayers.Util.indexOf(this.features, e) < 0 && !e.virtual && e !== this.dragHandle && e !== this.radiusHandle && (null !== this.geometryTypes && -1 === OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) || (this.dragControl.overFeature.apply(this.dragControl, [e]),
                            this.dragControl.lastPixel = t,
                            this.dragControl.handlers.drag.started = !0,
                            this.dragControl.handlers.drag.start = t,
                            this.dragControl.handlers.drag.last = t),
                        e.parents.forEach(function(e) {
                            e._sketch = !0
                        }))
            },
            dragVertex: function(e, t) {
                if (this.modified = !0,
                    e.parent && "OpenLayers.Geometry.Point" === e.parent.geometry.CLASS_NAME)
                    this.sketchLayer.events.triggerEvent("vertexmodified", {
                        vertex: e.geometry,
                        feature: e,
                        pixel: t
                    });
                else if (e._index) {
                    var n = e.parent.model.getID(),
                        i = e.parentGeom;
                    i || (i = e.parent.geometry),
                        i.addComponent(e.geometry, e._index),
                        delete e._index,
                        OpenLayers.Util.removeItem(this.virtualDragHandles[n], e),
                        this.dragHandles[n].push(e)
                } else
                    e === this.dragHandle ? (this.removeAllFeatures(this.dragHandles),
                        this.dragHandles = {},
                        this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                                silent: !0
                            }),
                            this.radiusHandle = null)) : e !== this.radiusHandle && this.sketchLayer.events.triggerEvent("vertexmodified", {
                        vertex: e.geometry,
                        feature: e.parent,
                        pixel: t
                    });
                Object.keys(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                        this.virtualDragHandles = []),
                    e.parents.forEach(function(e) {
                        e.layer && e.layer.drawFeature(e, this.draggingIntent)
                    }, this),
                    this.sketchLayer.drawFeature(e)
            },
            dragComplete: function(e) {
                this.onModificationComplete(e),
                    this.sketchLayer.events.triggerEvent("featuremodified", {
                        feature: e
                    });
                for (var t = 0, n = e.parents.length; t < n; t++) {
                    var i = e.parents[t];
                    delete i._sketch,
                        i.layer && (this.selectionManager.recalculateStyle(e.parents[t]),
                            i.layer.events.triggerEvent("featuremodified", {
                                feature: e.parents[t]
                            }))
                }
                this.resetVertices(),
                    e.parent && (this.sketchLayer.removeFeatures(this.directionArrows[e.parent.model.getID()], {
                            silent: !0
                        }),
                        this.drawSegmentDraggingHandles(e.parent))
            },
            drawSegmentDraggingHandles: function(e) {
                e && (this.sketchLayer.addFeatures(this.virtualDragHandles[e.model.getID()] || []),
                    this.sketchLayer.addFeatures(this.dragHandles[e.model.getID()] || []))
            },
            isSelected: function(e) {
                return e.layer && OpenLayers.Util.indexOf(e.layer.selectedFeatures, e) >= 0
            },
            resetVertices: function() {
                this.dragControl.feature && this.dragControl.outFeature(this.dragControl.feature),
                    Object.keys(this.dragHandles).length > 0 && (this.removeAllFeatures(this.dragHandles),
                        this.dragHandles = {}),
                    Object.keys(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                        this.virtualDragHandles = {}),
                    Object.keys(this.nodeDragHandles).length > 0 && (this.removeAllFeatures(this.nodeDragHandles),
                        this.nodeDragHandles = {}),
                    Object.keys(this.directionArrows).length > 0 && (this.removeAllFeatures(this.directionArrows),
                        this.directionArrows = {}),
                    this.dragPointsPaddingVertices.length > 0 && (this.sketchLayer.removeFeatures(this.dragPointsPaddingVertices, {
                            silent: !0
                        }),
                        this.dragPointsPaddingVertices = []),
                    this.dragHandle && (this.sketchLayer.destroyFeatures([this.dragHandle, this.dragBoundry], {
                            silent: !0
                        }),
                        this.dragHandle = null,
                        this.dragBoundry = null),
                    this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                            silent: !0
                        }),
                        this.radiusHandle = null),
                    this.features.length > 0 && (this.mode & OpenLayers.Control.ModifyFeature.DRAG && this.collectDragHandle(),
                        this.mode & (OpenLayers.Control.ModifyFeature.ROTATE | OpenLayers.Control.ModifyFeature.RESIZE) && this.collectRadiusHandle(),
                        this.mode & OpenLayers.Control.ModifyFeature.RESHAPE && (this.mode & OpenLayers.Control.ModifyFeature.RESIZE || this.collectVertices())),
                    this.bridgeCreator.drawBridgeMarker(),
                    this.nodeCreator.drawNodeMarker()
            },
            toggleMultipleSelection: function() {
                this.selectionManager.toggleMultipleSelection()
            },
            deleteVertex: function() {
                var e = this.dragControl.feature;
                e && e._dragPoint && !this.dragControl.handlers.drag.dragging && e.parent && (this.onModificationStart(e),
                    e.parentGeom ? e.parentGeom.removeComponent(e.geometry) : e.parent.geometry.removeComponent(e.geometry),
                    e.parent.layer.drawFeature(e.parent, this.selectionManager.selectionMediator._selectRenderIntent),
                    this.onModificationComplete(e),
                    this.sketchLayer.events.triggerEvent("featuremodified", {
                        feature: e
                    }))
            },
            createGeometryCollection: function() {
                for (var e = [], t = 0, n = this.features.length; t < n; t++)
                    e.push(this.features[t].geometry);
                return new OpenLayers.Geometry.Collection(e)
            },
            collectVertices: function() {
                this.dragHandles = {},
                    this.virtualDragHandles = {},
                    this.nodeDragHandles = {},
                    this.directionArrows = {},
                    this.dragPointsPaddingVertices = [],
                    this.collectVerticesFromFeatures(this.features, this.dragHandles, this.virtualDragHandles, this.nodeDragHandles),
                    this.sketchLayer.addFeatures(this.dragPointsPaddingVertices, {
                        silent: !0
                    }),
                    this.addAllFeatures(this.directionArrows),
                    this.addAllFeatures(this.nodeDragHandles)
            },
            collectComponentVertices: function(e, t, n) {
                var i, r, s, o, a = e.geometry;
                if ("OpenLayers.Geometry.Point" === a.CLASS_NAME)
                    (r = new se([a], null, this.verticesStyle))._sketch = !0,
                    r.parent = e,
                    t.push(r);
                else {
                    var l = a.components.length;
                    for ("OpenLayers.Geometry.LinearRing" === a.CLASS_NAME && (l -= 1),
                        i = 0; i < l; ++i)
                        "OpenLayers.Geometry.Point" === (s = a.components[i]).CLASS_NAME ? ((r = new OL.Feature.Vector(s, null, this.verticesStyle))._sketch = !0,
                            r.renderIntent = "sketch",
                            r.parent = e,
                            t.push(r)) : this.collectComponentVertices(r, t, n);
                    if ("OpenLayers.Geometry.MultiPoint" !== a.CLASS_NAME)
                        for (i = 0,
                            o = a.components.length; i < o - 1; ++i) {
                            var u = a.components[i],
                                c = a.components[i + 1];
                            if ("OpenLayers.Geometry.Point" === u.CLASS_NAME && "OpenLayers.Geometry.Point" === c.CLASS_NAME) {
                                var d = (u.x + c.x) / 2,
                                    h = (u.y + c.y) / 2,
                                    p = new OL.Feature.Vector(new OpenLayers.Geometry.Point(d, h));
                                p.parent = e,
                                    p._index = i + 1,
                                    p._sketch = !0,
                                    p._middleDragPoint = !0,
                                    p.virtual = !0,
                                    n.push(p)
                            }
                        }
                }
            },
            collectVerticesFromFeatures: function(e, t, n) {
                for (var i = 0, r = e.length; i < r; i++)
                    this.collectComponentVertices(e[i], t, n)
            },
            setMap: function(e) {
                this.dragControl.setMap(e),
                    this.featureHover.setMap(e),
                    this.snapControl.setMap(e),
                    e.events.on({
                        zoomend: this.resetVertices,
                        scope: this
                    }),
                    OpenLayers.Control.prototype.setMap.apply(this, arguments)
            },
            onModificationStart: function(e) {},
            onModificationComplete: function(e) {},
            CLASS_NAME: "Waze.Control.ModifyFeature"
        }),
        _e = n(70),
        ye = n(15),
        be = n.n(ye),
        Ee = n(132),
        we = n(206),
        Se = n.n(we),
        ke = n(419),
        Te = n.n(ke),
        Ie = n(21),
        Ae = n(420),
        Me = n.n(Ae),
        Oe = n(20),
        Ce = n(64),
        Re = n.n(Ce),
        De = function(e) {
            return "OpenLayers.Geometry.Point" === e.CLASS_NAME
        },
        Le = OpenLayers.Class(ve, {
            model: null,
            origGeometries: null,
            initialize: function(e, t, n, i, r, s, o) {
                this.features = e.concat(),
                    this.segmentSelection = t,
                    this.model = n,
                    this.nodeLayer = s,
                    this.segmentLayer = r,
                    ve.prototype.initialize.apply(this, [i, r, s, o]),
                    this.origGeometries = {},
                    this._registerEvents(),
                    this.map.addControl(this),
                    this.activate(),
                    this.selectFeature(this.feature)
            },
            destroy: function() {
                this._unregisterEvents(),
                    this.unselectFeature(),
                    this.deactivate(),
                    ve.prototype.destroy.apply(this, arguments)
            },
            _registerEvents: function() {
                this.model.segments.on(G.ATTR_CHANGED, this.onFeatureUpdated, this),
                    this.model.nodes.on(G.ATTR_CHANGED, this.onFeatureUpdated, this),
                    this.model.events.register("mergeend", this, this.onFeaturesMerge)
            },
            _unregisterEvents: function() {
                this.model.events.unregister("mergeend", this, this.onFeaturesMerge),
                    this.model.segments.off(G.ATTR_CHANGED, this.onFeatureUpdated, this),
                    this.model.nodes.off(G.ATTR_CHANGED, this.onFeatureUpdated, this)
            },
            onFeatureUpdated: function(e) {
                this.resetVertices()
            },
            clickOnDragPoint: function(e) {
                var t = null;
                if (e.parent && e.parent.model.type === be.a.NODE)
                    t = e.parent;
                else if (e.parent && e.parent.model.type === be.a.SEGMENT) {
                    var n = Oe.getVertices(e.parent.geometry, !0);
                    e.geometry.equals(n[0]) && e.parent.model.attributes.fromNodeID ? t = this.nodeLayer.getVector(this.model.nodes.getObjectById(e.parent.model.attributes.fromNodeID)) : e.geometry.equals(n[1]) && e.parent.model.attributes.toNodeID && (t = this.nodeLayer.getVector(this.model.nodes.getObjectById(e.parent.model.attributes.toNodeID)))
                }
                t && (this.selectionManager.unselectAll(),
                    this.selectionManager.selectFeature(t))
            },
            getFeaturesArray: function(e, t) {
                return e[t.getID()] || (e[t.getID()] = []),
                    e[t.getID()]
            },
            _getArrowVector: function(e, t, n) {
                var i, r;
                e.isOneWay() ? (r = t ? "arrowOneWayRestricted" : "arrowOneWayStandard",
                    i = 360 - Ie.radToDeg(E.a.last(n)),
                    !0 === e.attributes.revDirection && (i -= 180)) : r = "arrowTwoWayRestricted";
                var s = new OpenLayers.Feature.Vector(n[0], {
                    angle: i
                });
                return s["_".concat(r)] = !0,
                    s
            },
            collectVerticesFromFeatures: function(e, t, n, i) {
                var r = this,
                    s = this.calculateNodesToParents(e);
                Object.keys(s).forEach(function(e) {
                    var t = s[e],
                        n = r.model.nodes.getObjectById(e);
                    if (t && t[0] && t[0].model.isAllowed(_e.NodesPermissions.EDIT_GEOMETRY) && t.allPresent) {
                        var o = new se(r.getFeatureGeometries(t), null);
                        o._sketch = !0,
                            o._nodeDragPoint = !0,
                            n.isVirtual() ? o._virtualNodeDragPoint = !0 : o._regularNodeDragPoint = !0,
                            o.parents = t,
                            o.parent = o.parents[0],
                            o.uneditable = !n.isAllowedToMoveNode(),
                            r.getFeaturesArray(i, o.parent.model).push(o)
                    }
                });
                for (var o = 0; o < e.length; o++) {
                    var a = e[o],
                        l = e[o].model;
                    if (l.type === be.a.SEGMENT) {
                        var u = l.getDrivingRestrictionCount();
                        (u || l.isOneWay()) && (this.directionArrows[l.getID()] = l.getArrowPoints(42 * this.map.getResolution(), 20 * this.map.getResolution(), 20 * this.map.getResolution()).map(E.a.partial(this._getArrowVector, l, u))),
                        this._createDragHandles(l, a, t, s, i, n)
                    }
                }
            },
            _createDragHandles: function(e, t, n, i, r, s) {
                var o = this,
                    a = new OL.Feature.Vector(ie.cloneGeometry(e.geometry), null);
                a.parent = t,
                    a._highlightPlaceHolder = !0,
                    this.dragPointsPaddingVertices.push(a);
                for (var l = e.isAllowed(_e.SegmentsPermissions.EDIT_GEOMETRY) && !e.outOfScope, u = this.getFeaturesArray(n, e), c = this.getFeaturesArray(r, e), d = e.geometry, h = null, p = e.attributes.fromNodeID && i[e.attributes.fromNodeID] ? 1 : 0, g = d.components.length - (e.attributes.toNodeID && i[e.attributes.toNodeID] ? 1 : 0), f = p; f < g; ++f) {
                    var m = 0 === f,
                        v = f === d.components.length - 1,
                        _ = d.components[f];
                    if (De(_)) {
                        var y = new OL.Feature.Vector(_, null);
                        if (h)
                            if (h.geometry.distanceTo(y.geometry) / this.map.getResolution() < 3 && (!m && !v))
                                continue;
                        h = y,
                            y._sketch = !0,
                            y._virtualParent = a,
                            y.renderIntent = "sketch",
                            y.parent = t,
                            y.parents = [t];
                        var b = this.segmentSelection.isReversed(e),
                            E = function(t) {
                                return Re.a.isFromNodeClosed(o.model, e.getID(), t)
                            };
                        if (m)
                            y[b ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0,
                            y.attributes.isNodeClosed = E(!0);
                        else if (v) {
                            y[b ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0,
                                y.attributes.isNodeClosed = E(!1)
                        }
                        var w = m && e.attributes.fromNodeID,
                            S = v && e.attributes.toNodeID;
                        if (w || S) {
                            var k = m ? e.attributes.fromNodeID : e.attributes.toNodeID,
                                T = this.model.nodes.getObjectById(k),
                                I = T && T.isAllowedToMoveNode();
                            y.uneditable = !(l && I),
                                c.push(y)
                        } else
                            y.uneditable = !l,
                            m || v ? c.push(y) : (y._dragPoint = !0,
                                l && u.push(y))
                    }
                }
                l && this._createVirtualVertices(e, d, t, a, s)
            },
            _createVirtualVertices: function(e, t, n, i, r) {
                var s = this.getFeaturesArray(r, e);
                if ("OpenLayers.Geometry.MultiPoint" !== t.CLASS_NAME)
                    for (var o = 0; o < t.components.length - 1; ++o) {
                        var a = t.components[o],
                            l = t.components[o + 1];
                        if ("OpenLayers.Geometry.Point" === a.CLASS_NAME && "OpenLayers.Geometry.Point" === l.CLASS_NAME) {
                            if (a.distanceTo(l) / this.map.getResolution() < 20)
                                continue;
                            var u = (a.x + l.x) / 2,
                                c = (a.y + l.y) / 2,
                                d = new OL.Feature.Vector(new OpenLayers.Geometry.Point(u, c));
                            d._virtualParent = i,
                                d.parent = n,
                                d.parents = [n],
                                d._index = o + 1,
                                d._sketch = !0,
                                d._middleDragPoint = !0,
                                d.virtual = !0,
                                s.push(d)
                        }
                    }
            },
            getFeatureGeometries: function(e) {
                var t = [],
                    n = e[0].model;
                t.push(n.geometry);
                for (var i = 1; i < e.length; i++) {
                    var r = e[i].model;
                    if (r.isVirtuallyConnectedToNode(n)) {
                        var s = r.attributes.geometry.components.find(function(e) {
                            return e.equals(n.attributes.geometry)
                        });
                        null != s && t.push(s)
                    } else
                        r.attributes.fromNodeID === n.getID() ? t.push(r.geometry.components[0]) : r.attributes.toNodeID === n.getID() && t.push(r.geometry.components[r.geometry.components.length - 1])
                }
                return t
            },
            calculateNodesToParents: function(e) {
                for (var t = this, n = {}, i = {}, r = 0; r < e.length; r++) {
                    var s = e[r].model;
                    if (s.type === be.a.SEGMENT) {
                        var o = s.attributes.fromNodeID,
                            a = s.attributes.toNodeID;
                        o && !n[o] && (i[o] ? (n[o] = this.getNodeIDParents(o),
                                delete i[o]) : i[o] = !0),
                            a && !n[a] && (i[a] ? (n[a] = this.getNodeIDParents(a),
                                delete i[a]) : i[a] = !0),
                            s.attributes.virtualNodeIDs.forEach(function(e) {
                                return n[e] = t.getNodeIDParents(e)
                            })
                    } else
                        s.type === be.a.NODE && (n[s.getID()] || (n[s.getID()] = this.getNodeIDParents(s.getID())))
                }
                return n
            },
            getNodeIDParents: function(e) {
                var t = this.model.nodes.getObjectById(e);
                if (!Z.defined(t))
                    return null;
                var n = [this.nodeLayer.getVector(t)];
                n.allPresent = !0;
                for (var i = 0; i < t.attributes.segIDs.length; i++) {
                    var r = t.attributes.segIDs[i],
                        s = this.model.segments.getObjectById(r);
                    s ? (s = this.segmentLayer.getVector(s),
                        n.push(s)) : n.allPresent = !1
                }
                return n
            },
            onModificationStart: function(e) {
                var t = this;
                e.parents && e.parents.forEach(function(e) {
                    var n = e.model.type + e.model.getID();
                    t.origGeometries[n] || (t.origGeometries[n] = e.geometry.clone())
                })
            },
            onModificationComplete: function(e) {
                var t, n = {},
                    i = this.snapControl.snappedFeature;
                if (i && !i.feature.model.outOfScope && (i.feature = i.feature.model,
                        n.snappedFeatures = i),
                    1 === e.parents.length) {
                    if (e.parent.model.type === be.a.SEGMENT) {
                        var r = e.parent.model.getID(),
                            s = e.parent.model;
                        t = this.origGeometries["segment".concat(r)],
                            n.createNodes = !0,
                            t && this.model.actionManager.add(new Ee.default(s, t.clone(), e.parent.geometry, n))
                    }
                } else {
                    for (var o = {}, a = e.parent.model, l = 0; l < a.attributes.segIDs.length; l++) {
                        var u = a.attributes.segIDs[l];
                        this.model.segments.getObjectById(u) && (o[u] = this.origGeometries["segment".concat(u)].clone())
                    }
                    this._handleMoveNode(a, e, o, n)
                }
                for (var c = 0; c < this.origGeometries.length; c++)
                    this.origGeometries[c].destroy();
                this.origGeometries = {}
            },
            _isSnappingFeature: function() {
                return null != this.snapControl.snappedFeature
            },
            _isSnappingNode: function() {
                return this._isSnappingFeature() && this._getSnappedFeature().type === be.a.NODE
            },
            _getSnappedFeature: function() {
                return this._isSnappingFeature() ? this.snapControl.snappedFeature.feature : null
            },
            _handleMoveNode: function(e, t, n, i) {
                var r = this._isSnappingNode(),
                    s = new Se.a(e, this.origGeometries["node".concat(e.getID())].clone(), t.parent.geometry, n, Object.assign({}, i, {
                        dontSerialize: r
                    })),
                    o = [s];
                if (r) {
                    var a = new Te.a(e, this._getSnappedFeature());
                    o.push(a),
                        this.model.actionManager.add(new Me.a(o))
                } else
                    this.model.actionManager.add(s)
            },
            onFeaturesMerge: function() {
                this.verifySelectionValidity()
            },
            verifySelectionValidity: function() {
                this.resetVertices()
            },
            CLASS_NAME: "Waze.Control.SegmentGeometryEditor"
        }),
        Pe = n(181),
        Ne = n(14),
        xe = n.n(Ne),
        Ve = n(84),
        je = n.n(Ve),
        Ue = OL.Class(OL.Control.ModifyFeature, {
            standalone: !0,
            initialize: function(e, t) {
                var n = Object.assign({
                    clickout: !1,
                    standalone: !0
                }, t);
                OpenLayers.Control.ModifyFeature.prototype.initialize.call(this, e.layer, n),
                    this.repo.on(G.ATTR_CHANGED, this._onFeaturesChanged, this),
                    this.repo.on(G.REMOVED, this._onFeaturesRemoved, this),
                    this.map.events.register("zoomend", this, this.resetVertices),
                    this._originalGeometry = ie.cloneGeometry(e.geometry),
                    this.map.addControl(this),
                    this.activate(),
                    this.selectFeature(e),
                    this.handlers.drag.control.feature.geometryTypeMatches = this._isGeometryMatchForDrag
            },
            _isGeometryMatchForDrag: function(e) {
                return Boolean(e._sketch) || e.model && e.model.isSelected() && ("function" != typeof e.model.isPoint || e.model.isPoint())
            },
            destroy: function() {
                this.repo.off(G.ATTR_CHANGED, this._onFeaturesChanged, this),
                    this.repo.off(G.REMOVED, this._onFeaturesRemoved, this),
                    this.map.events.unregister("zoomend", this, this.resetVertices),
                    this.deactivate(),
                    OL.Control.ModifyFeature.prototype.destroy.apply(this, arguments)
            },
            deactivate: function() {
                this.dragHandle && (this.layer.destroyFeatures([this.dragHandle], {
                            silent: !0
                        }),
                        delete this.dragHandle),
                    this.feature = null,
                    OL.Control.ModifyFeature.prototype.deactivate.call(this)
            },
            setFeatureState: function() {},
            _onFeaturesChanged: function() {
                this.feature && (this.resetVertices(),
                    this._originalGeometry = ie.cloneGeometry(this.feature.geometry))
            },
            _onFeaturesRemoved: function(e) {
                e.includes(this.feature) && this.unselectFeature(this.feature)
            },
            onModification: function() {
                var e = new je.a(this.feature.model, this.repo, this._originalGeometry, this.feature.geometry);
                this.model.actionManager.add(e),
                    this._originalGeometry = ie.cloneGeometry(this.feature.geometry)
            },
            collectDragHandle: function() {
                var e = this,
                    t = E.a.maxBy(ie.getPolygonVertices(this.feature.geometry), function(e) {
                        return e.y
                    }),
                    n = new OpenLayers.Geometry.Point(t.x, t.y + 30 * this.map.getResolution()),
                    i = new OpenLayers.Feature.Vector(n);
                return n.move = function(t, i) {
                        return OpenLayers.Geometry.Point.prototype.move.call(n, t, i),
                            e.feature.geometry.move(t, i)
                    },
                    i.dragPoint = !0,
                    i._sketch = !0,
                    this.dragHandle = i,
                    this.layer.addFeatures([this.dragHandle], {
                        silent: !0
                    })
            },
            dragStart: function(e) {
                var t = "OpenLayers.Geometry.Point" === e.geometry.CLASS_NAME;
                this.toggle && this.feature === e && (this._unselect = e),
                    (e._sketch || t && this.feature === e) && (this.vertex = e,
                        this.handlers.drag.stopDown = !0)
            },
            unselectFeature: function(e) {
                OL.Control.ModifyFeature.prototype.unselectFeature.call(this, e),
                    W.selectionManager.unselectFeature(e)
            }
        }),
        Fe = n(29),
        Be = n.n(Fe),
        Ge = n(17),
        We = function(e) {
            function t(e, n) {
                var i;
                return r()(this, t),
                    n = Object.assign({}, {
                        mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.ROTATE
                    }, n),
                    (i = f()(this, v()(t).call(this, e, n))).isDragging = !1,
                    i.originalAngle = i.feature.model.attributes.azymuth,
                    i
            }
            return y()(t, e),
                o()(t, [{
                    key: "destroy",
                    value: function() {
                        this._removeDragBoundary(),
                            this._removeRadiusHandle(),
                            xe()(v()(t.prototype), "destroy", this).apply(this, arguments)
                    }
                }, {
                    key: "resetVertices",
                    value: function() {
                        this.isDragging && (this.isDragging = !1),
                            this._removeDragBoundary(),
                            this._removeRadiusHandle(),
                            this.feature && (this._cameraDraggable() && this.collectDragHandle(),
                                new ge.CanEditGeometryUseCase(this.model).canEditCameraGeometry(this.feature.model) && this._collectRadiusHandle())
                    }
                }, {
                    key: "_removeDragBoundary",
                    value: function() {
                        this.dragBoundary && (this.layer.destroyFeatures([this.dragBoundary], {
                                silent: !0
                            }),
                            this.dragBoundary = null)
                    }
                }, {
                    key: "_removeRadiusHandle",
                    value: function() {
                        this.radiusHandle && (this.layer.destroyFeatures([this.radiusHandle], {
                                silent: !0
                            }),
                            this.radiusHandle = null)
                    }
                }, {
                    key: "_cameraDraggable",
                    value: function() {
                        return new ge.CanEditGeometryUseCase(this.model).canEditCameraGeometry(this.feature.model) && this.map.getZoom() >= W.Config.cameras.minDragZoom
                    }
                }, {
                    key: "collectDragHandle",
                    value: function() {
                        var e = this.feature.geometry,
                            t = this.map.getResolution(),
                            n = ie.cloneGeometry(e);
                        this.feature.model.attributes.originalPosition || (this.feature.model.attributes.originalPosition = ie.cloneGeometry(e));
                        var i = this.feature.model.attributes.originalPosition;
                        this._removeDragBoundary(),
                            this.dragBoundary = new OL.Feature.Vector(i.clone(), {}, {
                                pointRadius: 150 / t,
                                fillOpacity: .2,
                                pointerEvents: "none",
                                graphicZIndex: 0
                            });
                        var r = this;
                        return e.move = function(t, s) {
                                r.isDragging = !0,
                                    r.onDragVertex(),
                                    n.x = this.x + t,
                                    n.y = this.y + s;
                                var o = n.x - i.x,
                                    a = n.y - i.y,
                                    l = Math.sqrt(Math.pow(o, 2) + Math.pow(a, 2));
                                return OL.Geometry.Point.prototype.move.apply(this, arguments),
                                    l >= 150 ? (e.x = i.x + 150 * o / l,
                                        e.y = i.y + 150 * a / l,
                                        e.clearBounds()) : (e.x = n.x,
                                        e.y = n.y,
                                        e.clearBounds())
                            },
                            this.layer.addFeatures([this.dragBoundary], {
                                silent: !0
                            })
                    }
                }, {
                    key: "_collectRadiusHandle",
                    value: function() {
                        var e = this.map,
                            t = this.feature,
                            n = t.geometry,
                            i = Ie.degToRad(t.model.attributes.azymuth - 90),
                            r = ie.cloneGeometry(n),
                            s = Ge.createPoint(n.x + 50 * e.getResolution() * Math.cos(i), n.y - 50 * e.getResolution() * Math.sin(i)),
                            o = new OL.Feature.Vector(s),
                            a = ie.cloneGeometry(s);
                        s.move = function(n, s) {
                                a.x = this.x + n,
                                    a.y = this.y + s;
                                var o = a.x - r.x,
                                    l = a.y - r.y,
                                    u = 50 * e.getResolution(),
                                    c = Math.sqrt(Math.pow(o, 2) + Math.pow(l, 2));
                                OL.Geometry.Point.prototype.move.call(this, n, s),
                                    c >= u ? (this.x = r.x + o * u / c,
                                        this.y = r.y + l * u / c) : (this.x = a.x,
                                        this.y = a.y),
                                    i = Math.atan2(l, o),
                                    t.model.attributes.azymuth = 450 - Ie.radToDeg(i),
                                    t.layer.drawFeature(t)
                            },
                            o._sketch = !0,
                            o._cameraRotator = !0,
                            this._removeRadiusHandle(),
                            this.radiusHandle = o,
                            this.layer.addFeatures([this.radiusHandle], {
                                silent: !0
                            })
                    }
                }, {
                    key: "onDragVertex",
                    value: function(e, t) {
                        return this.isDragging && this._removeRadiusHandle(),
                            this.layer.drawFeature(this.feature)
                    }
                }, {
                    key: "dragComplete",
                    value: function(e) {
                        if (e === this.radiusHandle) {
                            var t = this.feature.model.attributes.azymuth;
                            this.feature.model.attributes.azymuth = this.originalAngle,
                                this.originalAngle = t,
                                this.model.actionManager.add(new Be.a(this.feature.model, {
                                    azymuth: t
                                }))
                        } else
                            this.onModification(this.feature);
                        return this.resetVertices()
                    }
                }]),
                t
        }(Ue);
    Object.assign(We.prototype, {
        CLASS_NAME: "Waze.Control.GeometryEditing.Camera"
    });
    var He, ze, qe = We,
        Ye = function(e) {
            function t(e, n) {
                return r()(this, t),
                    n.mode = OL.Control.ModifyFeature.RESHAPE | OL.Control.ModifyFeature.DRAG,
                    f()(this, v()(t).call(this, e, n))
            }
            return y()(t, e),
                o()(t, [{
                    key: "handleKeypress",
                    value: function(e) {
                        return this.deleteCodes.includes(e.keyCode) ? this.feature.model.isPoint() || ie.countPolygonOuterRingVertices(this.feature.model.geometry) > 3 ? xe()(v()(t.prototype), "handleKeypress", this).call(this, e) : void 0 : xe()(v()(t.prototype), "handleKeypress", this).call(this, e)
                    }
                }]),
                t
        }(Ue),
        $e = (He = {},
            J()(He, be.a.SEGMENT, {
                showWhenCantEdit: !0
            }),
            J()(He, be.a.NODE, {
                showWhenCantEdit: !0
            }),
            J()(He, be.a.VENUE, {
                CLASS: Ye,
                showWhenCantEdit: !0
            }),
            J()(He, be.a.SPEED_CAMERA, {
                CLASS: qe,
                showWhenCantEdit: !0
            }),
            J()(He, be.a.MAP_COMMENT, {
                CLASS: Ue,
                showWhenCantEdit: !1
            }),
            J()(He, be.a.RESTRICTED_DRIVING_AREA, {
                CLASS: Ue,
                showWhenCantEdit: !1
            }),
            He),
        Ke = function() {
            function e(t, n, i, s) {
                r()(this, e),
                    this.modifyControl = null,
                    this.editors = null,
                    this.activeEditor = null,
                    this.selectionManager = t,
                    this.editingMediator = n,
                    this.map = i,
                    this.dataModel = s,
                    this._typeToEditorOptions = J()({}, be.a.MAP_COMMENT, {
                        mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.RESHAPE
                    }),
                    this.selectionManager.events.register("selectionchanged", this, this.onSelectionChanged),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this)
            }
            return o()(e, [{
                    key: "destroy",
                    value: function() {
                        this.selectionManager.events.unregister("selectionchanged", this, this.onSelectionChanged),
                            this.editingMediator.un("change:editingEnabled", this._onEditingEnabledChanged, this)
                    }
                }, {
                    key: "_shouldCreateGeometryEditor",
                    value: function(e) {
                        if (!e || 0 === e.length)
                            return !1;
                        var t = e[0].model,
                            n = t.type,
                            i = $e[n];
                        if (!i)
                            return !1;
                        var r = t.isGeometryEditable();
                        return !(!i.showWhenCantEdit && !r)
                    }
                }, {
                    key: "_createGeometryEditor",
                    value: function(e, t) {
                        var n = e[0],
                            i = n.model.type;
                        if (i === be.a.SEGMENT || i === be.a.NODE)
                            return this._createSegmentGeometryEditor(e, t);
                        var r = $e[i].CLASS,
                            s = this.dataModel.getRepository(i);
                        return new r(n, Object.assign({
                            virtualStyle: Pe.a.virtualVertices,
                            repo: s,
                            model: this.dataModel,
                            map: this.map.getOLMap()
                        }, this._typeToEditorOptions[i]))
                    }
                }, {
                    key: "_createSegmentGeometryEditor",
                    value: function(e, t) {
                        return new Le(e, t, this.dataModel, this.map.getSketchLayer(), this.map.getSegmentLayer(), this.map.getNodeLayer(), {
                            mode: OpenLayers.Control.ModifyFeature.RESHAPE,
                            virtualStyle: Pe.a.virtualVertices,
                            standalone: !0,
                            selectionManager: this.selectionManager,
                            map: this.map
                        })
                    }
                }, {
                    key: "_onEditingEnabledChanged",
                    value: function() {
                        this.editingMediator.get("editingEnabled") ? (this.selectionManager.enable(),
                            this._createGeometryEditorForSelection()) : (this.selectionManager.disable(),
                            this._destroyGeometryEditor())
                    }
                }, {
                    key: "onSelectionChanged",
                    value: function(e) {
                        this._createGeometryOnceLater()
                    }
                }, {
                    key: "_createGeometryOnceLater",
                    value: function() {
                        this._schedualRun || (this._schedualRun = !0,
                            Z.runLater(this._createGeometryEditorForSelection.bind(this)))
                    }
                }, {
                    key: "_createGeometryEditorForSelection",
                    value: function() {
                        this._destroyGeometryEditor();
                        var e = this.selectionManager.getSelectedFeatures(),
                            t = this.selectionManager.getSegmentSelection();
                        this._shouldCreateGeometryEditor(e) && (this.activeEditor = this._createGeometryEditor(e, t)),
                            this._schedualRun = !1
                    }
                }, {
                    key: "_destroyGeometryEditor",
                    value: function() {
                        this.activeEditor && (this.activeEditor.destroy(),
                            this.activeEditor = null)
                    }
                }]),
                e
        }(),
        Je = n(13),
        Ze = n.n(Je),
        Qe = {
            PLUS_KEY_CODE1: 107,
            PLUS_KEY_CODE2: 187,
            MINUS_KEY_CODE1: 109,
            MINUS_KEY_CODE2: 189
        },
        Xe = function() {
            function e() {
                var t = this;
                r()(this, e),
                    this._futureShortcutsByAction = {},
                    this.shortcutToAction = {},
                    this.Actions = {},
                    this.events = new OpenLayers.Events(this),
                    this.registerActions(),
                    W.app.on("change:loggedIn", function() {
                        t._enableShortcutsByRank(W.app.get("user"))
                    })
            }
            return o()(e, [{
                    key: "_enableShortcutsByRank",
                    value: function(e) {
                        var t = null != e;
                        if (W.Config.big_junctions.enable)
                            return this.setActionEnabled("drawBigJunction", t && W.loginManager.canEditBigJunctions())
                    }
                }, {
                    key: "activate",
                    value: function() {
                        window.addEventListener("keydown", this.onKeyDownCapture.bind(this), !0),
                            window.addEventListener("keydown", this.onKeyDownBubble.bind(this), !1)
                    }
                }, {
                    key: "addAction",
                    value: function(e, t) {
                        return t = t || {},
                            (t = Object.assign({}, {
                                changeable: !0,
                                group: "default"
                            }, t)).name = e,
                            this.Groups[t.group].members.push(t),
                            t.id = e,
                            t.enabled = !0,
                            this.Actions[e] = t,
                            this.events.addEventType(e)
                    }
                }, {
                    key: "setActionEnabled",
                    value: function(e, t) {
                        this.Actions[e].enabled = t
                    }
                }, {
                    key: "registerShortcut",
                    value: function(e, t, n) {
                        var i;
                        if (null != this._futureShortcutsByAction[t] && (e = this._futureShortcutsByAction[t],
                                n = !0,
                                delete this._futureShortcutsByAction[t]),
                            i = n ? ze.prototype.fromString(e) : ze.prototype.fromEmacsNotation(e),
                            t = this.Actions[t]) {
                            var r = this.shortcutToAction[i];
                            r && (delete this.shortcutToAction[r.shortcut],
                                    delete r.shortcut),
                                t.shortcut && delete this.shortcutToAction[t.shortcut],
                                this.shortcutToAction[i] = t,
                                t.shortcut = i
                        }
                    }
                }, {
                    key: "_registerShortcuts",
                    value: function(e) {
                        var t = this;
                        return Object.entries(e).forEach(function(e) {
                            var n = Ze()(e, 2),
                                i = n[0],
                                r = n[1];
                            return t.registerShortcut(i, r)
                        })
                    }
                }, {
                    key: "registerDefaultShortcuts",
                    value: function() {
                        this._registerShortcuts({
                                "S+191": "showShortcutsDialog",
                                "C+z": "undo",
                                "CS+z": "redo",
                                "C+s": "save",
                                "AS+r": "reloadData",
                                i: "drawSegment",
                                o: "drawRoundabout",
                                j: "drawBigJunction",
                                l: "displayLayerSwitcher",
                                s: "spreadArrows",
                                a: "hideArrows",
                                "S+d": "colorEmptyStreets",
                                "S+w": "closeStreetView",
                                q: "disallowAllConnections",
                                w: "allowAllConnections",
                                m: "toggleMultipleSelection",
                                r: "toggleSegmentDirection",
                                e: "editSegmentAddress",
                                h: "editHouseNumbers",
                                c: "editClosures",
                                t: "editRestrictions",
                                "C+a": "selectEntireStreet",
                                "C+38": "increaseSegmentLevel",
                                "C+40": "decreaseSegmentLevel",
                                38: "panUp",
                                39: "panRight",
                                40: "panDown",
                                37: "panLeft",
                                "S+38": "zoomIn",
                                "S+40": "zoomOut",
                                f: "search",
                                221: "nextFeedItem",
                                219: "prevFeedItem",
                                d: "deleteVertex",
                                "S+i": "toggleSatelliteImagery",
                                "S+g": "toggleGPSpoints",
                                "S+r": "toggleRoads",
                                "S+m": "toggleMapcomments",
                                "S+a": "toggleAreaManagers",
                                "S+b": "toggleJunctionboxes",
                                "S+h": "toggleHouseNumbers",
                                "S+s": "toggleSpeedcameras",
                                "S+p": "toggleMapProblems",
                                "S+u": "toggleUpdateRequests",
                                "S+e": "toggleEditableAreas",
                                "S+c": "toggleRoadClosures",
                                "S+v": "toggleLiveUsers",
                                "S+l": "togglePlaces",
                                "S+z": "toggleShowAllArrows"
                            }),
                            this.registerShortcut("A+c", "toggleChat")
                    }
                }, {
                    key: "onKeyDownCapture",
                    value: function(e) {
                        var t = this._isEventOnInput(e),
                            n = W.streetViewController.isActive(),
                            i = Object.values(Qe).includes(e.keyCode);
                        t && n && i && (console.warn("Keydown event stopped"),
                            e.stopImmediatePropagation())
                    }
                }, {
                    key: "onKeyDownBubble",
                    value: function(e) {
                        if (!this._isEventOnInput(e)) {
                            var t = new ze(e),
                                n = this.shortcutToAction[t];
                            n && !0 === n.enabled && (this.events.triggerEvent(n.id, {
                                    action: n
                                }),
                                e.preventDefault(),
                                e.stopPropagation())
                        }
                    }
                }, {
                    key: "_isEventOnInput",
                    value: function(e) {
                        var t = l()(e.target);
                        return t.is(":input") && !t.is("input[type=radio],input[type=checkbox]")
                    }
                }, {
                    key: "registerActions",
                    value: function() {
                        this.addAction("undo"),
                            this.addAction("redo"),
                            this.addAction("save"),
                            this.addAction("delete", {
                                changeable: !1
                            }),
                            this.addAction("search"),
                            this.addAction("reloadData"),
                            this.addAction("drawSegment", {
                                group: "drawing"
                            }),
                            this.addAction("drawRoundabout", {
                                group: "drawing"
                            }),
                            W.Config.big_junctions.enable && this.addAction("drawBigJunction", {
                                group: "drawing",
                                enabled: !1
                            }),
                            this.addAction("displayLayerSwitcher", {
                                group: "layers"
                            }),
                            this.addAction("spreadArrows", {
                                group: "layers"
                            }),
                            this.addAction("hideArrows", {
                                group: "layers"
                            }),
                            this.addAction("colorEmptyStreets", {
                                group: "layers"
                            }),
                            this.addAction("closeStreetView", {
                                group: "layers"
                            }),
                            this.addAction("toggleChat", {
                                group: "layers"
                            }),
                            this.addAction("toggleMultipleSelection", {
                                group: "editing"
                            }),
                            this.addAction("allowAllConnections", {
                                group: "editing"
                            }),
                            this.addAction("disallowAllConnections", {
                                group: "editing"
                            }),
                            this.addAction("toggleSegmentDirection", {
                                group: "editing"
                            }),
                            this.addAction("editSegmentAddress", {
                                group: "editing"
                            }),
                            this.addAction("editHouseNumbers", {
                                group: "editing"
                            }),
                            this.addAction("editClosures", {
                                group: "editing"
                            }),
                            this.addAction("editRestrictions", {
                                group: "editing"
                            }),
                            this.addAction("selectEntireStreet", {
                                group: "editing"
                            }),
                            this.addAction("increaseSegmentLevel", {
                                group: "editing"
                            }),
                            this.addAction("decreaseSegmentLevel", {
                                group: "editing"
                            }),
                            this.addAction("deleteVertex", {
                                group: "editing"
                            }),
                            this.addAction("showShortcutsDialog", {
                                changeable: !1
                            }),
                            this.addAction("panUp", {
                                group: "navigation"
                            }),
                            this.addAction("panDown", {
                                group: "navigation"
                            }),
                            this.addAction("panLeft", {
                                group: "navigation"
                            }),
                            this.addAction("panRight", {
                                group: "navigation"
                            }),
                            this.addAction("zoomIn", {
                                group: "navigation"
                            }),
                            this.addAction("zoomOut", {
                                group: "navigation"
                            }),
                            this.addAction("nextFeedItem"),
                            this.addAction("prevFeedItem"),
                            this.addAction("toggleSatelliteImagery", {
                                group: "layers",
                                toggler: "ITEM_SATELLITE_IMAGERY"
                            }),
                            this.addAction("toggleGPSpoints", {
                                group: "layers",
                                toggler: "ITEM_GPS_POINTS"
                            }),
                            this.addAction("toggleRoads", {
                                group: "layers",
                                toggler: "ITEM_ROAD"
                            }),
                            this.addAction("toggleMapcomments", {
                                group: "layers",
                                toggler: "ITEM_MAP_COMMENTS"
                            }),
                            this.addAction("toggleAreaManagers", {
                                group: "layers",
                                toggler: "ITEM_AREA_MANAGERS"
                            }),
                            this.addAction("toggleJunctionboxes", {
                                group: "layers",
                                toggler: "ITEM_JUNCTION_BOXES"
                            }),
                            this.addAction("toggleHouseNumbers", {
                                group: "layers",
                                toggler: "ITEM_HOUSE_NUMBERS"
                            }),
                            this.addAction("toggleSpeedcameras", {
                                group: "layers",
                                toggler: "ITEM_SPEED_CAMERAS"
                            }),
                            this.addAction("toggleMapProblems", {
                                group: "layers",
                                toggler: "ITEM_MAP_PROBLEMS"
                            }),
                            this.addAction("toggleUpdateRequests", {
                                group: "layers",
                                toggler: "ITEM_UPDATE_REQUESTS"
                            }),
                            this.addAction("toggleEditableAreas", {
                                group: "layers",
                                toggler: "ITEM_EDITABLE_AREAS"
                            }),
                            this.addAction("toggleRoadClosures", {
                                group: "layers",
                                toggler: "ITEM_CLOSURES"
                            }),
                            this.addAction("toggleLiveUsers", {
                                group: "layers",
                                toggler: "ITEM_LIVE_USERS"
                            }),
                            this.addAction("toggleShowAllArrows", {
                                group: "layers",
                                toggler: "ITEM_DISALLOWED_TURNS"
                            }),
                            this.addAction("togglePlaces", {
                                group: "layers",
                                toggler: "GROUP_PLACES"
                            })
                    }
                }, {
                    key: "persist",
                    value: function() {
                        return window.localStorage.setItem(this.LocalStorageKey, JSON.stringify(this.serialize()))
                    }
                }, {
                    key: "restore",
                    value: function() {
                        var e = this,
                            t = window.localStorage.getItem(this.LocalStorageKey);
                        if (!t)
                            return !1;
                        try {
                            t = JSON.parse(t)
                        } catch (e) {
                            return !1
                        }
                        return Object.entries(t).forEach(function(t) {
                                var n = Ze()(t, 2),
                                    i = n[0],
                                    r = n[1];
                                null != e.Actions[i] ? e.registerShortcut(r, i, !0) : e._futureShortcutsByAction[i] = r
                            }),
                            !0
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        var e = {};
                        return Object.values(this.Actions).forEach(function(t) {
                                var n = t.shortcut || ze.getEmpty();
                                e[t.id] = n.toString()
                            }),
                            e
                    }
                }]),
                e
        }();
    Object.assign(Xe.prototype, {
            LocalStorageKey: "keyboardShortcuts",
            SpecialKeys: {
                32: "Space",
                38: "↑",
                39: "→",
                40: "↓",
                37: "←",
                9: "Tab",
                46: "Del",
                187: "=",
                189: "-"
            },
            Modifiers: {
                C: 1,
                S: 2,
                A: 4
            },
            BitToModifier: null,
            ModifierToBrowserEvent: null,
            BrowserEventToModifier: {
                altKey: "A",
                metaKey: "C",
                ctrlKey: "C",
                shiftKey: "S"
            },
            Groups: {
                default: {
                    members: []
                },
                navigation: {
                    members: []
                },
                editing: {
                    members: []
                },
                drawing: {
                    members: []
                },
                layers: {
                    members: []
                }
            },
            Actions: null,
            CLASS_NAME: "Waze.Control.KeyboardShortcuts"
        }),
        (ze = function() {
            function e(t) {
                r()(this, e),
                    this.ctrlKey = !1,
                    this.metaKey = !1,
                    this.altKey = !1,
                    this.shiftKey = !1,
                    this.keyCode = null,
                    t && (this.ctrlKey = t.ctrlKey,
                        this.altKey = t.altKey,
                        this.shiftKey = t.shiftKey,
                        this.metaKey = t.metaKey,
                        this.keyCode = t.which)
            }
            return o()(e, [{
                    key: "toString",
                    value: function() {
                        var e = this,
                            t = 0;
                        return Object.entries(Xe.prototype.BrowserEventToModifier).forEach(function(n) {
                                var i = Ze()(n, 2),
                                    r = i[0],
                                    s = i[1];
                                e[r] && (t |= Xe.prototype.Modifiers[s])
                            }),
                            "".concat(t, ",").concat(this.keyCode)
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return -1 === this.keyCode || "-1" === this.keyCode
                    }
                }, {
                    key: "fromString",
                    value: function(e) {
                        var t = e.split(","),
                            n = t[0],
                            i = E.a.last(t),
                            r = new ze;
                        return Object.entries(Xe.prototype.BrowserEventToModifier).forEach(function(e) {
                                var t = Ze()(e, 2),
                                    i = t[0],
                                    s = t[1];
                                Xe.prototype.Modifiers[s] & n && (r[i] = !0)
                            }),
                            r.keyCode = i,
                            r
                    }
                }, {
                    key: "fromEmacsNotation",
                    value: function(e) {
                        var t = e.split("+"),
                            n = t[0],
                            i = E.a.last(t),
                            r = new ze;
                        return 1 === t.length && (n = ""),
                            1 === i.length && (i = i.toUpperCase().charCodeAt()),
                            r.keyCode = i,
                            n.split("").forEach(function(e) {
                                var t = Xe.prototype.ModifierToBrowserEvent[e];
                                r[t] = !0
                            }),
                            r
                    }
                }]),
                e
        }()).getEmpty = function() {
            var e = new ze;
            return e.keyCode = -1,
                e
        },
        Xe.prototype.BitToModifier = {},
        Object.entries(Xe.prototype.Modifiers).forEach(function(e) {
            var t = Ze()(e, 2),
                n = t[0],
                i = t[1];
            Xe.prototype.BitToModifier[i] = n
        }),
        Xe.prototype.ModifierToBrowserEvent = {},
        Object.entries(Xe.prototype.BrowserEventToModifier).forEach(function(e) {
            var t = Ze()(e, 2),
                n = t[0],
                i = t[1];
            Xe.prototype.ModifierToBrowserEvent[i] = n
        }),
        Xe.KeyStroke = ze;
    var et = Xe,
        tt = P.a.View.extend({
            initialize: function(e) {
                this.mediator = e.mediator,
                    this.setElement(e.$el)
            },
            events: {
                "click .place-update": "_onMarkerClicked"
            },
            _onMarkerClicked: function(e) {
                if (this.mediator.get("editingEnabled")) {
                    var t = l()(e.target).data("model");
                    return W.commands.execute("place_updates:list", t)
                }
            },
            _findMarkerByVenueId: function(e) {
                return this.$el.find("[data-id='".concat(e, "']"))
            },
            highlightMarker: function(e) {
                this.$el.addClass("highlight-selected");
                var t = this._findMarkerByVenueId(e.getID());
                return t.addClass("selected"),
                    this._moveToTop(t)
            },
            _moveToTop: function(e) {
                return e.detach().appendTo(this.$el)
            },
            unhighlightAllMarkers: function() {
                return this.$el.removeClass("highlight-selected"),
                    this.$el.find(".place-update").removeClass("selected")
            }
        }),
        nt = n(242),
        it = n.n(nt),
        rt = n(16),
        st = n(154),
        ot = P.a.Behavior.extend({
            defaults: {
                layerClassName: ""
            },
            _markerLayer: null,
            _vectorLayer: null,
            _currentLocationDrawn: !1,
            initialize: function() {
                this._vectorLayer = new OL.Layer.Vector("", {
                        styleMap: st.b
                    }),
                    this._markerLayer = new OL.Layer.Markers(""),
                    W.map.addLayers([this._vectorLayer, this._markerLayer]),
                    l()(this._vectorLayer.div).addClass(this.options.layerClassName)
            },
            _createTooltip: function(e, t, n) {
                var i = new OL.Marker(e, new le.default("location-tooltip ".concat(n)));
                return i.icon.$div.text(t),
                    this._markerLayer.addMarker(i)
            },
            _createFeature: function(e) {
                this._vectorLayer.addFeatures(e)
            },
            onShowTooltip: function(e, t, n, i) {
                this._currentLocationDrawn || (this._createTooltip(e, t, n),
                    i && this._createFeature(i),
                    this._currentLocationDrawn = !0)
            },
            onHideTooltip: function() {
                this._vectorLayer.removeAllFeatures(),
                    this._markerLayer.clearMarkers(),
                    this._currentLocationDrawn = !1
            },
            _destroyLayers: function() {
                this._vectorLayer && this._vectorLayer.destroy(),
                    this._markerLayer && this._markerLayer.destroy()
            },
            onDestroy: function() {
                this._destroyLayers()
            }
        }),
        at = n(134),
        lt = P.a.View.extend({
            template: "templates/place_updates/external_provider/item",
            tagName: "li",
            behaviors: {
                ToolTip: {
                    behaviorClass: ot,
                    layerClassName: "suggested-geometry-layer"
                }
            },
            events: {
                "mouseover .anchor": "_onAnchorOver",
                "mouseout .anchor": "_onAnchorOut"
            },
            bindings: {
                ".external-provider-link": {
                    observe: "name",
                    attributes: [{
                        name: "href",
                        observe: "url"
                    }]
                }
            },
            onRender: function() {
                Object(at.populateExternalProviderDetails)(this.model),
                    this.stickit(this.model, this.bindings)
            },
            _onAnchorOver: function() {
                var e = this.model.get("location");
                if (e) {
                    var t = new OpenLayers.Geometry.Point(e.lng, e.lat);
                    Ie.project(t);
                    var n = new OL.Feature.Vector(t, {}, {
                        pointRadius: 6,
                        fillColor: "#c290c6",
                        strokeWidth: 3,
                        strokeColor: "#00ece3"
                    });
                    this.triggerMethod("show:tooltip", ue.toLonLat(t), this.model.get("name"), "", n)
                }
            },
            _onAnchorOut: function() {
                this.triggerMethod("hide:tooltip")
            }
        }),
        ut = P.a.CompositeView.extend({
            template: "templates/place_updates/external_provider/list",
            childView: lt,
            childViewContainer: ".diff-list",
            initialize: function() {
                this.venue = this.options.venue;
                var e = this.venue.attributes.externalProviderIDs.map(function(e) {
                    return e.clone()
                });
                this.collection = new c.a.Collection(e)
            }
        }),
        ct = n(73),
        dt = P.a.View.extend({
            tagName: "li",
            template: "templates/place_updates/changed_field",
            events: {
                "mouseover .location-button.current": "_onCurrentOver",
                "mouseover .location-button.suggested": "_onSuggestedOver",
                "mouseout .location-button.current": "_onLocationOut",
                "mouseout .location-button.suggested": "_onLocationOut"
            },
            behaviors: {
                ToolTip: {
                    behaviorClass: ot,
                    layerClassName: "suggested-geometry-layer"
                }
            },
            regions: {
                externalProvidersRegion: ".external-providers-view"
            },
            onRender: function() {
                this.model.isExternalProvider() && this._showExternalProvidersView()
            },
            _showExternalProvidersView: function() {
                var e = new ut({
                    venue: this.model.attributes.suggestedVenue
                });
                this.showChildView("externalProvidersRegion", e)
            },
            _onCurrentOver: function() {
                var e = ie.getBoundsCenterLonLat(this._getValue(this.model.get("venue")));
                this.triggerMethod("show:tooltip", e, I18n.t("venues.update_requests.panel.change.current_location"), "")
            },
            _onSuggestedOver: function() {
                var e = this._getValue(this.model.get("suggestedVenue")),
                    t = new OL.Feature.Vector(e),
                    n = ie.getBoundsCenterLonLat(e);
                this.triggerMethod("show:tooltip", n, I18n.t("venues.update_requests.panel.change.suggested_location"), "suggested", t)
            },
            _onLocationOut: function() {
                this.triggerMethod("hide:tooltip")
            },
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : e.attributes[t]
            },
            serializeData: function() {
                var e = this._getValue(this.model.get("venue")),
                    t = this._getValue(this.model.get("suggestedVenue")),
                    n = Array.isArray(e) || Array.isArray(t);
                return {
                    showChangeList: n,
                    changeList: n ? this.getChangeList() : null,
                    currentValue: e,
                    suggestedValue: t,
                    fieldName: this.model.get("fieldName"),
                    removing: !t,
                    isGeometry: this.model.isGeometry(),
                    isExternalProvider: this.model.isExternalProvider(),
                    model: this.model
                }
            },
            templateContext: {
                getRemovedImages: function() {
                    var e = this.model.get("venue"),
                        t = E()(e.attributes.images),
                        n = E()(this.model.get("suggestedVenue").attributes.images);
                    return E.a.difference(t.map("id"), n.map("id")).map(function(e) {
                        return t.find(function(t) {
                            return t.get("id") === e
                        })
                    })
                },
                IMAGE_SIZE: ct.IMAGE_SIZE
            },
            valueGetters: {
                lockRank: function(e) {
                    return rt.default.formatRank(e.attributes.lockRank)
                },
                streetID: function(e) {
                    return rt.default.formatAddress(e.getAddress())
                },
                entryExitPoints: function(e) {
                    var t = e.getNavigationPoints()[0];
                    return null != t ? t.getPoint() : e.attributes.geometry.getCentroid()
                },
                openingHours: function(e) {
                    return e.attributes.openingHours.map(function(e) {
                        return rt.default.formatOpeningHour(e.days, e.isAllDay(), e.fromHour, e.toHour)
                    }).join(", ")
                },
                services: function(e) {
                    return e.attributes.services.map(function(e) {
                        return I18n.t("venues.services.".concat(e))
                    })
                },
                categories: function(e) {
                    return e.attributes.categories.map(function(e) {
                        return I18n.t("venues.categories.".concat(e))
                    })
                },
                externalProviderIDs: function(e) {
                    return e.attributes.externalProviderIDs.map(function(e) {
                        return e.get("uuid")
                    })
                }
            },
            getChangeList: function() {
                var e = this._getValue(this.model.get("venue")),
                    t = this._getValue(this.model.get("suggestedVenue"));
                return this.model._getChangeList(e, t)
            }
        }),
        ht = function(e, t) {
            var n = t.attributes.categoryAttributes;
            if (n && n.PARKING_LOT)
                return n.PARKING_LOT[e]
        },
        pt = function(e, t) {
            var n = ht(e, t);
            return null !== n && void 0 !== n ? Array.isArray(n) ? n.map(function(t) {
                return I18n.t("edit.landmark.parking.types.".concat(e, ".").concat(t))
            }) : I18n.t("edit.landmark.parking.types.".concat(e, ".").concat(n)) : null
        },
        gt = dt.extend({
            template: "templates/place_updates/changed_field_parking_lot",
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : ht(t, e)
            },
            valueGetters: {
                canExitWhileClosed: function(e) {
                    return rt.default.formatYesNo(ht("canExitWhileClosed", e))
                },
                estimatedNumberOfSpots: function(e) {
                    return pt("estimatedNumberOfSpots", e)
                },
                costType: function(e) {
                    return pt("costType", e)
                },
                lotType: function(e) {
                    return pt("lotType", e)
                },
                paymentType: function(e) {
                    return pt("paymentType", e)
                }
            }
        }),
        ft = P.a.CollectionView.extend({
            childView: function(e) {
                return e instanceof it.a ? gt : dt
            }
        }),
        mt = n(209),
        vt = n.n(mt),
        _t = n(210),
        yt = n(18),
        bt = n(9),
        Et = P.a.View.extend({
            APPROVE_ACTION_NAMES: {
                default: I18n.t("venues.update_requests.panel.action.approve"),
                ADD_VENUE: I18n.t("venues.update_requests.panel.action.add_to_map")
            },
            HIDE_PLACE_DETAILS: {
                ADD_VENUE: !0
            },
            template: "templates/place_updates/item",
            events: {
                "change [name=approved]": "_onApproveChanged",
                "click .image-preview": "_onImagePreviewClicked",
                "click .focus": "_onFocusClicked",
                "click .street-view-btn": "_onStreetViewClicked"
            },
            bindings: {
                ".street-view-btn": {
                    observe: "streetViewAvailable",
                    visible: !0,
                    visibleFn: bt.b
                },
                ".street-view-tooltip": {
                    observe: "streetViewAvailable",
                    visible: !0,
                    visibleFn: bt.b,
                    onGet: E.a.negate(Boolean)
                }
            },
            ui: {
                approvedDropdown: "[name=approved]",
                header: ".header",
                scrollable: ".scrollable",
                actions: ".actions",
                tooltips: ".tooltip"
            },
            fieldChangeView: null,
            imageDialogView: null,
            bodyScrollPosition: null,
            rendered: !1,
            maxHeight: null,
            initialize: function() {
                this.streetViewController = this.options.streetViewController,
                    this.viewModel = new c.a.Model({
                        streetViewAvailable: !1
                    }),
                    this.listenTo(this.model, "change:approved", this._onModelChanged),
                    this._checkStreetViewAvailability()
            },
            _checkStreetViewAvailability: function() {
                var e = this;
                this.streetViewController && this.streetViewController.hasPlacePanaorama(this.options.venue).then(function(t) {
                    e.viewModel.set({
                        streetViewAvailable: t
                    })
                })
            },
            serializeData: function() {
                return {
                    model: this.model,
                    venue: this.options.venue,
                    hidePlaceDetails: Boolean(this.HIDE_PLACE_DETAILS[this.model.get("updateType")]),
                    showDebug: this.options.showDebug
                }
            },
            _onModelChanged: function() {
                return this.render()
            },
            _onApproveChanged: function() {
                var e = this.ui.approvedDropdown.filter(":checked").booleanVal(),
                    t = new vt.a(this.options.venue, this.model, e);
                this.options.venue.model.actionManager.add(t);
                var n = "".concat(this.model.get("updateType")),
                    i = null != e ? e ? 1 : -1 : null;
                null != i && yt.reportAnalytic.placeUpdateRequestAction("update_state", n, i)
            },
            _onImagePreviewClicked: function(e) {
                var t = l()(e.target).data("image-id"),
                    n = new _t.a({
                        isUpdateRequest: !0,
                        imageId: t,
                        canDelete: !1,
                        canScroll: !1,
                        images: this.options.venue.getImages(),
                        venueName: this.options.venue.attributes.name
                    });
                return W.app.layout.getRegion("dialogRegion").show(n),
                    e.preventDefault()
            },
            _onFocusClicked: function() {
                this.trigger("focusClicked")
            },
            _onStreetViewClicked: function() {
                this.trigger("streetViewClicked")
            },
            onRender: function() {
                this.rendered = !0,
                    "UPDATE_VENUE" === this.model.get("updateType") && (this.fieldChangeView && this.fieldChangeView.destroy(),
                        this.fieldChangeView = new ft({
                            collection: new c.a.Collection(this.model.get("changedFields"), {
                                sort: !1
                            }),
                            el: this.$(".changed-fields")
                        }),
                        this.fieldChangeView.render()),
                    this._setBodyHeight(),
                    this.ui.scrollable.scrollTop(this.bodyScrollPosition),
                    this.stickit(this.viewModel),
                    this.ui.tooltips.tooltip()
            },
            onDestroy: function() {
                if (this.fieldChangeView)
                    return this.fieldChangeView.destroy()
            },
            render: function() {
                return this.rendered && (this.bodyScrollPosition = this.ui.scrollable.scrollTop()),
                    P.a.View.prototype.render.apply(this, arguments)
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setBodyHeight()
            },
            _setBodyHeight: function() {
                var e = this.ui.header.outerHeight(),
                    t = this.ui.actions.outerHeight();
                return this.ui.scrollable.css({
                    maxHeight: this.maxHeight - e - t
                })
            },
            templateContext: {
                getTitle: function() {
                    var e = this.model.get("updateType");
                    return I18n.t("venues.update_requests.panel.title.".concat(e))
                },
                getApproveActionName: function() {
                    var e = this.model.get("updateType"),
                        t = Et.prototype.APPROVE_ACTION_NAMES;
                    return t[e] || t.default
                },
                getChangesTemplate: function() {
                    var e = this.model.get("updateType").toLowerCase();
                    return "templates/place_updates/".concat(e)
                },
                getApproveActionIntent: function() {
                    return "default"
                },
                getRejectActionName: function() {
                    return I18n.t("venues.update_requests.panel.action.reject")
                },
                getRejectedLabel: function() {
                    return I18n.t("venues.update_requests.panel.rejected")
                },
                getApprovedLabel: function() {
                    return I18n.t("venues.update_requests.panel.approved")
                },
                getNoPermissionsMessage: function() {
                    if (this.model.get("isInEditArea")) {
                        var e = this.model.getRequiredEditRank(),
                            t = rt.default.formatRank(e);
                        return I18n.t("venues.update_requests.panel.uneditable", {
                            level: t
                        })
                    }
                    return I18n.t("venues.update_requests.panel.out_of_edit_area")
                },
                getNewPlaceImages: function() {
                    return this.model.get("place").getImagesByUserId(this.model.get("createdBy"))
                },
                shouldShowCarousel: function() {
                    return this.getNewPlaceImages().length > 1
                },
                shouldShowName: function() {
                    return !this.model.get("place").attributes.residential
                },
                getCarouselUniqueId: function() {
                    var e = this.model.get("id").replace(/[^\d\w]/g, "");
                    return "place-update-carousel-".concat(e)
                },
                isOpened: function() {
                    return null === this.model.get("approved")
                },
                isApproved: function() {
                    return !0 === this.model.get("approved")
                },
                isRejected: function() {
                    return !1 === this.model.get("approved")
                },
                IMAGE_SIZE: ct.IMAGE_SIZE
            }
        }),
        wt = Et,
        St = n(164),
        kt = wt.extend({
            template: "templates/place_updates/flag",
            APPROVE_ACTION_NAMES: {
                default: I18n.t("venues.update_requests.panel.action.solved"),
                DUPLICATE: I18n.t("venues.update_requests.panel.action.merge"),
                CLOSED: I18n.t("venues.update_requests.panel.action.delete")
            },
            APPROVE_ACTION_INTENT: {
                CLOSED: "danger"
            },
            COMMENT_TYPES: {
                WRONG_DETAILS: !0,
                CLOSED: !0,
                INAPPROPRIATE: !0
            },
            serializeData: function() {
                var e = this.model.isImage(),
                    t = e ? this.model.getImage() : null;
                return {
                    model: this.model,
                    venue: this.options.venue,
                    showImage: e,
                    image: t,
                    showAddingUser: e,
                    showComment: this.COMMENT_TYPES[this.model.get("type")],
                    showDuplicateVenue: this.model.get("type") === St.FLAG_TYPE.DUPLICATE,
                    showDebug: this.options.showDebug
                }
            },
            templateContext: Object.assign({}, wt.prototype.templateContext, {
                getTitle: function() {
                    var e = this.model.get("subject");
                    return I18n.t("venues.update_requests.panel.flag_title.".concat(e))
                },
                getApproveActionName: function() {
                    if (this.model.isVenue()) {
                        var e = kt.prototype.APPROVE_ACTION_NAMES;
                        return e[this.model.get("type")] || e.default
                    }
                    return I18n.t("venues.update_requests.panel.action.delete_picture")
                },
                getApproveActionIntent: function() {
                    return this.model.isImage() ? "danger" : kt.prototype.APPROVE_ACTION_INTENT[this.model.get("type")] || "default"
                },
                getRejectActionName: function() {
                    return I18n.t("venues.update_requests.panel.action.reject_flag")
                },
                getRejectedLabel: function() {
                    return I18n.t("venues.update_requests.panel.ignored")
                },
                getApprovedLabel: function() {
                    return I18n.t("venues.update_requests.panel.solved")
                },
                IMAGE_SIZE: ct.IMAGE_SIZE
            })
        }),
        Tt = kt,
        It = P.a.View.extend({
            template: "templates/place_updates/layout",
            regions: {
                placeUpdate: ".place-update"
            },
            events: {
                "click .next": "_onNextClicked"
            },
            triggers: {
                "click .next-venue": "showNextVenueClicked"
            },
            ui: {
                navigation: ".navigation"
            },
            className: "place-update-edit",
            currentIndex: 0,
            dataModel: null,
            maxHeight: null,
            initialize: function() {
                return this.dataModel = this.model.model,
                    this._setUpdateRequests(),
                    this.listenTo(this.dataModel.venues, [G.REMOVED, G.STATE_DELETED].join(" "), this._onVenuesDeleted),
                    this.model.setSelected(!0)
            },
            _setUpdateRequests: function() {
                this.updateRequests = this.options.updateRequests,
                    null == this.updateRequests && (this.updateRequests = E()(this.model.attributes.venueUpdateRequests).sortBy(function(e) {
                        return e.get("dateAdded")
                    }).value())
            },
            _onVenuesDeleted: function(e) {
                var t = this;
                if (e.some(function(e) {
                        return e.getID() === t.model.getID()
                    }))
                    return this.destroy()
            },
            onDestroy: function() {
                return this.model.setSelected(!1)
            },
            serializeData: function() {
                var e = this._hasMoreUpdates();
                return {
                    showNextButton: e || this.options.showNext || !1,
                    showNextVenueButton: !e && null !== this.options.nextVenue,
                    showNextIssueButton: this.options.showNextIssueButton,
                    nextButtonString: this.options.nextButtonString || I18n.t("venues.update_requests.panel.next"),
                    nextButtonClass: this.options.nextButtonClass
                }
            },
            onRender: function() {
                return this._showCurrentUpdateView(),
                    this._setHeight()
            },
            _showCurrentUpdateView: function() {
                var e = this,
                    t = this.updateRequests[this.currentIndex],
                    n = wt;
                "flag" === t.get("updateType") && (n = Tt);
                var i = new n({
                    model: t,
                    venue: this.model,
                    showDebug: this.options.showDebug,
                    streetViewController: this.options.streetViewController
                });
                return this.listenTo(i, "focusClicked", function() {
                        e.trigger("focusClicked")
                    }),
                    this.listenTo(i, "streetViewClicked", function() {
                        e.trigger("streetViewClicked")
                    }),
                    this.showChildView("placeUpdate", i)
            },
            _hasMoreUpdates: function() {
                return this.currentIndex < this.updateRequests.length - 1
            },
            _onNextClicked: function() {
                return this._hasMoreUpdates() && (this.currentIndex++,
                        this.render()),
                    this.trigger("nextClicked")
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setHeight()
            },
            _setHeight: function() {
                return this.$el.css({
                        maxHeight: this.maxHeight
                    }),
                    this.getChildView("placeUpdate").setMaxHeight(this.maxHeight - this.ui.navigation.outerHeight())
            }
        }),
        At = P.a.Object.extend({
            _nextVenue: null,
            initialize: function(e) {
                return this.venue = e.venue,
                    this.pannable = e.pannable,
                    this.streetViewController = e.streetViewController,
                    this.dataModel = this.venue.model,
                    this._generateIterator(),
                    this.dataModel.events.register("mergeend", this, this._onVenuesChanged)
            },
            _generateIterator: function() {
                this.iterator = new this.options.venueIterator
            },
            show: function() {
                var e = this;
                this._getNextVenue();
                var t = new It({
                    model: this.venue,
                    nextVenue: this._nextVenue,
                    updateRequests: this.options.updateRequests,
                    showNext: this.options.showNext,
                    showDebug: this.options.showDebug,
                    nextButtonString: this.options.nextButtonString,
                    streetViewController: this.streetViewController
                });
                return t.on("showNextVenueClicked", this._onNextVenueClicked.bind(this)),
                    t.on("nextClicked", this._onNextClicked.bind(this)),
                    t.on("destroy", this._close, this),
                    t.on("focusClicked", function() {
                        return e._focusVenue(W.Config.place_updates.focusZoom)
                    }),
                    t.on("streetViewClicked", function() {
                        e._streetViewVenue()
                    }),
                    W.map.panelRegion.show(t),
                    this._focusVenue(),
                    this.trigger("show", this.venue)
            },
            _onVenuesChanged: function() {
                return this._generateIterator(),
                    this._getNextVenue()
            },
            _onNextVenueClicked: function() {
                return this.venue = this._nextVenue,
                    this.show()
            },
            _onNextClicked: function() {
                return this.trigger("nextClicked")
            },
            _close: function() {
                return this.dataModel.events.unregister("mergeend", this, this._onVenuesChanged),
                    this.trigger("close")
            },
            _getNextVenue: function() {
                this._nextVenue = this.iterator.getNext(),
                    null !== this._nextVenue && this._nextVenue.getID() === this.venue.getID() && (this._nextVenue = this.iterator.getNext())
            },
            _focusVenue: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.pannable.getZoom();
                this.pannable.panTo(ie.getBoundsCenterLonLat(this.venue.geometry), e),
                    yt.reportAnalytic.focusAction("locate", "pu_locate_clicked")
            },
            _streetViewVenue: function() {
                this.streetViewController.lookAtPlace(this.venue),
                    yt.reportAnalytic.focusAction("streetview", "pu_streetview_clicked")
            }
        }),
        Mt = n(259),
        Ot = n.n(Mt),
        Ct = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "next",
                    value: function() {
                        return this.trigger("next")
                    }
                }]),
                t
        }(P.a.Object),
        Rt = function() {
            function e(t) {
                return r()(this, e),
                    this.mediator = t.mediator,
                    this.map = t.map,
                    this.mapLayer = t.mapLayer,
                    this.streetViewController = t.streetViewController,
                    this.pannable = this.map.getPannable(),
                    this.layer = new tt({
                        $el: this.mapLayer.$div,
                        mediator: t.mediator
                    }),
                    W.commands.setHandler("place_updates:list", this._showVenue.bind(this)),
                    W.reqres.setHandler("updaterequests:browse", this._browseUpdateRequest.bind(this))
            }
            return o()(e, [{
                    key: "_showVenue",
                    value: function(e) {
                        var t = {
                            venue: e,
                            venueIterator: function() {
                                var t = e.model.venues.getObjectArray(),
                                    n = new Ot.a(t);
                                return n.sortByDistanceFrom(e),
                                    n
                            }
                        };
                        return this._createBrowser(t).show()
                    }
                }, {
                    key: "_browseUpdateRequest",
                    value: function(e) {
                        var t = e.updateRequest.get("place");
                        e = {
                            venue: t,
                            updateRequests: [e.updateRequest],
                            showNext: e.showNext,
                            nextButtonString: e.nextButtonString,
                            venueIterator: function() {
                                return new Ot.a([t])
                            }
                        };
                        var n = this._createBrowser(e);
                        n.show(),
                            this._showLayers(t);
                        var i = new Ct;
                        return n.on("nextClicked", function() {
                                return i.next()
                            }),
                            i
                    }
                }, {
                    key: "_createBrowser",
                    value: function(e) {
                        var t = this;
                        E.a.defaults(e, {
                            showDebug: this.mediator.get("advancedTools"),
                            pannable: this.pannable,
                            streetViewController: this.streetViewController
                        });
                        var n = new At(e);
                        return n.on("close", function() {
                                return t.layer.unhighlightAllMarkers()
                            }),
                            n.on("show", function(e) {
                                return t.layer.highlightMarker(e)
                            }),
                            n
                    }
                }, {
                    key: "_showLayers",
                    value: function(e) {
                        return this.map.showLayerByObjectType(e.type),
                            this.mapLayer.setVisibility(!0)
                    }
                }]),
                e
        }(),
        Dt = n(421),
        Lt = n.n(Dt),
        Pt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            mouseenter: "_onMouseenter",
                            mouseleave: "_onMouseleave",
                            click: "_onFeatureIdClick"
                        }
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "feature-id"
                    }
                }, {
                    key: "_onFeatureIdClick",
                    value: function() {
                        this.triggerMethod("action:featureId:click", this.model.get("featureUniqueId"))
                    }
                }, {
                    key: "_onMouseenter",
                    value: function() {
                        this.triggerMethod("action:featureId:enter", this.model.get("featureUniqueId"))
                    }
                }, {
                    key: "_onMouseleave",
                    value: function() {
                        this.triggerMethod("action:featureId:leave", this.model.get("featureUniqueId"))
                    }
                }, {
                    key: "template",
                    get: function() {
                        var e = this;
                        return function() {
                            return e.model.get("featureUniqueId")
                        }
                    }
                }]),
                t
        }(P.a.View),
        Nt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ":el": {
                                classes: {
                                    reverted: {
                                        observe: "done",
                                        onGet: E.a.negate(E.a.identity)
                                    },
                                    going_to_disable: {
                                        observe: "goingToDisable"
                                    },
                                    going_to_enable: {
                                        observe: "goingToEnable"
                                    }
                                }
                            },
                            ".undo-tooltip": {
                                observe: "done",
                                visible: !0,
                                visibleFn: bt.b
                            },
                            ".redo-tooltip": {
                                observe: "done",
                                visible: !0,
                                visibleFn: bt.b,
                                onGet: E.a.negate(E.a.identity)
                            },
                            ".title": {
                                observe: "description",
                                onGet: function(e) {
                                    return e || I18n.t("save.changes_log.unknown_action")
                                }
                            },
                            ".timestamp": {
                                observe: "timestamp",
                                onGet: function(e) {
                                    return rt.default.timeString(e)
                                }
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            tooltip: ".tooltip-item"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .dot-container": "_onDotClick",
                            "mouseenter .dot-container": "_onDotEnter",
                            "mouseleave .dot-container": "_onDotLeave"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "action:featureId:click": "action:featureId:click",
                            "action:featureId:enter": "action:featureId:enter",
                            "action:featureId:leave": "action:featureId:leave"
                        }
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "action-item"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            idsRegion: ".ids-region"
                        }
                    }
                }, {
                    key: "_onDotClick",
                    value: function() {
                        this.triggerMethod("action:toggle", this.model.get("actionId"))
                    }
                }, {
                    key: "_onDotEnter",
                    value: function() {
                        this.triggerMethod("action:toggle:highlight", this.model.get("actionId"))
                    }
                }, {
                    key: "_onDotLeave",
                    value: function() {
                        this.triggerMethod("action:toggle:unhighlight", this.model.get("actionId"))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._showIdsList(),
                            this.stickit(),
                            this.ui.tooltip.tooltip()
                    }
                }, {
                    key: "_showIdsList",
                    value: function() {
                        var e = this._createFeatureIdsCollectionView();
                        this.showChildView("idsRegion", e)
                    }
                }, {
                    key: "_createFeatureIdsCollectionView",
                    value: function() {
                        var e = new P.a.CollectionView({
                            collection: this.model.getIdsCollection(),
                            childView: Pt
                        });
                        return this.listenTo(e, "childview:action:featureId:click", this._onItemFeatureIdClick.bind(this)),
                            this.listenTo(e, "childview:action:featureId:enter", this._onItemFeatureIdEnter.bind(this)),
                            this.listenTo(e, "childview:action:featureId:leave", this._onItemFeatureIdLeave.bind(this)),
                            e
                    }
                }, {
                    key: "_onItemFeatureIdClick",
                    value: function(e) {
                        this.triggerMethod("action:featureId:click", {
                            featureUniqueId: e,
                            actionId: this.model.get("actionId")
                        })
                    }
                }, {
                    key: "_onItemFeatureIdEnter",
                    value: function(e) {
                        this.triggerMethod("action:featureId:enter", {
                            featureUniqueId: e,
                            actionId: this.model.get("actionId")
                        })
                    }
                }, {
                    key: "_onItemFeatureIdLeave",
                    value: function(e) {
                        this.triggerMethod("action:featureId:leave", {
                            featureUniqueId: e,
                            actionId: this.model.get("actionId")
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ChangesLog/templates/action-view"
                    }
                }]),
                t
        }(P.a.View),
        xt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "className",
                    value: function() {
                        return "error-item"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .focus": "_onFocusClicked"
                        }
                    }
                }, {
                    key: "_onFocusClicked",
                    value: function() {
                        this.triggerMethod("error:focus:click", this.model)
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".title": "title",
                            ".solution": "solutionText",
                            ".pan-button": {
                                observe: "geometry",
                                visible: !0,
                                visibleFn: bt.b
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-view"
                    }
                }]),
                t
        }(P.a.View),
        Vt = function(e) {
            function t(e) {
                var n;
                return r()(this, t),
                    (n = f()(this, v()(t).call(this, e))).groupId = e.groupId,
                    n
            }
            return y()(t, e),
                o()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .save-and-ignore": "_onSaveAndIgnoreClicked"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            listRegion: ".list-region"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "error:focus:click": "error:focus:click"
                        }
                    }
                }, {
                    key: "_onChildFocusClicked",
                    value: function(e) {
                        this.trigger("error:focus:click", e.model)
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".save-and-ignore": {
                                observe: "isIgnoreable",
                                visible: !0,
                                visibleFn: bt.b
                            }
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ChangesLog/templates/save-error-list-view"
                    }
                }]),
                o()(t, [{
                    key: "onRender",
                    value: function() {
                        this.showChildView("listRegion", new P.a.CollectionView({
                                collection: this.collection,
                                childView: xt,
                                childViewTriggers: function() {
                                    return {
                                        "error:focus:click": "error:focus:click"
                                    }
                                }
                            })),
                            this.stickit()
                    }
                }, {
                    key: "_onSaveAndIgnoreClicked",
                    value: function() {
                        this.triggerMethod("save:ignore:click", this.groupId)
                    }
                }]),
                t
        }(P.a.View),
        jt = function(e) {
            function t(e) {
                var n;
                return r()(this, t),
                    (n = f()(this, v()(t).call(this, e))).groupId = n.model.get("groupId"),
                    n.actionManager = n.model.get("actionManager"),
                    n.model.calculateGroupRedoUndoState(),
                    n
            }
            return y()(t, e),
                o()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .undo-all": "_onUndoAllClick",
                            "click .redo-all": "_onRedoAllClick"
                        }
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "action:toggle": "action:toggle",
                            "action:toggle:highlight": "action:toggle:highlight",
                            "action:toggle:unhighlight": "action:toggle:unhighlight",
                            "action:featureId:click": "action:featureId:click",
                            "action:featureId:enter": "action:featureId:enter",
                            "action:featureId:leave": "action:featureId:leave",
                            "save:ignore:click": "save:ignore:click",
                            "error:focus:click": "error:focus:click"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            actionsRegion: ".actions-items-list-region",
                            saveErrorActionRegion: ".save-error-actions-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".undo-all": {
                                observe: "showUndoAll",
                                visible: !0,
                                visibleFn: bt.b
                            },
                            ".redo-all": {
                                observe: "showRedoAll",
                                visible: !0,
                                visibleFn: bt.b
                            },
                            ":el": {
                                classes: {
                                    "has-error": {
                                        observe: "hasError"
                                    },
                                    "has-warning": {
                                        observe: "hasWarning"
                                    },
                                    saving: {
                                        observe: "saving"
                                    }
                                }
                            },
                            ".save-error-actions-region": {
                                observe: "showErrorsRegion",
                                visible: !0,
                                visibleFn: bt.b
                            }
                        }
                    }
                }, {
                    key: "errorsViewModelBindings",
                    value: function() {
                        return {
                            ":el": {
                                classes: {
                                    "has-error": {
                                        observe: "hasError"
                                    },
                                    "has-warning": {
                                        observe: "hasWarning"
                                    }
                                }
                            },
                            ".save-error-actions-region": {
                                observe: "showErrorsRegion",
                                visible: !0,
                                visibleFn: bt.b
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            tooltips: ".tooltip-item"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ChangesLog/templates/group-view"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "actions-group-container"
                    }
                }]),
                o()(t, [{
                    key: "onRender",
                    value: function() {
                        this._showActions(),
                            this._showErrors(),
                            this.stickit(),
                            this.stickit(this.model.getErrorsViewModel(), this.errorsViewModelBindings()),
                            this.ui.tooltips.tooltip()
                    }
                }, {
                    key: "_showActions",
                    value: function() {
                        this.showChildView("actionsRegion", new P.a.CollectionView({
                            collection: this.model.getActionsCollection(),
                            childView: Nt,
                            childViewTriggers: {
                                "action:toggle": "action:toggle",
                                "action:toggle:highlight": "action:toggle:highlight",
                                "action:toggle:unhighlight": "action:toggle:unhighlight",
                                "action:featureId:click": "action:featureId:click",
                                "action:featureId:enter": "action:featureId:enter",
                                "action:featureId:leave": "action:featureId:leave"
                            }
                        }))
                    }
                }, {
                    key: "_showErrors",
                    value: function() {
                        var e = this.model.getErrorsViewModel();
                        this.showChildView("saveErrorActionRegion", new Vt({
                            groupId: this.groupId,
                            model: e,
                            collection: e.getErrorsCollection(),
                            childViewTriggers: {
                                "save:ignore:click": "save:ignore:click",
                                "error:focus:click": "error:focus:click"
                            }
                        }))
                    }
                }, {
                    key: "_onUndoAllClick",
                    value: function() {
                        this.triggerMethod("group:undoAll:click", this.groupId)
                    }
                }, {
                    key: "_onRedoAllClick",
                    value: function() {
                        this.triggerMethod("group:redoAll:click", this.groupId)
                    }
                }]),
                t
        }(P.a.View),
        Ut = function(e) {
            function t(e) {
                var n;
                return r()(this, t),
                    (n = f()(this, v()(t).call(this, e))).map = e.map,
                    n
            }
            return y()(t, e),
                o()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            changesList: ".groups-list-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".sandbox-mode-notice": {
                                observe: "isSandbox",
                                visible: !0,
                                visibleFn: bt.b
                            },
                            ".save-loading": {
                                observe: "saving",
                                visible: !0,
                                visibleFn: bt.b
                            },
                            ".groups-list-region": {
                                classes: {
                                    "in-sandbox": "isSandbox"
                                }
                            },
                            ".title": "title"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            mouseleave: "_onMouseleave",
                            click: "_onMouseClick"
                        }
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "changes-log-container"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/ChangesLog/templates/changes-log-view"
                    }
                }]),
                o()(t, [{
                    key: "_showGroupsView",
                    value: function() {
                        this.showChildView("changesList", new P.a.CollectionView({
                            collection: this.model.getGroupsCollection(),
                            childView: jt,
                            childViewTriggers: {
                                "action:toggle": "action:toggle",
                                "action:toggle:highlight": "action:toggle:highlight",
                                "action:toggle:unhighlight": "action:toggle:unhighlight",
                                "action:featureId:click": "action:featureId:click",
                                "action:featureId:enter": "action:featureId:enter",
                                "action:featureId:leave": "action:featureId:leave",
                                "save:ignore:click": "save:ignore:click",
                                "error:focus:click": "error:focus:click",
                                "group:undoAll:click": "group:undoAll:click",
                                "group:redoAll:click": "group:redoAll:click"
                            }
                        }))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._showGroupsView()
                    }
                }, {
                    key: "_onMouseClick",
                    value: function(e) {
                        e.preventDefault(),
                            e.stopPropagation()
                    }
                }]),
                t
        }(P.a.View),
        Ft = n(68),
        Bt = n(153),
        Gt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            groupId: null,
                            actionId: null,
                            done: !1,
                            goingToDisable: !1,
                            goingToEnable: !1,
                            description: "",
                            timestamp: 0
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._idsCollection = new c.a.Collection(e.idsList.map(function(e) {
                            return {
                                featureUniqueId: e
                            }
                        }))
                    }
                }, {
                    key: "getIdsCollection",
                    value: function() {
                        return this._idsCollection
                    }
                }, {
                    key: "setDoneState",
                    value: function(e) {
                        this.set("done", e)
                    }
                }]),
                t
        }(c.a.Model),
        Wt = n(149),
        Ht = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            ignorable: !1,
                            code: 0,
                            details: "",
                            geometry: null,
                            collatedCount: 0,
                            solution: "",
                            title: "",
                            solutionText: "",
                            collatedText: ""
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this._getTitle(),
                            n = this._getSolution(),
                            i = this._getCollatedText();
                        this.set({
                            title: t,
                            solutionText: n,
                            collatedText: i
                        })
                    }
                }, {
                    key: "_getTitle",
                    value: function() {
                        return this._getTranslatedTitle() || this._getServerTitle() || this._getDefaultTitle()
                    }
                }, {
                    key: "_getCollatedText",
                    value: function() {
                        var e = this.get("collatedCount"),
                            t = "";
                        return null != e && e > 1 && (t = I18n.t("save.error.collated", {
                                count: e
                            })),
                            t
                    }
                }, {
                    key: "_getTranslationsByCode",
                    value: function(e) {
                        return I18n.t("save.error_types")[e]
                    }
                }, {
                    key: "_getDefaultTitle",
                    value: function() {
                        var e = Wt.a.prototype.defaults.code,
                            t = this._getTranslationsByCode(e);
                        if (t)
                            return t.title
                    }
                }, {
                    key: "_getServerTitle",
                    value: function() {
                        return this.get("details")
                    }
                }, {
                    key: "_getTranslatedTitle",
                    value: function() {
                        var e = this._getTranslationsByCode(this.get("code"));
                        if (e)
                            return e.title
                    }
                }, {
                    key: "_getSolution",
                    value: function() {
                        var e = this._getTranslationsByCode(this.get("code"));
                        return e && e.solution ? e.solution : I18n.t("save.default_solution")
                    }
                }], [{
                    key: "fromErrorModel",
                    value: function(e) {
                        return new t(e.attributes)
                    }
                }]),
                t
        }(c.a.Model),
        zt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            isIgnoreable: !1,
                            hasError: !1,
                            hasWarning: !1,
                            showErrorsRegion: !1
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._errorsCollection = new c.a.Collection([], {
                            model: Ht
                        })
                    }
                }, {
                    key: "setErrors",
                    value: function(e) {
                        var t = e.map(function(e) {
                            return Ht.fromErrorModel(e)
                        });
                        this._errorsCollection.reset(t),
                            this.set("showErrorsRegion", this._errorsCollection.length > 0),
                            this.set("hasError", this._hasError()),
                            this.set("hasWarning", this._hasWarning()),
                            this.set("isIgnoreable", this._isIgnorable())
                    }
                }, {
                    key: "_isIgnorable",
                    value: function() {
                        return this._errorsCollection.all(function(e) {
                            return e.get("ignorable")
                        })
                    }
                }, {
                    key: "_hasError",
                    value: function() {
                        var e = this._errorsCollection;
                        return e.size() > 0 && e.some(function(e) {
                            return !e.get("ignorable")
                        })
                    }
                }, {
                    key: "_hasWarning",
                    value: function() {
                        var e = this._errorsCollection;
                        return e.size() > 0 && e.every(function(e) {
                            return e.get("ignorable")
                        })
                    }
                }, {
                    key: "getErrorsCollection",
                    value: function() {
                        return this._errorsCollection
                    }
                }]),
                t
        }(c.a.Model),
        qt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            groupId: 0,
                            showRedoAll: !1,
                            showUndoAll: !1,
                            saving: !1
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._actionsCollection = new c.a.Collection([], {
                                model: Gt
                            }),
                            this._errors = e.errors || [],
                            this._errorsViewModel = new zt,
                            this._errorsViewModel.setErrors(this._errors),
                            this._actionsCollection.reset(e.actionsData)
                    }
                }, {
                    key: "calculateGroupRedoUndoState",
                    value: function() {
                        var e = this._actionsCollection.every(function(e) {
                                return !e.get("done")
                            }),
                            t = this._actionsCollection.some(function(e) {
                                return e.get("done")
                            });
                        this.set({
                            showRedoAll: e,
                            showUndoAll: t
                        })
                    }
                }, {
                    key: "getActionsCollection",
                    value: function() {
                        return this._actionsCollection
                    }
                }, {
                    key: "getErrorsViewModel",
                    value: function() {
                        return this._errorsViewModel
                    }
                }, {
                    key: "getFailedActionsCount",
                    value: function() {
                        var e = this.getErrorsViewModel(),
                            t = e.get("hasError"),
                            n = e.get("hasWarning");
                        return t || n ? this.getActionsCollection().size() : 0
                    }
                }, {
                    key: "getFirstActionTimestamp",
                    value: function() {
                        var e = this._actionsCollection.first();
                        return e ? e.get("timestamp") : 0
                    }
                }, {
                    key: "setSaving",
                    value: function(e) {
                        this.set("saving", e)
                    }
                }, {
                    key: "setFailed",
                    value: function(e) {
                        this.set("failed", e)
                    }
                }, {
                    key: "setSuccess",
                    value: function(e) {
                        this.set("success", e)
                    }
                }]),
                t
        }(c.a.Model),
        Yt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            saving: !1,
                            actionsCount: 0,
                            failedActionsCount: 0,
                            title: ""
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this;
                        this._groupsCollection = new c.a.Collection([], {
                                model: qt,
                                comparator: function(e, t) {
                                    return t.getFirstActionTimestamp() - e.getFirstActionTimestamp()
                                }
                            }),
                            this.setGroupsCollectionData(e.groupsCollectionData),
                            this._initializeTitle(),
                            this.set({
                                isSandbox: W.app.isSandboxMode()
                            }),
                            this.listenTo(W.app, "change:sandbox", function(e, n) {
                                t.set({
                                    isSandbox: n
                                })
                            })
                    }
                }, {
                    key: "_initializeTitle",
                    value: function() {
                        this.on("change:actionsCount change:failedActionsCount", this._buildTitle.bind(this)),
                            this._buildTitle()
                    }
                }, {
                    key: "_buildTitle",
                    value: function() {
                        var e = this.get("failedActionsCount"),
                            t = this.get("actionsCount"),
                            n = "";
                        n = e > 0 ? I18n.t("save.changes_log.failed_title", {
                                count: e
                            }) : I18n.t("save.changes_log.title", {
                                count: t
                            }),
                            this.set("title", n)
                    }
                }, {
                    key: "setGroupSavingStatus",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = t.saving,
                            i = void 0 !== n && n,
                            r = t.success,
                            s = void 0 !== r && r,
                            o = t.fail,
                            a = void 0 !== o && o,
                            l = this.getGroupViewModelByGroupId(e);
                        l && (l.setSaving(i),
                            l.setSuccess(s),
                            l.setFailed(a))
                    }
                }, {
                    key: "setGroupsCollectionData",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                        this._groupsCollection.reset(e),
                            this._calculateActionsCount(),
                            this._calculateFailedActionsCount()
                    }
                }, {
                    key: "_calculateActionsCount",
                    value: function() {
                        var e = this._groupsCollection.reduce(function(e, t) {
                            return e + t.getActionsCollection().size()
                        }, 0);
                        this.set("actionsCount", e)
                    }
                }, {
                    key: "_calculateFailedActionsCount",
                    value: function() {
                        var e = this._groupsCollection.reduce(function(e, t) {
                            return e + t.getFailedActionsCount()
                        }, 0);
                        this.set("failedActionsCount", e)
                    }
                }, {
                    key: "setGroupErrors",
                    value: function(e, t) {
                        var n = this.getGroupViewModelByGroupId(e);
                        n && (n.getErrorsViewModel().setErrors(t),
                            this._calculateFailedActionsCount())
                    }
                }, {
                    key: "getGroupViewModelByGroupId",
                    value: function(e) {
                        return this._groupsCollection.findWhere({
                            groupId: e
                        })
                    }
                }, {
                    key: "getActionViewModelByGroupAndActionId",
                    value: function(e, t) {
                        var n = this.getGroupViewModelByGroupId(e);
                        if (!n)
                            return null;
                        var i = n.getActionsCollection();
                        return i && i.length > 0 ? i.findWhere({
                            actionId: t
                        }) : void 0
                    }
                }, {
                    key: "getGroupsCollection",
                    value: function() {
                        return this._groupsCollection
                    }
                }]),
                t
        }(c.a.Model);

    function $t(e, t) {
        var n = function(e) {
                return e.getActions(!0).sort(function(e, t) {
                    return t.getTimestamp() - e.getTimestamp()
                }).map(function(t) {
                    return {
                        groupId: e.getActionGroupId(t),
                        actionId: t.getID(),
                        done: e.isActionDone(t),
                        idsList: t.getFocusFeatures().map(function(e) {
                            return e.getUniqueID()
                        }),
                        description: t.getDescription(),
                        timestamp: t.getTimestamp()
                    }
                })
            }(e),
            i = E.a.groupBy(n, function(e) {
                return e.groupId
            }),
            r = t.getAllErrorsByGroupsIds();
        return Array.from(Object.entries(i)).map(function(e) {
            var t = Ze()(e, 2),
                n = t[0];
            return {
                groupId: n,
                actionsData: t[1],
                errors: r[n]
            }
        })
    }
    var Kt, Jt, Zt = n(146),
        Qt = function() {
            function e(t) {
                r()(this, e),
                    this._map = t
            }
            return o()(e, [{
                    key: "highlightFeature",
                    value: function(e) {
                        this._getDrawingContext().addGeometry(e.geometry)
                    }
                }, {
                    key: "removeAllFeatures",
                    value: function() {
                        this._getDrawingContext().removeAllFeatures()
                    }
                }, {
                    key: "destroyDrawingContext",
                    value: function() {
                        null != this._drawingContext && (this._drawingContext.destroy(),
                            this._drawingContext = null)
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this._drawingContext && (this._drawingContext = this._map.getDrawingContext(),
                                this._drawingContext.setStyleMap(Zt.a),
                                this._drawingContext.moveLayerToTop()),
                            this._drawingContext
                    }
                }]),
                e
        }(),
        Xt = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "initialize",
                    value: function(e) {
                        var t, n;
                        this._actionManager = e.actionManager,
                            this._map = e.map,
                            this._selectionManager = e.selectionManager,
                            this._saveController = e.saveController,
                            this._changesLogViewModel = (t = this._actionManager,
                                n = this._saveController,
                                new Yt({
                                    actionsCount: t.getActionsNum(),
                                    groupsCollectionData: $t(t, n)
                                })),
                            this._changesLogHighlighter = new Qt(this._map),
                            this._bindEvents()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this._actionManager.events.on({
                                scope: this,
                                afteraction: this._onDoAction,
                                afterundoaction: this._onUndoAction,
                                afterclearactions: this._onActionsChanged
                            }),
                            this.listenTo(this._saveController, Ft.a.GROUP_SET_ERRORS, this._onGroupErrors),
                            this.listenTo(this._saveController, Ft.a.GROUP_REMOVE_ERRORS, this._onRemoveGroupErrors),
                            this.listenTo(this._saveController, Ft.a.SAVE_GROUP_START, this._onSaveGroupStart),
                            this.listenTo(this._saveController, Ft.a.SAVE_GROUP_SUCCESS, this._onSaveGroupSuccess),
                            this.listenTo(this._saveController, Ft.a.SAVE_GROUP_FAIL, this._onSaveGroupFail),
                            this.listenTo(this._saveController, Ft.a.SAVE_START, this._onSaveStart),
                            this.listenTo(this._saveController, Ft.a.SAVE_END, this._onSaveEnd)
                    }
                }, {
                    key: "_onDoAction",
                    value: function(e) {
                        var t = e.action,
                            n = this._getActionViewModel(t);
                        !n ? this._rebuildGroupsCollectionData() : (n.setDoneState(!0),
                            this._calculateGroupUndoRedoState(t))
                    }
                }, {
                    key: "_onUndoAction",
                    value: function(e) {
                        var t = e.action;
                        this._getActionViewModel(t).setDoneState(!1),
                            this._calculateGroupUndoRedoState(t)
                    }
                }, {
                    key: "_calculateGroupUndoRedoState",
                    value: function(e) {
                        var t = this._actionManager.getActionGroupId(e);
                        this._changesLogViewModel.getGroupViewModelByGroupId(t).calculateGroupRedoUndoState()
                    }
                }, {
                    key: "_getActionViewModel",
                    value: function(e) {
                        var t = this._actionManager.getActionGroupId(e);
                        return this._changesLogViewModel.getActionViewModelByGroupAndActionId(t, e.getID())
                    }
                }, {
                    key: "_onGroupErrors",
                    value: function(e) {
                        var t = e.groupId,
                            n = this._saveController.getGroupSaveErrors(t);
                        this._changesLogViewModel.setGroupErrors(t, n)
                    }
                }, {
                    key: "_onRemoveGroupErrors",
                    value: function(e) {
                        this._changesLogViewModel.setGroupErrors(e, [])
                    }
                }, {
                    key: "_onSaveGroupStart",
                    value: function(e) {
                        this._changesLogViewModel.setGroupSavingStatus(e, {
                            saving: !0
                        })
                    }
                }, {
                    key: "_onSaveGroupSuccess",
                    value: function(e) {
                        this._changesLogViewModel.setGroupSavingStatus(e, {
                            success: !0
                        })
                    }
                }, {
                    key: "_onSaveGroupFail",
                    value: function(e) {
                        this._changesLogViewModel.setGroupSavingStatus(e, {
                            fail: !0
                        })
                    }
                }, {
                    key: "_onActionsChanged",
                    value: function() {
                        this._rebuildGroupsCollectionData()
                    }
                }, {
                    key: "_onSaveStart",
                    value: function() {
                        this._changesLogViewModel.set("saving", !0)
                    }
                }, {
                    key: "_onSaveEnd",
                    value: function() {
                        this._changesLogViewModel.set("saving", !1)
                    }
                }, {
                    key: "_rebuildGroupsCollectionData",
                    value: function() {
                        var e = $t(this._actionManager, this._saveController);
                        this._changesLogViewModel.setGroupsCollectionData(e)
                    }
                }, {
                    key: "saveAllGroups",
                    value: function() {
                        return this.saveController.save()
                    }
                }, {
                    key: "saveGroup",
                    value: function(e, t) {
                        return this.saveController.saveGroup(e, t)
                    }
                }, {
                    key: "createChangesLogView",
                    value: function() {
                        this._rebuildGroupsCollectionData();
                        var e = new Ut({
                            model: this._changesLogViewModel,
                            actionManager: this._actionManager,
                            map: this._map,
                            selectionManager: this._selectionManager,
                            saveController: this._saveController,
                            childViewTriggers: {
                                "action:toggle": "action:toggle",
                                "action:toggle:highlight": "action:toggle:highlight",
                                "action:toggle:unhighlight": "action:toggle:unhighlight",
                                "action:featureId:click": "action:featureId:click",
                                "action:featureId:enter": "action:featureId:enter",
                                "action:featureId:leave": "action:featureId:leave",
                                "save:ignore:click": "save:ignore:click",
                                "error:focus:click": "error:focus:click",
                                "group:undoAll:click": "group:undoAll:click",
                                "group:redoAll:click": "group:redoAll:click"
                            }
                        });
                        return this.listenTo(e, "action:toggle", this._onActionToggleClick.bind(this)),
                            this.listenTo(e, "action:toggle:highlight", this.__onActionToggleHighlight.bind(this)),
                            this.listenTo(e, "action:toggle:unhighlight", this.__onActionToggleUnhighlight.bind(this)),
                            this.listenTo(e, "action:featureId:click", this._onItemFeatureIdClick.bind(this)),
                            this.listenTo(e, "action:featureId:enter", this._onItemFeatureIdEnter.bind(this)),
                            this.listenTo(e, "action:featureId:leave", this._onItemFeatureIdLeave.bind(this)),
                            this.listenTo(e, "save:ignore:click", this._onSaveIgnoreClick.bind(this)),
                            this.listenTo(e, "error:focus:click", this._onErrorFocusClick.bind(this)),
                            this.listenTo(e, "group:undoAll:click", this._onGroupUndoAllClick.bind(this)),
                            this.listenTo(e, "group:redoAll:click", this._onGroupRedoAllClick.bind(this)),
                            this.listenTo(e, "destroy", this._onDestoryChangesLogView.bind(this)),
                            e
                    }
                }, {
                    key: "_onActionToggleClick",
                    value: function(e) {
                        var t = this._actionManager.getActionById(e);
                        if (this._actionManager.isActionDone(t)) {
                            var n = this._actionManager.undoGroupAction(t);
                            yt.reportAnalytic.changesLogAction("undo_multiple", n)
                        } else {
                            var i = this._actionManager.redoGroupAction(t);
                            yt.reportAnalytic.changesLogAction("redo_multiple", i)
                        }
                        this._updateGoingToChange(t)
                    }
                }, {
                    key: "__onActionToggleHighlight",
                    value: function(e) {
                        var t = this._actionManager.getActionById(e);
                        this._updateGoingToChange(t)
                    }
                }, {
                    key: "__onActionToggleUnhighlight",
                    value: function(e) {
                        var t = this._actionManager.getActionById(e),
                            n = this._actionManager.getActionGroupId(t),
                            i = this._changesLogViewModel.getGroupViewModelByGroupId(n).getActionsCollection();
                        this._resetDotsState(i)
                    }
                }, {
                    key: "_updateGoingToChange",
                    value: function(e) {
                        var t = this._actionManager.getActionGroupId(e),
                            n = this._changesLogViewModel.getGroupViewModelByGroupId(t).getActionsCollection(),
                            i = this._getActionViewModel(e),
                            r = n.indexOf(i);
                        this._resetDotsState(n),
                            this._actionManager.canUndoAction(e) ? this._setGoingToUndo(n, 0, r + 1) : this._setGoingToRedo(n, r, n.length)
                    }
                }, {
                    key: "_setGoingToRedo",
                    value: function(e, t, n) {
                        for (var i = t; i < n; i++) {
                            var r = e.at(i),
                                s = this._actionManager.getActionById(r.get("actionId"));
                            this._actionManager.canRedoAction(s) && r.set("goingToEnable", !0)
                        }
                    }
                }, {
                    key: "_setGoingToUndo",
                    value: function(e, t, n) {
                        for (var i = t; i < n; i++) {
                            var r = e.at(i),
                                s = this._actionManager.getActionById(r.get("actionId"));
                            this._actionManager.canUndoAction(s) && r.set("goingToDisable", !0)
                        }
                    }
                }, {
                    key: "_resetDotsState",
                    value: function(e) {
                        e.forEach(function(e) {
                            e.set("goingToDisable", !1),
                                e.set("goingToEnable", !1)
                        })
                    }
                }, {
                    key: "_onItemFeatureIdClick",
                    value: function(e) {
                        var t = e.featureUniqueId,
                            n = e.actionId,
                            i = this._getFocusFeatureByActionIdAndUniqueId(t, n);
                        if (i) {
                            var r = i.geometry;
                            if (r) {
                                var s = r.getBounds().clone();
                                this._map.setCenter(s.getCenterLonLat()),
                                    this._selectionManager.setSelectedModels([i])
                            }
                            yt.reportAnalytic.changesLogAction("focus_on_id", i.attributes.type)
                        }
                    }
                }, {
                    key: "_onItemFeatureIdEnter",
                    value: function(e) {
                        var t = e.featureUniqueId,
                            n = e.actionId,
                            i = this._getFocusFeatureByActionIdAndUniqueId(t, n);
                        i && this._changesLogHighlighter.highlightFeature(i)
                    }
                }, {
                    key: "_onItemFeatureIdLeave",
                    value: function() {
                        this._changesLogHighlighter.removeAllFeatures()
                    }
                }, {
                    key: "_getFocusFeatureByActionIdAndUniqueId",
                    value: function(e, t) {
                        return this._actionManager.getActionById(t).getFocusFeatures().find(function(t) {
                            return t.getUniqueID() === e
                        })
                    }
                }, {
                    key: "_onSaveIgnoreClick",
                    value: function(e) {
                        this._saveController.isIgnorable(e) && (this._saveController.saveGroup(e, {
                                ignoreWarnings: !0
                            }),
                            yt.reportAnalytic.changesLogAction("save_and_ignore"))
                    }
                }, {
                    key: "_onErrorFocusClick",
                    value: function(e) {
                        var t = this,
                            n = e.get("geometry");
                        this._overlayRenderer && this._overlayRenderer.destroy(),
                            this._overlayRenderer = new Bt.a(this._map),
                            this._overlayRenderer.drawOverlay(),
                            this._overlayRenderer.drawAndFocusSpotlightAtPoint(n),
                            yt.reportAnalytic.changesLogAction("focus_on_error"),
                            window.setTimeout(function() {
                                t._overlayRenderer && (t._overlayRenderer.destroy(),
                                    t._overlayRenderer = null)
                            }, 800)
                    }
                }, {
                    key: "_onGroupUndoAllClick",
                    value: function(e) {
                        this._actionManager.undoEntireGroupById(e),
                            yt.reportAnalytic.changesLogAction("undo_all")
                    }
                }, {
                    key: "_onGroupRedoAllClick",
                    value: function(e) {
                        this._actionManager.redoEntireGroupById(e),
                            yt.reportAnalytic.changesLogAction("redo_all")
                    }
                }, {
                    key: "_onDestoryChangesLogView",
                    value: function() {
                        this._changesLogHighlighter.destroyDrawingContext()
                    }
                }]),
                t
        }(P.a.Object),
        en = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "getCenter",
                    value: function() {
                        var e = this.get("center");
                        return null != e ? Object(Ge.createLonLat)(e.lon, e.lat) : null
                    }
                }]),
                t
        }(c.a.Model),
        tn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            ownMessage: !1
                        }
                    }
                }, {
                    key: "getSenderID",
                    value: function() {
                        return this.get("from").id
                    }
                }, {
                    key: "addLine",
                    value: function(e) {
                        var t = "".concat(this.get("body"), "\n").concat(e);
                        return this.set("body", t)
                    }
                }, {
                    key: "getType",
                    value: function() {
                        return this.get("type") || "normal"
                    }
                }, {
                    key: "isSystem",
                    value: function() {
                        return "normal" !== this.getType()
                    }
                }, {
                    key: "isOwnMessage",
                    value: function() {
                        return !0 === this.get("ownMessage")
                    }
                }]),
                t
        }(c.a.Model),
        nn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "add",
                    value: function(e) {
                        e instanceof this.model || (e = new this.model(e));
                        var n = this.last();
                        if (null != n && n.getSenderID() === e.getSenderID())
                            return this.trigger("beforeMessageUpdated", n),
                                n.addLine(e.get("body")),
                                void this.trigger("messageUpdated", n);
                        xe()(v()(t.prototype), "add", this).call(this, e)
                    }
                }, {
                    key: "model",
                    get: function() {
                        return tn
                    }
                }]),
                t
        }(c.a.Collection),
        rn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "initialize",
                    value: function(e, t) {
                        this._wazeModel = e,
                            this._marx = t,
                            this.messages = new nn,
                            this.users = new c.a.Collection([], {
                                model: en,
                                comparator: function(e, t) {
                                    return t.get("rank") - e.get("rank")
                                }
                            }),
                            this.rooms = new Jt,
                            this._refreshRooms(),
                            this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                            this._marx.on("reconnect", this._onMarxReconnect, this),
                            this._marx.on("disconnect", this._onMarxDisconnect, this),
                            this._registerWazeModelEvents(),
                            this.set({
                                room: this._getTopRoom(),
                                currentUser: null,
                                active: !1,
                                visible: null,
                                open: !1
                            }),
                            this._loadFromLocalStorage(),
                            this.on("change:room", this._onRoomChange, this),
                            this.on("change:visible", this._onVisibilityChanged, this),
                            this.on("change:open", this._onOpenChanged, this)
                    }
                }, {
                    key: "_loadFromLocalStorage",
                    value: function() {
                        var e = Z.localStorage.get("chatSettings");
                        null != e && this.set(e)
                    }
                }, {
                    key: "_saveToLocalStorage",
                    value: function() {
                        Z.localStorage.set("chatSettings", {
                            visible: this.get("visible"),
                            open: this.get("open")
                        })
                    }
                }, {
                    key: "_onMarxFirstConnect",
                    value: function() {
                        this._registerSocketEvents(),
                            this._activate()
                    }
                }, {
                    key: "_onMarxReconnect",
                    value: function() {
                        this._activate()
                    }
                }, {
                    key: "_onMarxDisconnect",
                    value: function() {
                        this._deactivate()
                    }
                }, {
                    key: "_canActivate",
                    value: function() {
                        return null != this._wazeModel.loginManager.user
                    }
                }, {
                    key: "_getDefaultVisibility",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "_activate",
                    value: function(e) {
                        if (this._canActivate()) {
                            var t = this.get("visible");
                            null == t && (t = this._getDefaultVisibility()),
                                this._refreshRooms();
                            var n = this.get("room") || this._getTopRoom();
                            return this.set({
                                    currentUser: this._createMyUser(),
                                    visible: t,
                                    active: this._canActivate(),
                                    room: n
                                }),
                                null == this.get("visible") && (t = this._getDefaultVisibility()),
                                null != n && this._onRoomChange(),
                                this._onVisibilityChanged()
                        }
                    }
                }, {
                    key: "_createMyUser",
                    value: function() {
                        var e = this._wazeModel.loginManager.user;
                        return new en({
                            id: e.id,
                            rank: e.rank,
                            name: e.userName
                        })
                    }
                }, {
                    key: "_registerWazeModelEvents",
                    value: function() {
                        return this._wazeModel.events.on({
                            mergeend: this._onMergeEnd,
                            scope: this
                        })
                    }
                }, {
                    key: "_registerSocketEvents",
                    value: function() {
                        return this._marx.socket.on("room:userJoin", this._onRoomUserJoin.bind(this)),
                            this._marx.socket.on("room:userLeave", this._onRoomUserLeave.bind(this)),
                            this._marx.socket.on("room:userPan", this._onRoomUserPan.bind(this)),
                            this._marx.socket.on("room:userEdit", this._onRoomUserEdit.bind(this)),
                            this._marx.socket.on("room:newMessage", this._onMessage.bind(this)),
                            this._marx.socket.on("me:newMessage", this._onMessageFromOtherTab.bind(this)),
                            this._marx.socket.on("me:change:room", this._onMeChangeRoom.bind(this)),
                            this._marx.socket.on("me:change:visible", this._onMeChangeVisible.bind(this))
                    }
                }, {
                    key: "_onMergeEnd",
                    value: function() {
                        this.get("active") && (this._refreshRooms(),
                            null == this.get("room") && this.set("room", this._getTopRoom()))
                    }
                }, {
                    key: "_getTopRoom",
                    value: function() {
                        return null != this._wazeModel.getTopCountry() ? this.rooms.findById(this._wazeModel.getTopCountry().id) : this.rooms[0]
                    }
                }, {
                    key: "_refreshRooms",
                    value: function() {
                        var e = this._wazeModel.countries.objects || {};
                        return this.rooms.update(e)
                    }
                }, {
                    key: "_deactivate",
                    value: function() {
                        this.users.reset([]),
                            this.set({
                                active: !1
                            })
                    }
                }, {
                    key: "_onMeChangeVisible",
                    value: function(e) {
                        this._silent = !0,
                            this.set("visible", e.visible),
                            this._silent = !1
                    }
                }, {
                    key: "_onMeChangeRoom",
                    value: function(e) {
                        var t = e.room;
                        this.users.reset(t.users || []),
                            this.set({
                                room: this._findOrCreateRoom(t.name)
                            }, {
                                pushToServer: !1
                            }),
                            this.messages.add({
                                type: "system",
                                body: "Joined room ".concat(t.name),
                                from: {},
                                ownMessage: !1
                            }),
                            this._showOrHideMeInUsersList()
                    }
                }, {
                    key: "_findOrCreateRoom",
                    value: function(e) {
                        var t = this.rooms.findWhere({
                            name: e
                        });
                        return null == t && (t = new Kt({
                                    name: e
                                }),
                                this.rooms.add(t)),
                            t
                    }
                }, {
                    key: "_onRoomUserJoin",
                    value: function(e) {
                        null == this.getUserById(e.user.id) && this.users.add(e.user)
                    }
                }, {
                    key: "_onRoomUserLeave",
                    value: function(e) {
                        var t = this.getUserById(e.user.id);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_onRoomUserPan",
                    value: function(e) {
                        this.getUserById(e.user.id).set(e.user)
                    }
                }, {
                    key: "_onRoomUserEdit",
                    value: function(e) {
                        this.getUserById(e.user.id).set(e.user)
                    }
                }, {
                    key: "_onMessage",
                    value: function(e) {
                        var t = this.get("currentUser");
                        e.ownMessage = t && e.from && e.from.id === t.id,
                            this.messages.add(e),
                            yt.reportAnalytic.chatAction("chat_message")
                    }
                }, {
                    key: "_onMessageFromOtherTab",
                    value: function(e) {
                        e.from = this.get("currentUser").toJSON(),
                            e.ownMessage = !0,
                            this.messages.add(e)
                    }
                }, {
                    key: "getUserById",
                    value: function(e) {
                        return this.users.findWhere({
                            id: e
                        })
                    }
                }, {
                    key: "_onRoomChange",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                        this.set({
                                roomName: this._getCurrentRoomName()
                            }),
                            n = E.a.defaults(n, {
                                pushToServer: !0
                            }),
                            this.get("active") && n.pushToServer && this._marx.socket.emit("user:change:roomName", {
                                roomName: this.get("roomName")
                            })
                    }
                }, {
                    key: "_getCurrentRoomName",
                    value: function() {
                        var e = this.get("room");
                        return e && e.get ? e.get("name") : null
                    }
                }, {
                    key: "_onVisibilityChanged",
                    value: function() {
                        this.get("active") && (this._saveToLocalStorage(),
                            this._silent || this._sendVisibilityChangedMessage(),
                            this._showOrHideMeInUsersList())
                    }
                }, {
                    key: "_showOrHideMeInUsersList",
                    value: function() {
                        return this.get("visible") ? this._addMeToUsers() : this._removeMeFromUsers()
                    }
                }, {
                    key: "_addMeToUsers",
                    value: function() {
                        var e = this.get("currentUser");
                        if (null == this.getUserById(e.get("id")))
                            return this.users.add(e)
                    }
                }, {
                    key: "_removeMeFromUsers",
                    value: function() {
                        var e = this.get("currentUser").get("id"),
                            t = this.getUserById(e);
                        null != t && this.users.remove(t)
                    }
                }, {
                    key: "_onOpenChanged",
                    value: function() {
                        this.get("active") && this._saveToLocalStorage()
                    }
                }, {
                    key: "_sendVisibilityChangedMessage",
                    value: function() {
                        return this._marx.socket.emit("user:change:visible", {
                            visible: this.get("visible")
                        })
                    }
                }, {
                    key: "sendMessage",
                    value: function(e) {
                        var t = this.get("currentUser"),
                            n = {
                                body: e
                            };
                        this._marx.socket.emit("user:newMessage", n);
                        var i = {
                            body: e,
                            from: {
                                id: t.get("id"),
                                name: t.get("name")
                            },
                            ownMessage: !0
                        };
                        return this.messages.add(i)
                    }
                }]),
                t
        }(c.a.Model);
    Kt = function(e) {
        function t() {
            return r()(this, t),
                f()(this, v()(t).apply(this, arguments))
        }
        return y()(t, e),
            o()(t, [{
                key: "getName",
                value: function() {
                    return this.attributes.name
                }
            }, {
                key: "equals",
                value: function(e) {
                    return null != e && this.getName() === e.getName()
                }
            }, {
                key: "matchesId",
                value: function(e) {
                    return -1 !== (this.get("ids") || []).indexOf(e)
                }
            }, {
                key: "addId",
                value: function(e) {
                    var t = this.get("ids") || [];
                    if (-1 === t.indexOf(e))
                        return t.push(e),
                            this.set({
                                ids: t
                            })
                }
            }]),
            t
    }(c.a.Model);
    var sn = {
        Belgium: "Benelux",
        Netherlands: "Benelux",
        Luxembourg: "Benelux",
        "Palestinian Territory": "Israel",
        "West Bank": "Israel",
        "Gaza Strip": "Israel"
    };
    Jt = function(e) {
        function t() {
            return r()(this, t),
                f()(this, v()(t).apply(this, arguments))
        }
        return y()(t, e),
            o()(t, [{
                key: "update",
                value: function(e) {
                    for (var t = this, n = {}, i = 0; i < this.models.length; i++) {
                        var r = this.models[i];
                        n[r.getName()] = r
                    }
                    Object.keys(e).forEach(function(i) {
                        var r = e[i],
                            s = t._getRoomNameByCountry(r),
                            o = n[s];
                        null != o ? o.addId(r.id) : (o = new Kt({
                                name: s,
                                ids: [r.id]
                            }),
                            n[s] = o,
                            t.add(o))
                    })
                }
            }, {
                key: "_getRoomNameByCountry",
                value: function(e) {
                    return sn[e.name] || e.name
                }
            }, {
                key: "findById",
                value: function(e) {
                    for (var t = 0; t < this.models.length; t++) {
                        var n = this.models[t];
                        if (n.matchesId(e))
                            return n
                    }
                    return null
                }
            }, {
                key: "model",
                get: function() {
                    return Kt
                }
            }]),
            t
    }(c.a.Collection);
    var on, an = function(e) {
        function t() {
            return r()(this, t),
                f()(this, v()(t).apply(this, arguments))
        }
        return y()(t, e),
            o()(t, [{
                key: "initialize",
                value: function(e, t, n) {
                    this._wazeModel = e,
                        this._marx = t,
                        this._adapter = n,
                        this.users = new c.a.Collection([], {
                            model: on
                        }),
                        this.throttleUserPanMessage = E.a.throttle(this.sendUserPanMessage, 3e3, {
                            leading: !1
                        }),
                        this.throttleUserEditMessage = E.a.throttle(this.sendUserEditMessage, 3e3, {
                            leading: !1
                        }),
                        this._connected = !1,
                        this._adapter.events.on({
                            "change:editArea": this._onEditAreaChange,
                            "change:viewArea": this._onViewAreaChange,
                            scope: this
                        }),
                        this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                        this._marx.on("reconnect", this._onMarxReconnect, this),
                        this._marx.on("disconnect", this._onMarxDisconnect, this)
                }
            }, {
                key: "_onMarxFirstConnect",
                value: function() {
                    this._registerMarxEvents(),
                        this._activate()
                }
            }, {
                key: "_registerMarxEvents",
                value: function() {
                    return this._marx.socket.on("viewport:userPan", this._onUserPan.bind(this)),
                        this._marx.socket.on("viewport:userEdit", this._onUserEdit.bind(this)),
                        this._marx.socket.on("viewport:userLeave", this._onUserLeave.bind(this)),
                        this._marx.socket.on("viewport:reset", this._onViewportReset.bind(this))
                }
            }, {
                key: "_onMarxReconnect",
                value: function() {
                    this._activate()
                }
            }, {
                key: "_activate",
                value: function() {
                    return this._connected || (this._connected = !0,
                            this._adapter.activate()),
                        this.sendUserPanMessage()
                }
            }, {
                key: "_onUserPan",
                value: function(e) {
                    return this._mergeUser(e.user)
                }
            }, {
                key: "_onUserEdit",
                value: function(e) {
                    return this._mergeUser(e.user)
                }
            }, {
                key: "_onUserLeave",
                value: function(e) {
                    var t = this.findUserById(e.user.id);
                    null != t && this.users.remove(t)
                }
            }, {
                key: "_onMarxDisconnect",
                value: function() {
                    this._connected && (this._adapter.deactivate(),
                        this._connected = !1)
                }
            }, {
                key: "_onViewportReset",
                value: function(e) {
                    return this.mergeUsers(e)
                }
            }, {
                key: "mergeUsers",
                value: function(e) {
                    var t = this;
                    return this._removeUsersNotIn(e),
                        e.map(function(e) {
                            return t._mergeUser(e)
                        })
                }
            }, {
                key: "_mergeUser",
                value: function(e) {
                    e = l.a.extend({}, e),
                        this._transformCenterFromMarx(e);
                    var t = this.findUserById(e.id);
                    return null != t ? t.set(e) : this.users.add(e)
                }
            }, {
                key: "_removeUsersNotIn",
                value: function(e) {
                    var t = e.reduce(function(e, t) {
                            return e[t.id] = !0,
                                e
                        }, {}),
                        n = this.users.filter(function(e) {
                            return !t[e.get("id")]
                        });
                    this.users.remove(n)
                }
            }, {
                key: "_transformCenterFromMarx",
                value: function(e) {
                    if (null != e.center) {
                        var t = e.center;
                        t = Object(Ge.createLonLat)(t.lon, t.lat),
                            e.center = this._adapter.convertFromMarx(t)
                    }
                }
            }, {
                key: "findUserById",
                value: function(e) {
                    return this.users.findWhere({
                        id: e
                    })
                }
            }, {
                key: "_onEditAreaChange",
                value: function(e) {
                    return this.throttleUserEditMessage()
                }
            }, {
                key: "sendUserEditMessage",
                value: function() {
                    var e = {
                        editArea: this._adapter.getEditArea()
                    };
                    return this._marx.socket.emit("user:edit", e)
                }
            }, {
                key: "_onViewAreaChange",
                value: function(e) {
                    return this.throttleUserPanMessage()
                }
            }, {
                key: "sendUserPanMessage",
                value: function() {
                    if (null != this._marx.socket) {
                        var e = {
                            center: this._adapter.getCenter(),
                            viewArea: this._adapter.getViewArea()
                        };
                        return this._marx.socket.emit("user:pan", e)
                    }
                }
            }]),
            t
    }(c.a.Model);
    on = function(e) {
        function t() {
            return r()(this, t),
                f()(this, v()(t).apply(this, arguments))
        }
        return y()(t, e),
            o()(t, [{
                key: "initialize",
                value: function() {
                    this.on("change:center", this._onCenterChanged, this)
                }
            }, {
                key: "_onCenterChanged",
                value: function(e) {
                    if (null != e.newValue && null != e.oldValue && e.newValue.lon !== e.oldValue.lon && e.newValue.lat !== e.oldValue.lat)
                        return this.trigger("moved")
                }
            }]),
            t
    }(c.a.Model);
    var ln = an,
        un = function() {
            function e(t, n, i) {
                return r()(this, e),
                    this._wazeModel = t,
                    this._marx = n,
                    this._map = i,
                    this.events = new OL.Events,
                    this._active = !1,
                    this
            }
            return o()(e, [{
                    key: "activate",
                    value: function() {
                        if (!this._active)
                            return this._active = !0,
                                this._wazeModel.actionManager.events.on({
                                    afteraction: this._onEditAreaChange,
                                    afterundoaction: this._onEditAreaChange,
                                    afterclearactions: this._onEditAreaChange,
                                    scope: this
                                }),
                                this._map.getMapEventsListener().on({
                                    moveend: this._onViewAreaChange,
                                    scope: this
                                })
                    }
                }, {
                    key: "deactivate",
                    value: function() {
                        this._active && (this._wazeModel.actionManager.events.un({
                                afteraction: this._onEditAreaChange,
                                afterundoaction: this._onEditAreaChange,
                                afterclearactions: this._onEditAreaChange,
                                scope: this
                            }),
                            this._map.getMapEventsListener().un({
                                moveend: this._onViewAreaChange,
                                scope: this
                            }),
                            this._active = !1)
                    }
                }, {
                    key: "_onEditAreaChange",
                    value: function() {
                        return this.events.triggerEvent("change:editArea", {
                            editArea: this.getEditArea()
                        })
                    }
                }, {
                    key: "_onViewAreaChange",
                    value: function() {
                        return this.events.triggerEvent("change:viewArea", {
                            viewArea: this.getViewArea()
                        })
                    }
                }, {
                    key: "getEditArea",
                    value: function() {
                        var e = this._wazeModel.actionManager.getChangesBounds();
                        return this.convertToMarx(e)
                    }
                }, {
                    key: "getCenter",
                    value: function() {
                        return this.convertToMarx(this._map.getCenter())
                    }
                }, {
                    key: "getViewArea",
                    value: function() {
                        return this.convertToMarx(this._map.getExtent())
                    }
                }, {
                    key: "convertToMarx",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        return null != (e = this.parseGeometry(e)) && (e = e.transform(this._map.getProjectionObject(), this._marx.displayProjection)),
                            e
                    }
                }, {
                    key: "convertFromMarx",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        return null != (e = this.parseGeometry(e)) && (e = e.transform(this._marx.displayProjection, this._map.getProjectionObject())),
                            e
                    }
                }, {
                    key: "parseGeometry",
                    value: function(e) {
                        return null != e && (e instanceof OL.LonLat || (e instanceof OL.Bounds ? 0 === e.getWidth() && 0 === e.getHeight() && (e = null) : null != e.lon && null != e.lat && (e = Ge.createLonLat(e.lon, e.lat)))),
                            e
                    }
                }]),
                e
        }(),
        cn = OL.Class(OL.Marker, {
            initialize: function(e, t, n) {
                this.model = e,
                    this.map = t,
                    this.layer = n;
                var i = new le.default("live-user-marker", !0);
                OL.Marker.prototype.initialize.call(this, this.getLonLat(), i),
                    this.icon.$div.addClass("rank".concat(this.model.attributes.rank)),
                    this.model.on("moved", this._onMoved, this)
            },
            render: function() {
                return this.icon.$div.tooltip({
                    title: this.model.get("name")
                })
            },
            getLonLat: function() {
                return this.model.get("center")
            },
            _onMoved: function() {
                var e = this;
                return this.icon.$div.one("transitionend", function() {
                        return e.icon.$div.removeClass("moving")
                    }),
                    this.lonlat = this.getLonLat(),
                    this.icon.$div.addClass("moving"),
                    this.layer.drawMarker(this)
            },
            center: function() {
                return this.map.setCenter(this.getLonLat())
            },
            destroy: function() {
                return this.icon.$div.tooltip("destroy")
            }
        }),
        dn = function() {
            function e(t) {
                r()(this, e),
                    this._map = t.map,
                    this._model = t.model,
                    this._model.users.on("add", this._addUser, this),
                    this._model.users.on("remove", this._onRemoveUser, this),
                    this._layer = this._map.liveUsersLayer,
                    this._markersByUserId = {}
            }
            return o()(e, [{
                    key: "_addUser",
                    value: function(e) {
                        var t = new cn(e, this._map, this._layer);
                        return this._markersByUserId[e.get("id")] = t,
                            this._layer.addMarker(t),
                            t.render()
                    }
                }, {
                    key: "_onRemoveUser",
                    value: function(e) {
                        var t = e.get("id");
                        this._removeMarker(t)
                    }
                }, {
                    key: "_removeMarker",
                    value: function(e) {
                        var t = this._markersByUserId[e];
                        t.destroy(),
                            this._layer.removeMarker(t),
                            delete this._markersByUserId[e]
                    }
                }, {
                    key: "centerUser",
                    value: function(e) {
                        this._markersByUserId[e] && this._markersByUserId[e].center()
                    }
                }]),
                e
        }(),
        hn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "initialize",
                    value: function(e) {
                        this._map = e.map,
                            this._marx = e.marx,
                            this._currentUser = e.currentUser
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .user": "_onClick"
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            className: this._isCurrentUser() ? "current-user" : ""
                        }
                    }
                }, {
                    key: "_isCurrentUser",
                    value: function() {
                        return this.model.get("id").toString() === this._currentUser.get("id").toString()
                    }
                }, {
                    key: "_onClick",
                    value: function(e) {
                        e.preventDefault();
                        var t = this._transformFromMarx(this.model.getCenter());
                        this._map.setCenter(t),
                            yt.reportAnalytic.chatAction("chat_user_clicked")
                    }
                }, {
                    key: "_transformFromMarx",
                    value: function(e) {
                        return e.transform(this._marx.displayProjection, this._map.getProjectionObject())
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "li"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Chat/View/chat_user"
                    }
                }]),
                t
        }(P.a.View),
        pn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "className",
                    value: function() {
                        return "message ".concat(this.model.getType(), "-message ").concat(this.model.isOwnMessage() ? "own-message" : "")
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            "change:body": "render"
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$el.find(".body div").autoRTL()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Chat/View/chat_message"
                    }
                }]),
                t
        }(P.a.View),
        gn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .toggle": "toggleOpen",
                            "click .minimize": "toggleOpen",
                            "keypress .message-input": "_onMessageInputClicked",
                            "click ul.visibility a": "_toggleVisibility",
                            "click .header": "_onHeaderClicked",
                            "click .unread-messages-notification": "_onUnreadMessagesNotificationClicked",
                            "click .rooms a": "_onRoomClicked"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            toggle: ".toggle",
                            roomName: ".room-name",
                            popup: "#chat",
                            messages: ".message-list",
                            users: ".user-list",
                            rooms: ".rooms",
                            messageInput: ".message-input",
                            status: ".status",
                            visibleButton: ".visibility-visible",
                            invisibleButton: ".visibility-invisible",
                            unreadMessagesNotification: ".unread-messages-notification"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this;
                        this._map = e.map,
                            this._marx = e.marx,
                            this.$el.attr({
                                id: "chat-overlay"
                            }).appendTo(l()(this._map.$el)),
                            this.$el.on("click mousedown dragstart", "input", function(e) {
                                return e.stopPropagation()
                            }),
                            this.model.users.on("reset", this._onUsersReset, this),
                            this.model.users.on("add", this._addUser, this),
                            this.model.users.on("remove", this._onUserRemoved, this),
                            this.model.on("change:open", this._onOpenChanged, this),
                            this.model.on("change:active", this._onActiveChanged, this),
                            this.model.on("change:visible", this._updateStatus, this),
                            this.model.on("change:roomName", function() {
                                return t.ui.roomName.text(t.model.get("roomName") || I18n.t("chat.connecting")),
                                    t.$el.toggleClass("connected", null != t.model.get("roomName")),
                                    t._resetRooms()
                            }),
                            this.model.messages.on("add", this._addMessage, this),
                            this.model.messages.on("reset", this._resetMessages, this),
                            this.model.messages.on("beforeMessageUpdated", function() {
                                t._wasScrolledToBottom = t._isScrolledToBottomMessage()
                            }),
                            this.model.messages.on("messageUpdated", function(e) {
                                if (!e.isSystem())
                                    return t._afterContentAdded(t._wasScrolledToBottom)
                            }),
                            this.model.rooms.on("reset", this._resetRooms, this),
                            this.model.rooms.on("add", this._resetRooms, this),
                            this.userViews = {},
                            this.render(),
                            this.ui.messages.on("scroll", function() {
                                return t._hideUnreadMessagesNotification()
                            }),
                            this._updateStatus(),
                            this._onOpenChanged(),
                            W.accelerators.events.on({
                                toggleChat: this.toggleOpen,
                                scope: this
                            })
                    }
                }, {
                    key: "_onHeaderClicked",
                    value: function(e) {
                        l()(e.target).hasClass("header") && this.toggleOpen()
                    }
                }, {
                    key: "_onUsersReset",
                    value: function() {
                        var e = this;
                        this.ui.users.empty(),
                            this.model.users.models.map(function(t) {
                                return e._addUser(t)
                            })
                    }
                }, {
                    key: "_addUser",
                    value: function(e) {
                        var t = new hn({
                            model: e,
                            map: this._map,
                            marx: this._marx,
                            currentUser: this.model.get("currentUser")
                        });
                        t.render(),
                            this.userViews[e.get("id")] = t;
                        var n = this.model.users.models.indexOf(e),
                            i = this.ui.users.children().eq(n);
                        i.length ? t.$el.insertBefore(i) : t.$el.appendTo(this.ui.users)
                    }
                }, {
                    key: "_onUserRemoved",
                    value: function(e) {
                        var t = e.get("id"),
                            n = ".user[data-id='".concat(t, "']");
                        this.ui.users.find(n).remove(),
                            delete this.userViews[t]
                    }
                }, {
                    key: "_onOpenChanged",
                    value: function() {
                        var e = !0 === this.model.get("open");
                        this.$el.toggleClass("open", e),
                            e && (this._scrollToBottomMessage(),
                                this._hideUnreadMessagesNotification())
                    }
                }, {
                    key: "_onActiveChanged",
                    value: function() {
                        var e = this.model.get("active");
                        this.$el.toggle(e),
                            this.ui.toggle.toggle(e)
                    }
                }, {
                    key: "_onRoomClicked",
                    value: function(e) {
                        e.preventDefault();
                        var t = l()(e.target).data("room");
                        this.model.set("room", t)
                    }
                }, {
                    key: "_updateStatus",
                    value: function() {
                        var e = this.model.get("visible");
                        this.ui.status.text(this._getStatusText()),
                            this.ui.visibleButton.toggleClass("checked", e),
                            this.ui.invisibleButton.toggleClass("checked", !e),
                            this.$el.toggleClass("visible-true", e),
                            this.$el.toggleClass("visible-false", !e)
                    }
                }, {
                    key: "toggleOpen",
                    value: function() {
                        var e = this.model.get("open");
                        e || yt.reportAnalytic.chatAction("chat_open"),
                            this.model.set("open", !e)
                    }
                }, {
                    key: "_toggleVisibility",
                    value: function(e) {
                        e && e.preventDefault(),
                            this.model.set("visible", !this.model.get("visible"))
                    }
                }, {
                    key: "_onMessageInputClicked",
                    value: function(e) {
                        if (13 === e.keyCode) {
                            var t = l.a.trim(this.ui.messageInput.val());
                            return null != this.model.get("room") && "" !== t && (this.model.sendMessage(t),
                                    this.ui.messageInput.val("")),
                                !1
                        }
                    }
                }, {
                    key: "_addMessage",
                    value: function(e) {
                        var t = new pn({
                            model: e
                        });
                        t.render();
                        var n = this._isScrolledToBottomMessage();
                        if (this.ui.messages.append(t.$el),
                            !e.isSystem())
                            return this._afterContentAdded(n)
                    }
                }, {
                    key: "_afterContentAdded",
                    value: function(e) {
                        e ? this._scrollToBottomMessage() : this._showUnreadMessagesNotification(),
                            this.model.get("open") || this.$el.addClass("has-unread-messages")
                    }
                }, {
                    key: "_showUnreadMessagesNotification",
                    value: function() {
                        this._unreadMessagesCount || (this._unreadMessagesCount = 0),
                            this._unreadMessagesCount++,
                            this.ui.unreadMessagesNotification.text(I18n.t("chat.unread", {
                                count: this._unreadMessagesCount
                            })).show()
                    }
                }, {
                    key: "_onUnreadMessagesNotificationClicked",
                    value: function(e) {
                        e.preventDefault && e.preventDefault(),
                            this._scrollToBottomMessage(),
                            this._hideUnreadMessagesNotification()
                    }
                }, {
                    key: "_hideUnreadMessagesNotification",
                    value: function() {
                        this._unreadMessagesCount = 0,
                            this.ui.unreadMessagesNotification.hide(),
                            this.$el.removeClass("has-unread-messages")
                    }
                }, {
                    key: "_isScrolledToBottomMessage",
                    value: function() {
                        var e = this.ui.messages;
                        return e.scrollTop() + e.outerHeight() >= e[0].scrollHeight
                    }
                }, {
                    key: "_scrollToBottomMessage",
                    value: function() {
                        this.ui.messages.scrollTop(this.ui.messages[0].scrollHeight)
                    }
                }, {
                    key: "_resetMessages",
                    value: function(e) {
                        var t = this;
                        this.ui.messages.empty(),
                            this.model.messages.models.map(function(e) {
                                return t._addMessage(e)
                            })
                    }
                }, {
                    key: "_resetRooms",
                    value: function(e) {
                        var t = this;
                        return this.ui.rooms.empty(),
                            this.model.rooms.models.map(function(e) {
                                return t._addRoom(e)
                            })
                    }
                }, {
                    key: "_addRoom",
                    value: function(e) {
                        var t = this.model.get("room"),
                            n = this._createRoomMenuItem(e);
                        e.equals(t) && n.addClass("checked"),
                            n.appendTo(this.ui.rooms),
                            this.$el.toggleClass("multiple-rooms", this.model.rooms.models.length > 1)
                    }
                }, {
                    key: "_createRoomMenuItem",
                    value: function(e) {
                        var t = e.getName(),
                            n = l()("<li>");
                        return l()("<a>").attr({
                                href: "#"
                            }).text(t).data({
                                room: e
                            }).appendTo(n),
                            n
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        var e = this.model.toJSON();
                        return e.status = this._getStatusText(),
                            e
                    }
                }, {
                    key: "_getStatusText",
                    value: function() {
                        return this.model.get("visible") ? I18n.t("chat.visible") : I18n.t("chat.invisible")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Chat/View/chat"
                    }
                }]),
                t
        }(P.a.View),
        fn = n(28),
        mn = {
            init: function(e) {
                var t = e.map;
                this.selectionManager = e.selectionManager,
                    this.markersLayer = t.getLayerByUniqueName(fn.LAYER_UNIQUE_NAMES.CITIES_MARKERS_LAYER_NAME),
                    this.featuresLayer = t.getLayerByUniqueName(fn.LAYER_UNIQUE_NAMES.CITIES_FEATURES_LAYER_NAME),
                    this.markersLayer.events.register("markerclick", this, this._onMarkerClick),
                    this.selectionManager.events.register("app:selection:featureunselected", this, this._onFeatureUnselected)
            },
            destroy: function() {
                this.markersLayer.events.unregister("markerclick", this, this._onMarkerClick),
                    this.selectionManager.events.unregister("app:selection:featureunselected", this, this._onFeatureUnselected)
            },
            _onFeatureUnselected: function(e) {
                var t = this;
                (e.features || [e.feature]).forEach(function(e) {
                    var n = e.model;
                    if (n && n.type === be.a.CITY) {
                        var i = e.model.getID(),
                            r = t.markersLayer.getMarker(i);
                        r && r.unhighlight()
                    }
                })
            },
            _onMarkerClick: function(e) {
                var t = this.featuresLayer.features.filter(function(t) {
                    return t.model.getID() === e
                })[0];
                void 0 !== t && (this.selectionManager.setSelectedModels([t.model]),
                    this.markersLayer.getMarker(e).highlight())
            }
        },
        vn = n(54),
        _n = function() {
            function e() {
                r()(this, e),
                    this.currentAction = null,
                    this.active = !1;
                var t = this;
                this.$element = l()("#keyboard-dialog"),
                    this.events = new OpenLayers.Events(this),
                    W.accelerators.events.register("showShortcutsDialog", this, function() {
                        this.show()
                    }),
                    l()(window).bind("keydown.shortcut-editor", this.onKeyDown.bind(this)),
                    l()(window).bind("keyup.shortcut-editor", this.onKeyUp.bind(this)),
                    this.$element.delegate(".shortcut-action", "click", function() {
                        t.onActionClicked(this.dataset.action)
                    }),
                    this.$element.on("hide.bs.modal", this.onDialogClose.bind(this)),
                    this.$element.on("show.bs.modal", function() {
                        t.activate()
                    })
            }
            return o()(e, [{
                    key: "activate",
                    value: function() {
                        this.render(),
                            this.active = !0
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.activate(),
                            this.$element.modal("show")
                    }
                }, {
                    key: "onDialogClose",
                    value: function() {
                        this.active = !1
                    }
                }, {
                    key: "render",
                    value: function() {
                        this.$element.html(Object(vn.getHTML)("templates/keyboard_shortcuts/modal", {
                            groups: W.accelerators.Groups
                        }))
                    }
                }, {
                    key: "renderList",
                    value: function() {
                        this.$element.find(".modal-body").html(Object(vn.getHTML)("templates/keyboard_shortcuts/list", {
                            groups: W.accelerators.Groups
                        }))
                    }
                }, {
                    key: "onActionClicked",
                    value: function(e) {
                        var t = this.$element.find(".shortcut-action[data-action=".concat(e, "]"));
                        t.hasClass("disabled") || (this.currentAction && this.currentAction.removeClass("selected"),
                            this.currentAction = t,
                            this.currentAction.addClass("selected"))
                    }
                }, {
                    key: "onKeyDown",
                    value: function(e) {
                        var t = String.fromCharCode(e.which),
                            n = e.which;
                        if (this.active && this.currentAction)
                            return e.stopImmediatePropagation(),
                                (t.match(/^[a-zA-Z0-9]+/) || Object.keys(W.accelerators.SpecialKeys).includes(n.toString())) && (W.accelerators.registerShortcut(new et.KeyStroke(e).toString(), this.currentAction.get(0).dataset.action, !0),
                                    this.currentAction.removeClass("selected"),
                                    W.accelerators.persist(),
                                    this.currentAction = null,
                                    this.renderList()),
                                !1
                    }
                }, {
                    key: "onKeyUp",
                    value: function(e) {
                        this.active && this.currentAction && e.stopImmediatePropagation()
                    }
                }, {
                    key: "getModifiersString",
                    value: function(e) {
                        var t = "";
                        return e.shiftKey && (t += "Shift+"),
                            e.ctrlKey && !e.metaKey && (t += "Control+"),
                            e.altKey && (t += "Alt+"),
                            e.metaKey && (t += "Command+"),
                            t
                    }
                }, {
                    key: "getShortcutCode",
                    value: function(e, t) {
                        var n = "";
                        return e.shiftKey && (n += "S"),
                            (e.ctrlKey || e.metaKey) && (n += "C"),
                            e.altKey && (n += "A"),
                            "".concat(n, "+").concat(t)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this.events.destroy()
                    }
                }]),
                e
        }();
    Object.assign(_n.prototype, {
        CLASS_NAME: "Waze.View.KeyboardShortcutEditor"
    });
    var yn, bn = _n,
        En = n(19),
        wn = n(112),
        Sn = n(31),
        kn = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .js-close-layer-switcher": "hide",
                            "click .toggle-category": "toggleCategory"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            menu: ".menu"
                        }
                    }
                }, {
                    key: "toggleCategory",
                    value: function(e) {
                        var t = e.target.dataset.groupId;
                        if (t) {
                            var n = Boolean(this.collapseMapState.get(t));
                            this.collapseMapState.set(t, !n)
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this;
                        this.checkboxState = e.checkboxState,
                            this.disableState = e.disableState,
                            this.viewState = new c.a.Model({
                                visible: !1
                            }),
                            this.collapseMapState = new c.a.Model(En.TOGGLERS_GROUPS.reduce(function(e, n) {
                                return e[n] = Boolean(t.checkboxState.get(n)),
                                    e
                            }, {})),
                            this.checkboxBindings = this._getCheckboxBindings(),
                            this.disableStateBindings = this._getDisabledStateBindings(),
                            this.listenTo(this.viewState, "change:visible", function(e, n) {
                                t.trigger("visible:changed", n)
                            }),
                            this._listenToGroupCollapse()
                    }
                }, {
                    key: "_listenToGroupCollapse",
                    value: function() {
                        var e = this;
                        En.TOGGLERS_SUB_MENU_GROUPS.forEach(function(t) {
                            e.listenTo(e.checkboxState, "change:".concat(t), function(n, i) {
                                e.collapseMapState.set(t, i)
                            })
                        })
                    }
                }, {
                    key: "show",
                    value: function() {
                        this._setVisibility(!0)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this._setVisibility(!1)
                    }
                }, {
                    key: "toggleVisibility",
                    value: function() {
                        var e = !this.viewState.get("visible");
                        this._setVisibility(e)
                    }
                }, {
                    key: "_setVisibility",
                    value: function(e) {
                        this.viewState.set("visible", e)
                    }
                }, {
                    key: "_getDisabledStateBindings",
                    value: function() {
                        return Object.keys(this.disableState.attributes).reduce(function(e, t) {
                            return e["#layer-switcher-".concat(t.toLowerCase())] = {
                                    attributes: [{
                                        name: "disabled",
                                        observe: t,
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }]
                                },
                                e
                        }, {})
                    }
                }, {
                    key: "_getCheckboxBindings",
                    value: function() {
                        return Object.keys(this.checkboxState.attributes).reduce(function(e, t) {
                            return e["#layer-switcher-".concat(t.toLowerCase())] = t,
                                e
                        }, {})
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.checkboxState, this.checkboxBindings),
                            this.stickit(this.disableState, this.disableStateBindings),
                            this.stickit(this.viewState, this.viewStateBindings),
                            this.stickit(this.collapseMapState, this.collapseMapStateBindings)
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            isLiveUsersLayerEnabled: Object(Sn.isFeatureFlagEnabled)(Sn.FEATURE_FLAGS.CHAT_AND_LIVE_USERS),
                            isHouseNumbersLayerFeatureEnabled: Object(Sn.isFeatureFlagEnabled)(Sn.FEATURE_FLAGS.HOUSE_NUMBERS_LAYER),
                            isRestrictedDrivingAreasLayerEnabled: Object(Sn.isFeatureFlagEnabled)(Sn.FEATURE_FLAGS.RESTRICTED_DRIVING_AREAS)
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/LayerSwitcher/templates/layer-switcher"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "layer-switcher"
                    }
                }, {
                    key: "behaviors",
                    get: function() {
                        return {
                            accelerators: {
                                behaviorClass: wn.a
                            }
                        }
                    }
                }, {
                    key: "accelerators",
                    get: function() {
                        return {
                            displayLayerSwitcher: "toggleVisibility"
                        }
                    }
                }, {
                    key: "collapseMapStateBindings",
                    get: function() {
                        return En.TOGGLERS_GROUPS.reduce(function(e, t) {
                            var n, i = ".collapsible-".concat(t),
                                r = "[data-group-id='".concat(t, "']");
                            return Object.assign(e, (n = {},
                                    J()(n, i, {
                                        classes: {
                                            "collapse-layer-switcher-group": {
                                                observe: t,
                                                onGet: E.a.negate(E.a.identity)
                                            }
                                        }
                                    }),
                                    J()(n, r, {
                                        classes: {
                                            "upside-down": {
                                                observe: t,
                                                onGet: E.a.negate(E.a.identity)
                                            }
                                        }
                                    }),
                                    n)),
                                e
                        }, {})
                    }
                }, {
                    key: "viewStateBindings",
                    get: function() {
                        return {
                            ".menu": {
                                classes: {
                                    "hide-layer-switcher": {
                                        observe: "visible",
                                        onGet: E.a.negate(E.a.identity)
                                    }
                                }
                            }
                        }
                    }
                }]),
                t
        }(P.a.View),
        Tn = P.a.Object.extend({
            initialize: function(e) {
                this.map = e.map,
                    this.actionManager = e.actionManager,
                    this.togglers = e.togglerTree,
                    this.controller = e.controller,
                    this.checkboxState = new c.a.Model,
                    this.disableState = new c.a.Model,
                    this.visibilityState = new c.a.Model,
                    this._readState(),
                    this._initAccelerators(),
                    this.listenTo(this.checkboxState, "change", this._onChange),
                    this.listenTo(this.visibilityState, "change", this._onVisibilityStateChange),
                    this._layerSwitcherLayout = null
            },
            _readState: function() {
                this.checkboxState.set(this.togglers.getState()),
                    this.disableState.set(this.togglers.getDisableState()),
                    this.visibilityState.set(this.togglers.getVisibilityState()),
                    Object(Sn.isFeatureFlagEnabled)(Sn.FEATURE_FLAGS.HOUSE_NUMBERS_LAYER) || (this.checkboxState.set(En.TogglerEnum.ITEM_HOUSE_NUMBERS, !1),
                        this.disableState.set(En.TogglerEnum.ITEM_HOUSE_NUMBERS, !1))
            },
            destroy: function() {
                this._destroyAccelerators()
            },
            createLayerSwitcherLayout: function() {
                return this._layerSwitcherLayout = new kn({
                        checkboxState: this.checkboxState,
                        disableState: this.disableState
                    }),
                    this._layerSwitcherLayout
            },
            onLayerSwitcherButtonClick: function() {
                this._layerSwitcherLayout.toggleVisibility()
            },
            _onChange: function() {
                this.togglers.setState(this.checkboxState.toJSON()),
                    this.visibilityState.set(this.togglers.getVisibilityState()),
                    this.togglers.writeToLocalStorage()
            },
            _onVisibilityStateChange: function(e) {
                var t = e.changed;
                this._updateApp(t)
            },
            _updateApp: function(e) {
                this.controller.onLayerSwitcherChanged(e),
                    this._readState()
            },
            _getLayerSwitcherAccelerators: function() {
                return Object.values(W.accelerators.Actions).filter(function(e) {
                    return null != e.toggler
                })
            },
            _initAccelerators: function() {
                var e = this;
                this._getLayerSwitcherAccelerators().forEach(function(t) {
                    e._registerLayerAccelerator(t.name, t.toggler)
                })
            },
            _destroyAccelerators: function() {
                var e = this;
                this._getLayerSwitcherAccelerators().forEach(function(t) {
                    e._unregisterLayerAccelerator(t.name, t.toggler)
                })
            },
            _registerLayerAccelerator: function(e, t) {
                W.accelerators.events.register(e, this, this._onShortcutEvent)
            },
            _unregisterLayerAccelerator: function(e, t) {
                W.accelerators.events.unregister(e, this, this._onShortcutEvent)
            },
            _onShortcutEvent: function(e) {
                var t = this.togglers.getState(),
                    n = e.action.toggler;
                this._isTogglerEnabled(n) && this.setTogglerState(n, !t[n])
            },
            _isTogglerEnabled: function(e) {
                return this.disableState.get(e)
            },
            setTogglerState: function(e, t) {
                this.checkboxState.set(e, t)
            },
            getTogglerState: function(e) {
                return this.togglers.getState()[e]
            },
            disableToggler: function(e) {
                this.togglers.disableToggler(e),
                    this._readState()
            },
            enableToggler: function(e) {
                this.togglers.enableToggler(e),
                    this._readState()
            }
        }),
        In = function() {
            function e(t) {
                r()(this, e),
                    this._id = t,
                    this._state = !1,
                    this._enabled = !0
            }
            return o()(e, [{
                    key: "getId",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        this._state = e
                    }
                }, {
                    key: "setEnabled",
                    value: function(e) {
                        this._enabled = e
                    }
                }, {
                    key: "isEnabled",
                    value: function() {
                        return this._enabled
                    }
                }, {
                    key: "getState",
                    value: function() {
                        return this._state
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !0
                    }
                }], [{
                    key: "of",
                    value: function(t, n) {
                        return new e(t, n)
                    }
                }]),
                e
        }(),
        An = function(e) {
            function t(e, n, i) {
                var s;
                return r()(this, t),
                    (s = f()(this, v()(t).call(this, e, i)))._children = n,
                    s
            }
            return y()(t, e),
                o()(t, [{
                    key: "getId",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "getChildren",
                    value: function() {
                        return this._children
                    }
                }, {
                    key: "appendChild",
                    value: function(e) {
                        this.getChildren().push(e)
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !1
                    }
                }], [{
                    key: "of",
                    value: function(e, n, i) {
                        return new t(e, n, i)
                    }
                }]),
                t
        }(In),
        Mn = n(441),
        On = (yn = {},
            J()(yn, En.TogglerEnum.GROUP_ISSUES, !0),
            J()(yn, En.TogglerEnum.GROUP_MAP_ISSUES, !1),
            J()(yn, En.TogglerEnum.ITEM_MAP_PROBLEMS, !0),
            J()(yn, En.TogglerEnum.ITEM_CLOSED_MAP_PROBLEMS, !1),
            J()(yn, En.TogglerEnum.ITEM_UPDATE_REQUESTS, !0),
            J()(yn, En.TogglerEnum.ITEM_CLOSED_UPDATE_REQUESTS, !1),
            J()(yn, En.TogglerEnum.ITEM_PLACE_UPDATE_REQUESTS, !1),
            J()(yn, En.TogglerEnum.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS, !1),
            J()(yn, En.TogglerEnum.GROUP_PARKING_ISSUES, !1),
            J()(yn, En.TogglerEnum.ITEM_PARKING_MAP_PROBLEMS, !0),
            J()(yn, En.TogglerEnum.ITEM_PARKING_CLOSED_MAP_PROBLEMS, !1),
            J()(yn, En.TogglerEnum.ITEM_PARKING_PLACE_UPDATE_REQUESTS, !0),
            J()(yn, En.TogglerEnum.GROUP_PLACES, !0),
            J()(yn, En.TogglerEnum.ITEM_VENUES, !0),
            J()(yn, En.TogglerEnum.ITEM_RESIDENTIAL_PLACES, !1),
            J()(yn, En.TogglerEnum.ITEM_PARKING_PLACES, !1),
            J()(yn, En.TogglerEnum.GROUP_ROAD, !0),
            J()(yn, En.TogglerEnum.ITEM_ROAD, !0),
            J()(yn, En.TogglerEnum.ITEM_JUNCTION_BOXES, !1),
            J()(yn, En.TogglerEnum.ITEM_CLOSURES, !1),
            J()(yn, En.TogglerEnum.ITEM_SPEED_CAMERAS, !1),
            J()(yn, En.TogglerEnum.ITEM_HOUSE_NUMBERS, !1),
            J()(yn, En.TogglerEnum.GROUP_DISPLAY, !0),
            J()(yn, En.TogglerEnum.ITEM_SATELLITE_IMAGERY, !0),
            J()(yn, En.TogglerEnum.ITEM_AREA_MANAGERS, !1),
            J()(yn, En.TogglerEnum.ITEM_GPS_POINTS, !1),
            J()(yn, En.TogglerEnum.ITEM_LIVE_USERS, !1),
            J()(yn, En.TogglerEnum.ITEM_EDITABLE_AREAS, !1),
            J()(yn, En.TogglerEnum.ITEM_EDITABLE_AREAS, !1),
            J()(yn, En.TogglerEnum.GROUP_CITIES, !1),
            J()(yn, En.TogglerEnum.ITEM_CITY_NAMES, !1),
            J()(yn, En.TogglerEnum.ITEM_MAP_COMMENTS, !0),
            J()(yn, En.TogglerEnum.GROUP_RESTRICTED_DRIVING_AREAS, !1),
            J()(yn, En.TogglerEnum.ITEM_RESTRICTED_DRIVING_AREAS_NAMES, !1),
            yn),
        Cn = function() {
            function e(t) {
                r()(this, e),
                    this._LOCAL_STORAGE_KEY = "togglersState",
                    this._tree = t,
                    this._togglers = this._getTogglersMap(),
                    this._bitFieldSerializer = new Mn.TogglerTreeBitfieldSerializer
            }
            return o()(e, [{
                    key: "_getTogglersMap",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t) {
                                e[t.getId()] = t
                            }),
                            e
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        var t = this;
                        Object.keys(e).forEach(function(n) {
                                var i = e[n];
                                t._togglers[n].setState(i)
                            }),
                            this.trigger("change")
                    }
                }, {
                    key: "getState",
                    value: function() {
                        var e = Object.assign({}, this._togglers);
                        return Object.keys(e).forEach(function(t) {
                                e[t] = e[t].getState()
                            }),
                            e
                    }
                }, {
                    key: "append",
                    value: function(e, t) {
                        this._togglers[e].appendChild(t),
                            this._togglers = this._getTogglersMap()
                    }
                }, {
                    key: "_eachToggler",
                    value: function(e, t, n) {
                        var i = this;
                        e.getChildren().forEach(function(e) {
                            n(e, t),
                                e.isLeaf() || i._eachToggler(e, t && e.getState(), n)
                        })
                    }
                }, {
                    key: "getDisableState",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t, n) {
                                e[t.getId()] = n && t.isEnabled()
                            }),
                            e
                    }
                }, {
                    key: "getVisibilityState",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t, n) {
                                e[t.getId()] = n && t.getState()
                            }),
                            e
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return this._bitFieldSerializer.convertStateToNumber(this.getState())
                    }
                }, {
                    key: "setStateFromBitfield",
                    value: function(e) {
                        var t = this._bitFieldSerializer.convertNumberToState(e);
                        this.setState(t)
                    }
                }, {
                    key: "readFromLocalStorage",
                    value: function() {
                        var e = Z.localStorage.get(this._LOCAL_STORAGE_KEY);
                        null != e && this.setStateFromBitfield(e)
                    }
                }, {
                    key: "writeToLocalStorage",
                    value: function() {
                        Z.localStorage.set(this._LOCAL_STORAGE_KEY, this.serialize())
                    }
                }, {
                    key: "disableToggler",
                    value: function(e) {
                        this._togglers[e].setEnabled(!1)
                    }
                }, {
                    key: "enableToggler",
                    value: function(e) {
                        this._togglers[e].setEnabled(!0)
                    }
                }], [{
                    key: "create",
                    value: function() {
                        var t = En.TogglerEnum,
                            n = new e(An.of("ROOT", [An.of(t.GROUP_ISSUES, [An.of(t.GROUP_MAP_ISSUES, [In.of(t.ITEM_MAP_PROBLEMS), In.of(t.ITEM_CLOSED_MAP_PROBLEMS), In.of(t.ITEM_UPDATE_REQUESTS), In.of(t.ITEM_CLOSED_UPDATE_REQUESTS)]), In.of(t.ITEM_PLACE_UPDATE_REQUESTS), In.of(t.ITEM_RESIDENTIAL_PLACE_UPDATE_REQUESTS), An.of(t.GROUP_PARKING_ISSUES, [In.of(t.ITEM_PARKING_MAP_PROBLEMS), In.of(t.ITEM_PARKING_CLOSED_MAP_PROBLEMS), In.of(t.ITEM_PARKING_PLACE_UPDATE_REQUESTS)])]), An.of(t.GROUP_PLACES, [In.of(t.ITEM_VENUES), In.of(t.ITEM_RESIDENTIAL_PLACES), In.of(t.ITEM_PARKING_PLACES)]), An.of(t.GROUP_ROAD, [In.of(t.ITEM_ROAD), In.of(t.ITEM_JUNCTION_BOXES), In.of(t.ITEM_CLOSURES), In.of(t.ITEM_SPEED_CAMERAS), In.of(t.ITEM_HOUSE_NUMBERS)]), An.of(t.GROUP_DISPLAY, [In.of(t.ITEM_SATELLITE_IMAGERY), In.of(t.ITEM_AREA_MANAGERS), In.of(t.ITEM_GPS_POINTS), In.of(t.ITEM_EDITABLE_AREAS), In.of(t.ITEM_LIVE_USERS), In.of(t.ITEM_DISALLOWED_TURNS), An.of(t.GROUP_CITIES, [In.of(t.ITEM_CITY_NAMES)]), An.of(t.GROUP_RESTRICTED_DRIVING_AREAS, [In.of(t.ITEM_RESTRICTED_DRIVING_AREAS_NAMES)]), In.of(t.ITEM_MAP_COMMENTS)])])),
                            i = Object.assign({}, On);
                        return n.setState(i),
                            n
                    }
                }]),
                e
        }();
    Object.assign(Cn.prototype, c.a.Events);
    var Rn = Cn,
        Dn = function() {
            function e(t) {
                r()(this, e);
                var n = this._getRepository(t);
                this.problems = n.getObjectArray()
            }
            return o()(e, [{
                    key: "_getRepository",
                    value: function(e) {
                        var t = this.TYPE_TO_REPO[e];
                        return W.model[t]
                    }
                }, {
                    key: "sortByDistance",
                    value: function(e) {
                        return this.problems = E.a.sortBy(this.problems, function(t) {
                                return -1 * e.geometry.distanceTo(t.geometry)
                            }),
                            this
                    }
                }, {
                    key: "next",
                    value: function() {
                        return this.problems.pop()
                    }
                }, {
                    key: "hasNext",
                    value: function() {
                        return this.problems && this.problems.length > 0
                    }
                }]),
                e
        }();
    Dn.prototype.TYPE_TO_REPO = {
        mapProblem: "problems",
        mapUpdateRequest: "mapUpdateRequests"
    };
    var Ln, Pn = Dn,
        Nn = n(229),
        xn = P.a.View.extend({
            maxHeight: null,
            template: "Waze/MapEditor/UI/Modules/Problems/templates/edit",
            events: {
                "click .done": "destroy",
                "click .title": "_onSectionTitleClicked",
                "click .focus": "_onFocusClicked",
                "click .street-view-btn": "_onStreetViewClicked"
            },
            triggers: {
                "click .next": "nextClicked"
            },
            regions: {
                conversationRegion: ".conversation-region"
            },
            ui: {
                problemData: ".problem-data",
                topSection: ".top-section",
                actions: ".actions",
                header: ".header",
                tooltips: ".tooltip"
            },
            bindings: {
                "input[name=state]": "problemState",
                ".more-info": {
                    observe: "loadingMoreInfo",
                    update: function(e, t) {
                        return e.toggleClass("loading", t)
                    }
                },
                ".conversation": {
                    observe: "loadingConversation",
                    update: function(e, t) {
                        return e.toggleClass("loading", t)
                    }
                },
                ".problem-edit": {
                    observe: "problemState",
                    update: function(e, t) {
                        return e.attr("data-state", t)
                    }
                },
                ".not-available": {
                    observe: "moreInfoAvailable",
                    update: function(e, t) {
                        return e.toggle(!t)
                    }
                },
                ".street-view-btn": {
                    observe: "streetViewAvailable",
                    visible: !0,
                    visibleFn: bt.b
                },
                ".street-view-tooltip": {
                    observe: "streetViewAvailable",
                    visible: !0,
                    visibleFn: bt.b,
                    onGet: E.a.negate(Boolean)
                }
            },
            className: function() {
                return this.options.adapter.problem.type
            },
            initialize: function() {
                this.adapter = this.options.adapter
            },
            _bindMoreInfo: function() {
                var e, t = this;
                return this.adapter.getMoreInfoTypes().map(function(n) {
                    return e = n.get("name"),
                        t.addBinding(n, "input[name=".concat(e, "]"), "visible"),
                        t.addBinding(n, ".more-info-".concat(e, "-checkbox"), {
                            observe: "available",
                            update: function(e, t) {
                                return e.toggle(t)
                            }
                        })
                })
            },
            _getMainTitle: function() {
                return this.adapter.problem.type === be.a.UPDATE_REQUEST ? I18n.t("problems.panel.titles.map_update_request") : I18n.t("problems.panel.titles.map_problem")
            },
            serializeData: function() {
                return {
                    mainTitle: this._getMainTitle(),
                    adapter: this.adapter,
                    showDebug: this.options.showDebug,
                    showNext: this.options.showNext,
                    model: this.model
                }
            },
            onRender: function() {
                return this.adapter.isConversationAvailable() && this._renderConversationView(),
                    this._bindMoreInfo(),
                    this.stickit(),
                    this.ui.tooltips.tooltip(),
                    this._setHeight()
            },
            _renderConversationView: function() {
                var e = this;
                return this.adapter.getConversation().then(function(t) {
                    return e.conversationView = new Nn.a({
                            commentable: t.getCommentable(),
                            enabled: e.adapter.allowCommenting()
                        }),
                        e.stickit(e.conversationView.viewModel, {
                            ".comment-count-badge": "commentCount"
                        }),
                        e.showChildView("conversationRegion", e.conversationView)
                })
            },
            _onSectionTitleClicked: function(e) {
                return l()(e.target).parent(".section").toggleClass("collapsed")
            },
            _onFocusClicked: function(e) {
                return e.preventDefault(),
                    this.trigger("focusClicked")
            },
            _onStreetViewClicked: function(e) {
                e.preventDefault(),
                    this.trigger("streetViewClicked")
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setHeight()
            },
            _setHeight: function() {
                var e = this.maxHeight - this.ui.actions.outerHeight();
                return this.ui.topSection.css({
                    maxHeight: e
                })
            },
            templateContext: {
                showMoreInfoSection: function() {
                    return this.adapter.getMoreInfoTypes().length > 0
                },
                showCloseDetails: function() {
                    return !this.adapter.problem.editable
                },
                getCloseDate: function() {
                    var e = this.adapter.problem.attributes.resolvedOn,
                        t = I18n.t("problems.panel.closed.not_available");
                    return null != e && (t = I18n.l("date.formats.long", e)),
                        rt.default.safe_t("problems.panel.closed.date", {
                            date_title: rt.default.contentTag("strong", I18n.t("problems.panel.closed.date_title")),
                            date: t
                        })
                },
                getClosingUser: function() {
                    var e = this.adapter.problem.attributes.resolvedBy,
                        t = I18n.t("problems.panel.closed.not_available");
                    return null != e && (t = rt.default.userProfile(e)),
                        rt.default.safe_t("problems.panel.closed.user", {
                            user_title: rt.default.contentTag("strong", I18n.t("problems.panel.closed.user_title")),
                            username: t
                        })
                }
            }
        }),
        Vn = n(78),
        jn = function() {
            function e(t, n, i) {
                r()(this, e),
                    this.info = t,
                    this.layer = n,
                    this.displayOptions = i
            }
            return o()(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawSegments(),
                            this._drawVenue()
                    }
                }, {
                    key: "_drawSegments",
                    value: function() {
                        if (null != this.info.segmentGeom && this.layer.driveRenderer.drawShortSegment(this.info.segmentGeom),
                            null != this.info.secondarySegmentGeom)
                            return this.layer.driveRenderer.drawShortSegment(this.info.secondarySegmentGeom)
                    }
                }, {
                    key: "_drawVenue",
                    value: function() {
                        if (null != this.info.venueGeom)
                            return this.layer.driveRenderer.drawVenue(this.info.venueGeom)
                    }
                }]),
                e
        }(),
        Un = Vn.a.extend({
            MORE_INFO_DEFAULTS: [],
            createMoreInfoRenderer: function(e, t, n) {
                return new jn(e, t, n)
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? Promise.resolve(this.moreInfo) : this._getSessionsInfo().then(function(t) {
                    return e.moreInfo = t
                })
            }
        }),
        Fn = function() {
            function e(t, n, i) {
                r()(this, e),
                    this.info = t,
                    this.layer = n,
                    this.displayOptions = i
            }
            return o()(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawSuggestedRoute(),
                            this._drawAlternatives()
                    }
                }, {
                    key: "_drawSuggestedRoute",
                    value: function() {
                        return this.layer.driveRenderer.drawSuggestedRoute(this.info.routePrevSeg),
                            this.layer.driveRenderer.drawSuggestedRoute(this.info.routeNextSeg)
                    }
                }, {
                    key: "_drawAlternatives",
                    value: function() {
                        for (var e = E.a.last(this.info.routePrevSeg.components).clone(), t = 0; t < this.info.alternatives.length; t++) {
                            var n = this.info.alternatives[t];
                            this.layer.driveRenderer.drawUserDrive(n.averageGeom),
                                this.layer.driveRenderer.drawDriveWeightPoint(e, n.averageGeom, n.numDrives.toString())
                        }
                    }
                }]),
                e
        }(),
        Bn = Vn.a.extend({
            MORE_INFO_DEFAULTS: [],
            createMoreInfoRenderer: function(e, t, n) {
                return new Fn(e, t, n)
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? Promise.resolve(this.moreInfo) : this._getSessionsInfo().then(function(t) {
                    return e.moreInfo = t,
                        t
                })
            }
        }),
        Gn = function() {
            function e(t, n, i) {
                r()(this, e),
                    this.info = null,
                    this.closureProblem = t,
                    this.layer = n,
                    this.displayOptions = i
            }
            return o()(e, [{
                    key: "drawMoreInfo",
                    value: function() {
                        return this.layer.removeAllFeatures({
                                silent: !0
                            }),
                            this._drawPins()
                    }
                }, {
                    key: "_drawPins",
                    value: function() {
                        if (this.closureProblem.hasEndPoint())
                            return this.layer.driveRenderer.drawPin(this.closureProblem.attributes.geometry, "A"),
                                this.layer.driveRenderer.drawPin(this.closureProblem.attributes.endPoint, "B")
                    }
                }]),
                e
        }(),
        Wn = Vn.a.extend({
            MORE_INFO_DEFAULTS: [],
            getTitle: function() {
                return I18n.t("problems.panel.closure.title")
            },
            getReportedString: function() {
                return I18n.t("problems.panel.closure.reported")
            },
            hasDescription: function() {
                return !0
            },
            getDescriptionTemplate: function() {
                return "Waze/MapEditor/UI/Modules/Problems/templates/closure_description"
            },
            getMoreInfo: function() {
                return Promise.resolve([this.problem])
            },
            createMoreInfoRenderer: function(e, t, n) {
                return new Gn(e, t, n)
            },
            getSolvedStateString: function() {
                return I18n.t("problems.panel.closure.states.solved")
            },
            getNotIdentifiedStateString: function() {
                return I18n.t("problems.panel.closure.states.not_identified")
            }
        }),
        Hn = n(228),
        zn = n(100),
        qn = {},
        Yn = (Ln = {},
            J()(Ln, zn.MAP_PROBLEM_TYPE.DISCONNECTION, Vn.a),
            J()(Ln, zn.MAP_PROBLEM_TYPE.TURN, Bn),
            J()(Ln, zn.MAP_PROBLEM_TYPE.DATA, Un),
            J()(Ln, zn.MAP_PROBLEM_TYPE.ROAD_CLOSURE, Wn),
            Ln);
    qn.createAdapter = function(e) {
        return new(e.type === be.a.UPDATE_REQUEST ? Hn.a : Yn[e.attributes.problemType])(e)
    };
    var $n = qn,
        Kn = n(148),
        Jn = n(60),
        Zn = n(147),
        Qn = OL.Class(OL.Layer.Vector, {
            rendererOptions: {
                zIndexing: !0
            },
            renderers: [Jn.a],
            styleMap: Zn.a,
            initialize: function() {
                OL.Layer.Vector.prototype.initialize.apply(this, arguments),
                    this.driveRenderer = new Kn.a(this)
            }
        }),
        Xn = P.a.Object.extend({
            layer: null,
            info: null,
            viewModel: null,
            initialize: function() {
                this.viewModel = this.options.viewModel,
                    this.map = this.options.map,
                    this.markerLayer = this.options.markerLayer,
                    this.adapter = this.options.adapter,
                    this.layer = new Qn("problemMoreInfo"),
                    this.viewModel.get("loadingMoreInfo") ? this.listenTo(this.viewModel, "change:loadingMoreInfo", this._onMoreInfoLoaded) : this._onMoreInfoLoaded();
                for (var e = this.adapter.getMoreInfoTypes(), t = 0; t < e.length; t++) {
                    var n = e[t];
                    this.listenTo(n, "change:visible", this._drawMoreInfo)
                }
                this.selectMarker()
            },
            centerProblem: function() {
                var e = this.adapter.getGeometry(),
                    t = ue.toLonLat(e);
                return this.map.setCenter(t)
            },
            focusProblem: function() {
                var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                    t = this.adapter.getBounds(),
                    n = t.getCenterLonLat();
                return e ? (e = this.map.getZoomForExtent(t),
                        e = Math.min(e, W.Config.problems.maxDetailsZoom),
                        e = Math.max(e, W.Config.problems.minDetailsZoom)) : e = this.map.getZoom(),
                    this.map.setCenter(n, e)
            },
            onDestroy: function() {
                return null != this.layer.map && this.map.removeLayer(this.layer),
                    this.map.getMapEventsListener().unregister("zoomend", this, this._drawMoreInfo),
                    this._unselectMarker()
            },
            _onMoreInfoLoaded: function() {
                var e = this;
                return this.map.addLayer(this.layer),
                    this.map.getMapEventsListener().register("zoomend", this, this._drawMoreInfo),
                    this.adapter.getMoreInfo().then(function(t) {
                        return e.info = t[0],
                            e._drawMoreInfo()
                    })
            },
            _getDisplayOptions: function() {
                for (var e = {}, t = this.adapter.getMoreInfoTypes(), n = 0; n < t.length; n++) {
                    var i = t[n];
                    e[i.get("name")] = i.get("visible") && i.get("available")
                }
                return e
            },
            _drawMoreInfo: function() {
                return this.layer.removeAllFeatures({
                        silent: !0
                    }),
                    this.renderer = this.adapter.createMoreInfoRenderer(this.info, this.layer, this._getDisplayOptions()),
                    this.renderer.drawMoreInfo()
            },
            selectMarker: function() {
                return this._toggleMarkerSelection(!0)
            },
            _unselectMarker: function() {
                return this._toggleMarkerSelection(!1)
            },
            _toggleMarkerSelection: function(e) {
                var t = this.adapter.problem.getID();
                return l()(this.markerLayer.div).find("[data-id='".concat(t, "']")).toggleClass("selected", e),
                    this.map.toggleClass("problem-selected", e)
            }
        }),
        ei = c.a.Model.extend({
            defaults: {
                loadingMoreInfo: !0,
                loadingConversation: !0,
                moreInfoAvailable: !0,
                streetViewAvailable: !1
            },
            initialize: function() {
                var e = this;
                this.adapter = this.get("adapter"),
                    this.streetViewController = this.get("streetViewController"),
                    this.set({
                        problemState: this.adapter.getState()
                    }),
                    this.adapter.getMoreInfo().then(function() {
                        return e.set({
                                loadingMoreInfo: !1
                            }),
                            e.set({
                                loadingConversation: !1
                            }),
                            e.set({
                                moreInfoAvailable: e.adapter.isMoreInfoAvailable()
                            })
                    }),
                    this._checkStreetViewAvailability()
            },
            _checkStreetViewAvailability: function() {
                var e = this;
                this.streetViewController && this.streetViewController.hasPlacePanaorama(this.adapter.problem).then(function(t) {
                    e.set({
                        streetViewAvailable: t
                    })
                })
            }
        }),
        ti = P.a.Object.extend({
            initialize: function() {
                return this.problem = this.options.problem,
                    this.streetViewController = this.options.streetViewController,
                    this.adapter = $n.createAdapter(this.problem),
                    null != this.options.nextButtonString && this.adapter.setNextButtonString(this.options.nextButtonString),
                    this.viewModel = new ei({
                        adapter: this.adapter,
                        streetViewController: this.streetViewController
                    }),
                    this.mapView = new Xn({
                        map: W.map,
                        markerLayer: this.adapter.getMarkerLayer(),
                        adapter: this.adapter,
                        viewModel: this.viewModel
                    }),
                    this.mapView.centerProblem(),
                    this.listenTo(this.viewModel, "change:problemState", this._onProblemStateChanged),
                    this.listenTo(this.adapter.getRepository(), G.ATTR_CHANGED, this._repositoryChanged),
                    this.listenTo(this.adapter.getRepository(), G.ADDED, this._onProblemsAdded),
                    this.editView = new xn({
                        model: this.viewModel,
                        adapter: this.adapter,
                        showDebug: this.options.showDebug,
                        showNext: this.options.showNext
                    }),
                    this.listenTo(this.editView, "destroy", this.destroy),
                    this.listenTo(this.editView, "focusClicked", this._onFocusClicked),
                    this.listenTo(this.editView, "streetViewClicked", this._onStreetViewClicked),
                    this.listenTo(this.editView, "nextClicked", this.trigger.bind(this, "nextClicked")),
                    W.map.panelRegion.show(this.editView)
            },
            _onProblemStateChanged: function(e, t, n) {
                n.fromRepository || (this.adapter.setState(this.viewModel.get("problemState")),
                    this.adapter.reportStateChanged())
            },
            _repositoryChanged: function() {
                return this.viewModel.set("problemState", this.adapter.getState(), {
                    fromRepository: !0
                })
            },
            _onProblemsAdded: function() {
                var e = this.adapter.problem.getID(),
                    t = this.adapter.getRepository().getObjectById(e);
                return null != t && (this.adapter.problem = t),
                    this.mapView.selectMarker()
            },
            _onFocusClicked: function() {
                this.mapView.focusProblem(),
                    yt.reportAnalytic.focusAction("locate", "mp_locate_clicked", this.adapter.problem.type)
            },
            _onStreetViewClicked: function() {
                this.streetViewController.lookAtPlace(this.adapter.problem),
                    yt.reportAnalytic.focusAction("streetview", "mp_streetview_clicked", this.adapter.problem.type)
            },
            onDestroy: function() {
                return this.editView.destroy(),
                    this.mapView.destroy()
            }
        }),
        ni = function() {
            function e(t) {
                r()(this, e),
                    this.editController = null,
                    this.mediator = t.mediator,
                    this.mapLayers = t.mapLayers,
                    this.streetViewController = t.streetViewController,
                    this._listenToLayerClicks(),
                    W.commands.setHandler("problems:show", this.showProblem, this),
                    W.reqres.setHandler("problems:browse", this.browseProblem, this)
            }
            return o()(e, [{
                    key: "showProblem",
                    value: function(e) {
                        var t = this,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        return this.editController && this.editController.destroy(),
                            this.editController = new ti({
                                problem: e,
                                showDebug: this.mediator.get("advancedTools"),
                                showNext: n.showNext,
                                nextButtonString: n.nextButtonString,
                                streetViewController: this.streetViewController
                            }),
                            this.editController.on("destroy", function() {
                                return t.editController = null,
                                    W.vent.trigger("problems:closed")
                            }),
                            W.vent.trigger("problems:shown", e)
                    }
                }, {
                    key: "browseProblem",
                    value: function(e) {
                        var t = e.problem;
                        this.showProblem(t, e),
                            this._showLayer(t);
                        var n = new Ct;
                        return e.showNext && this.editController.on("nextClicked", function() {
                                return n.next()
                            }),
                            n
                    }
                }, {
                    key: "showProblemStream",
                    value: function(e) {
                        var t = this;
                        if (e.hasNext()) {
                            var n = e.next(),
                                i = e.hasNext();
                            return this.showProblem(n, {
                                    showNext: i
                                }),
                                i ? this.editController.on("nextClicked", function() {
                                    return t.showProblemStream(e)
                                }) : void 0
                        }
                    }
                }, {
                    key: "_showLayer",
                    value: function(e) {
                        return W.map.showLayerByObjectType(e.type)
                    }
                }, {
                    key: "_listenToLayerClicks",
                    value: function() {
                        var e = this;
                        this.mapLayers.forEach(function(t) {
                            return l()(t.div).on("click", ".map-problem", e._onProblemMarkerClicked.bind(e))
                        })
                    }
                }, {
                    key: "_onProblemMarkerClicked",
                    value: function(e) {
                        if (this.mediator.get("editingEnabled")) {
                            var t = l()(e.target).data("model"),
                                n = new Pn(t.type).sortByDistance(t);
                            return this.showProblemStream(n)
                        }
                    }
                }]),
                e
        }(),
        ii = n(226),
        ri = n(216),
        si = P.a.Object.extend({
            initialize: function(e) {
                this.controller = e.controller,
                    this.mediator = e.mediator,
                    this._setDefaultHandler(),
                    W.commands.setHandler("save:restoreDefaultHandler", this._setDefaultHandler, this),
                    W.commands.setHandler("save:setHandler", this._setHandler, this),
                    this.savePopoverRegion = new ri.a({
                        saveButtonSelector: "#toolbar .waze-icon-save"
                    })
            },
            _startSave: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = this.controller.save(t);
                null != this.flowController && this.flowController.destroy(),
                    this.flowController = new ii.a({
                        map: W.map,
                        mediator: this.mediator,
                        popoverRegion: this.savePopoverRegion
                    }),
                    n.then(function(t) {
                        e.flowController.success(t)
                    }).catch(function(t) {
                        if (!(t instanceof p.a))
                            throw t;
                        e.flowController.fail(t.errors)
                    }),
                    this.flowController.on("resave", function() {
                        e._startSave({
                            ignoreWarnings: !0
                        })
                    })
            },
            _setDefaultHandler: function() {
                this._setHandler(this._startSave, this)
            },
            _setHandler: function(e, t) {
                W.commands.setHandler("save:start", e, t)
            }
        }),
        oi = function() {
            function e() {
                r()(this, e)
            }
            return o()(e, [{
                    key: "find",
                    value: function(e, t, n) {
                        return 0 === t.length ? this.DEFAULT_HEADING : null === (i = "segment" === t[0].type ? this._getAngleOfClosestEdge(e, t, n) : this._getContentCentroidAngle(e, t)) ? this.DEFAULT_HEADING : Ie.radToDeg(this._angleToHeading(i));
                        var i
                    }
                }, {
                    key: "_getContentCentroidAngle",
                    value: function(e, t) {
                        var n = t[0].geometry.getCentroid();
                        return Math.atan2(e.lat - n.y, e.lon - n.x)
                    }
                }, {
                    key: "_getAngleOfClosestEdge",
                    value: function(e, t, n) {
                        var i = this._getClosestSegmentInfo(e, t);
                        if (i.distance > n)
                            return null;
                        var r = i.segment,
                            s = Ge.createPoint(i.x0, i.y0),
                            o = Ie.getPointEdge(r.geometry, s),
                            a = Oe.getVertex(r.geometry, o),
                            l = Oe.getVertex(r.geometry, o + 1),
                            u = Math.atan2(a.y - l.y, a.x - l.x);
                        return r.isOneWay() && r.attributes.revDirection && (u += Math.PI),
                            u
                    }
                }, {
                    key: "_getClosestSegmentInfo",
                    value: function(e, t) {
                        var n = ue.fromLonLat(e),
                            i = t.map(function(e) {
                                var t = Oe.getDistanceInfo(e.geometry, n);
                                return t.segment = e,
                                    t
                            });
                        return E.a.minBy(i, function(e) {
                            return e.distance
                        })
                    }
                }, {
                    key: "_angleToHeading",
                    value: function(e) {
                        return 3 * Math.PI / 2 - e
                    }
                }]),
                e
        }();
    Object.assign(oi.prototype, {
        DEFAULT_HEADING: 0
    });
    var ai = oi,
        li = function() {
            function e() {
                r()(this, e),
                    this._streetViewProvider = null
            }
            return o()(e, [{
                    key: "getPanorama",
                    value: function(e) {
                        var t = this,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.DEFAULT_SEARCH_RADIUS_METERS,
                            i = new google.maps.LatLng(e.lat, e.lon);
                        n *= this.SEARCH_RADIUS_PADDING_FACTOR,
                            n = Math.floor(n);
                        var r = google.maps.StreetViewStatus;
                        return new Promise(function(e, s) {
                            t._getStreetViewProvider().getPanoramaByLocation(i, n, function(t, n) {
                                switch (n) {
                                    case r.OK:
                                        return e(t);
                                    case r.ZERO_RESULTS:
                                        return e(null);
                                    case r.UNKNOWN_ERROR:
                                        return s(new Error)
                                }
                            })
                        })
                    }
                }, {
                    key: "_getStreetViewProvider",
                    value: function() {
                        return this._streetViewProvider || (this._streetViewProvider = new google.maps.StreetViewService)
                    }
                }]),
                e
        }();
    Object.assign(li.prototype, {
        DEFAULT_SEARCH_RADIUS_METERS: 50,
        SEARCH_RADIUS_PADDING_FACTOR: 2
    });
    var ui = li,
        ci = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            panorama: null,
                            cameraHeading: 0,
                            cameraLongLat: null,
                            features: []
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = this;
                        this.on("change:panorama", function() {
                            var t = e._getPanoramaLonLat();
                            e.set({
                                cameraLongLat: t
                            })
                        })
                    }
                }, {
                    key: "getPanoramaProjectedLonlat",
                    value: function() {
                        return Ie.project(this._getPanoramaLonLat())
                    }
                }, {
                    key: "_getPanoramaLonLat",
                    value: function() {
                        var e = this.get("panorama");
                        return e ? Ge.createLonLat(e.location.latLng.lng(), e.location.latLng.lat()) : null
                    }
                }]),
                t
        }(c.a.Model),
        di = function(e) {
            function t() {
                return r()(this, t),
                    f()(this, v()(t).apply(this, arguments))
            }
            return y()(t, e),
                o()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .close-button": "_closePanoramaView"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            panoramaEl: ".panorama"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.el = "#street-view-container",
                            this.panoramaView = null,
                            this._streetViewController = e.streetViewController,
                            this.scene = e.scene,
                            this.map = e.map,
                            W.accelerators.events.register("closeStreetView", this, this._closePanoramaView),
                            this._bindEvents()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        var e = this;
                        this.listenTo(this.scene, "change:panorama", function(t, n, i) {
                                i && i.ignore || e._updatePositionAndHeading()
                            }),
                            this.listenTo(this.scene, "change:cameraHeading", function(t, n, i) {
                                i && i.ignore || e._updatePositionAndHeading()
                            })
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        e ? this._onSVActivated() : this._onSVDeactivated()
                    }
                }, {
                    key: "_onSVActivated",
                    value: function() {
                        this._getPanoramaView({
                            forceNew: !1
                        }).setVisible(!0)
                    }
                }, {
                    key: "_onSVDeactivated",
                    value: function() {
                        this._getPanoramaView({
                            forceNew: !1
                        }).setVisible(!1)
                    }
                }, {
                    key: "_updatePositionAndHeading",
                    value: function() {
                        if (this._streetViewController.isActive()) {
                            var e = this.scene.get("panorama"),
                                t = this.scene.get("cameraHeading");
                            e && null != t && this._setLocationAndHeading(e.location, t)
                        }
                    }
                }, {
                    key: "_setLocationAndHeading",
                    value: function(e, t) {
                        this._getPanoramaView({
                                forceNew: !0
                            }).setPano(e.pano),
                            this._getPanoramaView({
                                forceNew: !1
                            }).setPov({
                                heading: t,
                                pitch: 0
                            }),
                            this._getPanoramaView({
                                forceNew: !1
                            }).setVisible(!0)
                    }
                }, {
                    key: "_getPanoramaView",
                    value: function() {
                        var e = this,
                            t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).forceNew,
                            n = void 0 !== t && t;
                        return null == this.panoramaView || n ? (this.panoramaView = new google.maps.StreetViewPanorama(this.ui.panoramaEl.get(0), {
                                panControl: !0,
                                panControlOptions: {
                                    position: google.maps.ControlPosition.TOP_RIGHT
                                },
                                zoomControl: !0,
                                zoomControlOptions: {
                                    position: google.maps.ControlPosition.TOP_RIGHT
                                },
                                enableCloseButton: !1,
                                addressControl: !1,
                                imageDateControl: !0,
                                visible: !0
                            }),
                            this._streetViewController.on("resizeStreetView", function() {
                                google.maps.event.trigger(e.panoramaView, "resize")
                            }),
                            google.maps.event.addListener(this.panoramaView, "position_changed", function() {
                                var t = e.panoramaView.getPosition();
                                if (t) {
                                    var n = Ge.createLonLat(t.lng(), t.lat());
                                    e.scene.set({
                                        cameraLongLat: n
                                    }, {
                                        ignore: !0
                                    });
                                    var i = Ie.project(n.clone());
                                    if (!e.map.getExtent().containsLonLat(i))
                                        return e.map.setCenter(i)
                                }
                            }),
                            google.maps.event.addListener(this.panoramaView, "pov_changed", function() {
                                var t = e.panoramaView.getPov().heading;
                                e.scene.set({
                                    cameraHeading: t
                                }, {
                                    ignore: !0
                                })
                            }),
                            google.maps.event.addListener(this.panoramaView, "visible_changed", function() {
                                if (!e.panoramaView.getVisible())
                                    return e._streetViewController.deactivateStreetView()
                            }),
                            this.panoramaView) : this.panoramaView
                    }
                }, {
                    key: "_closePanoramaView",
                    value: function() {
                        this.panoramaView.setVisible(!1),
                            this._streetViewController.trigger("closePanoramaView")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/StreetView/templates/street-view"
                    }
                }]),
                t
        }(P.a.View),
        hi = function(e) {
            function t(e) {
                var n;
                return r()(this, t),
                    (n = f()(this, v()(t).call(this, e))).panoramaProvider = new ui,
                    n.map = e.map,
                    n.scene = new ci,
                    n.headingFinder = new ai,
                    n.model = new c.a.Model({
                        isActive: !1
                    }),
                    n._streetViewWindowView = new di({
                        el: "#street-view-container",
                        streetViewController: D()(n),
                        scene: n.scene,
                        map: n.map
                    }),
                    e.selectionManager.events.register("selectionchanged", D()(n), n._onSelectionChanged),
                    n
            }
            return y()(t, e),
                o()(t, [{
                    key: "getScene",
                    value: function() {
                        return this.scene
                    }
                }, {
                    key: "isActive",
                    value: function() {
                        return this.model.get("isActive")
                    }
                }, {
                    key: "activateStreetView",
                    value: function() {
                        this._toggleStreetView(!0)
                    }
                }, {
                    key: "deactivateStreetView",
                    value: function() {
                        this._toggleStreetView(!1)
                    }
                }, {
                    key: "_toggleStreetView",
                    value: function(e) {
                        this.isActive() !== e && (this.model.set("isActive", e),
                            this.triggerMethod("stateChanged", e),
                            this._streetViewWindowView.setState(e),
                            this.map.toggleSVMode(e),
                            e ? yt.reportAnalytic.generalAction("streeview_started") : yt.reportAnalytic.generalAction("streeview_ended"))
                    }
                }, {
                    key: "lookAtPlace",
                    value: function(e) {
                        var t = this,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50;
                        this.getPlacePanaorama(e, n).then(function(i) {
                            i && (t.activateStreetView(),
                                t.scene.set({
                                    panorama: i,
                                    features: [e]
                                }),
                                t.rotateHeadingTo(e, n))
                        })
                    }
                }, {
                    key: "rotateHeadingTo",
                    value: function(e, t) {
                        var n = this.scene.getPanoramaProjectedLonlat(),
                            i = this.headingFinder.find(n, [e], t);
                        this.scene.set({
                            cameraHeading: i
                        })
                    }
                }, {
                    key: "lookAtCurrentItem",
                    value: function(e, t) {
                        if (e) {
                            this.activateStreetView(),
                                this.scene.set({
                                    panorama: e
                                });
                            var n = this.scene.get("features");
                            n.length > 0 && this.rotateHeadingTo(n[0], t)
                        }
                    }
                }, {
                    key: "_getItemLonLat",
                    value: function(e) {
                        return ue.toLonLat(Ie.getUnprojectedGeometry(e.geometry.getCentroid()))
                    }
                }, {
                    key: "getPlacePanaorama",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50,
                            n = this._getItemLonLat(e);
                        return this.getPanorama(n, t)
                    }
                }, {
                    key: "hasPlacePanaorama",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50,
                            n = this._getItemLonLat(e);
                        return this.hasPanorama(n, t)
                    }
                }, {
                    key: "hasPanorama",
                    value: function(e, t) {
                        return this.getPanorama(e, t).then(function(e) {
                            return Boolean(e)
                        }).catch(function() {
                            return !1
                        })
                    }
                }, {
                    key: "getPanorama",
                    value: function(e, t) {
                        return this.panoramaProvider.getPanorama(e, t)
                    }
                }, {
                    key: "_onSelectionChanged",
                    value: function(e) {
                        var t = E.a.map(e.selected, "model");
                        return this.scene.set({
                            features: t
                        })
                    }
                }, {
                    key: "getCurrentCameraLonLat",
                    value: function() {
                        var e = this.scene.get("cameraLongLat");
                        return e ? e.clone() : null
                    }
                }]),
                t
        }(P.a.Object),
        pi = function() {
            function e(t) {
                r()(this, e),
                    this.videos = ["intro", "segments", "attributes", "turns", "house_numbers", "permalinks", "places_points", "places_areas"],
                    this.player = null,
                    this.currentVideo = null;
                var n = this;
                this.$element = t,
                    this.videoDetails = I18n.t("tutorial.videos"),
                    this.$element.delegate(".video-menu .video-link", "click", function() {
                        n.onVideoSectionClicked(this.dataset.videoKey)
                    }),
                    this.$element.delegate(".dialog-close-button", "click", function() {
                        n.$element.modal("hide"),
                            n.onDialogClose()
                    }),
                    this.$element.on("show.bs.modal", function() {
                        n.initPlayer()
                    })
            }
            return o()(e, [{
                    key: "initPlayer",
                    value: function() {
                        var e = this,
                            t = this.videos[0],
                            n = this.videoDetails[t].video_id;
                        this.getYoutubePlayer().then(function(i) {
                            e.$element.find(".video-menu").show(),
                                e.setSelectedVideoLink(t),
                                e.$element.data("bs.modal").isShown ? i.loadVideoById(n) : i.cueVideoById(n)
                        })
                    }
                }, {
                    key: "onDialogClose",
                    value: function() {
                        this.player && this.player.stopVideo()
                    }
                }, {
                    key: "render",
                    value: function() {
                        return this.$element.html(Object(vn.getHTML)("templates/tutorial-lightbox", {
                            videos: this.videos
                        }))
                    }
                }, {
                    key: "onVideoSectionClicked",
                    value: function(e) {
                        this.setSelectedVideoLink(e),
                            this.player.loadVideoById(this.videoDetails[e].video_id)
                    }
                }, {
                    key: "setSelectedVideoLink",
                    value: function(e) {
                        this.currentVideo = e,
                            this.$element.find(".video-link").removeClass("active"),
                            this.$element.find(".video-link[data-video-key=".concat(e, "]")).addClass("active")
                    }
                }, {
                    key: "onPlayerStateChanged",
                    value: function(e) {
                        e.data === this.YoutubePlayerStates.End && this.playNextVideo()
                    }
                }, {
                    key: "playNextVideo",
                    value: function() {
                        var e = this.videos.indexOf(this.currentVideo) + 1;
                        e >= this.videos.length && (e = 0);
                        var t = this.videos[e],
                            n = this.videoDetails[t].video_id;
                        this.setSelectedVideoLink(t),
                            0 === e ? this.player.cueVideoById(n) : this.player.loadVideoById(n)
                    }
                }, {
                    key: "_loadScript",
                    value: function(e) {
                        var t = document.createElement("script");
                        document.body.appendChild(t),
                            t.async = !0,
                            t.src = e
                    }
                }, {
                    key: "getYoutubePlayer",
                    value: function() {
                        var e = this,
                            t = this;
                        return null !== this.player ? Promise.resolve(this.player) : (this.render(),
                            new Promise(function(n, i) {
                                e._loadScript("https://www.youtube.com/iframe_api"),
                                    window.onYouTubeIframeAPIReady = function() {
                                        delete window.onYouTubeIframeAPIReady,
                                            new window.YT.Player("tutorial-player", {
                                                height: "481",
                                                width: "800",
                                                playerVars: {
                                                    wmode: "transparent",
                                                    modestbranding: 1,
                                                    rel: 0,
                                                    showinfo: 0,
                                                    showsearch: 0
                                                },
                                                events: {
                                                    onReady: function(e) {
                                                        t.player = e.target,
                                                            n(t.player)
                                                    },
                                                    onStateChange: t.onPlayerStateChanged.bind(t)
                                                }
                                            })
                                    }
                            }))
                    }
                }]),
                e
        }();
    Object.assign(pi.prototype, {
        YoutubePlayerStates: {
            End: 0
        },
        CLASS_NAME: "Waze.View.Tutorial"
    });
    var gi = pi,
        fi = function() {
            function e() {
                r()(this, e)
            }
            return o()(e, [{
                    key: "heft",
                    value: function(e) {
                        var t = e.app,
                            n = e.descartesClient,
                            i = e.loginManager;
                        W.loginManager = i,
                            W.vent = new c.a.Wreqr.EventAggregator,
                            W.commands = new c.a.Wreqr.Commands,
                            W.reqres = new c.a.Wreqr.RequestResponse,
                            W.model = new h.a,
                            W.model.loginManager = i,
                            W.accelerators = new et,
                            this._initKeyboard();
                        var r = new k(W.model);
                        W.editingMediator = r;
                        var s = new Lt.a({
                            app: t
                        });
                        W.map = s,
                            W.map.registerAccelerators(W.accelerators),
                            W.togglerTree = Rn.create();
                        var o = s.getLayers().filter(function(e) {
                                return e.selectable
                            }),
                            a = new U(W.map, o, {
                                boxSelectionLayers: [s.segmentLayer]
                            });
                        W.selectionManager = new C.a(W.model, o, a),
                            mn.init({
                                map: W.map,
                                selectionManager: W.selectionManager
                            }),
                            W.geometryEditing = new Ke(W.selectionManager, W.editingMediator, W.map, W.model);
                        var u = new hi({
                            map: W.map,
                            selectionManager: W.selectionManager
                        });
                        return W.streetViewController = u,
                            new ni({
                                mediator: W.editingMediator,
                                mapLayers: [W.map.problemLayer, W.map.updateRequestLayer],
                                streetViewController: W.streetViewController
                            }),
                            this._initPlaceUpdateControl({
                                map: s,
                                editingMediator: r,
                                streetViewController: u
                            }),
                            new gi(l()("#tutorial-dialog")),
                            new z(W.model).activate(),
                            this._heftController(n),
                            Object(Sn.isFeatureFlagEnabled)(Sn.FEATURE_FLAGS.CHAT_AND_LIVE_USERS) && this._heftMarx(),
                            W.layerSwitcherController = new Tn({
                                map: s,
                                actionManager: W.model.actionManager,
                                controller: W.controller,
                                togglerTree: W.togglerTree
                            }),
                            Promise.resolve()
                    }
                }, {
                    key: "_initKeyboard",
                    value: function() {
                        return W.accelerators.registerDefaultShortcuts(),
                            W.accelerators.restore(),
                            new bn,
                            W.accelerators.activate()
                    }
                }, {
                    key: "_heftController",
                    value: function(e) {
                        W.snapshotManager = new $(W.model.actionManager),
                            W.map.setSnapshotManager(W.snapshotManager),
                            W.controller = new p.b({
                                app: W.app,
                                descartesClient: e,
                                editingMediator: W.editingMediator,
                                globalVent: W.vent,
                                map: W.map,
                                model: W.model,
                                selectionManager: W.selectionManager,
                                snapshotManager: W.snapshotManager
                            }),
                            new si({
                                controller: W.controller,
                                mediator: W.editingMediator
                            }),
                            W.saveController = new Ft.b({
                                actionManager: W.model.actionManager,
                                controller: W.controller,
                                editingMediator: W.editingMediator,
                                regionCode: W.app.getAppRegionCode()
                            }),
                            W.changesLogController = new Xt({
                                actionManager: W.model.actionManager,
                                map: W.map,
                                selectionManager: W.selectionManager,
                                saveController: W.saveController
                            }),
                            W.editingMediator.activate(),
                            W.map.initMapState(W.selectionManager, W.app, W.togglerTree),
                            W.map.setEditingMediator(W.editingMediator)
                    }
                }, {
                    key: "_heftMarx",
                    value: function() {
                        var e = new O({
                                app: W.app
                            }),
                            t = new un(W.model, e, W.map),
                            n = new ln(W.model, e, t);
                        new dn({
                            model: n,
                            map: W.map
                        });
                        var i = new rn(W.model, e);
                        new gn({
                                model: i,
                                marx: e,
                                map: W.map
                            }),
                            W.model.chat = i,
                            W.model.liveUsers = n
                    }
                }, {
                    key: "_initPlaceUpdateControl",
                    value: function(e) {
                        var t = e.map,
                            n = void 0 === t ? null : t,
                            i = e.editingMediator,
                            r = void 0 === i ? null : i,
                            s = e.streetViewController,
                            o = void 0 === s ? null : s;
                        n.getPlaceUpdateLayers().forEach(function(e) {
                            new Rt({
                                map: n,
                                mediator: r,
                                mapLayer: e,
                                streetViewController: o
                            })
                        })
                    }
                }]),
                e
        }();
    t.default = fi
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(10),
        r = n.n(i),
        s = n(4),
        o = n.n(s),
        a = n(0),
        l = n.n(a),
        u = n(9),
        c = n(125),
        d = n(2),
        h = n.n(d),
        p = n(1),
        g = n.n(p),
        f = n(5),
        m = n.n(f),
        v = n(3),
        _ = n.n(v),
        y = n(6),
        b = n.n(y),
        E = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "el",
                    value: function() {
                        return "#map-lightbox"
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._map = e.map
                    }
                }, {
                    key: "onShow",
                    value: function() {
                        this._map.$el.addClass("lightboxShown")
                    }
                }, {
                    key: "onEmpty",
                    value: function() {
                        this._map.$el.removeClass("lightboxShown")
                    }
                }]),
                t
        }(o.a.Region),
        w = n(7),
        S = n.n(w),
        k = o.a.View.extend({
            template: "templates/snapshot-toggler",
            ui: {
                toggler: ".toggler"
            },
            events: {
                "click @ui.toggler": "_onSnapshotClicked"
            },
            initialize: function() {
                return this.snapshotManager = this.options.snapshotManager,
                    this.listenTo(this.snapshotManager, "change:state change:togglable", this.render)
            },
            onRender: function() {
                if (!this.snapshotManager.canToggleOn())
                    return this.ui.toggler.tooltip({
                        title: "Save changes first",
                        placement: "bottom"
                    })
            },
            serializeData: function() {
                return {
                    canToggleOn: this.snapshotManager.canToggleOn(),
                    isOn: this.snapshotManager.isSnapshotOn()
                }
            },
            onBeforeDestroy: function() {
                return this.ui.toggler.tooltip("destroy")
            },
            _onSnapshotClicked: function() {
                return this.snapshotManager.isSnapshotOn() ? this.snapshotManager.toggle(!1) : this.snapshotManager.canToggleOn() ? this.snapshotManager.toggle(!0) : void 0
            }
        }),
        T = n(49),
        I = function(e) {
            function t(e) {
                var n;
                return h()(this, t),
                    (n = m()(this, _()(t).call(this, e)))._editingMediator = e.editingMediator,
                    n._viewModel = new S.a.Model({
                        editingHouseNumbers: n._editingMediator.get("editingHouseNumbers")
                    }),
                    n.listenTo(n._editingMediator, "change:editingHouseNumbers", n._onEditingHouseNumbersChanged),
                    n
            }
            return b()(t, e),
                g()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            snapShotToggleRegion: "#snapshot-toggler"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .env-link": "onRegionChanged"
                        }
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Sidebar/templates/advanced-tools"
                    }
                }]),
                g()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".waze-staff-tools": {
                                classes: {
                                    "editing-house-numbers": {
                                        observe: "editingHouseNumbers"
                                    }
                                }
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("snapShotToggleRegion", new k({
                                snapshotManager: W.snapshotManager
                            })),
                            this.stickit(this._viewModel, this.bindings())
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = W.app.getAppRegionCode();
                        return {
                            currentRegionName: I18n.t("envs")[e],
                            getURLForLocale: T.getURLForLocale
                        }
                    }
                }, {
                    key: "_onEditingHouseNumbersChanged",
                    value: function() {
                        this._viewModel.set("editingHouseNumbers", this._editingMediator.get("editingHouseNumbers"))
                    }
                }, {
                    key: "onRegionChanged",
                    value: function(e) {
                        e.preventDefault();
                        var t = r()(e.target).data("env");
                        W.app.changeAppRegion(t)
                    }
                }]),
                t
        }(o.a.View),
        A = n(18),
        M = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .playmode": "_onPlaymodeClicked",
                            "click .login": "_onLogin",
                            "change .language-select select": "_onChangeLanguage"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            app: null
                        };
                        this._app = e.app
                    }
                }, {
                    key: "_onPlaymodeClicked",
                    value: function(e) {
                        e.preventDefault(),
                            this._app.activateSandboxMode()
                    }
                }, {
                    key: "_onChangeLanguage",
                    value: function(e) {
                        var t = r()(e.target).val();
                        this._app.changeAppLocale(t)
                    }
                }, {
                    key: "_onLogin",
                    value: function() {
                        this.triggerMethod("login:attempt"),
                            A.reportAnalytic.loginAction("login_tap")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Login/templates/login_view"
                    }
                }]),
                t
        }(o.a.View),
        O = n(30),
        C = n(196),
        R = "EMAIL_MISSING",
        D = "EMAIL_MANAGE",
        L = "VERIFICATION_START",
        P = "VERIFICATION_SENT",
        N = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            ".step-email-missing": {
                                observe: "currentStep",
                                onGet: function(e) {
                                    return e === R
                                },
                                visible: !0,
                                visibleFn: u.b
                            },
                            ".step-manage-email": {
                                observe: "currentStep",
                                onGet: function(e) {
                                    return e === D
                                },
                                visible: !0,
                                visibleFn: u.b
                            },
                            ".login-verification-footer": {
                                observe: "currentStep",
                                onGet: function(e) {
                                    return e === D
                                },
                                visible: l.a.negate(l.a.identity)
                            },
                            ".step-verification": {
                                observe: "currentStep",
                                onGet: function(e) {
                                    return e === L
                                },
                                visible: !0,
                                visibleFn: u.b
                            },
                            ".step-verification-sent": {
                                observe: "currentStep",
                                onGet: function(e) {
                                    return e === P
                                },
                                visible: !0,
                                visibleFn: u.b
                            },
                            ".step-verification .verification-alert": {
                                observe: "emailFailed",
                                visible: !0,
                                visibleFn: u.b
                            },
                            ".emailSending": {
                                observe: "emailSending",
                                visible: !0,
                                visibleFn: u.b
                            },
                            ".do-send-verification-email": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "emailSending"
                                }]
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-send-verification-email": "_doSendVerificationEmail",
                            "click .do-manage-email": "showManageEmail",
                            "click .do-back": "goBack"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            loginManager: null
                        };
                        this._useCase = new C.EmailVerificationUseCase(e.loginManager),
                            this.model = new S.a.Model({
                                currentStep: null,
                                emailFailed: !1,
                                emailSending: !1
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this._useCase.isUserEmailAddressMissing() ? this.showMissingEmail() : this.showStartVerification()
                    }
                }, {
                    key: "showMissingEmail",
                    value: function() {
                        this.model.set({
                            currentStep: R
                        })
                    }
                }, {
                    key: "showManageEmail",
                    value: function() {
                        this.model.set({
                            currentStep: D
                        })
                    }
                }, {
                    key: "showStartVerification",
                    value: function() {
                        this.model.set({
                            currentStep: L
                        })
                    }
                }, {
                    key: "showDoneVerification",
                    value: function() {
                        this.model.set({
                            currentStep: P
                        })
                    }
                }, {
                    key: "goBackToLogin",
                    value: function() {
                        this.triggerMethod("login:verification:back")
                    }
                }, {
                    key: "goBack",
                    value: function() {
                        switch (this.model.attributes.currentStep) {
                            case R:
                            case L:
                                this.goBackToLogin();
                                break;
                            case P:
                                this.showStartVerification();
                                break;
                            case D:
                                this._useCase.isUserEmailAddressMissing() ? this.showMissingEmail() : this.showStartVerification()
                        }
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            recipient: this._useCase.getEmailAddressToVerify()
                        }
                    }
                }, {
                    key: "_doSendVerificationEmail",
                    value: function() {
                        var e = this;
                        return this.model.set({
                                emailFailed: !1,
                                emailSending: !0
                            }),
                            Object(O.httpPost)(W.Config.login.paths.email_verification, {
                                locale: I18n.currentLocale(),
                                channel: "waze_map_editor"
                            }).then(function() {
                                e.showDoneVerification()
                            }).catch(function() {
                                e.model.set({
                                    emailFailed: !0
                                })
                            }).finally(function() {
                                e.model.set({
                                    emailSending: !1
                                })
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Login/templates/email_verification"
                    }
                }]),
                t
        }(o.a.View),
        x = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .login": "_onLogin"
                        }
                    }
                }, {
                    key: "_onLogin",
                    value: function() {
                        this.triggerMethod("login:attempt"),
                            A.reportAnalytic.loginAction("expired_login_tap")
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Login/templates/session_expired"
                    }
                }]),
                t
        }(o.a.View),
        V = n(197),
        j = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: ".modal-content"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            app: null,
                            loginManager: null
                        };
                        this._app = e.app,
                            this._loginManager = e.loginManager
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._shouldShowEmailVerification() ? this._showEmailVerificationView() : this._loginManager.isExpired() ? this._showSessionExpiredView() : this._showLoginView()
                    }
                }, {
                    key: "onChildviewLoginAttempt",
                    value: function() {
                        var e = this;
                        this._app.loginManager.login().then(function(t) {
                            t.result === V.a.LOGGED_IN && e._shouldShowEmailVerification() && e._showEmailVerificationView()
                        })
                    }
                }, {
                    key: "onChildviewLoginVerificationBack",
                    value: function() {
                        this._showLoginView()
                    }
                }, {
                    key: "_showLoginView",
                    value: function() {
                        this.showChildView("contentRegion", new M({
                            app: this._app
                        }))
                    }
                }, {
                    key: "_showEmailVerificationView",
                    value: function() {
                        this.showChildView("contentRegion", new N({
                            loginManager: this._loginManager
                        }))
                    }
                }, {
                    key: "_showSessionExpiredView",
                    value: function() {
                        this.showChildView("contentRegion", new x)
                    }
                }, {
                    key: "_shouldShowEmailVerification",
                    value: function() {
                        if (this._loginManager.isAuthenticated() && new C.EmailVerificationUseCase(this._loginManager).needsEmailVerification())
                            return !0;
                        return !1
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/Login/templates/login_main"
                    }
                }]),
                t
        }(o.a.View),
        U = n(408),
        F = n.n(U),
        B = n(21),
        G = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            click: "_onClick"
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            recenter: ".js-recenter",
                            loading: ".js-loading"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.geoLocationProvider = e.geoLocationProvider,
                            this.map = e.map
                    }
                }, {
                    key: "toggleGeoLocated",
                    value: function(e) {
                        return this.ui.recenter.toggleClass("geo-located", e)
                    }
                }, {
                    key: "toggleLoading",
                    value: function(e) {
                        this.ui.loading.toggle(e),
                            this.ui.recenter.toggle(!e)
                    }
                }, {
                    key: "_onMapMoved",
                    value: function() {
                        return this.toggleGeoLocated(!1),
                            this.map.getMapEventsListener().unregister("moveend", this, this._onMapMoved)
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        var e = this;
                        return this.toggleLoading(!0),
                            this.geoLocationProvider.getLonLat(1e4).then(function(t) {
                                return t = t.clone(),
                                    B.project(t),
                                    e.map.setCenter(t),
                                    e.map.getMapEventsListener().register("moveend", e, e._onMapMoved),
                                    e.toggleGeoLocated(!0)
                            }).catch(function(e) {
                                console.error("Error getting location", e)
                            }).finally(function() {
                                return e.toggleLoading(!1)
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        return this.toggleLoading(!1),
                            this.$el.tooltip({
                                title: I18n.t("geolocation.tooltip"),
                                placement: "left",
                                container: "body",
                                delay: {
                                    show: 400
                                }
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/GeoLocation/templates/pan_button"
                    }
                }]),
                t
        }(o.a.View),
        H = n(17),
        z = function() {
            function e() {
                h()(this, e),
                    this._cachedLonLat = null
            }
            return g()(e, [{
                    key: "getLonLat",
                    value: function(e) {
                        var t = this;
                        return new Promise(function(n, i) {
                            null !== t._cachedLonLat ? n(t._cachedLonLat) : (t._getLonLatFromBrowser(e, n, i),
                                window.setTimeout(function() {
                                    return t._onTimeoutExpired(n, i)
                                }, e))
                        })
                    }
                }, {
                    key: "_getLonLatFromBrowser",
                    value: function(e, t, n) {
                        var i = this;
                        return window.navigator.geolocation.getCurrentPosition(function(e) {
                            return i._onGetPostionSuccess(e, t)
                        }, function(e) {
                            return i._onGetPositionError(e, n)
                        }, {
                            timeout: e
                        })
                    }
                }, {
                    key: "_onGetPostionSuccess",
                    value: function(e, t) {
                        var n = e.coords;
                        return this._cachedLonLat = H.createLonLat(n.longitude, n.latitude),
                            t(this._cachedLonLat)
                    }
                }, {
                    key: "_onGetPositionError",
                    value: function(e, t) {
                        return t({
                            code: e.code
                        })
                    }
                }, {
                    key: "_onTimeoutExpired",
                    value: function(t, n) {
                        n({
                            code: e.ERROR_CODES.USER_TIMEOUT
                        })
                    }
                }]),
                e
        }();
    z.ERROR_CODES = {
        PERMISSION_DENIED: 1,
        POSITION_UNAVAILABLE: 2,
        TIMEOUT: 3,
        USER_TIMEOUT: 4
    };
    var q = new z,
        Y = o.a.View.extend({
            get template() {
                return "Waze/MapEditor/UI/Map/MapControls/templates/zoombar"
            },
            events: {
                "click .zoom-plus-button": "_onPlusClicked",
                "click .zoom-minus-button": "_onMinusClicked"
            },
            initialize: function(e) {
                this._map = e.map
            },
            _onPlusClicked: function() {
                this._map.zoomIn()
            },
            _onMinusClicked: function() {
                this._map.zoomOut()
            }
        }),
        $ = n(37),
        K = n(89),
        J = n(116),
        Z = OL.Class(OL.Marker, {
            DRAG_POINT_RADIUS: 7,
            CROSSHAIR_RADIUS: 22,
            initialize: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                OL.Marker.prototype.initialize.call(this, e, new $.default("pin", !0));
                var i = (this.CROSSHAIR_RADIUS + this.DRAG_POINT_RADIUS) / Math.sqrt(2);
                this.crossHairOffset = new OL.Pixel(-i, -i),
                    this.svProjection = new OpenLayers.Projection("EPSG:4326"),
                    this.map = n,
                    this.render();
                var r = this.icon.$div;
                this.dragging = new K.a(this.map),
                    this.moved = !1,
                    this.dragging.down = function(e) {
                        return t.moved = !1,
                            r.addClass("dragging"),
                            t.events.triggerEvent("dragStart", {
                                xy: e.xy,
                                marker: t
                            })
                    },
                    this.dragging.force = function(e) {
                        return t.moved = !1,
                            r.addClass("dragging"),
                            t.events.triggerEvent("dragStart", {
                                marker: t
                            })
                    },
                    this.dragging.move = function(e) {
                        t.moved = !0,
                            t.lonlat = t.map.getLonLatFromViewPortPx(e.xy.offset(t.crossHairOffset));
                        var n = t.lonlat.clone().transform(t.map.getProjectionObject(), t.svProjection);
                        return t.layer.drawMarker(t),
                            t.events.triggerEvent("drag", {
                                xy: e.xy,
                                marker: t,
                                svLonlat: n
                            })
                    },
                    this.dragging.up = function(e) {
                        t.moved || (r.removeClass("dragging"),
                            t.events.triggerEvent("dragCancel", {}))
                    },
                    this.dragging.done = function(e) {
                        if (t.moved)
                            return t.icon.$div.removeClass("dragging"),
                                t.events.triggerEvent("dragDone", {
                                    xy: e.xy,
                                    marker: t
                                })
                    },
                    this.dragging.activate(this.dragHandle)
            },
            render: function() {
                this.crossHair = r()("<div />").addClass("crosshair").appendTo(this.icon.$div),
                    this.dragHandle = r()("<div />").addClass("drag-handle").appendTo(this.icon.$div),
                    this.arrow = r()("<div/>").append(r()("<i/>").addClass("fa fa-arrow-up arrow")).appendTo(this.crossHair)
            },
            setPanoAvailable: function(e) {
                return this.icon.$div.toggleClass("pano-available", e)
            },
            setCrosshairAngle: function(e) {
                return this.arrow.css({
                    transform: "rotate(".concat(e, "deg)")
                })
            },
            setCrosshairLonlat: function(e) {
                return this.lonlat = e.clone().transform(this.svProjection, this.map.getProjectionObject()),
                    this.layer.drawMarker(this)
            },
            toggleVisibility: function(e) {
                return this.icon.display(e)
            },
            getGeodesicCrosshairRadius: function() {
                return J.pixelsToMeters(this.map, this.CROSSHAIR_RADIUS)
            },
            getCrosshairRadius: function() {
                return this.CROSSHAIR_RADIUS * this.map.getResolution()
            }
        }),
        Q = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mousedown .street-view-control": "_onStreetViewControlMouseDown"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".street-view-control": {
                                observe: "visible",
                                visible: !0,
                                visibleFn: u.b
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._streetViewController = e.streetViewController,
                            this.scene = this._streetViewController.getScene(),
                            this.map = e.map,
                            this.model = new S.a.Model({
                                visible: !0
                            }),
                            this._bindEvents(),
                            this._setupMap()
                    }
                }, {
                    key: "_bindEvents",
                    value: function() {
                        this.listenTo(this.scene, "change:cameraLongLat", this._onSceneCameraPositionChanged.bind(this)),
                            this.listenTo(this.scene, "change:cameraHeading", this._onCameraHeadingChanged.bind(this)),
                            this.listenTo(this._streetViewController, "stateChanged", this._onStateChanged.bind(this))
                    }
                }, {
                    key: "_unbindEvents",
                    value: function() {
                        this.map.getMapEventsListener().unregister("moveend", this, this._onMoveEnd)
                    }
                }, {
                    key: "_onStateChanged",
                    value: function(e) {
                        e ? this._onSVActivated() : this._onSVDeactivated()
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        e ? this._onSVActivated() : this._onSVDeactivated()
                    }
                }, {
                    key: "_onSVActivated",
                    value: function() {
                        this._toggleButtonAndPin(!1)
                    }
                }, {
                    key: "_onSVDeactivated",
                    value: function() {
                        this._toggleButtonAndPin(!0)
                    }
                }, {
                    key: "_onSceneCameraPositionChanged",
                    value: function(e, t) {
                        this.pin.setCrosshairLonlat(t),
                            this.pin.setPanoAvailable(!0)
                    }
                }, {
                    key: "_onCameraHeadingChanged",
                    value: function(e, t) {
                        this.pin.setCrosshairAngle(t)
                    }
                }, {
                    key: "_setupMap",
                    value: function() {
                        this.markerLayer = new OL.Layer.Markers("streetViewPin"),
                            this.map.addLayer(this.markerLayer),
                            this.pin = new Z(this.map.getCenter() || H.createLonLat(0, 0), this.map.getOLMap()),
                            this.pin.toggleVisibility(!1),
                            this.markerLayer.addMarker(this.pin),
                            this.pin.layer = this.markerLayer,
                            this.markerLayer.div.classList.add("street-view-layer");
                        var e = l.a.throttle(this._onPinDrag, 200);
                        this.pin.events.on({
                                dragStart: function() {
                                    this._toggleButtonAndPin(!1)
                                },
                                drag: function(t) {
                                    return e.call(this, t)
                                },
                                dragCancel: function(e) {
                                    this._streetViewController.isActive() || this._toggleButtonAndPin(!0)
                                },
                                dragDone: this._onPinDragDone,
                                scope: this
                            }),
                            this.map.getMapEventsListener().register("moveend", this, this._onMoveEnd)
                    }
                }, {
                    key: "_onMoveEnd",
                    value: function() {
                        var e = this.map.getExtent().containsLonLat(this.pin.lonlat);
                        this._streetViewController.isActive() && (e ? this._toggleButtonAndPin(!1) : this._toggleButtonAndPin(!0))
                    }
                }, {
                    key: "_onPinDrag",
                    value: function(e) {
                        var t = this;
                        return this._streetViewController.getPanorama(e.svLonlat.clone(), this._getAvailabilityRadius()).then(function(e) {
                            return t.pin.setPanoAvailable(Boolean(e))
                        })
                    }
                }, {
                    key: "_onPinDragDone",
                    value: function(e) {
                        var t = this,
                            n = B.getUnprojectedGeometry(this.pin.lonlat);
                        this._streetViewController.getPanorama(n, this._getAvailabilityRadius()).then(function(e) {
                            e ? t._streetViewController.lookAtCurrentItem(e) : t._handleNoPanorama()
                        }).catch(function() {
                            t._handleNoPanorama()
                        })
                    }
                }, {
                    key: "_handleNoPanorama",
                    value: function() {
                        var e = this._streetViewController.getCurrentCameraLonLat();
                        this._streetViewController.isActive() && e ? (this.pin.setCrosshairLonlat(e.clone()),
                            this.pin.setPanoAvailable(!0)) : this._toggleButtonAndPin(!0)
                    }
                }, {
                    key: "_onStreetViewControlMouseDown",
                    value: function() {
                        return this.pin.setCrosshairLonlat(H.createLonLat(0, 0)),
                            this.pin.setPanoAvailable(!1),
                            this.pin.dragging.forceStart(!0),
                            !1
                    }
                }, {
                    key: "_getAvailabilityRadius",
                    value: function() {
                        return this.pin.getGeodesicCrosshairRadius()
                    }
                }, {
                    key: "_toggleButtonAndPin",
                    value: function(e) {
                        e ? (this._showButton(),
                            this.pin.toggleVisibility(!1)) : (this._hideButton(),
                            this.pin.toggleVisibility(!0))
                    }
                }, {
                    key: "_hideButton",
                    value: function() {
                        this.model.set({
                            visible: !1
                        })
                    }
                }, {
                    key: "_showButton",
                    value: function() {
                        this.model.set({
                            visible: !0
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$el.tooltip({
                                title: I18n.t("street_view.tooltip"),
                                placement: "left",
                                container: "body",
                                delay: {
                                    show: 400
                                }
                            }),
                            this.stickit()
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this._unbindEvents()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Modules/StreetView/templates/street-view-button"
                    }
                }]),
                t
        }(o.a.View),
        X = n(409),
        ee = n.n(X),
        te = n(410),
        ne = n.n(te),
        ie = function(e) {
            function t() {
                return h()(this, t),
                    m()(this, _()(t).apply(this, arguments))
            }
            return b()(t, e),
                g()(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "dblclick click mousedown dragstart": "_stopPropagation"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            layersSwitcherRegion: ".layers-switcher-region",
                            reloadButtonRegion: ".reload-button-region",
                            streetViewButtonRegion: ".street-view-region",
                            geoLocationButtonRegion: ".geo-location-region",
                            zoomBarButtonRegion: ".zoom-bar-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".overlay-buttons-container": {
                                observe: "visible",
                                visible: !0,
                                visibleFn: u.b
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._streetViewController = e.streetViewController,
                            this._layerSwitcherController = e.layerSwitcherController,
                            this._map = e.map,
                            this.model = new S.a.Model({
                                visible: !1
                            })
                    }
                }, {
                    key: "_stopPropagation",
                    value: function(e) {
                        e.stopPropagation()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("layersSwitcherRegion", new ee.a({
                                layerSwitcherController: this._layerSwitcherController
                            })),
                            this.showChildView("reloadButtonRegion", new ne.a({
                                actionManager: W.model.actionManager,
                                controller: W.controller,
                                map: this._map
                            })),
                            this.showChildView("geoLocationButtonRegion", new G({
                                geoLocationProvider: q,
                                map: this._map
                            })),
                            this.showChildView("streetViewButtonRegion", new Q({
                                streetViewController: this._streetViewController,
                                map: this._map
                            })),
                            this.showChildView("zoomBarButtonRegion", new Y({
                                map: this._map
                            })),
                            this.stickit()
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.model.set({
                            visible: !1
                        })
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.model.set({
                            visible: !0
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/MapEditor/UI/Map/MapControls/templates/overlayButtons"
                    }
                }]),
                t
        }(o.a.View),
        re = o.a.View.extend({
            id: "street-view-drag-handle-container",
            template: function() {
                return '<div id="street-view-drag-handle"></div>'
            },
            events: {
                "mousedown #street-view-drag-handle": "_startDrag"
            },
            ui: {
                dragHandle: "#street-view-drag-handle"
            },
            initialize: function(e) {
                this._isDragging = !1,
                    this.onDragHandleResize = e.onDragHandleResize,
                    this.map = e.map,
                    this.streetViewController = e.streetViewController
            },
            _onMouseMove: function(e) {
                if (this._isDragging) {
                    e.stopPropagation();
                    var t = this.el.getBoundingClientRect().x,
                        n = (i = e.pageX - t,
                            r = 200,
                            s = this.$el.innerWidth() - 200,
                            Math.min(Math.max(i, r), s));
                    this._onStreetViewDrag(n)
                }
                var i, r, s
            },
            _startDrag: function(e) {
                this._isDragging = !0,
                    T.registerEventToBody("mousemove", this._onMouseMove.bind(this)),
                    T.registerEventToBody("mouseup", this._onMouseUp.bind(this)),
                    e.stopPropagation()
            },
            _onMouseUp: function() {
                this._isDragging = !1,
                    T.unregisterEventToBody("mousemove", this._onMouseMove.bind(this)),
                    T.unregisterEventToBody("mouseup", this._onMouseUp.bind(this))
            },
            _setStreetViewSize: function(e) {
                this.ui.dragHandle.css({
                        left: e ? "".concat(e, "px") : ""
                    }),
                    this.onDragHandleResize(e)
            },
            _onStreetViewDrag: function(e) {
                this._setStreetViewSize(e),
                    this._throttleRefreshMapAndStreetView()
            },
            _throttleRefreshMapAndStreetView: l.a.throttle(function() {
                this.streetViewController.trigger("resizeStreetView"),
                    this.map.resize()
            }, 100),
            _onStreetViewClosed: function() {
                this._setStreetViewSize(""),
                    this.map.resize()
            },
            onBeforeRender: function() {
                var e = this;
                this.streetViewController.on("closePanoramaView", function() {
                    e._onStreetViewClosed()
                })
            }
        });
    t.default = o.a.View.extend({
        el: "body",
        template: !1,
        ui: {
            map: "#map",
            wazeMapContainer: "#waze-map-container",
            streetViewContainer: "#street-view-container",
            descartesVersion: "#debug .version.descartes"
        },
        regions: {
            toolbarRegion: "#toolbar",
            modeSwitcherRegion: "#mode-switcher-region",
            topbarRegion: "#topbar-container",
            advancedToolsRegion: "#advanced-tools",
            sidebarRegion: "#sidebarContent",
            sandboxMessageRegion: "#sandbox-message",
            layerSwitcherRegion: "#layer-switcher-region",
            overlayButtonsRegion: "#overlay-buttons-region",
            streetViewDragHandleRegion: "#street-view-drag-handle-region",
            linksRegions: "#links",
            dialogRegion: {
                regionClass: c.DialogRegion
            }
        },
        bindings: {
            ".app-loading": {
                observe: "loading",
                visible: !0,
                visibleFn: u.b
            },
            ".app": {
                classes: {
                    "show-sidebar": "editing",
                    "not-visible": {
                        observe: "loading"
                    }
                }
            },
            "#sidebar": {
                observe: "editing",
                visible: !0,
                visibleFn: u.b,
                classes: {
                    "not-shown": {
                        observe: "editing",
                        onGet: function(e) {
                            return this._resizeMap(),
                                !e
                        }
                    }
                }
            }
        },
        editingMediatorBindings: {
            "#mode-switcher-region": {
                observe: "editingHouseNumbers",
                visible: l.a.negate(l.a.identity)
            }
        },
        initialize: function(e) {
            this._loginManager = e.loginManager,
                this.listenTo(this.model, "change:user", this._renderStaffRegion),
                this.listenTo(this.model, "change:sandbox", this._renderSandboxMessage),
                this.listenTo(this.model, "change:editing", this._toggleLoginView),
                this.listenTo(this.getRegion("topbarRegion"), "show", this._resizeMap)
        },
        onRender: function() {
            var e = this;
            this.stickit(),
                this.stickit(W.editingMediator, this.editingMediatorBindings),
                this._toggleLoginView(),
                this._renderDescartesVersion(),
                this.addRegions({
                    mapDialogRegion: {
                        regionClass: E,
                        el: "#map-lightbox",
                        map: W.map
                    }
                }),
                this.showChildView("linksRegions", new o.a.View({
                    className: "waze-links",
                    template: "templates/sidebar/links"
                }));
            var t = W.layerSwitcherController.createLayerSwitcherLayout();
            this.showChildView("layerSwitcherRegion", t),
                t.on("visible:changed", function(t) {
                    e.$el.toggleClass("layer-switcher-is-visible", t)
                }),
                W.map.getMapEventsListener().on({
                    movestart: function() {
                        return t.hide()
                    },
                    click: function() {
                        return t.hide()
                    }
                }),
                this.showChildView("modeSwitcherRegion", new F.a({
                    model: this.model
                })),
                this.showChildView("streetViewDragHandleRegion", new re({
                    map: W.map,
                    streetViewController: W.streetViewController,
                    onDragHandleResize: function(t) {
                        return e._onDragHandleResize(t)
                    }
                }));
            var n = new ie({
                map: W.map,
                streetViewController: W.streetViewController,
                layerSwitcherController: W.layerSwitcherController
            });
            this.showChildView("overlayButtonsRegion", n),
                W.editingMediator.on("change:navigation", function() {
                    W.editingMediator.get("navigation") ? n.show() : n.hide()
                }),
                this._toggleLoginView()
        },
        _onDragHandleResize: function(e) {
            this.ui.wazeMapContainer.css({
                    width: e ? "".concat(e, "px") : ""
                }),
                this.ui.streetViewContainer.css({
                    width: e ? "calc(100% - ".concat(e, "px)") : ""
                })
        },
        _resizeMap: function() {
            return W.map.resize()
        },
        _renderStaffRegion: function() {
            var e = this.model.get("user");
            if (this.getRegion("advancedToolsRegion").empty(),
                e.rank >= W.Config.advanced_tools.minRank)
                return this.showChildView("advancedToolsRegion", new I({
                    editingMediator: W.editingMediator
                }))
        },
        _renderSandboxMessage: function() {
            this.getRegion("sandboxMessageRegion").empty(),
                this.model.get("sandbox") && this.showChildView("sandboxMessageRegion", new o.a.View({
                    template: "templates/login/sandbox-message"
                }))
        },
        _toggleLoginView: function() {
            var e = this.getRegion("dialogRegion");
            if (this.model.get("editing"))
                e.empty();
            else {
                var t = new j({
                    app: this.model,
                    loginManager: this._loginManager
                });
                e.show(t, {
                    keyboard: !1,
                    backdrop: !1,
                    modalDialogClass: "modal-dialog-login"
                })
            }
        },
        _renderDescartesVersion: function() {
            var e = this;
            return Object(O.httpGet)(W.Config.paths.version).then(function(t) {
                return r()(e.ui.descartesVersion).text(t.version)
            })
        }
    })
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(10),
        r = n.n(i),
        s = n(407),
        o = n.n(s),
        a = n(59),
        l = n(7),
        u = n.n(l),
        c = u.a.Model.extend({
            defaults: {
                id: 1,
                isImperial: null,
                twoWaySegmentsByDefault: !1,
                enableTurnsByDefault: !1,
                requireFeatureDeselect: !1,
                spreadTurnArrows: !1,
                showTransparentTurnArrows: !1
            },
            localStorage: new u.a.LocalStorage("preferences"),
            initialize: function() {
                var e = this;
                this.on("change", function() {
                    return e.save()
                })
            }
        }),
        d = n(0),
        h = n.n(d),
        p = n(47);

    function g(e) {
        ! function(e) {
            var t = p.buildConfig.regions[e],
                n = p.rasterConfig.regions[e];
            h.a.merge(p.buildConfig, t),
                h.a.merge(p.rasterConfig, n),
                h.a.merge(W.Config, t)
        }(e),
        Object.keys(W.Config.paths).forEach(function(e) {
            var t = W.Config.paths[e];
            W.Config.paths[e] = "".concat(p.buildConfig.api_base, "/").concat(t)
        })
    }
    var f = n(31),
        m = n(42),
        v = n(167),
        _ = n(2),
        y = n.n(_),
        b = n(1),
        E = n.n(b),
        w = n(30),
        S = "US",
        k = "CA",
        T = "IL",
        I = {
            iw: "he",
            ji: "yi",
            in: "id",
            "en-UK": "en-GB"
        },
        A = function() {
            function e() {
                y()(this, e)
            }
            return E()(e, [{
                    key: "getCountryByIP",
                    value: function() {
                        return Object(w.httpGet)("/WAS/country_by_ip").then(function(e) {
                            return {
                                abbr: e.abbr,
                                bounds: e.bounds,
                                locale: e.locale,
                                name: e.name
                            }
                        }).catch(function() {
                            console.error("Error retreiving country information")
                        })
                    }
                }]),
                e
        }();
    var M = n(466),
        O = n.n(M),
        C = n(49);

    function R() {
        var e = v.getRegionAndLocaleCodes();
        return {
            regionCode: e.code,
            localeCode: e.locale
        }
    }

    function D() {
        return (new O.a).getRegionCode()
    }

    function L(e) {
        return m.REGION_CODES.includes(e)
    }

    function P(e) {
        return ["en", "en-US", "en-GB", "es", "es-419", "fa-IR", "fr", "it", "ru", "ja", "he", "de", "ro", "tr", "af", "cs", "ko", "ms", "pl", "pt-BR", "pt-PT", "hu", "nl", "sv", "no", "sk", "da", "gl", "lt", "zh", "zh-TW", "bg", "fi", "hr", "ca", "et", "lv", "sr", "ar", "uk", "th"].includes(e)
    }

    function N(e, t) {
        var n = R(),
            i = D(),
            r = [e, n.regionCode, i, m.DEFAULT_REGION_CODE].filter(L)[0],
            s = function(e) {
                return e === m.REGION_CODE_USA ? m.DEFAULT_LOCALE_CODE_USA : m.DEFAULT_LOCALE_CODE
            }(r),
            o = Object(C.getLocaleCodeFromURL)();
        return {
            regionCode: r,
            localeCode: [n.localeCode, o, t, s].filter(P)[0]
        }
    }

    function x() {
        return (new A).getCountryByIP().then(function(e) {
            return {
                abbr: e.abbr,
                locale: e.locale
            }
        }).catch(function() {
            return {
                abbr: null,
                locale: m.DEFAULT_LOCALE_CODE
            }
        }).then(function(e) {
            var t, n, i;
            return N((t = e.abbr,
                n = t === T,
                t === S || t === k ? m.REGION_CODE_USA : n ? m.REGION_CODE_IL : m.DEFAULT_REGION_CODE), (i = e.locale,
                Object.keys(I).includes(i) ? I[i] : i))
        })
    }

    function V() {
        return function() {
            var e = R(),
                t = D(),
                n = L(t),
                i = e.regionCode;
            n && (i = t);
            var r = e.localeCode;
            return function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                return null != e && null != t
            }(i, r) ? Promise.resolve({
                regionCode: i,
                localeCode: r
            }) : x()
        }().then(function(e) {
            var t = e.regionCode,
                n = e.localeCode;
            return function(e, t) {
                v.setRegionAndLocaleCodes(e, t)
            }(t, n), {
                regionCode: t,
                localeCode: n
            }
        })
    }
    var j = n(197),
        U = n(467);

    function F(e) {
        var t = e.descartesClient;
        W.prefs = new c,
            W.prefs.fetch();
        var n = new j.b;
        W.app = new o.a,
            W.app.start({
                descartesClient: t,
                loginManager: n
            })
    }

    function B(e) {
        g(e)
    }

    function G() {
        var e = new a.a;
        return Object(f.init)(e).then(function() {
            return {
                descartesClient: e
            }
        })
    }
    r()(document).ready(function() {
        Object(U.startReportingUnhanldedErrors)(),
            V().then(function(e) {
                var t = e.regionCode;
                return function(e) {
                        var t = P(e);
                        !Object(C.documentLocaleMatches)(e) && t && Object(C.redirectToLocalePage)(e)
                    }(e.localeCode),
                    t
            }).then(B).catch(function(e) {
                console.error("Error loading local configuration", e)
            }).then(G).catch(function(e) {
                console.error("Error loading server configuration", e),
                    Object(C.redirectToErrorPage)()
            }).then(F)
    })
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(8),
        r = n.n(i),
        s = n(50),
        o = n(0),
        a = n.n(o),
        l = n(78),
        u = s.a.extend({
            _isModified: function() {
                return this.attributes.problem.isUpdated()
            },
            _isResolved: function() {
                return !this.attributes.problem.attributes.open
            },
            getSeverity: function() {
                return this.attributes.problem.attributes.severity
            },
            getFeedIssueState: function() {
                return this.attributes.problem ? new l.a(this.attributes.problem).getState() : "open"
            }
        });
    u.prototype.defaults = a.a.extend({
        problem: null
    }, s.a.prototype.defaults);
    var c = u,
        d = s.a.extend({
            _isModified: function() {
                return this.attributes.initialApproved !== this.attributes.updateRequest.get("approved")
            },
            _isResolved: function() {
                return null !== this.attributes.updateRequest.get("approved")
            },
            getSeverity: function() {
                return this.attributes.updateRequest.getSeverity()
            },
            getFeedIssueState: function() {
                if (!this.attributes.updateRequest)
                    return "open";
                var e = this.attributes.updateRequest.attributes.approved;
                return e ? "approved" : !1 === e ? "rejected" : "open"
            }
        });
    d.prototype.defaults = a.a.extend({
        venue: null,
        updateRequest: null,
        initialApproved: null
    }, s.a.prototype.defaults);
    var h = d,
        p = n(228),
        g = s.a.extend({
            initialized: function() {
                this.set("state", this.getState())
            },
            _isModified: function() {
                return this.attributes.updateRequest.isUpdated()
            },
            _isResolved: function() {
                return !this.attributes.updateRequest.attributes.open
            },
            getSeverity: function() {
                return this.attributes.updateRequest.attributes.severity
            },
            getFeedIssueState: function() {
                return this.attributes.updateRequest ? new p.a(this.attributes.updateRequest).getState() : "open"
            }
        });
    g.prototype.defaults = a.a.extend({
        updateRequest: null
    }, s.a.prototype.defaults);
    var f, m = g,
        v = s.a.prototype.TYPE,
        _ = {
            TYPE_TO_CLASS: (f = {},
                r()(f, v.MAP_PROBLEM, c),
                r()(f, v.VENUE_UPDATE_REQUEST, h),
                r()(f, v.UPDATE_REQUEST, m),
                f),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.type])(e)
            }
        };
    t.default = _
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = {
        paths: {
            features: "Features",
            issues: "Feed/Issues",
            notifications: "Feed/Notifications",
            auth: "Session",
            problemDetails: "MapProblems/Details",
            updateRequestSessions: "MapProblems/UpdateRequests",
            updateRequestComments: "MapProblems/UpdateRequests/Comment",
            updateRequestFollow: "MapProblems/UpdateRequests/Notification",
            mapCommentConversation: "MapComments/Comment",
            mapCommentFollow: "MapComments/Notification",
            archive: "Archive/List",
            archiveSessions: "Archive/SessionGPS",
            houseNumbers: "HouseNumbers",
            cityExists: "CityExistence",
            mteDetails: "MajorTrafficEvents/Details",
            mtePublish: "MajorTrafficEvents/Publish",
            mteReady: "MajorTrafficEvents/Ready",
            logger: "ErrorReport",
            elementHistory: "ElementHistory",
            configurationInfo: "info/config",
            version: "info/version"
        },
        units: {
            lonLatPrecision: 5
        },
        login: {
            paths: {
                get: "/login/get",
                create: "/login/create",
                destroy: "/login/destroy",
                email_verification: "/UsersProfile/email/verify"
            }
        },
        map: {
            initialPosition: {
                il: {
                    lon: 34.789,
                    lat: 32.086,
                    initialZoom: 1
                },
                usa: {
                    lon: -73.99078,
                    lat: 40.73565,
                    initialZoom: 0
                },
                row: {
                    lon: -.119,
                    lat: 51.524,
                    initialZoom: 0
                }
            },
            projection: {
                remote: "EPSG:4326",
                local: "EPSG:900913"
            }
        },
        tts: {
            url: "https://ttsgw.world.waze.com/TTSGateway/Text2SpeechServlet",
            default_locale: {
                tts: "en-US",
                locale: "en"
            },
            options: {
                version: 6,
                protocol: 2,
                sessionid: 12345654321,
                content_type: "audio/mpeg",
                type: "street",
                validate_data: "positive",
                skipCache: !0,
                lon: 0,
                lat: 0
            }
        },
        speed_limit: {
            enable: !0
        },
        place_updates: {
            focusZoom: 6
        },
        problems: {
            maxDetailsZoom: 7,
            minDetailsZoom: 5
        },
        houseNumbers: {
            allowEditing: !0,
            minEditZoom: 6,
            shownByDefault: !1
        },
        restrictions: {
            allowEditing: !0
        },
        closures: {
            shownByDefault: !0
        },
        cameras: {
            minDragZoom: 3
        },
        user_drive: {
            gutterMinDisplayZoom: 6,
            arrowsMinDisplayZoom: 5,
            instructionsMinDisplayZoom: 5,
            weightMinDisplayZoom: 5,
            initialZoom: 7
        },
        user_editing_enabled: !0,
        big_junctions: {
            minRank: 4,
            enable: !0
        },
        venues: {
            image_bucket_url: "https://venue-image.waze.com/"
        },
        openlayers: {
            img_path: "images/"
        },
        livemap: {
            zoom_offset: 12,
            max_zoom: 17,
            url: "/livemap"
        },
        advanced_tools: {
            minRank: 3
        }
    };
    n(809),
        n(811),
        window.W = {
            Config: i,
            version: "v2.47-46-ga687c8a08\n"
        },
        n(469),
        n(54),
        n(686),
        n(687),
        n(688),
        n(16),
        n(689),
        n(1136)
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i = n(22),
        r = n.n(i),
        s = n(2),
        o = n.n(s),
        a = n(1),
        l = n.n(a),
        u = n(0),
        c = n.n(u),
        d = n(33),
        h = n(27),
        p = n.n(h),
        g = function() {
            function e() {
                o()(this, e),
                    this._autoIncId = 1,
                    this._parentMap = new Map,
                    this._size = new Map,
                    this._objects = []
            }
            return l()(e, [{
                    key: "add",
                    value: function(e) {
                        if (!this.has(e)) {
                            var t = this.generateUniqueId();
                            this._parentMap.set(e, t),
                                this._parentMap.set(t, t),
                                this._size.set(t, 1),
                                this._objects.push(e)
                        }
                    }
                }, {
                    key: "remove",
                    value: function(e) {
                        if (this.has(e)) {
                            var t = this.find(e);
                            this._parentMap.delete(e);
                            var n = this._size.get(t);
                            n <= 1 ? (this._parentMap.delete(t),
                                this._size.delete(t)) : this._size.set(t, n - 1);
                            var i = this._objects.indexOf(e);
                            this._objects.splice(i, 1)
                        }
                    }
                }, {
                    key: "removeGroup",
                    value: function(e) {
                        for (var t = this._objects.length - 1; t >= 0; t--) {
                            var n = this._objects[t];
                            this.find(n) === e && this.remove(n)
                        }
                    }
                }, {
                    key: "has",
                    value: function(e) {
                        return this._parentMap.has(e)
                    }
                }, {
                    key: "addAndUnion",
                    value: function(e) {
                        if (e.length > 0) {
                            this.add(e[0]);
                            for (var t = this.find(e[0]), n = 1; n < e.length; n++)
                                this.has(e[n]) ? t = this.union(e[n], t) : (this._parentMap.set(e[n], t),
                                    this._size.set(t, this._size.get(t) + 1),
                                    this._objects.push(e[n]))
                        }
                    }
                }, {
                    key: "find",
                    value: function(e) {
                        for (var t = e, n = this._parentMap.get(t); n !== t;)
                            t = n,
                            n = this._parentMap.get(n);
                        return this._parentMap.set(e, n),
                            n
                    }
                }, {
                    key: "isConnected",
                    value: function(e, t) {
                        return this.find(e) === this.find(t)
                    }
                }, {
                    key: "union",
                    value: function(e, t) {
                        var n = this.find(e),
                            i = this.find(t);
                        if (n === i)
                            return n;
                        var r = this._size.get(n),
                            s = this._size.get(i);
                        return r > s ? (this._parentMap.set(i, n),
                            this._size.set(n, r + s),
                            n) : (this._parentMap.set(n, i),
                            this._size.set(i, r + s),
                            i)
                    }
                }, {
                    key: "generateUniqueId",
                    value: function() {
                        return "__disjId:".concat(this._autoIncId++)
                    }
                }, {
                    key: "getSets",
                    value: function() {
                        for (var e, t = {}, n = 0; n < this._objects.length; n++)
                            t[e = this.find(this._objects[n])] || (t[e] = []),
                            t[e].push(this._objects[n]);
                        for (var i = [], r = Object.keys(t), s = 0; s < r.length; s++)
                            i.push(t[r[s]]);
                        return i
                    }
                }, {
                    key: "getGroupSize",
                    value: function(e) {
                        return this._size.get(e)
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this._autoIncId = 1,
                            this._parentMap.clear(),
                            this._size.clear(),
                            this._objects = []
                    }
                }]),
                e
        }(),
        f = n(44),
        m = n.n(f),
        v = n(18),
        _ = function() {
            function e(t, n) {
                o()(this, e),
                    this._savingEnabled = !0,
                    Object.assign(this, n),
                    this.model = t,
                    this._undoStack = [],
                    this._redoStack = [],
                    this.events = new OpenLayers.Events(this),
                    this._groupsSet = new g
            }
            return l()(e, [{
                    key: "add",
                    value: function(e) {
                        if ((e.undoSupported() || !1 !== this.events.triggerEvent("beforeclearactions")) && !1 !== this.events.triggerEvent("beforeaction", {
                                action: e
                            })) {
                            var t = this.unsavedActionsNum();
                            e.setModel(this.model),
                                e.undoSupported() ? this._undoStack.push(e) : (this._clearActions(),
                                    this._triggerAfterClearActions(e));
                            var n = !1;
                            d.protect("doing action:", function() {
                                    !1 !== e.doAction() && (n = !0)
                                }, this),
                                d.protect("generate action string", function() {
                                    e.generateDescription()
                                }, null, !0);
                            var i = c.a.uniq(c.a.compact(e.getAffectedUniqueIds()));
                            this._groupsSet.addAndUnion([].concat(r()(i), [e]));
                            var s = this.getActionGroupId(e);
                            this._clearRedoStackOfGroup(s) && this._triggerAfterClearActions(e),
                                n || this._undoStack.pop(),
                                0 === t && this.events.triggerEvent("hasActions"),
                                this.events.triggerEvent("afteraction", {
                                    action: e
                                })
                        }
                    }
                }, {
                    key: "canUndo",
                    value: function() {
                        return this._undoStack.length > 0
                    }
                }, {
                    key: "canSave",
                    value: function() {
                        return this.canUndo() && this.isAllowedToSave()
                    }
                }, {
                    key: "canRedo",
                    value: function() {
                        return this._redoStack.length > 0
                    }
                }, {
                    key: "unsavedActionsNum",
                    value: function() {
                        return this._undoStack.length
                    }
                }, {
                    key: "getActionsNum",
                    value: function() {
                        return this._undoStack.length + this._redoStack.length
                    }
                }, {
                    key: "undo",
                    value: function() {
                        if (!this.canUndo())
                            return !1;
                        var e = this._undoStack[this._undoStack.length - 1];
                        return this._undoAction(e),
                            v.reportAnalytic.generalAction("undo_clicked"),
                            !0
                    }
                }, {
                    key: "canUndoAction",
                    value: function(e) {
                        return this._undoStack.includes(e)
                    }
                }, {
                    key: "_undoAction",
                    value: function(e) {
                        return !!this.canUndoAction(e) && (!1 !== this.events.triggerEvent("beforeundoaction", {
                            action: e
                        }) && (d.protect("undoing action:", function() {
                                e.undoAction()
                            }, this),
                            this._undoStack.splice(this._undoStack.indexOf(e), 1),
                            this._redoStack.push(e),
                            this.events.triggerEvent("afterundoaction", {
                                action: e
                            }),
                            void(0 === this.unsavedActionsNum() && this.events.triggerEvent("noActions"))))
                    }
                }, {
                    key: "redo",
                    value: function() {
                        if (!this.canRedo())
                            return !1;
                        var e = this._redoStack[this._redoStack.length - 1];
                        return this._redoAction(e),
                            !0
                    }
                }, {
                    key: "canRedoAction",
                    value: function(e) {
                        return this._redoStack.includes(e)
                    }
                }, {
                    key: "_redoAction",
                    value: function(e) {
                        if (!this.canRedoAction(e))
                            return !1;
                        if (!1 === this.events.triggerEvent("beforeaction", {
                                action: e
                            }))
                            return !1;
                        var t = this.unsavedActionsNum();
                        this._redoStack.splice(this._redoStack.indexOf(e), 1),
                            this._undoStack.push(e),
                            d.protect("redoing action:", function() {
                                e.redoAction()
                            }, this),
                            this.events.triggerEvent("afteraction", {
                                action: e
                            }),
                            0 === t && this.events.triggerEvent("hasActions")
                    }
                }, {
                    key: "undoGroupAction",
                    value: function(e) {
                        if (!this.canUndoAction(e))
                            return 0;
                        for (var t = this.getActionGroupId(e), n = this._undoStack, i = this._filterActionsByGroupId(n, t), r = i.indexOf(e), s = i.length - 1; s >= r; s--) {
                            var o = i[s];
                            this._undoAction(o)
                        }
                        return i.length - r
                    }
                }, {
                    key: "redoGroupAction",
                    value: function(e) {
                        if (!this.canRedoAction(e))
                            return 0;
                        for (var t = this.getActionGroupId(e), n = this._redoStack, i = this._filterActionsByGroupId(n, t), r = i.indexOf(e), s = i.length - 1; s >= r; s--) {
                            var o = i[s];
                            this._redoAction(o)
                        }
                        return i.length - r
                    }
                }, {
                    key: "undoEntireGroupById",
                    value: function(e) {
                        var t = this._filterActionsByGroupId(this._undoStack, e);
                        t.length > 0 && this.undoGroupAction(t[0])
                    }
                }, {
                    key: "redoEntireGroupById",
                    value: function(e) {
                        var t = this._filterActionsByGroupId(this._redoStack, e);
                        t.length > 0 && this.redoGroupAction(t[0])
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this._clearActions(),
                            this._triggerAfterClearActions()
                    }
                }, {
                    key: "_clearActions",
                    value: function() {
                        this._undoStack.forEach(function(e) {
                                return e.destroy()
                            }),
                            this._redoStack.forEach(function(e) {
                                return e.destroy()
                            }),
                            this._groupsSet.clear(),
                            this._undoStack = [],
                            this._redoStack = []
                    }
                }, {
                    key: "_clearRedoStackOfGroup",
                    value: function(e) {
                        return this._removeActionsFromStackByGroupId(this._redoStack, e)
                    }
                }, {
                    key: "_removeActionsFromStackByGroupId",
                    value: function(e, t) {
                        for (var n = !1, i = e.length - 1; i >= 0; i--)
                            this.getActionGroupId(e[i]) === t && (e[i].destroy(),
                                e.splice(i, 1),
                                n = !0);
                        return n
                    }
                }, {
                    key: "clearGroupsWithOnlyRevertedChanges",
                    value: function() {
                        var e = this._getGroupsWithOnlyRevertedChanges();
                        this._clearGroupsByIds(e) && this._triggerAfterClearActions()
                    }
                }, {
                    key: "_getGroupsWithOnlyRevertedChanges",
                    value: function() {
                        var e = this,
                            t = this._redoStack,
                            n = this._groupActions(t);
                        return Object.keys(n).filter(function(t) {
                            return n[t].every(function(t) {
                                return e.canRedoAction(t)
                            })
                        })
                    }
                }, {
                    key: "_triggerAfterClearActions",
                    value: function(e) {
                        this.events.triggerEvent("afterclearactions", {
                                action: e
                            }),
                            0 === this._undoStack.length && this.events.triggerEvent("noActions")
                    }
                }, {
                    key: "clearGroupsOfActions",
                    value: function(e) {
                        var t = this.getActionsGroupIds(e);
                        this._clearGroupsByIds(t) && this._triggerAfterClearActions()
                    }
                }, {
                    key: "_clearGroupById",
                    value: function(e) {
                        var t = !1;
                        return this._removeActionsFromStackByGroupId(this._redoStack, e) && (t = !0),
                            this._removeActionsFromStackByGroupId(this._undoStack, e) && (t = !0),
                            this._groupsSet.removeGroup(e),
                            t
                    }
                }, {
                    key: "_clearGroupsByIds",
                    value: function(e) {
                        var t = this,
                            n = !1;
                        return e.forEach(function(e) {
                                t._clearGroupById(e) && (n = !0)
                            }),
                            n
                    }
                }, {
                    key: "getActionsGroupIds",
                    value: function(e) {
                        return Object.keys(this._groupActions(e))
                    }
                }, {
                    key: "getChangesBounds",
                    value: function() {
                        var e = new p.a;
                        return e.subActions = this._undoStack.concat(),
                            e.getBounds()
                    }
                }, {
                    key: "getActions",
                    value: function(e) {
                        return e ? this._undoStack.concat(this._redoStack.concat().reverse()) : this._undoStack.concat()
                    }
                }, {
                    key: "getEditedTurns",
                    value: function() {
                        return this.getFlatActions().filter(function(e) {
                            return e instanceof m.a
                        }).map(function(e) {
                            return e.getTurn()
                        })
                    }
                }, {
                    key: "toggleSavingEnabled",
                    value: function(e) {
                        this._savingEnabled = e
                    }
                }, {
                    key: "isAllowedToSave",
                    value: function() {
                        return this.model.loginManager.isLoggedIn() && this._savingEnabled
                    }
                }, {
                    key: "getFlatActions",
                    value: function() {
                        return c.a.flatten(this.getActions().map(function(e) {
                            return e.flat()
                        }))
                    }
                }, {
                    key: "getActionsByGroupsIds",
                    value: function(e) {
                        return this._groupActions(this.getActions(e))
                    }
                }, {
                    key: "getActionsByGroupId",
                    value: function(e, t) {
                        return this._filterActionsByGroupId(this.getActions(t), e)
                    }
                }, {
                    key: "_filterActionsByGroupId",
                    value: function(e, t) {
                        var n = this;
                        return e.filter(function(e) {
                            return n.getActionGroupId(e) === t
                        })
                    }
                }, {
                    key: "_groupActions",
                    value: function(e) {
                        var t = this;
                        return c.a.groupBy(e, function(e) {
                            return t.getActionGroupId(e)
                        })
                    }
                }, {
                    key: "isActionDone",
                    value: function(e) {
                        return this._undoStack.includes(e)
                    }
                }, {
                    key: "getActionGroupId",
                    value: function(e) {
                        return this._groupsSet.find(e)
                    }
                }, {
                    key: "getActionById",
                    value: function(e) {
                        return this.getActions(!0).filter(function(t) {
                            return t.getID() === e
                        })[0]
                    }
                }, {
                    key: "undoAll",
                    value: function() {
                        this.getActions().reverse().forEach(this._undoAction.bind(this))
                    }
                }]),
                e
        }();
    Object.assign(_.prototype, {
        CLASS_NAME: "Waze.ActionManager"
    });
    t.default = _
}, function(e, t, n) {
    "use strict";
    n.r(t);
    var i, r, s, o = n(2),
        a = n.n(o),
        l = n(1),
        u = n.n(l),
        c = n(5),
        d = n.n(c),
        h = n(3),
        p = n.n(h),
        g = n(34),
        f = n.n(g),
        m = n(6),
        v = n.n(m),
        _ = n(7),
        y = n.n(_),
        b = n(0),
        E = n.n(b),
        w = n(181),
        S = n(33),
        k = n(8),
        T = n.n(k),
        I = n(28),
        A = n(19),
        M = n(121),
        O = I.LAYER_UNIQUE_NAMES,
        C = (i = {},
            T()(i, I.LAYER_UNIQUE_NAMES.SATELLITE_IMAGERY, 0),
            T()(i, I.LAYER_UNIQUE_NAMES.ROADS, 2),
            T()(i, I.LAYER_UNIQUE_NAMES.GPS_POINTS, 3),
            T()(i, I.LAYER_UNIQUE_NAMES.AREA_MANAGERS, 4),
            T()(i, I.LAYER_UNIQUE_NAMES.LANDMARKS, 5),
            T()(i, I.LAYER_UNIQUE_NAMES.SPEED_CAMERAS, 6),
            T()(i, I.LAYER_UNIQUE_NAMES.PROBLEMS, 7),
            T()(i, I.LAYER_UNIQUE_NAMES.UPDATE_REQUESTS, 8),
            T()(i, I.LAYER_UNIQUE_NAMES.EDITABLE_AREAS, 9),
            T()(i, I.LAYER_UNIQUE_NAMES.LIVE_USERS, 10),
            T()(i, I.LAYER_UNIQUE_NAMES.PLACE_UPDATES, 11),
            T()(i, I.LAYER_UNIQUE_NAMES.BIG_JUNCTIONS, 12),
            T()(i, I.LAYER_UNIQUE_NAMES.CLOSURES, 13),
            i),
        R = (r = {},
            T()(r, O.SATELLITE_IMAGERY, A.TogglerEnum.ITEM_SATELLITE_IMAGERY),
            T()(r, O.ROADS, A.TogglerEnum.ITEM_ROAD),
            T()(r, O.GPS_POINTS, A.TogglerEnum.ITEM_GPS_POINTS),
            T()(r, O.AREA_MANAGERS, A.TogglerEnum.ITEM_AREA_MANAGERS),
            T()(r, O.LANDMARKS, A.TogglerEnum.ITEM_VENUES),
            T()(r, O.SPEED_CAMERAS, A.TogglerEnum.ITEM_SPEED_CAMERAS),
            T()(r, O.PROBLEMS, A.TogglerEnum.ITEM_MAP_PROBLEMS),
            T()(r, O.UPDATE_REQUESTS, A.TogglerEnum.ITEM_UPDATE_REQUESTS),
            T()(r, O.EDITABLE_AREAS, A.TogglerEnum.ITEM_EDITABLE_AREAS),
            T()(r, O.LIVE_USERS, A.TogglerEnum.ITEM_LIVE_USERS),
            T()(r, O.PLACE_UPDATES, A.TogglerEnum.ITEM_PLACE_UPDATE_REQUESTS),
            T()(r, O.BIG_JUNCTIONS, A.TogglerEnum.ITEM_JUNCTION_BOXES),
            T()(r, O.CLOSURES, A.TogglerEnum.ITEM_CLOSURES),
            r),
        D = (s = {},
            T()(s, A.TogglerEnum.GROUP_ISSUES, !0),
            T()(s, A.TogglerEnum.GROUP_MAP_ISSUES, !0),
            T()(s, A.TogglerEnum.GROUP_PLACES, !0),
            T()(s, A.TogglerEnum.GROUP_ROAD, !0),
            T()(s, A.TogglerEnum.GROUP_DISPLAY, !0),
            s),
        L = function() {
            function e(t) {
                a()(this, e),
                    this._urlParams = t
            }
            return u()(e, [{
                    key: "isLayerParamPresent",
                    value: function() {
                        return null != this._urlParams.layers && /^\d+$/.test(this._urlParams.layers)
                    }
                }, {
                    key: "getTogglersState",
                    value: function() {
                        var e = Object.assign({}, D),
                            t = new M.default(this._urlParams.layers);
                        return Object.keys(R).forEach(function(n) {
                                var i = 1 << C[n];
                                e[R[n]] = t.isEnabled(i)
                            }),
                            e
                    }
                }]),
                e
        }(),
        P = n(25),
        N = n(17),
        x = n(200),
        V = n(214),
        j = function(e) {
            function t(e, n, i, r) {
                var s;
                return a()(this, t),
                    (s = d()(this, p()(t).call(this))).map = e,
                    s.selectionManager = n,
                    s.app = i,
                    s.togglers = r,
                    s.urlParams = null,
                    s.mapLocation = null,
                    s.selectedProblem = null,
                    s.preselectedProblem = null,
                    s.livemapLink = "",
                    s.mapSelection = {},
                    s.marker = !1,
                    s.locationsPerEnv = {},
                    s._restore(),
                    s.map.getMapEventsListener().on({
                        moveend: s._onMapLocationChanged,
                        scope: f()(s)
                    }),
                    s.selectionManager.events.on({
                        selectionchanged: s._onSelectionChanged,
                        scope: f()(s)
                    }),
                    W.vent.on({
                        "problems:shown": s._onProblemShown,
                        "problems:closed": s._onProblemClosed
                    }, f()(s)),
                    s.togglers.on("change", s._triggerStateChanged, f()(s)),
                    s
            }
            return v()(t, e),
                u()(t, [{
                    key: "destroy",
                    value: function() {
                        this.map.getMapEventsListener().un({
                                moveend: this._onMapLocationChanged,
                                scope: this
                            }),
                            this.selectionManager.events.un({
                                selectionchanged: this._onSelectionChanged,
                                scope: this
                            })
                    }
                }, {
                    key: "_onMapLocationChanged",
                    value: function() {
                        return this.updateMapLocation()
                    }
                }, {
                    key: "_setLocalStorage",
                    value: function(e, t) {
                        if (!W.app.isSandboxMode())
                            return S.localStorage.set(e, t)
                    }
                }, {
                    key: "updateMapLocation",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.app.getAppRegionCode(),
                            n = this.map.getCenter(),
                            i = this.map.getZoom();
                        if (null != n)
                            return n.zoom = i,
                                this.mapLocation = n,
                                this.locationsPerEnv[e] = n,
                                this._setLocalStorage(t.LOCAL_STORAGE_MAP_LOCATION, this.locationsPerEnv),
                                this.set("livemapLink", Object(V.getLiveMapLinkFromCenter)(this._getProjectedCenter())),
                                this._triggerStateChanged(),
                                !0
                    }
                }, {
                    key: "_getSelectedFeaturesByType",
                    value: function() {
                        var e = {};
                        return this.selectionManager.getSelectedFeatures().forEach(function(t) {
                                if (!t.model.isNew()) {
                                    var n = e["".concat(t.model.type, "s")] || [];
                                    e["".concat(t.model.type, "s")] = n,
                                        n.push(t.model.getID())
                                }
                            }),
                            this.selectedProblem && (e[this.selectedProblem.type] = this.selectedProblem.getID()),
                            e
                    }
                }, {
                    key: "_onSelectionChanged",
                    value: function(e) {
                        return this._updateMapSelection(),
                            !0
                    }
                }, {
                    key: "_onProblemShown",
                    value: function(e) {
                        return this.selectedProblem = e,
                            this._updateMapSelection()
                    }
                }, {
                    key: "_onProblemClosed",
                    value: function() {
                        return this.selectedProblem = null,
                            this._updateMapSelection()
                    }
                }, {
                    key: "_updateMapSelection",
                    value: function() {
                        return this.mapSelection = this._getSelectedFeaturesByType(),
                            this._triggerStateChanged()
                    }
                }, {
                    key: "_triggerStateChanged",
                    value: function() {
                        return this.trigger("statechanged", {
                            center: this._getProjectedCenter(),
                            selection: this.mapSelection,
                            marker: this.marker,
                            s: this.togglers.serialize()
                        })
                    }
                }, {
                    key: "_getProjectedCenter",
                    value: function() {
                        var e = this.mapLocation.zoom,
                            t = this.mapLocation.clone();
                        return t.transform(this.map.getProjectionObject(), this.map.displayProjection),
                            t.zoom = e,
                            t
                    }
                }, {
                    key: "_isTogglerTreeParamPresent",
                    value: function() {
                        return null != this.urlParams.s && /^\d+$/.test(this.urlParams.s)
                    }
                }, {
                    key: "_restoreLayerVisibility",
                    value: function() {
                        var e = new L(this.urlParams);
                        this._isTogglerTreeParamPresent() ? this.togglers.setStateFromBitfield(this.urlParams.s) : e.isLayerParamPresent() ? this.togglers.setState(e.getTogglersState()) : this.togglers.readFromLocalStorage(),
                            Object(x.writeTogglersStateToApp)(this.togglers, W.model, this.map)
                    }
                }, {
                    key: "_restoreMapLocation",
                    value: function() {
                        this.locationsPerEnv = S.localStorage.get(t.LOCAL_STORAGE_MAP_LOCATION),
                            null == this.locationsPerEnv && (this.locationsPerEnv = {});
                        var e = this.app.getAppRegionCode(),
                            n = this.locationsPerEnv[e];
                        if (this.urlParams.lat && this.urlParams.lon) {
                            var i = N.createLonLat(parseFloat(this.urlParams.lon), parseFloat(this.urlParams.lat));
                            if (i.transform(this.map.displayProjection, this.map.getProjectionObject()),
                                this.urlParams.zoom) {
                                var r = parseFloat(this.urlParams.zoom);
                                i.zoom = r
                            }
                            this.mapLocation = i
                        } else if (null != n) {
                            var s = N.createLonLat(n.lon, n.lat);
                            s.zoom = n.zoom,
                                this.mapLocation = s
                        }
                    }
                }, {
                    key: "_restoreMarker",
                    value: function() {
                        this.marker = this.urlParams.marker
                    }
                }, {
                    key: "_restoreSelection",
                    value: function() {
                        var e = this;
                        this.selectionManager.getSelectableRepos().forEach(function(t) {
                            var n = e.urlParams[t.name];
                            n && (n instanceof Array || (n = [n]),
                                e.mapSelection[t.name] = n)
                        })
                    }
                }, {
                    key: "_selectObjects",
                    value: function() {
                        if (W.model.events.unregister("mergeend", this, this._selectObjects),
                            this.mapSelection) {
                            for (var e = [], t = 0, n = Object.keys(this.mapSelection); t < n.length; t++) {
                                var i = n[t],
                                    r = this.mapSelection[i],
                                    s = W.model[i];
                                if (r && s)
                                    for (var o = 0; o < r.length; o++) {
                                        var a = r[o],
                                            l = s.getObjectById(a);
                                        l && e.push(l)
                                    }
                            }
                            E.a.isEmpty(e) || this.selectionManager.setSelectedModels(e)
                        }
                        return this._selectProblem()
                    }
                }, {
                    key: "_restoreProblemSelection",
                    value: function() {
                        for (var e = [W.model.mapUpdateRequests, W.model.problems], t = 0; t < e.length; t++) {
                            var n = e[t],
                                i = n.objectType,
                                r = this.urlParams[i];
                            if (null != r)
                                return void(this.preselectedProblem = {
                                    repo: n,
                                    problemID: r
                                })
                        }
                    }
                }, {
                    key: "_selectProblem",
                    value: function() {
                        if (this.preselectedProblem) {
                            var e = this.preselectedProblem.repo.getObjectById(this.preselectedProblem.problemID);
                            e && W.commands.execute("problems:show", e)
                        }
                    }
                }, {
                    key: "_setupMap",
                    value: function() {
                        if (this._setMapLocation(),
                            this.marker) {
                            var e, t = new OL.Layer.Vector("PermalinkMarker", {
                                styleMap: w.a.permalinkMarker
                            });
                            e = this.mapLocation ? this.mapLocation.clone() : this.map.getCenter();
                            var n = P.fromLonLat(e),
                                i = new OL.Feature.Vector(n);
                            this.map.addLayer(t),
                                t.addFeatures(i)
                        }
                        return W.model.events.register("mergeend", this, this._selectObjects)
                    }
                }, {
                    key: "_setMapLocation",
                    value: function() {
                        if (this.mapLocation) {
                            var e = this.mapLocation.clone();
                            return this.map.setCenter(e, this.mapLocation.zoom)
                        }
                    }
                }, {
                    key: "_restore",
                    value: function() {
                        return this.urlParams = OL.Util.getParameters(window.location.href),
                            this._restoreMapLocation(),
                            this._restoreMarker(),
                            this._restoreSelection(),
                            this._restoreProblemSelection(),
                            this._restoreLayerVisibility(),
                            this._setupMap()
                    }
                }]),
                t
        }(y.a.Model);
    E.a.extend(j, {
        LOCAL_STORAGE_MAP_LOCATION: "mapLocation"
    });
    t.default = j
}]);