webpackJsonp([0], [, function(e, t, i) {
    "use strict";
    t.__esModule = !0,
        t.default = function(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(174),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function() {
        function e(e, t) {
            for (var i = 0; i < t.length; i++) {
                var n = t[i];
                n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value" in n && (n.writable = !0),
                    (0,
                        s.default)(e, n.key, n)
            }
        }
        return function(t, i, n) {
            return i && e(t.prototype, i),
                n && e(t, n),
                t
        }
    }()
}, function(e, t, i) {
    e.exports = {
        default: i(419),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";
    e.exports = {
        ARCHIVE_SESSION: "archive",
        ARCHIVE_SESSION_DATA: "archiveSession",
        BIG_JUNCTION: "bigJunction",
        CITY: "city",
        COUNTRY: "country",
        HOUSE_NUMBER: "houseNumber",
        JUNCTION: "junction",
        JUNCTION_NC: "junctionConnection",
        MAP_PROBLEM: "mapProblem",
        MERGED_NODE: "mergedNode",
        MTE: "majorTrafficEvent",
        NC: "nodeConnection",
        NODE: "node",
        PROBLEM_DETAILS: "problemDetail",
        RESTRICTED_AREA: "restrictedArea",
        RESTRICTION: "restriction",
        ROAD_CLOSURE: "roadClosure",
        SEGMENT: "segment",
        SPEED_CAMERA: "camera",
        STATE: "state",
        STREET: "street",
        TURN_PROBLEM: "turnProblem",
        UPDATE_REQUEST: "mapUpdateRequest",
        UPDATE_REQUEST_SESSION: "updateRequestSession",
        USER: "user",
        USER_AREA: "userArea",
        VENUE: "venue",
        VENUE_UPDATE_REQUEST: "venueUpdateRequest"
    }
}, function(e, t, i) {
    e.exports = {
        default: i(457),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";
    var n = i(13),
        s = i(125),
        r = OpenLayers.Class({
            id: null,
            state: null,
            persistent: !1,
            initialize: function(e, t) {
                t && t.parse && e && this.parse(e),
                    OpenLayers.Util.extend(this, e)
            },
            getID: function() {
                return this.id || this.ID
            },
            setID: function(e) {
                this.id = e
            },
            isNew: function() {
                var e = this.getID();
                return e < 0 || null === e || _.isUndefined(e)
            },
            isDeleted: function() {
                return Boolean(this.state && this.state === OpenLayers.State.DELETE)
            },
            isUpdated: function() {
                return this.state === OpenLayers.State.UPDATE
            },
            isUnchanged: function() {
                return !this.state
            },
            getVersion: function() {
                return this.version || 1
            },
            clone: function() {
                return new r(this)
            },
            setSelected: function(e) {
                this.selected = e
            },
            isSelected: function() {
                return Boolean(this.selected)
            },
            setSnapped: function(e) {
                this.snapped = e
            },
            isSnapped: function() {
                return Boolean(this.snapped)
            },
            setPersistent: function(e) {
                this.persistent = e
            },
            isPersistent: function() {
                return this.persistent
            },
            getPermissions: function() {
                return n.isDefined(this.permissions) ? this.permissions : 0
            },
            isAllowed: function(e) {
                return e && 0 != (this.getPermissions() & e)
            },
            isInUse: function(e) {
                e = e || {};
                var t = n.isDefined(this.state) && null !== this.state,
                    i = e.keepUnsaved && t,
                    s = e.keepSelected && (this.isSelected() || this.isSnapped()),
                    r = e.keepPersistent && this.isPersistent();
                return i || s || r
            },
            isDeletable: function() {
                return this.PERMISSIONS.DELETE && this.isAllowed(this.PERMISSIONS.DELETE)
            },
            arePropertiesEditable: function() {
                return this.PERMISSIONS.EDIT_PROPERTIES && this.isAllowed(this.PERMISSIONS.EDIT_PROPERTIES)
            },
            isGeometryEditable: function() {
                return this.PERMISSIONS.EDIT_GEOMETRY && this.isAllowed(this.PERMISSIONS.EDIT_GEOMETRY)
            },
            merge: function(e) {
                this.parse(e),
                    _.extend(this, e),
                    this.originalValues && (this.originalValues = void 0)
            },
            getOriginalValue: function(e) {
                return this.originalValues && !_.isUndefined(this.originalValues[e]) ? this.originalValues[e] : this[e]
            },
            getAttributes: function() {
                return this
            },
            CLASS_NAME: "Waze.Model.Object"
        });
    _.extend(r.prototype, s),
        r.ALL_PERMISSIONS = 2147483647,
        e.exports = r
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(55),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function(e, t) {
        if (!e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !t || "object" !== (void 0 === t ? "undefined" : (0,
            s.default)(t)) && "function" != typeof t ? e : t
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.__esModule = !0;
    var s = i(462),
        r = n(s),
        o = i(466),
        a = n(o),
        l = i(55),
        u = n(l);
    t.default = function(e, t) {
        if ("function" != typeof t && null !== t)
            throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : (0,
                u.default)(t)));
        e.prototype = (0,
                a.default)(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (r.default ? (0,
                r.default)(e, t) : e.__proto__ = t)
    }
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = i(139),
        r = OpenLayers.Class(n, {
            subActions: null,
            initialize: function(e) {
                n.prototype.initialize.apply(this, [e]),
                    this.subActions = []
            },
            destroy: function() {
                for (var e = 0, t = this.subActions.length; e < t; e++)
                    this.subActions[e].destroy();
                this.subActions = null,
                    n.prototype.destroy.apply(this)
            },
            isLeaf: function() {
                return !1
            },
            doSubAction: function(e) {
                e.setModel(this.model);
                var t = e.doAction();
                return !1 !== t ? this.subActions.push(e) : e.destroy(),
                    t
            },
            doAction: function() {
                for (var e = !1, t = void 0, i = 0, n = this.subActions.length; i < n; i++)
                    t = !1 !== this.subActions[i].doAction(),
                    e = e || t
            },
            undoAction: function() {
                for (var e = this.subActions.length - 1; e >= 0; e--)
                    this.subActions[e].undoAction()
            },
            redoAction: function() {
                for (var e = 0, t = this.subActions.length; e < t; e++)
                    this.subActions[e].redoAction()
            },
            accept: function(e) {
                var t = e.getTraversalOrder(this),
                    i = e.beforeEnter(this),
                    n = !1;
                t !== s.Order.POST && (e.visit(this),
                        n = !0), !1 !== i && this.subActions.forEach(function(t) {
                        t.accept(e)
                    }),
                    n || e.visit(this),
                    e.afterLeave(this)
            },
            getBounds: function() {
                var e = void 0,
                    t = void 0,
                    i = void 0,
                    n = void 0;
                if (this.subActions.isEmpty())
                    return null;
                for (n = this.subActions.first().getBounds(),
                    e = n ? n.clone() : new OpenLayers.Bounds,
                    t = 1; t < this.subActions.length; t++)
                    i = this.subActions[t],
                    (n = i.getBounds()) && n.getWidth() > 0 && n.getHeight() > 0 && e.extend(n);
                return e
            },
            serialize: function(e, t) {
                return null
            },
            CLASS_NAME: "Waze.Action.CompositeAction"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    var n = i(13),
        s = OpenLayers.Class({
            model: null,
            initialize: function(e) {
                OpenLayers.Util.extend(this, e)
            },
            destroy: function() {
                this.model = null
            },
            isLeaf: function() {
                return !0
            },
            accept: function(e) {
                e.visit(this)
            },
            setModel: function(e) {
                this.model = e
            },
            undoSupported: function() {
                return n.isDefined(this.undoAction)
            },
            doAction: function() {},
            redoAction: function() {},
            undoAction: function() {},
            getBounds: function() {
                return null
            },
            CLASS_NAME: "Waze.Action"
        });
    s.TYPE = {
            ADD: "ADD",
            DELETE: "DELETE",
            UPDATE: "UPDATE",
            REPLACE: "REPLACE"
        },
        e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(13),
        s = {};
    s.EARTH_RADIUS_KM = 6371,
        s.EARTH_CIRC_KM = 40075,
        s.getHeading = function(e, t) {
            var i = Math.atan2(t.y - e.y, t.x - e.x).toDeg();
            return i = (360 + i) % 360,
                Math.round(i / 45) % 8
        },
        s.destinationOnPlane = function(e, t, i) {
            t = t.toRad();
            var n = 1e3 * s.EARTH_RADIUS_KM,
                r = Math.cos(t) * i / (n * Math.cos(e.lat.toRad())),
                o = Math.sin(t) * i / n;
            return new OL.LonLat(r.toDeg() + e.lon, o.toDeg() + e.lat)
        },
        s.distanceOnPlane = function(e, t) {
            var i = ((e.lat + t.lat) / 2).toRad(),
                n = (e.lon - t.lon).toRad(),
                r = (e.lat - t.lat).toRad();
            return 1e3 * s.EARTH_RADIUS_KM * Math.sqrt(r * r + Math.pow(Math.cos(i) * n, 2))
        },
        s.getPointAlongLine = function(e, t, i) {
            var r = e,
                o = t,
                a = void 0,
                l = void 0,
                u = 0,
                d = void 0,
                c = void 0,
                h = void 0;
            for (n.defined(i) ? (a = i,
                    u = s.getPointEdge(r, i)) : a = r[u]; u < r.length - 1;) {
                if (l = r[u + 1],
                    c = a.distanceTo(l), !(o - c > 0)) {
                    d = o / c,
                        a = new OpenLayers.Geometry.Point((1 - d) * a.x + d * l.x, (1 - d) * a.y + d * l.y),
                        h = Math.atan2(a.y - l.y, a.x - l.x);
                    break
                }
                a = l,
                    o -= c,
                    u++
            }
            return {
                point: a,
                angle: h
            }
        },
        s.getDistanceToPointOnLine = function(e, t) {
            for (var i = e.distanceTo(t, {
                    details: !0
                }).line, n = new OL.Geometry.Point(i.x1, i.y1), s = new OL.Geometry.Point(i.x2, i.y2), r = 0, o = e.components, a = o.length, l = 0; r < a - 1; r++) {
                if (o[r].equals(s) && o[r + 1].equals(n) || o[r].equals(n) && o[r + 1].equals(s))
                    return l += o[r].distanceTo(t);
                l += o[r].distanceTo(o[r + 1])
            }
            return l
        },
        s.splitLineStringWithPolygon = function(e, t) {
            var i = t.distanceTo(e, {
                    details: !0
                }),
                n = new OL.Geometry.Point(i.x0, i.y0);
            if (i.distance > 0)
                return null;
            i = e.distanceTo(n, {
                details: !0
            });
            var s = i.line,
                r = new OL.Geometry.Point(s.x1, s.y1),
                o = new OL.Geometry.Point(s.x2, s.y2),
                a = e.components.slice(),
                l = a.length,
                u = 0;
            for (u; u < l - 1 && !(a[u].equals(o) && a[u + 1].equals(r) || a[u].equals(r) && a[u + 1].equals(o)); u++)
            ;
            var d = [n.clone()].concat(a.splice(u + 1));
            return a.push(n.clone()), [new OL.Geometry.LineString(a), new OL.Geometry.LineString(d)]
        },
        s.getPointEdge = function(e, t, i) {
            var s = 0,
                r = e.length - 1,
                o = !1,
                a = void 0,
                l = Number.POSITIVE_INFINITY,
                u = 0;
            n.defined(i) || (i = 0);
            do {
                a = OpenLayers.Geometry.distanceToSegment(t, {
                        x1: e[s].x,
                        y1: e[s].y,
                        x2: e[s + 1].x,
                        y2: e[s + 1].y
                    }).distance,
                    a < l && (l = a,
                        u = s),
                    a <= i && (o = !0),
                    s++
            } while (!o && s < r);
            return o || (s = u),
                s - 1
        },
        s.toGeoJSON = function(e) {
            return OL.Format.GeoJSON.prototype.extract.geometry.apply(OL.Format.GeoJSON.prototype, [e])
        },
        s.parse = function(e) {
            var t = OL.Format.GeoJSON.prototype.parseGeometry(e);
            return s.project(t),
                t
        },
        s.project = function(e) {
            return e.transform(W.Config.map.projection.remote, W.Config.map.projection.local),
                e
        },
        s.unproject = function(e) {
            return e.transform(W.Config.map.projection.local, W.Config.map.projection.remote),
                e
        },
        OL.Geometry.LineString.prototype.distanceTo = function(e, t) {
            var i = !(t && !1 === t.edge),
                n = i && t && t.details,
                s = void 0,
                r = {},
                o = void 0,
                a = Number.POSITIVE_INFINITY,
                l = void 0,
                u = void 0;
            if (e instanceof OpenLayers.Geometry.Point) {
                var d = this.getSortedSegments(),
                    c = e.x,
                    h = e.y,
                    p = void 0;
                for (l = 0,
                    u = d.length; l < u; ++l)
                    if (p = d[l],
                        s = OpenLayers.Geometry.distanceToSegment(e, p),
                        s.distance < a) {
                        if (a = s.distance,
                            r = s,
                            o = p,
                            0 === a)
                            break
                    } else if (p.x2 > c && (h > p.y1 && h < p.y2 || h < p.y1 && h > p.y2))
                    break;
                r = n ? {
                    distance: r.distance,
                    x0: r.x,
                    y0: r.y,
                    x1: c,
                    y1: h,
                    line: o
                } : r.distance
            } else if (e instanceof OpenLayers.Geometry.LineString) {
                var f = this.getSortedSegments(),
                    g = e.getSortedSegments(),
                    m = void 0,
                    v = void 0,
                    _ = void 0,
                    y = void 0,
                    b = void 0,
                    E = g.length,
                    w = {
                        point: !0
                    };
                e: for (l = 0,
                    u = f.length; l < u; ++l) {
                    m = f[l],
                        y = m.x1,
                        b = m.y1;
                    for (var S = 0; S < E; ++S) {
                        if (v = g[S],
                            _ = OpenLayers.Geometry.segmentsIntersect(m, v, w)) {
                            a = 0,
                                r = {
                                    distance: 0,
                                    x0: _.x,
                                    y0: _.y,
                                    x1: _.x,
                                    y1: _.y
                                };
                            break e
                        }
                        s = OpenLayers.Geometry.distanceToSegment({
                                x: y,
                                y: b
                            }, v),
                            s.distance < a && (a = s.distance,
                                r = {
                                    distance: a,
                                    x0: y,
                                    y0: b,
                                    x1: s.x,
                                    y1: s.y
                                })
                    }
                }
                if (n || (r = r.distance),
                    0 !== a && m) {
                    s = e.distanceTo(new OpenLayers.Geometry.Point(m.x2, m.y2), t);
                    var M = n ? s.distance : s;
                    M < a && (r = n ? {
                        distance: a,
                        x0: s.x1,
                        y0: s.y1,
                        x1: s.x0,
                        y1: s.y0
                    } : M)
                }
            } else
                r = e.distanceTo(this, t),
                n && (r = {
                    distance: r.distance,
                    x0: r.x1,
                    y0: r.y1,
                    x1: r.x0,
                    y1: r.y0
                });
            return r
        },
        OL.Geometry.Collection.prototype.distanceTo = function(e, t) {
            for (var i = !(t && !1 === t.edge), n = i && t && t.details, s = void 0, r = void 0, o = void 0, a = Number.POSITIVE_INFINITY, l = 0, u = this.components.length; l < u && (s = this.components[l].distanceTo(e, t), !((o = n ? s.distance : s) < a && (a = o,
                    r = s,
                    r.model = this.components[l].model,
                    0 === a))); ++l)
            ;
            return r
        },
        OL.Geometry.Point.prototype.toLonLat = function() {
            return new OL.LonLat(this.x, this.y)
        },
        OL.LonLat.prototype.toPoint = function() {
            return new OL.Geometry.Point(this.lon, this.lat)
        },
        OL.Geometry.LinearRing.prototype.getCentroid = function() {
            if (this.components) {
                var e = this.components.length;
                if (e > 0 && e <= 2)
                    return this.components[0].clone();
                if (e > 2) {
                    var t = 0,
                        i = 0,
                        n = this.components[0].x,
                        s = this.components[0].y,
                        r = -1 * this.getArea(),
                        o = void 0,
                        a = void 0,
                        l = void 0;
                    if (0 !== r) {
                        for (o = 0; o < e - 1; o++) {
                            var u = this.components[o],
                                d = this.components[o + 1];
                            t += (u.x + d.x - 2 * n) * ((u.x - n) * (d.y - s) - (d.x - n) * (u.y - s)),
                                i += (u.y + d.y - 2 * s) * ((u.x - n) * (d.y - s) - (d.x - n) * (u.y - s))
                        }
                        a = n + t / (6 * r),
                            l = s + i / (6 * r)
                    } else {
                        for (o = 0; o < e - 1; o++)
                            t += this.components[o].x,
                            i += this.components[o].y;
                        a = t / (e - 1),
                            l = i / (e - 1)
                    }
                    return new OpenLayers.Geometry.Point(a, l)
                }
                return null
            }
        },
        s.geometryToGeoJSON = function(e) {
            return OpenLayers.Format.GeoJSON.prototype.extract.geometry.apply(OpenLayers.Format.GeoJSON.prototype, [e])
        },
        s.pointToSquarePolygon = function(e, t) {
            var i = s.unproject(e.clone()),
                n = OL.Util.destinationVincenty({
                    lon: i.x,
                    lat: i.y
                }, 45, Math.sqrt(2 * Math.pow(t / 2, 2))),
                r = i.x - n.lon,
                o = i.y - n.lat,
                a = new OL.Geometry.LinearRing([new OL.Geometry.Point(i.x - r, i.y - o), new OL.Geometry.Point(i.x + r, i.y - o), new OL.Geometry.Point(i.x + r, i.y + o), new OL.Geometry.Point(i.x - r, i.y + o)]),
                l = new OL.Geometry.Polygon([a]);
            return s.project(l)
        },
        s.polygonToPoint = function(e) {
            var t = e.getBounds().getCenterLonLat();
            return new OL.Geometry.Point(t.lon, t.lat)
        },
        e.exports = s
}, function(e, t, i) {
    e.exports = {
        default: i(421),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(55),
        r = n(s),
        o = i(91),
        a = n(o),
        l = {};
    l.isUndefined = function(e) {
            return _.isUndefined(e)
        },
        l.isDefined = function(e) {
            return !_.isUndefined(e)
        },
        l.defined = function(e) {
            return void 0 !== e && null !== e
        },
        l.localStorage = {
            get: function(e) {
                try {
                    var t = window.localStorage.getItem(e);
                    return t ? JSON.parse(t) : null
                } catch (e) {
                    return null
                }
            },
            set: function(e, t) {
                try {
                    return t = (0,
                            a.default)(t),
                        window.localStorage.setItem(e, t), !0
                } catch (e) {
                    return !1
                }
            }
        },
        l.copyAttributes = function(e, t, i) {
            for (var n = 0, s = i.length; n < s; n++)
                l.isDefined(t[i[n]]) && (e[i[n]] = t[i[n]])
        },
        l.protect = function(e, t, i) {
            try {
                t.call(i)
            } catch (t) {
                throw $.post(Waze.Config.paths.logger, {
                        action: e,
                        type: t.name,
                        message: t.message,
                        trace: t.stack
                    }),
                    t
            }
        },
        l.is = function(e, t) {
            var i = Object.prototype.toString.call(t).slice(8, -1);
            return void 0 !== t && null !== t && i === e
        },
        l.metricToImperial = {
            km: "mi"
        },
        l.deepClone = function(e) {
            if ("object" === (void 0 === e ? "undefined" : (0,
                    r.default)(e)) && null !== e) {
                if (Array.isArray(e))
                    return e.map(function(e) {
                        return l.deepClone(e)
                    });
                if ("function" == typeof e.clone)
                    return e.clone();
                if ("function" == typeof e.__clone)
                    return e.__clone();
                var t = {};
                for (var i in e)
                    e.hasOwnProperty(i) && (t[i] = l.deepClone(e[i]));
                return t
            }
            return e
        },
        e.exports = l
}, , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(10),
        u = n(l),
        d = OL.Class(u.default, {
            initialize: function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                this.object = e,
                    this.newAttributes = t,
                    u.default.prototype.initialize.apply(this, [i]),
                    this.oldAttributes = {},
                    this.object.writableAttributes ? this.newAttributes = _.pick(this.newAttributes, this.object.writableAttributes) : this.newAttributes = _.clone(this.newAttributes),
                    this.changed = !1,
                    this.stateChanged = !1,
                    this.object.attributes ? this.attributes = this.object.attributes : this.attributes = this.object
            },
            doAction: function() {
                this.repository = this.model.getRepository(this.object.type);
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            a.default)((0,
                            r.default)(this.newAttributes)); !(e = (n = s.next()).done); e = !0) {
                        var o = n.value,
                            l = this.newAttributes[o];
                        this.attributes[o] !== l && (this._keepOriginal(o),
                            this.oldAttributes[o] = this.attributes[o],
                            this.attributes[o] = l,
                            this.changed = !0)
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
                return !!this.changed && (this.object.state || (this.object.state = OL.State.UPDATE,
                        this.stateChanged = !0),
                    this.repository.changed(this.object), !0)
            },
            _keepOriginal: function(e) {
                this.object.keepOriginal && this.object.keepOriginal[e] && (this.object.originalValues || (this.object.originalValues = {}),
                    _.isUndefined(this.object.originalValues[e]) && (this.object.originalValues[e] = this.attributes[e]))
            },
            undoAction: function() {
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            a.default)((0,
                            r.default)(this.oldAttributes)); !(e = (n = s.next()).done); e = !0) {
                        var o = n.value,
                            l = this.oldAttributes[o];
                        this.attributes[o] = l
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
                return this.stateChanged && (this.object.state = null),
                    this.repository.changed(this.object)
            },
            redoAction: function() {
                this.stateChanged && (this.object.state = OL.State.UPDATE);
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            a.default)((0,
                            r.default)(this.newAttributes)); !(e = (n = s.next()).done); e = !0) {
                        var o = n.value,
                            l = this.newAttributes[o];
                        this.attributes[o] = l
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
                return this.repository.changed(this.object)
            },
            serialize: function() {
                var e = this.newAttributes;
                return e.id = this.object.getID(), {
                    _objectType: this.object.type,
                    action: u.default.TYPE.UPDATE,
                    attributes: e
                }
            },
            CLASS_NAME: "Waze.Action.UpdateObject"
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return (e.temporary ? I18n.t("user.temporary") : e.userName) + "(" + (e.isStaffUser() ? "staff" : e.normalizedLevel) + ")"
    }
    var s = i(68),
        r = i(74),
        o = {};
    o.safe_t = function(e, t) {
            var i = {},
                n = void 0;
            return Object.forEach(t, function(e, t) {
                    i[e] = "%{" + e + "}"
                }),
                n = o.escape(I18n.t(e, i)),
                Object.forEach(t, function(e, t) {
                    t.htmlSafe || (t = o.escape(t)),
                        n = n.replace(new RegExp("%\\{" + e + "\\}"), t)
                }),
                n
        },
        o.safeString = function(e) {
            var t = new String(e);
            return t.htmlSafe = !0,
                t
        },
        o.contentTag = function(e, t) {
            return t = o.escape(t),
                this.safeString("<" + e + ">" + t + "</" + e + ">")
        },
        o.copyShortcut = function() {
            return $.browser.mac ? "⌘+C" : "Ctrl+C"
        },
        o.link = function(e, t, i) {
            e = o.escape(e);
            var n = "";
            return i = i || {},
                Object.forEach(i, function(e, t) {
                    n += " " + o.escape(e) + '="' + o.escape(t) + '"'
                }),
                n += ' href="' + window.encodeURI(t) + '"',
                this.safeString("<a" + n + ">" + e + "</a>")
        },
        o.formInput = function(e, t, i, n, s, r) {
            t = o.escape(t),
                i = o.escape(i),
                e = o.escape(e);
            var a = "<input type='" + e + "' name='" + i + "' value='" + n + "' id='" + i + "-" + n + "'";
            return n === s && (a += " checked "), !1 === r && (a += " disabled "),
                a += "/><label for='" + i + "-" + n + "'>" + t + "</label>"
        },
        o.radio = function(e, t, i, n, s) {
            return o.formInput("radio", e, t, i, n, s)
        },
        o.checkbox = function(e, t, i, n, s) {
            return o.formInput("checkbox", e, t, i, n, s)
        },
        o.option = function(e, t, i, n, s) {
            var r = "<option value='" + o.escape(t) + "'";
            return i instanceof Array || t !== i && (n || parseInt(t, 10) !== parseInt(i, 10)) || (r += " selected"),
                s && (r += " disabled"),
                r += ">" + o.escape(e) + "</option>"
        },
        o.categoryOption = function(e, t) {
            return o.option(I18n.t("venues.categories." + t), t, e[t] ? t : null, !0)
        },
        o.roadTypeOption = function(e, t) {
            return o.option(I18n.t("segment.road_types." + t), t, e.attributes.roadType)
        },
        o.directionOption = function(e, t) {
            return o.option(I18n.t("segment.direction." + t), t, e.attributes.direction)
        },
        o.formatDate = function(e) {
            return e ? new Date(e).toDateString() : ""
        },
        o.durationString = function(e, t) {
            var i = (t - e) / 1e3;
            return W.brara.ViewHelpers.getTimeFromSeconds.call(this, i)
        },
        o.timeDistanceInWordsFromNow = function() {
            return W.brara.ViewHelpers.timeDistanceInWordsFromNow.apply(this, arguments)
        },
        o.dateOnlyString = function(e) {
            return e ? I18n.l("date.formats.long", e) : ""
        },
        o.dateString = function(e) {
            function t(e, i) {
                return e.toString().length < i ? t("0" + e, i) : e
            }
            var i = new Date(e),
                n = void 0;
            return e ? (n = o.dateOnlyString.apply(this, arguments),
                n += ", " + t(i.getHours(), 2) + ":" + t(i.getMinutes(), 2)) : ""
        },
        o.lengthString = function(e, t) {
            t = _.defaults(t || {}, {
                units: r.UNIT.METER,
                translationKey: "measurements.length"
            });
            var i = r.UNIT.KILOMETER,
                n = r.getLocalizedDisplayValue(e, t.units, i);
            n < 1 && (i = r.UNIT.METER,
                    n = r.getLocalizedDisplayValue(e, t.units, i)),
                n = n.toFixed(2) / 1;
            var s = r.localizeUnit(i);
            return I18n.t(t.translationKey + "." + s, {
                count: n
            })
        },
        o.speedString = function(e) {
            var t = r.localizeUnit(r.UNIT.KILOMETER),
                i = "";
            return _.isUndefined(e) || (i = r.getLocalizedValue(e, r.UNIT.KILOMETER),
                    i = i.toFixed(2)),
                I18n.t("measurements.speed." + t, {
                    speed: i
                })
        },
        o.areaString = function(e) {
            var t = Math.sqrt(e),
                i = r.getLocalizedDisplayValue(t, r.UNIT.METER, r.UNIT.KILOMETER),
                n = r.localizeUnit(r.UNIT.KILOMETER);
            return i = (i * i).toFixed(2),
                I18n.t("measurements.area." + n + "_squared", {
                    area: i
                })
        },
        o.userProfileLink = function(e) {
            return !e || e.temporary ? null : W.Config.user_profile.url + window.encodeURIComponent(e.userName)
        },
        o.formatUserName = function(e, t) {
            null == t && (t = W.model);
            var i = t.users.get(e);
            return i ? n(i) : e
        },
        o.userProfile = function(e, t) {
            null == t && (t = W.model);
            var i = t.users.get(e),
                n = this.userProfileLink(i),
                s = this.formatUserName(e, t);
            return null !== n && W.Config.user_profile.enable ? this.link(s, n, {
                target: "_blank"
            }) : o.escape(s)
        },
        o.formatRank = function(e) {
            return e === s.prototype.StaffRank ? I18n.t("edit.segment.lock_levels.staff") : s.normalizeLevel(e)
        },
        o.segmentRankOption = function(e, t, i) {
            var n = void 0,
                s = !1;
            return null === t ? (n = I18n.t("edit.segment.lock_levels.automatic", {
                        rank: o.formatRank(e.attributes.rank)
                    }),
                    i || (s = !0)) : n = o.formatRank(t),
                o.option(n, t, e.attributes.lockRank, !1, s)
        },
        o.getDisplayUnitValue = function(e, t, i) {
            return e = r.getLocalizedValue(e, t),
                i && (e = Math.round(e)),
                e
        },
        o.shortcutMaskToKeys = function(e) {
            var t = "",
                i = void 0;
            return ["alt", "ctrl", "shift"].forEach(function(n) {
                    i = n + "Key",
                        e[i] && (t += "<kbd class='" + o.escape(i) + "'><span>" + o.escape(i) + "</span></kbd> + ")
                }),
                t
        },
        o.getShortcutKey = function(e) {
            var t = Waze.accelerators.SpecialKeys[e.keyCode];
            return t || (t = String.fromCharCode(e.keyCode)),
                t
        },
        o.formatDays = function(e) {
            return o._groupDays(e).map(function(e) {
                return e.length > 1 ? I18n.t("date.abbr_day_names")[e[0]] + "-" + I18n.t("date.abbr_day_names")[e.last()] : I18n.t("date.abbr_day_names")[e[0]]
            }).join(",")
        },
        o.formatMonthRange = function(e, t) {
            if (!e && !t)
                return "";
            if (t < e)
                return "";
            if (e && !t)
                return I18n.strftime(e, I18n.t("formats.date.month_range.end_missing"));
            if (t && !e)
                return I18n.strftime(t, I18n.t("formats.date.month_range.start_missing"));
            var i = e.getFullYear() === t.getFullYear(),
                n = i && e.getMonth() === t.getMonth(),
                s = I18n.strftime(e, "%b"),
                r = I18n.strftime(e, "%Y"),
                o = I18n.strftime(t, "%b"),
                a = I18n.strftime(t, "%Y"),
                l = void 0;
            return l = i ? n ? "formats.date.month_range.single_year_single_month" : "formats.date.month_range.single_year_multi_month" : "formats.date.month_range.multi_year",
                I18n.t(l, {
                    startMonth: s,
                    startYear: r,
                    endMonth: o,
                    endYear: a
                })
        },
        o.formatOpeningHour = function(e) {
            var t = o.formatDays(e.get("days"));
            return e.isAllDay() ? t += " " + I18n.t("edit.landmark.opening_hours.time_span.all_day") : t += " " + e.get("fromHour") + "-" + e.get("toHour"),
                t
        },
        o._groupDays = function(e) {
            var t = [],
                i = [],
                n = e.sort(),
                s = void 0;
            return "monday" === I18n.t("date.first_day") && 0 === n[0] && (n.shift(),
                    n.push(0)),
                s = n[0],
                n.forEach(function(e, r) {
                    Math.abs(e - s) % 6 <= 1 ? i.push(e) : (t.push(i),
                            i = [e]),
                        r === n.length - 1 && t.push(i),
                        s = e
                }),
                t
        },
        o.formatAddress = function(e) {
            if (e.get("isEmpty"))
                return I18n.t("edit.landmark.no_address");
            var t = [],
                i = e.get("street");
            null !== i && (i.isEmpty ? t.push(I18n.t("edit.address.no_street")) : t.push(i.name));
            var n = e.get("city");
            n.isEmpty() ? t.push(I18n.t("edit.address.no_city")) : t.push(n.attributes.name);
            var s = e.get("state");
            s.model.hasStates() && !s.isEmpty ? t.push(s.name) : t.push(e.get("country").name);
            var r = t.join(", "),
                o = e.get("houseNumber");
            return null !== o && (r = o + " " + r),
                r
        },
        o.formatVenueCategories = function(e) {
            return e = e.map(function(e) {
                    return I18n.t("venues.categories." + e)
                }),
                e.sort().join(", ")
        },
        o.formatVenueName = function(e) {
            return e || I18n.t("edit.landmark.unnamed")
        },
        o.formatVenueUpdateRequestId = function(e) {
            var t = String(e),
                i = t.split("/");
            return i[i.length - 1]
        },
        o.getSaveErrorTitle = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "save.error_types.default.title",
                i = I18n.t("save.error_types"),
                n = i[e];
            return n && n.title || I18n.t(t)
        },
        o.formatYesNo = function(e) {
            return !0 === e ? I18n.t("formats.boolean.is_true") : I18n.t("formats.boolean.is_false")
        },
        o.escape = function(e) {
            return ("" + e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/\//g, "&#47;")
        },
        o.cleanValue = function(e) {
            switch (e) {
                case null:
                case void 0:
                    return "";
                case !0:
                case !1:
                    return "" + e;
                default:
                    return e
            }
        },
        e.exports = o
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(174),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function(e, t, i) {
        return t in e ? (0,
                s.default)(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i,
            e
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.__esModule = !0;
    var s = i(510),
        r = n(s),
        o = i(12),
        a = n(o);
    t.default = function() {
        function e(e, t) {
            var i = [],
                n = !0,
                s = !1,
                r = void 0;
            try {
                for (var o, l = (0,
                        a.default)(e); !(n = (o = l.next()).done) && (i.push(o.value), !t || i.length !== t); n = !0)
                ;
            } catch (e) {
                s = !0,
                    r = e
            } finally {
                try {
                    !n && l.return && l.return()
                } finally {
                    if (s)
                        throw r
                }
            }
            return i
        }
        return function(t, i) {
            if (Array.isArray(t))
                return t;
            if ((0,
                    r.default)(Object(t)))
                return e(t, i);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }()
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class({
        className: null,
        $div: null,
        events: null,
        initialize: function(e, t) {
            this.className = e,
                this.moveWithTransform = Boolean(t),
                this.$div = $("<div />").addClass(e),
                this.div = this.$div.get(0),
                this.imageDiv = this.$div.get(0)
        },
        destroy: function() {
            this.erase(),
                this.$div = null
        },
        clone: function() {
            return new n(this.className)
        },
        draw: function(e) {
            return this.moveWithTransform ? (this.$div.css({
                        transform: "translate(" + e.x + "px, " + e.y + "px)"
                    }),
                    this.$div.css({
                        position: "absolute"
                    })) : this.$div.css({
                    position: "absolute",
                    left: e.x,
                    top: e.y
                }),
                this.$div.get(0)
        },
        moveTo: function(e) {
            null !== e && (this.px = e),
                null === this.px ? this.display(!1) : this.moveWithTransform ? this.$div.css({
                    transform: "translate(" + this.px.x + "px, " + this.px.y + "px)"
                }) : this.$div.css({
                    left: this.px.x,
                    top: this.px.y
                })
        },
        erase: function() {
            this.$div.remove()
        },
        display: function(e) {
            this.$div.toggle(e)
        },
        isDrawn: function() {
            return Boolean(this.$div.parent().length)
        },
        bringToFront: function() {
            if (this.isDrawn()) {
                var e = this.$div.parent();
                this.$div.detach().appendTo(e)
            }
        },
        forceReflow: function() {
            return this.$div.get(0).offsetWidth
        },
        CLASS_NAME: "Waze.DivIcon"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";
    e.exports = {
        ADDED: "objectsadded",
        CHANGED: "objectschanged",
        REMOVED: "objectsremoved",
        SYNCED: "objectssynced",
        UPDATED: "objectsupdated"
    }
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(482),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = s.default || function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var i = arguments[t];
            for (var n in i)
                Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n])
        }
        return e
    }
}, , function(e, t, i) {
    "use strict";
    var n = i(6),
        s = i(13),
        r = OpenLayers.Class(OpenLayers.Feature.Vector, n, {
            initialize: function(e, t) {
                this.attributes = e || {},
                    t && t.parse && e && this.parse(e),
                    e && (this.attributes = OL.Util.extend(this.attributes, e)),
                    _.defaults(this.attributes, _.result(this, "defaults"))
            },
            merge: function(e) {
                this.parse(e),
                    OpenLayers.Util.extend(this.attributes, e),
                    this.originalValues && (this.originalValues = void 0)
            },
            getOriginalValue: function(e) {
                return this.originalValues && !_.isUndefined(this.originalValues[e]) ? this.originalValues[e] : this.attributes[e]
            },
            getID: function() {
                return this.attributes.id
            },
            setID: function(e) {
                this.attributes.id = e
            },
            getVersion: function() {
                return this.attributes.version || n.prototype.getVersion.apply(this)
            },
            clone: function() {
                var e = null,
                    t = _.extend({}, this.attributes);
                this.attributes.geometry && (e = this.attributes.geometry.clone()),
                    t.geometry = e;
                var i = new r(t);
                return i.state = this.state,
                    i
            },
            getPermissions: function() {
                return s.isDefined(this.attributes.permissions) ? this.attributes.permissions : 0
            },
            getAttributes: function() {
                return this.attributes
            },
            CLASS_NAME: "Waze.Feature.Vector"
        });
    Object.defineProperty(r.prototype, "geometry", {
            get: function() {
                if (this.attributes)
                    return this.attributes.geometry
            },
            set: function(e) {
                this.attributes.geometry = e
            }
        }),
        e.exports = r
}, function(e, t, i) {
    "use strict";

    function n(e, t) {
        return e = "./" + e + ".hamlc",
            t = _.extend({}, o, t),
            r(e)(t)
    }
    var s = i(16),
        r = i(423);
    r.keys().map(r);
    var o = {
        t: I18n.t.bind(I18n),
        l: I18n.l.bind(I18n),
        h: s,
        safe_t: s.safe_t,
        __htmlEscape: s.escape,
        __cleanValue: s.cleanValue
    };
    o.renderPartial = n,
        Marionette.Renderer.render = function(e, t) {
            return "function" == typeof e ? e(t) : n(e, t)
        },
        e.exports = {
            getHTML: n
        }
}, , function(e, t, i) {
    "use strict";
    var n = {
        _getManifestsWith: function(e) {
            return W.Config.enabled_modules.map(function(t) {
                try {
                    return i(451)("./" + t + "/Manifest")[e]
                } catch (e) {
                    throw new Error("Error loading module " + t + ":\nManifest file does not exist.")
                }
            }).filter(function(e) {
                return void 0 !== e
            })
        },
        getEntryPoints: function() {
            return this._getManifestsWith("entryPoint").map(function(e) {
                return e.class[e.callback].bind(e.class)
            })
        },
        getMenus: function() {
            return this._getManifestsWith("menu")
        },
        getRepositories: function() {
            return this._getManifestsWith("feature")
        },
        getLayers: function() {
            return _.flatten(this._getManifestsWith("layers"))
        },
        getLayerSwitcherConfig: function() {
            return this._getManifestsWith("layerSwitcher")
        },
        getFeatureEditors: function() {
            return this._getManifestsWith("feature").filter(function(e) {
                return void 0 !== e.featureEditorClass
            }).map(function(e) {
                return _.pick(e, "featureType", "featureEditorClass")
            })
        },
        getModels: function() {
            return this._getManifestsWith("feature").filter(function(e) {
                return void 0 !== e.modelClass
            }).map(function(e) {
                return _.pick(e, "repositoryName", "modelClass")
            })
        }
    };
    n.LAYER_TYPE = {
            RASTER: "raster",
            FEATURE: "feature",
            MARKER: "marker"
        },
        e.exports = n
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(6),
        u = n(l),
        d = i(75),
        c = n(d),
        h = i(23),
        p = n(h),
        f = i(11),
        g = n(f),
        m = i(76),
        v = n(m),
        y = i(186),
        b = n(y),
        E = i(15),
        w = n(E),
        S = i(13),
        M = n(S),
        C = i(39),
        T = OL.Class(p.default, {
            defaults: function() {
                return {
                    type: 1,
                    roadType: 1,
                    fromNodeID: null,
                    toNodeID: null,
                    crossroadID: null,
                    fwdDirection: !0,
                    revDirection: !1,
                    fwdMaxSpeed: null,
                    revMaxSpeed: null,
                    fwdToll: null,
                    revToll: null,
                    hasHNs: !1,
                    fwdMaxSpeedUnverified: !1,
                    revMaxSpeedUnverified: !1,
                    fwdTurnsLocked: !0,
                    revTurnsLocked: !0,
                    level: 0,
                    allowNoDirection: !0,
                    rank: 0,
                    lockRank: null,
                    permissions: u.default.ALL_PERMISSIONS & ~this.PERMISSIONS.EDIT_ROUTING_ROAD_TYPES,
                    routingRoadType: null,
                    flags: 0,
                    fwdFlags: 0,
                    revFlags: 0,
                    primaryStreetID: null,
                    fromCrossroads: [],
                    toCrossroads: [],
                    streetIDs: [],
                    restrictions: []
                }
            },
            nested: {
                geometry: OL.Geometry,
                restrictions: C.SegmentRestriction
            },
            FLAG_ATTRIBUTES: {
                tunnel: {
                    mask: "flags",
                    flag: b.default.FLAGS.TUNNEL
                },
                unpaved: {
                    mask: "flags",
                    flag: b.default.FLAGS.UNPAVED
                },
                headlights: {
                    mask: "flags",
                    flag: b.default.FLAGS.HEADLIGHTS
                },
                nearbyHOV: {
                    mask: "flags",
                    flag: b.default.FLAGS.NEARBY_HOV
                },
                fwdSpeedCamera: {
                    mask: "fwdFlags",
                    flag: b.default.FWD.SPEED_CAMERA
                },
                revSpeedCamera: {
                    mask: "revFlags",
                    flag: b.default.REV.SPEED_CAMERA
                }
            },
            initialize: function(e) {
                p.default.prototype.initialize.apply(this, arguments)
            },
            getFlagAttributes: function() {
                var e = {},
                    t = !0,
                    i = !1,
                    n = void 0;
                try {
                    for (var s, o = (0,
                            a.default)((0,
                            r.default)(this.FLAG_ATTRIBUTES)); !(t = (s = o.next()).done); t = !0) {
                        var l = s.value;
                        e[l] = this.getFlagAttribute(l)
                    }
                } catch (e) {
                    i = !0,
                        n = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return e
            },
            getFlagAttribute: function(e) {
                var t = this.FLAG_ATTRIBUTES[e],
                    i = this.attributes[t.mask];
                return new c.default(i).isEnabled(t.flag)
            },
            merge: function() {
                return delete this.attributes.origIDs,
                    p.default.prototype.merge.apply(this, arguments)
            },
            copyAttributes: function(e) {
                var t = this.attributes,
                    i = t.geometry;
                OpenLayers.Util.extend(t, e.attributes);
                var n = !0,
                    s = !1,
                    o = void 0;
                try {
                    for (var l, u = (0,
                            a.default)((0,
                            r.default)(t)); !(n = (l = u.next()).done); n = !0) {
                        var d = l.value,
                            c = t[d];
                        c instanceof Array && (t[d] = c.slice(0))
                    }
                } catch (e) {
                    s = !0,
                        o = e
                } finally {
                    try {
                        !n && u.return && u.return()
                    } finally {
                        if (s)
                            throw o
                    }
                }
                delete t.origIDs,
                    t.geometry = i
            },
            getAddress: function() {
                var e = this,
                    t = void 0,
                    i = void 0,
                    n = void 0,
                    s = void 0,
                    r = this.model.streets.get(this.attributes.primaryStreetID);
                return r && (t = this.model.cities.get(r.cityID)),
                    t && (i = this.model.states.get(t.attributes.stateID)),
                    i && (n = this.model.countries.get(t.attributes.countryID)),
                    t && i && n ? s = this.attributes.streetIDs.map(function(t) {
                        return e.model.streets.get(t)
                    }) : r = null, {
                        street: r,
                        city: t,
                        state: i,
                        country: n,
                        altStreets: s
                    }
            },
            getAddressDetails: function() {
                var e = this.getAddress(),
                    t = {};
                return e.street ? (t.streetName = this._getStreetName(e),
                    t.cityName = this._getCityName(e),
                    t.hasState = this._getHasState(e),
                    t.stateName = this._getStateName(e),
                    t.countryName = this._getCountryName(e),
                    t) : null
            },
            _getStreetName: function(e) {
                return e.street && !e.street.isEmpty ? e.street.name : I18n.t("edit.address.no_street")
            },
            getStreetName: function() {
                return this._getStreetName(this.getAddress())
            },
            _getCityName: function(e) {
                return e.city.isEmpty() ? I18n.t("edit.address.no_city") : e.city.attributes.name
            },
            _getStateName: function(e) {
                return e.state.name
            },
            _getCountryName: function(e) {
                return e.country.name
            },
            _getHasState: function(e) {
                return this.model.hasStates() && !e.state.isDefault
            },
            getCenter: function() {
                for (var e = this.geometry.getLength(), t = e / 2, i = e, n = 1, s = this.geometry.components.length; n < s;) {
                    if ((i -= this.geometry.components[n - 1].distanceTo(this.geometry.components[n])) <= t)
                        break;
                    n++
                }
                var r = this.geometry.components[n - 1],
                    o = this.geometry.components[n],
                    a = Math.atan2(o.y - r.y, o.x - r.x),
                    l = t - i,
                    u = new OpenLayers.Geometry.Point(r.x, r.y);
                return u.x += l * Math.cos(a),
                    u.y += l * Math.sin(a),
                    u
            },
            getArrowPoints: function(e, t, i) {
                var n = [],
                    s = this.geometry.components,
                    r = 0,
                    o = 0;
                if (!M.default.defined(e))
                    return [];
                t && t < e && (r += e - t);
                for (var a = s[o]; o < s.length - 1;) {
                    var l = s[o + 1],
                        u = a.distanceTo(l);
                    if (i && o === s.length - 2 && (u -= i),
                        r + u < e)
                        r += u,
                        o++,
                        a = l;
                    else {
                        var d = Math.atan2(l.y - a.y, l.x - a.x),
                            c = e - r;
                        a = new OpenLayers.Geometry.Point(a.x, a.y),
                            a.move(c * Math.cos(d), c * Math.sin(d)),
                            n.push([a.clone(), d]),
                            r = 0
                    }
                }
                return n
            },
            getSubSegment: function(e, t) {
                var i = 0,
                    n = this.geometry.components,
                    s = [],
                    r = 0;
                t && (n = n.clone().reverse());
                var o = n.first();
                for (s.push(new OpenLayers.Geometry.Point(o.x, o.y)); i < e && r < n.length - 1;) {
                    var a = n[r + 1],
                        l = o.distanceTo(a);
                    if (i + l < e)
                        s.push(new OpenLayers.Geometry.Point(a.x, a.y)),
                        i += l,
                        o = a,
                        r++;
                    else {
                        var u = e - i,
                            d = Math.atan2(a.y - o.y, a.x - o.x);
                        o = new OpenLayers.Geometry.Point(o.x, o.y),
                            o.move(u * Math.cos(d), u * Math.sin(d)),
                            s.push(o),
                            i = e
                    }
                }
                return new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString(s))
            },
            clone: function() {
                var e = _.extend({}, this.attributes);
                this.attributes.geometry && (e.geometry = this.attributes.geometry.clone());
                var t = new T(e);
                return this.attributes.streetIDs && (t.attributes.streetIDs = this.attributes.streetIDs.clone()),
                    t
            },
            splitByGeoms: function(e) {
                var t = this.clone(),
                    i = [];
                return delete t.geometry,
                    e.forEach(function(e) {
                        var n = t.clone();
                        n.geometry = e,
                            n.geometry.calculateBounds(),
                            n.state = OpenLayers.State.INSERT,
                            i.push(n)
                    }),
                    i
            },
            isOneWay: function() {
                return this.attributes.fwdDirection ? !this.attributes.revDirection : this.attributes.revDirection
            },
            isDeletable: function() {
                return !this.isInBigJunction() && this.isAllowed(v.default.Segments.DELETE) && !this.hasClosures()
            },
            reverseDirection: function() {
                this.isOneWay() && (this.attributes.fwdDirection = !this.attributes.fwdDirection,
                    this.attributes.revDirection = !this.attributes.revDirection)
            },
            isConnectedToNode: function(e) {
                return this.attributes.toNodeID === e.getID() || this.attributes.fromNodeID === e.getID()
            },
            isPoint: function() {
                var e = this.geometry.components.first();
                return this.geometry.components.every(function(t) {
                    return t.equals(e)
                })
            },
            edgeIntersectionWithEllipse: function(e, t, i, n, s) {
                var r = 1,
                    o = 1,
                    a = void 0;
                i > n ? (o = i / n,
                    a = i) : (r = n / i,
                    a = n);
                var l = (e[1].x - e[0].x) * r,
                    u = (e[1].y - e[0].y) * o,
                    d = (e[0].x - t.x) * r,
                    c = (e[0].y - t.y) * o,
                    h = (e[1].x - t.x) * r,
                    p = (e[1].y - t.y) * o,
                    f = Math.sqrt(d * d + c * c),
                    g = f < a,
                    m = [],
                    v = l * l + u * u,
                    _ = 2 * (d * l + c * u),
                    y = d * d + c * c - a * a,
                    b = _ * _ - 4 * v * y;
                return !(b < 0) && (b = Math.sqrt(b), [(-_ + b) / (2 * v), (-_ - b) / (2 * v)].sort().forEach(function(i) {
                        if (i >= 0 && i <= 1) {
                            var n = new OpenLayers.Geometry.Point(e[0].x + i * l / r, e[0].y + i * u / o);
                            m.push({
                                    point: n,
                                    angle: (2 * Math.PI + Math.atan2((n.y - t.y) * o, (n.x - t.x) * r)) % (2 * Math.PI),
                                    goingOut: g,
                                    index: s
                                }),
                                g = !g
                        }
                    }),
                    m.isEmpty() ? f < a && Math.sqrt(h * h + p * p) < a : m)
            },
            intersectionWithEllipse: function(e, t, i) {
                for (var n = this.geometry.getVertices(), s = [], r = !0, o = n[0], a = 0; a < n.length - 1;) {
                    var l = n[a + 1],
                        u = this.edgeIntersectionWithEllipse([o, l], e, t, i, a);
                    if (u instanceof Array ? s = s.concat(u) : r &= u,
                        s.length > 2)
                        return !1;
                    o = l,
                        a++
                }
                return s.isEmpty() ? r : s
            },
            getEntireStreet: function() {
                var e = this.attributes.primaryStreetID,
                    t = this.model.streets.get(e);
                return !t || t.isEmpty ? [this] : _.values(this.model.segments.objects).filter(function(t) {
                    return t.attributes.primaryStreetID === e
                })
            },
            getConnectedSegments: function(e) {
                var t = this,
                    i = this.model.nodes.get(this.attributes[e + "NodeID"]);
                return i ? i.attributes.segIDs.map(function(e) {
                    return t.model.segments.get(e)
                }) : []
            },
            getTurnsLockAttribute: function(e) {
                return e.getID() === this.attributes.toNodeID ? "fwdTurnsLocked" : "revTurnsLocked"
            },
            getNodeAttribute: function(e) {
                return this.attributes.fromNodeID === e.getID() ? "from" : this.attributes.toNodeID === e.getID() ? "to" : null
            },
            areTurnsLocked: function(e) {
                return e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked : this.attributes.revTurnsLocked
            },
            setTurnsLock: function(e, t) {
                e.getID() === this.attributes.toNodeID ? this.attributes.fwdTurnsLocked = t : this.attributes.revTurnsLocked = t
            },
            equals: function(e) {
                return e.getID() === this.getID() && e.type === this.type
            },
            isLockedByHigherRank: function() {
                return !(!this.attributes.lockRank || !this.model.loginManager.isLoggedIn()) && this.getLockRank() > this.model.loginManager.user.rank
            },
            getLockRank: function() {
                return null === this.attributes.lockRank ? this.attributes.rank : this.attributes.lockRank
            },
            hasEmptyStreet: function() {
                var e = this.model.streets.get(this.attributes.primaryStreetID);
                return e && e.isEmpty
            },
            isHighway: function() {
                return this.HIGHWAY_ROAD_TYPES.contains(this.attributes.roadType)
            },
            isRoad: function() {
                return this.ROAD_TYPES.contains(this.attributes.roadType)
            },
            isDrivable: function() {
                return !this.NON_DRIVABLE_ROAD_TYPES.contains(this.attributes.roadType)
            },
            hasFromNode: function() {
                return null !== this.attributes.fromNodeID
            },
            getFromNode: function() {
                return this.hasFromNode() ? this.model.nodes.get(this.attributes.fromNodeID) : null
            },
            hasToNode: function() {
                return null !== this.attributes.toNodeID
            },
            getToNode: function() {
                return this.hasToNode() ? this.model.nodes.get(this.attributes.toNodeID) : null
            },
            getNodeByDirection: function(e) {
                return null != this.attributes[e + "NodeID"] ? this.model.nodes.get(this.attributes[e + "NodeID"]) : null
            },
            isInBigJunction: function() {
                return this.isBigJunctionShort() || this.hasFromBigJunction() || this.hasToBigJunction()
            },
            isBigJunctionShort: function() {
                return null != this.attributes.crossroadID
            },
            getBigJunction: function() {
                return this.isBigJunctionShort() ? this.model.bigJunctions.get(this.attributes.crossroadID) : null
            },
            hasFromBigJunction: function(e) {
                return null != e ? _.contains(this.attributes.fromCrossroads, e) : this.attributes.fromCrossroads.length > 0
            },
            getFromBigJunction: function() {
                return this.hasFromBigJunction() ? this.model.bigJunctions.get(this.attributes.fromCrossroads) : null
            },
            hasToBigJunction: function(e) {
                return null != e ? _.contains(this.attributes.toCrossroads, e) : this.attributes.toCrossroads.length > 0
            },
            getToBigJunction: function() {
                return this.hasToBigJunction() ? this.model.bigJunctions.get(this.attributes.toCrossroads) : null
            },
            getRelatedBigJunction: function() {
                return this.getBigJunction() || this.getFromBigJunction() || this.getToBigJunction()
            },
            getBigJunctionRank: function() {
                var e = this.getRelatedBigJunction();
                return e ? e.rank : 0
            },
            getConnectedSegmentsByDirection: function(e) {
                var t = this;
                return this.getConnectedSegments(e).filter(function(i) {
                    if (i === t)
                        return !1;
                    var n = t.getNodeByDirection(e);
                    return t.isTurnAllowed(i, n) || i.isTurnAllowed(t, n)
                })
            },
            canForceHouseNumbers: function() {
                return this.isAllowed(this.PERMISSIONS.FORCE_HOUSE_NUMBERS)
            },
            canEditHouseNumbers: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_HOUSE_NUMBERS)
            },
            canEditClosures: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_CLOSURES)
            },
            canChangeMaxSpeedUnverified: function(e) {
                return !0 === this.getOriginalValue(e)
            },
            arePropertiesEditable: function() {
                return !this.isInBigJunction() && !this.hasClosures() && p.default.prototype.arePropertiesEditable.apply(this, arguments)
            },
            isGeometryEditable: function() {
                return !this.isInBigJunction() && !this.hasClosures() && p.default.prototype.isGeometryEditable.apply(this, arguments)
            },
            hasClosures: function() {
                return Boolean(this.attributes.hasClosures)
            },
            lockTurns: function(e, t) {
                var i = {};
                i[this.getTurnsLockAttribute(e)] = !0;
                var n = new w.default(this, i);
                return t ? n : this.model.actionManager.add(n)
            },
            getFwdHeading: function() {
                var e = this.geometry.components;
                return g.default.getHeading(e[0], e[e.length - 1])
            },
            getRevHeading: function() {
                var e = this.geometry.components;
                return g.default.getHeading(e[e.length - 1], e[0])
            },
            isTurnAllowed: function(e, t) {
                return null != t && this.model.getTurnGraph().getTurnThroughNode(t, this, e).getTurnData().isAllowed()
            },
            canUserSetDefaultRank: function(e) {
                return e >= this.attributes.rank
            },
            canEditRoutingRoadTypes: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_ROUTING_ROAD_TYPES)
            },
            canEditConnections: function() {
                return this.canEditFromConnections() && this.canEditToConnections()
            },
            canEditFromConnections: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_CONNECTIONS) && !this.hasFromBigJunction()
            },
            canEditToConnections: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_CONNECTIONS) && !this.hasToBigJunction()
            },
            isRoutable: function() {
                return this.ROUTING_ROAD_TYPES.contains(this.attributes.roadType)
            },
            houseNumbersEditablePerType: function() {
                return this.HOUSENUMBER_ROAD_TYPES.contains(this.attributes.roadType)
            },
            isInRoundabout: function() {
                return null != this.attributes.junctionID
            },
            getRoundabout: function() {
                return this.isInRoundabout() ? this.model.junctions.get(this.attributes.junctionID) : null
            },
            getRoutingRoadTypes: function() {
                var e = {
                    prev: null,
                    next: null
                };
                if (!this.isRoutable())
                    return e;
                var t = this.ROUTING_ROAD_TYPES.indexOf(this.attributes.roadType);
                return e.prev = this.ROUTING_ROAD_TYPES[t - 1] || null,
                    e.next = this.ROUTING_ROAD_TYPES[t + 1] || null,
                    e
            },
            getRestrictions: function() {
                return this.attributes.restrictions.slice()
            },
            getRestrictionCount: function() {
                return this.attributes.restrictions.length
            },
            getForwardRestrictions: function() {
                return this.getRestrictions().filter(function(e) {
                    return e.isForward()
                })
            },
            getReverseRestrictions: function() {
                return this.getRestrictions().filter(function(e) {
                    return e.isReverse()
                })
            },
            getBidiRestrictions: function() {
                return this.getRestrictions().filter(function(e) {
                    return e.isBidi()
                })
            },
            MinLevel: -5,
            MaxLevel: 9,
            HIGHWAY_ROAD_TYPES: [3, 4, 6, 7],
            ROUTING_ROAD_TYPES: [1, 2, 7, 6, 3],
            ROAD_TYPES: [1, 2, 3, 4, 6, 7, 8, 14],
            NON_DRIVABLE_ROAD_TYPES: [5, 10, 16, 18, 19],
            HOUSENUMBER_ROAD_TYPES: [1, 2, 5, 6, 7, 8, 10, 14, 16, 17, 20],
            keepOriginal: {
                fwdMaxSpeedUnverified: !0,
                revMaxSpeedUnverified: !0
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4,
                EDIT_EMPTY_STREET: 8,
                SPLIT_DIRECTIONS: 16,
                SET_UNKNOWN_DIRECTIONS: 32,
                EDIT_HOUSE_NUMBERS: 64,
                FORCE_HOUSE_NUMBERS: 128,
                EDIT_CONNECTIONS: 256,
                EDIT_ROUTING_ROAD_TYPES: 512,
                EDIT_CLOSURES: 1024
            },
            CLASS_NAME: "Waze.Feature.Vector.Segment"
        });
    t.default = T,
        e.exports = t.default
}, , function(e, t, i) {
    "use strict";
    var n = i(4),
        s = i(10),
        r = OL.Class(s, {
            initialize: function(e, t, i) {
                this._turnGraph = e,
                    this._turn = t,
                    this._nodeID = null,
                    this._previousTurn = e.getTurn(t.getFromVertex(), t.getToVertex()),
                    s.prototype.initialize.apply(this, [i])
            },
            doAction: function() {
                this._turnGraph.putTurn(this._turn),
                    this._nodeID = this.model.getRoadGraph().getVertexNodeID(this._turn.getFromVertex()),
                    this._previousTurn.getTurnData().isUnknown() && !this._turn.getTurnData().isAllowed() && (this.dontSerialize = !0)
            },
            undoAction: function() {
                this._turnGraph.putTurn(this._previousTurn)
            },
            redoAction: function() {
                this.doAction()
            },
            serialize: function() {
                var e = this._turn.getFromVertex(),
                    t = this._turn.getToVertex(),
                    i = this._turn.getTurnData().isAllowed(),
                    r = {
                        id: {
                            fromSegID: e.getSegmentID(),
                            toSegID: t.getSegmentID(),
                            fromSegFwd: e.isForward(),
                            toSegFwd: t.isForward()
                        },
                        nodeID: this._nodeID,
                        navigable: i,
                        restrictions: this._turn.getTurnData().getRestrictions().map(function(e) {
                            return e.toJSON()
                        }),
                        instructionOpCode: this._turn.getTurnData().getInstructionOpcode()
                    },
                    o = void 0,
                    a = this._previousTurn.getTurnData();
                return o = (a.isUnknown() || a.isDisallowed() && !a.hasAdditionalData()) && i ? s.TYPE.ADD : s.TYPE.UPDATE, {
                    _objectType: n.NC,
                    action: o,
                    attributes: r
                }
            },
            CLASS_NAME: "Waze.Action.SetTurn"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class({
        visible: !0,
        enabled: !0,
        initialize: function(e) {
            OpenLayers.Util.applyDefaults(this, e)
        },
        destroy: function() {},
        show: function() {
            this.setVisible(!0)
        },
        hide: function() {
            this.setVisible(!1)
        },
        setVisible: function(e) {
            e !== this.visible && (this.visible = e,
                this.div && (e ? OpenLayers.Element.show(this.div) : OpenLayers.Element.hide(this.div)),
                this.events && this.events.triggerEvent("visibilitychanged"))
        },
        enable: function(e) {
            this.setEnabled(!0, e)
        },
        disable: function(e) {
            this.setEnabled(!1, e)
        },
        isEnabled: function() {
            return this.enabled
        },
        setEnabled: function(e, t) {
            this.enabled !== e && (this.enabled = e,
                this.events && !t && this.events.triggerEvent("enablechanged"))
        },
        CLASS_NAME: "Waze.Control"
    });
    e.exports = n
}, , , , function(e, t, i) {
    "use strict";
    var n = i(24),
        s = OpenLayers.Class({
            uniqueID: null,
            events: null,
            $el: null,
            elSelector: null,
            tagName: "div",
            ui: null,
            className: null,
            attr: null,
            template: null,
            olEvents: null,
            initialize: function(e) {
                OpenLayers.Util.extend(this, e),
                    null === this.$el && null === this.elSelector ? this.$el = $("<" + this.tagName + "/>") : null !== this.elSelector && (this.$el = $(this.elSelector)),
                    null !== this.className && this.$el.addClass(this.className),
                    this.olEvents = new OpenLayers.Events(this),
                    this.uniqueID = "presenter-" + s.baseID--,
                    Object.forEach(this.events || {}, function(e, t) {
                        var i = e.indexOf(" "),
                            n = void 0,
                            s = void 0; -
                        1 !== i ? (n = e.slice(0, i),
                                s = e.slice(i + 1)) : (n = e,
                                s = ""),
                            n += "." + this.uniqueID,
                            this.$el.on(n, s, $.proxy(this, t))
                    }, this)
            },
            render: function() {
                var e = this.$el.html(n.getHTML("templates/" + this.template, this.serialize()));
                return this._findUiElements(),
                    this.onRender(),
                    $.Deferred().resolve(e).promise()
            },
            onRender: function() {},
            _findUiElements: function() {
                var e = this;
                null !== this.ui && (this._uiBindings || (this._uiBindings = this.ui),
                    this.ui = {},
                    Object.forEach(this._uiBindings, function(t, i) {
                        e.ui[t] = e.$el.find(i)
                    }))
            },
            _eventStopPropagation: function(e) {
                e.stopPropagation()
            },
            serialize: function() {
                return {}
            },
            hide: function() {
                this.$el.hide()
            },
            show: function() {
                this.$el.show()
            },
            on: function(e, t, i) {
                this.olEvents.register(e, i, t)
            },
            off: function(e, t, i) {
                this.olEvents.unregister(e, i, t)
            },
            fire: function(e, t) {
                this.olEvents.triggerEvent(e, t)
            },
            destroy: function() {
                null !== this.$el && this.$el.off("." + this.uniqueID),
                    this.$el = null,
                    this.olEvents.destroy()
            }
        });
    s.baseID = 0,
        e.exports = s
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e(t, i) {
                (0,
                    r.default)(this, e),
                this._segmentID = t,
                    this._direction = i
            }
            return (0,
                    a.default)(e, [{
                    key: "isForward",
                    value: function() {
                        return this._direction === e.Direction.FORWARD
                    }
                }, {
                    key: "isReverse",
                    value: function() {
                        return this._direction === e.Direction.REVERSE
                    }
                }, {
                    key: "getSegmentID",
                    value: function() {
                        return this._segmentID
                    }
                }, {
                    key: "getOpposite",
                    value: function() {
                        return this.isForward() ? new e(this._segmentID, e.Direction.REVERSE) : new e(this._segmentID, e.Direction.FORWARD)
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return this._segmentID === e._segmentID && this._direction === e._direction
                    }
                }, {
                    key: "getID",
                    value: function() {
                        return this._segmentID + (this._direction ? "f" : "r")
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return this.getID()
                    }
                }], [{
                    key: "forwardOf",
                    value: function(t) {
                        return new e(t, e.Direction.FORWARD)
                    }
                }, {
                    key: "reverseOf",
                    value: function(t) {
                        return new e(t, e.Direction.REVERSE)
                    }
                }, {
                    key: "for",
                    value: function(t, i) {
                        return t.attributes.toNodeID === i.getID() ? e.forwardOf(t.getID()) : e.reverseOf(t.getID())
                    }
                }, {
                    key: "fromID",
                    value: function(t) {
                        var i = parseInt(t.slice(0, -1), 10),
                            n = t.slice(-1);
                        return n = "f" === n ? e.Direction.FORWARD : e.Direction.REVERSE,
                            new e(i, n)
                    }
                }]),
                e
        }();
    l.Direction = {
            FORWARD: !0,
            REVERSE: !1
        },
        e.exports = l
}, , , function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(181),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            TYPE: {
                MAP_PROBLEM: "MAP_PROBLEM",
                VENUE_UPDATE_REQUEST: "VENUE_UPDATE_REQUEST",
                UPDATE_REQUEST: "UPDATE_REQUEST"
            },
            MOTIVATIONS: {
                1: "REPORTED_BY_USER",
                2: "USER_FOLLOWS_ISSUE",
                4: "USER_FOLLOWS_ISSUE_LAST_COMMENT",
                8: "CLOSE_TO_FAVORITES",
                16: "NEAR_DRIVES",
                32: "ISSUE_AGE",
                64: "ISSUE_REOPENED",
                128: "CAN_BE_SOLVED_BY_RANK"
            },
            _isModified: function() {
                return !1
            },
            _isResolved: function() {
                return !1
            },
            getSeverity: function() {
                return null
            },
            onModelChanged: function() {
                return this.set("modified", this._isModified())
            },
            onModelSynced: function() {
                if (this.set("modified", !1),
                    this._isResolved())
                    return this.trigger("resolved")
            },
            onModelRemoved: function() {
                return this.destroy()
            },
            sync: function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                if ("delete" === e) {
                    var n = W.Config.paths.issues + "/" + t.get("type") + "/" + t.get("id");
                    i.url = encodeURI(n)
                }
                return Backbone.sync(e, t, i)
            }
        });
    r.prototype.defaults = _.extend({
            modified: !1
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(21),
        r = n(s),
        o = i(50),
        a = n(o),
        l = i(5),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(2),
        p = n(h),
        f = i(7),
        g = n(f),
        m = i(59),
        v = n(m),
        _ = i(8),
        y = n(_),
        b = i(51),
        E = {
            FWD: "FWD",
            REV: "REV",
            BOTH: "BOTH"
        },
        w = {
            WHOLE_SEGMENT: 1,
            LEFT_LANE: 2,
            MIDDLE_LANE: 3,
            RIGHT_LANE: 4
        },
        S = {
            HOV: 1,
            HOT: 2,
            EXPRESS: 3,
            BUS: 4,
            FAST: 5
        },
        M = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = e.direction,
                    n = void 0 === i ? E.FWD : i,
                    s = e.disposition,
                    r = void 0 === s ? w.WHOLE_SEGMENT : s,
                    o = e.laneType,
                    l = void 0 === o ? null : o;
                (0,
                    c.default)(this, t);
                var d = (0,
                    g.default)(this, (t.__proto__ || (0,
                    u.default)(t)).apply(this, arguments));
                return d._direction = n,
                    d._disposition = r,
                    d._laneType = l,
                    (0,
                        a.default)(d),
                    d
            }
            return (0,
                    y.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "withReverseDirection",
                    value: function() {
                        if (this.isBidi())
                            return this;
                        var e = this.isForward() ? E.REV : E.FWD;
                        return this.with({
                            direction: e
                        })
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return (0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "equals", this).call(this, e) && this._direction === e._direction && this._disposition === e._disposition && this._laneType === e._laneType
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return (0,
                            r.default)((0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "toJSON", this).call(this), {
                            direction: this._direction,
                            disposition: this._disposition,
                            laneType: this._laneType
                        })
                    }
                }, {
                    key: "getLaneType",
                    value: function() {
                        return this._laneType
                    }
                }, {
                    key: "getDisposition",
                    value: function() {
                        return null === this._disposition ? w.WHOLE_SEGMENT : this._disposition
                    }
                }, {
                    key: "getDirection",
                    value: function() {
                        return this._direction
                    }
                }, {
                    key: "isForward",
                    value: function() {
                        return this._direction === E.FWD
                    }
                }, {
                    key: "isReverse",
                    value: function() {
                        return this._direction === E.REV
                    }
                }, {
                    key: "isBidi",
                    value: function() {
                        return this._direction === E.BOTH
                    }
                }]),
                t
        }(b.BaseRestriction);
    t.default = {
            SegmentRestriction: M,
            RESTRICTION_SEGMENT_DIRECTION: E,
            RESTRICTION_SEGMENT_LANE_TYPE: S,
            RESTRICTION_SEGMENT_DISPOSITION: w
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = i(9),
        r = i(81),
        o = i(4),
        a = OpenLayers.Class(s, {
            segment: null,
            origState: null,
            hideSegment: !1,
            hidSegment: !1,
            initialize: function(e, t) {
                s.prototype.initialize.apply(this, [t]),
                    this.segment = e,
                    this.hideSegment = t && Boolean(t.hide)
            },
            destroy: function() {
                this.model.segments.get(this.segment.getID()) || this.segment.destroy(),
                    this.segment = null,
                    s.prototype.destroy.apply(this)
            },
            doAction: function() {
                var e = void 0;
                this.origState = this.segment.state, ["fromNodeID", "toNodeID"].forEach(function(t) {
                        this.segment.attributes[t] && (e = this.model.nodes.get(this.segment.attributes[t])) && e.isConnectedToSegment(this.segment) && this.doSubAction(new r(this.segment, e, {
                            deleteNode: this.deleteNode,
                            dontSerialize: !0
                        }))
                    }, this),
                    this.hideSegment && (this.segment.hidden || (this.hidSegment = !0),
                        this.segment.hidden = !0),
                    this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                        this.model.segments.changed(this.segment))
            },
            undoAction: function() {
                this.segment.state = this.origState,
                    this.hidSegment && delete this.segment.hidden,
                    this.segment.state === OpenLayers.State.INSERT ? this.model.segments.put(this.segment) : this.model.segments.changed(this.segment),
                    s.prototype.undoAction.apply(this)
            },
            redoAction: function() {
                s.prototype.redoAction.apply(this),
                    this.hidSegment && (this.segment.hidden = !0),
                    this.segment.state === OpenLayers.State.INSERT ? this.model.segments.remove(this.segment) : (this.segment.state = OpenLayers.State.DELETE,
                        this.model.segments.changed(this.segment))
            },
            serialize: function() {
                return {
                    _objectType: o.SEGMENT,
                    action: n.TYPE.DELETE,
                    attributes: {
                        id: this.segment.getID()
                    }
                }
            },
            CLASS_NAME: "Waze.Action.DeleteSegment"
        });
    e.exports = a
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(15),
        a = n(o),
        l = OL.Class(r.default, {
            segment: null,
            node: null,
            initialize: function(e, t, i) {
                this.node = e,
                    this.segment = t,
                    r.default.prototype.initialize.apply(this, [i])
            },
            doAction: function() {
                var e = this.findSegmentEdge();
                if (!e)
                    return !1;
                var t = {};
                return t[e + "NodeID"] = this.node.getID(),
                    this.doSubAction(new a.default(this.segment, t)),
                    this.updateNodeSegmentList(), !0
            },
            findSegmentEdge: function() {
                var e = this.segment.geometry.getVertices(!0);
                return e[0].equals(this.node.geometry) ? "from" : e[1].equals(this.node.geometry) ? "to" : null
            },
            updateNodeSegmentList: function() {
                var e = this.node.attributes.segIDs.clone();
                return e.contains(this.segment.getID()) || e.push(this.segment.getID()),
                    this.doSubAction(new a.default(this.node, {
                        segIDs: e
                    }, {
                        dontSerialize: !0
                    }))
            },
            CLASS_NAME: "W.Action.ConnectSegment"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(3),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(13),
        o = OpenLayers.Class(OpenLayers.Renderer.SVG, {
            initialize: function() {
                OpenLayers.Renderer.SVG.prototype.initialize.apply(this, arguments),
                    this.supportUse = !0
            },
            setAnimation: function(e, t) {
                var i = document.createElementNS(this.xmlns, "animate");
                i.setAttributeNS(null, "attributeName", t.attributeName),
                    i.setAttributeNS(null, "dur", t.dur),
                    (0,
                        s.default)(t).forEach(function(e) {
                        i.setAttributeNS(null, e, t[e])
                    }),
                    e.appendChild(i)
            },
            setStyle: function(e, t, i) {
                if (OpenLayers.Renderer.SVG.prototype.setStyle.apply(this, arguments),
                    t.animation && this.setAnimation(e, t.animation),
                    t.mask && e.setAttributeNS(null, "mask", t.mask),
                    t.filter && e.setAttributeNS(null, "filter", t.filter),
                    r.defined(t.rx) && e.setAttributeNS(null, "rx", t.rx),
                    r.defined(t.ry) && e.setAttributeNS(null, "ry", t.ry),
                    r.defined(t.maskID)) {
                    var n = document.getElementById(t.maskID),
                        s = void 0;
                    n || (n = document.createElementNS(this.xmlns, "mask"),
                            s = document.createElementNS(this.xmlns, "rect"),
                            s.setAttributeNS(null, "x", "0"),
                            s.setAttributeNS(null, "y", "0"),
                            s.setAttributeNS(null, "width", "100%"),
                            s.setAttributeNS(null, "height", "100%"),
                            s.setAttributeNS(null, "fill", "white"),
                            n.setAttributeNS(null, "id", t.maskID),
                            n.appendChild(s)),
                        n.appendChild(e),
                        n._style = t,
                        e = n
                }
                return e
            },
            importSymbol: function(e) {
                return this.symbolMetrics = {},
                    this.symbolMetrics[e] = [0, 0, 0],
                    e
            },
            getNodeType: function(e, t) {
                var i = OpenLayers.Renderer.SVG.prototype.getNodeType.apply(this, arguments);
                return "circle" === i && r.defined(t.rx) && r.defined(t.ry) && (i = "ellipse"),
                    i
            },
            dashStyle: function(e, t) {
                var i = void 0;
                if (e.strokeDashArray)
                    return e.strokeDashArray;
                i = e.strokeWidth * t;
                var n = e.strokeDashstyle;
                switch (n) {
                    case "solid":
                        return "none";
                    case "dot":
                        return [1, 4 * i].join();
                    case "dash":
                        return [4 * i, 4 * i].join();
                    case "dashdot":
                        return [4 * i, 4 * i, 1, 4 * i].join();
                    case "longdash":
                        return [8 * i, 4 * i].join();
                    case "longdashdot":
                        return [8 * i, 4 * i, 1, 4 * i].join();
                    default:
                        return OpenLayers.String.trim(n).replace(/\s+/g, ",")
                }
            },
            CLASS_NAME: "Waze.Renderer.ExtendedSVG"
        });
    e.exports = o
}, , , , , function(e, t, i) {
    e.exports = {
        default: i(469),
        __esModule: !0
    }
}, function(e, t, i) {
    e.exports = {
        default: i(473),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(6),
        a = n(o),
        l = i(26),
        u = n(l),
        d = i(486),
        c = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(d),
        h = OL.Class(OL.Format.GeoJSON, {
            initialize: function() {
                var e = this;
                this._typeToClass = _.clone(c.TYPE_TO_CLASS),
                    u.default.getModels().forEach(function(t) {
                        var i = t.repositoryName,
                            n = t.modelClass;
                        e._typeToClass[i] = n
                    })
            },
            read: function(e) {
                var t = this;
                return (0,
                        r.default)(e).forEach(function(i) {
                        var n = e[i];
                        _.isUndefined(n.objects) || t._parseObjects(i, n.objects)
                    }),
                    e
            },
            _parseObjects: function(e, t) {
                var i = c.TYPE_TO_FACTORY[e];
                if (i)
                    return t.map(function(e, n) {
                        return t[n] = i.create(e)
                    });
                var n = this._typeToClass[e] || a.default;
                return t.map(function(e, i) {
                    return t[i] = new n(e, {
                        parse: !0
                    })
                })
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(496),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(21),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(129),
        p = i(498),
        f = {
            FREE: "FREE",
            BLOCKED: "BLOCKED",
            TOLL: "TOLL",
            PENALTY: "PENALTY",
            ENTER_ONLY: "ENTER_ONLY",
            DANGEROUS_AREA: "DANGEROUS_AREA",
            DIFFICULT: "DIFFICULT"
        },
        g = {
            DRIVING_BLOCKED: "DRIVING_BLOCKED",
            DRIVING_ALLOWED: "DRIVING_ALLOWED",
            DRIVING_TOLL_FREE: "DRIVING_TOLL_FREE"
        },
        m = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.timeFrames,
                    n = void 0 === i ? [] : i,
                    s = t.defaultType,
                    r = void 0 === s ? null : s,
                    o = t.driveProfiles,
                    l = void 0 === o ? {} : o,
                    d = t.description,
                    c = void 0 === d ? "" : d,
                    f = t.editable,
                    g = void 0 === f || f;
                (0,
                    u.default)(this, e),
                this._editable = g,
                    this._defaultType = r,
                    this._description = c,
                    this._timeFrames = n.map(function(e) {
                        return new h.RestrictionTimeFrame(e)
                    }),
                    this._driveProfiles = (0,
                        a.default)(l).reduce(function(e, t) {
                        var i = l[t];
                        return e[t] = new p.RestrictionDriveProfileList({
                                driveProfiles: i
                            }),
                            e
                    }, {})
            }
            return (0,
                    c.default)(e, [{
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            r.default)(this.toJSON(), e))
                    }
                }, {
                    key: "__clone",
                    value: function() {
                        return this.toJSON()
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return this._editable === e._editable && this._defaultType === e._defaultType && this._description === e._description && this._timeFramesEquals(e._timeFrames) && this._driveProfilesEquals(e._driveProfiles)
                    }
                }, {
                    key: "_timeFramesEquals",
                    value: function(e) {
                        return this._timeFrames.length === e.length && this._timeFrames.every(function(t) {
                            return e.some(function(e) {
                                return e.equals(t)
                            })
                        })
                    }
                }, {
                    key: "_driveProfilesEquals",
                    value: function(e) {
                        var t = this,
                            i = (0,
                                a.default)(this._driveProfiles);
                        return i.length === (0,
                            a.default)(e).length && i.every(function(i) {
                            return t._driveProfiles[i].equals(e[i])
                        })
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = this;
                        return {
                            editable: this._editable,
                            defaultType: this._defaultType,
                            description: this._description,
                            timeFrames: this._timeFrames.map(function(e) {
                                return e.toJSON()
                            }),
                            driveProfiles: (0,
                                a.default)(this._driveProfiles).reduce(function(t, i) {
                                return t[i] = e._driveProfiles[i].toJSON(),
                                    t
                            }, {})
                        }
                    }
                }, {
                    key: "getDefaultType",
                    value: function() {
                        return this._defaultType
                    }
                }, {
                    key: "getDescription",
                    value: function() {
                        return null != this._description ? this._description : ""
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this._timeFrames.length ? this._timeFrames[0] : h.RestrictionTimeFrame.getAlwaysOn()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function(e) {
                        return this.hasDriveProfile(e) ? this._driveProfiles[e] : new p.RestrictionDriveProfileList
                    }
                }, {
                    key: "hasDriveProfile",
                    value: function(e) {
                        return this._driveProfiles.hasOwnProperty(e)
                    }
                }, {
                    key: "isDifficult",
                    value: function() {
                        return this._defaultType === f.DIFFICULT
                    }
                }, {
                    key: "isEditable",
                    value: function() {
                        return this._editable
                    }
                }, {
                    key: "supportsNumPassengers",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "supportsSubscriptions",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "getDrivingModality",
                    value: function() {
                        return this._defaultType === f.TOLL ? g.DRIVING_TOLL_FREE : this._defaultType === f.BLOCKED && this.hasDriveProfile(f.FREE) ? g.DRIVING_ALLOWED : g.DRIVING_BLOCKED
                    }
                }, {
                    key: "isBlockedModality",
                    value: function() {
                        return this.getDrivingModality() === g.DRIVING_BLOCKED
                    }
                }, {
                    key: "isAllowedModality",
                    value: function() {
                        return this.getDrivingModality() === g.DRIVING_ALLOWED
                    }
                }, {
                    key: "isTollFreeModality",
                    value: function() {
                        return this.getDrivingModality() === g.DRIVING_TOLL_FREE
                    }
                }]),
                e
        }();
    t.default = {
            BaseRestriction: m,
            RESTRICTION_TYPE: f,
            RESTRICTION_MODALITY: g,
            RESTRICTION_DESCRIPTION_CHAR_LIMIT: 1e3
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(15),
        s = i(74),
        r = i(20),
        o = Marionette.View.extend({
            dataModel: null,
            events: {
                "submit .attributes-form": "_onAttributesFormSubmitted",
                "change .attributes-form input, .attributes-form select, .attributes-form textarea": "_onAttributeChanged"
            },
            initialize: function(e) {
                this.dataModel = e.dataModel,
                    this.model = e.selection[0];
                var t = this.dataModel.getRepository(this.model.type);
                this.listenTo(t, r.CHANGED, this.onFeaturesChanged)
            },
            _onAttributesFormSubmitted: function() {
                return !1
            },
            _toggleFormControls: function(e) {
                this.$(".attributes-form").find("input, textarea, select").prop("disabled", !e)
            },
            isModelEditable: function() {
                return this.model.arePropertiesEditable()
            },
            toggleEnabled: function(e) {
                e ? this.triggerMethod("editingEnabled") : this.triggerMethod("editingDisabled")
            },
            serializeElement: function(e) {
                var t = void 0,
                    i = e.data("units"),
                    n = void 0;
                if ("checkbox" === e.attr("type") && e.is("[data-multiple]"))
                    n = this.$el.find("input[name=" + e.attr("name") + "]:checked"),
                    t = n.toArray().map(function(e) {
                        return $(e).val()
                    });
                else {
                    if ("checkbox" === e.attr("type"))
                        return e.is(":checked");
                    t = e.is("select") && e.prop("multiple") ? e.find("option:selected").toArray().map(function(e) {
                        return $(e).val()
                    }) : e.is("select") ? e.find("option:selected").val() : e.val()
                }
                return "boolean" === e.data("type") && (t = e.booleanVal()),
                    "numeric" === e.data("type") && (t = parseInt(t, 10),
                        isNaN(t) && e.is("[data-nullable]") ? t = null : i && (t = s.getOriginalValue(t, i))),
                    t
            },
            _removeMixedOption: function(e) {
                return e.find("[data-mixed-indicator]").remove()
            },
            _onAttributeChanged: function(e) {
                var t = $(e.target),
                    i = t.attr("name"),
                    n = this.serializeElement(t),
                    s = this[i + "Changed"],
                    r = t.is("[data-refresh]"),
                    o = {},
                    a = {},
                    l = _.has(this.model.attributes, i),
                    u = this.model.FLAG_ATTRIBUTES && this.model.FLAG_ATTRIBUTES[i];
                t.is("select") && this._removeMixedOption(t),
                    s ? s.call(this, n) : u ? (a[i] = n,
                        this.changed(o, r, void 0, a)) : l && (o[i] = n,
                        this.changed(o, r))
            },
            changed: function(e, t) {
                t || (this.changing = !0),
                    this.dataModel.actionManager.add(new n(this.model, e)),
                    this.changing = !1
            },
            onFeaturesChanged: function(e) {
                !this.changing && this.hasEditedModelChanged(e) && this.isRendered && !this.isDestroyed() && this.render()
            },
            hasEditedModelChanged: function(e) {
                return 1 === e.length && e[0].getID() === this.model.getID()
            },
            serializeData: function() {
                return this.model
            },
            onRender: function() {
                this._toggleFormControls(this.isModelEditable())
            },
            preventRender: function(e) {
                this.changing = !0;
                try {
                    e()
                } finally {
                    this.changing = !1
                }
            }
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = i(6),
        r = OL.Class(n, {
            object: null,
            repository: null,
            attributes: null,
            initialize: function(e, t, i, r) {
                n.prototype.initialize.apply(this, [r]),
                    null === e ? (this.object = new s(i),
                        this.attributes = i) : (this.object = e,
                        this.attributes = _.extend({}, this.object.getAttributes())),
                    this.object.writableAttributes && (this.attributes = _.pick(this.attributes, this.object.writableAttributes)),
                    this.repository = t
            },
            destroy: function() {
                null !== this.object && null === this.repository.get(this.object.getID()) && this.object.destroy(),
                    n.prototype.destroy.apply(this)
            },
            doAction: function() {
                return this.object.setID(this.repository.generateUniqueID()),
                    this.object.version = 1,
                    this.object.state = OL.State.INSERT,
                    this.repository.put(this.object), !0
            },
            undoAction: function() {
                this.repository.remove(this.object)
            },
            redoAction: function() {
                this.repository.put(this.object)
            },
            serialize: function() {
                var e = _.extend({}, this.attributes);
                return e.id = this.object.getID(), {
                    _objectType: this.object.type,
                    action: n.TYPE.ADD,
                    attributes: e
                }
            },
            CLASS_NAME: "Waze.Action.CreateObject"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(202),
        u = n(l),
        d = OL.Class(u.default, {
            initialize: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                this.attributes = e
            },
            set: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if ("string" == typeof e) {
                    var i = e,
                        n = arguments[1];
                    e = {},
                        e[i] = n,
                        t = arguments[2] || {}
                }
                var s = !1,
                    o = !0,
                    l = !1,
                    u = void 0;
                try {
                    for (var d, c = (0,
                            a.default)((0,
                            r.default)(e)); !(o = (d = c.next()).done); o = !0) {
                        var h = d.value,
                            p = e[h];
                        if (this.attributes[h] !== p) {
                            var f = this.attributes[h];
                            this.attributes[h] = p,
                                s = !0,
                                this.trigger("change:" + h, _.extend({
                                    newValue: p,
                                    oldValue: f
                                }, t))
                        }
                    }
                } catch (e) {
                    l = !0,
                        u = e
                } finally {
                    try {
                        !o && c.return && c.return()
                    } finally {
                        if (l)
                            throw u
                    }
                }
                if (s)
                    return this.trigger("change", t)
            },
            get: function(e) {
                return this.attributes[e]
            },
            toJSON: function() {
                return $.extend({}, this.attributes)
            }
        });
    t.default = d,
        e.exports = t.default
}, , , , , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    t.__esModule = !0;
    var s = i(5),
        r = n(s),
        o = i(459),
        a = n(o);
    t.default = function e(t, i, n) {
        null === t && (t = Function.prototype);
        var s = (0,
            a.default)(t, i);
        if (void 0 === s) {
            var o = (0,
                r.default)(t);
            return null === o ? void 0 : e(o, i, n)
        }
        if ("value" in s)
            return s.value;
        var l = s.get;
        if (void 0 !== l)
            return l.call(n)
    }
}, function(e, t, i) {
    "use strict";
    var n = i(47),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(472),
        o = i(20),
        a = i(13),
        l = Marionette.Object.extend({
            KEEP_CHANGED: function(e, t) {
                return e
            },
            REPLACE_CHANGED: function(e, t) {
                return t
            },
            DEFAULT_PROJECTION: new OpenLayers.Projection("EPSG:4326"),
            GENERATED_ID_BASE: -100,
            GENERATED_ID_STEP: -1,
            objectType: null,
            objects: null,
            persistentObjects: null,
            idGenerator: null,
            projection: null,
            active: null,
            name: null,
            currentDataBounds: null,
            minZoom: 0,
            onDemand: !0,
            additionalInfo: null,
            useVersions: !0,
            filter: null,
            storePersistentSeparately: !1,
            initialize: function(e, t) {
                OpenLayers.Util.extend(this, t),
                    this.objects = {},
                    this.persistentObjects = {},
                    this.objectType = e,
                    this.idGenerator = new r(this.GENERATED_ID_BASE, this.GENERATED_ID_STEP),
                    null === this.projection && (this.projection = this.DEFAULT_PROJECTION),
                    this.active = !a.defined(t.active) || t.active,
                    this.filter && this.filter.on("change", this._onFilterChanged, this)
            },
            _onFilterChanged: function() {
                this.clear({
                    keepUnsaved: !0
                })
            },
            setActive: function(e) {
                this.active = e,
                    this.trigger("change:active", {
                        active: e
                    })
            },
            updateDataExtent: function(e, t, i) {
                var n = {};
                return i < this.minZoom ? (this.clear({
                        keepUnsaved: !0,
                        keepSelected: !0
                    }),
                    null) : !this.filtered && (!this.onDemand || this.currentDataBounds && this.currentDataBounds.containsBounds(e)) ? null : this.filter ? (this.filter.isEmpty() || (n[this.filter.getName()] = this.filter.serialize()),
                    n) : (n[this.objectType + "s"] = !0,
                    n)
            },
            get: function(e) {
                return this.objects[e] || this.persistentObjects[e]
            },
            getByAttributes: function(e) {
                return _.where(this.objects, e)
            },
            put: function(e) {
                e instanceof Array || (e = [e]);
                for (var t = [], i = [], n = 0, s = e.length; n < s; n++) {
                    var r = e[n],
                        a = r.getID(),
                        l = void 0;
                    l = this.storePersistentSeparately && r.isPersistent() ? this.persistentObjects : this.objects,
                        r.type = this.objectType,
                        r.model = this.model,
                        l[a] ? t.push(r) : i.push(r),
                        l[a] = r
                }
                t.length > 0 && this.trigger(o.CHANGED, t),
                    i.length > 0 && this.trigger(o.ADDED, i),
                    (i.length > 0 || t.length > 0) && this.trigger(o.UPDATED)
            },
            changed: function(e) {
                e instanceof Array || (e = [e]),
                    this.trigger(o.CHANGED, e),
                    this.trigger(o.UPDATED)
            },
            synced: function(e) {
                e instanceof Array || (e = [e]),
                    this.trigger(o.SYNCED, e)
            },
            remove: function(e) {
                e instanceof Array || (e = [e]);
                for (var t = [], i = 0, n = e.length; i < n; i++) {
                    var s = e[i];
                    this.objects[s.getID()] && (delete this.objects[s.getID()],
                        t.push(s))
                }
                t.length > 0 && (this.trigger(o.REMOVED, t),
                    this.trigger(o.UPDATED))
            },
            updateID: function(e, t) {
                delete this.objects[t],
                    this.objects[e.getID()] = e,
                    e.type = this.objectType,
                    this.changed(e)
            },
            generateUniqueID: function() {
                return this.idGenerator.next()
            },
            getObjectArray: function(e) {
                return _.isUndefined(e) ? (0,
                    s.default)(this.objects) : _.filter(this.objects, e)
            },
            clear: function(e) {
                this.currentDataBounds = null;
                var t = [];
                e = _.extend({
                        keepPersistent: !0
                    }, e),
                    Object.forEach(this.objects, function(i, n) {
                        n.isInUse(e) ? n.state !== OpenLayers.State.INSERT && (n.outOfScope = !0) : (t.push(n),
                            delete this.objects[i])
                    }, this),
                    e && e.silent || t.length > 0 && (this.trigger(o.REMOVED, t),
                        this.trigger(o.UPDATED))
            },
            mergeObjects: function(e, t, i, n) {
                this.currentDataBounds = i.clone(),
                    t || (t = this.KEEP_CHANGED),
                    this.filtered = Boolean(e) && Boolean(e.filtered),
                    (e = e ? e.objects : []) || (e = []);
                for (var s = [], r = [], a = 0, l = e.length; a < l; ++a) {
                    var u = e[a].getID();
                    if (this.objects[u])
                        if (!this.useVersions || e[a].getVersion() > this.objects[u].getVersion())
                            if (this.objects[u].state) {
                                var d = t(this.objects[u], e[a]);
                                d && d !== this.objects[u] && (r.push(this.objects[u]),
                                    this.objects[u] = e[a],
                                    s.push(e[a]),
                                    e[a].type = this.objectType,
                                    e[a].model = this.model)
                            } else
                                r.push(this.objects[u]),
                                this.objects[u] = e[a],
                                s.push(e[a]),
                                e[a].type = this.objectType,
                                e[a].model = this.model;
                    else
                        delete this.objects[u].outOfScope;
                    else
                        this.objects[u] = e[a],
                        s.push(e[a]),
                        e[a].type = this.objectType,
                        e[a].model = this.model
                }
                delete e.objects,
                    this.additionalInfo = e,
                    r.length > 0 && this.trigger(o.REMOVED, r),
                    s.length > 0 && this.trigger(o.ADDED, s),
                    (r.length > 0 || s.length > 0) && this.trigger(o.UPDATED)
            },
            getModifiedObjects: function() {
                var e = {};
                e[OpenLayers.State.INSERT] = [],
                    e[OpenLayers.State.UPDATE] = [],
                    e[OpenLayers.State.DELETE] = [];
                for (var t in this.objects)
                    this.objects[t].state && e[this.objects[t].state].push(this.objects[t]);
                return e
            },
            hasModifiedObjects: function() {
                for (var e in this.objects)
                    if (this.objects[e].state)
                        return !0;
                return !1
            },
            getByIds: function(e) {
                var t = [],
                    i = void 0;
                return e.forEach(function(e) {
                        (i = this.get(e)) && t.push(i)
                    }, this),
                    t
            },
            CLASS_NAME: "Waze.Model.ObjectRepository"
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = OpenLayers.Class(n, {
            TYPE: {
                DISCONNECTION: "DISCONNECTION",
                TURN: "TURN",
                DATA: "DATA",
                ROAD_CLOSURE: "ROAD_CLOSURE"
            },
            nested: {
                geometry: OL.Geometry,
                bounds: OL.Geometry
            },
            ONE_WEEK_IN_MILLIS: 6048e5,
            SeverityThreshold: {
                low: 3,
                medium: 7
            },
            disconnectBounds: null,
            initialize: function(e) {
                n.prototype.initialize.apply(this, arguments),
                    this.setSeverity(this.attributes.weight),
                    this.editable = this.attributes.open
            },
            merge: function(e) {
                n.prototype.merge.apply(this, arguments),
                    this.editable = this.attributes.open
            },
            getDisconnectBounds: function() {
                return this.disconnectBounds || (this.disconnectBounds = this.attributes.bounds.getBounds()),
                    this.disconnectBounds
            },
            setSeverity: function(e) {
                var t = "high";
                e <= this.SeverityThreshold.low ? t = "low" : e <= this.SeverityThreshold.medium && (t = "medium"),
                    this.attributes.severity = t
            },
            getSessions: function() {
                return this.model.problemDetails.get([this.getID()])
            },
            isRecentlyClosed: function() {
                return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= this.ONE_WEEK_IN_MILLIS
            },
            getLocation: function() {
                return this.attributes.geometry
            },
            canEdit: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT)
            },
            PERMISSIONS: {
                EDIT: 1,
                FORCE_CLOSE: 2
            },
            CLASS_NAME: "Waze.Feature.Vector.MapProblem"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(502),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            defaults: {
                street: null,
                city: null,
                state: null,
                country: null,
                houseNumber: null,
                isEmpty: !1
            }
        }),
        o = new r({
            isEmpty: !0
        });
    r.CITY_NAME_PATTERN = "^\\S.*",
        r.fromStreetID = function(e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                n = t.streets.get(e);
            return null == n ? o : r.fromCityID(n.cityID, t, _.extend(i, {
                street: n
            }))
        },
        r.fromCityID = function(e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                n = t.cities.get(e),
                s = void 0,
                a = void 0;
            return n && (s = t.states.get(n.attributes.stateID)),
                s && (a = t.countries.get(n.attributes.countryID)), [n, s, a].some(function(e) {
                    return null == e
                }) ? o : new r(_.extend(i, {
                    city: n,
                    state: s,
                    country: a
                }))
        },
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = OpenLayers.Class(n, {
            initialize: function(e, t) {
                n.prototype.initialize.apply(this, [t]),
                    this.subActions = e || []
            },
            undoSupported: function() {
                for (var e = 0, t = this.subActions.length; e < t; e++)
                    if (!this.subActions[e].undoSupported())
                        return !1;
                return !0
            },
            setModel: function(e) {
                n.prototype.setModel.apply(this, [e]);
                for (var t = 0, i = this.subActions.length; t < i; t++)
                    this.subActions[t].setModel(e)
            },
            CLASS_NAME: "Waze.Action.MultiAction"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    t.__esModule = !0;
    var n = i(701),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    t.default = function(e) {
        if (Array.isArray(e)) {
            for (var t = 0, i = Array(e.length); t < e.length; t++)
                i[t] = e[t];
            return i
        }
        return (0,
            s.default)(e)
    }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            A_TO_B: 1,
            B_TO_A: 2,
            TWO_WAY: 3
        },
        s = ["startDate", "endDate", "reason", "location", "permanent", "createdBy", "eventId"],
        r = /^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}$/,
        o = Backbone.Model.extend({
            defaults: function() {
                return {
                    startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                    endDate: null,
                    reason: null,
                    location: null,
                    permanent: !1,
                    eventId: null,
                    direction: n.A_TO_B,
                    createdBy: null,
                    segments: [],
                    closures: [],
                    reverseSegments: {}
                }
            },
            initialize: function() {
                var e = this.get("closures");
                if (e && e.length > 0) {
                    var t = e[0];
                    this._setFromSingleClosure(t)
                }
                var i = this.get("segments");
                null != i && (i = _(i).sortBy(function(e) {
                            return e.getID()
                        }),
                        this.set({
                            segments: i
                        })),
                    this._originalAttribs = this.toJSON()
            },
            _setFromSingleClosure: function(e) {
                for (var t = 0; t < s.length; t++) {
                    var i = s[t];
                    this.set(i, e[i])
                }
                return this.set({
                    direction: this._getDirectionFromClosure(e)
                })
            },
            _getDirectionFromClosure: function(e) {
                var t = e.forward;
                return this.isReverse(e.segID) && (t = !t),
                    t ? n.A_TO_B : n.B_TO_A
            },
            original: function(e) {
                return this._originalAttribs[e]
            },
            differsFromOriginal: function(e) {
                return this.get(e) !== this.original(e)
            },
            hasChanged: function() {
                var e = this;
                return s.some(function(t) {
                    return e.differsFromOriginal(t)
                })
            },
            isOppositeToOriginal: function() {
                var e = this.original("direction"),
                    t = this.get("direction");
                return this._areOpposites(e, t)
            },
            isOppositeTo: function(e) {
                var t = e.get("direction"),
                    i = this.get("direction");
                return this._areOpposites(i, t) && this._hasSameAttributes(e) && this._hasSameSegmentIDs(e)
            },
            _hasSameAttributes: function(e) {
                var t = this;
                return s.every(function(i) {
                    return t.get(i) === e.get(i)
                })
            },
            _hasSameSegmentIDs: function(e) {
                return _.isEqual(this.getSegIDs(), e.getSegIDs())
            },
            _areOpposites: function(e, t) {
                return e === n.A_TO_B && t === n.B_TO_A || e === n.B_TO_A && t === n.A_TO_B
            },
            getSegIDs: function() {
                return _(this.get("segments")).invoke("getID")
            },
            findSegmentByID: function(e) {
                for (var t = this.get("segments"), i = 0; i < t.length; i++) {
                    var n = t[i];
                    if (n.getID() === e)
                        return n
                }
                return null
            },
            mergeWithOpposite: function(e) {
                this.set({
                        direction: n.TWO_WAY
                    }),
                    this._originalAttribs.direction = n.TWO_WAY;
                var t = this.get("closures").concat(e.get("closures"));
                return this.set({
                    closures: t
                })
            },
            isReverse: function(e) {
                return !0 === this.get("reverseSegments")[e]
            },
            saveSimpleFieldsToClosure: function(e) {
                var t = this;
                return s.map(function(i) {
                    return e[i] = t.get(i)
                })
            },
            validate: function() {
                return this.errors = {},
                    this._validateField("startDate", {
                        required: !1,
                        date: !0,
                        futureDate: !1
                    }),
                    this._validateField("endDate", {
                        required: !0,
                        date: !0,
                        futureDate: !0
                    }),
                    this._validateDateRange(),
                    _.isEmpty(this.errors)
            },
            _validateField: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (t.required && !this.isPresent(e))
                    return void(this.errors[e] = "required");
                if (this.isPresent(e)) {
                    var i = this.get(e);
                    if (null != t.pattern && !t.pattern.test(i))
                        return void(this.errors[e] = "invalid");
                    if (t.date && !this._isValidDate(i))
                        return void(this.errors[e] = "invalid-date");
                    if (t.futureDate) {
                        Date.parse(i).isBefore(1..days().ago()) && (this.errors[e] = "in-past")
                    }
                }
            },
            _isValidDate: function(e) {
                return r.test(e) && null != Date.parse(e)
            },
            _validateDateRange: function() {
                if (null == this.errors.startDate && null == this.errors.endDate) {
                    var e = Date.parse(this.get("startDate"));
                    Date.parse(this.get("endDate")).isAfter(e) || (this.errors.endDate = "before-start-date")
                }
            },
            calculateForwardValuesForSegment: function(e) {
                var t = this.get("direction"),
                    i = this.isReverse(e);
                return t === n.TWO_WAY ? [!0, !1] : t === n.A_TO_B ? [!i] : [i]
            },
            isEndDateSet: function() {
                return null !== this.get("endDate")
            },
            isStartDateSet: function() {
                return null !== this.get("startDate")
            }
        });
    _.extend(o.prototype, W.brara.Backbone.ModelHelpers),
        _.extend(o, {
            DIRECTION: n
        }),
        t.default = o,
        e.exports = t.default
}, , , function(e, t, i) {
    "use strict";
    var n = i(6),
        s = OpenLayers.Class(n, {
            initialize: function() {
                n.prototype.initialize.apply(this, arguments),
                    this.normalizedLevel = this.NormalizedLevels[this.rank]
            },
            isStaffUser: function() {
                return this.rank >= this.StaffRank
            },
            NormalizedLevels: {
                0: 1,
                1: 2,
                2: 3,
                3: 4,
                4: 5,
                5: 6,
                6: 6
            },
            MinLevel: 0,
            MaxLevel: 5,
            StaffRank: 6,
            CLASS_NAME: "Waze.Feature.Vector.User"
        });
    s.normalizeLevel = function(e) {
            return s.prototype.NormalizedLevels[e]
        },
        e.exports = s
}, , , , , , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = {},
        u = {},
        d = {},
        c = {
            KILOMETER: "km",
            MILE: "mi",
            METER: "m",
            FEET: "ft"
        },
        h = {};
    h[c.KILOMETER] = c.MILE,
        h[c.METER] = c.FEET;
    var p = {},
        f = !0,
        g = !1,
        m = void 0;
    try {
        for (var v, _ = (0,
                a.default)((0,
                r.default)(h)); !(f = (v = _.next()).done); f = !0) {
            var y = v.value,
                b = h[y];
            p[b] = y,
                u[y] = !0,
                d[b] = !0
        }
    } catch (e) {
        g = !0,
            m = e
    } finally {
        try {
            !f && _.return && _.return()
        } finally {
            if (g)
                throw m
        }
    }
    var E = OpenLayers,
        w = E.INCHES_PER_UNIT;
    l = {
            convert: function(e, t, i) {
                return e * w[t] / w[i]
            },
            localizeUnit: function(e) {
                return u[e] && W.model.isImperial ? e = h[e] : d[e] && !W.model.isImperial && (e = p[e]),
                    e
            },
            getLocalizedValue: function(e, t) {
                var i = this.localizeUnit(t);
                return this.convert(e, t, i)
            },
            getLocalizedDisplayValue: function(e, t, i) {
                var n = this.convert(e, t, i);
                return this.getLocalizedValue(n, i)
            },
            getOriginalValue: function(e, t) {
                var i = this.localizeUnit(t);
                return this.convert(e, i, t)
            }
        },
        l.UNIT = c,
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                (0,
                    r.default)(this, e),
                this._value = t
            }
            return (0,
                    a.default)(e, [{
                    key: "add",
                    value: function(e) {
                        this._value |= e
                    }
                }, {
                    key: "remove",
                    value: function(e) {
                        this._value &= ~e
                    }
                }, {
                    key: "setBits",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            e[1] ? t.add(e[0]) : t.remove(e[0])
                        })
                    }
                }, {
                    key: "isEnabled",
                    value: function(e) {
                        return 0 != (this._value & e)
                    }
                }, {
                    key: "isPowerOf2Enabled",
                    value: function(e) {
                        return 0 != (this._value & 1 << e)
                    }
                }, {
                    key: "isDisabled",
                    value: function(e) {
                        return 0 == (this._value & e)
                    }
                }, {
                    key: "value",
                    get: function() {
                        return this._value
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    e.exports = {
        Segments: {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4,
            EDIT_EMPTY_STREET: 8,
            SPLIT_DIRECTIONS: 16
        },
        Nodes: {
            EDIT_GEOMETRY: 1,
            DELETE: 2
        },
        Landmarks: {
            EDIT_GEOMETRY: 1,
            EDIT_PROPERTIES: 2,
            DELETE: 4
        }
    }
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(6),
        r = i(132),
        o = i(78),
        a = i(95),
        l = i(188),
        u = i(507),
        d = i(509),
        c = i(62),
        h = i(11),
        p = i(79),
        f = i(134),
        g = OpenLayers.Class(n, {
            defaults: function() {
                return {
                    name: "",
                    description: "",
                    rank: 0,
                    lockRank: 0,
                    url: null,
                    phone: null,
                    brand: null,
                    residential: !1,
                    openingHours: [],
                    categories: [],
                    categoryAttributes: this._defaultCategoryAttributes(),
                    services: [],
                    entryExitPoints: [],
                    images: [],
                    venueUpdateRequests: [],
                    aliases: [],
                    approved: !0,
                    externalProviderIDs: [],
                    adLocked: !1,
                    permissions: s.ALL_PERMISSIONS
                }
            },
            _defaultCategoryAttributes: function() {
                var e = {};
                if (this.isParkingLot()) {
                    var t = _.result(f.prototype, "defaults");
                    this.isNew() && (t.parkingType = p.PARKING_TYPE_PUBLIC),
                        e[a.PARKING_LOT] = t
                }
                return e
            },
            nested: {
                geometry: OL.Geometry,
                images: o,
                entryExitPoints: d,
                externalProviderIDs: l
            },
            SERVICE_TYPES: {
                GENERAL: ["VALLET_SERVICE", "DRIVETHROUGH", "WI_FI", "RESTROOMS", "CREDIT_CARDS", "RESERVATIONS", "OUTSIDE_SEATING", "AIR_CONDITIONING", "PARKING_FOR_CUSTOMERS", "DELIVERIES", "TAKE_AWAY", "WHEELCHAIR_ACCESSIBLE"],
                PARKING_LOT: ["RESERVATIONS", "DISABILITY_PARKING", "CARPOOL_PARKING", "EV_CHARGING_STATION", "VALLET_SERVICE", "CAR_WASH", "SECURITY", "AIRPORT_SHUTTLE"]
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4,
                EDIT_UPDATE_REQUESTS: 8,
                EDIT_EXTERNAL_PROVIDERS: 16
            },
            DEFAULT_POLYGON_SIZE_METERS: 20,
            initialize: function(e) {
                n.prototype.initialize.apply(this, arguments),
                    this._originalResidential = this.attributes.residential
            },
            parse: function(e) {
                n.prototype.parse.apply(this, arguments),
                    this.parseUpdateRequests(e)
            },
            merge: function(e) {
                _.defaults(e, this.defaults()),
                    n.prototype.merge.apply(this, arguments),
                    this._originalResidential = this.attributes.residential
            },
            parseUpdateRequests: function(e) {
                if (e.venueUpdateRequests) {
                    var t = s.prototype.arePropertiesEditable.apply(this),
                        i = W.loginManager.canEditPlaceUpdates(),
                        n = new u({
                            isInEditArea: t,
                            isAdLockedEditable: W.loginManager.canEditAdLockedPlaceUpdates(),
                            isEditable: this.areUpdateRequestsEditable() && i
                        });
                    e.venueUpdateRequests = e.venueUpdateRequests.map(function(e) {
                        return e.place = this,
                            n.build(e)
                    }, this)
                }
            },
            getCategorySet: function() {
                return this.attributes.categories.toSet()
            },
            getMainCategory: function() {
                return this._categoryToParentMap || (this._categoryToParentMap = this._generateCategoryToParentMap()),
                    0 === this.attributes.categories.length ? null : this._categoryToParentMap[this.attributes.categories.first()]
            },
            _generateCategoryToParentMap: function() {
                var e = {};
                return Object.forEach(W.Config.venues.subcategories, function(t, i) {
                        e[t] = t,
                            i.forEach(function(i) {
                                e[i] = t
                            })
                    }),
                    e
            },
            getServiceSet: function() {
                return this.attributes.services.toSet()
            },
            getAddress: function() {
                return c.fromStreetID(this.attributes.streetID, this.model, {
                    houseNumber: this.attributes.houseNumber
                })
            },
            is2D: function() {
                return this.geometry.components && this.geometry.components.every(function(e) {
                    return e.components.length > 3
                })
            },
            isPoint: function() {
                return "OpenLayers.Geometry.Point" === this.geometry.CLASS_NAME
            },
            isGasStation: function() {
                return Boolean(this.getCategorySet().GAS_STATION)
            },
            getPolygonGeometry: function() {
                return this.isPoint() ? h.pointToSquarePolygon(this.geometry, this.DEFAULT_POLYGON_SIZE_METERS) : this.geometry.clone()
            },
            getPointGeometry: function() {
                return this.isPoint() ? this.geometry.clone() : h.polygonToPoint(this.geometry)
            },
            getLockRank: function() {
                return Math.max(this.attributes.rank, this.attributes.lockRank)
            },
            getNavigationPoint: function() {
                return this.attributes.entryExitPoints.length > 0 ? this.attributes.entryExitPoints[0] : new d({
                    point: this.geometry.getCentroid(!0),
                    entry: !0,
                    exit: !0
                })
            },
            isApproved: function() {
                return this.attributes.approved
            },
            getOpeningHours: function() {
                return new r.Collection(this.attributes.openingHours.map(function(e) {
                    return new r.OpeningHour(e)
                }))
            },
            hasUpdateRequests: function() {
                return this.attributes.venueUpdateRequests.length > 0
            },
            getImagesByUserId: function(e) {
                return _.filter(this.attributes.images, function(t) {
                    return t.get("creatorUserId") === e
                })
            },
            getImageById: function(e) {
                return _.find(this.attributes.images, function(t) {
                    return t.id === e
                })
            },
            arePropertiesEditable: function() {
                return s.prototype.arePropertiesEditable.apply(this, arguments) && this.attributes.approved
            },
            areUpdateRequestsEditable: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_UPDATE_REQUESTS)
            },
            areExternalProvidersEditable: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_EXTERNAL_PROVIDERS)
            },
            hasOpenUpdateRequests: function() {
                return this.attributes.venueUpdateRequests.some(function(e) {
                    return null === e.get("approved")
                })
            },
            canConvertToPublic: function() {
                return !1 === this._originalResidential
            },
            isParkingLot: function() {
                var e = this.attributes.categories;
                return Array.isArray(e) && e[0] === a.PARKING_LOT
            },
            isResidential: function() {
                return this.attributes.residential
            },
            CLASS_NAME: "Waze.Feature.Vector.Landmark"
        });
    e.exports = g
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        getUrl: function(e) {
            return this.getUrlById(e, this.id)
        },
        getUrlById: function(e, t) {
            return e === n.SIZE.ORIGINAL ? W.Config.venues.image_bucket_url + t : W.Config.venues.image_bucket_url + "thumbs/thumb" + e + "_" + t
        }
    });
    n.SIZE = {
            ORIGINAL: 0,
            SMALL: 32,
            WEB: 100,
            MOBILE: 347,
            BIG: 700
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = {
            UNKNOWN: "UNKNOWN",
            PARKING_TYPE_PUBLIC: "PUBLIC",
            PARKING_TYPE: ["PUBLIC", "RESTRICTED", "PRIVATE"],
            COST_TYPE: ["FREE", "LOW", "MODERATE", "EXPENSIVE"],
            PAYMENT_TYPE: ["CASH", "CHECKS", "CREDIT", "DEBIT_CARD", "PERMIT", "MEMBERSHIP", "PREPAID", "PARKING_APP", "DIGITAL_WALLET", "SMS_CALL", "ELECTRONIC_PASS"],
            LOT_TYPE: ["STREET_LEVEL", "STREET_LEVEL_COVERED", "MULTI_LEVEL", "UNDERGROUND"],
            SPOTS_ESTIMATE: [{
                value: "R_1_TO_10",
                range: [1, 10]
            }, {
                value: "R_11_TO_30",
                range: [11, 30]
            }, {
                value: "R_31_TO_60",
                range: [31, 60]
            }, {
                value: "R_61_TO_100",
                range: [61, 100]
            }, {
                value: "R_101_TO_300",
                range: [101, 300]
            }, {
                value: "R_301_TO_600",
                range: [301, 600]
            }, {
                value: "R_600_PLUS",
                range: [601, 1 / 0]
            }]
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(18),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Behavior.extend({
            defaults: {
                modelAttribute: "model"
            },
            timepickerOptions: {
                defaultTime: !1,
                showMeridian: !1,
                template: "dropdown",
                icons: {
                    up: "fa fa-angle-up",
                    down: "fa fa-angle-down"
                }
            },
            datepickerOptions: {
                singleDatePicker: !0,
                autoUpdateInput: !1,
                locale: {
                    format: "YYYY-MM-DD"
                }
            },
            ui: {
                startDate: ".start-date",
                startTime: ".start-time",
                endDate: ".end-date",
                endTime: ".end-time"
            },
            events: {
                "click .date-input-group .input-group-addon": "_focusSiblingInput",
                "click .input-group.bootstrap-timepicker .input-group-addon": "_focusSiblingInput"
            },
            bindings: function() {
                return {
                    ".start-date": {
                        observe: "startDate",
                        onGet: this._getDate.bind(this),
                        onSet: this._setDate.bind(this)
                    },
                    ".start-time": {
                        observe: "startDate",
                        onGet: this._getTime.bind(this),
                        onSet: this._setTime.bind(this)
                    },
                    ".end-date": {
                        observe: "endDate",
                        onGet: this._getDate.bind(this),
                        onSet: this._setDate.bind(this)
                    },
                    ".end-time": {
                        observe: "endDate",
                        onGet: this._getTime.bind(this),
                        onSet: this._setTime.bind(this)
                    },
                    ".no-end-date": {
                        observe: "endDate",
                        onGet: function(e) {
                            return e ? e.length > 0 : void 0
                        },
                        onSet: function(e) {
                            return null
                        }
                    }
                }
            },
            onRender: function() {
                return this.view.stickit(this.view[this.options.modelAttribute], this.bindings()),
                    this._createTimePickers(),
                    this._createDatePickers()
            },
            onBeforeDestroy: function() {
                return this._destroyTimePickers(),
                    this._destroyDatePickers()
            },
            _createTimePickers: function() {
                return this.ui.startTime.timepicker(this.timepickerOptions),
                    this.ui.endTime.timepicker(this.timepickerOptions)
            },
            _createDatePickers: function() {
                return this._createDatePicker(this.ui.startDate, this.ui.startTime),
                    this._createDatePicker(this.ui.endDate, this.ui.endTime)
            },
            _createDatePicker: function(e, t) {
                return e.daterangepicker(this.datepickerOptions),
                    e.on("apply.daterangepicker", function(i, n) {
                        e.val(n.startDate.format(n.locale.format)),
                            e.trigger("change"),
                            t && t.focus()
                    })
            },
            _destroyTimePickers: function() {
                this.ui.startTime && this.ui.startTime.data("timepicker") && this.ui.startTime.data("timepicker").remove(),
                    this.ui.endTime && this.ui.endTime.data("timepicker") && this.ui.endTime.data("timepicker").remove()
            },
            _destroyDatePickers: function() {
                this.ui.startDate && this.ui.startDate.data("daterangepicker") && this.ui.startDate.data("daterangepicker").remove(),
                    this.ui.endDate && this.ui.endDate.data("daterangepicker") && this.ui.endDate.data("daterangepicker").remove()
            },
            _focusSiblingInput: function(e) {
                return this.$(e.target).parents(".input-group").find("input").focus()
            },
            _getDate: function(e) {
                var t = null;
                if (null != e) {
                    var i = e.split(" ")[0];
                    this._isValidDate(i) && (t = i)
                }
                return t
            },
            _getTime: function(e) {
                var t = null;
                return e && e.length > 0 && (t = e.split(" ")[1]),
                    t
            },
            _setDate: function(e, t) {
                if (this._isValidDate(e)) {
                    var i = t.view[this.options.modelAttribute].get(t.observe),
                        n = this._getTime(i);
                    return null == n && (n = "00:00"), [e, this._padTime(n)].join(" ")
                }
                return null
            },
            _setTime: function(e, t) {
                var i = t.view[this.options.modelAttribute].get(t.observe),
                    n = this._getDate(i);
                return this._isValidDate(n) ? [n, this._padTime(e)].join(" ") : " " + this._padTime(e)
            },
            _padTime: function(e) {
                var t = e.split(":");
                return 1 === (0,
                        s.default)(t, 1)[0].length && (e = "0" + e),
                    e
            },
            _isValidDate: function(e) {
                return null != Date.parse(e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(15),
        a = n(o),
        l = i(140),
        u = n(l),
        d = i(29),
        c = n(d),
        h = i(35),
        p = n(h),
        f = OL.Class(r.default, {
            segment: null,
            node: null,
            deleteNode: !0,
            keepTurns: !1,
            initialize: function(e, t, i) {
                this.segment = e,
                    this.node = t,
                    r.default.prototype.initialize.apply(this, [i]),
                    this.vertex = p.default.for(this.segment, this.node)
            },
            doAction: function() {
                var e = this,
                    t = this.segment.getTurnsLockAttribute(this.node),
                    i = this.segment.getNodeAttribute(this.node);
                if (!i)
                    return !1;
                var n = {};
                n[t] = !1,
                    n[i + "NodeID"] = null;
                var s = this.model.getTurnGraph();
                this.keepTurns || (s.getTurnsFrom(this.vertex).forEach(function(t) {
                        return e.doSubAction(new c.default(s, t.withUnknownTurnData()))
                    }),
                    s.getTurnsTo(this.vertex.getOpposite()).forEach(function(t) {
                        return e.doSubAction(new c.default(s, t.withUnknownTurnData()))
                    }));
                var r = this.node.attributes.segIDs.clone();
                return OL.Util.removeItem(r, this.segment.getID()),
                    this.doSubAction(new a.default(this.segment, n)),
                    this.doSubAction(new a.default(this.node, {
                        segIDs: r
                    })),
                    this.node.isDisconnected() && this.deleteNode && this.doSubAction(new u.default(this.node)), !0
            },
            CLASS_NAME: "Waze.Action.DisconnectSegment"
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = i(143),
        r = i(9),
        o = i(145),
        a = i(4),
        l = OpenLayers.Class(s, {
            segment: null,
            segmentAttributes: null,
            initialSegmentGeometry: null,
            createNodes: !1,
            createTwoWay: !1,
            openAllTurns: !1,
            initialize: function(e, t) {
                s.prototype.initialize.apply(this, [e, t]),
                    this.segment = e,
                    this.segmentAttributes = {},
                    this.createTwoWay && (this.segment.attributes.revDirection = !0,
                        this.segment.attributes.fwdDirection = !0)
            },
            destroy: function() {
                this.segment = null,
                    this.segmentAttributes = null,
                    this.newID = null,
                    this.options = null,
                    null !== this.initialSegmentGeometry && (this.initialSegmentGeometry.destroy(),
                        this.initialSegmentGeometry = null),
                    s.prototype.destroy.apply(this)
            },
            doAction: function() {
                if (this.segment.isPoint())
                    return !1;
                this.segment.geometry.bounds || this.segment.geometry.calculateBounds(),
                    this.segment.bounds || (this.segment.bounds = this.segment.geometry.bounds),
                    this.segment.state = OpenLayers.State.INSERT,
                    this.segment.getID() || this.segment.setID(this.model.segments.generateUniqueID()),
                    this.segment.attributes.streetIDs || (this.segment.attributes.streetIDs = []),
                    this.initialSegmentGeometry = this.segment.geometry.clone(),
                    this.model.segments.put(this.segment);
                var e = this.segment.attributes.geometry;
                this.segment.attributes.geometry = null,
                    $.extend(!0, this.segmentAttributes, this.segment.attributes),
                    this.segment.attributes.geometry = e,
                    this.updateEndPoint(null, this.touching.fromVertex, !0),
                    this.updateEndPoint(null, this.touching.toVertex, !1),
                    this.openAllTurns && ["from", "to"].forEach(function(e) {
                        var t = this.segment.getNodeByDirection(e);
                        this.doSubAction(new o(t, !0, {
                            forSegment: this.segment
                        }))
                    }, this)
            },
            undoAction: function() {
                s.prototype.undoAction.apply(this),
                    this.model.segments.remove(this.segment)
            },
            redoAction: function() {
                this.model.segments.put(this.segment),
                    s.prototype.redoAction.apply(this)
            },
            serialize: function() {
                var e = this.segmentAttributes;
                return e.id = this.segment.getID(),
                    e.geometry = this.initialSegmentGeometry, {
                        _objectType: a.SEGMENT,
                        action: n.TYPE.ADD,
                        attributes: e
                    }
            },
            getBounds: function() {
                var e = r.prototype.getBounds.apply(this, arguments) || new OpenLayers.Bounds;
                return e.extend(this.initialSegmentGeometry.getBounds()),
                    e
            },
            CLASS_NAME: "Waze.Action.AddSegment"
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";
    var n = i(41),
        s = i(40),
        r = void 0,
        o = i(9),
        a = i(103),
        l = i(11),
        u = i(13),
        d = i(207),
        c = i(29),
        h = i(84),
        p = i(144),
        f = i(35);
    _.defer(function() {
        r = i(82)
    });
    var g = OpenLayers.Class(o, {
        segment: null,
        splits: null,
        initialize: function(e, t) {
            o.prototype.initialize.apply(this, [t]),
                this.segment = e
        },
        splitSegment: function() {
            var e = this.model.nodes.get(this.segment.attributes.fromNodeID),
                t = this.model.nodes.get(this.segment.attributes.toNodeID);
            this.addSplitNode(),
                this.createSegments(),
                this.connectSegmentsToSplitNode(),
                this.connectSplitToNode(this.splits.first(), e),
                this.connectSplitToNode(this.splits.last(), t),
                this.connectParts(),
                this.doSubAction(new d(this.segment.getID(), this.splits.last().getID(), this.splits.first().getID()), {
                    dontSerialize: !0
                }),
                this.doSubAction(new s(this.segment, {
                    hide: !0
                }))
        },
        connectParts: function() {
            if (this.segment.isDrivable()) {
                var e = this.splits.first(),
                    t = this.splits.last();
                if (this.splitNode.isTurnAllowedBySegDirections(e, t)) {
                    var i = new p(f.forwardOf(e.getID()), f.forwardOf(t.getID()), h.createAllowed());
                    this.doSubAction(new c(this.model.getTurnGraph(), i))
                }
                if (this.splitNode.isTurnAllowedBySegDirections(t, e)) {
                    var n = new p(f.reverseOf(t.getID()), f.reverseOf(e.getID()), h.createAllowed());
                    this.doSubAction(new c(this.model.getTurnGraph(), n))
                }
            }
        },
        createSegments: function() {
            var e = this.segment.attributes.origID || this.segment.getID() || null,
                t = this.segment.attributes,
                i = this.splits[0],
                n = this.splits[1];
            i.attributes.toNodeID = this.splitNode.getID(),
                i.attributes.fromNodeID = t.fromNodeID,
                n.attributes.toNodeID = t.toNodeID,
                n.attributes.fromNodeID = this.splitNode.getID(),
                this.splits.forEach(function(i) {
                    i.attributes.fwdDirection = t.fwdDirection,
                        i.attributes.revDirection = t.revDirection,
                        i.attributes.fwdToll = t.fwdToll,
                        i.attributes.revToll = t.revToll,
                        i.attributes.origIDs = [e],
                        i.setID(null),
                        this.doSubAction(new r(i))
                }, this)
        },
        addSplitNode: function() {
            var e = void 0,
                t = void 0;
            this.splitNode || (e = this.splits.first().geometry.components.last(),
                e = new OpenLayers.Geometry.Point(e.x, e.y),
                t = new a(e, []),
                this.doSubAction(t),
                this.splitNode = t.node)
        },
        connectSegmentsToSplitNode: function() {
            this.splitWithSegment && this.doSubAction(new n(this.splitNode, this.splitWithSegment)),
                this.splits.forEach(function(e) {
                    this.doSubAction(new n(this.splitNode, e, {
                        dontSerialize: !0
                    }))
                }, this)
        },
        connectSplitToNode: function(e, t) {
            t && this.doSubAction(new n(t, e, {
                dontSerialize: !0
            }))
        },
        doAction: function() {
            return !(this.splitAtPoint && !this.createSplitsFromPoint(this.splitAtPoint)) && (!!this.splits && (!this.hasSingularParts() && void this.splitSegment()))
        },
        hasSingularParts: function() {
            var e = this.model.distanceCache.getValue(this.segment.geometry.getVertices(!0).first());
            return this.splits.some(function(t) {
                return t.geometry.getLength() < e
            }, this)
        },
        createSplitsFromPoint: function(e) {
            var t = void 0,
                i = this.segment.geometry.getVertices().map(function(e) {
                    return new OpenLayers.Geometry.Point(e.x, e.y)
                });
            if (u.defined(this.splittingPointIndex))
                t = this.splittingPointIndex;
            else if (-1 === (t = this.getSplitEdge(e, i)))
                return !1;
            var n = new OpenLayers.Geometry.LineString(i.slice(0, t + 1));
            n.components.last().equals(e) || n.components.push(e.clone());
            var s = new OpenLayers.Geometry.LineString(i.slice(t + 1));
            return s.components.first().equals(e) || s.components.unshift(e.clone()),
                this.splits = [n, s].map(function(e) {
                    return this.createSplitSegmentPart(this.segment, e)
                }, this), !0
        },
        getSplitEdge: function(e, t) {
            return l.getPointEdge(t, e, this.splittingPointDistance)
        },
        createSplitSegmentPart: function(e, t) {
            var i = e.clone();
            return delete i.geometry,
                i.geometry = t,
                i
        },
        CLASS_NAME: "Waze.Action.SplitSegments"
    });
    e.exports = g
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                (0,
                    r.default)(this, e),
                this._state = t,
                    this._restrictions = i.slice(),
                    this._instructionOpcode = n
            }
            return (0,
                    a.default)(e, [{
                    key: "getRestrictions",
                    value: function() {
                        return this._restrictions.slice()
                    }
                }, {
                    key: "getInstructionOpcode",
                    value: function() {
                        return this._instructionOpcode
                    }
                }, {
                    key: "hasInstructionOpcode",
                    value: function() {
                        return null !== this._instructionOpcode
                    }
                }, {
                    key: "withState",
                    value: function(t) {
                        return e.create(t, this._restrictions, this._instructionOpcode)
                    }
                }, {
                    key: "withRestrictions",
                    value: function(t) {
                        return e.create(this._state, t, this._instructionOpcode)
                    }
                }, {
                    key: "withInstructionOpcode",
                    value: function(t) {
                        return e.create(this._state, this._restrictions, t)
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return "" + this._state
                    }
                }, {
                    key: "isUnknown",
                    value: function() {
                        return this._state === e.State.UNKNOWN
                    }
                }, {
                    key: "isAllowed",
                    value: function() {
                        return this._state === e.State.ALLOWED
                    }
                }, {
                    key: "isDisallowed",
                    value: function() {
                        return this._state === e.State.DISALLOWED
                    }
                }, {
                    key: "hasAdditionalData",
                    value: function() {
                        return this.hasInstructionOpcode() || this._restrictions && this._restrictions.length > 0
                    }
                }, {
                    key: "withToggledState",
                    value: function(t) {
                        return t ? this.withState(e.State.ALLOWED) : this.withState(e.State.DISALLOWED)
                    }
                }], [{
                    key: "createAllowed",
                    value: function() {
                        return e._ALLOWED_TURN
                    }
                }, {
                    key: "createDisallowed",
                    value: function() {
                        return e._DISALLOWED_TURN
                    }
                }, {
                    key: "createUnknown",
                    value: function() {
                        return e._UNKNOWN_TURN
                    }
                }, {
                    key: "create",
                    value: function(t) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                        return 0 === i.length && null === n ? t === e.State.ALLOWED ? e._ALLOWED_TURN : e._DISALLOWED_TURN : new e(t, i, n)
                    }
                }]),
                e
        }();
    l.State = {
            DISALLOWED: 0,
            ALLOWED: 1,
            UNKNOWN: 2
        },
        l._ALLOWED_TURN = new l(l.State.ALLOWED),
        l._DISALLOWED_TURN = new l(l.State.DISALLOWED),
        l._UNKNOWN_TURN = new l(l.State.UNKNOWN),
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(237),
        a = n(o),
        l = i(150),
        u = n(l),
        d = i(15),
        c = n(d),
        h = i(793),
        p = n(h),
        f = i(794),
        g = n(f),
        m = Backbone.Model.extend({
            MORE_INFO_DEFAULTS: [{
                name: "averageSession",
                visible: !0
            }, {
                name: "allSessions",
                visible: !1
            }],
            _moreInfoTypes: null,
            _moreInfoTypeMap: null,
            constructor: function(e) {
                return this.problem = e,
                    Backbone.Model.apply(this)
            },
            setState: function(e) {
                var t = {};
                t.open = e === a.default.OPEN,
                    t.resolution = function() {
                        switch (e) {
                            case a.default.SOLVED:
                                return u.default.FIXED;
                            case a.default.NOT_IDENTIFIED:
                                return u.default.NOT_A_PROBLEM;
                            case a.default.OPEN:
                                return null
                        }
                    }(),
                    this.problem.model.actionManager.add(new c.default(this.problem, t))
            },
            getState: function() {
                var e = this;
                return this.problem.attributes.open ? a.default.OPEN : function() {
                    switch (e.problem.attributes.resolution) {
                        case u.default.FIXED:
                            return a.default.SOLVED;
                        case u.default.NOT_A_PROBLEM:
                            return a.default.NOT_IDENTIFIED
                    }
                }()
            },
            reportStateChanged: function() {
                var e = this.problem.attributes.problemType;
                null != this.problem.attributes.subType && (e += "_" + this.problem.attributes.subType),
                    this.getState() === a.default.SOLVED ? W.Report.mapProblemAction("update_state", e, 1) : this.getState() === a.default.NOT_IDENTIFIED && W.Report.mapProblemAction("update_state", e, -1)
            },
            getTitle: function() {
                return I18n.t("problems.types." + this.problem.attributes.subType + ".title")
            },
            getReportedString: function() {
                return I18n.t("problems.panel.auto_detected")
            },
            hasDescription: function() {
                return !0
            },
            getDescription: function() {
                return I18n.t("problems.types." + this.problem.attributes.subType + ".description")
            },
            getDescriptionTemplate: function() {
                return null
            },
            isConversationAvailable: function() {
                return !1
            },
            getMoreInfoTypes: function() {
                var e = this;
                return null !== this._moreInfoTypes ? this._moreInfoTypes : (this._moreInfoTypeMap = {},
                    this._moreInfoTypes = this.MORE_INFO_DEFAULTS.map(function(t) {
                        var i = new g.default({
                            name: t.name,
                            visible: t.visible
                        });
                        return e._moreInfoTypeMap[t.name] = i,
                            i
                    }),
                    this._moreInfoTypes)
            },
            getMoreInfo: function() {
                var e = this;
                return this.moreInfo ? this.moreInfo : (this.moreInfo = this.problem.getSessions().done(function(t) {
                        var i = (0,
                                r.default)(t, 1),
                            n = i[0];
                        e._moreInfoTypeMap.averageSession.set({
                                available: n.average && n.average.geometry
                            }),
                            e._moreInfoTypeMap.allSessions.set({
                                available: n.sessions && n.sessions.length > 0
                            })
                    }),
                    this.moreInfo)
            },
            isMoreInfoAvailable: function() {
                return _.some(this.getMoreInfoTypes(), function(e) {
                    return e.get("available")
                })
            },
            getSeverity: function() {
                return this.problem.attributes.severity
            },
            getRepository: function() {
                return this.problem.model.problems
            },
            createMoreInfoRenderer: function(e, t, i) {
                return new p.default(e, t, i)
            },
            getMarkerLayer: function() {
                return W.map.problemLayer
            },
            isEditable: function() {
                return this.problem.canEdit()
            },
            getBounds: function() {
                return this.problem.getDisconnectBounds()
            },
            getGeometry: function() {
                return this.problem.geometry.clone()
            },
            getOpenStateString: function() {
                return I18n.t("problems.panel.states.open")
            },
            getSolvedStateString: function() {
                return I18n.t("problems.panel.states.solved")
            },
            getNotIdentifiedStateString: function() {
                return I18n.t("problems.panel.states.not_identified")
            },
            getNextButtonString: function() {
                return this._nextButtonString || I18n.t("problems.panel.next")
            },
            setNextButtonString: function(e) {
                this._nextButtonString = e
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(53),
        r = i(176),
        o = OpenLayers.Class(n, {
            city: null,
            initialize: function(e, t, i, s, r) {
                n.prototype.initialize.apply(this, [r]),
                    this.state = e,
                    this.country = t,
                    this.name = i,
                    this.isEmpty = s
            },
            doAction: function() {
                var e = null,
                    t = void 0,
                    i = !1;
                if (this.state || (this.state = this.model.states.getByAttributes({
                        isDefault: !0
                    }).first()), !(e = this.isEmpty ? this.model.cities.getByAttributes({
                        countryID: this.country.getID(),
                        stateID: this.state.getID(),
                        isEmpty: !0
                    }).first() : this.model.cities.getByAttributes({
                        name: this.name,
                        countryID: this.country.getID(),
                        stateID: this.state.getID()
                    }).first())) {
                    var n = new r({
                        countryID: this.country.getID(),
                        stateID: this.state.getID(),
                        isEmpty: this.isEmpty,
                        name: this.isEmpty ? "" : this.name
                    });
                    t = new s(n, this.model.cities),
                        e = t.object,
                        this.doSubAction(t),
                        i = !0
                }
                return this.city = e,
                    i
            },
            CLASS_NAME: "Waze.Action.AddOrGetCity"
        });
    e.exports = o
}, , , , , function(e, t, i) {
    e.exports = {
        default: i(418),
        __esModule: !0
    }
}, function(e, t, i) {
    var n = i(28),
        s = i(14),
        r = i(57);
    e.exports = function(e, t) {
        var i = (s.Object || {})[e] || Object[e],
            o = {};
        o[e] = t(i),
            n(n.S + n.F * r(function() {
                i(1)
            }), "Object", o)
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(21),
        r = n(s),
        o = i(50),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = {
            TRUCK: 0,
            PUBLIC_TRANSPORTATION: 256,
            TAXI: 272,
            BUS: 288,
            RV: 512,
            TOWING_VEHICLE: 768,
            MOTORCYCLE: 1024,
            PRIVATE: 1280,
            HAZARDOUS_MATERIALS: 1536,
            CAV: 1792,
            EV: 1808,
            HYBRID: 1824,
            CLEAN_FUEL: 1840
        },
        p = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.vehicleTypes,
                    n = void 0 === i ? [] : i,
                    s = t.subscriptions,
                    r = void 0 === s ? [] : s,
                    o = t.numPassengers,
                    l = void 0 === o ? 0 : o;
                (0,
                    u.default)(this, e),
                this._vehicleTypes = n,
                    this._subscriptions = r,
                    this._numPassengers = l,
                    (0,
                        a.default)(this)
            }
            return (0,
                    c.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._numPassengers === e._numPassengers && _.isEqual(this._vehicleTypes.sort(), e._vehicleTypes.sort()) && _.isEqual(this._subscriptions.sort(), e._subscriptions.sort())
                    }
                }, {
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            r.default)(this.toJSON(), e))
                    }
                }, {
                    key: "getNumPassengers",
                    value: function() {
                        return this._numPassengers
                    }
                }, {
                    key: "getVehicleTypes",
                    value: function() {
                        return this._vehicleTypes.slice()
                    }
                }, {
                    key: "getSubscriptions",
                    value: function() {
                        return null == this._subscriptions ? [] : this._subscriptions.slice()
                    }
                }, {
                    key: "hasSubscriptions",
                    value: function() {
                        return null != this._subscriptions && this._subscriptions.length > 0
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return !this._vehicleTypes || 0 === this._vehicleTypes.length
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            vehicleTypes: this._vehicleTypes,
                            numPassengers: this._numPassengers,
                            subscriptions: this._subscriptions
                        }
                    }
                }]),
                e
        }();
    t.default = {
            RestrictionDriveProfile: p,
            VEHICLE_TYPES: h
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(13),
        r = i(76),
        o = OpenLayers.Class(n, {
            nested: {
                geometry: OL.Geometry
            },
            eachSegmentPair: function(e, t, i) {
                Object.forEach(e, function(e, n) {
                    var s = e.split(",");
                    t.call(i, parseInt(s[0], 10), parseInt(s[1], 10), n, e)
                })
            },
            allConnectionKeys: function(e) {
                var t = [],
                    i = [];
                return this.attributes.segIDs.forEach(function(n) {
                    var s = this.model.segments.get(n);
                    this.attributes.segIDs.forEach(function(n) {
                        var r = this.model.segments.get(n);
                        s && r && (s !== r || e) && (t.push({
                                from: s,
                                to: r
                            }),
                            this.isTurnAllowedBySegDirections(s, r) && s.isDrivable() && r.isDrivable() && i.push({
                                from: s,
                                to: r
                            }))
                    }, this)
                }, this), {
                    all: t,
                    legal: i
                }
            },
            isTurnAllowedBySegDirections: function(e, t) {
                if (!e || !t)
                    return !1;
                var i = e.attributes.toNodeID === this.getID() ? e.attributes.fwdDirection : e.attributes.revDirection,
                    n = t.attributes.fromNodeID === this.getID() ? t.attributes.fwdDirection : t.attributes.revDirection;
                return i && n
            },
            getAngleToSegment: function(e) {
                var t = void 0,
                    i = void 0,
                    n = e.geometry.getVertices(),
                    s = void 0;
                return e.attributes.fromNodeID === this.getID() ? (t = n[0],
                        i = n[1]) : (t = n[n.length - 1],
                        i = n[n.length - 2]),
                    s = Math.atan2(i.y - t.y, i.x - t.x).toDeg(),
                    s < 0 && (s = 360 + s),
                    s
            },
            getDirectionBetweenSegments: function(e, t) {
                var i = e.geometry.components,
                    n = i.length,
                    s = void 0,
                    r = void 0,
                    o = void 0;
                return e.attributes.toNodeID === this.getID() ? (s = i[n - 2],
                        r = i[n - 1]) : (s = i[1],
                        r = i[0]),
                    o = t.attributes.fromNodeID === this.getID() ? t.geometry.components[1] : t.geometry.components[t.geometry.components.length - 2],
                    (r.x - s.x) * (o.y - s.y) - (r.y - s.y) * (o.x - s.x) > 0
            },
            isDisconnected: function() {
                return this.attributes.segIDs.isEmpty()
            },
            isConnectedToSegment: function(e) {
                return this.attributes.segIDs.contains(e.getID())
            },
            isConnectedToBigJunction: function() {
                return this.model.segments.getByIds(this.attributes.segIDs).some(function(e) {
                    return e.isBigJunctionShort()
                }, this)
            },
            isAllowedToMoveNode: function() {
                return this.attributes.segIDs.every(function(e) {
                    var t = this.model.segments.get(e);
                    return t && t.isAllowed(r.Segments.EDIT_GEOMETRY) && !t.isBigJunctionShort()
                }, this)
            },
            isDeleteable: function(e) {
                var t = this.attributes.segIDs.map(function(t) {
                    return e.segments.get(t)
                });
                return t = t.filter(function(e) {
                        return s.defined(e)
                    }),
                    t.length === this.attributes.segIDs.length && (this.areSegmentsBridgable(t) && n.prototype.isDeletable.apply(this))
            },
            areSegmentsBridgable: function(e) {
                if (!e || 2 !== e.length)
                    return !1;
                if (!this.attributes.segIDs.contains(e[0].getID()) || !this.attributes.segIDs.contains(e[1].getID()))
                    return !1;
                if (!this.isTurnAllowedBySegDirections(e[0], e[1]) && !this.isTurnAllowedBySegDirections(e[1], e[0]))
                    return !1;
                if (e[0].attributes.primaryStreetID !== e[1].attributes.primaryStreetID)
                    return !1;
                var t = ["fwdMaxSpeed", "revMaxSpeed"],
                    i = t;
                return e[0].attributes.toNodeID !== e[1].attributes.fromNodeID && e[0].attributes.fromNodeID !== e[1].attributes.toNodeID && (i = t.concat().reverse()), !!t.every(function(t, n) {
                    return e[0].attributes[t] === e[1].attributes[i[n]]
                })
            },
            allSegmentsPresent: function(e) {
                return this.attributes.segIDs.every(function(t) {
                    return e.segments.get(t)
                })
            },
            connectionsExist: function() {
                return !this.allConnectionKeys().legal.isEmpty()
            },
            areConnectionsEditable: function() {
                var e = this.model.segments.getByIds(this.attributes.segIDs);
                return e.length === this.attributes.segIDs.length && e.every(function(e) {
                    return e.canEditConnections()
                })
            },
            areAllConnectionsEnabled: function() {
                var e = this.allConnectionKeys().legal,
                    t = this.model.getTurnGraph();
                return !e.isEmpty() && e.every(function(e) {
                    return t.getTurnThroughNode(this, e.from, e.to).getTurnData().isAllowed()
                }, this)
            },
            areAllConnectionsDisabled: function() {
                var e = this.allConnectionKeys().legal,
                    t = this.model.getTurnGraph();
                return !e.isEmpty() && e.every(function(e) {
                    return !t.getTurnThroughNode(this, e.from, e.to).getTurnData().isAllowed()
                }, this)
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                DELETE: 2,
                EDIT_OPEN_TURNS: 4,
                EDIT_CLOSE_TURNS: 8
            },
            CLASS_NAME: "Waze.Feature.Vector.Node"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    for (var n = W.Config.venues.categories, s = _.object(n, n), r = [], o = 0; o < n.length; o++) {
        var a = n[o];
        r.push({
            id: a
        });
        for (var l = 0; l < W.Config.venues.subcategories[a].length; l++) {
            var u = W.Config.venues.subcategories[a][l];
            r.push({
                id: u
            })
        }
    }
    t.PARKING_LOT = "PARKING_LOT",
        t.mainCategories = n,
        t.mainCategoryMap = s,
        t.allCategories = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(181),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            TYPE: {
                PRIVATE_FORUM_MESSAGE: "PRIVATE_FORUM_MESSAGE",
                DISCOVER_COMMUNITY_FORUM: "DISCOVER_COMMUNITY_FORUM",
                DISCOVER_LOCAL_WIKI: "DISCOVER_LOCAL_WIKI",
                FIRST_TIME_VIDEOS: "FIRST_TIME_VIDEOS",
                CHECK_YOUR_NEIGHBORHOOD: "CHECK_YOUR_NEIGHBORHOOD"
            },
            defaults: function() {
                return {
                    type: null,
                    timestamp: null,
                    parameters: {}
                }
            },
            isForumMessage: function() {
                return this.attributes.type === this.TYPE.PRIVATE_FORUM_MESSAGE
            },
            isFirstTimeMessage: function() {
                var e = this.attributes.type;
                return e === this.TYPE.DISCOVER_COMMUNITY_FORUM || e === this.TYPE.DISCOVER_LOCAL_WIKI || e === this.TYPE.FIRST_TIME_VIDEOS || e === this.TYPE.CHECK_YOUR_NEIGHBORHOOD
            },
            isNotification: function() {
                return !this.isForumMessage() && !this.isFirstTimeMessage()
            },
            getParameter: function(e) {
                return this.attributes.parameters[e]
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        o = i(4),
        a = n(o),
        l = i(23),
        u = n(l),
        d = i(62),
        c = n(d),
        h = Backbone.Model.extend({
            type: a.default.MTE,
            ENGLISH_LOCALE: "en",
            MTE_LOCALES: {
                el: "ελληνικά"
            },
            CATEGORIES: {
                FESTIVAL: "FESTIVAL",
                PARADE: "PARADE",
                MARATHON: "MARATHON",
                RACE: "RACE",
                CYCLING: "CYCLING",
                CONCERT: "CONCERT",
                GAME_DAY: "GAME_DAY",
                PAPAL_VISIT: "PAPAL_VISIT",
                PRESIDENTIAL_VISIT: "PRESIDENTIAL_VISIT",
                VIP_VISIT: "VIP_VISIT",
                CRISIS: "CRISIS",
                CONSTRUCTION: "CONSTRUCTION",
                OTHER: "OTHER"
            },
            defaults: function() {
                return {
                    id: null,
                    active: null,
                    category: null,
                    cityID: null,
                    comment: null,
                    contributors: [],
                    createdBy: null,
                    createdOn: null,
                    description: null,
                    startDate: (new Date).toString("yyyy-MM-dd HH:mm"),
                    endDate: null,
                    names: [],
                    permissions: r.default.ALL_PERMISSIONS & ~this.PERMISSIONS.EDIT_TWEET_TEXT,
                    updatedBy: null,
                    updatedOn: null,
                    url: null,
                    published: !1,
                    ready: !1,
                    uniqueName: null,
                    partners: [],
                    tweetText: null,
                    twitterAccountsUrls: []
                }
            },
            writableAttributes: ["id", "category", "cityID", "comment", "startDate", "endDate", "names", "url", "partners", "tweetText"],
            clone: function() {
                var e = Backbone.Model.prototype.clone.apply(this, arguments),
                    t = $.extend(!0, [], this.get("names"));
                return e.set({
                        names: t
                    }),
                    e.model = this.model,
                    e
            },
            getAddress: function() {
                return c.default.fromCityID(this.attributes.cityID, this.model)
            },
            getEnglishName: function() {
                var e = _.where(this.attributes.names, {
                    locale: this.ENGLISH_LOCALE
                });
                return e.length > 0 ? e[0].value : null
            },
            getLocale: function() {
                var e = this._getLocalNameObject();
                return null !== e ? e.locale : null
            },
            getLocalName: function() {
                var e = this._getLocalNameObject();
                return null !== e ? e.value : null
            },
            _getLocalNameObject: function() {
                var e = this,
                    t = _.reject(this.attributes.names, function(t) {
                        return t.locale === e.ENGLISH_LOCALE
                    });
                return t.length > 0 ? t[0] : null
            },
            canPublish: function() {
                return !this.isNew() && this.get("ready") && this.isAllowed(this.PERMISSIONS.PUBLISH)
            },
            canEditPartners: function() {
                return this.isAllowed(this.PERMISSIONS.MANIPULATE_PARTNERS)
            },
            canEditTweetText: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT_TWEET_TEXT)
            },
            PERMISSIONS: {
                EDIT_PROPERTIES: 1,
                MANIPULATE_PARTNERS: 2,
                PUBLISH: 4,
                EDIT_TWEET_TEXT: 16
            }
        });
    _.extend(h.prototype, _.omit(u.default.prototype, "clone", "initialize")),
        t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(125),
        g = n(f),
        m = i(517),
        v = n(m),
        y = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            transactionID: null,
                            actionType: null,
                            date: null,
                            userID: null,
                            objects: []
                        }
                    }
                }, {
                    key: "getObject",
                    value: function(e, t) {
                        return this.attributes.objects.filter(function(i) {
                            return i.attributes.objectID === t && i.attributes.objectType === e
                        })[0]
                    }
                }, {
                    key: "nested",
                    get: function() {
                        return {
                            objects: v.default
                        }
                    }
                }]),
                t
        }(Backbone.Model);
    y.ACTIONS = {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        _.extend(y.prototype, g.default),
        t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                (0,
                    r.default)(this, e),
                this._id = t,
                    Array.isArray(i) || (i = [i]),
                    this._strategies = i,
                    this._state = !1
            }
            return (0,
                    a.default)(e, [{
                    key: "getId",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        this._state = e
                    }
                }, {
                    key: "getState",
                    value: function() {
                        return this._state
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !0
                    }
                }, {
                    key: "writeStateToApp",
                    value: function(e, t) {
                        this._strategies.forEach(function(i) {
                            return i.writeStateToApp(e, t)
                        })
                    }
                }], [{
                    key: "of",
                    value: function(t, i) {
                        return new e(t, i)
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(6),
        r = i(11),
        o = OL.Class(n, {
            DEFAULT_POLYGON_SIZE_METERS: 50,
            MAX_SUBJECT_LENGTH: 30,
            MAX_BODY_LENGTH: 2e3,
            defaults: function() {
                return {
                    subject: "",
                    body: "",
                    geometry: null,
                    endDate: null,
                    lockRank: 0,
                    isFollowing: !1,
                    createdOn: null,
                    createdBy: null,
                    updatedBy: null,
                    updatedOn: null,
                    conversation: [],
                    permissions: s.ALL_PERMISSIONS,
                    id: null
                }
            },
            nested: {
                geometry: OL.Geometry
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4
            },
            DATE_FORMAT: "YYYY-MM-DD HH:mm",
            isPoint: function() {
                return "OpenLayers.Geometry.Point" === this.geometry.CLASS_NAME
            },
            getPolygonGeometry: function() {
                return this.isPoint() ? r.pointToSquarePolygon(this.geometry, this.DEFAULT_POLYGON_SIZE_METERS) : this.geometry.clone()
            },
            getPointGeometry: function() {
                return this.isPoint() ? this.geometry.clone() : r.polygonToPoint(this.geometry)
            },
            getComments: function() {
                return new Backbone.Collection(this.attributes.conversation)
            },
            isFollowing: function() {
                return this.attributes.isFollowing
            },
            setFollowing: function(e) {
                var t = this;
                return $.post(W.Config.paths.mapCommentFollow, {
                    mapCommentID: this.getID(),
                    follow: e
                }).done(function() {
                    t.attributes.isFollowing = e
                })
            },
            addComment: function(e) {
                var t = this;
                return $.post(W.Config.paths.mapCommentConversation, {
                    mapCommentID: this.getID(),
                    text: e
                }).done(function(e) {
                    e.isAutoFollowed && (t.attributes.isFollowing = !0),
                        t.attributes.conversation.push(e.comment)
                }).then(function(e) {
                    return new Backbone.Model(e.comment)
                })
            }
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = OpenLayers.Class(n, {
            feature: null,
            repo: null,
            newGeometry: null,
            oldGeometry: null,
            changedState: !1,
            initialize: function(e, t, i, n, s) {
                this.feature = e,
                    this.repo = t,
                    this.newGeometry = n,
                    this.oldGeometry = i
            },
            destroy: function() {
                this.feature = null,
                    this.repo = null,
                    this.newGeometry = null,
                    this.oldGeometry = null
            },
            doAction: function() {
                this.replaceGeometry(this.newGeometry.clone()),
                    this.feature.state || (this.changedState = !0,
                        this.feature.state = OpenLayers.State.UPDATE),
                    this.repo.changed(this.feature)
            },
            replaceGeometry: function(e) {
                e !== this.feature.geometry && (e.id = this.feature.geometry.id,
                    this.feature.geometry = e,
                    this.feature.bounds = this.feature.geometry.bounds)
            },
            undoAction: function() {
                this.changedState && (this.feature.state = null),
                    this.replaceGeometry(this.oldGeometry.clone()),
                    this.repo.changed(this.feature)
            },
            redoAction: function() {
                this.replaceGeometry(this.newGeometry.clone()),
                    this.changedState && (this.feature.state = OpenLayers.State.UPDATE),
                    this.repo.changed(this.feature)
            },
            serialize: function() {
                var e = {};
                return e.id = this.feature.getID(),
                    e.geometry = this.newGeometry, {
                        _objectType: this.feature.type,
                        action: n.TYPE.UPDATE,
                        attributes: e
                    }
            },
            getBounds: function() {
                return this.newGeometry.getBounds().clone()
            },
            CLASS_NAME: "Waze.Action.UpdateFeatureGeometry"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = {
            STATE_CHANGED: "STATE_CHANGED"
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = i(41),
        r = i(9),
        o = i(4),
        a = i(94),
        l = OpenLayers.Class(r, {
            point: null,
            segments: null,
            options: null,
            node: null,
            nodeAttributes: null,
            initialize: function(e, t, i) {
                r.prototype.initialize.apply(this, [i]),
                    this.point = e.clone(),
                    delete this.point.parent,
                    this.segments = t,
                    this.options = i,
                    this.nodeAttributes = {}
            },
            destroy: function() {
                this.model.nodes.get(this.node.getID()) || this.node.destroy(),
                    this.options = null,
                    this.segment = null,
                    this.point = null,
                    this.node = null,
                    this.newID = null,
                    this.segments = null,
                    this.nodeAttributes = null,
                    r.prototype.destroy.apply(this)
            },
            createNode: function(e) {
                var t = new a({
                    geometry: e
                });
                return t.attributes || (t.attributes = {}),
                    OpenLayers.Util.applyDefaults(t.attributes, this.DEFAULT_NODE_ATTRIBUTES),
                    t.attributes.segIDs = [],
                    t.state = OpenLayers.State.INSERT,
                    t.setID(this.model.nodes.generateUniqueID()),
                    $.extend(!0, this.nodeAttributes, t.attributes),
                    t
            },
            doAction: function() {
                if (this.node = this.createNode(this.point.clone()),
                    this.model.nodes.put(this.node),
                    null !== this.segments)
                    for (var e = 0, t = this.segments.length; e < t; e++)
                        this.doSubAction(new s(this.node, this.segments[e], this.options))
            },
            undoAction: function() {
                r.prototype.undoAction.apply(this),
                    this.model.nodes.remove(this.node)
            },
            redoAction: function() {
                this.model.nodes.put(this.node),
                    r.prototype.redoAction.apply(this)
            },
            serialize: function() {
                var e = this.nodeAttributes;
                return e.id = this.node.getID(),
                    e.geometry = this.point, {
                        _objectType: o.NODE,
                        action: n.TYPE.ADD,
                        attributes: e
                    }
            },
            DEFAULT_NODE_ATTRIBUTES: {
                permissions: 2147483647
            },
            CLASS_NAME: "Waze.Action.AddNode"
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = i(218),
        u = i(129),
        d = i(39),
        c = new l.DateTimeUtil,
        h = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.timeFrame,
                    n = void 0 === i ? null : i;
                (0,
                    r.default)(this, e),
                this._timeFrame = n
            }
            return (0,
                    a.default)(e, [{
                    key: "formatWeekdays",
                    value: function() {
                        if (this._timeFrame.isAllWeek())
                            return I18n.t("restrictions.editing.timeframe.all_week");
                        var e = this._timeFrame.getWeekdays(),
                            t = e.map(function(e) {
                                return u.WEEKDAY_ORDINALS.indexOf(e)
                            });
                        return c.getWeekdaysGist(t, "*").map(function(e) {
                            return "*" !== e ? I18n.t("date.abbr_day_names")[e] : e
                        }).join(", ").replace(", *, ", "-")
                    }
                }, {
                    key: "formatHours",
                    value: function() {
                        return this._timeFrame.isAllDay() ? I18n.t("restrictions.editing.timeframe.all_day") : this._timeFrame.getFromTime() + " - " + this._timeFrame.getToTime()
                    }
                }]),
                e
        }(),
        p = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.dataModel,
                    n = t.segment;
                (0,
                    r.default)(this, e),
                this._dataModel = i,
                    this._segment = n
            }
            return (0,
                    a.default)(e, [{
                    key: "getEditingTitle",
                    value: function(e) {
                        return this._getRestrictedTitle(e)
                    }
                }, {
                    key: "getForwardSummaryTitle",
                    value: function() {
                        return this._segment.getForwardRestrictions().length > 0 ? this._getRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.FWD) : this._getNotRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.FWD)
                    }
                }, {
                    key: "getReverseSummaryTitle",
                    value: function() {
                        return this._segment.getReverseRestrictions().length > 0 ? this._getRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.REV) : this._getNotRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.REV)
                    }
                }, {
                    key: "getBidiSummaryTitle",
                    value: function() {
                        return this._segment.getBidiRestrictions().length > 0 ? this._getRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.BOTH) : this._getNotRestrictedTitle(d.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                    }
                }, {
                    key: "_getRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.restricted", {
                            street: this._segment.getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "_getNotRestrictedTitle",
                    value: function(e) {
                        return I18n.t("restrictions.editing.titles.segment.not_restricted", {
                            street: this._segment.getStreetName(),
                            direction: this._getDirectionString(e)
                        })
                    }
                }, {
                    key: "_getHeading",
                    value: function(e) {
                        return e === d.RESTRICTION_SEGMENT_DIRECTION.FWD ? this._segment.getFwdHeading() : e === d.RESTRICTION_SEGMENT_DIRECTION.REV ? this._segment.getRevHeading() : e === d.RESTRICTION_SEGMENT_DIRECTION.BOTH ? null : void 0
                    }
                }, {
                    key: "_getDirectionString",
                    value: function(e) {
                        if (e === d.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            return I18n.t("restrictions.editing.titles.segment.both_ways");
                        var t = this._getHeading(e);
                        return I18n.t("segment.heading")[t]
                    }
                }]),
                e
        }(),
        f = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.dataModel,
                    n = t.turn;
                (0,
                    r.default)(this, e),
                this._turn = n,
                    this._dataModel = i,
                    this._restrictions = this._turn.getTurnData().getRestrictions(),
                    this._fromSegment = this._dataModel.segments.get(this._turn.getFromVertex().getSegmentID()),
                    this._toSegment = this._dataModel.segments.get(this._turn.getToVertex().getSegmentID())
            }
            return (0,
                    a.default)(e, [{
                    key: "getEditingTitle",
                    value: function() {
                        return this._getRestrictedTitle()
                    }
                }, {
                    key: "getSummaryTitle",
                    value: function() {
                        return this._turn.isTimeRestricted() ? this._getRestrictedTitle() : this._getNotRestrictedTitle()
                    }
                }, {
                    key: "_getRestrictedTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.restricted", {
                            street: this._fromSegment.getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.restricted", {
                            from_street: this._fromSegment.getStreetName(),
                            to_street: this._toSegment.getStreetName()
                        })
                    }
                }, {
                    key: "_getNotRestrictedTitle",
                    value: function() {
                        return this._turn.isUturn() ? I18n.t("restrictions.editing.titles.uturn.not_restricted", {
                            street: this._fromSegment.getStreetName()
                        }) : I18n.t("restrictions.editing.titles.turn.not_restricted", {
                            from_street: this._fromSegment.getStreetName(),
                            to_street: this._toSegment.getStreetName()
                        })
                    }
                }]),
                e
        }();
    t.default = {
            TimeFrameViewHelpers: h,
            TurnRestrictionViewHelpers: f,
            SegmentRestrictionViewHelpers: p
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(64),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class({
            started: !1,
            stopDown: !0,
            dragging: !1,
            touch: !1,
            last: null,
            start: null,
            lastMoveEvt: null,
            oldOnselectstart: null,
            interval: 0,
            timeoutId: null,
            forced: !1,
            active: !1,
            initialize: function(e) {
                this.map = e,
                    this.uniqueID = r.baseID--
            },
            callback: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                if (this[e])
                    return this[e].apply(this, (0,
                        s.default)(t))
            },
            dragstart: function(e) {
                e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1]);
                var t = !0;
                return this.dragging = !1,
                    (OL.Event.isLeftClick(e) || OL.Event.isSingleTouch(e)) && (this.started = !0,
                        this.start = e.xy,
                        this.last = e.xy,
                        OL.Element.addClass(this.map.viewPortDiv, "olDragDown"),
                        this.down(e),
                        this.callback("down", [e.xy]),
                        OL.Event.stop(e),
                        this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : OL.Function.True),
                        document.onselectstart = OL.Function.False,
                        t = !this.stopDown),
                    t
            },
            forceStart: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return this.started = !0,
                    this.endOnMouseUp = e,
                    this.forced = !0,
                    this.last = {
                        x: 0,
                        y: 0
                    },
                    this.callback("force")
            },
            forceEnd: function() {
                if (this.forced)
                    return this.endDrag()
            },
            dragmove: function(e) {
                return this.map.viewPortDiv.offsets && (e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1])),
                    this.lastMoveEvt = e, !this.started || this.timeoutId || e.xy.x === this.last.x && e.xy.y === this.last.y || (this.interval > 0 && (this.timeoutId = window.setTimeout(OL.Function.bind(this.removeTimeout, this), this.interval)),
                        this.dragging = !0,
                        this.move(e),
                        this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                            document.onselectstart = OL.Function.False),
                        this.last = e.xy), !0
            },
            dragend: function(e) {
                if (e.xy = new OL.Pixel(e.clientX - this.map.viewPortDiv.offsets[0], e.clientY - this.map.viewPortDiv.offsets[1]),
                    this.started) {
                    var t = this.start !== this.last;
                    this.endDrag(),
                        this.up(e),
                        this.callback("up", [e.xy]),
                        t && this.callback("done", [e.xy])
                }
                return !0
            },
            endDrag: function() {
                this.started = !1,
                    this.dragging = !1,
                    this.forced = !1,
                    OL.Element.removeClass(this.map.viewPortDiv, "olDragDown"),
                    document.onselectstart = this.oldOnselectstart
            },
            down: function(e) {},
            move: function(e) {},
            up: function(e) {},
            out: function(e) {},
            mousedown: function(e) {
                return this.dragstart(e)
            },
            touchstart: function(e) {
                return this.touch || (this.touch = !0,
                        this.map.events.un({
                            mousedown: this.mousedown,
                            mouseup: this.mouseup,
                            mousemove: this.mousemove,
                            click: this.click,
                            scope: this
                        })),
                    this.dragstart(e)
            },
            mousemove: function(e) {
                return this.dragmove(e)
            },
            touchmove: function(e) {
                return this.dragmove(e)
            },
            removeTimeout: function() {
                if (this.timeoutId = null,
                    this.dragging)
                    return this.mousemove(this.lastMoveEvt)
            },
            mouseup: function(e) {
                if (!this.forced || this.endOnMouseUp)
                    return this.started ? this.dragend(e) : void 0
            },
            touchend: function(e) {
                if (e.xy = this.last, !this.forced)
                    return this.dragend(e)
            },
            click: function(e) {
                return this.start === this.last
            },
            activate: function(e) {
                this.$el = e,
                    this.active = !0;
                var t = $(this.map.viewPortDiv);
                return this.$el.on("mousedown.drag-" + this.uniqueID, $.proxy(this.mousedown, this)),
                    this.$el.on("touchstart.drag-" + this.uniqueID, $.proxy(this.touchstart, this)),
                    $(document).on("mouseup.drag-" + this.uniqueID, $.proxy(this.mouseup, this)),
                    t.on("mousemove.drag-" + this.uniqueID, $.proxy(this.mousemove, this)),
                    t.on("touchmove.drag-" + this.uniqueID, $.proxy(this.touchmove, this)),
                    t.on("touchend.drag-" + this.uniqueID, $.proxy(this.touchend, this))
            },
            deactivate: function() {
                return this.active = !1,
                    this.$el.off(".drag-" + this.uniqueID),
                    $(this.map.viewPortDiv).off(".drag-" + this.uniqueID),
                    $(document).off(".drag-" + this.uniqueID),
                    this.touch = !1,
                    this.started = !1,
                    this.forced = !1,
                    this.dragging = !1,
                    this.start = null,
                    this.last = null,
                    OL.Element.removeClass(this.map.viewPortDiv, "olDragDown")
            },
            adjustXY: function(e) {
                var t = OL.Util.pagePosition(this.map.viewPortDiv);
                return e.xy.x -= t[0],
                    e.xy.y -= t[1]
            },
            CLASS_NAME: "W.Handler.DragElement"
        });
    r.baseID = 0,
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(226),
        l = n(a),
        u = i(723),
        d = n(u),
        c = i(227),
        h = n(c),
        p = i(724),
        f = n(p),
        g = i(732),
        m = n(g),
        v = i(733),
        y = n(v),
        b = i(228),
        E = n(b),
        w = i(734),
        S = n(w),
        M = i(735),
        C = n(M),
        T = i(107),
        A = n(T),
        I = i(736),
        O = n(I),
        L = i(760),
        D = n(L),
        k = i(761),
        R = n(k),
        x = i(229),
        P = n(x),
        N = i(762),
        V = n(N),
        U = i(763),
        j = n(U),
        z = i(764),
        F = n(z),
        B = i(765),
        G = n(B),
        H = i(4),
        q = n(H),
        Y = i(11),
        K = n(Y),
        J = i(766),
        Z = n(J),
        X = i(42),
        Q = n(X),
        ee = i(148),
        te = n(ee),
        ie = i(26),
        ne = n(ie),
        se = ne.default.LAYER_TYPE,
        re = {
            WMS: "wms",
            MAPNIK: "mapnik"
        },
        oe = {
            ARCHIVE: "archive",
            AREA_MANAGERS: "area_managers",
            BIG_JUNCTIONS: "big_junctions",
            CLOSURES: "closures",
            EDITABLE_AREAS: "editable_areas",
            LANDMARKS: "landmarks",
            NODES: "nodes",
            PLACE_UPDATES: "place_updates",
            PROBLEMS: "problems",
            SATELLITE_IMAGERY: "satellite_imagery",
            SEGMENTS: "segments",
            SPEED_CAMERAS: "speed_cameras",
            UPDATE_REQUESTS: "update_requests",
            LIVE_USERS: "live_users",
            GPS_POINTS: "gps_points",
            ROADS: "roads"
        },
        ae = {
            initializeLayers: function() {
                this._addAerials(),
                    this._addModulesLayers(se.RASTER),
                    this._addRasterLayers(),
                    this._addModulesLayers(se.FEATURE),
                    this._addModulesLayers(se.MARKER),
                    this._addVectorLayers()
            },
            _addRasterLayers: function() {
                return this._addRasterLayer(W.Config.raster_layers[oe.GPS_POINTS]),
                    this._addRasterLayer(W.Config.raster_layers[oe.ROADS]),
                    this.roadLayers = [this.getLayerByUniqueName(oe.ROADS)],
                    W.model.events.register("change:lastTransactionID", this, this._refreshRoadLayers),
                    this._setRoadLayerParams()
            },
            _addRasterLayer: function(e) {
                var t = {},
                    i = e.type || re.WMS,
                    n = I18n.t("layers.name." + e.uniqueName),
                    s = e.file_name || W.Config.raster_layers[i].file_name,
                    r = W.Config.raster_layers[i].servers.map(function(e) {
                        return e + "/" + s
                    });
                $.extend(t, W.Config.raster_layers.options, e.options),
                    t.tileSize = new OL.Size(t.tileWidth, t.tileHeight),
                    t.removeBackBufferDelay = 0,
                    t.uniqueName = e.uniqueName,
                    t.visibility = e.visible;
                var o = {
                        text: I18n.t("layers.loading", {
                            layer_name: n
                        })
                    },
                    a = void 0;
                if (i === re.WMS) {
                    var l = {};
                    $.extend(l, W.Config.raster_layers.wms.params, e.params),
                        l.layers = e.layers,
                        a = new OL.Layer.WMS(n, r, l, t)
                } else
                    a = new Z.default(n, r, t),
                    $.extend(a.params, e.params);
                return a.type = i,
                    a.events.on({
                        loadstart: function(e) {
                            return function() {
                                return W.vent.trigger("operationPending", {
                                    operation: e
                                })
                            }
                        }(o),
                        loadend: function(e) {
                            return function() {
                                return W.vent.trigger("operationDone", {
                                    operation: e
                                })
                            }
                        }(o)
                    }),
                    this.addUniqueLayer(a),
                    a
            },
            _setRoadLayerParams: function() {
                var e = this.snapshotManager && this.snapshotManager.isSnapshotOn() ? -1 : 1,
                    t = {
                        timestamp: e,
                        waitFor: W.model.lastTransactionID
                    };
                this.roadLayers.forEach(function(e) {
                    e.type === re.MAPNIK ? e.params.addToQuery = $.param(t) : _.extend(e.params, t)
                })
            },
            _refreshRoadLayers: function(e) {
                return this._setRoadLayerParams(),
                    this.roadLayers.map(function(e) {
                        return e.redraw({
                                force: !0
                            }),
                            e.removeBackBuffer()
                    })
            },
            _addVectorLayers: function() {
                return this.segmentLayer = new S.default(I18n.t("layers.name.segments"), W.model, W.model.segments, {
                        styleMap: h.default,
                        uniqueName: oe.SEGMENTS,
                        selectable: !0,
                        featureType: q.default.SEGMENT
                    }),
                    this.nodeLayer = new C.default(I18n.t("layers.name.nodes"), W.model, W.model.nodes, {
                        styleMap: d.default,
                        uniqueName: oe.NODES,
                        selectable: !0,
                        featureType: q.default.NODE
                    }),
                    this.landmarkLayer = new A.default(I18n.t("layers.name.landmarks"), W.model, W.model.venues, {
                        styleMap: l.default,
                        uniqueName: oe.LANDMARKS,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0,
                        featureType: q.default.VENUE
                    }),
                    this.bigJunctionLayer = new A.default(I18n.t("layers.name.big_junctions"), W.model, W.model.bigJunctions, {
                        styleMap: m.default,
                        uniqueName: oe.BIG_JUNCTIONS,
                        rendererOptions: {
                            zIndexing: !0
                        },
                        selectable: !0,
                        featureType: q.default.BIG_JUNCTION,
                        toggleRepo: !0
                    }),
                    this.bigJunctionPathLayer = new OL.Layer.Vector("bigJunctionPathLayer", {
                        rendererOptions: {
                            zIndexing: !0
                        },
                        renderers: [Q.default],
                        styleMap: te.default,
                        selectable: !0
                    }),
                    this.camerasLayer = new A.default(I18n.t("layers.name.speed_cameras"), W.model, W.model.cameras, {
                        styleMap: f.default,
                        uniqueName: oe.SPEED_CAMERAS,
                        selectable: !0,
                        featureType: q.default.SPEED_CAMERA,
                        toggleRepo: !0,
                        rendererOptions: {
                            zIndexing: !0
                        }
                    }),
                    this.problemLayer = new G.default(I18n.t("layers.name.problems"), [W.model.problems], {
                        markerClass: P.default,
                        uniqueName: oe.PROBLEMS,
                        className: "map-problems"
                    }),
                    this.updateRequestLayer = new G.default(I18n.t("layers.name.update_requests"), [W.model.mapUpdateRequests], {
                        markerClass: V.default,
                        uniqueName: oe.UPDATE_REQUESTS,
                        className: "update-requests"
                    }),
                    this.archiveLayer = new O.default(I18n.t("layers.name.archive"), {
                        rendererOptions: {
                            zIndexing: !0
                        },
                        uniqueName: oe.ARCHIVE
                    }),
                    this.userLayer = new D.default(I18n.t("layers.name.editable_areas"), W.model, [W.model.userAreas], {
                        uniqueName: oe.EDITABLE_AREAS
                    }),
                    this.managedAreasLayer = new A.default(I18n.t("layers.name.area_managers"), W.model, W.model.managedAreas, {
                        styleMap: E.default,
                        uniqueName: oe.AREA_MANAGERS
                    }),
                    this.sketchLayer = new OpenLayers.Layer.Vector("sketch", {
                        styleMap: y.default,
                        selectable: !0
                    }),
                    this.placeUpdatesLayer = new G.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: j.default,
                        uniqueName: oe.PLACE_UPDATES,
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && !e.isParkingLot()
                        }
                    }),
                    this.parkingPlaceUpdatesLayer = new G.default(I18n.t("layers.name.place_updates"), [W.model.venues], {
                        markerClass: j.default,
                        uniqueName: "PARKING_PLACE_UPDATES",
                        className: "place-updates",
                        filter: function(e) {
                            return e.hasUpdateRequests() && e.isParkingLot()
                        }
                    }),
                    this.liveUsersLayer = new OL.Layer.Markers(I18n.t("layers.name.live_users"), {
                        uniqueName: oe.LIVE_USERS,
                        className: "live-users"
                    }),
                    this.addUniqueLayers([this.archiveLayer, this.managedAreasLayer, this.landmarkLayer, this.placeUpdatesLayer, this.parkingPlaceUpdatesLayer, this.bigJunctionLayer, this.segmentLayer, this.nodeLayer, this.camerasLayer, this.sketchLayer, this.problemLayer, this.updateRequestLayer, this.userLayer, this.bigJunctionPathLayer, this.liveUsersLayer]),
                    this.closuresMarkerLayer = new G.default(I18n.t("layers.name.closures"), [W.model.roadClosures], {
                        markerClass: F.default,
                        uniqueName: oe.CLOSURES,
                        toggleRepo: !0
                    }),
                    this.addUniqueLayer(this.closuresMarkerLayer)
            },
            _addModulesLayers: function(e) {
                for (var t = ne.default.getLayers().filter(function(t) {
                        return t.type === e
                    }), i = 0; i < t.length; i++) {
                    var n = t[i];
                    if (n.type === se.RASTER)
                        this._addModuleRasterLayer(n);
                    else if (n.type === se.FEATURE)
                        this._addModuleFeatureLayer(n);
                    else {
                        if (n.type !== se.MARKER)
                            throw new Error("Invalid layer type " + n.type);
                        this._addModuleMarkerLayer(n)
                    }
                }
            },
            _addModuleRasterLayer: function(e) {
                return this._addRasterLayer(e.options)
            },
            _addModuleFeatureLayer: function(e) {
                var t = e.options || {},
                    i = [W.model.getRepository(t.objectType)],
                    n = void 0;
                n = t.enableZIndexing ? {
                    zIndexing: !0
                } : {};
                var s = new A.default(t.name, W.model, i, {
                    uniqueName: e.uniqueName,
                    visibility: t.visibleByDefault,
                    styleMap: t.styleMap,
                    selectable: t.selectable,
                    featureType: t.objectType,
                    toggleRepo: !0,
                    rendererOptions: n
                });
                return this.addUniqueLayer(s)
            },
            _addModuleMarkerLayer: function(e) {
                var t = e.options || {},
                    i = [W.model.getRepository(t.objectType)],
                    n = new G.default(t.name, i, {
                        uniqueName: e.uniqueName,
                        markerClass: t.markerClass,
                        className: t.markerClassName,
                        visibility: t.visibleByDefault,
                        featureType: t.objectType,
                        filter: t.filter
                    });
                return this.addUniqueLayer(n)
            },
            getLayerByUniqueName: function(e) {
                return this.getLayersBy("uniqueName", e)[0]
            },
            _addAerials: function() {
                var e = W.Config.map.initialPosition[W.location.code],
                    t = new OL.LonLat(e.lon, e.lat);
                K.default.project(t);
                var i = new R.default({
                    name: I18n.t("layers.name.satellite_imagery"),
                    key: "AIzaSyCn64OU_OShrM5EgKeBiUKBkFn2yLW1gDw",
                    type: "satellite",
                    zoomOffset: 12,
                    numZoomLevels: 11,
                    zoom: e.initialZoom,
                    minResolution: .037322767712175846,
                    center: t,
                    uniqueName: oe.SATELLITE_IMAGERY,
                    transitionEffect: "resize"
                });
                this.addUniqueLayer(i);
                var n = {
                    text: I18n.t("layers.loading", {
                        layer_name: I18n.t("layers.name.satellite_imagery")
                    })
                };
                return i.events.on({
                        loadstart: function() {
                            if (this.getVisibility())
                                return W.vent.trigger("operationPending", {
                                    operation: n
                                })
                        },
                        loadend: function() {
                            return W.vent.trigger("operationDone", {
                                operation: n
                            })
                        },
                        loaderror: function() {
                            return W.vent.trigger("operationDone", {
                                operation: n
                            })
                        }
                    }),
                    this.setCenter(t, e.initialZoom)
            },
            getLayersByRepos: function(e, t) {
                return (t || null == this.layersPerRepo) && (this.layersPerRepo = this.layers.reduce(function(e, t) {
                        if (null != t.repo)
                            for (var i = 0; i < t.repo.length; i++) {
                                var n = t.repo[i];
                                null == e[n.name] && (e[n.name] = []),
                                    e[n.name].push(t)
                            }
                        return e
                    }, {})),
                    _.pick(this.layersPerRepo, e)
            },
            showLayerByObjectType: function(e) {
                var t = W.model.getRepository(e);
                return this.getLayersByRepos([t.name])[t.name].map(function(e) {
                    return e.setVisibility(!0)
                })
            },
            addUniqueLayer: function(e) {
                if (e.uniqueName) {
                    if (this.getLayersBy("uniqueName", e.uniqueName).length > 0)
                        throw new Error("Cannot add layer " + e.uniqueName + ", the provided\n        uniqueName already exists.")
                }
                return this.addLayer(e)
            },
            addUniqueLayers: function(e) {
                var t = this;
                return e.map(function(e) {
                    return t.addUniqueLayer(e)
                })
            }
        };
    ae.layerVisibilityBitmask = (s = {},
            (0,
                o.default)(s, oe.SATELLITE_IMAGERY, 0),
            (0,
                o.default)(s, oe.ROADS, 2),
            (0,
                o.default)(s, oe.GPS_POINTS, 3),
            (0,
                o.default)(s, oe.AREA_MANAGERS, 4),
            (0,
                o.default)(s, oe.LANDMARKS, 5),
            (0,
                o.default)(s, oe.SPEED_CAMERAS, 6),
            (0,
                o.default)(s, oe.PROBLEMS, 7),
            (0,
                o.default)(s, oe.UPDATE_REQUESTS, 8),
            (0,
                o.default)(s, oe.EDITABLE_AREAS, 9),
            (0,
                o.default)(s, oe.LIVE_USERS, 10),
            (0,
                o.default)(s, oe.PLACE_UPDATES, 11),
            (0,
                o.default)(s, oe.BIG_JUNCTIONS, 12),
            (0,
                o.default)(s, oe.CLOSURES, 13),
            s),
        ae.LAYER_UNIQUE_NAMES = oe,
        t.default = ae,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(20),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(OL.Layer.Vector, {
            repo: null,
            _featureMap: null,
            model: null,
            initialize: function(e, t, i, n) {
                this.model = t,
                    this.repo = i,
                    OL.Layer.Vector.prototype.initialize.apply(this, [e, n]),
                    this._featureMap = {},
                    _(this.repo).isArray() || (this.repo = [this.repo]);
                for (var s = 0; s < this.repo.length; s++) {
                    var r = this.repo[s];
                    this.registerRepoEvents(r)
                }
            },
            registerRepoEvents: function(e) {
                e.on(s.default.ADDED, this.onFeaturesAdded, this),
                    e.on(s.default.CHANGED, this.onFeaturesChanged, this),
                    e.on(s.default.REMOVED, this.onFeaturesRemoved, this)
            },
            unregisterRepoEvents: function(e) {
                e.off(s.default.ADDED, this.onFeaturesAdded, this),
                    e.off(s.default.CHANGED, this.onFeaturesChanged, this),
                    e.off(s.default.REMOVED, this.onFeaturesRemoved, this)
            },
            destroy: function() {
                for (var e = 0; e < this.repo.length; e++) {
                    var t = this.repo[e];
                    this.unregisterRepoEvents(t)
                }
                return OL.Layer.Vector.prototype.destroy.apply(this)
            },
            getVector: function(e) {
                return this._featureMap[e.getID()] || null
            },
            onFeaturesAdded: function(e) {
                var t = this;
                return e = e.map(function(e) {
                        var i = new OL.Feature.Vector(e.geometry);
                        return i.model = e,
                            t._featureMap[e.getID()] = i,
                            t.fixRenderIntent(i),
                            i
                    }),
                    this.addFeatures(e)
            },
            _getFeatureByPrevId: function(e) {
                var t = e._prevID;
                if (!t)
                    return null;
                var i = this._featureMap[t];
                return i ? (this._featureMap[t] = void 0,
                    this._featureMap[e.getID()] = i,
                    i) : null
            },
            onFeaturesChanged: function(e) {
                for (var t = [], i = [], n = [], s = 0; s < e.length; s++) {
                    var r = e[s],
                        o = this._featureMap[r.getID()] || this._getFeatureByPrevId(r);
                    if (o)
                        this.fixRenderIntent(o),
                        this._updateFeatureModel(o, r),
                        r.hidden ? (this._featureMap[r.getID()] = void 0,
                            t.push(o)) : (o.geometry = r.geometry,
                            this.drawFeature(o)),
                        (r.isDeleted() || r.hidden) && this.selectedFeatures.contains(o) && (OL.Util.removeItem(this.selectedFeatures, o),
                            i.push(o));
                    else {
                        var a = new OL.Feature.Vector(r.geometry);
                        a.model = r,
                            n.push(a),
                            this._featureMap[r.getID()] = a
                    }
                }
                return this.events.triggerEvent("featureunselected", {
                        features: i
                    }),
                    this.removeFeatures(t),
                    this.addFeatures(n)
            },
            onFeaturesRemoved: function(e) {
                var t = this,
                    i = e.map(function(e) {
                        var i = t._featureMap[e.getID()];
                        return t._featureMap[e.getID()] = void 0,
                            i
                    });
                i = _(i).filter(function(e) {
                    return null != e
                });
                var n = _(i).filter(function(e) {
                    return t.selectedFeatures.contains(e)
                });
                return this.events.triggerEvent("featureunselected", {
                        features: n
                    }),
                    this.removeFeatures(i)
            },
            fixRenderIntent: function(e) {
                e.model.isDeleted() ? e.renderIntent = "delete" : "delete" === e.renderIntent && (e.renderIntent = e.model.isSelected() ? "select" : "default")
            },
            _updateFeatureModel: function(e, t) {
                null != t.geometry && null != e.model.geometry && (t.geometry.id = e.model.geometry.id),
                    e.model = t
            },
            CLASS_NAME: "Waze.Layer.FeatureLayer"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(16),
        u = n(l),
        d = i(155),
        c = n(d),
        h = i(38),
        p = n(h),
        f = i(75),
        g = n(f),
        m = c.default.extend({
            className: "feed-item feed-issue",
            template: "Waze/Modules/Feed/templates/issue_item",
            bindings: {
                ":el": {
                    classes: {
                        modified: "modified"
                    }
                }
            },
            onRender: function() {
                return this.stickit()
            },
            getType: function() {
                return null
            },
            serializeData: function() {
                return {
                    type: this.getType(),
                    motivation: this._getMotivationText(),
                    place: this._getPlaceText(),
                    street: this.model.get("streetText"),
                    city: this.model.get("cityText"),
                    state: this.model.get("stateText"),
                    country: this.model.get("countryText"),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _formatTimestamp: function() {
                return u.default.timeDistanceInWordsFromNow(this.model.get("timestamp"))
            },
            _getMotivationText: function() {
                var e = new g.default(this.model.get("motivation")),
                    t = !0,
                    i = !1,
                    n = void 0;
                try {
                    for (var s, o = (0,
                            a.default)((0,
                            r.default)(p.default.prototype.MOTIVATIONS)); !(t = (s = o.next()).done); t = !0) {
                        var l = s.value,
                            u = p.default.prototype.MOTIVATIONS[l];
                        if (e.isEnabled(l))
                            return I18n.t("feed.issues.motivations." + u)
                    }
                } catch (e) {
                    i = !0,
                        n = e
                } finally {
                    try {
                        !t && o.return && o.return()
                    } finally {
                        if (i)
                            throw n
                    }
                }
                return null
            },
            _getPlaceText: function() {
                var e = this.model.get("venue");
                return e ? e.attributes.name : ""
            },
            _getSeverityClass: function() {
                return this.model.getSeverity() ? "severity-" + this.model.getSeverity() : ""
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(53),
        r = OpenLayers.Class(n, {
            street: null,
            initialize: function(e, t, i) {
                n.prototype.initialize.apply(this, arguments),
                    this.city = t,
                    this.name = e,
                    this.isEmpty = i
            },
            doAction: function() {
                var e = null,
                    t = void 0,
                    i = !1;
                return e = this.isEmpty ? this.model.streets.getByAttributes({
                        isEmpty: !0,
                        cityID: this.city.getID()
                    }).first() : this.model.streets.getByAttributes({
                        name: this.name,
                        cityID: this.city.getID()
                    }).first(),
                    e || (t = new s(null, this.model.streets, {
                            name: this.isEmpty ? "" : this.name,
                            isEmpty: this.isEmpty,
                            cityID: this.city.getID()
                        }),
                        e = t.object,
                        this.doSubAction(t),
                        i = !0),
                    this.street = e,
                    i
            },
            CLASS_NAME: "Waze.Action.AddOrGetStreet"
        });
    e.exports = r
}, , , , , , , , , , , , , , , , function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(11),
        a = n(o),
        l = {
            parse: function(e) {
                var t = this;
                return this.nested ? ((0,
                        r.default)(this.nested).forEach(function(i) {
                        var n = t.nested[i],
                            s = e[i];
                        s && (_.isArray(s) ? e[i] = s.map(function(e) {
                            return t.parseField(e, n, i)
                        }) : e[i] = t.parseField(s, n, i))
                    }),
                    e) : e
            },
            parseField: function(e, t, i) {
                if (t === OL.Geometry) {
                    var n = a.default.parse(e);
                    return this.attributes && this.attributes[i] && this.attributes[i].id && (n.id = this.attributes[i].id),
                        n
                }
                return _.isObject(e) ? new t(e, {
                    parse: !0
                }) : new t({
                    id: e,
                    parse: !0
                })
            }
        };
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    var n = i(127),
        s = i(22)("iterator"),
        r = i(58);
    e.exports = i(14).getIteratorMethod = function(e) {
        if (void 0 != e)
            return e[s] || e["@@iterator"] || r[n(e)]
    }
}, function(e, t, i) {
    var n = i(71),
        s = i(22)("toStringTag"),
        r = "Arguments" == n(function() {
            return arguments
        }()),
        o = function(e, t) {
            try {
                return e[t]
            } catch (e) {}
        };
    e.exports = function(e) {
        var t, i, a;
        return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(i = o(t = Object(e), s)) ? i : r ? n(t) : "Object" == (a = n(t)) && "function" == typeof t.callee ? "Arguments" : a
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(48),
        r = n(s),
        o = i(21),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(11),
        p = n(h),
        f = i(49),
        g = n(f),
        m = function() {
            function e(t) {
                (0,
                    u.default)(this, e),
                this.map = t,
                    this.serializer = new g.default
            }
            return (0,
                    c.default)(e, [{
                    key: "_toUnprojectedBBOX",
                    value: function(e) {
                        return p.default.unproject(e.clone()).toBBOX()
                    }
                }, {
                    key: "_newRequestParams",
                    value: function() {
                        return {
                            language: I18n.locale,
                            bbox: this._toUnprojectedBBOX(this.currentDataBounds)
                        }
                    }
                }, {
                    key: "getFeatures",
                    value: function(e) {
                        var t = (0,
                            a.default)(this._newRequestParams(), e);
                        return $.get(W.Config.paths.features, t)
                    }
                }, {
                    key: "postFeatures",
                    value: function(e, t, i) {
                        var n = (0,
                            a.default)(this._newRequestParams(), {
                            bbox: this._toUnprojectedBBOX(t),
                            ignoreWarnings: i
                        });
                        return $.ajax({
                            method: "post",
                            url: W.Config.paths.features + "?" + $.param(n),
                            data: e,
                            dataType: "json",
                            contentType: "application/json"
                        })
                    }
                }, {
                    key: "getCityExists",
                    value: function(e, t, i, n) {
                        var s = parseInt(t, 10),
                            r = parseInt(i, 10);
                        return $.get(W.Config.paths.cityExists, {
                            cityName: e,
                            countryID: isNaN(s) ? void 0 : s,
                            stateID: isNaN(r) ? void 0 : r,
                            box: this._toUnprojectedBBOX(n)
                        })
                    }
                }, {
                    key: "getElementHistory",
                    value: function(e, t) {
                        var i = this,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                            s = {
                                objectType: e,
                                objectID: t
                            };
                        return null != n && (s.till = n),
                            r.default.resolve($.get(W.Config.paths.elementHistory, s)).then(function(e) {
                                return i.serializer.read(e)
                            })
                    }
                }, {
                    key: "currentDataBounds",
                    get: function() {
                        return this.map.getBoundsWithRatio(1.7)
                    }
                }]),
                e
        }();
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(3),
        o = n(r),
        a = i(21),
        l = n(a),
        u = i(50),
        d = n(u),
        c = i(1),
        h = n(c),
        p = i(2),
        f = n(p),
        g = i(17),
        m = n(g),
        v = i(75),
        _ = n(v),
        y = {
            SUNDAY: "SUNDAY",
            MONDAY: "MONDAY",
            TUESDAY: "TUESDAY",
            WEDNESDAY: "WEDNESDAY",
            THURSDAY: "THURSDAY",
            FRIDAY: "FRIDAY",
            SATURDAY: "SATURDAY"
        },
        b = (s = {},
            (0,
                m.default)(s, y.MONDAY, 1),
            (0,
                m.default)(s, y.TUESDAY, 2),
            (0,
                m.default)(s, y.WEDNESDAY, 3),
            (0,
                m.default)(s, y.THURSDAY, 4),
            (0,
                m.default)(s, y.FRIDAY, 5),
            (0,
                m.default)(s, y.SATURDAY, 6),
            (0,
                m.default)(s, y.SUNDAY, 7),
            s),
        E = [y.SUNDAY, y.MONDAY, y.TUESDAY, y.WEDNESDAY, y.THURSDAY, y.FRIDAY, y.SATURDAY],
        w = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.startDate,
                    n = void 0 === i ? null : i,
                    s = t.endDate,
                    r = void 0 === s ? null : s,
                    o = t.fromTime,
                    a = void 0 === o ? null : o,
                    l = t.toTime,
                    u = void 0 === l ? null : l,
                    c = t.weekdays,
                    p = void 0 === c ? 0 : c;
                (0,
                    h.default)(this, e),
                this._startDate = n,
                    this._endDate = r,
                    this._fromTime = a,
                    this._toTime = u,
                    this._weekdays = p,
                    (0,
                        d.default)(this)
            }
            return (0,
                    f.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._startDate === e._startDate && this._endDate === e._endDate && this._fromTime === e._fromTime && this._toTime === e._toTime && this._weekdays === e._weekdays
                    }
                }, {
                    key: "with",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return new this.constructor((0,
                            l.default)(this.toJSON(), e))
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            startDate: this._startDate,
                            endDate: this._endDate,
                            fromTime: this._fromTime,
                            toTime: this._toTime,
                            weekdays: this._weekdays
                        }
                    }
                }, {
                    key: "_isOnWeekday",
                    value: function(e) {
                        var t = b[e] - 1;
                        return new _.default(this._weekdays).isPowerOf2Enabled(t)
                    }
                }, {
                    key: "isAllDay",
                    value: function() {
                        return null === this._fromTime && null === this._toTime
                    }
                }, {
                    key: "isAllWeek",
                    value: function() {
                        return null == this._weekdays || 127 === this._weekdays
                    }
                }, {
                    key: "isDuringDates",
                    value: function() {
                        return null !== this._startDate || null !== this._endDate
                    }
                }, {
                    key: "getStartDate",
                    value: function() {
                        return this._startDate
                    }
                }, {
                    key: "getEndDate",
                    value: function() {
                        return this._endDate
                    }
                }, {
                    key: "getFromTime",
                    value: function() {
                        return this._fromTime
                    }
                }, {
                    key: "getToTime",
                    value: function() {
                        return this._toTime
                    }
                }, {
                    key: "getWeekdays",
                    value: function() {
                        var e = this;
                        return this.isAllWeek() ? (0,
                            o.default)(y) : (0,
                            o.default)(y).filter(function(t) {
                            return e._isOnWeekday(t)
                        })
                    }
                }], [{
                    key: "getWeekdaysBitValue",
                    value: function() {
                        return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []).reduce(function(e, t) {
                            return e | 1 << b[t] - 1
                        }, 0)
                    }
                }, {
                    key: "getAlwaysOn",
                    value: function() {
                        return new e({
                            startDate: null,
                            endDate: null,
                            fromTime: null,
                            toTime: null,
                            weekdays: null
                        })
                    }
                }]),
                e
        }();
    t.default = {
            RestrictionTimeFrame: w,
            WEEKDAYS: y,
            WEEKDAY_ORDINALS: E,
            DATE_FORMAT: "YYYY-MM-DD"
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(6),
        r = n(s),
        o = i(23),
        a = n(o),
        l = i(499),
        u = n(l),
        d = i(131),
        c = n(d),
        h = i(62),
        p = n(h),
        f = OL.Class(a.default, {
            defaults: {
                name: "",
                rank: 0,
                permissions: r.default.ALL_PERMISSIONS
            },
            nested: {
                geometry: OL.Geometry,
                connections: c.default
            },
            _pathCache: null,
            initialize: function(e) {
                a.default.prototype.initialize.apply(this, arguments),
                    _.defaults(this.attributes, this.defaults)
            },
            merge: function() {
                return this._pathCache = null,
                    a.default.prototype.merge.apply(this, arguments)
            },
            getAddress: function() {
                return p.default.fromCityID(this.attributes.cityID, this.model)
            },
            getSegmentCount: function() {
                return this.attributes.segIDs.length
            },
            getPossiblePaths: function() {
                return null != this._pathCache ? this._pathCache : this._pathCache = u.default.for(this).getAllPaths()
            },
            getLegalPaths: function() {
                return _.reject(this.getPossiblePaths(), function(e) {
                    return !e.isLegal()
                })
            },
            _getAccessPoints: function(e) {
                for (var t = {}, i = _.sortBy(this.getPossiblePaths(), function(e) {
                        return e.getEntryPoint().getID()
                    }), n = this.attributes.connections, s = 0; s < i.length; s++)
                    ! function(s) {
                        var r = i[s],
                            o = r[e](),
                            a = t[o.getID()];
                        null != a ? o = a : t[o.getID()] = o,
                            r = r.clone(),
                            r.set({
                                navigable: _.any(n, function(e) {
                                    return e.equals(r)
                                })
                            }),
                            o.get("paths").push(r)
                    }(s);
                return _.values(t)
            },
            getEntryPoints: function() {
                return this._getAccessPoints("getEntryPoint")
            },
            getExitPoints: function() {
                return this._getAccessPoints("getExitPoint")
            },
            getShortSegments: function() {
                return W.model.segments.getByIds(this.attributes.segIDs)
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4
            },
            CLASS_NAME: "Waze.Feature.FeatureVector.BigJunction"
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(187),
        r = n(s),
        o = i(501),
        a = n(o),
        l = i(11),
        u = n(l),
        d = ["fromSegID", "fromSegFwd", "toSegID", "toSegFwd", "junctionID"],
        c = Backbone.Model.extend({
            defaults: function() {
                return {
                    navigable: !1,
                    segmentPath: []
                }
            },
            getGraphNodes: function() {
                var e = this.getEntryGraphNode(),
                    t = this.get("segmentPath").map(function(t) {
                        var i = W.model.segments.get(t),
                            n = r.default.oppositeOf(i, e.node);
                        return e = n,
                            n
                    });
                return [this.getEntryGraphNode()].concat(t).concat([this.getExitGraphNode()])
            },
            getEntryGraphNode: function() {
                return this._getGraphNodeForDirection("from")
            },
            getExitGraphNode: function() {
                return this._getGraphNodeForDirection("to")
            },
            getEntryPoint: function() {
                return new a.default({
                    graphNode: this.getEntryGraphNode(),
                    type: a.default.prototype.TYPE.ENTRY
                })
            },
            getExitPoint: function() {
                return new a.default({
                    graphNode: this.getExitGraphNode(),
                    type: a.default.prototype.TYPE.EXIT
                })
            },
            _getGraphNodeForDirection: function(e) {
                var t = W.model.segments.get(this.attributes.id[e + "SegID"]);
                return e = this.attributes.id[e + "SegFwd"],
                    r.default.forSegmentInDirection(t, e)
            },
            getGeometry: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = this._getVerticeArrays();
                return e.includeEntryPoint || t.shift(),
                    e.includeExitPoint || t.pop(),
                    new OL.Geometry.LineString(Array.prototype.concat.apply([], t))
            },
            getStenciledGeometry: function(e) {
                var t = this._getVerticeArrays(),
                    i = new OL.Geometry.LineString(_.first(t)),
                    n = new OL.Geometry.LineString(_.last(t)),
                    s = u.default.splitLineStringWithPolygon(i, e),
                    r = u.default.splitLineStringWithPolygon(n, e);
                return null != s && (t[0] = s[1].components),
                    null != r && (t[t.length - 1] = r[0].components),
                    new OL.Geometry.LineString(Array.prototype.concat.apply([], t))
            },
            _getVerticeArrays: function() {
                return this.getGraphNodes().map(function(e) {
                    var t = e.segment.geometry.clone().components;
                    return e.isForward || t.reverse(),
                        t
                })
            },
            hasRestrictions: function() {
                return this.getGraphNodes().some(function(e, t, i) {
                    var n = !1;
                    return t > 0 && t < i.length - 1 && (n = e.hasRestrictions()),
                        n
                })
            },
            trivialConnectionExists: function() {
                var e = this.getEntryGraphNode(),
                    t = this.getExitGraphNode();
                return e.segment.isTurnAllowed(t.segment, e.node) && e.node.isTurnAllowedBySegDirections(e.segment, t.segment)
            },
            isLegal: function() {
                return !this.hasRestrictions() && !this.trivialConnectionExists()
            },
            equals: function(e) {
                for (var t = 0; t < d.length; t++) {
                    var i = d[t];
                    if (this.attributes.id[i] !== e.attributes.id[i])
                        return !1
                }
                var n = e.attributes.segmentPath,
                    s = this.attributes.segmentPath;
                if (n.length !== s.length)
                    return !1;
                for (var r = 0; r < s.length; r++) {
                    if (s[r] !== n[r])
                        return !1
                }
                return !0
            },
            clone: function() {
                var e = Backbone.Model.prototype.clone.apply(this, arguments),
                    t = this.get("segmentPath");
                return e.set({
                    segmentPath: _.clone(t)
                })
            }
        });
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
            ALL_DAY_FROM: "00:00",
            ALL_DAY_TO: "00:00",
            defaults: function() {
                return {
                    fromHour: "09:00",
                    toHour: "17:00",
                    days: this.defaultDays.clone()
                }
            },
            defaultDays: [1, 2, 3, 4, 5],
            isAllDay: function() {
                return this.get("fromHour") === this.ALL_DAY_FROM && this.get("toHour") === this.ALL_DAY_TO
            },
            setAllDay: function() {
                return this.set("fromHour", this.ALL_DAY_FROM),
                    this.set("toHour", this.ALL_DAY_TO)
            }
        }),
        s = Backbone.Collection.extend({
            model: n
        });
    t.OpeningHour = n,
        t.Collection = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        SUBJECT: {
            VENUE: "VENUE",
            IMAGE: "IMAGE"
        },
        ACTION: {
            ADD: "ADD",
            UPDATE: "UPDATE",
            DELETE: "DELETE"
        },
        SEVERITY: {
            LOW: "low",
            MEDIUM: "medium",
            HIGH: "high"
        },
        SEVERITY_THRESHOLD: {
            LOW: 3,
            MEDIUM: 7
        },
        defaults: {
            approved: null
        },
        initialize: function() {
            return this.set({
                updateType: this.get("action") + "_" + this.get("subject")
            })
        },
        isVenue: function() {
            return this.get("subject") === this.SUBJECT.VENUE
        },
        isImage: function() {
            return this.get("subject") === this.SUBJECT.IMAGE
        },
        getAddedImage: function() {
            return this._findImage(this.id)
        },
        _findImage: function(e) {
            return _(this.get("place").attributes.images).find(function(t) {
                return t.get("id") === e
            })
        },
        isEditableByUser: function() {
            return this.get("isEditable") && this.get("isInEditArea")
        },
        isPlaceAdLocked: function() {
            return this.get("place").attributes.adLocked && !this.get("isAdLockedEditable")
        },
        getRequiredEditRank: function() {
            return Math.max(this.get("place").attributes.lockRank, n.MIN_EDIT_RANK)
        },
        getSeverity: function() {
            var e = new TimeSpan(Date.now() - this.get("dateAdded")).days,
                t = this.SEVERITY.HIGH;
            return e <= this.SEVERITY_THRESHOLD.LOW ? t = this.SEVERITY.LOW : e <= this.SEVERITY_THRESHOLD.MEDIUM && (t = this.SEVERITY.MEDIUM),
                t
        }
    });
    n.MIN_EDIT_RANK = 1,
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(18),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(79);
    t.default = Backbone.Model.extend({
            defaults: function() {
                return {
                    canExitWhileClosed: !1,
                    numberOfSpots: null,
                    estimatedNumberOfSpots: null,
                    costType: r.UNKNOWN,
                    lotType: [],
                    paymentType: [],
                    parkingType: null,
                    hasTBR: !1
                }
            },
            initialize: function() {
                this.attributes.numberOfSpots && this.attributes.numberOfSpots > 0 && null === this.attributes.estimatedNumberOfSpots && (this.attributes.estimatedNumberOfSpots = this._getSpotsEstimateValue())
            },
            clone: function() {
                var e = $.extend(!0, {}, this.attributes);
                return new this.constructor(e)
            },
            _getSpotsEstimateValue: function() {
                var e = this.attributes.numberOfSpots,
                    t = r.SPOTS_ESTIMATE,
                    i = null;
                if (null === e)
                    return i;
                for (var n = 0; n < t.length; n++) {
                    var o = t[n],
                        a = (0,
                            s.default)(o.range, 2),
                        l = a[0],
                        u = a[1];
                    if (e >= l && e <= u) {
                        i = o.value;
                        break
                    }
                }
                return i
            }
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(6),
        r = i(74).UNIT,
        o = OpenLayers.Class(n, {
            nested: {
                geometry: OL.Geometry
            },
            initialize: function(e) {
                n.prototype.initialize.apply(this, arguments),
                    _.defaults(this.attributes, this.defaults)
            },
            isValidationStateEditable: function() {
                return this.state === OpenLayers.State.UPDATE || !this.attributes.validated
            },
            PERMISSIONS: {
                EDIT_GEOMETRY: 1,
                EDIT_PROPERTIES: 2,
                DELETE: 4
            },
            UNITS: {
                speed: r.KILOMETER
            },
            TYPES: {
                SPEED_CAMERA: 2,
                DUMMY: 3,
                RED_LIGHT: 4
            },
            CLASS_NAME: "Waze.Feature.Vector.SpeedCamera"
        });
    o.prototype.defaults = {
            type: o.prototype.TYPES.SPEED_CAMERA,
            validated: !0,
            speed: 0,
            azymuth: 0,
            permissions: s.ALL_PERMISSIONS
        },
        e.exports = o
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e(t) {
                (0,
                    r.default)(this, e),
                this._layerUniqueName = t
            }
            return (0,
                    a.default)(e, [{
                    key: "writeStateToApp",
                    value: function(e, t) {
                        var i = t.map.getLayerByUniqueName(this._layerUniqueName),
                            n = i.repo;
                        i.setVisibility(e),
                            n && i.toggleRepo && n.forEach(function(t) {
                                return t.setActive(e)
                            })
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(17),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Behavior.extend({
            onRender: function() {
                this._bindModels()
            },
            _bindModels: function() {
                var e = this;
                this.options.charLimits.forEach(function(t) {
                    var i, n = e.view[t.modelAttribute];
                    n && e.view.stickit(n, (i = {},
                        (0,
                            s.default)(i, t.inputSelector, {
                            events: ["keyup"],
                            observe: t.observe,
                            attributes: [{
                                name: "maxlength",
                                onGet: function() {
                                    return t.maxLength
                                }
                            }]
                        }),
                        (0,
                            s.default)(i, t.charCountSelector, {
                            updateModel: !1,
                            observe: t.observe,
                            onGet: function(e) {
                                return t.maxLength - (e && e.length || 0)
                            }
                        }),
                        i))
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(202),
        u = n(l),
        d = i(54),
        c = n(d),
        h = OL.Class(u.default, {
            initialize: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                this.options = t,
                    this.models = e,
                    null != this.options.model && (this.model = this.options.model)
            },
            model: c.default,
            add: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return e instanceof this.model || (e = new this.model(e)),
                    this._beforeAdd(e) && (this.models.push(e),
                        t.silent || this.trigger("add", e)),
                    e
            },
            addSorted: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                e instanceof this.model || (e = new this.model(e));
                for (var i = e.get(t.attribute), n = 0, s = 0; s < this.models.length; s++) {
                    var r = this.models[s];
                    if (t.ascending) {
                        if (r.get(t.attribute) >= i)
                            break
                    } else if (r.get(t.attribute) <= i)
                        break;
                    n++
                }
                return this._beforeAdd(e) && (this.models.splice(n, 0, e),
                        t.silent || this.trigger("add", e)),
                    e
            },
            _beforeAdd: function(e) {
                return !0
            },
            remove: function(e) {
                return this.removeAt(this.models.indexOf(e))
            },
            removeAt: function(e) {
                if (!(e < 0 || e >= this.models.length)) {
                    var t = this.models[e];
                    return this.models.splice(e, 1),
                        this.trigger("remove", {
                            item: t,
                            index: e
                        })
                }
            },
            reset: function(e) {
                this.models = [];
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    this.add(i, {
                        silent: !0
                    })
                }
                return this.trigger("reset")
            },
            first: function(e) {
                if (null != e) {
                    for (var t = 0; t < this.models.length; t++) {
                        var i = this.models[t];
                        if (e(i))
                            return i
                    }
                    return null
                }
                return this.models[0]
            },
            findWhere: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return this.first(function(t) {
                    var i = !0,
                        n = !0,
                        s = !1,
                        o = void 0;
                    try {
                        for (var l, u = (0,
                                a.default)((0,
                                r.default)(e)); !(n = (l = u.next()).done); n = !0) {
                            var d = l.value,
                                c = e[d];
                            t.get(d) !== c && (i = !1)
                        }
                    } catch (e) {
                        s = !0,
                            o = e
                    } finally {
                        try {
                            !n && u.return && u.return()
                        } finally {
                            if (s)
                                throw o
                        }
                    }
                    return i
                })
            },
            last: function() {
                return this.models.length > 0 ? this.models[this.models.length - 1] : null
            },
            map: function(e) {
                for (var t = [], i = 0; i < this.models.length; i++) {
                    var n = this.models[i];
                    t.push(e(n))
                }
                return t
            },
            toJSON: function() {
                return this.models.map(function(e) {
                    return e.toJSON()
                })
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(13),
        s = OpenLayers.Class({
            visit: function(e) {
                var t = this[e.CLASS_NAME.split(".").last()];
                return n.defined(t) || (t = this._default),
                    t.call(this, e)
            },
            _default: function() {},
            CLASS_NAME: "Waze.Util.Visitor"
        });
    s.Order = {
            PRE: 0,
            POST: 1,
            IN: 2
        },
        e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = void 0,
        r = i(10),
        o = i(4);
    _.defer(function() {
        s = i(81)
    });
    var a = OpenLayers.Class(n, {
        node: null,
        prevNodeState: null,
        changedSegAttributes: null,
        changedSegStates: null,
        dontSerialize: !0,
        hidNode: !1,
        initialize: function(e, t) {
            n.prototype.initialize.apply(this, [t]),
                this.node = e,
                this.changedSegAttributes = {},
                this.changedSegStates = []
        },
        destroy: function() {
            this.model.nodes.get(this.node.getID()) || this.node.destroy(),
                this.node = null,
                this.changedSegAttributes = null,
                this.prevNodeState = null,
                this.changedSegStates = null,
                n.prototype.destroy.apply(this)
        },
        doAction: function() {
            if (this.node.state === OpenLayers.State.DELETE)
                return !1;
            this.node.attributes.segIDs.forEach(function(e) {
                    var t = this.model.segments.get(e);
                    this.doSubAction(new s(t, this.node))
                }, this),
                this.node.hidden || (this.hidNode = !0),
                this.node.hidden = !0,
                this.prevNodeState = this.node.state,
                this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                    this.model.nodes.changed(this.node))
        },
        undoAction: function() {
            this.hidNode && delete this.node.hidden,
                this.node.state === OpenLayers.State.INSERT ? this.model.nodes.put(this.node) : (this.node.state = this.prevNodeState,
                    this.model.nodes.changed(this.node)),
                n.prototype.undoAction.apply(this)
        },
        redoAction: function() {
            this.hidNode && (this.node.hidden = !0),
                this.node.state === OpenLayers.State.INSERT ? this.model.nodes.remove(this.node) : (this.node.state = OpenLayers.State.DELETE,
                    this.model.nodes.changed(this.node)),
                n.prototype.redoAction.apply(this)
        },
        serialize: function() {
            return {
                _objectType: o.NODE,
                action: r.TYPE.DELETE,
                attributes: {
                    id: this.node.getID()
                }
            }
        },
        CLASS_NAME: "Waze.Action.DeleteNode"
    });
    e.exports = a
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = OpenLayers.Class(n, {
            object: null,
            repo: null,
            origState: null,
            initialize: function(e, t) {
                n.prototype.initialize.apply(this, [t]),
                    this.object = e
            },
            destroy: function() {
                null !== this.repo && null !== this.object && null === this.repo.get(this.object.getID()) && this.object.destroy(),
                    this.object = null,
                    n.prototype.destroy.apply(this)
            },
            doAction: function() {
                return this.repo = this.model.getRepository(this.object.type),
                    null !== this.repo && (this.origState = this.object.state,
                        this.removeObjct(), !0)
            },
            removeObjct: function() {
                this.object.state === OpenLayers.State.INSERT ? this.repo.remove(this.object) : (this.object.state = OpenLayers.State.DELETE,
                    this.repo.changed(this.object))
            },
            undoAction: function() {
                this.object.state = this.origState,
                    this.object.state === OpenLayers.State.INSERT ? this.repo.put(this.object) : this.repo.changed(this.object)
            },
            redoAction: function() {
                this.removeObjct()
            },
            serialize: function() {
                return {
                    _objectType: this.object.type,
                    action: n.TYPE.DELETE,
                    attributes: {
                        id: this.object.getID()
                    }
                }
            },
            CLASS_NAME: "Waze.Action.DeleteObject"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(41),
        r = i(40),
        o = i(82),
        a = i(13),
        l = i(27),
        u = i(35),
        d = i(29),
        c = OpenLayers.Class(n, {
            segments: null,
            node: null,
            fromNode: null,
            toNode: null,
            mergedSegment: null,
            firstSegReversed: !1,
            secondSegReversed: !1,
            keepLevel: !1,
            initialize: function(e, t, i) {
                n.prototype.initialize.apply(this, [i]),
                    this.segments = e,
                    this.node = t
            },
            createMergedSegment: function(e, t) {
                var i = e[0].geometry.clone().getVertices(),
                    n = e[1].geometry.clone().getVertices(),
                    s = this.segments.first();
                this.fromNode = e[0].attributes.fromNodeID,
                    e[0].attributes.fromNodeID === t.getID() && (i.reverse(),
                        this.fromNode = e[0].attributes.toNodeID,
                        this.firstSegReversed = !0),
                    this.toNode = e[1].attributes.toNodeID,
                    e[1].attributes.toNodeID === t.getID() && (n.reverse(),
                        this.toNode = e[1].attributes.fromNodeID,
                        this.secondSegReversed = !0),
                    i.pop(),
                    i = i.concat(n);
                var r = new OpenLayers.Geometry.LineString(i),
                    o = new l($.extend({}, s.attributes));
                return o.copyAttributes(s),
                    o.geometry = r,
                    o.setID(null),
                    o
            },
            doAction: function() {
                if (a.defined(this.segments) || (this.keepLevel = !0,
                        this.segments = this.node.attributes.segIDs.map(function(e) {
                            return this.model.segments.get(e)
                        }, this)), !this.node.areSegmentsBridgable(this.segments))
                    return !1;
                this.mergedSegment = this.createMergedSegment(this.segments, this.node);
                var e = this.mergedSegment.attributes;
                e.fwdDirection = this.segments[0].attributes.fwdDirection,
                    e.revDirection = this.segments[0].attributes.revDirection,
                    e.fwdToll = this.segments[0].attributes.fwdToll,
                    e.revToll = this.segments[0].attributes.revToll;
                var t = this.segments[0],
                    i = this.segments[1],
                    n = u.reverseOf(t.getID()),
                    l = u.forwardOf(t.getID()),
                    d = u.reverseOf(i.getID()),
                    h = u.forwardOf(i.getID());
                if (this.firstSegReversed) {
                    var p = [l, n];
                    n = p[0],
                        l = p[1],
                        this.mergedSegment.reverseDirection()
                }
                if (this.secondSegReversed) {
                    var f = [h, d];
                    d = f[0],
                        h = f[1]
                }
                var g = this.level;
                if (_.isUndefined(this.level) && (g = this.node.attributes.segIDs.map(function(e) {
                            return this.model.segments.get(e).attributes.level
                        }, this).max(),
                        _.isUndefined(g) && (g = 0),
                        this.keepLevel || g++),
                    e.level = g,
                    e.streetIDs = (this.segments[0].attributes.streetIDs || []).union(this.segments[1].attributes.streetIDs || []),
                    e.origIDs = [this.segments[0].getID(), this.segments[1].getID()],
                    this.mergedSegment.attributes.toNodeID = this.toNode,
                    this.mergedSegment.attributes.fromNodeID = this.fromNode,
                    this.setLockLevel(this.mergedSegment),
                    this.doSubAction(new o(this.mergedSegment)),
                    this.mergedSegment.attributes.permissions = this.segments[0].attributes.permissions & this.segments[1].attributes.permissions,
                    this.fromNode = this.model.nodes.get(this.fromNode),
                    this.toNode = this.model.nodes.get(this.toNode),
                    this._copyTurns(l, n, h, d),
                    this.fromNode && this.doSubAction(new s(this.fromNode, this.mergedSegment)),
                    this.toNode && this.doSubAction(new s(this.toNode, this.mergedSegment)),
                    this.doSubAction(new r(this.segments[0], {
                        hide: !0
                    })),
                    this.doSubAction(new r(this.segments[1], {
                        hide: !0
                    })),
                    2 === this.node.attributes.segIDs.length) {
                    var m = this.node.attributes.segIDs.map(function(e) {
                        return this.model.segments.get(e)
                    }, this);
                    this.doSubAction(new c(m, this.node, {
                        level: g - 1
                    }))
                }
            },
            _copyTurns: function(e, t, i, n) {
                var s = this,
                    r = this.model.getTurnGraph();
                r.getTurnsTo(e).forEach(function(e) {
                        e = e.withToVertex(u.forwardOf(s.mergedSegment.getID())),
                            s.doSubAction(new d(r, e, {
                                dontSerialize: !0
                            }))
                    }),
                    r.getTurnsFrom(t).forEach(function(e) {
                        e = e.withFromVertex(u.reverseOf(s.mergedSegment.getID())),
                            s.doSubAction(new d(r, e, {
                                dontSerialize: !0
                            }))
                    }),
                    r.getTurnsFrom(i).forEach(function(e) {
                        e = e.withFromVertex(u.forwardOf(s.mergedSegment.getID())),
                            s.doSubAction(new d(r, e, {
                                dontSerialize: !0
                            }))
                    }),
                    r.getTurnsTo(n).forEach(function(e) {
                        e = e.withToVertex(u.reverseOf(s.mergedSegment.getID())),
                            s.doSubAction(new d(r, e, {
                                dontSerialize: !0
                            }))
                    })
            },
            setLockLevel: function(e) {
                var t = [this.segments[0].attributes.lockRank, this.segments[1].attributes.lockRank],
                    i = [this.segments[0].attributes.rank, this.segments[1].attributes.rank];
                e.attributes.lockRank = null === t[0] && null === t[1] ? null : Math.max.apply(null, t),
                    e.attributes.rank = Math.max.apply(null, i)
            },
            CLASS_NAME: "Waze.Action.MergeSegments"
        });
    e.exports = c
}, function(e, t, i) {
    "use strict";
    var n = i(83),
        s = i(103),
        r = i(41),
        o = i(81),
        a = i(9),
        l = i(4),
        u = OpenLayers.Class(a, {
            segment: null,
            initialize: function(e, t) {
                a.prototype.initialize.apply(this, [t]),
                    this.segment = e,
                    this.analyzeSnappedFeatures()
            },
            destroy: function() {
                a.prototype.destroy.apply(this)
            },
            analyzeSnappedFeatures: function() {
                if (this.touching = {},
                    this.snappedFeatures) {
                    this.snappedFeatures instanceof Array || (this.snappedFeatures = [this.snappedFeatures]),
                        this.snappedFeatures = this.snappedFeatures.filter(function(e) {
                            return e
                        });
                    var e = this.segment.geometry.getVertices(!0),
                        t = e.first(),
                        i = e.last(),
                        n = void 0;
                    this.snappedFeatures.forEach(function(e) {
                        n = null,
                            e.point.equals(t) ? (this.touching.fromVertex = {},
                                n = this.touching.fromVertex) : e.point.equals(i) && (this.touching.toVertex = {},
                                n = this.touching.toVertex),
                            n && (n.feature = e.feature,
                                n.point = e.point,
                                n.distance = e.distance,
                                e.feature.type === l.SEGMENT ? "edge" === e.type || "vertex" === e.type ? n.segmentEdge = !0 : "node" === e.type && (n.segmentNode = !0) : e.feature.type === l.NODE && (n.node = !0))
                    }, this)
                }
            },
            connectToExistingNode: function(e, t) {
                t !== e.getID() && (t && this.doSubAction(new o(this.segment, this.model.nodes.get(t))),
                    this.doSubAction(new r(e, this.segment)))
            },
            updateEndPoint: function(e, t, i) {
                if (t)
                    t.node ? this.connectToExistingNode(t.feature, e) : t.segmentNode ? (e && this.doSubAction(new o(this.segment, this.model.nodes.get(e))),
                        this.doSubAction(new s(t.point, [this.segment, t.feature]))) : t.segmentEdge && (e && this.doSubAction(new o(this.segment, this.model.nodes.get(e))),
                        this.doSubAction(new n(t.feature, {
                            splitAtPoint: t.point,
                            splitWithSegment: this.segment,
                            splittingPointDistance: t.distance
                        })));
                else if (e && this.doSubAction(new o(this.segment, this.model.nodes.get(e))),
                    this.createNodes) {
                    var r = void 0;
                    r = i ? this.segment.geometry.components[0] : this.segment.geometry.components[this.segment.geometry.components.length - 1],
                        this.doSubAction(new s(r, [this.segment]))
                }
                return !0
            },
            CLASS_NAME: "Waze.Action.SegmentAction"
        });
    e.exports = u
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = i(84),
        u = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._fromVertex = t,
                    this._toVertex = i,
                    this._turnData = n
            }
            return (0,
                    a.default)(e, [{
                    key: "isUturn",
                    value: function() {
                        return this._fromVertex.getSegmentID() === this._toVertex.getSegmentID()
                    }
                }, {
                    key: "isDifficult",
                    value: function() {
                        return this._turnData.getRestrictions().some(function(e) {
                            return e.isDifficult()
                        })
                    }
                }, {
                    key: "isTimeRestricted",
                    value: function() {
                        return this._turnData.getRestrictions().some(function(e) {
                            return !e.isDifficult()
                        })
                    }
                }, {
                    key: "getFromVertex",
                    value: function() {
                        return this._fromVertex
                    }
                }, {
                    key: "getToVertex",
                    value: function() {
                        return this._toVertex
                    }
                }, {
                    key: "getTurnData",
                    value: function() {
                        return this._turnData
                    }
                }, {
                    key: "withTurnData",
                    value: function(t) {
                        return new e(this._fromVertex, this._toVertex, t)
                    }
                }, {
                    key: "withUnknownTurnData",
                    value: function() {
                        return new e(this._fromVertex, this._toVertex, l.createUnknown())
                    }
                }, {
                    key: "withFromVertex",
                    value: function(t) {
                        return new e(t, this._toVertex, this._turnData)
                    }
                }, {
                    key: "withToVertex",
                    value: function(t) {
                        return new e(this._fromVertex, t, this._turnData)
                    }
                }, {
                    key: "toString",
                    value: function() {
                        return "" + this._fromVertex + this._toVertex + this._turnData
                    }
                }]),
                e
        }();
    e.exports = u
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(29),
        a = n(o),
        l = OL.Class(r.default, {
            initialize: function(e, t, i) {
                return this.node = e,
                    this.navigable = t,
                    r.default.prototype.initialize.apply(this, [i])
            },
            doAction: function() {
                var e = !1,
                    t = this.node.allConnectionKeys(!0),
                    i = void 0;
                i = this.navigable ? t.legal : t.all;
                for (var n = 0; n < i.length; n++) {
                    var s = i[n],
                        r = s.from === s.to;
                    if (s.from.areTurnsLocked(this.node) || this.doSubAction(s.from.lockTurns(this.node, !0)), !this.navigable || !r) {
                        var o = this.forSegment;
                        if (o && o !== s.from && o !== s.to)
                            continue;
                        var l = this.model.getTurnGraph().getTurnThroughNode(this.node, s.from, s.to),
                            u = l.getTurnData().isUnknown(),
                            d = l.getTurnData().withToggledState(this.navigable);
                        if (l = l.withTurnData(d),
                            u && !l.getTurnData().isAllowed())
                            continue;
                        var c = new a.default(this.model.getTurnGraph(), l);
                        !1 !== this.doSubAction(c) && (e = !0)
                    }
                }
                return e
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(10),
        s = i(40),
        r = i(143),
        o = i(4),
        a = OpenLayers.Class(r, {
            segment: null,
            oldGeometry: null,
            newGeometry: null,
            changedState: !1,
            createNodes: !1,
            initialize: function(e, t, i, n) {
                r.prototype.initialize.apply(this, [e, n]),
                    this.segment = e,
                    this.changedState = !1,
                    this.oldGeometry = t === e.geometry ? t.clone() : t,
                    this.newGeometry = i === e.geometry ? i.clone() : i
            },
            destroy: function() {
                this.segment = null,
                    this.oldGeometry.destroy(),
                    this.newGeometry.destroy(),
                    this.oldGeometry = null,
                    this.newGeometry = null,
                    r.prototype.destroy.apply(this)
            },
            doAction: function() {
                var e = this.oldGeometry.getVertices(!0);
                if (this.replaceGeometry(),
                    this.segment.isPoint())
                    return void this.doSubAction(new s(this.segment));
                var t = this.segment.geometry.getVertices(!0);
                e[0].equals(t[0]) || this.updateEndPoint(this.segment.attributes.fromNodeID, this.touching.fromVertex, !0),
                    e[1].equals(t[1]) || this.updateEndPoint(this.segment.attributes.toNodeID, this.touching.toVertex, !1),
                    this.segment.state || (this.changedState = !0,
                        this.segment.state = OpenLayers.State.UPDATE),
                    this.model.segments.changed(this.segment)
            },
            replaceGeometry: function() {
                this.segment.geometry.components.length = 0,
                    this.newGeometry.components.forEach(function(e) {
                        this.segment.geometry.addComponent(e.clone())
                    }, this),
                    this.segment.geometry.calculateBounds(),
                    this.segment.bounds = this.segment.geometry.bounds
            },
            undoAction: function() {
                this.changedState && (this.segment.state = null),
                    this.segment.geometry.components.length = 0,
                    this.oldGeometry.components.forEach(function(e) {
                        this.segment.geometry.addComponent(e.clone())
                    }, this),
                    this.segment.geometry.calculateBounds(),
                    this.segment.bounds = this.segment.geometry.bounds,
                    this.model.segments.changed(this.segment),
                    r.prototype.undoAction.apply(this)
            },
            redoAction: function() {
                this.segment.geometry.components.length = 0,
                    this.newGeometry.components.forEach(function(e) {
                        this.segment.geometry.addComponent(e.clone())
                    }, this),
                    this.segment.geometry.calculateBounds(),
                    this.segment.bounds = this.segment.geometry.bounds,
                    this.changedState && (this.segment.state = OpenLayers.State.UPDATE),
                    this.model.segments.changed(this.segment),
                    r.prototype.redoAction.apply(this)
            },
            serialize: function() {
                var e = {};
                return e.id = this.segment.getID(),
                    e.geometry = this.newGeometry, {
                        _objectType: o.SEGMENT,
                        action: n.TYPE.UPDATE,
                        attributes: e
                    }
            },
            getBounds: function() {
                return this.newGeometry.getBounds().clone()
            },
            CLASS_NAME: "Waze.Action.UpdateSegmentGeometry"
        });
    e.exports = a
}, function(e, t, i) {
    "use strict";
    var n = i(20),
        s = i(101),
        r = OL.Class(OL.Control.ModifyFeature, {
            standalone: !0,
            initialize: function(e, t) {
                OpenLayers.Control.ModifyFeature.prototype.initialize.call(this, e.layer, t),
                    this.feature = e,
                    this.repo.on(n.CHANGED, this._onFeaturesChanged, this),
                    this.repo.on(n.REMOVED, this._onFeaturesRemoved, this),
                    this.map.events.register("zoomend", this, this.resetVertices),
                    this._originalGeometry = this.feature.geometry.clone(),
                    this.map.addControl(this),
                    this.activate(),
                    this.selectFeature(this.feature),
                    this.dragControl.handlers.feature.geometryTypeMatches = this._isGeometryMatchForDrag
            },
            _isGeometryMatchForDrag: function(e) {
                return Boolean(e._sketch) || e.model && e.model.isSelected() && ("function" != typeof e.model.isPoint || e.model.isPoint())
            },
            destroy: function() {
                this.unselectFeature(),
                    this.repo.off(n.CHANGED, this._onFeaturesChanged, this),
                    this.repo.off(n.REMOVED, this._onFeaturesRemoved, this),
                    this.map.events.unregister("zoomend", this, this.resetVertices),
                    this.map.removeControl(this),
                    OL.Control.ModifyFeature.prototype.destroy.apply(this, arguments)
            },
            setFeatureState: function() {},
            _onFeaturesChanged: function() {
                this.feature && (this.resetVertices(),
                    this._originalGeometry = this.feature.geometry.clone())
            },
            _onFeaturesRemoved: function(e) {
                e.contains(this.feature) && this.unselectFeature(this.feature)
            },
            onModification: function() {
                var e = new s(this.feature.model, this.repo, this._originalGeometry, this.feature.geometry);
                this.model.actionManager.add(e),
                    this._originalGeometry = this.feature.geometry.clone()
            },
            collectDragHandle: function() {
                var e = this,
                    t = _.max(this.feature.geometry.getVertices(), function(e) {
                        return e.y
                    }),
                    i = new OpenLayers.Geometry.Point(t.x, t.y + 30 * this.map.getResolution()),
                    n = new OpenLayers.Feature.Vector(i);
                return i.move = function(t, n) {
                        return OpenLayers.Geometry.Point.prototype.move.call(i, t, n),
                            e.feature.geometry.move(t, n)
                    },
                    n.dragPoint = !0,
                    n._sketch = !0,
                    this.dragHandle = n,
                    this.layer.addFeatures([this.dragHandle], {
                        silent: !0
                    })
            }
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            0: "unknown",
            1: "big_direction_left",
            2: "big_direction_right",
            3: "big_direction_exit_left",
            4: "big_direction_exit_right",
            5: "big_direction_forward",
            6: "big_directions_roundabout",
            7: "big_directions_roundabout",
            8: "big_directions_roundabout_l",
            9: "big_directions_roundabout_l",
            10: "big_directions_roundabout_s",
            11: "big_directions_roundabout_s",
            12: "big_directions_roundabout_r",
            13: "big_directions_roundabout_r",
            14: "big_directions_roundabout_u",
            15: "big_directions_roundabout_u",
            16: "big_direction_end",
            17: "big_direction_exit_left",
            18: "big_direction_exit_right",
            20: "big_direction_u"
        },
        s = {
            pointerEvents: "none",
            strokeLinecap: "square",
            strokeWidth: 5
        },
        r = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(s, {
                context: {
                    getInstructionCodeImages: function(e) {
                        return i(737)("./" + n[e.attributes.code] + ".png")
                    }
                }
            })
        });
    r.addUniqueValueRules("default", "type", {
            session: {
                strokeColor: "#7ddd7f",
                strokeWidth: 2,
                graphicZIndex: 0
            },
            drive: {
                strokeColor: "#7ddd7f",
                strokeWidth: 8,
                graphicZIndex: 2
            },
            driveArrow: {
                externalGraphic: i(756),
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 2
            },
            disconnect: {
                strokeColor: "#D04F2D",
                strokeWidth: 8,
                strokeDashstyle: "dash",
                strokeDashArray: "32 16",
                graphicZIndex: 2
            },
            matchedSegment: {
                strokeWidth: 8,
                strokeColor: "#00ece3",
                strokeOpacity: .7,
                graphicZIndex: 2
            },
            matchedSegmentArrow: {
                externalGraphic: i(217),
                rotation: "${angle}",
                fillOpacity: .7,
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            gutter: {
                strokeColor: "black",
                graphicZIndex: 2
            },
            pinA: {
                pointerEvents: "visiblePainted",
                externalGraphic: i(757),
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            pinB: {
                pointerEvents: "visiblePainted",
                externalGraphic: i(758),
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            },
            suggestedRoute: {
                strokeWidth: 8,
                strokeColor: "#9400ff",
                graphicZIndex: 3
            },
            suggestedRouteArrow: {
                externalGraphic: i(759),
                rotation: "${angle}",
                graphicWidth: 9,
                graphicHeight: 5,
                graphicZIndex: 3
            },
            driveWeight: {
                label: "${weight}",
                fontSize: 12,
                fontColor: "white",
                strokeWidth: 3,
                strokeOpacity: 1,
                pointRadius: 14,
                fillColor: "#529554",
                strokeColor: "#7ddd7f"
            },
            routeInstruction: {
                externalGraphic: "${getInstructionCodeImages}",
                graphicWidth: 30,
                graphicHeight: 32
            },
            shortSegment: {
                strokeWidth: 8,
                strokeColor: "#3a582c",
                graphicZIndex: 1
            },
            venue: {
                strokeColor: "#ea4e35",
                fillColor: "#ea4e35",
                strokeDashstyle: "dash",
                strokeOpacity: 1,
                strokeWidth: 2,
                fillOpacity: .3
            }
        }),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(11),
        s = i(27),
        r = OpenLayers.Class({
            ARROW_DISTANCE: 70,
            DISCONNECT_GUTTER_SIZE: 5,
            WEIGHT_POINT_DISTANCE: 70,
            HIDDEN_INSTRUCTION_CODES: [0, 5],
            layer: null,
            initialize: function(e) {
                this.layer = e
            },
            drawUserDrive: function(e) {
                var t = [];
                return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "drive"
                    })),
                    this.drawArrows(e, t, "driveArrow"),
                    this.addFeatures(t),
                    t
            },
            drawDriveWeightPoint: function(e, t, i) {
                if (this.layer.map.getZoom() >= W.Config.user_drive.weightMinDisplayZoom) {
                    var s = e.distanceTo(t, {
                        details: !0
                    });
                    s = new OpenLayers.Geometry.Point(s.x1, s.y1),
                        s = n.getPointAlongLine(t.getVertices(), this.WEIGHT_POINT_DISTANCE * this.layer.map.getResolution(), s).point;
                    var r = new OpenLayers.Feature.Vector(s, {
                        weight: i.toString(),
                        type: "driveWeight"
                    });
                    this.addFeatures(r)
                }
            },
            drawShortSegment: function(e) {
                var t = [];
                t.push(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "shortSegment"
                    })),
                    this.addFeatures(t)
            },
            drawMatchedSegment: function(e) {
                var t = [];
                t.push(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "matchedSegment"
                    })),
                    this.drawArrows(e, t, "matchedSegmentArrow"),
                    this.addFeatures(t)
            },
            drawSuggestedRoute: function(e) {
                var t = [];
                return t.push(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "suggestedRoute"
                    })),
                    this.drawArrows(e, t, "suggestedRouteArrow"),
                    this.addFeatures(t),
                    t
            },
            drawSession: function(e) {
                this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                    type: "session"
                }))
            },
            drawArrows: function(e, t, i) {
                if (this.layer.map.getZoom() >= W.Config.user_drive.arrowsMinDisplayZoom) {
                    var n = this.ARROW_DISTANCE * this.layer.map.getResolution();
                    new s({
                        geometry: e
                    }).getArrowPoints(n).forEach(function(e) {
                        t.push(new OpenLayers.Feature.Vector(e.first(), {
                            type: i,
                            angle: 360 - OpenLayers.Util.deg(e.last())
                        }))
                    })
                }
            },
            drawDisconnect: function(e, t) {
                var i = [];
                i.push(new OpenLayers.Feature.Vector(e.clone(), {
                        type: "disconnect"
                    })),
                    t && this.drawDisconnectGutters(e, i),
                    this.addFeatures(i)
            },
            drawDisconnectGutters: function(e, t) {
                if (this.layer.map.getZoom() >= W.Config.user_drive.gutterMinDisplayZoom) {
                    var i = void 0,
                        n = this.DISCONNECT_GUTTER_SIZE * this.layer.map.getResolution();
                    [!0, !1].forEach(function(r) {
                        i = new s({
                                geometry: e
                            }).getSubSegment(n, r),
                            i.attributes.type = "gutter",
                            t.push(i)
                    })
                }
            },
            drawPin: function(e, t) {
                this.addFeatures(new OpenLayers.Feature.Vector(e.clone(), {
                    type: "pin" + t
                }))
            },
            drawRouteInstructions: function(e, t) {
                var i = [];
                t.isEmpty() || this.layer.map.getZoom() < W.Config.user_drive.instructionsMinDisplayZoom || (t.forEach(function(e) {
                        this.HIDDEN_INSTRUCTION_CODES.contains(Number(e.code)) || i.push(new OpenLayers.Feature.Vector(e.point, {
                            type: "routeInstruction",
                            code: e.code
                        }))
                    }, this),
                    this.addFeatures(i))
            },
            drawVenue: function(e) {
                var t = new OL.Feature.Vector(e.clone(), {
                    type: "venue"
                });
                this.addFeatures(t)
            },
            addFeatures: function(e) {
                this.layer.addFeatures(e, {
                    silent: !0
                })
            }
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        FIXED: 0,
        NOT_A_PROBLEM: 1,
        AUTO: 2
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = {
            GROUP_ISSUES: "GROUP_ISSUES",
            GROUP_MAP_ISSUES: "GROUP_MAP_ISSUES",
            ITEM_MAP_PROBLEMS: "ITEM_MAP_PROBLEMS",
            ITEM_CLOSED_MAP_PROBLEMS: "ITEM_CLOSED_MAP_PROBLEMS",
            ITEM_UPDATE_REQUESTS: "ITEM_UPDATE_REQUESTS",
            ITEM_CLOSED_UPDATE_REQUESTS: "ITEM_CLOSED_UPDATE_REQUESTS",
            ITEM_PLACE_UPDATE_REQUESTS: "ITEM_PLACE_UPDATE_REQUESTS",
            GROUP_PARKING_ISSUES: "GROUP_PARKING_ISSUES",
            ITEM_PARKING_MAP_PROBLEMS: "ITEM_PARKING_MAP_PROBLEMS",
            ITEM_PARKING_CLOSED_MAP_PROBLEMS: "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
            ITEM_PARKING_PLACE_UPDATE_REQUESTS: "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
            GROUP_PLACES: "GROUP_PLACES",
            ITEM_VENUES: "ITEM_VENUES",
            ITEM_RESIDENTIAL_PLACES: "ITEM_RESIDENTIAL_PLACES",
            ITEM_PARKING_PLACES: "ITEM_PARKING_PLACES",
            GROUP_ROAD: "GROUP_ROAD",
            ITEM_ROAD: "ITEM_ROAD",
            ITEM_JUNCTION_BOXES: "ITEM_JUNCTION_BOXES",
            ITEM_CLOSURES: "ITEM_CLOSURES",
            ITEM_SPEED_CAMERAS: "ITEM_SPEED_CAMERAS",
            GROUP_DISPLAY: "GROUP_DISPLAY",
            ITEM_SATELLITE_IMAGERY: "ITEM_SATELLITE_IMAGERY",
            ITEM_AREA_MANAGERS: "ITEM_AREA_MANAGERS",
            ITEM_GPS_POINTS: "ITEM_GPS_POINTS",
            ITEM_LIVE_USERS: "ITEM_LIVE_USERS",
            ITEM_EDITABLE_AREAS: "ITEM_EDITABLE_AREAS"
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(18),
        a = n(o),
        l = i(55),
        u = n(l),
        d = {
            bfs: function(e, t, i) {
                var n = [e],
                    s = {};
                s[e.getID()] = e.getID();
                for (; !n.isEmpty();) {
                    var r = function() {
                        for (var e = n.shift(), r = ["from", "to"], o = 0; o < r.length; o++)
                            for (var a = r[o], l = e.attributes[a + "NodeID"], u = e.getConnectedSegments(a).filter(function(i) {
                                    return i.getID() !== e.getID() && t(i)
                                }).map(function(e) {
                                    return e
                                }), d = 0; d < u.length; d++) {
                                var c = u[d];
                                if (!s[c.getID()]) {
                                    if (s[c.getID()] = e.getID(),
                                        i(c, l, a, u, e))
                                        return {
                                            v: [c, s]
                                        };
                                    n.push(c)
                                }
                            }
                    }();
                    if ("object" === (void 0 === r ? "undefined" : (0,
                            u.default)(r)))
                        return r.v
                }
                return [null, s]
            },
            getReversedSegments: function(e) {
                var t = {
                    multipleConnectedComponents: !1,
                    numReversed: 0
                };
                if (e.isEmpty())
                    return t;
                t[e[0].getID()] = !1;
                var i = this.bfs(e[0], function(t) {
                        return e.contains(t)
                    }, function(e, i, n, s, r) {
                        var o = "from" === n && e.attributes.toNodeID !== i || "to" === n && e.attributes.fromNodeID !== i,
                            a = t[r.getID()],
                            l = o ? !a : a;
                        return t[e.getID()] = l,
                            l && t.numReversed++, !1
                    }),
                    n = (0,
                        a.default)(i, 2),
                    s = n[1];
                return (0,
                        r.default)(s).length < e.length && (t = {
                        multipleConnectedComponents: !0,
                        numReversed: 0
                    }),
                    t
            }
        };
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(49),
        r = n(s),
        o = i(96),
        a = n(o),
        l = Backbone.Collection.extend({
            model: a.default,
            initialize: function() {
                this.serializer = new r.default
            },
            url: function() {
                return W.Config.paths.notifications
            },
            parse: function(e) {
                return this.serializer.read(e),
                    _.filter(e.notifications.objects, function(e) {
                        return e.isNotification()
                    })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(155),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: function() {
                return "feed-item feed-notification"
            },
            template: "Waze/Modules/Feed/templates/notification_item",
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    title: this._getValueOrTemplate("title"),
                    shortMessage: this._getValueOrTemplate("shortMessage")
                })
            },
            _getValueOrTemplate: function(e) {
                var t = this.model.getParameter(e);
                if (null == t) {
                    var i = "feed.notifications.type." + this.model.attributes.type + "." + e;
                    void 0 !== I18n.lookup(i) && (t = I18n.translate(i, this.model.attributes.parameters))
                }
                return t
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            tagName: "li",
            className: "feed-item",
            triggers: {
                click: "click"
            },
            events: {
                "click .delete": "_onClickDelete"
            },
            initialize: function() {
                return this.model.on("change:selected", this._toggleSelected, this),
                    this.model.on("delegate:delete", this._destroyModel, this),
                    this.model.on("resolved", this._destroyModel, this)
            },
            serializeData: function() {
                return {
                    title: this.model.getParameter("title"),
                    shortMessage: this.model.getParameter("shortMessage"),
                    timestamp: this.model.has("timestamp") ? this._formatTimestamp() : void 0
                }
            },
            _onClickDelete: function(e) {
                return e.stopPropagation(),
                    this._destroyModel()
            },
            _destroyModel: function() {
                var e = this;
                return this.$el.one("transitionend", function() {
                        return e.model.destroy()
                    }),
                    this.$el.addClass("deleting"),
                    W.Report.feedAction("dismiss", this.model.get("type"))
            },
            _toggleSelected: function() {
                var e = this.model.get("selected");
                if (this.$el.toggleClass("selected", e),
                    e)
                    return this.el.scrollIntoViewIfNeeded()
            },
            _formatTimestamp: function() {
                return s.default.dateString(this.model.get("timestamp"))
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(860),
        r = n(s),
        o = i(20),
        a = n(o),
        l = i(157),
        u = n(l),
        d = i(158),
        c = n(d),
        h = i(16),
        p = n(h),
        f = i(245),
        g = n(f),
        m = Marionette.View.extend({
            template: "templates/address/edit",
            className: "address-edit-view",
            events: {
                "submit .address-form": "_formSubmitted",
                "click .edit-button": "_editClicked",
                "click .cancel-button": "_cancelClicked"
            },
            ui: {
                streetNameInput: ".street-name",
                cityNameInput: ".city-name"
            },
            defaultOptions: {
                editStreet: !0,
                editHouseNumber: !1
            },
            cityBindings: {
                ".city-id": {
                    observe: "cityID",
                    attributes: u.default.requireAndEnableIfNot("emptyCity"),
                    selectOptions: {
                        collection: "this.cityOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.select_city")
                        }
                    }
                }
            },
            bindings: {
                ".street-name": {
                    observe: "streetName",
                    attributes: u.default.requireAndEnableIfNot("emptyStreet")
                },
                ".city-name": {
                    observe: "cityName",
                    attributes: u.default.requireAndEnableIfNot("emptyCity")
                },
                ".state-id": {
                    observe: "stateID",
                    selectOptions: {
                        collection: "this.stateOptions"
                    }
                },
                ".country-id": {
                    observe: "countryID",
                    selectOptions: {
                        collection: "this.countryOptions"
                    }
                },
                ".empty-street": "emptyStreet",
                ".empty-city": "emptyCity",
                ".house-number": "houseNumber",
                ".preview": {
                    observe: "addressFormShown",
                    visible: function(e) {
                        return !e
                    }
                },
                ".address-form": {
                    observe: "addressFormShown",
                    visible: !0
                },
                ".full-address": "fullAddress",
                ".edit-button": {
                    observe: "editable",
                    visible: !0
                }
            },
            initialize: function(e) {
                if (this.options = _.defaults(e, this.defaultOptions),
                    this.addressModel = e.addressModel,
                    this.dataModel = e.dataModel,
                    this.model = new r.default.fromAddress(this.addressModel, this.dataModel),
                    this.model.set({
                        editable: e.editable,
                        fullAddress: p.default.formatAddress(this.addressModel)
                    }),
                    this.showStatesSelection = this.dataModel.hasStates(),
                    this._generateOptions(),
                    this.options.showCitySelect ? this._initCitySelect() : this._initCityInput(),
                    this.showStatesSelection && this.model.on("change:cityID change:cityName", this._updateStateFromCity, this),
                    this.options.editStreet)
                    return this._initStreetInput()
            },
            _generateOptions: function() {
                this.countryOptions = _.map(this.dataModel.countries.objects, function(e) {
                        return {
                            label: e.name,
                            value: e.getID()
                        }
                    }),
                    this.stateOptions = _.map(this.dataModel.states.objects, function(e) {
                        return {
                            label: e.name,
                            value: e.getID()
                        }
                    })
            },
            _generateCityOptions: function() {
                this.cityOptions = this.dataModel.cities.getValidCities().map(function(e) {
                    return {
                        label: e.attributes.name,
                        value: e.getID()
                    }
                })
            },
            _generateCityNames: function() {
                this.cityNames = this.dataModel.cities.getValidCities().map(function(e) {
                    return e.attributes.name
                })
            },
            _generateStreetNames: function() {
                this.streetNames = _.chain(this.dataModel.streets.objects).pluck("name").compact().value()
            },
            onRender: function() {
                return this.stickit(),
                    this.stickit(this.model, _.extend(this.bindings, this.cityBindings)),
                    this.ui.cityNameInput.typeahead({
                        source: this.cityNames
                    }),
                    this.ui.streetNameInput.typeahead({
                        source: this.streetNames
                    })
            },
            _initCitySelect: function() {
                var e = this;
                return this._generateCityOptions(),
                    this.listenTo(this.dataModel.cities, a.default.UPDATED, function() {
                        return e._generateCityOptions(),
                            e.stickit(e.model, e.cityBindings)
                    })
            },
            _initCityInput: function() {
                var e = this;
                return this._generateCityNames(),
                    this.listenTo(this.dataModel.cities, a.default.UPDATED, function() {
                        e._generateCityNames(),
                            e.ui.cityNameInput.data && e.ui.cityNameInput.data("typeahead") && (e.ui.cityNameInput.data("typeahead").source = e.cityNames)
                    })
            },
            _initStreetInput: function() {
                var e = this;
                return this._generateStreetNames(),
                    this.listenTo(this.dataModel.streets, a.default.UPDATED, function() {
                        e._generateStreetNames(),
                            e.ui.streetNameInput.data && e.ui.streetNameInput.data("typeahead") && (e.ui.streetNameInput.data("typeahead").source = e.streetNames)
                    })
            },
            serializeData: function() {
                return _.extend(Marionette.View.prototype.serializeData.apply(this, arguments), {
                    dataModel: this.dataModel,
                    MAX_LENGTH: this.model.MAX_LENGTH,
                    showStatesSelection: this.dataModel.hasStates(),
                    showHouseNumberInput: this.options.editHouseNumber,
                    showStreetInput: this.options.editStreet,
                    showCitySelect: this.options.showCitySelect,
                    fullAddress: p.default.formatAddress(this.addressModel)
                })
            },
            _formSubmitted: function(e) {
                e.preventDefault();
                var t = this.model.toJSON(),
                    i = this.options.showCitySelect && !t.emptyCity;
                i || this._cityExists(t) ? this._submitAddressChanges(t, i) : this._confirmCityChanges(t)
            },
            _submitAddressChanges: function(e, t) {
                var i = new c.default(this.options.feature, e, {
                    updateStreet: this.options.editStreet,
                    getCityFromDataModel: t,
                    updateHouseNumber: this.options.editHouseNumber
                });
                this.dataModel.actionManager.add(i),
                    this.addressModel = this.options.feature.getAddress(),
                    this.model.set({
                        fullAddress: p.default.formatAddress(this.addressModel)
                    }),
                    this.model.set({
                        addressFormShown: !1
                    }),
                    this.trigger("addressChanged")
            },
            _cityExists: function(e) {
                return W.model.cities.getByAttributes({
                    isEmpty: e.isEmpty,
                    name: e.cityName,
                    countryID: e.countryID,
                    stateID: e.stateID
                }).length > 0
            },
            _confirmCityChanges: function(e) {
                var t = this;
                g.default.getAndConfirmCityChange(e.cityName, e.countryID, e.stateID).then(function(i) {
                    i && t._submitAddressChanges(e)
                }).catch(function() {
                    t._submitAddressChanges(e)
                })
            },
            _editClicked: function() {
                return this.model.set({
                    addressFormShown: !0
                })
            },
            _cancelClicked: function() {
                return this.model.set({
                        addressFormShown: !1
                    }),
                    this.model.populateFromAddressModel(this.addressModel)
            },
            _updateStateFromCity: function() {
                var e = void 0;
                e = this.options.showCitySelect ? {
                    id: this.model.get("cityID")
                } : {
                    name: this.model.get("cityName")
                };
                var t = this.dataModel.cities.getByAttributes(e),
                    i = t[0];
                null != i && null != i.attributes.stateID && this.model.set("stateID", i.attributes.stateID)
            },
            toggleEditable: function(e) {
                return !1 === e && this.model.set({
                        addressFormShown: !1
                    }),
                    this.model.set({
                        editable: e
                    })
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        selectionRequiredOption: function(e) {
            return Backbone.$("<option/>").prop("disabled", "disabled").prop("selected", "selected").text(e).val("")
        },
        selectOptionsFromList: function(e, t, i) {
            var n = null,
                s = e.map(function(e) {
                    return {
                        value: e,
                        label: t(e)
                    }
                });
            return void 0 !== i && (s = s.filter(function(e) {
                    return e.value !== i
                }),
                n = {
                    value: i,
                    label: t(i)
                }), {
                collection: s,
                defaultOption: n
            }
        },
        checkboxList: function(e) {
            return {
                observe: e,
                getVal: function(e, t, i) {
                    return e.filter(":checked").toArray().map(function(e) {
                        return $(e).attr("value")
                    })
                },
                update: function(e, t, i, n) {
                    var s = t || [];
                    return e.toArray().forEach(function(e) {
                        var t = $(e),
                            i = s.indexOf(t.attr("value")) > -1;
                        return t.attr("checked", i)
                    })
                }
            }
        },
        requireAndEnableIfNot: function(e) {
            return [{
                observe: e,
                name: "required",
                onGet: function(e) {
                    return !e
                }
            }, {
                name: "disabled",
                observe: e
            }]
        },
        initBootstrapSupport: function() {
            return Backbone.Stickit.addHandler({
                    selector: ".btn-group input[type=radio]",
                    update: function(e, t) {
                        if (e.parent(".btn").removeClass("active"),
                            null !== t && "" !== t) {
                            return e.filter("[value=" + t + "]").parent(".btn").addClass("active")
                        }
                    }
                }),
                Backbone.Stickit.addHandler({
                    selector: ".btn-group[data-type=boolean] input[type=radio]",
                    onSet: function(e) {
                        return "true" === e
                    }
                })
        }
    };
    n.initBootstrapSupport(),
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(15),
        a = n(o),
        l = i(86),
        u = n(l),
        d = i(109),
        c = n(d),
        h = {
            getCityFromDataModel: !1,
            cityIDField: "cityID",
            streetIDField: "streetID",
            updateStreet: !0,
            updateHouseNumber: !1
        },
        p = OL.Class(r.default, {
            initialize: function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                this.feature = e,
                    this.attributes = t,
                    r.default.prototype.initialize.apply(this, [i]),
                    this.options = _.defaults(i, h)
            },
            doAction: function() {
                var e = this.model.countries.get(this.attributes.countryID),
                    t = this.model.states.get(this.attributes.stateID),
                    i = void 0;
                if (this.options.getCityFromDataModel)
                    i = this.model.cities.get(this.attributes.cityID);
                else {
                    var n = new u.default(t, e, this.attributes.cityName, this.attributes.emptyCity);
                    this.doSubAction(n),
                        i = n.city
                }
                var s = {};
                if (this.options.updateStreet) {
                    var r = new c.default(this.attributes.streetName, i, this.attributes.emptyStreet);
                    this.doSubAction(r);
                    var o = r.street;
                    s[this.options.streetIDField] = o.getID()
                } else
                    s[this.options.cityIDField] = i.getID();
                return this.options.updateHouseNumber && this.doSubAction(new a.default(this.feature, {
                        houseNumber: this.attributes.houseNumber
                    })),
                    this.doSubAction(new a.default(this.feature, s)), !0
            },
            CLASS_NAME: "Waze.Action.UpdateFeatureAddress"
        });
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(11),
        v = n(m),
        y = i(227),
        b = n(y),
        E = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "mouseenter .ca-geometry .ca-value-old": this._showOldGeometry,
                            "mouseenter .ca-geometry .ca-value-new": this._showNewGeometry,
                            "mouseleave .ca-visual .ca-value": this._destroyDrawingContext
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._map = this.options.map,
                            this._modelViewHelpers = this.options.modelViewHelpers,
                            this._drawingContext = null,
                            this._changedAttributes = this._buildChanges()
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this._destroyDrawingContext()
                    }
                }, {
                    key: "getChangedAttributesNames",
                    value: function() {
                        return this._changedAttributes.map(function(e) {
                            return e.displayName
                        })
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            changedAttributes: this._changedAttributes
                        }
                    }
                }, {
                    key: "_buildChanges",
                    value: function() {
                        return this._buildChangedAttributes()
                    }
                }, {
                    key: "_buildChangedAttributes",
                    value: function() {
                        var e = this,
                            t = this.model.attributes,
                            i = t.objectType,
                            n = t.newValue,
                            s = t.oldValue;
                        return _.unique((0,
                            r.default)(n).concat((0,
                            r.default)(s))).filter(this._blacklistFilter, this).map(function(t) {
                            var r = n[t],
                                o = s[t],
                                a = !0 === e.VISUAL_ATTRIBUTES[t];
                            return {
                                name: t,
                                displayName: e._modelViewHelpers.formatFieldName(i, t),
                                newValue: e._formatValue(t, r),
                                oldValue: e._formatValue(t, o),
                                isVisual: a
                            }
                        })
                    }
                }, {
                    key: "_blacklistFilter",
                    value: function(e) {
                        return !this.BLACKLIST_ATTRIBTUES[e]
                    }
                }, {
                    key: "_formatValue",
                    value: function(e, t) {
                        var i = this.model.attributes.objectType;
                        return W_.isBlank(t) ? null : _.isBoolean(t) ? this._formatBoolean(t) : this._modelViewHelpers.formatFieldValue(i, e, t)
                    }
                }, {
                    key: "_formatBoolean",
                    value: function(e) {
                        return !0 === e ? I18n.t("element_history.boolean_attributes.enabled") : I18n.t("element_history.boolean_attributes.disabled")
                    }
                }, {
                    key: "_destroyDrawingContext",
                    value: function() {
                        null != this._drawingContext && (this._drawingContext.destroy(),
                            this._drawingContext = null)
                    }
                }, {
                    key: "_drawGeometry",
                    value: function(e) {
                        var t = v.default.parse(e);
                        this._getDrawingContext().addFeatures([new OL.Feature.Vector(t.clone())])
                    }
                }, {
                    key: "_showOldGeometry",
                    value: function() {
                        this._drawGeometry(this.model.attributes.oldValue.geometry)
                    }
                }, {
                    key: "_showNewGeometry",
                    value: function() {
                        this._drawGeometry(this.model.attributes.newValue.geometry)
                    }
                }, {
                    key: "_getDrawingContext",
                    value: function() {
                        return null == this._drawingContext && (this._drawingContext = this._map.getDrawingContext(),
                                this._drawingContext.setStyleMap(b.default),
                                this._drawingContext.moveLayerToTop()),
                            this._drawingContext
                    }
                }, {
                    key: "VISUAL_ATTRIBUTES",
                    get: function() {
                        return {
                            geometry: !0
                        }
                    }
                }, {
                    key: "BLACKLIST_ATTRIBTUES",
                    get: function() {
                        return {}
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "ul"
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/tx_object_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = Marionette.Behavior.extend({
            _eventsRegistered: !1,
            initialize: function() {
                return this._registerEvents()
            },
            onBeforeDestroy: function() {
                return this._unregisterEvents()
            },
            _registerEvents: function() {
                if (!this._eventsRegistered) {
                    var e = !0,
                        t = !1,
                        i = void 0;
                    try {
                        for (var n, s = (0,
                                a.default)((0,
                                r.default)(this.view.accelerators)); !(e = (n = s.next()).done); e = !0) {
                            var o = n.value,
                                l = this.view.accelerators[o];
                            W.accelerators.events.register(o, this.view, this.view[l])
                        }
                    } catch (e) {
                        t = !0,
                            i = e
                    } finally {
                        try {
                            !e && s.return && s.return()
                        } finally {
                            if (t)
                                throw i
                        }
                    }
                    this._eventsRegistered = !0
                }
            },
            _unregisterEvents: function() {
                if (this._eventsRegistered) {
                    var e = !0,
                        t = !1,
                        i = void 0;
                    try {
                        for (var n, s = (0,
                                a.default)((0,
                                r.default)(this.view.accelerators)); !(e = (n = s.next()).done); e = !0) {
                            var o = n.value,
                                l = this.view.accelerators[o];
                            W.accelerators.events.unregister(o, this.view, this.view[l])
                        }
                    } catch (e) {
                        t = !0,
                            i = e
                    } finally {
                        try {
                            !e && s.return && s.return()
                        } finally {
                            if (t)
                                throw i
                        }
                    }
                    this._eventsRegistered = !1
                }
            },
            onEditingEnabled: function() {
                return this._registerEvents()
            },
            onEditingDisabled: function() {
                return this._unregisterEvents()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(64),
        r = n(s),
        o = i(18),
        a = n(o),
        l = i(3),
        u = n(l),
        d = i(884),
        c = i(27),
        h = i(74).UNIT,
        p = OpenLayers.Class(c, {
            children: null,
            address: null,
            addressDetails: null,
            attributeToReducer: null,
            attributeNames: ["flags", "fwdFlags", "revFlags", "roadType", "direction", "level", "fwdToll", "revToll", "fwdDirection", "revDirection", "fwdMaxSpeed", "fwdMaxSpeedUnverified", "revMaxSpeed", "revMaxSpeedUnverified", "permissions", "updatedBy", "createdBy", "createdOn", "updatedOn", "length", "allowNoDirection", "rank", "lockRank", "routingRoadType", "hasClosures", "hasHNs"],
            attributeReducers: {
                permissions: d.bitwise.and,
                length: d.sum,
                rank: d.max,
                hasClosures: d.logical.or,
                hasHNs: d.logical.or,
                flags: d.bitwise.or,
                fwdflags: d.bitwise.or,
                revFlags: d.bitwise.or,
                fwdToll: d.logical.or,
                revToll: d.logical.or
            },
            flagAttributeNames: (0,
                u.default)(c.prototype.FLAG_ATTRIBUTES),
            flagAttributeReducers: (0,
                u.default)(c.prototype.FLAG_ATTRIBUTES).reduce(function(e, t) {
                return e[t] = d.logical.and
            }, {}),
            attributeReverses: {
                fwdDirection: "directionReverser",
                revDirection: "directionReverser"
            },
            reversableAttributes: {
                fwdMaxSpeed: "revMaxSpeed",
                revMaxSpeed: "fwdMaxSpeed",
                fwdDirection: "revDirection",
                revDirection: "fwdDirection",
                fwdToll: "revToll",
                revToll: "fwdToll",
                fwdFlags: "revFlags",
                revFlags: "fwdFlags",
                fwdMaxSpeedUnverified: "revMaxSpeedUnverified",
                revMaxSpeedUnverified: "fwdMaxSpeedUnverified"
            },
            UNITS: {
                speed: h.KILOMETER
            },
            initialize: function(e, t, i) {
                this.children = e,
                    this.model = t,
                    this.reverseSegments = i,
                    this.attributeToReducer = _.extend({}, this.attributeReducers, this.flagAttributeReducers),
                    this.calcAttributes()
            },
            directionReverser: function(e, t) {
                return e.isOneWay() ? !e.attributes[t] : e.attributes[t]
            },
            calcAttributes: function() {
                var e, t = this._computeAttributes(this.attributeNames),
                    i = (0,
                        a.default)(t, 2),
                    n = i[0],
                    s = i[1],
                    o = this._computeAttributes(this.flagAttributeNames),
                    l = (0,
                        a.default)(o, 2),
                    u = l[0],
                    d = l[1];
                this.attributes = n,
                    this.flagAttributes = u,
                    this.mixed = _.extend({}, s, d),
                    this.address = null,
                    this.addressDetails = null,
                    this.calcVirtualAttributes(),
                    this.attributes.restrictions = (e = []).concat.apply(e, (0,
                        r.default)(this.children.map(function(e) {
                        return e.getRestrictions()
                    })))
            },
            _computeAttributes: function(e) {
                var t = this,
                    i = {},
                    n = {};
                return e.forEach(function(e) {
                    var s = null,
                        r = t.attributeToReducer[e],
                        o = t.children.map(function(i) {
                            return t._getChildAttribute(i, e)
                        }).unique();
                    1 === o.length ? (s = o.first(),
                            n[e] = !1) : (n[e] = !0,
                            s = r ? o.reduce(r) : o),
                        i[e] = s
                }), [i, n]
            },
            calcVirtualAttributes: function() {
                this.mixed.fwdToll || this.mixed.revToll ? this.mixed.toll = !0 : this.attributes.toll = this.isTollRoad(),
                    this.mixed.fwdDirection || this.mixed.revDirection ? this.mixed.direction = !0 : this.attributes.direction = this._getDirection()
            },
            _getDirection: function() {
                return (this.attributes.fwdDirection ? 1 : 0) + (this.attributes.revDirection ? 2 : 0)
            },
            isTollRoad: function() {
                return this.attributes.fwdToll || this.attributes.revToll
            },
            isTollRoadMixed: function() {
                return Boolean(this.mixed.toll)
            },
            getAddress: function() {
                if (null !== this.address)
                    return this.address;
                var e = void 0,
                    t = this,
                    i = void 0,
                    n = {
                        street: [],
                        city: [],
                        state: [],
                        country: [],
                        altStreets: []
                    };
                return this.mixed.streetIDs = !1,
                    this.children.length > 0 && (i = this.children.first().attributes.streetIDs),
                    this.children.forEach(function(s) {
                        e = s.getAddress(),
                            n.street.push(e.street),
                            n.city.push(e.city),
                            n.state.push(e.state),
                            n.country.push(e.country),
                            t.mixed.streetIDs || (t.mixed.streetIDs = !i.equals(s.attributes.streetIDs)),
                            n.altStreets = n.altStreets.concat(s.attributes.streetIDs)
                    }),
                    n.anyStreet = n.street.some(function(e) {
                        return e && !e.isEmpty
                    }),
                    n.altStreets = n.altStreets.unique(),
                    n.altStreets = n.altStreets.map(function(e) {
                        var i = t.model.streets.get(e);
                        return i ? {
                            street: i,
                            city: t.model.cities.get(i.cityID)
                        } : null
                    }),
                    n.altStreets = n.altStreets.filter(function(e) {
                        return null !== e
                    }), ["street", "city", "state", "country"].forEach(function(e) {
                        n[e] = n[e].uniqueBy(function(e, t) {
                                return e && t ? e.id === t.id : e === t
                            }),
                            1 === n[e].length ? n[e] = n[e].first() : t.mixed[e] = !0
                    }),
                    this.address = n,
                    n
            },
            getAddressDetails: function() {
                if (null !== this.addressDetails)
                    return this.addressDetails;
                var e = {},
                    t = this.getAddress();
                return t.street ? (e.streetName = this.mixed.street ? I18n.t("edit.segment.no_common.street") : this._getStreetName(t),
                    e.cityName = this.mixed.city ? I18n.t("edit.segment.no_common.city") : this._getCityName(t),
                    e.stateName = this.mixed.state ? I18n.t("edit.segment.no_common.state") : this._getStateName(t),
                    e.countryName = this.mixed.country ? I18n.t("edit.segment.no_common.country") : this._getCountryName(t),
                    e.hasState = !!this.mixed.state || this._getHasState(t),
                    this.addressDetails = e,
                    e) : null
            },
            getID: function() {
                return this.children.map(function(e) {
                    return e.getID()
                }).join(", ")
            },
            isHighway: function() {
                return this.children.every(function(e) {
                    return e.isHighway()
                })
            },
            isRoad: function() {
                return this.children.every(function(e) {
                    return e.isRoad()
                })
            },
            isInBigJunction: function() {
                return this.children.some(function(e) {
                    return e.isInBigJunction()
                })
            },
            isInRoundabout: function() {
                return this.children.every(function(e) {
                    return e.isInRoundabout()
                })
            },
            canChangeMaxSpeedUnverified: function(e) {
                var t = this;
                return this.children.some(function(i) {
                    var n = t._getAttributeByDirection(i, e);
                    return i.canChangeMaxSpeedUnverified(n)
                })
            },
            _isReversed: function(e) {
                return Boolean(this.reverseSegments[e.getID()])
            },
            _getChildAttribute: function(e, t) {
                var i = void 0;
                if (i = this.flagAttributeNames.indexOf(t) > -1 ? e.getFlagAttribute(t) : e.attributes[t],
                    this._isReversed(e)) {
                    var n = this.attributeReverses[t],
                        s = this.reversableAttributes[t];
                    n ? i = this[n](e, t) : s && (i = e.attributes[s])
                }
                return i
            },
            _getAttributeByDirection: function(e, t) {
                var i = this.reversableAttributes[t];
                return this._isReversed(e) && i ? i : t
            },
            CLASS_NAME: "Waze.Feature.Vector.CompositeSegment"
        });
    e.exports = p
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(10),
        u = n(l),
        d = i(13),
        c = n(d),
        h = OL.Class(u.default, {
            houseNumberSet: null,
            houseNumber: null,
            attributes: null,
            oldAttributes: null,
            stateChanged: !1,
            changed: !1,
            initialize: function(e, t, i, n) {
                u.default.prototype.initialize.call(this, n),
                    this.houseNumberSet = e,
                    this.houseNumber = t,
                    this.attributes = i,
                    this.oldAttributes = {}
            },
            destroy: function() {
                return this.houseNumberSet = null,
                    this.houseNumber = null,
                    this.attributes = null,
                    this.oldAttributes = null,
                    u.default.prototype.destroy.apply(this, arguments)
            },
            doAction: function() {
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            a.default)((0,
                            r.default)(this.attributes)); !(e = (n = s.next()).done); e = !0) {
                        var o = n.value,
                            l = this.attributes[o];
                        null != this.houseNumber[o] && this.houseNumber[o] !== l && (this.changed = !0,
                            this.oldAttributes[o] = this.houseNumber[o])
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
                return this.changed && OL.Util.extend(this.houseNumber, this.attributes),
                    this.houseNumberSet.state || (this.houseNumberSet.state = OL.State.UPDATE,
                        this.stateChanged = !0),
                    this.model.houseNumbers.changed(this.houseNumberSet),
                    this.changed
            },
            undoAction: function() {
                for (var e in this.oldAttributes)
                    c.default.isUndefined(this.oldAttributes[e]) ? delete this.attributes[e] : this.houseNumber[e] = this.oldAttributes[e];
                return this.stateChanged && (this.houseNumberSet.state = null),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            redoAction: function() {
                return this.houseNumberSet.state = OL.State.UPDATE,
                    OL.Util.extend(this.houseNumber, this.attributes),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            serialize: function() {
                var e = {};
                return OL.Util.extend(e, this.attributes),
                    e.id = this.houseNumber.id,
                    e.segID = this.houseNumberSet.id, {
                        _objectType: this.houseNumberSet.type,
                        action: u.default.TYPE.UPDATE,
                        attributes: e
                    }
            },
            CLASS_NAME: "Waze.Action.UpdateHouseNumber"
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(15),
        a = n(o),
        l = OL.Class(r.default, {
            connectedSegments: null,
            initialize: function(e, t, i, n) {
                return this.bigJunctionID = e,
                    this.segments = t,
                    this.action = i,
                    r.default.prototype.initialize.apply(this, [n])
            },
            doAction: function() {
                var e = this._updateConnectedSegments(this.segments, "from"),
                    t = this._updateConnectedSegments(this.segments, "to");
                this.connectedSegments = e.concat(t)
            },
            _updateConnectedSegments: function(e, t) {
                for (var i = [], n = 0; n < e.length; n++) {
                    var s = e[n],
                        r = s.attributes[t + "NodeID"],
                        o = s.getConnectedSegmentsByDirection(t);
                    i.concat(o);
                    for (var u = 0; u < o.length; u++) {
                        var d = o[u];
                        if (d.isDrivable()) {
                            var c = void 0;
                            c = d.attributes.fromNodeID === r ? "from" : "to";
                            var h = {},
                                p = c + "Crossroads",
                                f = _.clone(d.attributes[p]);
                            l.ADD_JUNCTION_TO_SEGMENT === this.action ? f.push(this.bigJunctionID) : f = _.without(f, this.bigJunctionID),
                                h[p] = f,
                                this.doSubAction(new a.default(d, h, {
                                    dontSerialize: !0
                                }))
                        }
                    }
                }
                return i
            },
            CLASS_NAME: "Waze.Action.UpdateBigJunctionConnectedSegments"
        });
    _.extend(l, {
            ADD_JUNCTION_TO_SEGMENT: "add",
            REMOVE_JUNCTION_FROM_SEGMENT: "remove"
        }),
        t.default = l,
        e.exports = t.default
}, , , , , , , , , , , function(e, t, i) {
    e.exports = {
        default: i(453),
        __esModule: !0
    }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = {
            RASTER_LAYER_NAME: "cities",
            FEATURES_LAYER_NAME: "cities_features",
            MARKERS_LAYER_NAME: "cities_markers",
            GROUP_DISPLAY: "GROUP_DISPLAY",
            GROUP_CITIES: "GROUP_CITIES",
            ITEM_CITY_NAMES: "ITEM_CITY_NAMES"
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = i(6),
        r = OL.Class(n, {
            defaults: {
                id: null,
                countryID: null,
                stateID: null,
                name: null,
                englishName: null,
                geometry: null,
                isEmpty: !1,
                permissions: s.ALL_PERMISSIONS
            },
            nested: {
                geometry: OL.Geometry
            },
            PERMISSIONS: {
                EDIT_PROPERTIES: 1
            },
            isEmpty: function() {
                return !0 === this.attributes.isEmpty
            },
            hasName: function() {
                return "" !== this.attributes.name && null !== this.attributes.name && void 0 !== this.attributes.name
            },
            showMarker: function() {
                return null !== this.attributes.geometry && !this.isEmpty()
            }
        });
    e.exports = r
}, function(e, t, i) {
    var n = i(32);
    e.exports = function(e, t, i, s) {
        try {
            return s ? t(n(i)[0], i[1]) : t(i)
        } catch (t) {
            var r = e.return;
            throw void 0 !== r && n(r.call(e)),
                t
        }
    }
}, function(e, t, i) {
    var n = i(58),
        s = i(22)("iterator"),
        r = Array.prototype;
    e.exports = function(e) {
        return void 0 !== e && (n.Array === e || r[s] === e)
    }
}, function(e, t, i) {
    var n, s, r, o = i(56),
        a = i(478),
        l = i(169),
        u = i(114),
        d = i(25),
        c = d.process,
        h = d.setImmediate,
        p = d.clearImmediate,
        f = d.MessageChannel,
        g = 0,
        m = {},
        v = function() {
            var e = +this;
            if (m.hasOwnProperty(e)) {
                var t = m[e];
                delete m[e],
                    t()
            }
        },
        _ = function(e) {
            v.call(e.data)
        };
    h && p || (h = function(e) {
                for (var t = [], i = 1; arguments.length > i;)
                    t.push(arguments[i++]);
                return m[++g] = function() {
                        a("function" == typeof e ? e : Function(e), t)
                    },
                    n(g),
                    g
            },
            p = function(e) {
                delete m[e]
            },
            "process" == i(71)(c) ? n = function(e) {
                c.nextTick(o(v, e, 1))
            } :
            f ? (s = new f,
                r = s.port2,
                s.port1.onmessage = _,
                n = o(r.postMessage, r, 1)) : d.addEventListener && "function" == typeof postMessage && !d.importScripts ? (n = function(e) {
                    d.postMessage(e + "", "*")
                },
                d.addEventListener("message", _, !1)) : n = "onreadystatechange" in u("script") ? function(e) {
                l.appendChild(u("script")).onreadystatechange = function() {
                    l.removeChild(this),
                        v.call(e)
                }
            } :
            function(e) {
                setTimeout(o(v, e, 1), 0)
            }
        ),
        e.exports = {
            set: h,
            clear: p
        }
}, function(e, t, i) {
    var n = i(22)("iterator"),
        s = !1;
    try {
        var r = [7][n]();
        r.return = function() {
                s = !0
            },
            Array.from(r, function() {
                throw 2
            })
    } catch (e) {}
    e.exports = function(e, t) {
        if (!t && !s)
            return !1;
        var i = !1;
        try {
            var r = [7],
                o = r[n]();
            o.next = function() {
                    return {
                        done: i = !0
                    }
                },
                r[n] = function() {
                    return o
                },
                e(r)
        } catch (e) {}
        return i
    }
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            selected: !1
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(61),
        l = n(a),
        u = i(183),
        d = n(u),
        c = i(184),
        h = n(c),
        p = l.default.prototype.TYPE,
        f = {
            TYPE_TO_CLASS: (s = {},
                (0,
                    o.default)(s, p.DISCONNECTION, l.default),
                (0,
                    o.default)(s, p.TURN, d.default),
                (0,
                    o.default)(s, p.DATA, l.default),
                (0,
                    o.default)(s, p.ROAD_CLOSURE, h.default),
                s),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.problemType])(e, {
                    parse: !0
                })
            }
        };
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(61),
        s = i(23),
        r = OpenLayers.Class(n, {
            initialize: function(e, t) {
                s.prototype.initialize.apply(this, arguments),
                    this.editable = this.attributes.open,
                    this.attributes.reroutePercent = this.reroutePercent(),
                    this.setSeverity(this.attributes.priority)
            },
            reroutePercent: function() {
                return (this.attributes.reroutesCounter / (this.attributes.reroutesCounter + this.attributes.routesCounter) * 100).toFixed(0)
            },
            setSeverity: function(e) {
                var t = "high";
                t = -1 === e ? "low" : this.attributes.reroutePercent >= 90 ? "high" : "medium",
                    this.attributes.severity = t
            },
            CLASS_NAME: "Waze.Feature.Vector.TurnProblem"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(61),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            _location: null,
            nested: {
                geometry: OL.Geometry,
                bounds: OL.Geometry,
                endPoint: OL.Geometry
            },
            initialize: function() {
                s.default.prototype.initialize.apply(this, arguments),
                    this._calcLocation()
            },
            _calcLocation: function() {
                this.hasEndPoint() ? this._location = this._getMiddlePoint() : this._location = this.attributes.geometry
            },
            _getMiddlePoint: function() {
                return this.attributes.geometry.clone().resize(.5, this.attributes.endPoint)
            },
            hasEndPoint: function() {
                return null != this.attributes.endPoint
            },
            getLocation: function() {
                return this._location
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(491),
        l = n(a),
        u = i(493),
        d = n(u),
        c = i(495),
        h = n(c),
        p = i(61).prototype.TYPE,
        f = {
            TYPE_TO_CLASS: (s = {},
                (0,
                    o.default)(s, p.DISCONNECTION, l.default),
                (0,
                    o.default)(s, p.TURN, d.default),
                (0,
                    o.default)(s, p.DATA, h.default),
                s),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.problemType])(e, {
                    parse: !0
                })
            }
        };
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        SPEED_CAMERA: 1
    };
    t.default = {
            FWD: n,
            REV: n,
            FLAGS: {
                TUNNEL: 1,
                BRIDGE: 2,
                PRIVATE: 4,
                FERRY: 8,
                UNPAVED: 16,
                HEADLIGHTS: 32,
                NEARBY_HOV: 128
            }
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        segment: null,
        node: null,
        isForward: !0,
        initialize: function(e, t) {
            this.segment = e,
                this.node = t,
                this.segment.attributes.fromNodeID === this.node.getID() && (this.isForward = !1)
        },
        getConnectedGraphNodes: function() {
            var e = this;
            return W.model.segments.getByIds(this.node.attributes.segIDs).filter(function(t) {
                return e.segment.isTurnAllowed(t, e.node) && e.node.isTurnAllowedBySegDirections(e.segment, t)
            }).map(function(t) {
                return n.oppositeOf(t, e.node)
            })
        },
        getOpposite: function() {
            return n.forSegmentInDirection(this.segment, !this.isForward)
        },
        hasRestrictions: function() {
            return (this.isForward ? this.segment.getForwardRestrictions() : this.segment.getReverseRestrictions()).length > 0
        },
        hasRestrictionsToSegment: function(e) {
            return this.segment.model.getTurnGraph().getTurnThroughNode(this.node, this.segment, e).getTurnData().getRestrictions().length > 0
        },
        toString: function() {
            return this.getID()
        },
        getID: function() {
            return "segment: " + this.segment.getID() + ", node: " + this.node.getID() + ", isForward: " + this.isForward
        }
    });
    n.for = function(e, t) {
            return new n(e, t)
        },
        n.oppositeOf = function(e, t) {
            return n.for(e, t).getOpposite()
        },
        n.forSegmentInDirection = function(e, t) {
            var i = void 0;
            i = t ? e.attributes.toNodeID : e.attributes.fromNodeID;
            var s = W.model.nodes.get(i);
            return new n(e, s)
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(48),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Model.extend({
            defaults: {
                uuid: null,
                name: null,
                url: null,
                location: null
            },
            initialize: function() {
                if (null === this.get("uuid"))
                    return this.set({
                        uuid: this.id
                    })
            },
            getDetails: function() {
                var e = this,
                    t = this.get("name");
                return null != t ? s.default.resolve({
                    name: t,
                    location: this.get("location"),
                    url: this.get("url")
                }) : this._getDetailsFromUuid(this.get("uuid")).then(function(t) {
                    var i = {
                        name: t.name,
                        location: t.location,
                        url: t.url
                    };
                    return e.set(i),
                        i
                }).catch(function() {
                    return e.set({
                            name: e.get("uuid")
                        }),
                        s.default.resolve({
                            name: e.get("uuid"),
                            location: "",
                            url: ""
                        })
                })
            },
            _getDetailsFromUuid: function(e) {
                return s.default.resolve($.get(W.Config.places_api.url.details, {
                    placeid: e,
                    key: W.Config.places_api.key
                })).then(function(e) {
                    return "OK" === e.status ? {
                        location: e.result.geometry.location,
                        name: e.result.name + ", " + e.result.formatted_address,
                        url: e.result.url
                    } : s.default.reject(new Error("failed getting provider details"))
                })
            },
            toJSON: function() {
                return this.get("uuid")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = Backbone.Model.extend({
            GEOMETRY_FIELDS: {
                entryExitPoints: !0,
                geometry: !0
            },
            CHANGE_TYPE: {
                ADDED: "ADDED",
                REMOVED: "REMOVED",
                UNCHANGED: "UNCHANGED"
            },
            EXTERNAL_PROVIDER_FIELD_NAME: "externalProviderIDs",
            initialize: function(e, t) {
                e = {},
                    this.__setSuggestedValue(e);
                var n = i(77),
                    s = new n(e, {
                        parse: !!t && t.parse
                    });
                return s.model = W.model,
                    this.set({
                        suggestedVenue: s
                    })
            },
            __setSuggestedValue: function(e) {
                e[this.get("fieldName")] = this.get("suggestedValue")
            },
            isExternalProvider: function() {
                return this.attributes && this.attributes.fieldName === this.EXTERNAL_PROVIDER_FIELD_NAME
            },
            isGeometry: function() {
                return !0 === this.GEOMETRY_FIELDS[this.get("fieldName")]
            },
            _getChangeList: function(e, t) {
                var i = this,
                    n = _.intersection(e, t),
                    s = _.difference(e, t),
                    r = _.difference(t, e);
                n = n.map(function(e) {
                        return {
                            name: e,
                            changeType: i.CHANGE_TYPE.UNCHANGED
                        }
                    }),
                    s = s.map(function(e) {
                        return {
                            name: e,
                            changeType: i.CHANGE_TYPE.REMOVED
                        }
                    }),
                    r = r.map(function(e) {
                        return {
                            name: e,
                            changeType: i.CHANGE_TYPE.ADDED
                        }
                    });
                var o = n.concat(r, s);
                return _.sortBy(o, "name")
            }
        });
    l.build = function(e, t) {
            var i = [],
                n = !0,
                s = !1,
                o = void 0;
            try {
                for (var u, d = (0,
                        a.default)((0,
                        r.default)(e)); !(n = (u = d.next()).done); n = !0) {
                    var c = u.value,
                        h = e[c];
                    _.isEqual(h, t.attributes[c]) || i.push(new l({
                        fieldName: c,
                        suggestedValue: h,
                        venue: t
                    }, {
                        parse: !0
                    }))
                }
            } catch (e) {
                s = !0,
                    o = e
            } finally {
                try {
                    !n && d.return && d.return()
                } finally {
                    if (s)
                        throw o
                }
            }
            return i
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(189),
        u = n(l),
        d = u.default.extend({
            __setSuggestedValue: function(e) {
                e.categoryAttributes = {
                        PARKING_LOT: {}
                    },
                    e.categoryAttributes.PARKING_LOT[this.get("fieldName")] = this.get("suggestedValue")
            }
        });
    d.build = function(e, t) {
            var i = [],
                n = !0,
                s = !1,
                o = void 0;
            try {
                for (var l, u = (0,
                        a.default)((0,
                        r.default)(e)); !(n = (l = u.next()).done); n = !0) {
                    var c = l.value,
                        h = e[c],
                        p = void 0;
                    t.attributes.categoryAttributes && t.attributes.categoryAttributes.PARKING_LOT && (p = t.attributes.categoryAttributes.PARKING_LOT[c]),
                        _.isEqual(h, p) || i.push(new d({
                            fieldName: c,
                            suggestedValue: h,
                            venue: t
                        }, {
                            parse: !0
                        }))
                }
            } catch (e) {
                s = !0,
                    o = e
            } finally {
                try {
                    !n && u.return && u.return()
                } finally {
                    if (s)
                        throw o
                }
            }
            return i
        },
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(23),
        s = OpenLayers.Class(n, {
            nested: {
                geometry: OL.Geometry,
                bounds: OL.Geometry
            },
            ONE_WEEK_IN_MILLIS: 6048e5,
            SeverityThreshold: {
                low: 4,
                medium: 14
            },
            editable: !0,
            initialize: function(e) {
                n.prototype.initialize.apply(this, arguments),
                    this.editable = this.attributes.open,
                    this.attributes.typeText = this.getTypeText(),
                    this.setSeverity()
            },
            merge: function(e) {
                n.prototype.merge.apply(this, arguments),
                    this.editable = this.attributes.open
            },
            getRequestBounds: function() {
                return this.requestBounds || (this.requestBounds = this.attributes.bounds),
                    this.requestBounds
            },
            Type: {
                INCORRECT_TURN: 6,
                INCORRECT_ADDRESS: 7,
                INCORRECT_ROUTE: 8,
                INCORRECT_MISSING_ROUNDABOUT: 9,
                INCORRECT_GENERAL_ERROR: 10,
                TURN_NOT_ALLOWED: 11,
                INCORRECT_JUNCTION: 12,
                MISSING_BRIDGE_OVERPASS: 13,
                WRONG_DRIVING_DIRECTIONS: 14,
                MISSING_EXIT: 15,
                MISSING_ROAD: 16
            },
            getTypeText: function() {
                return I18n.t("update_requests.types." + this.attributes.type)
            },
            setSeverity: function() {
                var e = new window.TimeSpan(Date.now() - this.attributes.driveDate),
                    t = e.days,
                    i = "high";
                t <= this.SeverityThreshold.low ? i = "low" : t <= this.SeverityThreshold.medium && (i = "medium"),
                    this.attributes.severity = i
            },
            isRecentlyClosed: function() {
                return !this.attributes.open && Date.now() - this.attributes.resolvedOn <= this.ONE_WEEK_IN_MILLIS
            },
            getLocation: function() {
                return this.attributes.geometry
            },
            canEdit: function() {
                return this.isAllowed(this.PERMISSIONS.EDIT)
            },
            PERMISSIONS: {
                EDIT: 1,
                FORCE_CLOSE: 2
            },
            CLASS_NAME: "Waze.Feature.Vector.UpdateRequest"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            nested: {
                geometry: OL.Geometry,
                fractionPoint: OL.Geometry
            },
            isLeft: !1,
            projectionLonLat: null,
            closestSegment: null,
            calculateProjection: function(e) {
                var t = new OL.Geometry.Point(this.geometry.x, this.geometry.y),
                    i = e.distanceTo(t, {
                        details: !0
                    }),
                    n = i.line,
                    s = {
                        x: n.x1,
                        y: n.y1
                    },
                    r = {
                        x: n.x2,
                        y: n.y2
                    };
                if (r.y > s.y) {
                    var o = [r, s];
                    s = o[0],
                        r = o[1]
                }
                this.isLeft = (r.x - s.x) * (t.y - s.y) - (r.y - s.y) * (t.x - s.x) <= 0,
                    this.projectionLonLat = new OL.LonLat(i.x0, i.y0),
                    this.closestSegment = i.model
            },
            getFractionFromProjection: function() {
                return new OL.Geometry.Point(this.projectionLonLat.lon, this.projectionLonLat.lat)
            },
            changedSegment: function() {
                return this.parent.id !== this.closestSegment.getID()
            },
            clone: function() {
                var e = new r({
                    fractionPoint: this.fractionPoint.clone(),
                    projectionLonLat: this.projectionLonLat ? this.projectionLonLat.clone() : null,
                    number: this.number,
                    valid: this.valid,
                    forced: this.forced,
                    id: this.id,
                    side: this.side,
                    version: this.version,
                    geometry: this.geometry.clone()
                });
                return e.parent = this.parent,
                    e
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            nested: {
                geometry: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(23),
        r = n(s),
        o = i(195),
        a = n(o),
        l = {
            INVALID_ENV: "INVALID_ENV",
            GENERAL: "GENERAL",
            TEMP_FREEZE: "TEMP_FREEZE"
        },
        u = OL.Class(r.default, {
            nested: {
                geometry: OL.Geometry
            },
            parse: function(e) {
                return null != e.env && (e.env = a.default.normalizeCode(e.env)),
                    r.default.prototype.parse.apply(this, arguments)
            }
        });
    u.TYPE = l,
        t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(13),
        p = n(h),
        f = function() {
            function e(t) {
                if ((0,
                        u.default)(this, e),
                    this.events = new OL.Events,
                    t) {
                    var i = !0,
                        n = !1,
                        s = void 0;
                    try {
                        for (var o, l = (0,
                                a.default)((0,
                                r.default)(t)); !(i = (o = l.next()).done); i = !0) {
                            var d = o.value,
                                c = t[d];
                            this[d] = c
                        }
                    } catch (e) {
                        n = !0,
                            s = e
                    } finally {
                        try {
                            !i && l.return && l.return()
                        } finally {
                            if (n)
                                throw s
                        }
                    }
                }
                this.Codes.contains(this.code) || (this.code = null),
                    this.code || (this.code = this.abbrToLocation[this.abbr],
                        this.code || (this.code = "row")),
                    this.locale || (this.locale = W.Config.default_locale),
                    this.Locales[this.locale] && (this.locale = this.Locales[this.locale])
            }
            return (0,
                    c.default)(e, [{
                    key: "persist",
                    value: function() {
                        return p.default.localStorage.set(this.storeKey, {
                            code: this.code,
                            locale: this.locale
                        })
                    }
                }, {
                    key: "change",
                    value: function(e) {
                        if (e !== this.code)
                            return this.code = e,
                                this.persist(),
                                this.events.triggerEvent("change")
                    }
                }, {
                    key: "changeAndRemovePermalink",
                    value: function(e) {
                        this.change(e),
                            window.location = window.location.pathname
                    }
                }, {
                    key: "setLocale",
                    value: function(e) {
                        if (e !== this.locale)
                            return this.locale = e,
                                this.persist()
                    }
                }, {
                    key: "redirectToLocale",
                    value: function() {
                        if (this._shouldRedirectToLocle()) {
                            var e = void 0;
                            e = this.locale === W.Config.default_locale ? "/editor" + window.location.search : "/" + this.locale + "/editor" + window.location.search,
                                window.location = e
                        }
                    }
                }, {
                    key: "_shouldRedirectToLocle",
                    value: function() {
                        return this.locale !== I18n.locale && _.contains(I18n.availableLocales, this.locale)
                    }
                }], [{
                    key: "getFromIP",
                    value: function() {
                        if (null != this._promise)
                            return this._promise;
                        var t = $.Deferred();
                        return $.get("/WAS/country_by_ip").done(function(i) {
                                var n = new e(i);
                                return n.persist(),
                                    t.resolve(n)
                            }).error(function() {
                                var i = new e;
                                return i.persist(),
                                    t.resolve(i)
                            }),
                            this._promise = t.promise(),
                            this._promise
                    }
                }, {
                    key: "getCurrent",
                    value: function() {
                        return this.restore() || this.getFromIP()
                    }
                }, {
                    key: "restore",
                    value: function() {
                        var t = p.default.localStorage.get(this.prototype.storeKey);
                        return t ? new e(t) : null
                    }
                }, {
                    key: "normalizeCode",
                    value: function(e) {
                        return e = e.toLowerCase(),
                            "na" === e && (e = "usa"),
                            e
                    }
                }]),
                e
        }();
    f.prototype.storeKey = "editorLocation",
        f.prototype.abbrToLocation = {
            US: "usa",
            CA: "usa",
            IL: "il"
        },
        f.prototype.Codes = ["row", "usa", "il"],
        f.prototype.Locales = {
            iw: "he",
            ji: "yi",
            in: "id",
            "en-UK": "en-GB"
        },
        t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(99),
        g = n(f),
        m = function(e) {
            function t(e, i, n) {
                (0,
                    a.default)(this, t);
                var s = (0,
                    c.default)(this, (t.__proto__ || (0,
                    r.default)(t)).call(this, e, n));
                return s._children = i,
                    s
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getId",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "getChildren",
                    value: function() {
                        return this._children
                    }
                }, {
                    key: "appendChild",
                    value: function(e) {
                        this.getChildren().push(e)
                    }
                }, {
                    key: "isLeaf",
                    value: function() {
                        return !1
                    }
                }], [{
                    key: "of",
                    value: function(e, i, n) {
                        return new t(e, i, n)
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            stroke: !1,
            pointRadius: 12,
            fillColor: "white",
            fillOpacity: .6,
            graphicZIndex: 0,
            fontSize: 16,
            labelYOffset: 0,
            fontColor: "#3d3d3d",
            labelOutlineWidth: 0,
            fontFamily: "FontAwesome",
            label: ""
        },
        s = W.rule("dragPoint", !0, n),
        r = W.rule("dragPoint", !0, _.defaults({
            fillColor: "#25d7fd",
            fillOpacity: .3
        }, n));
    t.DragPointRule = s,
        t.DragPointHighlightRule = r
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(524),
        r = n(s),
        o = i(100),
        a = n(o),
        l = i(137),
        u = n(l),
        d = Marionette.CompositeView.extend({
            childView: r.default,
            className: "conversation-view",
            childViewContainer: ".comment-list",
            template: "Waze/Modules/Conversation/templates/list",
            behaviors: {
                charCount: {
                    behaviorClass: u.default,
                    charLimits: [{
                        inputSelector: ".new-comment-text",
                        charCountSelector: ".new-comment-max-length",
                        maxLength: a.default.prototype.MAX_BODY_LENGTH,
                        modelAttribute: "viewModel",
                        observe: "commentText"
                    }]
                }
            },
            bindings: {
                "[name=follow]": {
                    observe: "following",
                    attributes: [{
                        observe: "disableFollowing",
                        name: "disabled"
                    }]
                },
                ".no-comments": {
                    observe: "commentCount",
                    visible: !0,
                    onGet: function(e) {
                        return 0 === e
                    }
                },
                ".new-comment-text": {
                    observe: "commentText",
                    attributes: [{
                        observe: "submitting",
                        name: "disabled"
                    }]
                },
                ".send-button": {
                    attributes: [{
                        observe: "submitting",
                        name: "disabled"
                    }]
                }
            },
            ui: {
                commentList: ".comment-list"
            },
            events: {
                "submit .new-comment-form": "_onSubmit"
            },
            initialize: function() {
                return this.commentable = this.options.commentable,
                    this.collection = this.commentable.getComments(),
                    this.viewModel = new Backbone.Model({
                        following: this.commentable.isFollowing(),
                        commentCount: this.collection.length,
                        commentText: "",
                        disableFollowing: !1,
                        submitting: !1
                    }),
                    this.listenTo(this.viewModel, "change:following", this._onFollowingChanged),
                    this.listenTo(this.collection, "add", this._updateCommentCount)
            },
            _updateCommentCount: function() {
                return this.viewModel.set({
                    commentCount: this.collection.length
                })
            },
            onRender: function() {
                return this.stickit(this.viewModel),
                    this._scrollToLastComment()
            },
            _onFollowingChanged: function(e, t, i) {
                var n = this;
                if (i.stickitChange)
                    return this.viewModel.set({
                            disableFollowing: !0
                        }),
                        this.commentable.setFollowing(t).error(function() {
                            return n.viewModel.set({
                                following: !t
                            })
                        }).always(function() {
                            return n.viewModel.set({
                                disableFollowing: !1
                            })
                        })
            },
            _onSubmit: function(e) {
                var t = this;
                e.preventDefault();
                var i = this.viewModel.get("commentText").trim();
                if (!(i.length <= 0))
                    return this.viewModel.set({
                            submitting: !0
                        }),
                        this.commentable.addComment(i).done(function(e) {
                            return t.viewModel.set({
                                    commentText: ""
                                }),
                                t.collection.add(e),
                                t.viewModel.set({
                                    following: t.commentable.isFollowing()
                                }),
                                t._scrollToLastComment()
                        }).fail(function() {
                            return window.alert(I18n.t("conversation.send_error"))
                        }).always(function() {
                            return t.viewModel.set({
                                submitting: !1
                            })
                        })
            },
            _scrollToLastComment: function() {
                var e = this.ui.commentList.get(0);
                e.scrollTop = e.scrollHeight
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            TYPE: {
                MANAGED: "managed",
                DRIVE: "drive"
            },
            nested: {
                geometry: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(34),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            ErrorMessages: {
                406: I18n.t("login.form.error")
            },
            template: "login/login-form",
            events: {
                "submit form": "_onSubmit"
            },
            ui: {
                form: "form",
                loading: ".loading",
                errorMessage: ".error-message",
                username: ".username"
            },
            render: function() {
                var e = s.default.prototype.render.apply(this, arguments);
                return this.reset(),
                    e
            },
            reset: function() {
                return this.ui.errorMessage.hide(),
                    this.ui.loading.hide(),
                    this.ui.username.focus()
            },
            _onSubmit: function() {
                var e = this;
                this.ui.loading.show(),
                    this.ui.errorMessage.hide();
                var t = this.ui.username.val(),
                    i = this.ui.form.find(".password").val();
                return W.loginManager.login(t, i).fail(function(t) {
                        return e.ui.errorMessage.text(e.ErrorMessages[t.status] || I18n.t("login.form.server_error")).show()
                    }).always(function() {
                        return e.ui.loading.hide()
                    }),
                    W.Report.loginAction("login_tap"), !1
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        DEFAULT: 0,
        MTE: 1
    };
    n.isValid = function(e) {
            return _.values(n).indexOf(e) >= 0
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {};
    n.prototype = {
            _getEvents: function() {
                return this._events || (this._events = new OpenLayers.Events(this))
            },
            on: function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                return this._getEvents().register(e, i, t)
            },
            off: function(e, t, i) {
                this._events && this._events.unregister(e, i, t)
            },
            trigger: function() {
                var e = this._getEvents();
                return e.triggerEvent.apply(e, arguments)
            }
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(125),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Model.extend({
            defaults: {
                ignorable: !1,
                code: 700,
                description: null,
                geometry: null
            },
            nested: {
                geometry: OL.Geometry
            }
        });
    _.extend(r.prototype, s.default),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(55),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(139),
        o = i(13),
        a = i(11),
        l = OpenLayers.Class(r, {
            root: null,
            currentContainer: null,
            previousContainer: null,
            problemUpdates: null,
            processedProblems: !1,
            traversalOrder: {
                _default: r.Order.PRE,
                "Waze.Action.DeleteNode": r.Order.POST,
                "Waze.Action.DeleteSegment": r.Order.POST,
                "Waze.Action.AddLandmark": r.Order.POST
            },
            initialize: function() {
                this.currentContainer = {},
                    this.currentContainer._subActions = [],
                    this.problemUpdates = {},
                    this.root = this.currentContainer,
                    this.previousContainers = []
            },
            _default: function(e) {
                this.addAction(e)
            },
            beforeEnter: function(e) {
                if (!e.dontSerialize) {
                    var t = {};
                    this.previousContainers.push(this.currentContainer),
                        this.currentContainer._subActions.push(t),
                        this.currentContainer = t,
                        t.name = e.CLASS_NAME.split(".").last(),
                        t._subActions = []
                }
                return !e.dontSerialize
            },
            afterLeave: function(e) {
                e.dontSerialize || (this.currentContainer = this.previousContainers.pop())
            },
            getTraversalOrder: function(e) {
                var t = this.traversalOrder[e.CLASS_NAME];
                return o.defined(t) || (t = this.traversalOrder._default),
                    t
            },
            addAction: function(e) {
                var t = void 0;
                e.dontSerialize || (t = e.serialize(),
                    null !== (t = o.deepClone(t)) && (t instanceof Array ? (t = this.serializeGeometries(t),
                        this.currentContainer._subActions = this.currentContainer._subActions.concat(t)) : (t = this.serializeGeometries(t),
                        this.currentContainer._subActions.push(t))))
            },
            serializeGeometries: function(e) {
                if ("object" === (void 0 === e ? "undefined" : (0,
                        s.default)(e)) && null !== e) {
                    if (Array.isArray(e)) {
                        for (var t = 0; t < e.length; t++)
                            e[t] = this.serializeGeometries(e[t]);
                        return e
                    }
                    if (e instanceof OL.Geometry)
                        return e = a.unproject(e),
                            a.toGeoJSON(e);
                    for (var i in e)
                        e.hasOwnProperty(i) && (e[i] = this.serializeGeometries(e[i]));
                    return e
                }
                return e
            },
            getResult: function() {
                return this.root._subActions[0]
            },
            CLASS_NAME: "Waze.Action.Visitor.TreeSerializor"
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(47),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(60),
        u = i(680),
        d = i(681),
        c = i(682),
        h = i(683),
        p = i(684),
        f = i(206),
        g = i(4),
        m = i(40),
        v = i(141),
        y = i(142),
        b = i(63),
        E = i(26),
        w = i(208),
        S = i(210),
        M = void 0,
        C = OpenLayers.Class({
            events: null,
            actionManager: null,
            segments: null,
            nodes: null,
            users: null,
            streets: null,
            cities: null,
            states: null,
            countries: null,
            problems: null,
            mapUpdateRequests: null,
            venues: null,
            junctions: null,
            bigJunctions: null,
            crossroads: null,
            repos: null,
            distanceCache: null,
            isImperial: !1,
            isLeftHand: !1,
            _restrictionSubscriptions: {},
            lastTransactionID: null,
            addRepository: function(e, t, i, n) {
                if (this.repos[e])
                    throw new Error("Cannot add repository " + e + " to DataModel, the provided repository name already exists.");
                n || (n = l),
                    i = i || {},
                    i.model = this,
                    i.name = e;
                var s = new n(t, i);
                this.repos[e] = this[e] = this.reposByObjectType[t] = s
            },
            initialize: function(e) {
                var t = this,
                    i = new OpenLayers.Projection("EPSG:900913");
                OpenLayers.Util.extend(this, e),
                    this.events = new OpenLayers.Events(this),
                    this.actionManager = new f(this),
                    this.distanceCache = new M(new OpenLayers.Projection("EPSG:900913")),
                    this.repos = {},
                    this.reposByObjectType = {},
                    this.addRepository("segments", g.SEGMENT, {}, c),
                    this.addRepository("nodes", g.NODE, {
                        onDemand: !1
                    }),
                    this.addRepository("users", g.USER, {
                        onDemand: !1,
                        useVersions: !1
                    }),
                    this.addRepository("streets", g.STREET, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("countries", g.COUNTRY, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("states", g.STATE, {
                        onDemand: !1,
                        storePersistentSeparately: !0
                    }),
                    this.addRepository("junctions", g.JUNCTION, {
                        onDemand: !1
                    }),
                    this.addRepository("bigJunctions", g.BIG_JUNCTION, {
                        active: W.Config.big_junctions.shownByDefault && W.Config.big_junctions.enable,
                        minZoom: W.Config.big_junctions.minDisplayZoom
                    }),
                    this.addRepository("problems", g.MAP_PROBLEM, {
                        filter: new u("problemFilter", ["ALL", "PARKING"], {
                            OPEN: 0,
                            CLOSED: 1
                        })
                    }),
                    this.addRepository("mapUpdateRequests", g.UPDATE_REQUEST, {
                        filter: new u("mapUpdateRequestFilter", ["ALL", "PARKING"], {
                            OPEN: 0,
                            CLOSED: 1
                        })
                    }),
                    this.addRepository("roadClosures", g.ROAD_CLOSURE, {
                        minZoom: Waze.Config.closures.minDisplayZoom,
                        active: Waze.Config.closures.shownByDefault
                    }),
                    this.addRepository("venues", g.VENUE, {
                        filter: new u("venueFilter", ["ALL", "RESIDENTIAL", "PARKING"], {
                            SHOW: 0,
                            UPDATE_REQUEST: 1
                        })
                    }, h),
                    this.addRepository("cameras", g.SPEED_CAMERA, {
                        minZoom: Waze.Config.cameras.minDisplayZoom,
                        active: Waze.Config.cameras.shownByDefault
                    }),
                    this.addRepository("userAreas", g.USER_AREA, {
                        minZoom: Waze.Config.editable_areas.minDisplayZoom
                    }),
                    this.addRepository("problemDetails", g.PROBLEM_DETAILS, {
                        url: Waze.Config.paths.problemDetails,
                        localProjection: i,
                        onDemand: !1
                    }, d),
                    this.addRepository("houseNumbers", g.HOUSE_NUMBER, {
                        url: Waze.Config.paths.houseNumbers,
                        localProjection: i,
                        onDemand: !1
                    }, d),
                    this.addRepository("updateRequestSessions", g.UPDATE_REQUEST_SESSION, {
                        url: Waze.Config.paths.updateRequestSessions,
                        localProjection: i,
                        onDemand: !1
                    }, d),
                    this.addRepository("archives", g.ARCHIVE_SESSION, {
                        url: Waze.Config.paths.archive,
                        onDemand: !1
                    }, d),
                    this.addRepository("archiveSessions", g.ARCHIVE_SESSION_DATA, {
                        url: Waze.Config.paths.archiveSessions,
                        onDemand: !1,
                        localProjection: i
                    }, d),
                    this.addRepository("managedAreas", "managedArea"),
                    this.addRepository("majorTrafficEvents", g.MTE),
                    this.addRepository("restrictedAreas", g.RESTRICTED_AREA, {}, p),
                    E.getRepositories().forEach(function(e) {
                        t.addRepository(e.repositoryName, e.featureType, e.repositoryConfig, e.repositoryClass)
                    }),
                    this._roadGraph = new S(this.nodes, this.segments),
                    this._turnGraph = new w(this._roadGraph),
                    W.prefs.on("change:isImperial", function(e, t) {
                        null !== t && (this.isImperial = t)
                    }, this),
                    this.isImperial = W.prefs.get("isImperial")
            },
            getTurnGraph: function() {
                return this._turnGraph
            },
            getRoadGraph: function() {
                return this._roadGraph
            },
            clear: function(e) {
                for (var t in this)
                    this[t] instanceof l && this[t].clear(e);
                this._turnGraph.clear()
            },
            getRepository: function(e) {
                return e && this.reposByObjectType[e] || null
            },
            mergeObjects: function(e, t, i) {
                var n = this,
                    s = t.segments,
                    r = t.connections;
                s || (i = !0),
                    this.events.triggerEvent("mergestart"),
                    _.without((0,
                        a.default)(t), "segments", "connections").forEach(function(s) {
                        var r = n[s],
                            o = t[s];
                        r && (i && !r.onDemand || r.clear({
                                keepUnsaved: !0,
                                keepSelected: !0
                            }),
                            r.mergeObjects(o, null, e, n.scale, t))
                    }),
                    s && (this.segments.clear({
                            keepUnsaved: !0,
                            keepSelected: !0
                        }),
                        this.segments.mergeObjects(s, null, e, this.scale, t),
                        r && (this._turnGraph.clear(),
                            this._turnGraph.fromDescartes(r))),
                    this.setMeasurementSystem(),
                    this.setDrivingDirection(),
                    this.setRestrictionSubscriptions(),
                    this.setTopCountry(t),
                    this.events.triggerEvent("mergeend")
            },
            putPersistent: function(e) {
                var t = this;
                (0,
                    a.default)(e).forEach(function(i) {
                    var n = t[i];
                    void 0 !== n && e[i].objects.forEach(function(e) {
                        e.setPersistent(!0),
                            n.put(e)
                    })
                })
            },
            setTopCountry: function(e) {
                var t = e.countries,
                    i = e.states;
                t && t.mainObjectID ? (this.countries.top = this.countries.objects[t.mainObjectID],
                    i && (this.states.top = this.states.objects[i.mainObjectID])) : (this.countries.top = null,
                    this.states.top = null)
            },
            setMeasurementSystem: function() {
                var e = W.prefs.get("isImperial");
                if (null !== e)
                    this.isImperial = e;
                else {
                    var t = (0,
                            r.default)(this.countries.objects),
                        i = null;
                    t.isEmpty() || (i = t.first(),
                        W.prefs.set("isImperial", 234 === i.id || 235 === i.id))
                }
            },
            setDrivingDirection: function() {
                var e = (0,
                    r.default)(this.countries.objects);
                this.isLeftHand = !1,
                    e.isEmpty() || (this.isLeftHand = Boolean(e.first().leftHandTraffic))
            },
            setRestrictionSubscriptions: function() {
                this._restrictionSubscriptions = {};
                var e = (0,
                        r.default)(this.countries.objects),
                    t = e[0];
                null != t && null != t.restrictionSubscriptions && (this._restrictionSubscriptions = t.restrictionSubscriptions)
            },
            getRestrictionSubscriptions: function() {
                return this._restrictionSubscriptions
            },
            deleteSegments: function(e) {
                if (1 === e.length)
                    this.actionManager.add(new m(e[0]));
                else if (e.length > 1) {
                    for (var t = [], i = 0, n = e.length; i < n; i++)
                        t.push(new m(e[i]));
                    this.actionManager.add(new b(t))
                }
            },
            deleteObjects: function(e) {
                if (1 === e.length)
                    this.actionManager.add(new v(e[0]));
                else if (e.length > 1) {
                    for (var t = [], i = 0, n = e.length; i < n; i++)
                        t.push(new v(e[i]));
                    this.actionManager.add(new b(t))
                }
            },
            deleteNodes: function(e) {
                if (1 === e.length)
                    this.actionManager.add(new y(null, e[0]));
                else if (e.length > 1) {
                    for (var t = [], i = 0, n = e.length; i < n; i++)
                        t.push(new y(null, e[i]));
                    this.actionManager.add(new b(t))
                }
            },
            getModifiedObjects: function() {
                var e = {
                    segments: this.segments.getModifiedObjects(),
                    nodes: this.nodes.getModifiedObjects(),
                    cities: this.cities.getModifiedObjects(),
                    streets: this.streets.getModifiedObjects(),
                    venues: this.venues.getModifiedObjects(),
                    bigJunctions: this.bigJunctions.getModifiedObjects(),
                    majorTrafficEvents: this.majorTrafficEvents.getModifiedObjects()
                };
                return this.mapComments && (e.mapComments = this.mapComments.getModifiedObjects()),
                    e
            },
            hasModifiedObjects: function() {
                return (0,
                    r.default)(this.repos).some(function(e) {
                    return e.hasModifiedObjects()
                })
            },
            getChangesExtent: function() {
                var e = new OpenLayers.Bounds;
                return [this.segments, this.nodes].forEach(function(t) {
                        (0,
                            r.default)(t.getModifiedObjects()).forEach(function(t) {
                            t.forEach(function(t) {
                                e.extend(t.geometry.bounds)
                            })
                        })
                    }),
                    e
            },
            hasStates: function() {
                var e = this.states.getObjectArray();
                return 1 !== e.length || !e.first().isDefault
            },
            setLastTransactionID: function(e) {
                this.lastTransactionID = e,
                    this.events.triggerEvent("change:lastTransactionID", {
                        id: this.lastTransactionID
                    })
            },
            toGraphJSON: function() {
                return {
                    nodes: this._roadGraph.toJSON(),
                    turns: this._turnGraph.toJSON()
                }
            },
            fromGraphJSON: function(e) {
                this._roadGraph.fromJSON(e.nodes),
                    this._turnGraph.fromJSON(e.turns)
            },
            CLASS_NAME: "Waze.DataModel"
        });
    M = OpenLayers.Class({
            precision: 1,
            distanceInMeters: 1,
            currentDistance: null,
            currentLat: null,
            projection: null,
            inputProjection: null,
            initialize: function(e, t) {
                OpenLayers.Util.extend(this, t),
                    this.projection = new OpenLayers.Projection("EPSG:4326"),
                    this.inputProjection = e
            },
            getValue: function(e, t) {
                var i = e.clone();
                return i.transform(this.inputProjection, this.projection), !t && this.isPointInCacheRange(i) || this.calculateLat(e, i),
                    this.currentDistance
            },
            isPointInCacheRange: function(e) {
                return null !== this.currentDistance && Math.abs(e.y - this.currentLat) < this.precision
            },
            calculateLat: function(e, t) {
                this.currentLat = t.y;
                var i = OpenLayers.Util.destinationVincenty({
                        lon: t.x,
                        lat: t.y
                    }, 90, this.distanceInMeters),
                    n = new OpenLayers.Geometry.Point(i.lon, i.lat);
                n.transform(this.projection, this.inputProjection),
                    this.currentDistance = Math.abs(n.x - e.x)
            },
            CLASS_NAME: "Waze.DataModel.DistanceCache"
        }),
        e.exports = C
}, function(e, t, i) {
    "use strict";
    var n = i(13),
        s = i(9),
        r = OpenLayers.Class({
            actions: null,
            index: -1,
            model: null,
            events: null,
            _savingEnabled: !0,
            initialize: function(e, t) {
                OpenLayers.Util.extend(this, t),
                    this.model = e,
                    this.actions = [],
                    this.events = new OpenLayers.Events(this)
            },
            add: function(e) {
                if ((e.undoSupported() || !1 !== this.events.triggerEvent("beforeclearactions")) && !1 !== this.events.triggerEvent("beforeaction", {
                        action: e
                    })) {
                    var t = this.unsavedActionsNum(),
                        i = void 0,
                        n = void 0;
                    if (e.undoSupported()) {
                        for (this.index++,
                            i = this.index,
                            n = this.actions.legnth; i < n; i++)
                            this.actions[i].destroy();
                        this.actions.splice(this.index, this.actions.length - this.index, e)
                    } else {
                        for (i = 0,
                            n = this.actions.legnth; i < n; i++)
                            this.actions[i].destroy();
                        this.actions = [],
                            this.index = -1,
                            this.events.triggerEvent("afterclearactions", {
                                action: e
                            })
                    }
                    e.setModel(this.model), !1 === e.doAction() && (this.actions.pop(),
                            this.index > -1 && this.index--),
                        0 === t && this.events.triggerEvent("hasActions"),
                        this.events.triggerEvent("afteraction", {
                            action: e
                        })
                }
            },
            canUndo: function() {
                return this.index >= 0
            },
            canSave: function() {
                return this.canUndo() && this.isAllowedToSave()
            },
            canRedo: function() {
                return this.index < this.actions.length - 1
            },
            unsavedActionsNum: function() {
                return this.index + 1
            },
            undo: function() {
                return !!this.canUndo() && (!1 !== this.events.triggerEvent("beforeundoaction", {
                    action: this.actions[this.index]
                }) && (n.protect("undoing " + this.actions[this.index].CLASS_NAME, function() {
                        this.actions[this.index].undoAction()
                    }, this),
                    this.index--,
                    this.events.triggerEvent("afterundoaction", {
                        action: this.actions[this.index]
                    }),
                    0 === this.unsavedActionsNum() && this.events.triggerEvent("noActions"),
                    W.Report.generalAction("undo_clicked"), !0))
            },
            redo: function() {
                if (!this.canRedo())
                    return !1;
                if (!1 === this.events.triggerEvent("beforeaction", {
                        action: this.actions[this.index + 1]
                    }))
                    return !1;
                var e = this.unsavedActionsNum();
                return this.index++,
                    n.protect("redoing " + this.actions[this.index].CLASS_NAME, function() {
                        this.actions[this.index].redoAction()
                    }, this),
                    this.events.triggerEvent("afteraction", {
                        action: this.actions[this.index]
                    }),
                    0 === e && this.events.triggerEvent("hasActions"), !0
            },
            clear: function() {
                for (var e = 0, t = this.actions.legnth; e < t; e++)
                    this.actions[e].destroy();
                this.actions = [],
                    this.index = -1,
                    this.events.triggerEvent("afterclearactions"),
                    this.events.triggerEvent("noActions")
            },
            getChangesBounds: function() {
                var e = new s;
                return e.subActions = this.actions.slice(0, this.index + 1),
                    e.getBounds()
            },
            getActions: function() {
                return this.actions.slice(0, this.index + 1)
            },
            toggleSavingEnabled: function(e) {
                this._savingEnabled = e
            },
            isAllowedToSave: function() {
                return this.model.loginManager.isLoggedIn() && this._savingEnabled
            },
            CLASS_NAME: "Waze.ActionManager"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(29),
        r = i(35),
        o = OL.Class(n, {
            initialize: function(e, t, i, s) {
                n.prototype.initialize.apply(this, [s]),
                    this._forwardVertex = r.forwardOf(e),
                    this._reverseVertex = r.reverseOf(e),
                    this._firstSplitID = i,
                    this._lastSplitID = t
            },
            doAction: function() {
                var e = this.model.getTurnGraph();
                e.getTurnsTo(this._forwardVertex).forEach(function(t) {
                        t = t.withToVertex(r.forwardOf(this._firstSplitID)),
                            this.doSubAction(new s(e, t, {
                                dontSerialize: !0
                            }))
                    }, this),
                    e.getTurnsFrom(this._forwardVertex).forEach(function(t) {
                        t = t.withFromVertex(r.forwardOf(this._lastSplitID)),
                            this.doSubAction(new s(e, t, {
                                dontSerialize: !0
                            }))
                    }, this),
                    e.getTurnsFrom(this._reverseVertex).forEach(function(t) {
                        t = t.withFromVertex(r.reverseOf(this._firstSplitID)),
                            this.doSubAction(new s(e, t, {
                                dontSerialize: !0
                            }))
                    }, this),
                    e.getTurnsTo(this._reverseVertex).forEach(function(t) {
                        t = t.withToVertex(r.reverseOf(this._lastSplitID)),
                            this.doSubAction(new s(e, t, {
                                dontSerialize: !0
                            }))
                    }, this)
            },
            CLASS_NAME: "Waze.Model.Graph.Actions.SplitTurns"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(3),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(144),
        c = n(d),
        h = i(84),
        p = n(h),
        f = i(35),
        g = n(f),
        m = i(209),
        v = function() {
            function e(t) {
                (0,
                    a.default)(this, e),
                this._roadGraph = t,
                    this._adjacencyList = {}
            }
            return (0,
                    u.default)(e, [{
                    key: "getTurn",
                    value: function(e, t) {
                        var i = null,
                            n = this._adjacencyList[e.getID()];
                        return n && (i = n[t.getID()]),
                            i || (i = p.default.createUnknown()),
                            new c.default(e, t, i)
                    }
                }, {
                    key: "putTurn",
                    value: function(e) {
                        var t = e.getTurnData();
                        if (null === t || t.isUnknown())
                            return void this._deleteTurn(e);
                        var i = this._adjacencyList[e.getFromVertex().getID()];
                        i || (i = {},
                                this._adjacencyList[e.getFromVertex().getID()] = i),
                            i[e.getToVertex()] = t,
                            this.trigger("change", e)
                    }
                }, {
                    key: "_deleteTurn",
                    value: function(e) {
                        var t = this._adjacencyList[e.getFromVertex().getID()];
                        t && (delete t[e.getToVertex()],
                            0 === (0,
                                r.default)(t).length && delete this._adjacencyList[e.getFromVertex().getID()],
                            this.trigger("change", e))
                    }
                }, {
                    key: "getTurnThroughNode",
                    value: function(e, t, i) {
                        var n = g.default.for(t, e),
                            s = g.default.for(i, e).getOpposite();
                        return this.getTurn(n, s)
                    }
                }, {
                    key: "getTurnsFrom",
                    value: function(e) {
                        var t = this,
                            i = this._adjacencyList[e.getID()];
                        return i ? (0,
                            r.default)(i).map(function(e) {
                            return g.default.fromID(e)
                        }).map(function(i) {
                            return t.getTurn(e, i)
                        }).filter(function(e) {
                            return !e.getTurnData().isUnknown()
                        }) : []
                    }
                }, {
                    key: "getTurnsTo",
                    value: function(e) {
                        var t = this,
                            i = e.getOpposite();
                        return this._roadGraph.getConnectedVertices(i).map(function(e) {
                            return e.getOpposite()
                        }).map(function(i) {
                            return t.getTurn(i, e)
                        }).filter(function(e) {
                            return !e.getTurnData().isUnknown()
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this._adjacencyList = {}
                    }
                }, {
                    key: "fromDescartes",
                    value: function(e) {
                        var t = this;
                        (0,
                            r.default)(e).forEach(function(i) {
                            var n = {};
                            (0,
                                r.default)(e[i]).forEach(function(t) {
                                    var s = e[i][t];
                                    if ("boolean" == typeof s)
                                        n[t] = s ? p.default.createAllowed() : p.default.createDisallowed();
                                    else {
                                        var r = void 0;
                                        r = s.navigable ? p.default.State.ALLOWED : p.default.State.DISALLOWED;
                                        var o = s.restrictions.map(function(e) {
                                            return new m.TurnRestriction(e)
                                        });
                                        n[t] = p.default.create(r, o, s.instructionOpCode)
                                    }
                                }),
                                t._adjacencyList[i] = n
                        })
                    }
                }, {
                    key: "deleteNewSegments",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            delete t._adjacencyList[g.default.forwardOf(e).getID()],
                                delete t._adjacencyList[g.default.reverseOf(e).getID()]
                        })
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = this,
                            t = {};
                        return (0,
                                r.default)(this._adjacencyList).forEach(function(i) {
                                var n = e._adjacencyList[i],
                                    s = (0,
                                        r.default)(n).filter(function(e) {
                                        return null !== n[e]
                                    }).map(function(e) {
                                        return n[e].isAllowed() || (e += "!"),
                                            e
                                    });
                                s.length > 0 && (t[i] = s)
                            }),
                            t
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        var t = this;
                        (0,
                            r.default)(e).forEach(function(i) {
                            e[i].forEach(function(e) {
                                var n = p.default.createAllowed();
                                "!" === e.slice(-1) && (n = p.default.createDisallowed(),
                                        e = e.slice(0, -1)),
                                    t.putTurn(new c.default(g.default.fromID(i), g.default.fromID(e), n))
                            })
                        })
                    }
                }]),
                e
        }();
    _.extend(v.prototype, Backbone.Events),
        e.exports = v
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(50),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(51),
        v = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = e.defaultType,
                    n = void 0 === i ? m.RESTRICTION_TYPE.FREE : i;
                (0,
                    u.default)(this, t);
                var s = (0,
                    p.default)(this, (t.__proto__ || (0,
                    a.default)(t)).apply(this, arguments));
                return s._defaultType = n,
                    (0,
                        r.default)(s),
                    s
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "supportsNumPassengers",
                    value: function() {
                        return !1
                    }
                }, {
                    key: "supportsSubscriptions",
                    value: function() {
                        return !1
                    }
                }]),
                t
        }(m.BaseRestriction);
    t.default = {
            TurnRestriction: v
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(3),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(35),
        c = i(94),
        h = i(27),
        p = function() {
            function e(t, i) {
                (0,
                    a.default)(this, e),
                this._nodeRepository = t,
                    this._segmentRepository = i
            }
            return (0,
                    u.default)(e, [{
                    key: "getConnectedVertices",
                    value: function(e) {
                        var t = this.getVertexNodeID(e),
                            i = null;
                        return null !== t && (i = this._nodeRepository.get(t)),
                            null === i ? [] : this._getNodeConnectedVertices(i).filter(function(t) {
                                return !t.equals(e)
                            })
                    }
                }, {
                    key: "_getNodeConnectedVertices",
                    value: function(e) {
                        var t = this,
                            i = [],
                            n = e.getID();
                        return e.attributes.segIDs.forEach(function(e) {
                                var s = t._segmentRepository.get(e);
                                s.attributes.fromNodeID === n && i.push(d.forwardOf(e)),
                                    s.attributes.toNodeID === n && i.push(d.reverseOf(e))
                            }),
                            i
                    }
                }, {
                    key: "getVertexNodeID",
                    value: function(e) {
                        var t = this._segmentRepository.get(e.getSegmentID());
                        return e.isForward() ? t.attributes.toNodeID : t.attributes.fromNodeID
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = this,
                            t = {};
                        return this._nodeRepository.getObjectArray().forEach(function(i) {
                                i.isDeleted() || (t[i.getID()] = e._getNodeConnectedVertices(i).map(function(e) {
                                    return e.getOpposite().toString()
                                }))
                            }),
                            t
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        var t = this,
                            i = (0,
                                r.default)(e).map(function(e) {
                                return new c({
                                    id: parseInt(e, 10),
                                    segIDs: []
                                })
                            });
                        this._nodeRepository.put(i),
                            (0,
                                r.default)(e).forEach(function(i) {
                                i = parseInt(i, 10),
                                    e[i].map(function(e) {
                                        return d.fromID(e)
                                    }).forEach(function(e) {
                                        var n = t._nodeRepository.get(i),
                                            s = t._segmentRepository.get(e.getSegmentID());
                                        s || (s = new h({
                                                id: e.getSegmentID()
                                            })),
                                            t._segmentRepository.put(s),
                                            e.isForward() ? s.attributes.toNodeID = i : s.attributes.fromNodeID = i,
                                            _.contains(n.attributes.segIDs, s.getID()) || n.attributes.segIDs.push(s.getID())
                                    })
                            })
                    }
                }]),
                e
        }();
    e.exports = p
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class(OpenLayers.Handler.Keyboard, {
        initialize: function(e, t, i) {
            OpenLayers.Handler.Keyboard.prototype.initialize.apply(this, arguments)
        },
        destroy: function() {
            OpenLayers.Handler.Keyboard.prototype.destroy.apply(this, arguments)
        },
        handleKeyEvent: function(e) {
            $(e.target).is(":input") || OpenLayers.Handler.Keyboard.prototype.handleKeyEvent.apply(this, arguments)
        },
        CLASS_NAME: "Waze.Handler.KeyboardShortcut"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class(OpenLayers.Control, {
        DEFAULTS: {
            tolerance: 15,
            node: !0,
            edge: !0,
            vertex: !0
        },
        greedy: !0,
        precedence: ["node", "vertex", "edge"],
        resolution: null,
        geoToleranceCache: null,
        layer: null,
        feature: null,
        snappedFeature: null,
        point: null,
        initialize: function(e) {
            OpenLayers.Control.prototype.initialize.apply(this, [e]),
                this.options = e || {},
                this.options.layer && this.setLayer(this.options.layer);
            var t = OpenLayers.Util.extend({}, this.options.defaults);
            this.defaults = OpenLayers.Util.applyDefaults(t, this.DEFAULTS),
                this.setTargets(this.options.targets),
                0 === this.targets.length && this.layer && this.addTargetLayer(this.layer),
                this.geoToleranceCache = {}
        },
        setLayer: function(e) {
            this.active ? (this.deactivate(),
                this.layer = e,
                this.activate()) : this.layer = e
        },
        setTargets: function(e) {
            if (this.targets = [],
                e && e.length)
                for (var t = void 0, i = 0, n = e.length; i < n; ++i)
                    t = e[i],
                    t instanceof OpenLayers.Layer.Vector ? this.addTargetLayer(t) : this.addTarget(t)
        },
        addTargetLayer: function(e) {
            this.addTarget({
                layer: e
            })
        },
        addTarget: function(e) {
            e = OpenLayers.Util.applyDefaults(e, this.defaults),
                e.nodeTolerance = e.nodeTolerance || e.tolerance,
                e.vertexTolerance = e.vertexTolerance || e.tolerance,
                e.edgeTolerance = e.edgeTolerance || e.tolerance,
                this.targets.push(e)
        },
        removeTargetLayer: function(e) {
            for (var t = void 0, i = this.targets.length - 1; i >= 0; --i)
                t = this.targets[i],
                t.layer === e && this.removeTarget(t)
        },
        removeTarget: function(e) {
            return OpenLayers.Util.removeItem(this.targets, e)
        },
        activate: function() {
            var e = OpenLayers.Control.prototype.activate.call(this);
            return e && this.layer && this.layer.events && this.layer.events.on({
                    sketchstarted: this.onSketchModified,
                    sketchmodified: this.onSketchModified,
                    vertexmodified: this.onVertexModified,
                    scope: this
                }),
                e
        },
        deactivate: function() {
            var e = OpenLayers.Control.prototype.deactivate.call(this);
            return e && this.layer && this.layer.events && this.layer.events.un({
                    sketchstarted: this.onSketchModified,
                    sketchmodified: this.onSketchModified,
                    vertexmodified: this.onVertexModified,
                    scope: this
                }),
                this.feature = null,
                this.snappedFeature = null,
                this.point = null,
                e
        },
        onSketchModified: function(e) {
            this.feature = e.feature,
                this.considerSnapping(e.vertex, e.vertex)
        },
        onVertexModified: function(e) {
            this.feature = e.feature;
            var t = this.layer.map.getLonLatFromViewPortPx(e.pixel);
            this.considerSnapping(e.vertex, new OpenLayers.Geometry.Point(t.lon, t.lat))
        },
        considerSnapping: function(e, t) {
            for (var i = {
                    rank: Number.POSITIVE_INFINITY,
                    dist: Number.POSITIVE_INFINITY,
                    x: null,
                    y: null
                }, n = !1, s = void 0, r = void 0, o = 0, a = this.targets.length; o < a; ++o)
                if (r = this.targets[o],
                    s = this.testTarget(r, t)) {
                    if (this.greedy) {
                        i = s,
                            i.target = r,
                            n = !0;
                        break
                    }
                    (s.rank < i.rank || s.rank === i.rank && s.dist < i.dist) && (i = s,
                        i.target = r,
                        n = !0)
                }
            if (n) {
                !1 !== this.events.triggerEvent("beforesnap", {
                    point: e,
                    x: i.x,
                    y: i.y,
                    distance: i.dist,
                    layer: i.target.layer,
                    snapType: this.precedence[i.rank]
                }) ? (this.snappedFeature = {
                        feature: i.feature,
                        distance: i.dist,
                        type: this.precedence[i.rank],
                        point: new OpenLayers.Geometry.Point(i.x, i.y)
                    },
                    e.x = i.x,
                    e.y = i.y,
                    this.point = e,
                    this.events.triggerEvent("snap", {
                        point: e,
                        feature: i.feature,
                        snapType: this.precedence[i.rank],
                        layer: i.target.layer,
                        distance: i.dist
                    })) : n = !1
            }
            this.point && !n && (e.x = t.x,
                e.y = t.y,
                this.point = null,
                this.snappedFeature = null,
                this.events.triggerEvent("unsnap", {
                    point: e
                }))
        },
        testTarget: function(e, t) {
            for (var i = {
                    node: this.getGeoTolerance(e.nodeTolerance),
                    vertex: this.getGeoTolerance(e.vertexTolerance),
                    edge: this.getGeoTolerance(e.edgeTolerance)
                }, n = Math.max(i.node, i.vertex, i.edge), s = {
                    rank: Number.POSITIVE_INFINITY,
                    dist: Number.POSITIVE_INFINITY
                }, r = !1, o = e.layer.features, a = void 0, l = void 0, u = void 0, d = void 0, c = void 0, h = void 0, p = void 0, f = this.precedence.length, g = new OpenLayers.LonLat(t.x, t.y), m = 0, v = o.length; m < v; ++m)
                if ((a = o[m]) !== this.feature && !a._sketch && a.state !== OpenLayers.State.DELETE && a.model && !a.model.isDeleted() && (!e.filter || e.filter.evaluate(a)) && a.atPoint(g, n, n))
                    for (var _ = 0, y = Math.min(s.rank + 1, f); _ < y; ++_)
                        if (l = this.precedence[_],
                            e[l])
                            if ("edge" === l) {
                                if (c = a.geometry.distanceTo(t, {
                                        details: !0
                                    }),
                                    (h = c.distance) <= i[l] && h < s.dist) {
                                    s = {
                                            feature: a,
                                            rank: _,
                                            dist: h,
                                            x: c.x0,
                                            y: c.y0
                                        },
                                        r = !0;
                                    break
                                }
                            } else {
                                u = a.geometry.getVertices("node" === l),
                                    p = !1;
                                for (var b = 0, E = u.length; b < E; ++b)
                                    d = u[b],
                                    (h = d.distanceTo(t)) <= i[l] && (_ < s.rank || _ === s.rank && h < s.dist) && (s = {
                                            feature: a,
                                            rank: _,
                                            dist: h,
                                            x: d.x,
                                            y: d.y
                                        },
                                        r = !0,
                                        p = !0);
                                if (p)
                                    break
                            }
            return r ? s : null
        },
        getGeoTolerance: function(e) {
            var t = this.layer.map.getResolution();
            t !== this.resolution && (this.resolution = t,
                this.geoToleranceCache = {});
            var i = this.geoToleranceCache[e];
            return void 0 === i && (i = e * t,
                    this.geoToleranceCache[e] = i),
                i
        },
        destroy: function() {
            this.active && this.deactivate(),
                delete this.layer,
                delete this.targets,
                OpenLayers.Control.prototype.destroy.call(this)
        },
        CLASS_NAME: "Waze.Control.Snapping"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";
    var n = i(694),
        s = OpenLayers.Class(OL.Feature.Vector, {
            initialize: function(e, t, i) {
                OL.Feature.Vector.prototype.initialize.apply(this, [new n(e), t, i])
            },
            getID: function() {
                return this.id
            },
            clone: function() {
                return new s(this.geometry ? this.geometry.clone() : null, this.attributes, this.style)
            },
            CLASS_NAME: "Waze.Feature.AggregatePointVector"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(27),
        r = n(s),
        o = i(9),
        a = n(o),
        l = i(83),
        u = n(l),
        d = OL.Class(a.default, {
            segments: null,
            sourceSplits: null,
            targetSplits: null,
            initialize: function(e, t, i) {
                var n = this;
                this.segments = e,
                    this.options = i,
                    a.default.prototype.initialize.apply(this, [this.options]),
                    this.sourceSplits = t.first().map(function(e) {
                        var t = new r.default({
                            geometry: e
                        });
                        return t.copyAttributes(n.segments.first()),
                            t
                    }),
                    this.targetSplits = t.last().map(function(e) {
                        var t = new r.default({
                            geometry: e
                        });
                        return t.copyAttributes(n.segments.last()),
                            t
                    })
            },
            doAction: function() {
                var e = new u.default(this.segments.last(), {
                    splits: this.targetSplits
                });
                return this.doSubAction(e),
                    this.doSubAction(new u.default(this.segments.first(), {
                        splits: this.sourceSplits,
                        splitNode: e.splitNode
                    }))
            },
            CLASS_NAME: "Waze.Action.AddIntersection"
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(47),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(9),
        o = i(10),
        a = i(4),
        l = i(40),
        u = i(41),
        d = i(216),
        c = i(83),
        h = OpenLayers.Class(r, {
            node: null,
            oldGeometry: null,
            newGeometry: null,
            origSegGeometries: null,
            changedNodeState: !1,
            changedSegStates: null,
            changedSegments: null,
            initialize: function(e, t, i, n, s) {
                r.prototype.initialize.apply(this, [s]),
                    this.node = e,
                    this.oldGeometry = e.geometry === t ? t.clone() : t,
                    this.newGeometry = e.geometry === i ? i.clone() : i,
                    this.origSegGeometries = n,
                    this.changedSegStates = [],
                    this.changedSegments = [],
                    this.changedNodeState = !1
            },
            destroy: function() {
                this.oldGeometry.destroy(),
                    this.oldGeometry = null,
                    this.newGeometry.destroy(),
                    this.newGeometry = null,
                    this.node = null,
                    this.changedSegStates = null,
                    this.changedSegments = null,
                    (0,
                        s.default)(this.origSegGeometries).forEach(function(e) {
                        e.destroy()
                    }),
                    r.prototype.destroy.apply(this)
            },
            moveConnectedSegments: function() {
                this.node.attributes.segIDs.forEach(function(e) {
                        var t = this.model.segments.get(e);
                        if (t) {
                            var i = !1;
                            if (t.attributes.fromNodeID === this.node.getID() && (i = !0,
                                    t.geometry.components[0].x = this.newGeometry.x,
                                    t.geometry.components[0].y = this.newGeometry.y,
                                    t.geometry.components[0].clearBounds()),
                                t.attributes.toNodeID === this.node.getID()) {
                                i = !0;
                                var n = t.geometry.components.length - 1;
                                t.geometry.components[n].x = this.newGeometry.x,
                                    t.geometry.components[n].y = this.newGeometry.y,
                                    t.geometry.components[n].clearBounds()
                            }
                            t.geometry.calculateBounds(),
                                i && (t.state || (t.state = OpenLayers.State.UPDATE,
                                        this.changedSegStates.push(e)),
                                    this.changedSegments.push(t))
                        }
                    }, this),
                    this.changedSegments.length > 0 && this.model.segments.changed(this.changedSegments),
                    this.changedSegments.forEach(function(e) {
                        e.isPoint() && this.doSubAction(new l(e, {
                            deleteNode: !1
                        }))
                    }, this)
            },
            moveNode: function() {
                this.node.geometry.x = this.newGeometry.x,
                    this.node.geometry.y = this.newGeometry.y,
                    this.node.geometry.calculateBounds(),
                    this.node.bounds = this.node.geometry.bounds,
                    this.node.state || (this.node.state = OpenLayers.State.UPDATE,
                        this.changedNodeState = !0),
                    this.model.nodes.changed(this.node)
            },
            handleTouchingFeatures: function() {
                var e = void 0;
                if (!this.snappedFeatures)
                    return !1;
                e = this.snappedFeatures,
                    e.feature.type === a.SEGMENT ? "edge" === e.type || "vertex" === e.type ? this.doSubAction(new c(e.feature, {
                        splitNode: this.node,
                        splitAtPoint: e.point,
                        splittingPointDistance: e.distance
                    })) : "node" === e.type && this.doSubAction(new u(this.node, e.feature)) : e.feature.type === a.NODE && this.doSubAction(new d(this.node, e.feature))
            },
            doAction: function() {
                this.moveNode(),
                    this.moveConnectedSegments();
                var e = this;
                this.doSubAction(new o({
                        serialize: function() {
                            var t = {};
                            return t.id = e.node.getID(),
                                t.geometry = e.newGeometry, {
                                    _objectType: a.NODE,
                                    action: o.TYPE.UPDATE,
                                    attributes: t
                                }
                        }
                    })),
                    this.handleTouchingFeatures()
            },
            undoAction: function() {
                r.prototype.undoAction.apply(this);
                for (var e = 0, t = this.changedSegments.length; e < t; e++) {
                    var i = this.changedSegments[e],
                        n = i.getID();
                    if (i.attributes.toNodeID === this.node.getID()) {
                        var s = i.geometry.components.length - 1;
                        i.geometry.components[s].x = this.origSegGeometries[n].components[s].x,
                            i.geometry.components[s].y = this.origSegGeometries[n].components[s].y,
                            i.geometry.components[s].clearBounds()
                    }
                    i.attributes.fromNodeID === this.node.getID() && (i.geometry.components[0].x = this.origSegGeometries[n].components[0].x,
                            i.geometry.components[0].y = this.origSegGeometries[n].components[0].y,
                            i.geometry.components[0].clearBounds()),
                        i.geometry.calculateBounds(),
                        OpenLayers.Util.indexOf(this.changedSegStates, n) >= 0 && (i.state = null)
                }
                this.changedSegments.length > 0 && this.model.segments.changed(this.changedSegments),
                    this.node.geometry.x = this.oldGeometry.x,
                    this.node.geometry.y = this.oldGeometry.y,
                    this.node.geometry.calculateBounds(),
                    this.node.bounds = this.node.geometry.bounds,
                    this.changedNodeState && (this.node.state = null),
                    this.model.nodes.changed(this.node)
            },
            redoAction: function() {
                this.node.geometry.x = this.newGeometry.x,
                    this.node.geometry.y = this.newGeometry.y,
                    this.node.geometry.calculateBounds(),
                    this.node.bounds = this.node.geometry.bounds,
                    this.changedNodeState && (this.node.state = OpenLayers.State.UPDATE),
                    this.model.nodes.changed(this.node);
                for (var e = 0, t = this.changedSegments.length; e < t; e++) {
                    var i = this.changedSegments[e];
                    if (i.attributes.fromNodeID === this.node.getID() && (i.geometry.components[0].x = this.newGeometry.x,
                            i.geometry.components[0].y = this.newGeometry.y,
                            i.geometry.components[0].clearBounds()),
                        i.attributes.toNodeID === this.node.getID()) {
                        var n = i.geometry.components.length - 1;
                        i.geometry.components[n].x = this.newGeometry.x,
                            i.geometry.components[n].y = this.newGeometry.y,
                            i.geometry.components[n].clearBounds()
                    }
                    i.geometry.calculateBounds(),
                        OpenLayers.Util.indexOf(this.changedSegStates, i.getID()) >= 0 && (i.state = OpenLayers.State.UPDATE)
                }
                this.changedSegments.length > 0 && this.model.segments.changed(this.changedSegments),
                    r.prototype.redoAction.apply(this)
            },
            getBounds: function() {
                var e = r.prototype.getBounds.apply(this, arguments) || new OpenLayers.Bounds;
                return (0,
                        s.default)(this.origSegGeometries).forEach(function(t) {
                        e.extend(t.getBounds())
                    }),
                    e
            },
            CLASS_NAME: "Waze.Action.MoveNode"
        });
    e.exports = h
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(140),
        r = i(40),
        o = i(81),
        a = i(41),
        l = i(4),
        u = i(10),
        d = OpenLayers.Class(n, {
            node: null,
            mergeNode: null,
            initialize: function(e, t, i) {
                n.prototype.initialize.apply(this, [i]),
                    this.node = e,
                    this.mergeNode = t
            },
            considerMerging: function() {
                return !(!this.mergeNode || !this.mergeNode.geometry.equals(this.node.geometry)) && this.node.attributes.segIDs.every(function(e) {
                    var t = this.model.segments.get(e);
                    return !this.mergeNode.isConnectedToSegment(t) || t.isPoint()
                }, this)
            },
            moveSegments: function() {
                this.node.attributes.segIDs.clone().forEach(function(e) {
                    var t = this.model.segments.get(e);
                    t.isPoint() ? this.doSubAction(new r(t)) : (this.doSubAction(new o(t, this.node, {
                            deleteNode: !1,
                            dontSerialize: !0,
                            keepTurns: !0
                        })),
                        this.doSubAction(new a(this.mergeNode, t, {
                            dontSerialize: !0
                        })))
                }, this)
            },
            doAction: function() {
                if (!this.considerMerging())
                    return !1;
                this.moveSegments(),
                    this.doSubAction(new s(this.node))
            },
            serialize: function() {
                var e = {
                    sourceNodeID: this.node.getID(),
                    sourceNodeVersion: this.node.attributes.version,
                    destNodeID: this.mergeNode.getID(),
                    destNodeVersion: this.node.attributes.version
                };
                return {
                    _objectType: l.MERGED_NODE,
                    action: u.TYPE.ADD,
                    attributes: e
                }
            },
            CLASS_NAME: "Waze.Action.MergeNode"
        });
    e.exports = d
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-standard36b7901c37f65cd4308d73998cb62a94.png"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = function() {
            function e() {
                (0,
                    a.default)(this, e)
            }
            return (0,
                    u.default)(e, [{
                    key: "getWeekdaysGist",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "*",
                            i = [],
                            n = e.length;
                        if (0 === n)
                            return i;
                        for (var s = 0, r = 0; s < n;) {
                            var o = e[s];
                            if (0 === s)
                                i.push(o);
                            else if (s === n - 1) {
                                var a = e[s - 1];
                                o === a + 1 && r > 0 && i.push(t),
                                    i.push(o)
                            } else {
                                var l = e[s - 1],
                                    u = e[s + 1];
                                o !== l + 1 ? i.push(o) : o === u - 1 ? r++ : (r > 0 && i.push(t),
                                    i.push(o),
                                    r = 0)
                            }
                            s++
                        }
                        return i
                    }
                }, {
                    key: "isValidTime",
                    value: function(e) {
                        if (!_.isString(e))
                            return !1;
                        var t = e.split(":");
                        if (2 !== t.length)
                            return !1;
                        var i = (0,
                                r.default)(t, 2),
                            n = i[0],
                            s = i[1];
                        return !(!/([01]?[0-9]|2[0-3])/.test(n) || !/[0-5]\d/.test(s))
                    }
                }, {
                    key: "_parseTimeStr",
                    value: function(e) {
                        if (this.isValidTime(e)) {
                            var t = e.split(":");
                            return {
                                hour: parseInt(t[0], 10),
                                minute: parseInt(t[1], 10)
                            }
                        }
                        return {}
                    }
                }, {
                    key: "compareTimes",
                    value: function(e, t) {
                        var i = this._parseTimeStr(e),
                            n = this._parseTimeStr(t);
                        return i.hour === n.hour ? i.minute > n.minute ? 1 : i.minute < n.minute ? -1 : 0 : i.hour > n.hour ? 1 : i.hour < n.hour ? -1 : 0
                    }
                }]),
                e
        }();
    t.default = {
            DateTimeUtil: d
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(64),
        r = n(s),
        o = i(21),
        a = n(o),
        l = i(5),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(2),
        p = n(h),
        f = i(7),
        g = n(f),
        m = i(8),
        v = n(m),
        _ = i(51),
        y = i(705),
        b = i(706),
        E = i(707),
        w = i(708),
        S = i(709),
        M = i(39),
        C = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            description: "",
                            drivingModality: null
                        }
                    }
                }]),
                t
        }(Backbone.Model),
        T = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            validationRegion: ".restriction-validation-region",
                            segmentEditingRegion: ".segment-editing-region",
                            timeframeEditingRegion: ".timeframe-editing-region",
                            driveProfileEditingRegion: ".drive-profile-editing-region"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-cancel": "restriction:edit:cancel"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-create": "_createRestriction",
                            "click .do-update": "_updateRestriction",
                            "change .do-change-driving-modality": "_changeDrivingModality"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=description]": "description",
                            ".driving-modality-select": {
                                observe: "drivingModality",
                                selectOptions: {
                                    collection: "this._drivingModalityOptions"
                                }
                            },
                            ".drive-profile-editing-region": {
                                classes: {
                                    "drive-profile-toll-free": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE
                                        }
                                    },
                                    "drive-profile-allowed": {
                                        observe: "drivingModality",
                                        onGet: function(e) {
                                            return e === _.RESTRICTION_MODALITY.DRIVING_ALLOWED
                                        }
                                    }
                                }
                            },
                            ".help-message": {
                                observe: "drivingModality",
                                onGet: function(e) {
                                    return e === _.RESTRICTION_MODALITY.DRIVING_BLOCKED ? I18n.t("restrictions.editing.driving.other_vehicles_allowed") : e === _.RESTRICTION_MODALITY.DRIVING_ALLOWED ? I18n.t("restrictions.editing.driving.other_vehicles_restricted") : e === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? I18n.t("restrictions.editing.driving.other_vehicles_pay_toll") : void 0
                                }
                            },
                            "select, textarea, .do-update, .do-create": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restriction: null,
                            isNewRestriction: !0,
                            editingTitle: "",
                            canEditRestrictions: !1,
                            canAddTollRestriction: !1,
                            subscriptions: {}
                        };
                        this._restriction = e.restriction,
                            this._isNewRestriction = e.isNewRestriction,
                            this._editingTitle = e.editingTitle,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._canAddTollRestriction = e.canAddTollRestriction,
                            this._subscriptions = e.subscriptions,
                            this._timeframe = this._restriction.getTimeFrame(),
                            this.model = new C({
                                restrictionEditable: this._isRestrictionEditable(),
                                description: this._restriction.getDescription(),
                                drivingModality: null
                            }),
                            this._drivingModalityOptions = this._getDriveProfileTypeOptions()
                    }
                }, {
                    key: "_getDriveProfileTypeOptions",
                    value: function() {
                        var e = this;
                        return [_.RESTRICTION_MODALITY.DRIVING_ALLOWED, _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE, _.RESTRICTION_MODALITY.DRIVING_BLOCKED].map(function(t) {
                            return {
                                value: t,
                                label: I18n.t("restrictions.editing.driving.types." + t),
                                disabled: t === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE && !e._canAddTollRestriction
                            }
                        })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.$(".waze-tooltip").tooltip();
                        var e = this._isRestrictionEditable();
                        this._isSegmentRestriction() && this.showChildView("segmentEditingRegion", b.RestrictionEditSegmentView.for(this._restriction, {
                                restrictionEditable: e
                            })),
                            this.showChildView("timeframeEditingRegion", S.TimeFrameEditView.for(this._timeframe, {
                                restrictionEditable: e
                            })),
                            this._showDriveProfileEdit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            isNewRestriction: this._isNewRestriction,
                            editingTitle: this._editingTitle,
                            canAddTollRestriction: this._canAddTollRestriction
                        }
                    }
                }, {
                    key: "_isRestrictionEditable",
                    value: function() {
                        return this._restriction.isEditable() && this._canEditRestrictions
                    }
                }, {
                    key: "_isSegmentRestriction",
                    value: function() {
                        return this._restriction instanceof M.SegmentRestriction
                    }
                }, {
                    key: "_getDrivingModality",
                    value: function() {
                        return this._isNewRestriction ? _.RESTRICTION_MODALITY.DRIVING_ALLOWED : this._restriction.getDrivingModality()
                    }
                }, {
                    key: "_showDriveProfileEdit",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.drivingModality,
                            i = void 0 === t ? this._getDrivingModality() : t,
                            n = this._isRestrictionEditable(),
                            s = void 0;
                        s = i === _.RESTRICTION_MODALITY.DRIVING_BLOCKED ? E.DriveProfileBlockedEditView.for(this._restriction, {
                                restrictionEditable: n
                            }) : w.DriveProfileFreeEditView.for(this._restriction, {
                                restrictionEditable: n,
                                subscriptions: this._subscriptions
                            }),
                            this.model.set({
                                drivingModality: i
                            }),
                            this.showChildView("driveProfileEditingRegion", s)
                    }
                }, {
                    key: "_getEditedRestriction",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.description,
                            i = e.drivingModality,
                            n = this.getChildView("timeframeEditingRegion"),
                            s = this.getChildView("driveProfileEditingRegion"),
                            r = void 0;
                        i === _.RESTRICTION_MODALITY.DRIVING_ALLOWED ? r = _.RESTRICTION_TYPE.BLOCKED : i === _.RESTRICTION_MODALITY.DRIVING_TOLL_FREE ? r = _.RESTRICTION_TYPE.TOLL : i === _.RESTRICTION_MODALITY.DRIVING_BLOCKED && (r = s.getRestrictionData().defaultType);
                        var o = {
                            defaultType: r,
                            description: t
                        };
                        if ((0,
                                a.default)(o, n.getRestrictionData(), s.getRestrictionData()),
                            this._isSegmentRestriction()) {
                            var l = this.getChildView("segmentEditingRegion");
                            (0,
                                a.default)(o, l.getRestrictionData())
                        }
                        return this._restriction.with(o)
                    }
                }, {
                    key: "_validate",
                    value: function() {
                        var e = [];
                        return this.model.attributes.description.length > _.RESTRICTION_DESCRIPTION_CHAR_LIMIT && e.push(I18n.t("restrictions.editing.validation.description_char_limit", {
                                char_limit: _.RESTRICTION_DESCRIPTION_CHAR_LIMIT
                            })),
                            e
                    }
                }, {
                    key: "_isValid",
                    value: function() {
                        var e, t = this,
                            i = (e = this._validate()).concat.apply(e, (0,
                                r.default)(["timeframeEditingRegion", "driveProfileEditingRegion"].map(function(e) {
                                return t.getChildView(e).validate()
                            }))),
                            n = new y.RestrictionEditValidationView({
                                errorMessages: i
                            });
                        return this.showChildView("validationRegion", n),
                            n.isValid()
                    }
                }, {
                    key: "_createRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:create", this._getEditedRestriction())
                    }
                }, {
                    key: "_updateRestriction",
                    value: function() {
                        this._isValid() && this.triggerMethod("restriction:edit:update", this._restriction, this._getEditedRestriction())
                    }
                }, {
                    key: "_changeDrivingModality",
                    value: function(e) {
                        var t = e.target.value;
                        this._showDriveProfileEdit({
                            drivingModality: t
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restriction_edit"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            RestrictionEditView: T
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(104),
        g = i(51),
        m = i(93),
        v = i(39),
        y = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "getRestriction",
                    value: function() {
                        return this._restriction
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = new t({
                            isDifficult: e.isDifficult(),
                            isAllowed: e.isAllowedModality(),
                            isBlocked: e.isBlockedModality(),
                            isTollFree: e.isTollFreeModality()
                        });
                        return i._restriction = e,
                            i
                    }
                }]),
                t
        }(Backbone.Model),
        b = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "tr"
                    }
                }, {
                    key: "className",
                    value: function() {
                        var e = ["restriction-list-item"];
                        return this.model.attributes.isDifficult && e.push("restriction-list-item-difficult"),
                            this.model.attributes.isAllowed && e.push("restriction-list-item-allowed"),
                            this.model.attributes.isBlocked && e.push("restriction-list-item-blocked"),
                            e.join(" ")
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click ": "item:edit",
                            "click .do-edit": "item:edit",
                            "click .do-delete": "item:delete",
                            "click .do-applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {}
                        };
                        this._subscriptions = e.subscriptions
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.$(".badge-tooltip, .apply-to-all-tooltip").tooltip()
                    }
                }, {
                    key: "_formatWeekdays",
                    value: function() {
                        return new f.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatWeekdays()
                    }
                }, {
                    key: "_formatTime",
                    value: function() {
                        return new f.TimeFrameViewHelpers({
                            timeFrame: this.getTimeFrame()
                        }).formatHours()
                    }
                }, {
                    key: "_formatDriveProfile",
                    value: function(e) {
                        var t = "",
                            i = e.isAllVehicles() ? I18n.t("restrictions.editing.driving.all_vehicles") : this._formatVehicleTypes(e.getVehicleTypes()),
                            n = e.getNumPassengers();
                        if (t = n > 0 ? i + " (+" + n + ")" : i,
                            e.hasSubscriptions()) {
                            var s = e.getSubscriptions().map(this._formatSubscription, this);
                            t = t + " " + I18n.t("restrictions.editing.driving.prepositions.with") + " " + s
                        }
                        return t
                    }
                }, {
                    key: "_formatSubscription",
                    value: function(e) {
                        return this._subscriptions.hasOwnProperty(e) ? this._subscriptions[e] : e
                    }
                }, {
                    key: "_formatSummary",
                    value: function() {
                        var e = this,
                            t = this.getRestriction(),
                            i = void 0;
                        return i = t.isBlockedModality() ? t.getDriveProfileList(g.RESTRICTION_TYPE.BLOCKED) : t.getDriveProfileList(g.RESTRICTION_TYPE.FREE),
                            i.isEmpty() ? I18n.t("restrictions.editing.driving.all_vehicles") : i.getDriveProfiles().map(function(t) {
                                return e._formatDriveProfile(t)
                            }).join(", ")
                    }
                }, {
                    key: "_formatVehicleTypes",
                    value: function(e) {
                        var t = _.invert(m.VEHICLE_TYPES);
                        return e.map(function(e) {
                            return I18n.t("restrictions.vehicle_types." + t[e])
                        }).join(", ")
                    }
                }, {
                    key: "_formatLane",
                    value: function() {
                        var e = this.getRestriction();
                        if (e instanceof v.SegmentRestriction) {
                            var t = e.getDisposition(),
                                i = _.invert(v.RESTRICTION_SEGMENT_DISPOSITION)[t];
                            return I18n.t("restrictions.summary.disposition." + i)
                        }
                        return ""
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.options.canEditRestrictions && this.getRestriction().isEditable(),
                            t = e && this.options.canApplyToAll;
                        return {
                            laneStr: this._formatLane(),
                            daysStr: this._formatWeekdays(),
                            timeStr: this._formatTime(),
                            summaryStr: this._formatSummary(),
                            canModifyRestriction: e,
                            canApplyToAll: t
                        }
                    }
                }, {
                    key: "getRestriction",
                    value: function() {
                        return this.model.getRestriction()
                    }
                }, {
                    key: "getTimeFrame",
                    value: function() {
                        return this.model.getRestriction().getTimeFrame()
                    }
                }, {
                    key: "getDriveProfileList",
                    value: function() {
                        return this.model.getRestriction().getDriveProfileList()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_list_item"
                    }
                }]),
                t
        }(Marionette.View),
        E = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "tbody"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return b
                    }
                }, {
                    key: "childViewTriggers",
                    value: function() {
                        return {
                            "item:edit": "item:edit",
                            "item:delete": "item:delete",
                            "item:applyToAll": "item:applyToAll"
                        }
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return {
                            canApplyToAll: this._canApplyToAll,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._subscriptions
                        }
                    }
                }, {
                    key: "filter",
                    value: function(e, t, i) {
                        return !e.getRestriction().isDifficult()
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            restrictions: [],
                            canApplyToAll: !1,
                            canEditRestrictions: !1,
                            subscriptions: {}
                        };
                        this._canEditRestrictions = e.canEditRestrictions,
                            this._canApplyToAll = e.canApplyToAll,
                            this._subscriptions = e.subscriptions,
                            this.collection = new Backbone.Collection(e.restrictions.map(function(e) {
                                return y.for(e)
                            }))
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = {
            RestrictionsListView: E
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = {
            NONE: "NONE",
            TURN_LEFT: "TURN_LEFT",
            TURN_RIGHT: "TURN_RIGHT",
            KEEP_LEFT: "KEEP_LEFT",
            KEEP_RIGHT: "KEEP_RIGHT",
            CONTINUE: "CONTINUE",
            EXIT_LEFT: "EXIT_LEFT",
            EXIT_RIGHT: "EXIT_RIGHT",
            UTURN: "UTURN"
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = {
            virtualVertices: {
                strokeWidth: 2,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 4,
                fillColor: "#ffffff",
                fillOpacity: .6
            },
            permalinkMarker: new OL.StyleMap({
                default: new OL.Style({
                    externalGraphic: i(223),
                    graphicYOffset: -53,
                    graphicWidth: 37,
                    graphicHeight: 53
                })
            })
        },
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/location-pin9ec58e180e175fd30652e4c15b957a95.png"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(47),
        r = n(s),
        o = i(91),
        a = n(o),
        l = void 0,
        u = OpenLayers.Class({
            LocalStorageKey: "keyboardShortcuts",
            shortcutToAction: null,
            events: null,
            _futureShortcutsByAction: {},
            SpecialKeys: {
                32: "Space",
                38: "↑",
                39: "→",
                40: "↓",
                37: "←",
                9: "Tab",
                46: "Del",
                187: "=",
                189: "-"
            },
            $element: null,
            Modifiers: {
                C: 1,
                S: 2,
                A: 4
            },
            BitToModifier: null,
            ModifierToBrowserEvent: null,
            BrowserEventToModifier: {
                altKey: "A",
                metaKey: "C",
                ctrlKey: "C",
                shiftKey: "S"
            },
            Groups: {
                default: {
                    members: []
                },
                navigation: {
                    members: []
                },
                editing: {
                    members: []
                },
                drawing: {
                    members: []
                },
                layers: {
                    members: []
                }
            },
            Actions: null,
            initialize: function(e) {
                var t = this;
                this.shortcutToAction = {},
                    this.Actions = {},
                    this.$element = e || $(window),
                    this.events = new OpenLayers.Events(this),
                    this.registerActions(),
                    W.app.on("change:loggedIn", function() {
                        t._enableShortcutsByRank(W.app.get("user"))
                    })
            },
            _enableShortcutsByRank: function(e) {
                var t = null != e;
                if (W.Config.big_junctions.enable)
                    return this.setActionEnabled("drawBigJunction", t && W.loginManager.canEditBigJunctions())
            },
            activate: function() {
                return this.$element.bind("keydown.shortcuts", OpenLayers.Function.bind(this.onKeyDown, this))
            },
            addAction: function(e, t) {
                return t = t || {},
                    OpenLayers.Util.applyDefaults(t, {
                        changeable: !0,
                        group: "default"
                    }),
                    t.name = e,
                    this.Groups[t.group].members.push(t),
                    t.id = e,
                    t.enabled = !0,
                    this.Actions[e] = t,
                    this.events.addEventType(e)
            },
            setActionEnabled: function(e, t) {
                this.Actions[e].enabled = t
            },
            registerShortcut: function(e, t, i) {
                null != this._futureShortcutsByAction[t] && (e = this._futureShortcutsByAction[t],
                    i = !0,
                    delete this._futureShortcutsByAction[t]);
                var n = void 0;
                if (n = i ? l.prototype.fromString(e) : l.prototype.fromEmacsNotation(e),
                    t = this.Actions[t]) {
                    var s = this.shortcutToAction[n];
                    s && (delete this.shortcutToAction[s.shortcut],
                            delete s.shortcut),
                        t.shortcut && delete this.shortcutToAction[t.shortcut],
                        this.shortcutToAction[n] = t,
                        t.shortcut = n
                }
            },
            _registerShortcuts: function(e) {
                var t = this;
                return Object.forEach(e, function(e, i) {
                    return t.registerShortcut(e, i)
                })
            },
            registerDefaultShortcuts: function() {
                this._registerShortcuts({
                        "S+191": "showShortcutsDialog",
                        "C+z": "undo",
                        "CS+z": "redo",
                        "C+s": "save",
                        "AS+r": "reloadData",
                        i: "drawSegment",
                        o: "drawRoundabout",
                        j: "drawBigJunction",
                        l: "displayLayerSwitcher",
                        s: "spreadArrows",
                        a: "hideArrows",
                        "S+z": "showAllArrows",
                        "S+d": "colorEmptyStreets",
                        "S+w": "closeStreetView",
                        q: "disallowAllConnections",
                        w: "allowAllConnections",
                        m: "toggleMultipleSelection",
                        r: "toggleSegmentDirection",
                        e: "editSegmentAddress",
                        h: "editHouseNumbers",
                        c: "editClosures",
                        t: "editRestrictions",
                        "C+a": "selectEntireStreet",
                        "C+38": "increaseSegmentLevel",
                        "C+40": "decreaseSegmentLevel",
                        38: "panUp",
                        39: "panRight",
                        40: "panDown",
                        37: "panLeft",
                        "S+38": "zoomIn",
                        "S+40": "zoomOut",
                        f: "search",
                        221: "nextFeedItem",
                        219: "prevFeedItem",
                        "S+i": "toggleSatelliteImagery",
                        "S+g": "toggleGPSpoints",
                        "S+r": "toggleRoads",
                        "S+m": "toggleMapcomments",
                        "S+a": "toggleAreaManagers",
                        "S+b": "toggleJunctionboxes",
                        "S+s": "toggleSpeedcameras",
                        "S+p": "toggleMapProblems",
                        "S+u": "toggleUpdateRequests",
                        "S+e": "toggleEditableAreas",
                        "S+c": "toggleRoadClosures",
                        "S+v": "toggleLiveUsers",
                        "S+l": "togglePlaces"
                    }),
                    W.Config.chat.enable && this.registerShortcut("A+c", "toggleChat")
            },
            onKeyDown: function(e) {
                var t = $(e.target);
                if (!t.is(":input") || t.is("input[type=radio],input[type=checkbox]")) {
                    var i = new l(e),
                        n = this.shortcutToAction[i];
                    return n && !0 === n.enabled ? (this.events.triggerEvent(n.id, {
                        action: n
                    }), !1) : void 0
                }
            },
            registerActions: function() {
                this.addAction("undo"),
                    this.addAction("redo"),
                    this.addAction("save"),
                    this.addAction("delete", {
                        changeable: !1
                    }),
                    this.addAction("search"),
                    this.addAction("reloadData"),
                    this.addAction("drawSegment", {
                        group: "drawing"
                    }),
                    this.addAction("drawRoundabout", {
                        group: "drawing"
                    }),
                    W.Config.big_junctions.enable && this.addAction("drawBigJunction", {
                        group: "drawing",
                        enabled: !1
                    }),
                    this.addAction("displayLayerSwitcher", {
                        group: "layers"
                    }),
                    this.addAction("spreadArrows", {
                        group: "layers"
                    }),
                    this.addAction("hideArrows", {
                        group: "layers"
                    }),
                    this.addAction("showAllArrows", {
                        group: "layers"
                    }),
                    this.addAction("colorEmptyStreets", {
                        group: "layers"
                    }),
                    this.addAction("closeStreetView", {
                        group: "layers"
                    }),
                    W.Config.chat.enable && this.addAction("toggleChat", {
                        group: "layers"
                    }),
                    this.addAction("toggleMultipleSelection", {
                        group: "editing"
                    }),
                    this.addAction("allowAllConnections", {
                        group: "editing"
                    }),
                    this.addAction("disallowAllConnections", {
                        group: "editing"
                    }),
                    this.addAction("toggleSegmentDirection", {
                        group: "editing"
                    }),
                    this.addAction("editSegmentAddress", {
                        group: "editing"
                    }),
                    this.addAction("editHouseNumbers", {
                        group: "editing"
                    }),
                    this.addAction("editClosures", {
                        group: "editing"
                    }),
                    this.addAction("editRestrictions", {
                        group: "editing"
                    }),
                    this.addAction("selectEntireStreet", {
                        group: "editing"
                    }),
                    this.addAction("increaseSegmentLevel", {
                        group: "editing"
                    }),
                    this.addAction("decreaseSegmentLevel", {
                        group: "editing"
                    }),
                    this.addAction("showShortcutsDialog", {
                        changeable: !1
                    }),
                    this.addAction("panUp", {
                        group: "navigation"
                    }),
                    this.addAction("panDown", {
                        group: "navigation"
                    }),
                    this.addAction("panLeft", {
                        group: "navigation"
                    }),
                    this.addAction("panRight", {
                        group: "navigation"
                    }),
                    this.addAction("zoomIn", {
                        group: "navigation"
                    }),
                    this.addAction("zoomOut", {
                        group: "navigation"
                    }),
                    this.addAction("nextFeedItem"),
                    this.addAction("prevFeedItem"),
                    this.addAction("toggleSatelliteImagery", {
                        group: "layers",
                        toggler: "ITEM_SATELLITE_IMAGERY"
                    }),
                    this.addAction("toggleGPSpoints", {
                        group: "layers",
                        toggler: "ITEM_GPS_POINTS"
                    }),
                    this.addAction("toggleRoads", {
                        group: "layers",
                        toggler: "ITEM_ROAD"
                    }),
                    this.addAction("toggleMapcomments", {
                        group: "layers",
                        toggler: "ITEM_MAP_COMMENTS"
                    }),
                    this.addAction("toggleAreaManagers", {
                        group: "layers",
                        toggler: "ITEM_AREA_MANAGERS"
                    }),
                    this.addAction("toggleJunctionboxes", {
                        group: "layers",
                        toggler: "ITEM_JUNCTION_BOXES"
                    }),
                    this.addAction("toggleSpeedcameras", {
                        group: "layers",
                        toggler: "ITEM_SPEED_CAMERAS"
                    }),
                    this.addAction("toggleMapProblems", {
                        group: "layers",
                        toggler: "ITEM_MAP_PROBLEMS"
                    }),
                    this.addAction("toggleUpdateRequests", {
                        group: "layers",
                        toggler: "ITEM_UPDATE_REQUESTS"
                    }),
                    this.addAction("toggleEditableAreas", {
                        group: "layers",
                        toggler: "ITEM_EDITABLE_AREAS"
                    }),
                    this.addAction("toggleRoadClosures", {
                        group: "layers",
                        toggler: "ITEM_CLOSURES"
                    }),
                    this.addAction("toggleLiveUsers", {
                        group: "layers",
                        toggler: "ITEM_LIVE_USERS"
                    }),
                    this.addAction("togglePlaces", {
                        group: "layers",
                        toggler: "GROUP_PLACES"
                    })
            },
            persist: function() {
                return window.localStorage.setItem(this.LocalStorageKey, (0,
                    a.default)(this.serialize()))
            },
            restore: function() {
                var e = this,
                    t = window.localStorage.getItem(this.LocalStorageKey);
                if (!t)
                    return !1;
                try {
                    t = JSON.parse(t)
                } catch (e) {
                    return !1
                }
                return Object.forEach(t, function(t, i) {
                    null != e.Actions[t] ? e.registerShortcut(i, t, !0) : e._futureShortcutsByAction[t] = i
                }), !0
            },
            serialize: function() {
                var e = {};
                return (0,
                        r.default)(this.Actions).forEach(function(t) {
                        var i = t.shortcut || l.getEmpty();
                        e[t.id] = i.toString()
                    }),
                    e
            },
            CLASS_NAME: "Waze.Control.KeyboardShortcuts"
        });
    l = OpenLayers.Class({
            ctrlKey: !1,
            metaKey: !1,
            altKey: !1,
            shiftKey: !1,
            keyCode: null,
            initialize: function(e) {
                e && (this.ctrlKey = e.ctrlKey,
                    this.altKey = e.altKey,
                    this.shiftKey = e.shiftKey,
                    this.metaKey = e.metaKey,
                    this.keyCode = e.which)
            },
            toString: function() {
                var e = this,
                    t = 0;
                return Object.forEach(u.prototype.BrowserEventToModifier, function(i, n) {
                        e[i] && (t |= u.prototype.Modifiers[n])
                    }),
                    t + "," + this.keyCode
            },
            isEmpty: function() {
                return -1 === this.keyCode || "-1" === this.keyCode
            },
            fromString: function(e) {
                var t = e.split(","),
                    i = t.first(),
                    n = t.last(),
                    s = new l;
                return Object.forEach(u.prototype.BrowserEventToModifier, function(e, t) {
                        u.prototype.Modifiers[t] & i && (s[e] = !0)
                    }),
                    s.keyCode = n,
                    s
            },
            fromEmacsNotation: function(e) {
                var t = e.split("+"),
                    i = t.first(),
                    n = t.last(),
                    s = new l;
                return 1 === t.length && (i = ""),
                    1 === n.length && (n = n.toUpperCase().charCodeAt()),
                    s.keyCode = n,
                    i.split("").forEach(function(e) {
                        var t = u.prototype.ModifierToBrowserEvent[e];
                        s[t] = !0
                    }),
                    s
            }
        }),
        l.getEmpty = function() {
            var e = new l;
            return e.keyCode = -1,
                e
        },
        u.prototype.BitToModifier = {},
        Object.forEach(u.prototype.Modifiers, function(e, t) {
            return u.prototype.BitToModifier[t] = e
        }),
        u.prototype.ModifierToBrowserEvent = {},
        Object.forEach(u.prototype.BrowserEventToModifier, function(e, t) {
            return u.prototype.ModifierToBrowserEvent[t] = e
        }),
        u.KeyStroke = l,
        t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(720),
        s = i(68),
        r = i(133),
        o = OpenLayers.Class({
            COOKIE_NAME: "_web_session",
            CSRF_COOKIE_NAME: "_csrf_token",
            CSRF_HTTP_METHODS: /^(post|delete)$/,
            NOT_LOGGED_IN_CODE: 100,
            INVALID_CSRF_CODE: 103,
            UNAUTHORIZED_CODE: 403,
            events: null,
            expired: !1,
            returningUser: !1,
            user: null,
            getLoggedInUser: function() {
                var e = this;
                return null !== this.user ? this.user : $.get(Waze.Config.paths.auth, {
                    language: I18n.locale
                }).then(function(t) {
                    e.user = new n(t, {
                        parse: !0
                    })
                }).always(function(t) {
                    e.events.triggerEvent("loginStatus", {
                        user: e.user,
                        automatic: !0
                    })
                }).promise()
            },
            initialize: function() {
                this.events = new OpenLayers.Events(this),
                    $(document).ajaxError($.proxy(this._onServerResponse, this)),
                    $.ajaxPrefilter($.proxy(this._addCsrfToken, this))
            },
            _addCsrfToken: function(e, t, i) {
                var n = e.type || "";
                n = n.toLowerCase(),
                    this.CSRF_HTTP_METHODS.test(n) && !e.crossDomain && i.setRequestHeader("X-CSRF-Token", $.cookie(this.CSRF_COOKIE_NAME))
            },
            _onServerResponse: function(e, t) {
                if (this.hasUser() && !this.expired && t.status === this.UNAUTHORIZED_CODE)
                    try {
                        var i = JSON.parse(t.responseText),
                            n = i.errorList[0];
                        n.code !== this.INVALID_CSRF_CODE && n.code !== this.NOT_LOGGED_IN_CODE || (this.previousUser = this.user,
                            this.expired = !0,
                            this.returningUser = !1,
                            this.events.triggerEvent("sessionExpired"))
                    } catch (e) {}
            },
            hasUser: function() {
                return null !== this.user
            },
            isLoggedIn: function() {
                return null !== this.user && !this.expired
            },
            isFirstLogin: function() {
                return this.user && this.user.isFirstLogin
            },
            getUserRank: function() {
                return this.isLoggedIn() ? this.user.rank : s.prototype.MaxLevel
            },
            isAdOperator: function() {
                return !!this.isLoggedIn() && this.user.adOperator
            },
            canEditPlaceUpdates: function() {
                return this.getUserRank() >= r.MIN_EDIT_RANK || this.isAdOperator()
            },
            canEditAdLockedPlaceUpdates: function() {
                return this.getUserRank() >= s.prototype.StaffRank || this.isAdOperator()
            },
            canEditBigJunctions: function() {
                return this.getUserRank() >= W.Config.big_junctions.minRank
            },
            login: function(e, t) {
                var i = this;
                return this.expired && e !== this.user.userName && !1 === this.events.triggerEvent("beforeloginchanged") ? $.Deferred().resolve().promise() : this.doLogin(e, t).done(function(e) {
                    var t = new n(e, {
                        parse: !0
                    });
                    i.returningUser = i.hasUser() && i.user.userName === t.userName,
                        i.user = t,
                        i.expired = !1,
                        i.events.triggerEvent("login", {
                            user: i.user
                        })
                }).fail(function(e) {
                    i.events.triggerEvent("loginfailed", e)
                }).promise()
            },
            getCsrfToken: function() {
                var e = $.cookie(this.CSRF_COOKIE_NAME);
                return null !== e ? e : $.get("/login/get")
            },
            doLogin: function(e, t) {
                var i = $.Deferred(),
                    n = function() {
                        return $.post(Waze.Config.loginPath, {
                            user_id: e,
                            password: t
                        })
                    };
                return $.when(this.getCsrfToken()).then(n).done(function(e) {
                        e.reply && e.reply.login ? (i.resolve(),
                            W.Report.loginAction("login_success")) : (i.reject({
                                status: 406
                            }),
                            W.Report.loginAction("login_invalid"))
                    }).fail(function() {
                        i.reject({
                            status: 500
                        })
                    }),
                    i.then(function() {
                        return $.get(Waze.Config.paths.auth)
                    })
            },
            logout: function() {
                null !== this.user && !1 !== this.events.triggerEvent("beforeloginchanged") && (this.user = null,
                    this.expired = !1,
                    this.returningUser = !1,
                    $.cookie(this.COOKIE_NAME, null, {
                        path: "/"
                    }),
                    $.cookie(this.CSRF_COOKIE_NAME, null, {
                        path: "/"
                    }),
                    this.events.triggerEvent("logout", {
                        user: null,
                        logout: !0
                    }))
            },
            CLASS_NAME: "Waze.LoginManager"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(722),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(197),
        o = {
            strokeColor: "#ca9ace",
            fillColor: "#c290c6",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        a = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: "white",
            fillColor: "#c290c6",
            graphicZIndex: 0,
            fillOpacity: 1
        },
        l = {
            CAR_SERVICES: s.default.toUnicode("waze-icon-place-car"),
            CULTURE_AND_ENTERTAINEMENT: s.default.toUnicode("waze-icon-place-culture"),
            FOOD_AND_DRINK: s.default.toUnicode("waze-icon-place-food-drink"),
            LODGING: s.default.toUnicode("waze-icon-place-lodging"),
            NATURAL_FEATURES: s.default.toUnicode("waze-icon-place-natural"),
            OTHER: s.default.toUnicode("waze-icon-place-other"),
            OUTDOORS: s.default.toUnicode("waze-icon-place-outdoors"),
            PROFESSIONAL_AND_PUBLIC: s.default.toUnicode("waze-icon-place-professional"),
            SHOPPING_AND_SERVICES: s.default.toUnicode("waze-icon-place-shopping"),
            TRANSPORTATION: s.default.toUnicode("waze-icon-place-transportation")
        },
        u = function(e) {
            var t = W.defaultRule({
                Point: a,
                Polygon: o
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    },
                    getCategoryIcon: function(e) {
                        var t = void 0;
                        return e.model && (t = e.model.getMainCategory()),
                            l[t] || ""
                    }
                }
            })
        },
        d = W.defaultRule({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                pointRadius: 28,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        c = W.defaultRule({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        h = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        p = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        f = W.rule("isApproved", !1, {
            Point: {
                pointRadius: 6,
                fillColor: "#c290c6",
                strokeWidth: 3,
                strokeColor: "#00ece3"
            },
            Polygon: {
                fillColor: "#ca9ace",
                strokeColor: "#00ece3",
                strokeDashstyle: "dash"
            }
        }),
        g = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        }),
        m = W.rule("isResidential", !0, {
            graphicName: "triangle"
        });
    t.default = new OL.StyleMap({
            default: u([g, r.DragPointRule, h, f, m]),
            highlight: u([W.defaultRule({
                Point: {
                    fontFamily: s.default.fontFamily,
                    label: "${getCategoryIcon}",
                    labelOutlineWidth: 0,
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: "#ca9ace",
                    fillOpacity: 1,
                    strokeOpacity: 1
                },
                Polygon: {
                    strokeColor: "#ca9ace",
                    fillColor: "#ca9ace"
                }
            }), g, r.DragPointHighlightRule, p, m]),
            select: u([d]),
            highlightselected: u([d]),
            delete: u([c]),
            highlightdeleted: u([c])
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = new OpenLayers.Style({
            strokeOpacity: 1,
            strokeDashstyle: "dash",
            strokeColor: "#ff8383",
            strokeWidth: 2
        }),
        s = {
            strokeWidth: 6,
            strokeOpacity: 1
        },
        r = function(e) {
            var t = W.defaultRule({
                Line: s
            });
            return new OL.Style(null, {
                rules: [t].concat(e)
            })
        };
    t.default = new OpenLayers.StyleMap({
            default: r([W.rule("isUnchanged", !0, {
                strokeOpacity: 0
            }), W.rule("isUnchanged", !1, {
                strokeColor: "#ff8383"
            })]),
            highlight: r([W.defaultRule({
                strokeColor: "#00ece3"
            }), W.rule("isUnchanged", !1, {
                strokeColor: "#eb7171"
            })]),
            select: r(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            highlightselected: r(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            delete: n,
            highlightdeleted: n,
            drag: r(W.defaultRule({
                strokeColor: "#00ece3"
            })),
            flash: r(W.defaultRule({
                strokeColor: "#000010",
                strokeOpacity: .8
            }))
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style({
                fillOpacity: .3,
                strokeOpacity: .7,
                strokeWidth: 2,
                strokeColor: "#333",
                label: "${getLabel}",
                fontColor: "#333",
                labelOutlineColor: "white",
                labelOutlineWidth: 2,
                fontSize: 14,
                fontWeight: "bold",
                fillColor: "${getFillColor}"
            }, {
                context: {
                    getLabel: function(e) {
                        return e.model.getUserName()
                    },
                    getFillColor: function(e) {
                        return "#" + (e.model.userID % 16777216).toString(16)
                    }
                }
            }),
            highlight: new OpenLayers.Style({
                strokeOpacity: 1,
                strokeWidth: 3,
                fontSize: 18
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        o = i(150),
        a = n(o),
        l = {
            open: "open",
            solved: "solved",
            rejected: "rejected"
        },
        u = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new r.default("map-problem"),
                    i = this.model.getLocation(),
                    n = new OL.LonLat(i.x, i.y);
                OL.Marker.prototype.initialize.call(this, n, t),
                    this.render(),
                    this.icon.$div.data("model", this.model)
            },
            render: function() {
                var e = this.icon.$div;
                e.attr("data-id", this.model.getID());
                var t = e.hasClass("selected");
                return e.removeClass(),
                    e.addClass("map-problem"),
                    e.toggleClass("selected", t),
                    e.toggleClass("uneditable", !this.model.editable),
                    e.toggleClass("recently-closed", this.model.isRecentlyClosed()),
                    e.addClass(this.model.attributes.severity),
                    e.addClass(this._getState())
            },
            _getState: function() {
                return this.model.attributes.open ? l.open : this.model.attributes.resolution === a.default.FIXED ? l.solved : l.rejected
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        $el: null,
        copied: null,
        events: null,
        clipboardActive: !1,
        $clipboardEl: null,
        $clipboardContainer: null,
        initialize: function(e) {
            return this.$el = e,
                this.events = new OL.Events(this),
                this
        },
        setEl: function(e) {
            return this.$el = e,
                this.$el.on({
                    mouseover: $.proxy(this._onMouseOver, this),
                    mouseout: $.proxy(this._onMouseOut, this),
                    scope: this
                })
        },
        _onMouseOver: function() {
            return $(document).on({
                keydown: $.proxy(this._onKeyDown, this),
                keyup: $.proxy(this._onKeyUp, this)
            })
        },
        _onMouseOut: function() {
            return $(document).off({
                    keydown: $.proxy(this._onKeyDown, this),
                    keyup: $.proxy(this._onKeyUp, this)
                }),
                this._detachClipboard()
        },
        _onKeyDown: function(e) {
            var t = this;
            if (this.copied = !1,
                this.value && (e.ctrlKey || e.metaKey) && (67 === e.keyCode && (this.copied = !0), !$(e.target).is("input:visible,textarea:visible")))
                return _.defer(function() {
                    null == t.$clipboardContainer && (t.$clipboardContainer = $("<div class='clipboard-container'></div>")),
                        t.$clipboardContainer.appendTo($(document.body)),
                        t.$clipboardContainer.empty().show(),
                        t.$clipboardEl = $("<textarea />").val(t.value).appendTo(t.$clipboardContainer).focus().select(),
                        t.clipboardActive = !0
                })
        },
        _onKeyUp: function(e) {
            $(e.target).is(this.$clipboardEl) && (this.copied && this.events.triggerEvent("copied", this.$clipboardEl.val()),
                    this._detachClipboard()),
                this.copied = !1
        },
        _detachClipboard: function() {
            this.clipboardActive && (this.$clipboardContainer.empty().detach(),
                this.clipboardActive = !1)
        },
        set: function(e) {
            this.value = e
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(782),
        r = n(s),
        o = i(234),
        a = n(o),
        l = i(235),
        u = n(l),
        d = i(16),
        c = n(d),
        h = Marionette.View.extend({
            APPROVE_ACTION_NAMES: {
                default: I18n.t("venues.update_requests.panel.action.approve"),
                ADD_VENUE: I18n.t("venues.update_requests.panel.action.add_to_map")
            },
            HIDE_PLACE_DETAILS: {
                ADD_VENUE: !0
            },
            template: "templates/place_updates/item",
            events: {
                "change [name=approved]": "_onApproveChanged",
                "click .image-preview": "_onImagePreviewClicked",
                "click .focus": "_onFocusClicked"
            },
            ui: {
                approvedDropdown: "[name=approved]",
                header: ".header",
                scrollable: ".scrollable",
                actions: ".actions"
            },
            fieldChangeView: null,
            imageDialogView: null,
            bodyScrollPosition: null,
            rendered: !1,
            maxHeight: null,
            initialize: function() {
                return this.listenTo(this.model, "change:approved", this._onModelChanged)
            },
            serializeData: function() {
                return {
                    model: this.model,
                    venue: this.options.venue,
                    hidePlaceDetails: Boolean(this.HIDE_PLACE_DETAILS[this.model.get("updateType")]),
                    showDebug: this.options.showDebug
                }
            },
            _onModelChanged: function() {
                return this.render()
            },
            _onApproveChanged: function() {
                var e = this.ui.approvedDropdown.filter(":checked").booleanVal(),
                    t = new a.default(this.options.venue, this.model, e);
                this.options.venue.model.actionManager.add(t);
                var i = "" + this.model.get("updateType"),
                    n = null != e ? e ? 1 : -1 : null;
                null != n && W.Report.placeUpdateRequestAction("update_state", i, n)
            },
            _onImagePreviewClicked: function(e) {
                var t = $(e.target).data("image-id"),
                    i = new u.default({
                        venue: this.options.venue,
                        imageId: t
                    });
                return W.app.layout.getRegion("dialogRegion").show(i),
                    e.preventDefault()
            },
            _onFocusClicked: function() {
                return this.trigger("focusClicked")
            },
            onRender: function() {
                this.rendered = !0,
                    "UPDATE_VENUE" === this.model.get("updateType") && (this.fieldChangeView && this.fieldChangeView.destroy(),
                        this.fieldChangeView = new r.default({
                            collection: new Backbone.Collection(this.model.get("changedFields"), {
                                sort: !1
                            }),
                            el: this.$(".changed-fields")
                        }),
                        this.fieldChangeView.render()),
                    this._setBodyHeight(),
                    this.ui.scrollable.scrollTop(this.bodyScrollPosition)
            },
            onDestroy: function() {
                if (this.fieldChangeView)
                    return this.fieldChangeView.destroy()
            },
            render: function() {
                return this.rendered && (this.bodyScrollPosition = this.ui.scrollable.scrollTop()),
                    Marionette.View.prototype.render.apply(this, arguments)
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setBodyHeight()
            },
            _setBodyHeight: function() {
                var e = this.ui.header.outerHeight(),
                    t = this.ui.actions.outerHeight();
                return this.ui.scrollable.css({
                    maxHeight: this.maxHeight - e - t
                })
            },
            templateContext: {
                getTitle: function() {
                    var e = this.model.get("updateType");
                    return I18n.t("venues.update_requests.panel.title." + e)
                },
                getApproveActionName: function() {
                    var e = this.model.get("updateType"),
                        t = h.prototype.APPROVE_ACTION_NAMES;
                    return t[e] || t.default
                },
                getChangesTemplate: function() {
                    return "templates/place_updates/" + this.model.get("updateType").toLowerCase()
                },
                getApproveActionIntent: function() {
                    return "default"
                },
                getRejectActionName: function() {
                    return I18n.t("venues.update_requests.panel.action.reject")
                },
                getNoPermissionsMessage: function() {
                    if (this.model.get("isInEditArea")) {
                        var e = this.model.getRequiredEditRank(),
                            t = c.default.formatRank(e);
                        return I18n.t("venues.update_requests.panel.uneditable", {
                            level: t
                        })
                    }
                    return I18n.t("venues.update_requests.panel.out_of_edit_area")
                },
                getNewPlaceImages: function() {
                    return this.model.get("place").getImagesByUserId(this.model.get("createdBy"))
                },
                shouldShowCarousel: function() {
                    return this.getNewPlaceImages().length > 1
                },
                shouldShowName: function() {
                    return !this.model.get("place").attributes.residential
                },
                getCarouselUniqueId: function() {
                    return "place-update-carousel-" + this.model.get("id").replace(/[^\d\w]/g, "")
                }
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(16),
        r = n(s),
        o = i(783),
        a = n(o),
        l = i(233),
        u = n(l),
        d = Marionette.View.extend({
            tagName: "li",
            template: "templates/place_updates/changed_field",
            events: {
                "mouseover .location-button.current": "_onCurrentOver",
                "mouseover .location-button.suggested": "_onSuggestedOver",
                "mouseout .location-button.current": "_onLocationOut",
                "mouseout .location-button.suggested": "_onLocationOut"
            },
            behaviors: {
                ToolTip: {
                    behaviorClass: u.default,
                    layerClassName: "suggested-geometry-layer"
                }
            },
            regions: {
                externalProvidersRegion: ".external-providers-view"
            },
            onRender: function() {
                this.model.isExternalProvider() && this._showExternalProvidersView()
            },
            _showExternalProvidersView: function() {
                var e = new a.default({
                    venue: this.model.attributes.suggestedVenue
                });
                this.showChildView("externalProvidersRegion", e)
            },
            _onCurrentOver: function() {
                var e = this._getValue(this.model.get("venue")).getBounds().getCenterLonLat();
                this.triggerMethod("show:tooltip", e, I18n.t("venues.update_requests.panel.change.current_location"), "")
            },
            _onSuggestedOver: function() {
                var e = this._getValue(this.model.get("suggestedVenue")),
                    t = new OL.Feature.Vector(e),
                    i = e.getBounds().getCenterLonLat();
                this.triggerMethod("show:tooltip", i, I18n.t("venues.update_requests.panel.change.suggested_location"), "suggested", t)
            },
            _onLocationOut: function() {
                this.triggerMethod("hide:tooltip")
            },
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : e.attributes[t]
            },
            serializeData: function() {
                var e = this._getValue(this.model.get("venue")),
                    t = this._getValue(this.model.get("suggestedVenue")),
                    i = _.isArray(e) || _.isArray(t);
                return {
                    showChangeList: i,
                    changeList: i ? this.getChangeList() : null,
                    currentValue: e,
                    suggestedValue: t,
                    fieldName: this.model.get("fieldName"),
                    removing: !t,
                    isGeometry: this.model.isGeometry(),
                    isExternalProvider: this.model.isExternalProvider(),
                    model: this.model
                }
            },
            templateContext: {
                getRemovedImages: function() {
                    var e = this.model.get("venue"),
                        t = _(e.attributes.images),
                        i = _(this.model.get("suggestedVenue").attributes.images);
                    return _.difference(t.pluck("id"), i.pluck("id")).map(function(e) {
                        return t.find(function(t) {
                            return t.get("id") === e
                        })
                    })
                }
            },
            valueGetters: {
                streetID: function(e) {
                    return r.default.formatAddress(e.getAddress())
                },
                entryExitPoints: function(e) {
                    return e.getNavigationPoint().point
                },
                openingHours: function(e) {
                    return e.getOpeningHours().map(r.default.formatOpeningHour).join(", ")
                },
                services: function(e) {
                    return e.attributes.services.map(function(e) {
                        return I18n.t("venues.services." + e)
                    })
                },
                categories: function(e) {
                    return e.attributes.categories.map(function(e) {
                        return I18n.t("venues.categories." + e)
                    })
                },
                externalProviderIDs: function(e) {
                    return e.attributes.externalProviderIDs.map(function(e) {
                        return e.get("uuid")
                    })
                }
            },
            getChangeList: function() {
                var e = this._getValue(this.model.get("venue")),
                    t = this._getValue(this.model.get("suggestedVenue"));
                return this.model._getChangeList(e, t)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(226),
        r = n(s),
        o = i(19),
        a = n(o),
        l = Marionette.Behavior.extend({
            defaults: {
                layerClassName: ""
            },
            _markerLayer: null,
            _vectorLayer: null,
            _currentLocationDrawn: !1,
            initialize: function() {
                this._vectorLayer = new OL.Layer.Vector("", {
                        styleMap: r.default
                    }),
                    this._markerLayer = new OL.Layer.Markers(""),
                    W.map.addLayers([this._vectorLayer, this._markerLayer]),
                    $(this._vectorLayer.div).addClass(this.options.layerClassName)
            },
            _createTooltip: function(e, t, i) {
                var n = new OL.Marker(e, new a.default("location-tooltip " + i));
                return n.icon.$div.text(t),
                    this._markerLayer.addMarker(n)
            },
            _createFeature: function(e) {
                this._vectorLayer.addFeatures(e)
            },
            onShowTooltip: function(e, t, i, n) {
                this._currentLocationDrawn || (this._createTooltip(e, t, i),
                    n && this._createFeature(n),
                    this._currentLocationDrawn = !0)
            },
            onHideTooltip: function() {
                this._vectorLayer.removeAllFeatures(),
                    this._markerLayer.clearMarkers(),
                    this._currentLocationDrawn = !1
            },
            _destroyLayers: function() {
                this._vectorLayer && this._vectorLayer.destroy(),
                    this._markerLayer && this._markerLayer.destroy()
            },
            onDestroy: function() {
                this._destroyLayers()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(10),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            prevApproved: null,
            request: null,
            initialize: function(e, t, i, n) {
                this.venue = e,
                    this.request = t,
                    this.approved = i,
                    s.default.prototype.initialize.call(this, n)
            },
            doAction: function() {
                return this.prevApproved = this.request.get("approved"),
                    this.request.set({
                        approved: this.approved
                    }),
                    this.model.venues.changed(this.venue)
            },
            undoAction: function() {
                return this.request.set({
                        approved: this.prevApproved
                    }),
                    this.model.venues.changed(this.venue)
            },
            redoAction: function() {
                return this.request.set({
                        approved: this.approved
                    }),
                    this.model.venues.changed(this.venue)
            },
            serialize: function() {
                return {
                    _objectType: "venueUpdateRequest",
                    action: "UPDATE",
                    attributes: {
                        venueID: this.venue.getID(),
                        id: this.request.id,
                        approve: this.approved
                    }
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(78),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "templates/place_updates/image_dialog",
            image: null,
            initialize: function() {
                this.venue = this.options.venue,
                    this.image = this.venue.getImageById(this.options.imageId)
            },
            serializeData: function() {
                return {
                    imageUrl: this.image.getUrl(s.default.SIZE.BIG),
                    dateAdded: this.image.get("date"),
                    addingUserId: this.image.get("creatorUserId"),
                    venueName: this.venue.attributes.name
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        initialize: function() {
            return this.dfd = new $.Deferred,
                this
        },
        next: function() {
            if ("resolved" === this.dfd.state())
                throw new Error("next was already called");
            return this._resolve("next")
        },
        on: function(e, t) {
            return this.dfd.promise().done(function(i) {
                if (i === e)
                    return t()
            })
        },
        _resolve: function(e) {
            return this.dfd.resolve(e)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        OPEN: "open",
        SOLVED: "solved",
        NOT_IDENTIFIED: "not-identified"
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(239),
        u = n(l),
        d = i(809),
        c = n(d),
        h = i(810),
        p = n(h),
        f = i(812),
        g = n(f),
        m = Marionette.Object.extend({
            ignoredErrors: {
                100: !0
            },
            errorCollection: null,
            _editingLock: null,
            initialize: function() {
                return this.mediator = this.options.mediator,
                    this._lockEditing(),
                    this.overlayRenderer = new u.default(this.options.map),
                    this.overlayRenderer.drawOverlay(),
                    this.options.saveResult.done(_.bind(this._onSaveSuccess, this)),
                    this.options.saveResult.fail(_.bind(this._onSaveFail, this))
            },
            onDestroy: function() {
                return this._releaseEditing(),
                    this.overlayRenderer && this.overlayRenderer.destroy(),
                    this.errorListView && this.errorListView.destroy(),
                    this.successView && this.successView.destroy(),
                    W.accelerators.events.unregister("save", this, this._onSaveClicked)
            },
            _onSaveSuccess: function(e) {
                var t = this;
                return this._releaseEditing(),
                    this.overlayRenderer.destroy(),
                    this.trigger("saveSuccess"),
                    this.trigger("done"),
                    this._showSuccessMessage(e),
                    this.listenTo(this.successView, "destroy", function() {
                        return t.destroy()
                    })
            },
            _onSaveFail: function(e) {
                var t = this;
                return this.ignoredErrors[e[0].get("code")] ? void this.overlayRenderer.destroy() : (1 === e.length && this._showErrorPoint(e[0]),
                    e = this._collateErrors(e),
                    this.errorCollection = new c.default(e),
                    this.errorListView = new p.default({
                        collection: this.errorCollection
                    }),
                    this.listenTo(this.errorListView, "click:save", this._onSaveClicked),
                    this.listenTo(this.errorListView, "destroy", function() {
                        return t.trigger("done"),
                            t.destroy()
                    }),
                    this.listenTo(this.errorListView, "click:focus", this._showErrorPoint),
                    W.accelerators.events.register("save", this, this._onSaveClicked),
                    this.options.popoverRegion.show(this.errorListView))
            },
            _collateErrors: function(e) {
                var t = [],
                    i = _.groupBy(e, function(e) {
                        return e.get("code")
                    }),
                    n = !0,
                    s = !1,
                    o = void 0;
                try {
                    for (var l, u = (0,
                            a.default)((0,
                            r.default)(i)); !(n = (l = u.next()).done); n = !0) {
                        e = i[l.value];
                        var d = e[0];
                        e.length > 1 && d.set({
                                geometry: null,
                                collatedCount: e.length,
                                ignorable: _.every(e, function(e) {
                                    return e.get("ignorable")
                                })
                            }),
                            t.push(d)
                    }
                } catch (e) {
                    s = !0,
                        o = e
                } finally {
                    try {
                        !n && u.return && u.return()
                    } finally {
                        if (s)
                            throw o
                    }
                }
                return t
            },
            _releaseEditing: function() {
                this.mediator.set({
                        navigation: !0
                    }),
                    this.mediator.releaseEditing(this._editingLock),
                    this._editingLock = null
            },
            _lockEditing: function() {
                this.mediator.set({
                        navigation: !1
                    }),
                    this._editingLock = this.mediator.lockEditing()
            },
            _showErrorPoint: function(e) {
                var t = e.get("geometry");
                if (null !== t)
                    return this.overlayRenderer.drawAndFocusSpotlightAtPoint(t)
            },
            _onSaveClicked: function() {
                if (this.errorCollection.isIgnorable())
                    return this.trigger("resave")
            },
            _showSuccessMessage: function(e) {
                return this.successView = new g.default({
                        model: e
                    }),
                    this.options.popoverRegion.show(this.successView)
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(42),
        r = n(s),
        o = i(807),
        a = n(o),
        l = {
            fillColor: "black",
            strokeWidth: 0,
            fillOpacity: .65,
            mask: "url(#spotlightMask)"
        },
        u = {
            maskID: "spotlightMask",
            filter: "url(#spotlightBlur)",
            pointRadius: 70,
            fillColor: "black",
            fillOpacity: 1,
            animation: {
                id: "spotlightAnimation",
                attributeName: "r",
                dur: "0.3s",
                from: 100,
                to: 70,
                fill: "disable",
                begin: "indefinite"
            }
        },
        d = {
            id: "homeSpotlightAnimation",
            attributeName: "r",
            dur: "0.7s",
            from: 400,
            to: 200,
            fill: "freeze",
            begin: "indefinite",
            calcMode: "spline",
            keyTimes: "0;1",
            keySplines: ".4 0 .4 1.3"
        },
        c = OL.Class({
            layer: null,
            overlay: null,
            disableTimeout: 0,
            removeTimeout: 0,
            fadeDuration: 400,
            spotLightDuration: 3e3,
            homeSpotLightRadius: 450,
            homeAnimationZoom: 4,
            initialize: function(e) {
                this.map = e
            },
            _ensureLayer: function() {
                if (null == this.layer)
                    return this.layer = new OL.Layer.Vector("spotlight", {
                            renderers: [r.default],
                            styleMap: a.default
                        }),
                        this.removeTimeout && window.clearTimeout(this.removeTimeout),
                        this.fadeIn(this.fadeDuration),
                        this.map.addLayer(this.layer)
            },
            drawOverlay: function() {
                this._ensureLayer();
                var e = this.map.getExtent().scale(2).toGeometry(),
                    t = new OL.Feature.Vector(e, null, l);
                return this.layer.addFeatures(t)
            },
            drawAndFocusSpotlightAtPoint: function(e, t, i) {
                this._isSpotlightInBounds(e) || this.map.setCenter(new OL.LonLat(e.x, e.y)),
                    this._destroyLayer(),
                    this._ensureLayer(),
                    this.drawOverlay(),
                    t || (t = u);
                var n = new OL.Feature.Vector(e.clone(), null, t);
                this.layer.addFeatures(n);
                var s = t.animation,
                    r = document.getElementById(s.id);
                r && r.beginElement(),
                    i && this._disableMapNavigation(i)
            },
            _disableMapNavigation: function(e) {
                var t = this;
                this.disableTimeout && window.clearTimeout(this.disableTimeout),
                    W.map.showOverlay(),
                    this.disableTimeout = window.setTimeout(function() {
                        W.map.hideOverlay(),
                            t.fadeOut(t.fadeDuration),
                            t.disableTimeout = 0
                    }, e)
            },
            fadeIn: function(e) {
                $(this.layer.div).fadeIn({
                    duration: e,
                    easing: "swing"
                })
            },
            fadeOut: function(e) {
                var t = this;
                $(this.layer.div).fadeOut({
                        duration: e,
                        easing: "swing"
                    }),
                    this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                        this.removeTimeout = 0),
                    this.removeTimeout = window.setTimeout(function() {
                        t._destroyLayer(),
                            t.removeTimeout = 0
                    }, e)
            },
            addFeatures: function(e, t) {
                this.layer.addFeatures(e, t)
            },
            removeFeatures: function(e, t) {
                this.layer.removeFeatures(e, t)
            },
            animateHome: function(e) {
                W.map.getPannable().panTo(e, this.homeAnimationZoom);
                var t = W.map.getResolution(),
                    i = this.homeSpotLightRadius / t,
                    n = 2 * i,
                    s = _.extend({}, d, {
                        from: n,
                        to: i
                    }),
                    r = new OL.Geometry.Point(e.lon, e.lat);
                this.drawAndFocusSpotlightAtPoint(r, {
                        maskID: "spotlightMask",
                        filter: "url(#spotlightBlur)",
                        pointRadius: i,
                        fillColor: "black",
                        fillOpacity: 1,
                        animation: s
                    }, this.spotLightDuration),
                    this.addHomePin(r)
            },
            addHomePin: function(e) {
                var t = new OpenLayers.Feature.Vector(e.clone(), {
                    type: "homePin"
                });
                return this.addFeatures(t),
                    t
            },
            _isSpotlightInBounds: function(e) {
                var t = 70 * this.map.getResolution(),
                    i = new OL.Bounds(e.x - t, e.y + t, e.x + t, e.y - t);
                return this.map.getExtent().containsBounds(i)
            },
            _destroyLayer: function() {
                null != this.layer && (this.layer.removeAllFeatures(),
                    this.map.removeLayer(this.layer),
                    this.layer.destroy(),
                    this.layer = null)
            },
            destroy: function() {
                return this.disableTimeout && (window.clearTimeout(this.disableTimeout),
                        this.disableTimeout = 0),
                    this.removeTimeout && (window.clearTimeout(this.removeTimeout),
                        this.removeTimeout = 0),
                    this._destroyLayer()
            }
        });
    t.default = c,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(203),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend();
    r.prototype.deafults = _.extend({
            collatedCount: null
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.Region.extend({
        constructor: function() {
            this.el || this._createContainer(),
                Marionette.Region.prototype.constructor.apply(this, arguments)
        },
        initialize: function() {
            var e = this,
                t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if (this.saveButtonSelector = t.saveButtonSelector, !this.saveButtonSelector)
                throw new Error("Popover region initialized without the saveButtonSelector options");
            return this.$container.on("click", ".close-popover", function() {
                return e.empty()
            })
        },
        show: function(e) {
            return e.$el.addClass("save-popover"),
                this.$container.addClass("shrunk"),
                Marionette.Region.prototype.show.apply(this, arguments)
        },
        onShow: function() {
            return this._positionContainer(),
                this.$container.removeClass("shrunk")
        },
        _createContainer: function() {
            this.$container = this.el = $("<div />").attr({
                class: "save-popover-container"
            }).appendTo("body")
        },
        _positionContainer: function() {
            var e = $(this.saveButtonSelector),
                t = e[0].getBoundingClientRect(),
                i = this.$container[0];
            return this.$container.css({
                top: t.top + t.height,
                left: t.left - i.offsetWidth + t.width
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(154),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = I18n.t("internal.wiki_best_practices_link"),
        o = I18n.t("internal.wiki_area_manager"),
        a = I18n.t("internal.wiki_country_manager"),
        l = I18n.t("internal.wiki_mentoring"),
        u = I18n.t("internal.wiki_rank_link"),
        d = I18n.t("internal.editing_local_forum_link"),
        c = {
            FLAGGED_USER: r,
            BLOCKED_USER: r,
            ACTIVATED_USER: r,
            WELCOME_NEW_EDITOR: d,
            WELCOME_TO_WME: r,
            SOON_TO_BE_UPGRADED: u,
            LEVEL_UPGRADE: u,
            LEVEL_UPGRADE_3: u,
            LEVEL_UPGRADE_4: u,
            LEVEL_UPGRADE_5: u
        },
        h = {
            MEET_FELLOW_EDITORS: d,
            LEVEL_UPGRADE_2: u,
            LEVEL_UPGRADE_3: o,
            LEVEL_UPGRADE_4: l,
            LEVEL_UPGRADE_5: a
        },
        p = {
            LEVEL_UPGRADE_2: i(837),
            LEVEL_UPGRADE_3: i(838),
            LEVEL_UPGRADE_4: i(839),
            LEVEL_UPGRADE_5: i(840),
            LEVEL_UPGRADE_6: i(841)
        },
        f = s.default.extend({
            tagName: "div",
            template: "Waze/Modules/Feed/templates/notification_detail",
            className: "notification-detail",
            triggers: {
                "click .next": "nextClicked"
            },
            initialize: function() {
                return this.model.on("destroy", this.destroy, this)
            },
            _onClickDelete: function() {
                return this.$el.addClass("deleting"),
                    this.model.trigger("delegate:delete")
            },
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    hasNext: this.options.hasNext,
                    subject: this._getValueOrTemplate("subject"),
                    message: this._getValueOrTemplate("message"),
                    linkText: this._getValueOrTemplate("linkText"),
                    buttonText: this._getValueOrTemplate("buttonText"),
                    linkURL: this._getLinkURL(),
                    buttonURL: this._getButtonURL(),
                    imageURL: this._getImageURL()
                })
            },
            setMaxHeight: function(e) {
                return this.$el.css({
                    maxHeight: e
                })
            },
            _getLinkURL: function() {
                var e = this.model.getParameter("linkURL");
                return e || (e = c[this.model.get("type")]),
                    e
            },
            _getButtonURL: function() {
                var e = this.model.getParameter("buttonURL");
                return e || (e = h[this.model.get("type")]),
                    e
            },
            _getImageURL: function() {
                var e = this.model.getParameter("imageURL");
                return e || (e = p[this.model.get("type")]),
                    e
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(154),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            className: "feed-group",
            template: "Waze/Modules/Feed/templates/feed_group",
            childView: s.default,
            childViewContainer: ".feed-list",
            childViewEventPrefix: "notifications",
            moreItemsMessage: "feed.notifications.more_items",
            events: {
                "click .toggle": "toggleGrouping"
            },
            bindings: {
                ":el": {
                    classes: {
                        grouped: "grouped",
                        groupable: {
                            observe: "length",
                            onGet: function(e) {
                                return e > 3
                            }
                        }
                    }
                },
                ".toggle": {
                    observe: "length",
                    visible: function(e) {
                        return e > 3
                    }
                },
                ".counter": {
                    observe: "length",
                    onGet: function(e) {
                        return I18n.t(this.moreItemsMessage, {
                            count: e - 1
                        })
                    }
                }
            },
            initialize: function() {
                var e = this;
                return this.model = new Backbone.Model({
                        length: 0,
                        grouped: !1
                    }),
                    this.collection.on("reset sync", function() {
                        var t = e.collection.length;
                        return e.model.set({
                            length: t,
                            grouped: t > 3
                        })
                    }),
                    this.collection.on("reset add remove", function() {
                        return e.model.set({
                            length: e.collection.length
                        })
                    }),
                    this.collection.on("remove", function() {
                        if (e.collection.length <= 3)
                            return e.model.set({
                                grouped: !1
                            })
                    })
            },
            onRender: function() {
                return this.stickit()
            },
            toggleGrouping: function() {
                return this.model.set({
                    grouped: !this.model.get("grouped")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(15),
        a = n(o),
        l = i(4),
        u = n(l),
        d = i(10),
        c = n(d),
        h = OL.Class(r.default, {
            initialize: function(e, t, i, n) {
                return this.junction = e,
                    this.path = t,
                    this.navigable = i,
                    this.path = this.path.clone(),
                    this.path.set({
                        navigable: this.navigable
                    }),
                    r.default.prototype.initialize.apply(this, [n])
            },
            doAction: function() {
                var e = this,
                    t = this.junction.attributes.connections.map(function(e) {
                        return e.clone()
                    });
                return this.navigable ? t.push(this.path) : t = _.reject(t, function(t) {
                        return t.equals(e.path)
                    }),
                    this.doSubAction(new a.default(this.junction, {
                        connections: t
                    }, {
                        dontSerialize: !0
                    }))
            },
            serialize: function() {
                var e = this.navigable ? c.default.TYPE.ADD : c.default.TYPE.UPDATE;
                return {
                    _objectType: u.default.JUNCTION_NC,
                    action: e,
                    attributes: this.path
                }
            },
            CLASS_NAME: "Waze.Action.ModifyJunctionPath"
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(48),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {};
    r.getAndConfirmCityChange = function(e, t, i) {
            return s.default.resolve(W.model.cities.getCityExists(e, t, i)).then(function(t) {
                var i = !0;
                return t.isDistant ? i = window.confirm(I18n.t("edit.segment.city_confirm.distant", {
                        city_name: e
                    })) : null === t.existingCity && (i = window.confirm(I18n.t("edit.segment.city_confirm.no_city", {
                        city_name: e
                    }))),
                    i
            })
        },
        e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend(),
        s = Backbone.Collection.extend({
            model: n,
            removeEmpty: function() {
                return this.remove(this.where({
                        name: ""
                    }), {
                        silent: !0
                    }),
                    this
            }
        });
    t.Item = n,
        t.Collection = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.Behavior.extend({
        _lastTabId: null,
        events: {
            "show.bs.tab a[data-toggle=tab]": "_onTabShown"
        },
        _onTabShown: function(e) {
            this._lastTabId = $(e.target).attr("href")
        },
        _restoreLastTab: function() {
            if (null !== this._lastTabId) {
                return this.$("a[href='" + this._lastTabId + "']").tab("show")
            }
        },
        onRender: function() {
            return this._restoreLastTab()
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/venue/venue-edit-more-info",
        serializeData: function() {
            return {
                landmark: this.model,
                serviceTypes: this.options.serviceTypes,
                serviceSet: this.options.serviceSet
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(873),
        v = n(m),
        y = i(128),
        b = n(y),
        E = i(205),
        w = n(E),
        S = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "defaults",
                    get: function() {
                        return {
                            loading: !1,
                            showHistory: !1,
                            hasMore: !1,
                            isEmpty: !0,
                            hasError: !1
                        }
                    }
                }]),
                t
        }(Backbone.Model),
        M = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            txRegion: ".transactions"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .toggleHistory": "_toggleHistory",
                            "click .loadMoreHistory": "_loadMoreHistory"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".showHistory": {
                                observe: "showHistory",
                                visible: _.negate(_.identity)
                            },
                            ".hideHistory": {
                                observe: "showHistory",
                                visible: !0
                            },
                            ".historyContent": {
                                observe: "showHistory",
                                visible: !0
                            },
                            ".loadingHistory": {
                                observe: "loading",
                                visible: !0
                            },
                            ".transactions": {
                                observe: "isEmpty",
                                visible: _.negate(_.identity)
                            },
                            ".historyEmpty": {
                                observe: ["isEmpty", "hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            r.default)(e, 3),
                                        i = t[0],
                                        n = t[1],
                                        s = t[2];
                                    return i && !n & !s
                                }
                            },
                            ".historyError": {
                                observe: ["hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            r.default)(e, 2),
                                        i = t[0];
                                    return !t[1] && i
                                }
                            },
                            ".loadMoreContainer": {
                                observe: ["hasMore", "hasError", "loading"],
                                visible: function(e) {
                                    var t = (0,
                                            r.default)(e, 3),
                                        i = t[0],
                                        n = t[1];
                                    return !t[2] && i && !n
                                }
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = e.model;
                        this._map = e.map,
                            this._objectType = t.type,
                            this._objectID = t.getID(),
                            this._descartes = new b.default,
                            this._historyDataModel = new w.default,
                            this._nextTransaction = null,
                            this._historyLoaded = !1,
                            this._viewModel = new S,
                            this._transactionsView = new v.default({
                                map: this._map,
                                historyDataModel: this._historyDataModel,
                                objectType: this._objectType,
                                objectID: this._objectID
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.getRegion("txRegion").show(this._transactionsView),
                            this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onHistorySuccess",
                    value: function(e) {
                        this._historyDataModel.mergeObjects(new OL.Bounds, e, !0),
                            this._nextTransaction = e.transactions.nextTransaction,
                            this._transactionsView.collection.add(e.transactions.objects),
                            this._viewModel.set({
                                hasMore: null != this._nextTransaction,
                                isEmpty: 0 === this._transactionsView.collection.length
                            })
                    }
                }, {
                    key: "_onHistoryFail",
                    value: function() {
                        this._viewModel.set("hasError", !0)
                    }
                }, {
                    key: "_toggleLoading",
                    value: function(e) {
                        this._viewModel.set("loading", e)
                    }
                }, {
                    key: "_toggleHistory",
                    value: function() {
                        var e = this,
                            t = this._viewModel.attributes.showHistory;
                        t = !t,
                            this._viewModel.set("showHistory", t),
                            t && !this._historyLoaded && (W.Report.elementHistoryAction("show", this._objectType),
                                this._fetchHistory().then(function() {
                                    return e._historyLoaded = !0
                                }))
                    }
                }, {
                    key: "_fetchHistory",
                    value: function(e) {
                        var t = this;
                        return this._toggleLoading(!0),
                            this._viewModel.set("hasError", !1),
                            this._descartes.getElementHistory(this._objectType, this._objectID, e).then(this._onHistorySuccess.bind(this), this._onHistoryFail.bind(this)).then(function() {
                                t._toggleLoading(!1)
                            })
                    }
                }, {
                    key: "_loadMoreHistory",
                    value: function() {
                        var e = this;
                        W.Report.elementHistoryAction("load_more", this._objectType),
                            this._fetchHistory(this._nextTransaction).then(function() {
                                null == e._nextTransaction && W.Report.elementHistoryAction("load_all", e._objectType)
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/history_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(91),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(16),
        c = n(d),
        h = i(39),
        p = i(132),
        f = i(104),
        g = function(e) {
            var t = new f.TimeFrameViewHelpers({
                timeFrame: e.getTimeFrame()
            });
            return t.formatWeekdays() + " " + t.formatHours()
        },
        m = function(e) {
            return e.map(function(e) {
                return new h.SegmentRestriction(e)
            }).map(g).join("\n")
        },
        v = function() {
            function e(t) {
                (0,
                    a.default)(this, e),
                this.dataModel = t
            }
            return (0,
                    u.default)(e, [{
                    key: "FORMATTERS",
                    get: function() {
                        var e = this;
                        return {
                            default: {
                                lockRank: function(e) {
                                    return c.default.formatRank(e)
                                },
                                streetID: function(t) {
                                    var i = e.dataModel.streets.get(t),
                                        n = "",
                                        s = void 0,
                                        r = void 0;
                                    return null != i && (n = i.name,
                                            i.isEmpty || (s = e.dataModel.cities.get(i.cityID),
                                                r = s.attributes.name)),
                                        _.compact([n, r]).join(", ")
                                }
                            },
                            segment: {
                                level: function(e) {
                                    return 0 === e ? I18n.t("edit.segment.levels.0") : e
                                },
                                roadType: function(e) {
                                    return I18n.t("segment.road_types." + e)
                                },
                                routingRoadType: function(e) {
                                    return I18n.t("segment.road_types." + e)
                                },
                                primaryStreetID: function(t) {
                                    return e.FORMATTERS.default.streetID(t)
                                },
                                streetIDs: function(t) {
                                    return t.map(function(t) {
                                        return e.FORMATTERS.default.streetID(t)
                                    })
                                },
                                fwdMaxSpeed: function(e) {
                                    return c.default.speedString(e)
                                },
                                revMaxSpeed: function(e) {
                                    return c.default.speedString(e)
                                },
                                restrictions: m
                            },
                            venue: {
                                services: function(e) {
                                    return e.map(function(e) {
                                        return I18n.t("venues.services." + e)
                                    })
                                },
                                categories: function(e) {
                                    return e.map(function(e) {
                                        return I18n.t("venues.categories." + e)
                                    })
                                },
                                openingHours: function(e) {
                                    return e.map(function(e) {
                                        return new p.OpeningHour(e)
                                    }).map(c.default.formatOpeningHour)
                                }
                            },
                            venueCategoryAttributes: {
                                estimatedNumberOfSpots: function(e) {
                                    return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots." + e)
                                },
                                paymentType: function(e) {
                                    return e.map(function(e) {
                                        return I18n.t("edit.landmark.parking.types.paymentType." + e)
                                    })
                                },
                                costType: function(e) {
                                    return I18n.t("edit.landmark.parking.types.costType." + e)
                                },
                                parkingType: function(e) {
                                    return I18n.t("edit.landmark.parking.types.parkingType." + e)
                                },
                                lotType: function(e) {
                                    return I18n.t("edit.landmark.parking.types.lotType." + e)
                                }
                            }
                        }
                    }
                }]),
                (0,
                    u.default)(e, [{
                    key: "formatObjectName",
                    value: function(e) {
                        var t = "objects." + e + ".name";
                        return I18n.lookup(t) ? I18n.t(t) : e
                    }
                }, {
                    key: "formatFieldName",
                    value: function(e, t) {
                        var i = "objects." + e + ".fields." + t,
                            n = "objects.common.fields." + t;
                        return I18n.lookup(i) ? I18n.t(i) : I18n.lookup(n) ? I18n.t(n) : t
                    }
                }, {
                    key: "formatFlagName",
                    value: function(e, t) {
                        var i = "objects." + e + ".flag_fields." + t;
                        return I18n.lookup(i) ? I18n.t(i) : t
                    }
                }, {
                    key: "formatCategoryAttributeName",
                    value: function(e) {
                        var t = "objects.venue.category_fields." + e;
                        return I18n.lookup(t) ? I18n.t(t) : e
                    }
                }, {
                    key: "formatCategoryAttributeValue",
                    value: function(e, t) {
                        return this.formatFieldValue("venueCategoryAttributes", e, t)
                    }
                }, {
                    key: "formatFieldValue",
                    value: function(e, t, i) {
                        var n = this.FORMATTERS.default[t],
                            s = this.FORMATTERS[e],
                            o = i;
                        return s && s[t] ? o = s[t](i) : null != n && (o = n(i)),
                            _.isString(o) ? o : Array.isArray(o) ? o.join(", ") : (0,
                                r.default)(o)
                    }
                }, {
                    key: "userProfile",
                    value: function(e) {
                        return c.default.userProfile(e, this.dataModel)
                    }
                }]),
                e
        }();
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(15),
        r = i(86),
        o = i(109),
        a = OpenLayers.Class(n, {
            segment: null,
            attributes: null,
            initialize: function(e, t, i) {
                n.prototype.initialize.apply(this, [i]),
                    this.segment = e,
                    this.attributes = t
            },
            destroy: function() {
                this.segment = null,
                    n.prototype.destroy.apply(this)
            },
            doAction: function() {
                var e = this.segment.getAddress();
                if (!e.street || e.street.isEmpty)
                    return !1;
                var t = new r(e.state, e.country, this.attributes.cityName, this.attributes.emptyCity);
                this.doSubAction(t);
                var i = t.city,
                    n = new o(this.attributes.streetName, i, this.attributes.emptyStreet);
                this.doSubAction(n);
                var a = n.street;
                if (this.segment.attributes.streetIDs.contains(a.getID()))
                    return !1;
                this.doSubAction(new s(this.segment, {
                    streetIDs: this.segment.attributes.streetIDs.concat(a.getID())
                }))
            },
            CLASS_NAME: "Waze.Model.AddAlternateStreet"
        });
    e.exports = a
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(65),
        r = n(s),
        o = i(253),
        a = n(o),
        l = i(255),
        u = n(l),
        d = i(885),
        c = n(d),
        h = i(887),
        p = n(h),
        f = Marionette.View.extend({
            compositeSegment: null,
            regions: {
                main: ".main"
            },
            template: "Waze/Modules/Closures/templates/layout",
            initialize: function(e) {
                this.pannable = e.pannable,
                    this.listViewConfig = e.listViewConfig,
                    this.editViewConfig = e.editViewConfig,
                    this.allClosures = e.allClosures,
                    this.compositeSegment = e.compositeSegment,
                    this.segments = this.compositeSegment.children.clone(),
                    this.dataModel = e.dataModel,
                    this._reverseSegments = _.clone(this.compositeSegment.reverseSegments)
            },
            onRender: function() {
                return this._showClosures()
            },
            _showClosures: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = a.default.getSharedClosures(this.segments, this._reverseSegments, this.allClosures),
                    n = _.extend({
                        dataModel: this.dataModel,
                        collection: i,
                        showActivateRepoMessage: !this.options.repoActive,
                        showSaveMessage: !this.options.canSaveClosures,
                        canEdit: this._areClosuresEditable(),
                        canAdd: this.options.canAdd
                    }, this.listViewConfig, t),
                    s = new c.default(n);
                return s.on("add", function() {
                        return e.newClosure()
                    }),
                    s.on("edit", function(t) {
                        return e.editClosure(t)
                    }),
                    s.on("delete", function(t) {
                        return e.deleteClosure(t)
                    }),
                    s.on("applyToAll", function(t) {
                        return e.applyClosureToAllSegments(t)
                    }),
                    s.on("locate", function(t) {
                        var i = _.first(t.attributes.segments),
                            n = i.geometry.getBounds().getCenterLonLat();
                        return e.pannable.panTo(n)
                    }),
                    this._show(s)
            },
            _areClosuresEditable: function() {
                return this.compositeSegment.canEditClosures() && this.options.repoActive && this.options.canSaveClosures
            },
            newClosure: function() {
                var e = this,
                    t = this.createSharedClosure();
                this._createEditView(t, {
                    newClosure: !0
                }).on("save", function() {
                    e.saveClosure(t, !0)
                })
            },
            editClosure: function(e) {
                var t = this;
                this._createEditView(e).on("save", function() {
                    t.saveClosure(e, !1)
                })
            },
            _createEditView: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                _.defaults(i, {
                        newClosure: !1
                    }),
                    _.extend(i, this.editViewConfig),
                    i.model = e,
                    i.availableEvents = this.dataModel.majorTrafficEvents.getObjectArray();
                var n = new p.default(i);
                return n.on("editCancelled", function() {
                        return t._showClosures()
                    }),
                    this._show(n),
                    n
            },
            applyClosureToAllSegments: function(e) {
                var t = u.default.applyToAllSegments(e, this.segments, this._reverseSegments);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.apply_to_all"),
                    successMessage: I18n.t("closures.success.apply_to_all")
                })
            },
            _show: function(e) {
                this.view = e,
                    this.getRegion("main") && this.showChildView("main", this.view)
            },
            deleteClosure: function(e) {
                var t = void 0;
                if (t = e.isPresent("reason") ? I18n.t("closures.delete_confirm", {
                        info: e.get("reason")
                    }) : I18n.t("closures.delete_confirm_no_reason"),
                    window.confirm(t)) {
                    var i = u.default.delete(e);
                    return this._runAction(i, {
                        loadingMessage: I18n.t("closures.loading.delete"),
                        successMessage: I18n.t("closures.success.delete")
                    })
                }
            },
            saveNewClosure: function(e) {
                var t = u.default.add(e);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.add"),
                    successMessage: I18n.t("closures.success.add")
                })
            },
            saveExistingClosure: function(e) {
                var t = u.default.update(e);
                return this._runAction(t, {
                    loadingMessage: I18n.t("closures.loading.update"),
                    successMessage: I18n.t("closures.success.update")
                })
            },
            saveClosure: function(e, t) {
                this._confirmPermanent(e) && (t ? this.saveNewClosure(e) : this.saveExistingClosure(e))
            },
            _confirmPermanent: function(e) {
                if (e.attributes.permanent) {
                    var t = I18n.t("closures.permanent_confirm");
                    return window.confirm(t)
                }
                return !0
            },
            _runAction: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.view.message.showLoading(i.loadingMessage),
                    this._disableControls(),
                    i.actions = [e],
                    W.controller.save(i).done(function(n) {
                        var s = !1;
                        return n.unsavedFeatures && (s = !_.isEmpty(n.unsavedFeatures.roadClosures)),
                            s ? t._handlePartialSuccess(n.unsavedFeatures.roadClosures, e) : t._showClosures({
                                successMessage: i.successMessage
                            })
                    }).fail(function(i) {
                        return t._onError(i, e)
                    }).always(function() {
                        return t._enableControls()
                    })
            },
            _enableControls: function() {
                return this._toggleControls(!1)
            },
            _disableControls: function() {
                return this._toggleControls(!0)
            },
            _toggleControls: function(e) {
                this.getRegion("main") && this.getRegion("main").$el.find("a, .btn, button, input, textarea, select").toggleClass("disabled", e)
            },
            _handlePartialSuccess: function(e, t) {
                this._undoFailedActions(e, t);
                var i = _(e).map(function(e) {
                        return e.details
                    }),
                    n = I18n.t("closures.partial_error") + ": " + i.join(",\n");
                return this._showClosures({
                    errorMessage: n
                })
            },
            _undoFailedActions: function(e, t) {
                if (null != t.subActions)
                    for (var i = 0; i < t.subActions.length; i++) {
                        var n = t.subActions[i];
                        if (null != n.subActions)
                            this._undoFailedActions(e, n);
                        else if (null != n.closure) {
                            var s = n.closure.getID();
                            e[s] && n.undoAction()
                        }
                    }
            },
            _onError: function(e, t) {
                var i = e[0];
                return t.undoAction(),
                    this.view.message.showError(i.get("details"))
            },
            createSharedClosure: function() {
                var e = this.segments.clone(),
                    t = this.compositeSegment.getAddressDetails(),
                    i = void 0;
                i = null != t ? t.streetName + ", " + t.cityName : "";
                var n = {
                    location: i,
                    segments: e,
                    reverseSegments: this._reverseSegments
                };
                return this.compositeSegment.mixed.direction || (n.direction = this.compositeSegment.attributes.direction),
                    new r.default(n)
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(65),
        u = n(l),
        d = i(254),
        c = n(d),
        h = {
            getSharedClosures: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    s = _.indexBy(e, function(e) {
                        return e.getID()
                    });
                n || (n = this._getClosuresForSegments(s));
                var o = _(n).groupBy(function(e) {
                        return t._getClosureKey(e, i)
                    }),
                    l = new c.default,
                    d = !0,
                    h = !1,
                    p = void 0;
                try {
                    for (var f, g = (0,
                            a.default)((0,
                            r.default)(o)); !(d = (f = g.next()).done); d = !0) {
                        var m = f.value,
                            v = o[m],
                            y = _.chain(v).map(function(e) {
                                return s[e.segID]
                            }).uniq().value(),
                            b = new u.default({
                                closures: v,
                                segments: y,
                                partial: y.length !== e.length,
                                reverseSegments: this._getClosureReverseSegments(y, i)
                            }),
                            E = l.findOpposite(b);
                        null != E ? E.mergeWithOpposite(b) : l.push(b)
                    }
                } catch (e) {
                    h = !0,
                        p = e
                } finally {
                    try {
                        !d && g.return && g.return()
                    } finally {
                        if (h)
                            throw p
                    }
                }
                return l
            },
            _getClosuresForSegments: function(e) {
                return W.model.roadClosures.getObjectArray(function(t) {
                    return null != e[t.segID]
                })
            },
            _getClosureReverseSegments: function(e, t) {
                var i = _(e).invoke("getID");
                return _(t).pick(i)
            },
            _getClosureKey: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = e.forward || !1;
                return !0 === t[e.segID] && (i = !i), [e.startDate, e.endDate, e.reason, e.location, i, e.createdBy, e.eventId].join(":")
            }
        };
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(65),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default,
            findOpposite: function(e) {
                return this.find(function(t) {
                    return t.isOppositeTo(e)
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(193),
        r = n(s),
        o = i(63),
        a = n(o),
        l = i(256),
        u = n(l),
        d = i(257),
        c = n(d),
        h = i(258),
        p = n(h),
        f = i(65),
        g = n(f),
        m = g.default.DIRECTION,
        v = {
            nextClosureID: -101,
            add: function(e) {
                for (var t = [], i = e.get("segments"), n = 0; n < i.length; n++)
                    for (var s = i[n], r = e.calculateForwardValuesForSegment(s.getID()), o = 0; o < r.length; o++) {
                        var a = r[o],
                            l = this._createRoadClosure(e, s.getID(), s.geometry);
                        l.forward = a,
                            t.push(new u.default(l, s))
                    }
                return this._wrapInMultiAction(t)
            },
            _createRoadClosure: function(e, t, i) {
                var n = new r.default({
                    id: this._getNewClosureID(),
                    geometry: i.clone(),
                    segID: t,
                    active: !0
                });
                return e.saveSimpleFieldsToClosure(n),
                    n
            },
            delete: function(e) {
                var t = _.map(e.get("closures"), function(t) {
                    var i = e.findSegmentByID(t.segID);
                    return new p.default(t, i)
                });
                return this._wrapInMultiAction(t)
            },
            update: function(e) {
                for (var t = [], i = e.get("closures"), n = e.isOppositeToOriginal(), s = this._changedToOneWay(e), r = this._shouldUpdate(e), o = this._shouldCreateOpposite(e), a = 0; a < i.length; a++) {
                    var l = i[a],
                        u = void 0;
                    n ? (t.push(this._createAddOppositeAction(e, l)),
                        u = e.findSegmentByID(l.segID),
                        t.push(new p.default(l, u))) : s && this._hasObsoleteDirection(e, l) ? (u = e.findSegmentByID(l.segID),
                        t.push(new p.default(l, u))) : (r && t.push(this._createUpdateAction(e, l)),
                        o && t.push(this._createAddOppositeAction(e, l)))
                }
                return this._wrapInMultiAction(t)
            },
            _shouldUpdate: function(e) {
                return e.hasChanged()
            },
            _createUpdateAction: function(e, t) {
                var i = new r.default(t);
                return e.saveSimpleFieldsToClosure(i),
                    e.isOppositeToOriginal() && (i.forward = !i.forward),
                    new c.default(i)
            },
            _shouldCreateOpposite: function(e) {
                return e.differsFromOriginal("direction") && e.get("direction") === m.TWO_WAY
            },
            _createAddOppositeAction: function(e, t) {
                var i = this._createRoadClosure(e, t.segID, t.geometry);
                i.forward = !t.forward;
                var n = e.findSegmentByID(t.segID);
                return new u.default(i, n)
            },
            _getNewClosureID: function() {
                return this.nextClosureID--
            },
            _changedToOneWay: function(e) {
                return e.differsFromOriginal("direction") && e.original("direction") === m.TWO_WAY
            },
            _hasObsoleteDirection: function(e, t) {
                var i = e.calculateForwardValuesForSegment(t.segID);
                return !_.contains(i, t.forward)
            },
            applyToAllSegments: function(e, t) {
                for (var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, n = this._findMissingSegments(e, t), s = [], r = new g.default({
                        segments: n,
                        reverseSegments: i,
                        direction: e.get("direction")
                    }), o = 0; o < n.length; o++)
                    for (var a = n[o], l = r.calculateForwardValuesForSegment(a.getID()), d = 0; d < l.length; d++) {
                        var c = l[d],
                            h = this._createRoadClosure(e, a.getID(), a.geometry);
                        h.forward = c,
                            s.push(new u.default(h, a))
                    }
                return this._wrapInMultiAction(s)
            },
            _findMissingSegments: function(e, t) {
                return _.reject(t, function(t) {
                    return null != e.findSegmentByID(t.getID())
                })
            },
            _wrapInMultiAction: function(e) {
                for (var t = new a.default, i = 0; i < e.length; i++) {
                    var n = e[i];
                    t.doSubAction(n)
                }
                return t
            }
        };
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(10),
        r = n(s),
        o = i(4),
        a = n(o),
        l = OL.Class(r.default, {
            initialize: function(e, t, i) {
                return this.closure = e,
                    this.segment = t,
                    r.default.prototype.initialize.apply(this, [i])
            },
            serialize: function() {
                return {
                    _objectType: a.default.ROAD_CLOSURE,
                    action: r.default.TYPE.ADD,
                    attributes: {
                        reason: this.closure.reason,
                        location: this.closure.location,
                        segID: this.closure.segID,
                        id: this.closure.getID(),
                        startDate: this.closure.startDate,
                        endDate: this.closure.endDate,
                        forward: this.closure.forward,
                        permanent: this.closure.permanent,
                        eventId: this.closure.eventId
                    }
                }
            },
            doAction: function() {
                return W.model.repos.roadClosures.put(this.closure)
            },
            redoAction: function() {
                return this.doAction()
            },
            undoAction: function() {
                return W.model.repos.roadClosures.remove(this.closure)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(10),
        r = n(s),
        o = i(4),
        a = n(o),
        l = OL.Class(r.default, {
            initialize: function(e, t) {
                return this.closure = e,
                    r.default.prototype.initialize.apply(this, [t])
            },
            serialize: function() {
                return {
                    _objectType: a.default.ROAD_CLOSURE,
                    action: r.default.TYPE.UPDATE,
                    attributes: {
                        reason: this.closure.reason,
                        location: this.closure.location,
                        segID: this.closure.segID,
                        id: this.closure.id,
                        startDate: this.closure.startDate,
                        endDate: this.closure.endDate,
                        forward: this.closure.forward,
                        permanent: this.closure.permanent,
                        eventId: this.closure.eventId
                    }
                }
            },
            doAction: function() {}
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(10),
        r = n(s),
        o = i(4),
        a = n(o),
        l = OL.Class(r.default, {
            initialize: function(e, t, i) {
                return this.closure = e,
                    this.segment = t,
                    r.default.prototype.initialize.apply(this, [i])
            },
            serialize: function() {
                return {
                    _objectType: a.default.ROAD_CLOSURE,
                    action: r.default.TYPE.DELETE,
                    attributes: {
                        id: this.closure.getID(),
                        segID: this.closure.segID
                    }
                }
            },
            doAction: function() {
                return W.model.repos.roadClosures.remove(this.closure)
            },
            redoAction: function() {
                return this.doAction()
            },
            undoAction: function() {
                return W.model.repos.roadClosures.put(this.closure)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(10),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            houseNumberSet: null,
            houseNumber: null,
            newGeometry: null,
            oldGeometry: null,
            newFraction: null,
            oldFraction: null,
            changedState: !1,
            initialize: function(e, t, i, n) {
                s.default.prototype.initialize.call(this, n),
                    this.houseNumber = e,
                    this.houseNumberSet = this.houseNumber.parent,
                    this.newGeometry = i.clone(),
                    this.oldGeometry = t,
                    this.oldFraction = e.fractionPoint.clone()
            },
            destroy: function() {
                this.houseNumberSet = null,
                    this.houseNumber = null,
                    this.newGeometry = null,
                    this.oldGeometry = null
            },
            doAction: function() {
                return this.newFraction = this.houseNumber.getFractionFromProjection(),
                    this.houseNumber.geometry = this.newGeometry.clone(),
                    this.houseNumber.fractionPoint = this.newFraction,
                    this.houseNumberSet.state || (this.changedState = !0,
                        this.houseNumberSet.state = OL.State.UPDATE),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            undoAction: function() {
                return this.houseNumber.geometry = this.oldGeometry,
                    this.houseNumber.fractionPoint = this.oldFraction,
                    this.changedState && (this.houseNumberSet.state = null),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            redoAction: function() {
                return this.houseNumber.geometry = this.newGeometry.clone(),
                    this.houseNumber.fractionPoint = this.newFraction,
                    this.changedState && (this.houseNumberSet.state = OL.State.UPDATE),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            serialize: function() {
                var e = {
                    segID: this.houseNumberSet.id,
                    id: this.houseNumber.id,
                    geometry: this.newGeometry,
                    fractionPoint: this.newFraction
                };
                return {
                    _objectType: this.houseNumberSet.type,
                    action: s.default.TYPE.UPDATE,
                    attributes: e
                }
            },
            CLASS_NAME: "Waze.Action.UpdateHouseNumberGeometry"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.UpdateFractionPoint = t.ReplaceHouseNumberSegment = t.DeleteHouseNumber = t.AddHouseNumber = void 0;
    var s = i(10),
        r = n(s),
        o = i(9),
        a = n(o),
        l = i(162),
        u = n(l),
        d = OL.Class(r.default, {
            houseNumberSet: null,
            houseNumber: null,
            initialize: function(e, t, i) {
                r.default.prototype.initialize.call(this, i),
                    this.houseNumberSet = e,
                    this.houseNumber = t
            },
            destroy: function() {
                return this.houseNumberSet = null,
                    this.houseNumber = null,
                    r.default.prototype.destroy.apply(this, arguments)
            },
            doAction: function() {
                return this.houseNumber.id = this.model.houseNumbers.generateUniqueID(),
                    this.houseNumberSet.numbers.push(this.houseNumber),
                    this.model.houseNumbers.changed(this.houseNumberSet), !0
            },
            undoAction: function() {
                return this.houseNumberSet.numbers = this.houseNumberSet.numbers.remove(this.houseNumber),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            redoAction: function() {
                return this.houseNumberSet.numbers.push(this.houseNumber),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            serialize: function() {
                var e = {
                    number: this.houseNumber.number,
                    id: this.houseNumber.id,
                    segID: this.houseNumberSet.id,
                    geometry: this.houseNumber.geometry,
                    fractionPoint: this.houseNumber.fractionPoint,
                    forced: this.houseNumber.forced
                };
                return {
                    _objectType: this.houseNumberSet.type,
                    action: r.default.TYPE.ADD,
                    attributes: e
                }
            },
            CLASS_NAME: "Waze.Action.AddHouseNumber"
        }),
        c = OL.Class(r.default, {
            houseNumberSet: null,
            houseNumber: null,
            initialize: function(e, t, i) {
                r.default.prototype.initialize.call(this, i),
                    this.houseNumberSet = e,
                    this.houseNumber = t
            },
            destroy: function() {
                return this.houseNumberSet = null,
                    this.houseNumber = null,
                    r.default.prototype.destroy.apply(this, arguments)
            },
            doAction: function() {
                return this.houseNumberSet.numbers = this.houseNumberSet.numbers.remove(this.houseNumber),
                    this.model.houseNumbers.changed(this.houseNumberSet), !0
            },
            undoAction: function() {
                return this.houseNumberSet.numbers.push(this.houseNumber),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            redoAction: function() {
                return this.houseNumberSet.numbers = this.houseNumberSet.numbers.remove(this.houseNumber),
                    this.model.houseNumbers.changed(this.houseNumberSet)
            },
            serialize: function() {
                var e = {
                    id: this.houseNumber.id,
                    segID: this.houseNumberSet.id
                };
                return {
                    _objectType: this.houseNumberSet.type,
                    action: r.default.TYPE.DELETE,
                    attributes: e
                }
            },
            CLASS_NAME: "Waze.Action.DeleteHouseNumber"
        }),
        h = OL.Class(a.default, {
            newSet: null,
            houseNumber: null,
            newHouseNumber: null,
            oldParent: null,
            initialize: function(e, t, i) {
                a.default.prototype.initialize.call(this, i),
                    this.houseNumber = e,
                    this.newSet = t
            },
            destroy: function() {
                return this.houseNumber = null,
                    this.newSet = null,
                    this.oldParent = null,
                    a.default.prototype.destroy.apply(this, arguments)
            },
            doAction: function() {
                return this.newHouseNumber = this.houseNumber.clone(),
                    this.oldParent = this.newHouseNumber.parent,
                    this.newHouseNumber.parent = this.newSet,
                    this.doSubAction(new c(this.houseNumber.parent, this.houseNumber)),
                    this.doSubAction(new d(this.newSet, this.newHouseNumber)), !0
            },
            undoAction: function() {
                a.default.prototype.undoAction.apply(this, arguments),
                    this.houseNumber.parent = this.oldParent
            },
            redoAction: function() {
                a.default.prototype.redoAction.apply(this, arguments),
                    this.newHouseNumber.parent = this.newSet
            },
            CLASS_NAME: "Waze.Action.ReplaceHouseNumberSegment"
        }),
        p = OL.Class(a.default, {
            houseNumberSet: null,
            houseNumber: null,
            newHouseNumber: null,
            initialize: function(e, t, i, n) {
                a.default.prototype.initialize.call(this, n),
                    this.houseNumber = e,
                    this.houseNumberSet = t,
                    this.fractionPoint = i
            },
            destroy: function() {
                return this.fractionPoint = null,
                    this.houseNumber = null,
                    this.houseNumberSet = null,
                    this.newHouseNumber = null,
                    a.default.prototype.destroy.apply(this, arguments)
            },
            doAction: function() {
                this.newHouseNumber = this.houseNumber;
                var e = new OL.Geometry.Point(this.fractionPoint.lonlat.lon, this.fractionPoint.lonlat.lat);
                if (this.fractionPoint.closestSegment.getID() !== this.houseNumber.parent.id) {
                    var t = new h(this.houseNumber, this.houseNumberSet, null);
                    this.doSubAction(t),
                        this.doSubAction(new u.default(t.newSet, t.newHouseNumber, {
                            fractionPoint: e
                        })),
                        this.newHouseNumber = t.newHouseNumber
                } else
                    this.doSubAction(new u.default(this.houseNumber.parent, this.houseNumber, {
                        fractionPoint: e
                    }));
                return !0
            },
            CLASS_NAME: "Waze.Action.UpdateFractionPoint"
        });
    t.AddHouseNumber = d,
        t.DeleteHouseNumber = c,
        t.ReplaceHouseNumberSegment = h,
        t.UpdateFractionPoint = p
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        SEGMENT: {
            canEditMTE: !0
        },
        MTE: {
            canEditMTE: !1
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        SEGMENT: {
            showPartialClosuresHeader: !0,
            extendedChildViewOptions: {
                allowApplyToAll: !0,
                showLocateButton: !1,
                showEventName: !0,
                getDescription: function(e) {
                    return null
                }
            }
        },
        MTE: {
            showPartialClosuresHeader: !1,
            extendedChildViewOptions: {
                allowApplyToAll: !1,
                showLocateButton: !0,
                showEventName: !1,
                getDescription: function(e) {
                    return e.get("location")
                }
            }
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Toolbar/templates/toolbar",
        className: "toolbar",
        events: {
            "click .mode-item": "_onModeItemClick"
        },
        bindings: {
            ":el": {
                observe: "mode",
                update: function(e, t) {
                    return e.find(".mode-item").removeClass("active").filter("[data-mode='" + t + "']").addClass("active")
                }
            }
        },
        regions: {
            search: "#search",
            layerSwitcher: ".layer-switcher-container",
            toolbar: "#edit-buttons"
        },
        onRender: function() {
            return this.stickit()
        },
        _onModeItemClick: function(e) {
            var t = $(e.target).data("mode");
            this.model.requestModeChange(t).catch(function(e) {
                alert(e)
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(11),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/Toolbar/templates/search",
            ui: {
                searchField: "input",
                searchForm: "form"
            },
            initialize: function(e) {
                var t = this;
                this.map = e.map;
                var n = new OL.StyleMap({
                    default: new OL.Style({
                        externalGraphic: i(223),
                        graphicYOffset: -53,
                        graphicWidth: 37,
                        graphicHeight: 53
                    })
                });
                this.layerView = new OL.Layer.Vector("Search", {
                        styleMap: n
                    }),
                    this.layerView.events.on({
                        moveend: this._onMapMove,
                        scope: this
                    }),
                    this.map.addLayer(this.layerView),
                    W.accelerators.events.register("search", this, function() {
                        return t.ui.searchForm.data("searchbox").focus()
                    })
            },
            onRender: function() {
                return this.ui.searchForm.searchbox({
                    url: Waze.Config.search.server,
                    map: this.map,
                    remoteProjection: new OL.Projection("EPSG:4326"),
                    maxDistance: Waze.Config.search.maxDistance,
                    options: Waze.Config.search.options,
                    onselect: this._onResultSelect.bind(this),
                    onsearch: this._onSearch.bind(this)
                })
            },
            onDestroy: function() {
                return this.layerView.events.un({
                    moveend: this._onMapMove
                })
            },
            enable: function() {
                return this.ui.searchField.removeAttr("disabled")
            },
            disable: function() {
                return this.ui.searchField.attr("disabled", "disabled")
            },
            _onMapMove: function(e) {
                e.zoomChanged || this.layerView.removeAllFeatures()
            },
            _onSearch: function(e) {},
            _onResultSelect: function(e, t, i, n) {
                var r = s.default.project(new OL.LonLat(e.location.lon, e.location.lat)),
                    o = new OL.Geometry.Point(r.lon, r.lat),
                    a = new OL.Feature.Vector(o);
                this.layerView.removeAllFeatures(),
                    this.map.setCenter(r, Waze.Config.search.resultZoom),
                    this.map.focus(),
                    this.layerView.addFeatures(a)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(17),
        r = n(s),
        o = i(906),
        a = n(o),
        l = i(907),
        u = n(l),
        d = Marionette.Object.extend({
            initialize: function(e) {
                this.map = e.map,
                    this.actionManager = e.actionManager,
                    this.togglers = e.togglerTree,
                    this.controller = e.controller,
                    this.layerSwitcherLayout = new a.default,
                    this.state = new Backbone.Model,
                    this.treeState = new Backbone.Model,
                    this._readState(),
                    this.listenTo(this.state, "change", this._onChange),
                    this.listenTo(this.layerSwitcherLayout, "render", this._onRender),
                    this._updateApp()
            },
            _readState: function() {
                this.state.set(this.togglers.getState()),
                    this.treeState.set(this.togglers.getTreeState())
            },
            _onRender: function() {
                this._initAccelerators(),
                    this._renderLayerSwitcher()
            },
            destroy: function() {
                this._destroyAccelerators()
            },
            getLayout: function() {
                return this.layerSwitcherLayout
            },
            _renderLayerSwitcher: function() {
                this.layerSwitcherListView = new u.default({
                        state: this.state,
                        treeState: this.treeState,
                        map: this.map
                    }),
                    this.layerSwitcherLayout.showChildView("layersList", this.layerSwitcherListView)
            },
            _onChange: function() {
                this.togglers.setState(this.layerSwitcherListView.state.toJSON()),
                    this.togglers.writeToLocalStorage(),
                    this._updateApp()
            },
            _updateApp: function() {
                this.togglers.writeStateToApp({
                        map: this.map,
                        dataModel: W.model
                    }),
                    this.controller.updateModel(!0),
                    this._readState()
            },
            _getLayerSwitcherAccelerators: function() {
                return _.values(W.accelerators.Actions).filter(function(e) {
                    return null != e.toggler
                })
            },
            _initAccelerators: function() {
                var e = this;
                this._getLayerSwitcherAccelerators().forEach(function(t) {
                    e._registerLayerAccelerator(t.name, t.toggler)
                })
            },
            _destroyAccelerators: function() {
                var e = this;
                this._getLayerSwitcherAccelerators().forEach(function(t) {
                    e._unregisterLayerAccelerator(t.name, t.toggler)
                })
            },
            _registerLayerAccelerator: function(e, t) {
                W.accelerators.events.register(e, this, this._setLayerVisibility)
            },
            _unregisterLayerAccelerator: function(e, t) {
                W.accelerators.events.unregister(e, this, this._setLayerVisibility)
            },
            _setLayerVisibility: function(e) {
                var t = this.togglers.getState(),
                    i = e.action.toggler;
                this.togglers.setState((0,
                        r.default)({}, i, !t[i])),
                    this._updateApp()
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Toolbar/templates/toolbar-item",
        control: null,
        enabled: !0,
        parent: null,
        className: function() {
            var e = this.model.get("control"),
                t = null != this.parent ? "toolbar-group-item" : "toolbar-button",
                i = void 0;
            return i = this.enabled && e.enabled ? this.isActive() ? "ItemActive" : "ItemInactive" : "ItemDisabled",
                t + " " + e.displayClass + " " + i
        },
        events: {
            click: "_onToolbarButtonClick",
            "click .secondary-control": "_onSecondaryControlClick"
        },
        initialize: function(e) {
            return this.control = this.model.get("control"),
                this.secondaryControl = this.model.get("secondaryControl"),
                this.parent = e.parent,
                this.map = e.map,
                this.control && this._addControlToMap(this.control),
                this.secondaryControl && this._addControlToMap(this.secondaryControl),
                this._addEventListeners()
        },
        onDestroy: function() {
            return this._removeEventListeners(),
                this.control.deactivate(),
                this.control.destroy()
        },
        _addControlToMap: function(e) {
            !0 === e.autoActivate ? (e.autoActivate = !1,
                this.map.addControl(e),
                e.autoActivate = !0) : (this.map.addControl(e),
                e.deactivate())
        },
        _addEventListeners: function() {
            return this.control.events.on({
                activate: this.syncModelAndRender,
                deactivate: this.syncModelAndRender,
                visibilitychanged: this.render,
                enablechanged: this.render,
                scope: this
            })
        },
        _removeEventListeners: function() {
            return this.control.events.un({
                activate: this.syncModelAndRender,
                deactivate: this.syncModelAndRender,
                visibilitychanged: this.render,
                enablechanged: this.render,
                scope: this
            })
        },
        syncModelAndRender: function() {
            return this.model.set("active", this.isActive()),
                this.render()
        },
        isActive: function() {
            return this.control && this.control.active || this.secondaryControl && this.secondaryControl.active
        },
        onRender: function() {
            if (this.$el.attr({
                    class: _.result(this, "className")
                }),
                null == this.parent && this.$el.attr("title", this.model.get("title")),
                null != this.control.onRender)
                return this.control.onRender(this.$el)
        },
        _onToolbarButtonClick: function() {
            return this._triggerControl(this.control)
        },
        _onSecondaryControlClick: function(e) {
            return e.stopPropagation(),
                this._triggerControl(this.secondaryControl)
        },
        _triggerControl: function(e) {
            if (e) {
                if (!e.enabled)
                    return !1;
                switch (e.type) {
                    case OL.Control.TYPE_BUTTON:
                        e.trigger();
                        break;
                    case OL.Control.TYPE_TOGGLE:
                        this.model.get("active") ? e.deactivate() : e.activate();
                        break;
                    default:
                        return e.activate(), !1
                }
                this.trigger("controlTriggered")
            }
        },
        enable: function() {
            return this.enabled = !0,
                this.render()
        },
        disable: function() {
            return this.enabled = !1,
                this.render()
        },
        serializeData: function() {
            return {
                title: this.model.get("title"),
                control: this.control,
                secondaryControl: this.secondaryControl,
                showDrawingControls: this.model.get("showDrawingControls"),
                featureName: this.model.get("featureName")
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(9),
        r = n(s),
        o = i(10),
        a = n(o),
        l = i(4),
        u = n(l),
        d = i(15),
        c = n(d),
        h = i(163),
        p = n(h),
        f = OL.Class(r.default, {
            initialize: function(e, t) {
                this.bigJunction = e,
                    r.default.prototype.initialize.apply(this, [t]),
                    this.prevJunctionState = null
            },
            destroy: function() {
                this.model.bigJunctions.get(this.bigJunction.getID()) || this.bigJunction.destroy(),
                    this.bigJunction = null,
                    r.default.prototype.destroy.apply(this)
            },
            doAction: function() {
                var e = this;
                if (this.bigJunction.state === OpenLayers.State.DELETE)
                    return !1;
                var t = this.bigJunction.attributes.segIDs.map(function(t) {
                    return e.model.segments.get(t)
                });
                t.forEach(function(t) {
                        e.doSubAction(new c.default(t, {
                            crossroadID: null
                        }, {
                            dontSerialize: !0
                        }))
                    }),
                    this.doSubAction(new p.default(this.bigJunction.getID(), t, p.default.REMOVE_JUNCTION_FROM_SEGMENT)),
                    this.prevJunctionState = this.bigJunction.state,
                    this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                        this.model.bigJunctions.changed(this.bigJunction))
            },
            undoAction: function() {
                this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.put(this.bigJunction) : (this.bigJunction.state = this.prevJunctionState,
                        this.model.bigJunctions.changed(this.bigJunction)),
                    r.default.prototype.undoAction.apply(this)
            },
            redoAction: function() {
                this.bigJunction.state === OpenLayers.State.INSERT ? this.model.bigJunctions.remove(this.bigJunction) : (this.bigJunction.state = OpenLayers.State.DELETE,
                        this.model.bigJunctions.changed(this.bigJunction)),
                    r.default.prototype.redoAction.apply(this)
            },
            serialize: function() {
                return {
                    _objectType: u.default.BIG_JUNCTION,
                    action: a.default.TYPE.DELETE,
                    attributes: {
                        id: this.bigJunction.getID()
                    }
                }
            },
            CLASS_NAME: "Waze.Action.DeleteBigJunction"
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(10),
        r = i(86),
        o = i(109),
        a = i(4),
        l = OpenLayers.Class(n, {
            landmark: null,
            attributes: null,
            initialGeometry: null,
            initialize: function(e, t) {
                n.prototype.initialize.apply(this, [t]),
                    this.landmark = e
            },
            destroy: function() {
                this.landmark = null,
                    n.prototype.destroy.apply(this)
            },
            doAction: function() {
                var e = void 0,
                    t = void 0,
                    i = null,
                    n = void 0,
                    s = this.landmark.attributes.geometry;
                return !(!this.landmark.isPoint() && !this.landmark.is2D()) && (this.initialGeometry = this.landmark.geometry.clone(),
                    this.landmark.attributes.geometry = null,
                    this.attributes = {},
                    $.extend(!0, this.attributes, this.landmark.attributes),
                    this.landmark.attributes.geometry = s,
                    this.landmark.getID() || this.landmark.setID(this.model.venues.generateUniqueID()),
                    this.landmark.state = OpenLayers.State.INSERT,
                    this.model.venues.put(this.landmark),
                    this.model.segments.topCityID && (i = this.model.cities.get(this.model.segments.topCityID)),
                    null === i && null !== this.model.countries.top && (t = new r(this.model.states.top, this.model.countries.top, "", !0),
                        this.doSubAction(t),
                        i = t.city),
                    null !== i && (e = new o("", i, !0),
                        this.doSubAction(e),
                        n = e.street,
                        this.attributes.streetID = n.getID(),
                        this.landmark.attributes.streetID = n.getID()), !0)
            },
            undoAction: function() {
                n.prototype.undoAction.apply(this),
                    this.model.venues.remove(this.landmark)
            },
            redoAction: function() {
                this.model.venues.put(this.landmark),
                    n.prototype.redoAction.apply(this)
            },
            serialize: function() {
                var e = this.attributes;
                return e.id = this.landmark.getID(),
                    e.geometry = this.initialGeometry, {
                        _objectType: a.VENUE,
                        action: s.TYPE.ADD,
                        attributes: e
                    }
            },
            getBounds: function() {
                return this.initialGeometry.getBounds().clone()
            },
            CLASS_NAME: "Waze.Action.AddLandmark"
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(10),
        r = n(s),
        o = i(9),
        a = n(o),
        l = i(4),
        u = n(l),
        d = i(86),
        c = n(d),
        h = i(15),
        p = n(h),
        f = i(163),
        g = n(f),
        m = OL.Class(a.default, {
            bigJunction: null,
            attributes: null,
            initialize: function(e, t) {
                this.bigJunction = e,
                    a.default.prototype.initialize.apply(this, [t]),
                    this.attributes = {}
            },
            doAction: function() {
                var e = this;
                this.initialGeometry = this.bigJunction.geometry.clone();
                var t = void 0;
                this.bigJunction.getID() || (t = this.model.bigJunctions.generateUniqueID()),
                    this.bigJunction.setID(t),
                    this.bigJunction.state = OpenLayers.State.INSERT;
                var i = this._findShortSegments();
                i.forEach(function(i) {
                    e.doSubAction(new p.default(i, {
                        crossroadID: t
                    }, {
                        dontSerialize: !0
                    }))
                });
                var n = new g.default(t, i, g.default.ADD_JUNCTION_TO_SEGMENT);
                this.doSubAction(n);
                var s = n.connectedSegments,
                    r = this._findMaxRankInSegmentArray(i.concat(s)),
                    o = _.invoke(i, "getID"),
                    a = {
                        segIDs: o,
                        rank: r
                    };
                _.extend(this.attributes, a),
                    _.extend(this.bigJunction.attributes, a);
                var l = null;
                if (this.model.segments.topCityID && (l = this.model.cities.get(this.model.segments.topCityID)),
                    null === l && null != this.model.countries.top) {
                    var u = new c.default(this.model.states.top, this.model.countries.top, "", !0);
                    this.doSubAction(u),
                        l = u.city
                }
                null !== l && (this.attributes.cityID = l.getID(),
                    this.bigJunction.attributes.cityID = l.getID());
                var d = this.bigJunction.getLegalPaths();
                return d.forEach(function(e) {
                        return e.set({
                            navigable: !0
                        })
                    }),
                    this.paths = d,
                    this.bigJunction.attributes.connections = this.paths,
                    this.model.bigJunctions.put(this.bigJunction), !0
            },
            _findShortSegments: function() {
                var e = this;
                return this.model.segments.getObjectArray(function(t) {
                    var i = t.geometry.components;
                    return !t.isDeleted() && t.isDrivable() && e.initialGeometry.containsPoint(_.first(i)) && e.initialGeometry.containsPoint(_.last(i))
                })
            },
            _findMaxRankInSegmentArray: function(e) {
                for (var t = 0, i = 0; i < e.length; i++) {
                    var n = e[i],
                        s = n.getLockRank();
                    s > t && (t = s)
                }
                return t
            },
            undoAction: function() {
                return a.default.prototype.undoAction.apply(this),
                    this.model.bigJunctions.remove(this.bigJunction)
            },
            redoAction: function() {
                return this.model.bigJunctions.put(this.bigJunction),
                    a.default.prototype.redoAction.apply(this)
            },
            serialize: function() {
                var e = this.attributes;
                return e.id = this.bigJunction.getID(),
                    e.geometry = this.initialGeometry,
                    e.connections = this.paths, {
                        _objectType: u.default.BIG_JUNCTION,
                        action: r.default.TYPE.ADD,
                        attributes: e
                    }
            },
            CLASS_NAME: "Waze.Action.AddBigJunction"
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(9),
        s = i(146),
        r = i(83),
        o = i(103),
        a = i(82),
        l = i(29),
        u = i(41),
        d = i(40),
        c = i(53),
        h = i(15),
        p = i(27),
        f = i(35),
        g = i(84),
        m = OpenLayers.Class(n, {
            ELLIPSE_PRECISION: .17453292519943295,
            ellipse: null,
            containedSegments: null,
            roundaboutSegments: null,
            isLeftHand: !1,
            initialize: function(e, t) {
                n.prototype.initialize.apply(this, [t]),
                    this.ellipse = e
            },
            destroy: function() {
                this.ellipse = null,
                    n.prototype.destroy.apply(this)
            },
            doAction: function() {
                var e = this.getIntersections();
                if (e.isEmpty())
                    return !1;
                this.determineDrivingDirection(e),
                    this.deleteContainedSegments(),
                    this.modifyIntersectingSegments(e),
                    this.addRoundaboutSegments(e),
                    this.addRoundabout()
            },
            determineDrivingDirection: function(e) {
                var t = e[0][0].segments[0],
                    i = t.getAddress();
                null === i.street ? this.isLeftHand = this.model.isLeftHand : this.isLeftHand = i.country.leftHandTraffic
            },
            addRoundabout: function() {
                var e = _(this.roundaboutSegments).invoke("getID"),
                    t = new c(null, this.model.junctions, {
                        segIDs: e,
                        type: "RA"
                    });
                this.doSubAction(t);
                var i = t.object;
                this.roundaboutSegments.forEach(function(e) {
                    this.doSubAction(new h(e, {
                        junctionID: i.getID()
                    }))
                }, this)
            },
            deleteContainedSegments: function() {
                this.containedSegments.forEach(function(e) {
                    this.doSubAction(new d(e))
                }, this)
            },
            addRoundaboutSegments: function(e) {
                var t = void 0,
                    i = void 0,
                    n = void 0,
                    s = void 0,
                    r = void 0,
                    o = void 0,
                    l = void 0,
                    u = void 0;
                for (this.roundaboutSegments = [],
                    e = e.reduce(function(e, t) {
                        return e.concat(t)
                    }),
                    e.sort(function(e, t) {
                        return e.angle - t.angle
                    }),
                    e.push({
                        angle: e.first().angle,
                        point: e.first().point,
                        segments: []
                    }),
                    t = 0; t < e.length - 1; t++) {
                    for (n = e[t].point,
                        s = e[t + 1].point,
                        l = new OpenLayers.Geometry.LineString,
                        u = new p({
                            geometry: l
                        }),
                        r = e[t].angle,
                        o = e[t + 1].angle,
                        t === e.length - 2 && (o += 2 * Math.PI),
                        l.addPoint(n.clone()),
                        i = r + this.ELLIPSE_PRECISION; i < o; i += this.ELLIPSE_PRECISION)
                        l.addPoint(new OpenLayers.Geometry.Point(this.ellipse.center.x + this.ellipse.rx * Math.cos(i), this.ellipse.center.y + this.ellipse.ry * Math.sin(i)));
                    i > o && l.addPoint(s.clone()),
                        this.isLeftHand && (u.attributes.fwdDirection = !1,
                            u.attributes.revDirection = !0),
                        this.doSubAction(new a(u)),
                        this.roundaboutSegments.push(u)
                }
                e.pop(),
                    this.addNodes(e, this.roundaboutSegments)
            },
            addNodes: function(e, t) {
                var i = void 0,
                    n = void 0;
                e.forEach(function(e, s) {
                    i = e.segments.clone(),
                        i.push(t[s]),
                        i.push(t[(t.length + s - 1) % t.length]),
                        e.node ? i.forEach(function(t) {
                            t.isConnectedToNode(e.node) || this.doSubAction(new u(e.node, t))
                        }, this) : (n = new o(e.point, i),
                            this.doSubAction(n),
                            e.node = n.node),
                        this.isLeftHand ? (this.openConnection(i.first(), e.node, i.last()),
                            this.openConnection(i[1], e.node, i.first()),
                            this.openConnection(i[1], e.node, i.last())) : (this.openConnection(i.first(), e.node, i[1]),
                            this.openConnection(i.last(), e.node, i.first()),
                            this.openConnection(i.last(), e.node, i[1]))
                }, this)
            },
            openConnection: function(e, t, i) {
                if (t.isTurnAllowedBySegDirections(e, i)) {
                    var n = f.for(e, t),
                        s = f.for(i, t).getOpposite(),
                        r = this.model.getTurnGraph(),
                        o = r.getTurn(n, s);
                    o = o.withTurnData(o.getTurnData().withState(g.State.ALLOWED));
                    var a = new l(r, o);
                    this.doSubAction(a)
                }
            },
            modifyIntersectingSegments: function(e) {
                e.forEach(function(e) {
                    1 === e.length ? this.shortenSegment(e.first()) : this.splitSegment(e)
                }, this)
            },
            splitSegment: function(e) {
                var t = e.first().segments.first(),
                    i = new r(t, {
                        splitAtPoint: e.first().point,
                        splittingPointIndex: e.first().index
                    });
                this.doSubAction(i),
                    e.first().node = i.splitNode,
                    e.last().segments = [i.splits.last()],
                    e.last().index = e.last().index - e.first().index,
                    e.first().segments = [i.splits.first()],
                    this.shortenSegment(e.last())
            },
            shortenSegment: function(e) {
                var t = e.segments.first(),
                    i = t.geometry.clone();
                e.goingOut ? (t.geometry.components.splice(0, e.index + 1),
                        t.geometry.addComponent(e.point.clone(), 0)) : (t.geometry.components.splice(e.index + 1),
                        t.geometry.addComponent(e.point.clone())),
                    this.doSubAction(new s(t, i, t.geometry))
            },
            getIntersections: function() {
                var e = void 0,
                    t = this;
                return this.containedSegments = [],
                    this.model.segments.getObjectArray(function(e) {
                        return e.state !== OpenLayers.State.DELETE && e.geometry.bounds.intersectsBounds(t.ellipse.bounds)
                    }).reduce(function(i, n) {
                        return e = n.intersectionWithEllipse(t.ellipse.center, t.ellipse.rx, t.ellipse.ry),
                            e instanceof Array ? 1 !== e.length && e.first().goingOut || (e.forEach(function(e) {
                                    e.segments = [n]
                                }),
                                i.push(e)) : e && t.containedSegments.push(n),
                            i
                    }, [])
            },
            CLASS_NAME: "Waze.Action.CreateRoundabout"
        });
    e.exports = m
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(919),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Topbar/templates/loading-indicator",
        className: "loading-indicator",
        initialize: function() {
            return this.globalVent = this.options.globalVent,
                this.operations = [],
                this.globalVent.on("operationPending", this._onOperationPending, this),
                this.globalVent.on("operationDone", this._onOperationDone, this)
        },
        onDestroy: function() {
            return this.globalVent.off("operationPending", this._onOperationPending, this),
                this.globalVent.off("operationDone", this._onOperationDone, this)
        },
        _onOperationPending: function(e) {
            return this.operations.push(e.operation),
                this.render()
        },
        _onOperationDone: function(e) {
            return OL.Util.removeItem(this.operations, e.operation),
                this.render()
        },
        _hasOperations: function() {
            return this.operations.length > 0
        },
        serializeData: function() {
            var e = void 0;
            if (this._hasOperations()) {
                var t = _.last(this.operations);
                e = t.text || I18n.t(t.id)
            } else
                e = "";
            return {
                operationText: e
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(62),
        s = i(16),
        r = Marionette.View.extend({
            className: "location-info",
            template: "Waze/Modules/Topbar/templates/location-info",
            bindings: {
                ".full-address": "fullAddress"
            },
            initialize: function() {
                this._dataModel = this.options.dataModel,
                    this._map = this.options.map,
                    this.model = new Backbone.Model({
                        fullAddress: ""
                    }),
                    this._dataModel.events.register("mergeend", this, this._update),
                    this._dataModel.events.register("zoomend", this, this._update)
            },
            onDestroy: function() {
                this._dataModel.events.unregister("mergeend", this, this._update),
                    this._dataModel.events.unregister("zoomend", this, this._update)
            },
            _update: function() {
                var e = this._getAddressFromTopCity() || this._getAddressFromMainCountry() || "";
                this.model.set({
                    fullAddress: e
                })
            },
            _getAddressFromTopCity: function() {
                if (this._shouldShowTopCity()) {
                    var e = n.fromCityID(this._dataModel.segments.topCityID, this._dataModel);
                    return s.formatAddress(e)
                }
                return null
            },
            _getAddressFromMainCountry: function() {
                var e = this._dataModel.countries.top;
                return null === e ? null : e.name
            },
            _shouldShowTopCity: function() {
                return this._map.getZoom() >= W.Config.segments.minDisplayZoom && null !== this._dataModel.segments.topCityID
            },
            onRender: function() {
                this.stickit()
            }
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        HOVER_DELAY_MS: 200,
        tagName: "li",
        template: "Waze/Modules/Topbar/templates/area-managers/item",
        events: {
            "mouseenter .area-manager-item": "_onAreaMouseEnter",
            "mouseleave .area-manager-item": "_onAreaMouseLeave"
        },
        triggers: {
            "click .area-manager-item": "onAreaClicked"
        },
        _hoverTimeoutId: null,
        _hovered: !1,
        _onAreaMouseEnter: function() {
            null == this._hoverTimeoutId && (this._hoverTimeoutId = window.setTimeout(this._onHoverTimeout.bind(this), this.HOVER_DELAY_MS))
        },
        _onAreaMouseLeave: function() {
            return this._clearHoverTimeout(),
                this._hovered = !1,
                this.trigger("onAreaMouseLeave", {
                    model: this.model
                })
        },
        _onHoverTimeout: function() {
            return this._hovered = !0,
                this.trigger("onAreaMouseEnter", {
                    model: this.model
                }),
                this._clearHoverTimeout()
        },
        _clearHoverTimeout: function() {
            this._hoverTimeoutId && window.clearTimeout(this._hoverTimeoutId),
                this._hoverTimeoutId = null
        },
        onBeforeDestroy: function() {
            return this._hovered && (this._hovered = !1,
                    this.trigger("onAreaMouseLeave", {
                        model: this.model
                    })),
                this._clearHoverTimeout()
        }
    });
    t.default = n,
        e.exports = t.default
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, i) {
    i(397),
        i(948),
        e.exports = i(987)
}, function(e, t, i) {
    "use strict";
    i(398),
        i(24),
        i(654),
        i(657),
        i(658),
        i(659);
    var n = i(660),
        s = i(946);
    i(16),
        i(947),
        $(document).ready(function() {
            W.app = new n,
                W.prefs = new s,
                W.prefs.fetch(),
                W.app.start()
        })
}, function(e, t) {
    (function() {
        "use strict";
        window.Waze = window.Waze || window.W || {},
            window.W = window.Waze
    }).call(window)
}, , , , , , , , , , , , , , , , , , , , function(e, t, i) {
    var n = i(14),
        s = n.JSON || (n.JSON = {
            stringify: JSON.stringify
        });
    e.exports = function(e) {
        return s.stringify.apply(s, arguments)
    }
}, function(e, t, i) {
    i(420),
        e.exports = i(14).Object.keys
}, function(e, t, i) {
    var n = i(72),
        s = i(46);
    i(92)("keys", function() {
        return function(e) {
            return s(n(e))
        }
    })
}, function(e, t, i) {
    i(90),
        i(69),
        e.exports = i(422)
}, function(e, t, i) {
    var n = i(32),
        s = i(126);
    e.exports = i(14).getIterator = function(e) {
        var t = s(e);
        if ("function" != typeof t)
            throw TypeError(e + " is not iterable!");
        return n(t.call(e))
    }
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./Waze/Modules/BigJunction/templates/path_item.hamlc": 424,
        "./Waze/Modules/BigJunction/templates/validation_errors.hamlc": 425,
        "./Waze/Modules/Cities/templates/feature_editor.hamlc": 426,
        "./Waze/Modules/Cities/templates/layer_switcher.hamlc": 427,
        "./Waze/Modules/Closures/templates/edit.hamlc": 428,
        "./Waze/Modules/Closures/templates/item.hamlc": 429,
        "./Waze/Modules/Closures/templates/layout.hamlc": 430,
        "./Waze/Modules/Closures/templates/list.hamlc": 431,
        "./Waze/Modules/Comments/templates/feature_editor.hamlc": 432,
        "./Waze/Modules/Comments/templates/name_editor.hamlc": 433,
        "./Waze/Modules/Conversation/templates/item.hamlc": 434,
        "./Waze/Modules/Conversation/templates/list.hamlc": 435,
        "./Waze/Modules/ElementHistory/templates/history_main.hamlc": 436,
        "./Waze/Modules/ElementHistory/templates/tx_item.hamlc": 437,
        "./Waze/Modules/ElementHistory/templates/tx_object_main.hamlc": 438,
        "./Waze/Modules/ElementHistory/templates/tx_object_related.hamlc": 439,
        "./Waze/Modules/Feed/templates/feed.hamlc": 440,
        "./Waze/Modules/Feed/templates/feed_group.hamlc": 441,
        "./Waze/Modules/Feed/templates/issue_item.hamlc": 442,
        "./Waze/Modules/Feed/templates/message_item.hamlc": 443,
        "./Waze/Modules/Feed/templates/notification_detail.hamlc": 444,
        "./Waze/Modules/Feed/templates/notification_item.hamlc": 445,
        "./Waze/Modules/GeoLocation/templates/pan_button.hamlc": 446,
        "./Waze/Modules/LayerSwitcher/templates/checkbox.hamlc": 447,
        "./Waze/Modules/LayerSwitcher/templates/layer-switcher.hamlc": 448,
        "./Waze/Modules/LayerSwitcher/templates/layout.hamlc": 449,
        "./Waze/Modules/LayerSwitcher/templates/module-togglers.hamlc": 450,
        "./Waze/Modules/LayerSwitcher/templates/text-checkboxes.hamlc": 525,
        "./Waze/Modules/LayerSwitcher/templates/togglers-tree.hamlc": 526,
        "./Waze/Modules/MTE/templates/contributors/item.hamlc": 527,
        "./Waze/Modules/MTE/templates/contributors/list.hamlc": 528,
        "./Waze/Modules/MTE/templates/item_edit/closures.hamlc": 529,
        "./Waze/Modules/MTE/templates/item_edit/loading.hamlc": 530,
        "./Waze/Modules/MTE/templates/item_edit/names.hamlc": 531,
        "./Waze/Modules/MTE/templates/mte_edit_view.hamlc": 532,
        "./Waze/Modules/MTE/templates/mte_item_view.hamlc": 533,
        "./Waze/Modules/MTE/templates/mte_list.hamlc": 534,
        "./Waze/Modules/MTE/templates/sidebar.hamlc": 535,
        "./Waze/Modules/MTE/templates/toolbar_buttons.hamlc": 536,
        "./Waze/Modules/MTE/templates/topbar.hamlc": 537,
        "./Waze/Modules/MapControls/templates/mouse_position.hamlc": 538,
        "./Waze/Modules/MapControls/templates/permalink.hamlc": 539,
        "./Waze/Modules/Problems/templates/_navigation.hamlc": 540,
        "./Waze/Modules/Problems/templates/closure_description.hamlc": 541,
        "./Waze/Modules/Problems/templates/edit.hamlc": 542,
        "./Waze/Modules/Restrictions/templates/drive_profile_blocked_edit.hamlc": 543,
        "./Waze/Modules/Restrictions/templates/drive_profile_free_edit.hamlc": 544,
        "./Waze/Modules/Restrictions/templates/drive_profile_free_item.hamlc": 545,
        "./Waze/Modules/Restrictions/templates/restriction_edit.hamlc": 546,
        "./Waze/Modules/Restrictions/templates/restriction_edit_segment.hamlc": 547,
        "./Waze/Modules/Restrictions/templates/restriction_edit_validation.hamlc": 548,
        "./Waze/Modules/Restrictions/templates/restrictions_list_item.hamlc": 549,
        "./Waze/Modules/Restrictions/templates/restrictions_main.hamlc": 550,
        "./Waze/Modules/Restrictions/templates/restrictions_summary_segments.hamlc": 551,
        "./Waze/Modules/Restrictions/templates/restrictions_summary_table.hamlc": 552,
        "./Waze/Modules/Restrictions/templates/restrictions_summary_turn.hamlc": 553,
        "./Waze/Modules/Restrictions/templates/timeframe_edit.hamlc": 554,
        "./Waze/Modules/Save/templates/error_item.hamlc": 555,
        "./Waze/Modules/Save/templates/error_list.hamlc": 556,
        "./Waze/Modules/Save/templates/success.hamlc": 557,
        "./Waze/Modules/Toolbar/templates/search.hamlc": 558,
        "./Waze/Modules/Toolbar/templates/toolbar-item-group.hamlc": 559,
        "./Waze/Modules/Toolbar/templates/toolbar-item.hamlc": 560,
        "./Waze/Modules/Toolbar/templates/toolbar.hamlc": 561,
        "./Waze/Modules/Topbar/templates/area-managers/item.hamlc": 562,
        "./Waze/Modules/Topbar/templates/area-managers/layout.hamlc": 563,
        "./Waze/Modules/Topbar/templates/area-managers/main-list.hamlc": 564,
        "./Waze/Modules/Topbar/templates/area-managers/rest-list.hamlc": 565,
        "./Waze/Modules/Topbar/templates/layout.hamlc": 566,
        "./Waze/Modules/Topbar/templates/loading-indicator.hamlc": 567,
        "./Waze/Modules/Topbar/templates/location-info.hamlc": 568,
        "./templates/add_update_details.hamlc": 569,
        "./templates/additional_details.hamlc": 570,
        "./templates/address/edit.hamlc": 571,
        "./templates/archive-panel.hamlc": 572,
        "./templates/archive-sessions.hamlc": 573,
        "./templates/big-junction-edit.hamlc": 574,
        "./templates/camera-edit.hamlc": 575,
        "./templates/chat.hamlc": 576,
        "./templates/chat_message.hamlc": 577,
        "./templates/chat_user.hamlc": 578,
        "./templates/chrome_autofill_off.hamlc": 579,
        "./templates/editable-areas.hamlc": 580,
        "./templates/house-number.hamlc": 581,
        "./templates/house-numbers-lightbox.hamlc": 582,
        "./templates/instruction-override.hamlc": 583,
        "./templates/keyboard_shortcuts/list.hamlc": 584,
        "./templates/keyboard_shortcuts/modal.hamlc": 585,
        "./templates/location-message.hamlc": 586,
        "./templates/location-switcher.hamlc": 587,
        "./templates/login/login-form.hamlc": 588,
        "./templates/login/sandbox-message.hamlc": 589,
        "./templates/login/welcome-popup.hamlc": 590,
        "./templates/map.hamlc": 591,
        "./templates/node-edit.hamlc": 592,
        "./templates/opening_hours/add.hamlc": 593,
        "./templates/opening_hours/item.hamlc": 594,
        "./templates/opening_hours/layout.hamlc": 595,
        "./templates/place_updates/actions.hamlc": 596,
        "./templates/place_updates/add_details.hamlc": 597,
        "./templates/place_updates/add_image.hamlc": 598,
        "./templates/place_updates/add_venue.hamlc": 599,
        "./templates/place_updates/changed_field.hamlc": 600,
        "./templates/place_updates/changed_field_item.hamlc": 601,
        "./templates/place_updates/changed_field_parking_lot.hamlc": 602,
        "./templates/place_updates/delete_venue.hamlc": 603,
        "./templates/place_updates/external_provider/item.hamlc": 604,
        "./templates/place_updates/external_provider/list.hamlc": 605,
        "./templates/place_updates/flag.hamlc": 606,
        "./templates/place_updates/image.hamlc": 607,
        "./templates/place_updates/image_dialog.hamlc": 608,
        "./templates/place_updates/item.hamlc": 609,
        "./templates/place_updates/layout.hamlc": 610,
        "./templates/place_updates/panel_header.hamlc": 611,
        "./templates/place_updates/place_details.hamlc": 612,
        "./templates/place_updates/update_venue.hamlc": 613,
        "./templates/prefs-panel.hamlc": 614,
        "./templates/segment/address-edit.hamlc": 615,
        "./templates/segment/alt-streets-edit.hamlc": 616,
        "./templates/segment/average-speed-camera.hamlc": 617,
        "./templates/segment/edit-panel.hamlc": 618,
        "./templates/segment/flag-attribute.hamlc": 619,
        "./templates/segment/routing.hamlc": 620,
        "./templates/segment/speed-limit.hamlc": 621,
        "./templates/segment/tts-playback-popover.hamlc": 622,
        "./templates/segment/tts-playback.hamlc": 623,
        "./templates/session-expired.hamlc": 624,
        "./templates/sidebar/advanced-tools.hamlc": 625,
        "./templates/sidebar/links.hamlc": 626,
        "./templates/sidebar/sidebar.hamlc": 627,
        "./templates/sidebar/user-details.hamlc": 628,
        "./templates/sidebar/user-info.hamlc": 629,
        "./templates/sidebar/user-permissions-tooltip.hamlc": 630,
        "./templates/sidebar/user-sandbox.hamlc": 631,
        "./templates/snapshot-message.hamlc": 632,
        "./templates/snapshot-toggler.hamlc": 633,
        "./templates/snapshot_message.hamlc": 634,
        "./templates/tips/watch-tutorial.hamlc": 635,
        "./templates/tutorial-lightbox.hamlc": 637,
        "./templates/user-greeting.hamlc": 638,
        "./templates/util/day-checkboxes.hamlc": 639,
        "./templates/util/toggle-checkboxes.hamlc": 640,
        "./templates/venue/alias.hamlc": 641,
        "./templates/venue/aliases-layout.hamlc": 642,
        "./templates/venue/category-tag.hamlc": 643,
        "./templates/venue/external-provider/item.hamlc": 644,
        "./templates/venue/external-provider/list.hamlc": 645,
        "./templates/venue/suggested-categories.hamlc": 646,
        "./templates/venue/venue-categories.hamlc": 647,
        "./templates/venue/venue-edit-general.hamlc": 648,
        "./templates/venue/venue-edit-more-info-contact.hamlc": 649,
        "./templates/venue/venue-edit-more-info-parking-lot.hamlc": 650,
        "./templates/venue/venue-edit-more-info-services.hamlc": 651,
        "./templates/venue/venue-edit-more-info.hamlc": 652,
        "./templates/venue/venue-edit.hamlc": 653
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 423
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='controls-container'>\n<div class='entry-point-paths'>"),
                            a = this.paths,
                            s = n = 0,
                            r = a.length; n < r; s = ++n)
                            o = a[s],
                            i.push("<div class='clearfix path-item' data-path-index='" + t(e(s)) + "'>\n<input class='navigable-checkbox' id='" + t(e(this.getCheckboxID(o, s))) + "' type='checkbox' name='navigable" + t(e(s)) + "' checked='" + t(e(o.get("navigable"))) + "' disabled='" + t(e(!this.enableEditing || !o.isLegal())) + "' data-path-index='" + t(e(s)) + "'>\n<label for='" + t(e(this.getCheckboxID(o, s))) + "'>\n<div class='entry path-access-point'>" + t(e(this.getFromName(o))) + "</div>\nto\n<div class='exit path-access-point'>" + t(e(this.getToName(o))) + "</div>"),
                            o.isLegal() || i.push("" + e(this.renderPartial("Waze/Modules/BigJunction/templates/validation_errors", o))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='errors'>"),
                            this.hasRestrictions() && i.push("" + t(e(this.t("edit.big_junction.validation_errors.has_restrictions")))),
                            this.trivialConnectionExists() && i.push("" + t(e(this.t("edit.big_junction.validation_errors.trivial_connection_exists")))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='city-feature-editor'>\n<div class='feature-editor-header'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.city.title"))) + "</span>\n</div>\n<div class='preview'>\n<span class='city-name'>"),
                            i.push("" + t(e(this.city.attributes.name))),
                            i.push("</span>"),
                            this.canEdit && i.push("<a class='edit-button'>\n<i class='waze-icon-edit'></i>\n</a>"),
                            i.push("</div>\n</div>\n<form class='attributes-form inner-form'>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("edit.address.city")))),
                            i.push("</label>\n<div class='controls'>\n<input class='city-name form-control' type='text' autocomplete='off'>\n</div>\n</div>\n<div class='action-buttons'>\n<button class='btn btn-default cancel-button' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n<button class='btn btn-primary save-button' type='button'>" + t(e(this.t("edit.apply"))) + "</button>\n</div>\n<div class='loading waze-loader-sm'></div>\n</form>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return e = this.__cleanValue,
                            t = [],
                            i = "Waze/Modules/LayerSwitcher/templates/checkbox",
                            n = "Waze/Modules/LayerSwitcher/templates/text-checkboxes",
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_CITIES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_CITY_NAMES"),
                                items: [{
                                    id: "ITEM_CITY_NAMES",
                                    iconName: "visible"
                                }]
                            }))),
                            t.push("</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["edit-closure", "" + t(e(this.newClosure ? "new" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            this.showHeader && i.push("<div class='header'>\n<a class='cancel-button pull-right'>" + t(e(this.t("edit.cancel"))) + "</a>\n<h4 class='title'>" + t(e(this.t("closures.add"))) + "</h4>\n</div>"),
                            i.push("<form class='form' action='#' method='post'>\n<div class='form-group'>\n<label class='control-label' for='closure_reason'>" + t(e(this.t("closures.fields.reason"))) + "</label>\n<div class='controls'>\n<input class='form-control' type='text' name='closure_reason'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_direction'>" + t(e(this.t("closures.fields.direction"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='closure_direction'>"),
                            r = [1, 2, 3],
                            n = 0,
                            s = r.length; n < s; n++)
                            o = r[n],
                            i.push("<option value='" + t(e(o)) + "'>" + t(e(this.t("segment.direction." + o))) + "</option>");
                        return i.push("</select>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_startDate'>" + t(e(this.t("closures.fields.startDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='form-control start-date' type='text' name='closure_startDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text' name='closure_startTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label' for='closure_endDate'>" + t(e(this.t("closures.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='end-date form-control' type='text' name='closure_endDate'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text' name='closure_endTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>"),
                            this.canEditMTE && (i.push("<div class='form-group'>\n<label class='control-label control-label-inline' for='closure_eventId'>" + t(e(this.t("closures.fields.event"))) + "</label>\n<i class='mte-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.mte"))) + "'></i>\n<div class='controls'>\n<div class='mte-message mte-message-empty'>"),
                                i.push("" + t(e(this.t("closures.no_events_empty_dates")))),
                                i.push("</div>\n<select class='form-control' name='closure_eventId' required='" + t(e(this.newClosure)) + "'></select>\n</div>\n</div>")),
                            i.push("<div class='checkbox'>\n<label class='control-label control-label-inline'>\n<input type='checkbox' name='closure_permanent'>"),
                            i.push("" + t(e(this.t("closures.fields.permanent")))),
                            i.push("</label>\n<i class='permanent-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("closures.tooltip.permanent"))) + "'></i>\n</div>\n<input type='submit' style='display: none;'>\n<ul class='additional-attributes list-unstyled'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.closures[0]))),
                            null != this.getProvider() && i.push("<li>" + t(e(this.t("closures.fields.provider", {
                                provider: this.getProvider()
                            }))) + "</li>"),
                            i.push("</ul>\n<div class='message' style='display: none'></div>\n<div class='action-buttons'>\n<div class='btn btn-primary save-button'>\n<i class='fa fa-save'></i>"),
                            i.push("" + t(e(this.t("toolbar.save.title")))),
                            i.push("</div>"),
                            this.showFooterCancelButton && i.push("<div class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</div>"),
                            i.push("</div>\n</form>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='details section'>"),
                            this.canEdit && (i.push("<div class='buttons pull-right'>"),
                                this.showLocateButton && i.push("<a class='locate'>\n<i class='waze-icon-crosshair'></i>\n</a>"),
                                i.push("<a class='delete'>\n<i class='waze-icon-trash'></i>\n</a>\n<a class='edit'>\n<i class='waze-icon-edit'></i>\n</a>\n</div>"),
                                this.showApplyToAll && i.push("<a class='apply-to-all' href='#'>" + t(e(this.t("closures.apply_to_all"))) + "</a>")),
                            i.push("<div class='direction'>"),
                            this.direction === this.DIRECTION.A_TO_B ? i.push("<div class='dir-icon'>A</div>\n<div class='dir-sep'></div>\n<div class='dir-icon'>B</div>") : this.direction === this.DIRECTION.B_TO_A ? i.push("<div class='dir-icon'>B</div>\n<div class='dir-sep'></div>\n<div class='dir-icon'>A</div>") : (i.push("<div class='dir-label span'>"),
                                i.push("" + t(e(this.t("segment.direction.label." + this.direction)))),
                                i.push("</div>")),
                            i.push("</div>\n<div class='description'>" + t(e(this.description)) + "</div>"),
                            this.eventName && (i.push("<div class='event-name'>\n<i class='waze-icon-event'></i>"),
                                i.push("" + e(this.eventName)),
                                i.push("</div>")),
                            i.push("</div>\n<div class='dates row section'>\n<div class='col-xs-6 start-date'>\n<div class='date-label'>" + t(e(this.t("closures.headers.start"))) + "</div>"),
                            this.isStartDateSet ? i.push("<div class='date'>" + t(e(this.formatDate(this.startDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.startDate))) + "</div>") : i.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            i.push("</div>\n<div class='col-xs-6 end-date'>\n<div class='date-label'>" + t(e(this.t("closures.headers.end"))) + "</div>"),
                            this.isEndDateSet ? i.push("<div class='date'>" + t(e(this.formatDate(this.endDate))) + "</div>\n<div class='time'>" + t(e(this.formatTime(this.endDate))) + "</div>") : i.push("<div class='date'>" + t(e(this.t("closures.date_not_set"))) + "</div>"),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='main'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.canEdit && this.canAdd ? (i.push("<div class='add-closure-button btn btn-pastrama btn-positive'>\n<i class='fa fa-plus'></i>"),
                                i.push("" + t(e(this.t("closures.add")))),
                                i.push("</div>")) : this.showSaveMessage ? i.push("<div class='alert alert-danger'>" + t(e(this.t("closures.save_your_changes"))) + "</div>") : this.showActivateRepoMessage && i.push("<div class='alert alert-danger'>" + t(e(this.t("closures.enable_layer"))) + "</div>"),
                            i.push("<ul class='full-closures list-unstyled'></ul>"),
                            this.showPartialClosuresHeader && i.push("<div class='partial-closures-header' style='display: none;'>" + t(e(this.t("closures.partial_header"))) + "</div>"),
                            i.push("<ul class='list-unstyled partial-closures'></ul>\n<div class='message' style='display: none'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = function(e) {
                                return e.replace(/\n/g, "&#x000A;")
                            },
                            i = [],
                            i.push("<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.map_comment.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane'></div>\n<div class='name-editor-region'></div>\n<div class='conversation-region'></div>\n<form class='attributes-form side-panel-section'>"),
                            this.comment.isNew() && i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control new-subject-input' type='text' name='subject' value='" + t(e(this.comment.attributes.subject)) + "'>\n<div class='input-max-length new-subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='form-control new-body-input' name='body'>" + n(t(e(this.comment.attributes.body))) + "</textarea>\n<div class='input-max-length new-body-max-length'></div>\n</div>\n</div>"),
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.lock"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='lockRank'>"),
                            this.editable)
                            for (r = s = 0,
                                o = this.userRank; 0 <= o ? s <= o : s >= o; r = 0 <= o ? ++s : --s)
                                i.push("" + e(this.h.option(this.h.formatRank(r), r, this.comment.attributes.lockRank)));
                        else
                            i.push("<option>" + t(e(this.h.formatRank(this.comment.attributes.lockRank))) + "</option>");
                        return i.push("</select>\n</div>\n</div>\n<div class='end-date-form-group form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.endDate"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<span class='input-group-addon'>\n<input class='no-end-date' type='checkbox'>\n</span>\n<input class='end-date form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.type"))) + "</label>\n<div class='controls'>\n<div class='btn-group' data-toggle='buttons'>\n<label class='" + ["btn", "btn-default", "" + t(e(this.comment.isPoint() ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.comment.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(this.comment.isPoint())) + "' value='true'>"),
                            i.push("" + t(e(this.t("edit.map_comment.type.point")))),
                            i.push("</label>\n<label class='" + ["btn", "btn-default", "" + t(e(this.comment.isPoint() ? void 0 : "active"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.comment.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(!this.comment.isPoint())) + "' value='false'>"),
                            i.push("" + t(e(this.t("edit.map_comment.type.area")))),
                            i.push("</label>\n</div>\n</div>\n</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.comment.attributes))),
                            i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.comment.getID()
                            }))) + "</li>\n</ul>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='preview'>\n<h3 class='subject-preview'></h3>\n<div class='body-preview'></div>\n<div class='edit-button'>\n<i class='waze-icon-edit'></i>\n</div>\n</div>\n<form class='edit'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.subject"))) + "</label>\n<div class='controls'>\n<input class='form-control subject-input' type='text'>\n<div class='input-max-length subject-max-length'></div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.map_comment.fields.body"))) + "</label>\n<div class='controls'>\n<textarea class='body-textarea form-control'></textarea>\n<div class='body-max-length input-max-length'></div>\n</div>\n</div>\n<button class='apply-button btn btn-block btn-primary' type='submit'>"),
                            i.push("" + t(e(this.t("edit.map_comment.name_edit.apply")))),
                            i.push("</button>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["comment-content", "" + t(e(this.isByReporter() ? "reporter" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='comment-title'>\n<span class='username'>" + t(e(this.getUserName())) + "</span>\n<span class='date'>" + t(e(I18n.l("date.formats.long", this.createdOn))) + "</span>\n</div>\n<div class='text'>"),
                            o = this.getCommentLines(),
                            n = 0,
                            s = o.length; n < s; n++)
                            r = o[n],
                            i.push("" + t(e(r))),
                            i.push("<br>");
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='no-comments'>"),
                            i.push("" + t(e(this.t("conversation.no_comments")))),
                            i.push("<br>"),
                            i.push("" + t(e(this.t("conversation.ask")))),
                            i.push("</div>\n<ul class='comment-list list-unstyled'></ul>\n<form class='clearfix new-comment-form'>\n<div class='controls-container'>\n<textarea class='form-control new-comment-text' placeholder='" + t(e(this.t("conversation.enter"))) + "' required></textarea>\n<div class='input-max-length new-comment-max-length'></div>\n<button class='btn btn-default send-button' type='submit'>" + t(e(this.t("conversation.send"))) + "</button>"),
                            i.push("" + e(this.h.checkbox(this.t("conversation.follow"), "follow", "on"))),
                            i.push("</div>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='elementHistoryContainer'>\n<div class='toggleHistory'>\n<div class='showHistory'>"),
                            i.push("" + t(e(this.t("element_history.show")))),
                            i.push("</div>\n<div class='hideHistory'>"),
                            i.push("" + t(e(this.t("element_history.hide")))),
                            i.push("</div>\n</div>\n<div class='historyContent'>\n<div class='history-message historyEmpty'>"),
                            i.push("" + t(e(this.t("element_history.no_history")))),
                            i.push("</div>\n<div class='transactions'></div>\n<div class='loadingHistory'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='loadMoreContainer'>\n<div class='btn btn-block btn-default loadMoreHistory'>"),
                            i.push("" + t(e(this.t("element_history.load_more")))),
                            i.push("</div>\n</div>\n<div class='history-message historyError'>"),
                            i.push("" + t(e(this.t("element_history.history_error")))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='tx-header'>\n<div class='tx-summary'>\n<div class='tx-author-date'>"),
                            i.push("" + t(e(this.h.dateOnlyString(this.date)))),
                            i.push("" + t(e(this.t("element_history.changed_by")))),
                            i.push("" + e(this.userProfile)),
                            i.push("</div>\n<div class='tx-preview'>"),
                            this.mainObjectAction && (i.push("<div>"),
                                i.push("" + t(e(this.mainObjectAction))),
                                i.push("</div>")),
                            this.previewItems && (i.push("<div>"),
                                i.push("" + t(e(this.previewItems))),
                                i.push("</div>")),
                            i.push("</div>\n</div>\n<div class='flex-noshrink tx-toggle-closed'></div>\n</div>\n<div class='tx-content'>\n<div class='main-object-region tx-changes'></div>\n<div class='related-objects-region tx-changes'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            o = this.changedAttributes,
                            s = 0,
                            r = o.length; s < r; s++)
                            n = o[s],
                            i.push("<li class='" + ["tx-changed-attribute", "" + t(e(n.isVisual ? "ca-visual" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='ca-name'>"),
                            i.push("" + t(e(n.displayName))),
                            i.push("</div>\n<div class='" + ["ca-preview", "ca-" + t(e(n.name))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            n.oldValue && n.newValue ? (i.push("" + t(e(this.t("element_history.changed_from")))),
                                i.push("<span class='ca-value ca-value-old'>"),
                                n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : i.push("" + t(e(n.oldValue))),
                                i.push("</span>\n<span>"),
                                i.push("" + t(e(this.t("element_history.changed_to")))),
                                i.push("</span>\n<span class='ca-value ca-value-new'>"),
                                n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : i.push("" + t(e(n.newValue))),
                                i.push("</span>")) : (n.oldValue && (i.push("<span class='ca-value ca-value-old'>"),
                                    n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.old_value")))) : i.push("" + t(e(n.oldValue))),
                                    i.push("</span>\n<span>"),
                                    i.push("" + t(e(this.t("element_history.actions.default.DELETE")))),
                                    i.push("</span>")),
                                n.newValue && (i.push("<span class='ca-value ca-value-new'>"),
                                    n.isVisual ? i.push("" + t(e(this.t("element_history.visual_attributes.new_value")))) : i.push("" + t(e(n.newValue))),
                                    i.push("</span>\n<span>"),
                                    i.push("" + t(e(this.t("element_history.actions.default.ADD")))),
                                    i.push("</span>"))),
                            i.push("</div>\n</li>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<span class='ro-name'>"),
                            i.push("" + t(e(this.displayName))),
                            i.push("</span>\n<span class='ro-value'>"),
                            i.push("" + t(e(this.displayValue))),
                            i.push("</span>\n<span class='ro-action'>"),
                            i.push("" + t(e(this.actionText))),
                            i.push("</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='feed-content'>\n<div class='feed-first-time-messages'></div>\n<div class='feed-notifications'></div>\n<div class='feed-messages'></div>\n<div class='feed-issues'></div>\n</div>\n<div class='feed-load-section'>\n<div class='feed-loading sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n<div class='feed-empty'>\n<div class='feed-empty-message'>"),
                            i.push("" + t(e(this.t("feed.empty")))),
                            i.push("</div>\n<div class='feed-empty-image'></div>\n</div>\n<div class='feed-more'>\n<div class='btn btn-block btn-default feed-load-more'>"),
                            i.push("" + t(e(this.t("feed.load_more")))),
                            i.push("</div>\n<div class='feed-loading-more sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n</div>\n<div class='feed-first-time-load'>\n<div class='feed-loading-text-container'>\n<div class='feed-loading-first-time-text'>" + t(e(this.t("feed.load_first_time"))) + "</div>\n<div class='dots-animation'></div>\n</div>\n<div class='feed-loading-first sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<ul class='feed-list'></ul>\n<div class='toggle'>\n<a class='counter' href='#'></a>\n<span class='icon-toggle'></span>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='banner'></div>\n<div class='inner'>\n<div class='delete'></div>\n<div class='save-alert'></div>\n<div class='content'>"),
                            this.motivation && (i.push("<div class='motivation'>\n<i class='waze-icon-star'></i>"),
                                i.push("" + t(e(this.motivation))),
                                i.push("</div>")),
                            i.push("<div class='title'>\n<span class='type'>" + t(e(this.type)) + "</span>\n<span class='timestamp'>"),
                            i.push("      " + t(e(this.timestamp))),
                            i.push("</span>\n</div>\n<div class='subtext'>"),
                            this.place && i.push("<span class='place'>" + t(e("" + this.place)) + "</span>"),
                            this.street && (this.place && i.push("<span>" + t(e(", ")) + "</span>"),
                                i.push("<span class='street'>" + t(e("" + this.street)) + "</span>")),
                            this.city && i.push("<span class='city'>" + t(e(", " + this.city)) + "</span>"),
                            this.state && i.push("<span class='state'>" + t(e(", " + this.state)) + "</span>"),
                            this.country && i.push("<span class='country'>" + t(e(", " + this.country)) + "</span>"),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='inner'>\n<div class='delete'></div>\n<div class='image'></div>\n<div class='content'>\n<div class='title'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>\n<div class='from'>"),
                            i.push("" + t(e(this.t("feed.messages.from")))),
                            i.push("<div class='sender'>"),
                            i.push("" + t(e(this.sender))),
                            i.push("</div>\n</div>\n<div class='timestamp'>"),
                            i.push("    " + t(e(this.timestamp))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='header'>\n<div class='buttons'>\n<div class='close-panel'>×</div>\n<div class='delete'></div>\n</div>\n<div class='title'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>\n<div class='timestamp'>"),
                            i.push("" + t(e(this.timestamp))),
                            i.push("</div>\n</div>\n<div class='body'>"),
                            this.imageURL && i.push("<section class='image'>\n<img src='" + t(e(this.imageURL)) + "'>\n</section>"),
                            this.subject && i.push("<section class='heading'>\n<h2>" + t(e(this.subject)) + "</h2>\n</section>"),
                            this.sender && (i.push("<section class='sender'>"),
                                i.push("" + t(e(this.t("feed.messages.from")))),
                                i.push("<a href='" + t(e(this.senderURL)) + "' target='_blank'>" + t(e(this.sender)) + "</a>\n</section>")),
                            i.push("<section class='content'>"),
                            i.push("" + t(e(this.message))),
                            i.push("</section>"),
                            this.linkText && i.push("<section class='link'>\n<a href='" + t(e(this.linkURL)) + "' target='_blank'>" + t(e(this.linkText)) + "</a>\n</section>"),
                            i.push("</div>\n<div class='footer'>\n<section class='buttons'>"),
                            this.buttonText && (i.push("<a class='btn btn-block btn-primary' href='" + t(e(this.buttonURL)) + "' target='_blank'>"),
                                i.push("" + t(e(this.buttonText))),
                                i.push("</a>")),
                            this.hasNext ? (i.push("<div class='btn btn-block btn-default next'>"),
                                i.push("" + t(e(this.t("feed.details.next")))),
                                i.push("</div>")) : (i.push("<div class='btn btn-block btn-default done'>"),
                                i.push("" + t(e(this.t("feed.details.done")))),
                                i.push("</div>")),
                            i.push("</section>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='inner'>\n<div class='delete'></div>\n<div class='image'></div>\n<div class='content'>\n<div class='title'>"),
                            i.push("" + t(e(this.title))),
                            i.push("</div>\n<div class='subtext'>"),
                            i.push("" + t(e(this.shortMessage))),
                            i.push("</div>\n<div class='timestamp'>"),
                            i.push("    " + t(e(this.timestamp))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<button class='btn btn-default pan-button'>\n<span></span>\n</button>\n<button class='btn btn-default loading' disabled='" + t(e(!0)) + "'>\n<span class='fa-spin'></span>\n</button>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            n = "layer-switcher-" + this.id.toLowerCase(),
                            i.push("<div class='" + ["toggler", "controls-container", "" + t(e(this.classes))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<input class='" + ["toggle", "" + t(e(n))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' id='" + t(e(n)) + "' type='checkbox'>\n<label for='" + t(e(n)) + "'>\n<span class='label-text'>" + t(e(this.t("layer_switcher.togglers." + this.id))) + "</span>\n</label>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='layer-switcher-container'>\n<div class='toolbar-button waze-icon-layers'></div>\n<div class='menu not-visible'>\n<div class='more-options-toggle'>\n<label>\n<div class='title'></div>\n<input type='checkbox' name='show-more-options'>\n</label>\n<div class='pinned text-checkbox'>\n<input id='layer-switcher-pinned-input' type='checkbox' name='pinned'>\n<label for='layer-switcher-pinned-input' title='" + t(e(this.t("Pin layer switcher"))) + "'>\n<i class='waze-icon-pin'></i>\n</label>\n</div>\n</div>\n<div class='scrollable'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/LayerSwitcher/templates/togglers-tree"))),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='layer-switcher-container'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, o, a, l, u, d, c, h;
                        for (e = this.__cleanValue,
                            t = [],
                            s = "Waze/Modules/LayerSwitcher/templates/checkbox",
                            n = i(26),
                            o = n.getLayerSwitcherConfig(),
                            a = 0,
                            u = o.length; a < u; a++)
                            for (r = o[a],
                                c = r.togglers,
                                l = 0,
                                d = c.length; l < d; l++)
                                h = c[l],
                                h.parent === this.id && (t.push("<li>"),
                                    h.template ? t.push("" + e(this.renderPartial(h.template))) : t.push("" + e(this.renderPartial(s, {
                                        id: h.id
                                    }))),
                                    t.push("</li>"));
                        return t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./Cities/Manifest": 452,
        "./Comments/Manifest": 520
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 451
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r, o = i(17),
        a = n(o),
        l = i(175),
        u = n(l),
        d = i(455),
        c = n(d),
        h = i(176),
        p = n(h),
        f = i(456),
        g = n(f),
        m = i(518),
        v = n(m),
        _ = i(26),
        y = n(_),
        b = i(519),
        E = n(b),
        w = i(196),
        S = n(w),
        M = i(99),
        C = n(M),
        T = i(136),
        A = n(T),
        I = y.default.LAYER_TYPE;
    t.default = {
            entryPoint: {
                callback: "init",
                class: E.default
            },
            feature: {
                repositoryName: "cities",
                repositoryClass: g.default,
                featureType: "city",
                modelClass: p.default,
                featureEditorClass: v.default,
                repositoryConfig: {
                    onDemand: !1,
                    storePersistentSeparately: !0
                }
            },
            layers: [{
                type: I.FEATURE,
                uniqueName: u.default.FEATURES_LAYER_NAME,
                options: {
                    objectType: "city",
                    selectable: !0,
                    visibleByDefault: !1
                }
            }, {
                type: I.MARKER,
                uniqueName: u.default.MARKERS_LAYER_NAME,
                options: {
                    name: I18n.t("layers.name.city_names"),
                    objectType: "city",
                    visibleByDefault: !1,
                    markerClass: c.default,
                    filter: function(e) {
                        return e.showMarker()
                    }
                }
            }, {
                type: I.RASTER,
                uniqueName: u.default.RASTER_LAYER_NAME,
                options: {
                    uniqueName: "cities",
                    visible: !1,
                    type: "mapnik",
                    options: {
                        alpha: !1,
                        opacity: 1,
                        transitionEffect: null,
                        isBaseLayer: !1,
                        zoomOffset: 12,
                        draggable: !0,
                        gutter: 0
                    },
                    params: {
                        clientLayer: "cities"
                    }
                }
            }],
            layerSwitcher: {
                togglers: [{
                    parent: u.default.GROUP_DISPLAY,
                    toggler: S.default.of(u.default.GROUP_CITIES, [C.default.of(u.default.ITEM_CITY_NAMES, new A.default(u.default.MARKERS_LAYER_NAME))], new A.default(u.default.RASTER_LAYER_NAME)),
                    template: "Waze/Modules/Cities/templates/layer_switcher"
                }],
                defaultVisibility: (s = {},
                    (0,
                        a.default)(s, u.default.GROUP_CITIES, !1),
                    (0,
                        a.default)(s, u.default.ITEM_CITY_NAMES, !1),
                    s),
                bitNumbers: (r = {},
                    (0,
                        a.default)(r, u.default.GROUP_CITIES, 27),
                    (0,
                        a.default)(r, u.default.ITEM_CITY_NAMES, 28),
                    r)
            }
        },
        e.exports = t.default
}, function(e, t, i) {
    i(454);
    var n = i(14).Object;
    e.exports = function(e, t, i) {
        return n.defineProperty(e, t, i)
    }
}, function(e, t, i) {
    var n = i(28);
    n(n.S + n.F * !i(37), "Object", {
        defineProperty: i(31).f
    })
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(19);
    t.default = OL.Class(OL.Marker, {
            initialize: function(e) {
                return this.model = e,
                    this.icon = new n("city-name-marker"),
                    this.lonlat = e.attributes.geometry.toLonLat(),
                    OL.Marker.prototype.initialize.call(this, this.lonlat, this.icon),
                    this.render(),
                    this
            },
            render: function() {
                this.icon.div.textContent = this.model.attributes.name,
                    this.icon.div.attributes.cityId = this.model.getID()
            },
            highlight: function() {
                this.icon.div.classList.add("selected")
            },
            unhighlight: function() {
                this.icon.div.classList.remove("selected")
            }
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(59),
        g = n(f),
        m = i(8),
        v = n(m),
        _ = i(60),
        y = i(128),
        b = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "initialize",
                    value: function() {
                        (0,
                            g.default)(t.prototype.__proto__ || (0,
                            a.default)(t.prototype), "initialize", this).apply(this, arguments),
                            this.descartes = new y(W.map)
                    }
                }, {
                    key: "getByAttributes",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = (0,
                                r.default)(e);
                        return 0 === t.length ? [] : this.getObjectArray().filter(function(i) {
                            return t.every(function(t) {
                                return i.attributes[t] === e[t]
                            })
                        })
                    }
                }, {
                    key: "getValidCities",
                    value: function() {
                        return this.getObjectArray().filter(function(e) {
                            return e.hasName() && !e.isEmpty()
                        })
                    }
                }, {
                    key: "getCityExists",
                    value: function(e, t, i) {
                        var n;
                        return (n = this.descartes).getCityExists.apply(n, Array.prototype.slice.call(arguments).concat([this.currentDataBounds]))
                    }
                }]),
                t
        }(_);
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    i(458),
        e.exports = i(14).Object.getPrototypeOf
}, function(e, t, i) {
    var n = i(72),
        s = i(170);
    i(92)("getPrototypeOf", function() {
        return function(e) {
            return s(n(e))
        }
    })
}, function(e, t, i) {
    e.exports = {
        default: i(460),
        __esModule: !0
    }
}, function(e, t, i) {
    i(461);
    var n = i(14).Object;
    e.exports = function(e, t) {
        return n.getOwnPropertyDescriptor(e, t)
    }
}, function(e, t, i) {
    var n = i(33),
        s = i(124).f;
    i(92)("getOwnPropertyDescriptor", function() {
        return function(e, t) {
            return s(n(e), t)
        }
    })
}, function(e, t, i) {
    e.exports = {
        default: i(463),
        __esModule: !0
    }
}, function(e, t, i) {
    i(464),
        e.exports = i(14).Object.setPrototypeOf
}, function(e, t, i) {
    var n = i(28);
    n(n.S, "Object", {
        setPrototypeOf: i(465).set
    })
}, function(e, t, i) {
    var n = i(44),
        s = i(32),
        r = function(e, t) {
            if (s(e), !n(t) && null !== t)
                throw TypeError(t + ": can't set as prototype!")
        };
    e.exports = {
        set: Object.setPrototypeOf || ("__proto__" in {} ? function(e, t, n) {
            try {
                n = i(56)(Function.call, i(124).f(Object.prototype, "__proto__").set, 2),
                    n(e, []),
                    t = !(e instanceof Array)
            } catch (e) {
                t = !0
            }
            return function(e, i) {
                return r(e, i),
                    t ? e.__proto__ = i : n(e, i),
                    e
            }
        }({}, !1) : void 0),
        check: r
    }
}, function(e, t, i) {
    e.exports = {
        default: i(467),
        __esModule: !0
    }
}, function(e, t, i) {
    i(468);
    var n = i(14).Object;
    e.exports = function(e, t) {
        return n.create(e, t)
    }
}, function(e, t, i) {
    var n = i(28);
    n(n.S, "Object", {
        create: i(116)
    })
}, function(e, t, i) {
    i(470),
        e.exports = i(14).Object.values
}, function(e, t, i) {
    var n = i(28),
        s = i(471)(!1);
    n(n.S, "Object", {
        values: function(e) {
            return s(e)
        }
    })
}, function(e, t, i) {
    var n = i(46),
        s = i(33),
        r = i(73).f;
    e.exports = function(e) {
        return function(t) {
            for (var i, o = s(t), a = n(o), l = a.length, u = 0, d = []; l > u;)
                r.call(o, i = a[u++]) && d.push(e ? [i, o[i]] : o[i]);
            return d
        }
    }
}, function(e, t, i) {
    "use strict";
    e.exports = OpenLayers.Class({
        lastValue: null,
        step: null,
        initialize: function(e, t) {
            var i = isNaN(e) ? 0 : e;
            this.step = isNaN(t) || 0 === t ? 1 : t,
                this.lastValue = i - this.step
        },
        last: function() {
            return this.lastValue
        },
        next: function() {
            return this.lastValue += this.step,
                this.lastValue
        },
        peek: function() {
            return this.lastValue + this.step
        },
        CLASS_NAME: "Waze.Model.IDGenerator"
    })
}, function(e, t, i) {
    i(173),
        i(69),
        i(90),
        i(474),
        e.exports = i(14).Promise
}, function(e, t, i) {
    "use strict";
    var n, s, r, o = i(87),
        a = i(25),
        l = i(56),
        u = i(127),
        d = i(28),
        c = i(44),
        h = i(113),
        p = i(475),
        f = i(476),
        g = i(477),
        m = i(179).set,
        v = i(479)(),
        _ = a.TypeError,
        y = a.process,
        b = a.Promise,
        y = a.process,
        E = "process" == u(y),
        w = function() {},
        S = !! function() {
            try {
                var e = b.resolve(1),
                    t = (e.constructor = {})[i(22)("species")] = function(e) {
                        e(w, w)
                    };
                return (E || "function" == typeof PromiseRejectionEvent) && e.then(w) instanceof t
            } catch (e) {}
        }(),
        M = function(e, t) {
            return e === t || e === b && t === r
        },
        C = function(e) {
            var t;
            return !(!c(e) || "function" != typeof(t = e.then)) && t
        },
        T = function(e) {
            return M(b, e) ? new A(e) : new s(e)
        },
        A = s = function(e) {
            var t, i;
            this.promise = new e(function(e, n) {
                    if (void 0 !== t || void 0 !== i)
                        throw _("Bad Promise constructor");
                    t = e,
                        i = n
                }),
                this.resolve = h(t),
                this.reject = h(i)
        },
        I = function(e) {
            try {
                e()
            } catch (e) {
                return {
                    error: e
                }
            }
        },
        O = function(e, t) {
            if (!e._n) {
                e._n = !0;
                var i = e._c;
                v(function() {
                    for (var n = e._v, s = 1 == e._s, r = 0; i.length > r;)
                        ! function(t) {
                            var i, r, o = s ? t.ok : t.fail,
                                a = t.resolve,
                                l = t.reject,
                                u = t.domain;
                            try {
                                o ? (s || (2 == e._h && k(e),
                                        e._h = 1), !0 === o ? i = n : (u && u.enter(),
                                        i = o(n),
                                        u && u.exit()),
                                    i === t.promise ? l(_("Promise-chain cycle")) : (r = C(i)) ? r.call(i, a, l) : a(i)) : l(n)
                            } catch (e) {
                                l(e)
                            }
                        }(i[r++]);
                    e._c = [],
                        e._n = !1,
                        t && !e._h && L(e)
                })
            }
        },
        L = function(e) {
            m.call(a, function() {
                var t, i, n, s = e._v;
                if (D(e) && (t = I(function() {
                            E ? y.emit("unhandledRejection", s, e) : (i = a.onunhandledrejection) ? i({
                                promise: e,
                                reason: s
                            }) : (n = a.console) && n.error && n.error("Unhandled promise rejection", s)
                        }),
                        e._h = E || D(e) ? 2 : 1),
                    e._a = void 0,
                    t)
                    throw t.error
            })
        },
        D = function(e) {
            if (1 == e._h)
                return !1;
            for (var t, i = e._a || e._c, n = 0; i.length > n;)
                if (t = i[n++],
                    t.fail || !D(t.promise))
                    return !1;
            return !0
        },
        k = function(e) {
            m.call(a, function() {
                var t;
                E ? y.emit("rejectionHandled", e) : (t = a.onrejectionhandled) && t({
                    promise: e,
                    reason: e._v
                })
            })
        },
        R = function(e) {
            var t = this;
            t._d || (t._d = !0,
                t = t._w || t,
                t._v = e,
                t._s = 2,
                t._a || (t._a = t._c.slice()),
                O(t, !0))
        },
        x = function(e) {
            var t, i = this;
            if (!i._d) {
                i._d = !0,
                    i = i._w || i;
                try {
                    if (i === e)
                        throw _("Promise can't be resolved itself");
                    (t = C(e)) ? v(function() {
                        var n = {
                            _w: i,
                            _d: !1
                        };
                        try {
                            t.call(e, l(x, n, 1), l(R, n, 1))
                        } catch (e) {
                            R.call(n, e)
                        }
                    }): (i._v = e,
                        i._s = 1,
                        O(i, !1))
                } catch (e) {
                    R.call({
                        _w: i,
                        _d: !1
                    }, e)
                }
            }
        };
    S || (b = function(e) {
                p(this, b, "Promise", "_h"),
                    h(e),
                    n.call(this);
                try {
                    e(l(x, this, 1), l(R, this, 1))
                } catch (e) {
                    R.call(this, e)
                }
            },
            n = function(e) {
                this._c = [],
                    this._a = void 0,
                    this._s = 0,
                    this._d = !1,
                    this._v = void 0,
                    this._h = 0,
                    this._n = !1
            },
            n.prototype = i(480)(b.prototype, {
                then: function(e, t) {
                    var i = T(g(this, b));
                    return i.ok = "function" != typeof e || e,
                        i.fail = "function" == typeof t && t,
                        i.domain = E ? y.domain : void 0,
                        this._c.push(i),
                        this._a && this._a.push(i),
                        this._s && O(this, !1),
                        i.promise
                },
                catch: function(e) {
                    return this.then(void 0, e)
                }
            }),
            A = function() {
                var e = new n;
                this.promise = e,
                    this.resolve = l(x, e, 1),
                    this.reject = l(R, e, 1)
            }
        ),
        d(d.G + d.W + d.F * !S, {
            Promise: b
        }),
        i(89)(b, "Promise"),
        i(481)("Promise"),
        r = i(14).Promise,
        d(d.S + d.F * !S, "Promise", {
            reject: function(e) {
                var t = T(this);
                return (0,
                        t.reject)(e),
                    t.promise
            }
        }),
        d(d.S + d.F * (o || !S), "Promise", {
            resolve: function(e) {
                if (e instanceof b && M(e.constructor, this))
                    return e;
                var t = T(this);
                return (0,
                        t.resolve)(e),
                    t.promise
            }
        }),
        d(d.S + d.F * !(S && i(180)(function(e) {
            b.all(e).catch(w)
        })), "Promise", {
            all: function(e) {
                var t = this,
                    i = T(t),
                    n = i.resolve,
                    s = i.reject,
                    r = I(function() {
                        var i = [],
                            r = 0,
                            o = 1;
                        f(e, !1, function(e) {
                                var a = r++,
                                    l = !1;
                                i.push(void 0),
                                    o++,
                                    t.resolve(e).then(function(e) {
                                        l || (l = !0,
                                            i[a] = e,
                                            --o || n(i))
                                    }, s)
                            }),
                            --o || n(i)
                    });
                return r && s(r.error),
                    i.promise
            },
            race: function(e) {
                var t = this,
                    i = T(t),
                    n = i.reject,
                    s = I(function() {
                        f(e, !1, function(e) {
                            t.resolve(e).then(i.resolve, n)
                        })
                    });
                return s && n(s.error),
                    i.promise
            }
        })
}, function(e, t) {
    e.exports = function(e, t, i, n) {
        if (!(e instanceof t) || void 0 !== n && n in e)
            throw TypeError(i + ": incorrect invocation!");
        return e
    }
}, function(e, t, i) {
    var n = i(56),
        s = i(177),
        r = i(178),
        o = i(32),
        a = i(117),
        l = i(126),
        u = {},
        d = {},
        t = e.exports = function(e, t, i, c, h) {
            var p, f, g, m, v = h ? function() {
                    return e
                } :
                l(e),
                _ = n(i, c, t ? 2 : 1),
                y = 0;
            if ("function" != typeof v)
                throw TypeError(e + " is not iterable!");
            if (r(v)) {
                for (p = a(e.length); p > y; y++)
                    if ((m = t ? _(o(f = e[y])[0], f[1]) : _(e[y])) === u || m === d)
                        return m
            } else
                for (g = v.call(e); !(f = g.next()).done;)
                    if ((m = s(g, _, f.value, t)) === u || m === d)
                        return m
        };
    t.BREAK = u,
        t.RETURN = d
}, function(e, t, i) {
    var n = i(32),
        s = i(113),
        r = i(22)("species");
    e.exports = function(e, t) {
        var i, o = n(e).constructor;
        return void 0 === o || void 0 == (i = n(o)[r]) ? t : s(i)
    }
}, function(e, t) {
    e.exports = function(e, t, i) {
        var n = void 0 === i;
        switch (t.length) {
            case 0:
                return n ? e() : e.call(i);
            case 1:
                return n ? e(t[0]) : e.call(i, t[0]);
            case 2:
                return n ? e(t[0], t[1]) : e.call(i, t[0], t[1]);
            case 3:
                return n ? e(t[0], t[1], t[2]) : e.call(i, t[0], t[1], t[2]);
            case 4:
                return n ? e(t[0], t[1], t[2], t[3]) : e.call(i, t[0], t[1], t[2], t[3])
        }
        return e.apply(i, t)
    }
}, function(e, t, i) {
    var n = i(25),
        s = i(179).set,
        r = n.MutationObserver || n.WebKitMutationObserver,
        o = n.process,
        a = n.Promise,
        l = "process" == i(71)(o);
    e.exports = function() {
        var e, t, i, u = function() {
            var n, s;
            for (l && (n = o.domain) && n.exit(); e;) {
                s = e.fn,
                    e = e.next;
                try {
                    s()
                } catch (n) {
                    throw e ? i() : t = void 0,
                        n
                }
            }
            t = void 0,
                n && n.enter()
        };
        if (l)
            i = function() {
                o.nextTick(u)
            };
        else if (r) {
            var d = !0,
                c = document.createTextNode("");
            new r(u).observe(c, {
                    characterData: !0
                }),
                i = function() {
                    c.data = d = !d
                }
        } else if (a && a.resolve) {
            var h = a.resolve();
            i = function() {
                h.then(u)
            }
        } else
            i = function() {
                s.call(n, u)
            };
        return function(n) {
            var s = {
                fn: n,
                next: void 0
            };
            t && (t.next = s),
                e || (e = s,
                    i()),
                t = s
        }
    }
}, function(e, t, i) {
    var n = i(43);
    e.exports = function(e, t, i) {
        for (var s in t)
            i && e[s] ? e[s] = t[s] : n(e, s, t[s]);
        return e
    }
}, function(e, t, i) {
    "use strict";
    var n = i(25),
        s = i(14),
        r = i(31),
        o = i(37),
        a = i(22)("species");
    e.exports = function(e) {
        var t = "function" == typeof s[e] ? s[e] : n[e];
        o && t && !t[a] && r.f(t, a, {
            configurable: !0,
            get: function() {
                return this
            }
        })
    }
}, function(e, t, i) {
    e.exports = {
        default: i(483),
        __esModule: !0
    }
}, function(e, t, i) {
    i(484),
        e.exports = i(14).Object.assign
}, function(e, t, i) {
    var n = i(28);
    n(n.S + n.F, "Object", {
        assign: i(485)
    })
}, function(e, t, i) {
    "use strict";
    var n = i(46),
        s = i(123),
        r = i(73),
        o = i(72),
        a = i(168),
        l = Object.assign;
    e.exports = !l || i(57)(function() {
            var e = {},
                t = {},
                i = Symbol(),
                n = "abcdefghijklmnopqrst";
            return e[i] = 7,
                n.split("").forEach(function(e) {
                    t[e] = e
                }),
                7 != l({}, e)[i] || Object.keys(l({}, t)).join("") != n
        }) ? function(e, t) {
            for (var i = o(e), l = arguments.length, u = 1, d = s.f, c = r.f; l > u;)
                for (var h, p = a(arguments[u++]), f = d ? n(p).concat(d(p)) : n(p), g = f.length, m = 0; g > m;)
                    c.call(p, h = f[m++]) && (i[h] = p[h]);
            return i
        } :
        l
}, function(e, t, i) {
    "use strict";
    var n = {
            issues: i(487),
            problems: i(182),
            problemDetails: i(185)
        },
        s = {
            segments: i(27),
            nodes: i(94),
            bigJunctions: i(130),
            updateRequestSessions: i(503),
            archives: i(504),
            archiveSessions: i(505),
            venues: i(77),
            users: i(68),
            cameras: i(135),
            mapUpdateRequests: i(191),
            houseNumbers: i(513),
            roadClosures: i(193),
            junctions: i(514),
            managedAreas: i(515),
            userAreas: i(516),
            notifications: i(96),
            majorTrafficEvents: i(97),
            restrictedAreas: i(194),
            transactions: i(98)
        };
    e.exports = {
        TYPE_TO_CLASS: s,
        TYPE_TO_FACTORY: n
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(488),
        l = n(a),
        u = i(489),
        d = n(u),
        c = i(490),
        h = n(c),
        p = i(38).prototype.TYPE,
        f = {
            TYPE_TO_CLASS: (s = {},
                (0,
                    o.default)(s, p.MAP_PROBLEM, l.default),
                (0,
                    o.default)(s, p.VENUE_UPDATE_REQUEST, d.default),
                (0,
                    o.default)(s, p.UPDATE_REQUEST, h.default),
                s),
            create: function(e) {
                return new(0,
                    this.TYPE_TO_CLASS[e.type])(e)
            }
        };
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(38),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            _isModified: function() {
                return this.attributes.problem.isUpdated()
            },
            _isResolved: function() {
                return !this.attributes.problem.attributes.open
            },
            getSeverity: function() {
                return this.attributes.problem.attributes.severity
            }
        });
    r.prototype.defaults = _.extend({
            problem: null
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(38),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            _isModified: function() {
                return this.attributes.initialApproved !== this.attributes.updateRequest.get("approved")
            },
            _isResolved: function() {
                return null !== this.attributes.updateRequest.get("approved")
            },
            getSeverity: function() {
                return this.attributes.updateRequest.getSeverity()
            }
        });
    r.prototype.defaults = _.extend({
            venue: null,
            updateRequest: null,
            initialApproved: null
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(38),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            _isModified: function() {
                return this.attributes.updateRequest.isUpdated()
            },
            _isResolved: function() {
                return !this.attributes.updateRequest.attributes.open
            },
            getSeverity: function() {
                return this.attributes.updateRequest.attributes.severity
            }
        });
    r.prototype.defaults = _.extend({
            updateRequest: null
        }, s.default.prototype.defaults),
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(492),
        r = n(s),
        o = i(6),
        a = n(o),
        l = OL.Class(a.default, {
            nested: {
                sessions: r.default,
                average: r.default
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            nested: {
                geometry: OL.Geometry,
                nextSegGeom: OL.Geometry,
                prevSegGeom: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(494),
        r = n(s),
        o = i(6),
        a = n(o),
        l = OL.Class(a.default, {
            nested: {
                routeNextSeg: OL.Geometry,
                routePrevSeg: OL.Geometry,
                alternatives: r.default
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            nested: {
                averageGeom: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            nested: {
                segmentGeom: OL.Geometry,
                secondarySegmentGeom: OL.Geometry,
                venueGeom: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    i(497),
        e.exports = i(14).Object.freeze
}, function(e, t, i) {
    var n = i(44),
        s = i(171).onFreeze;
    i(92)("freeze", function(e) {
        return function(t) {
            return e && n(t) ? e(s(t)) : t
        }
    })
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(50),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(93),
        c = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = (t.restrictionType,
                        t.driveProfiles),
                    n = void 0 === i ? [] : i;
                (0,
                    a.default)(this, e),
                this._driveProfiles = n.map(function(e) {
                        return new d.RestrictionDriveProfile(e)
                    }),
                    (0,
                        r.default)(this)
            }
            return (0,
                    u.default)(e, [{
                    key: "equals",
                    value: function(e) {
                        return this._driveProfiles.every(function(t) {
                            return e._driveProfiles.some(function(e) {
                                return e.equals(t)
                            })
                        })
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this._driveProfiles.map(function(e) {
                            return e.toJSON()
                        })
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return 0 === this._driveProfiles.length || this._driveProfiles.some(function(e) {
                            return e.isAllVehicles()
                        })
                    }
                }, {
                    key: "getDriveProfiles",
                    value: function() {
                        return this._driveProfiles.slice()
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return 0 === this._driveProfiles.length
                    }
                }]),
                e
        }();
    t.default = {
            RestrictionDriveProfileList: c
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(187),
        r = n(s),
        o = i(500),
        a = n(o),
        l = OL.Class({
            MAX_PATHS: 100,
            initialize: function(e) {
                this.bigJunction = e
            },
            getAllPaths: function() {
                for (var e = [], t = this._getEntryGraphNodes(), i = 0; i < t.length; i++) {
                    var n = t[i],
                        s = new a.default(this.bigJunction),
                        r = {};
                    this._findAllPaths(n, s, r, e)
                }
                return e
            },
            _findAllPaths: function(e, t, i, n) {
                if (!(n.length >= this.MAX_PATHS)) {
                    i[e] = !0,
                        t.appendNode(e);
                    for (var s = e.getConnectedGraphNodes(), r = 0; r < s.length; r++) {
                        var o = s[r];
                        this._isSegmentOutOfBigJunction(o.segment) ? t.isPathLegal() && (t.appendNode(o),
                            n.push(t.build()),
                            t.removeLastNode()) : i[o] || this._findAllPaths(o, t, i, n)
                    }
                    t.removeLastNode(),
                        i[e] = !1
                }
            },
            _getEntryGraphNodes: function() {
                for (var e = [], t = this.bigJunction.getID(), i = this._getAccessSegments(), n = 0; n < i.length; n++) {
                    var s = i[n],
                        o = null;
                    if (s.hasFromBigJunction(t) && s.attributes.revDirection ? o = !1 : s.hasToBigJunction(t) && s.attributes.fwdDirection && (o = !0),
                        null !== o) {
                        var a = r.default.forSegmentInDirection(s, o);
                        e.push(a)
                    }
                }
                return e
            },
            _getAccessSegments: function() {
                for (var e = [], t = this.bigJunction.getShortSegments(), i = 0; i < t.length; i++) {
                    var n = t[i];
                    e = e.concat(n.getConnectedSegmentsByDirection("from")),
                        e = e.concat(n.getConnectedSegmentsByDirection("to"))
                }
                return e = e.filter(this._isSegmentOutOfBigJunction),
                    _.uniq(e, function(e) {
                        return e.getID()
                    })
            },
            _isSegmentOutOfBigJunction: function(e) {
                return !e.isBigJunctionShort() && e.isDrivable()
            }
        });
    l.for = function(e) {
            return new l(e)
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(131),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class({
            graphNodes: null,
            initialize: function(e) {
                this.junction = e,
                    this.graphNodes = []
            },
            appendNode: function(e) {
                return this.graphNodes.push(e)
            },
            removeLastNode: function() {
                return this.graphNodes.pop()
            },
            isPathLegal: function() {
                return this.graphNodes.length >= 2
            },
            build: function() {
                var e = _.first(this.graphNodes),
                    t = _.last(this.graphNodes);
                return new s.default({
                    id: {
                        fromSegID: e.segment.getID(),
                        fromSegFwd: e.isForward,
                        toSegID: t.segment.getID(),
                        toSegFwd: t.isForward
                    },
                    junctionID: this.junction.getID(),
                    segmentPath: this._getShortSegmentIDs()
                })
            },
            _getShortSegmentIDs: function() {
                return this.graphNodes.slice(1, -1).map(function(e) {
                    return e.segment.getID()
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        TYPE: {
            ENTRY: "entry",
            EXIT: "exit"
        },
        defaults: function() {
            return {
                paths: []
            }
        },
        getID: function() {
            return this.get("graphNode").getID()
        },
        getGeometry: function() {
            return this.get("graphNode").node.geometry.clone()
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(50),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Model.extend({
            constructor: function() {
                Backbone.Model.prototype.constructor.apply(this, arguments),
                    (0,
                        s.default)(this.attributes),
                    this.set = this._error
            },
            _error: function() {
                throw new TypeError("Cannot change attributes of an immutable object")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(6),
        s = OpenLayers.Class(n, {
            nested: {
                driveGeometry: OL.Geometry,
                routeGeometry: OL.Geometry
            },
            instructions: null,
            getRouteInstructions: function() {
                return null === this.instructions && (this.routeInstructions ? this.instructions = this.routeInstructions.split(",").map(function(e, t) {
                        return {
                            code: e,
                            point: this.routeGeometry.components[t].components.first()
                        }
                    }, this) : this.instructions = []),
                    this.instructions
            },
            _updateCommentFlag: function() {
                if (1 === this.comments.length) {
                    var e = this.model.mapUpdateRequests.get(this.getID());
                    e && (e.attributes.hasComments = !0,
                        this.model.mapUpdateRequests.changed(e))
                }
            },
            hasPendingComments: function() {
                var e = this.comments || [],
                    t = Number(Date.today().setTimeToNow().add(-2).weeks()),
                    i = e.filter(function(e) {
                        return e.createdOn > t
                    });
                return 0 !== i.length && !i.some(function(e) {
                    return -1 === e.userID
                })
            },
            getComments: function() {
                return new Backbone.Collection(this.comments)
            },
            getIsFollowing: function() {
                return this.isFollowing
            },
            setFollowing: function(e) {
                var t = this;
                return $.post(W.Config.paths.updateRequestFollow, {
                    mapUpdateRequestID: this.getID(),
                    follow: e
                }).done(function() {
                    t.isFollowing = e
                })
            },
            addComment: function(e) {
                var t = this;
                return $.post(W.Config.paths.updateRequestComments, {
                    mapUpdateRequestID: this.getID(),
                    text: e
                }).done(function(e) {
                    e.isAutoFollowed && (t.isFollowing = !0),
                        t.comments.push(e.comment),
                        t._updateCommentFlag()
                }).then(function(e) {
                    return new Backbone.Model(e.comment)
                })
            },
            getCommentable: function() {
                return {
                    getComments: this.getComments.bind(this),
                    isFollowing: this.getIsFollowing.bind(this),
                    setFollowing: this.setFollowing.bind(this),
                    addComment: this.addComment.bind(this)
                }
            },
            CLASS_NAME: "Waze.Feature.UpdateRequestSession"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(6),
        s = OpenLayers.Class(n, {
            averageSpeed: null,
            getAverageSpeed: function() {
                return this.averageSpeed || (this.averageSpeed = this.totalRoadMeters / (this.endTime - this.startTime) * 3600),
                    this.averageSpeed
            },
            CLASS_NAME: "Waze.Feature.Vector.Archive"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(6),
        s = i(506),
        r = OpenLayers.Class(n, {
            nested: {
                driveParts: s
            },
            bounds: null,
            getDriveBounds: function() {
                return null !== this.bounds ? this.bounds : (this.bounds = this.driveParts.reduce(function(e, t) {
                        return t.geometry.calculateBounds(),
                            e.extend(t.geometry.bounds),
                            e
                    }, new OpenLayers.Bounds),
                    this.bounds)
            },
            CLASS_NAME: "Waze.Feature.Vector.ArchiveSession"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            MATCH_TYPE: {
                UNMATCHED: "UNMATCHED",
                MATCHED: "MATCHED",
                PAVED: "PAVED"
            },
            nested: {
                geometry: OL.Geometry
            },
            isMatched: function() {
                return this.matchType === this.MATCH_TYPE.MATCHED
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(133),
        r = n(s),
        o = i(508),
        a = n(o),
        l = i(189),
        u = n(l),
        d = i(190),
        c = n(d),
        h = OL.Class({
            TYPE: {
                VENUE: "VENUE",
                REQUEST: "REQUEST",
                IMAGE: "IMAGE"
            },
            SUB_TYPE: {
                UPDATE: "UPDATE",
                DELETE: "DELETE",
                FLAG: "FLAG"
            },
            initialize: function(e) {
                return _.extend(this, e)
            },
            build: function(e) {
                return this._isFlag(e) ? this._buildFlag(e) : this._buildRegularUpdate(e)
            },
            _isFlag: function(e) {
                return e.type === this.TYPE.REQUEST && e.subType === this.SUB_TYPE.FLAG
            },
            _buildFlag: function(e) {
                return new a.default({
                    subject: e.flagSubjectType,
                    type: e.flagType,
                    comment: e.flagComment,
                    place: e.place,
                    dateAdded: e.dateAdded,
                    createdBy: e.createdBy,
                    entityId: e.flagEntityID,
                    id: e.id,
                    isInEditArea: this.isInEditArea,
                    isEditable: this.isEditable,
                    isAdLockedEditable: this.isAdLockedEditable
                })
            },
            _buildRegularUpdate: function(e) {
                var t = r.default.prototype.SUBJECT.VENUE,
                    i = r.default.prototype.ACTION.ADD;
                e.type === this.TYPE.REQUEST ? i = e.subType === this.SUB_TYPE.UPDATE ? r.default.prototype.ACTION.UPDATE : r.default.prototype.ACTION.DELETE : e.type === this.TYPE.IMAGE && (t = r.default.prototype.SUBJECT.IMAGE);
                var n = this._parseChangedFields(e.place, e.changedVenue);
                return new r.default({
                    action: i,
                    subject: t,
                    changedFields: n,
                    place: e.place,
                    dateAdded: e.dateAdded,
                    createdBy: e.createdBy,
                    id: e.id,
                    isInEditArea: this.isInEditArea,
                    isEditable: this.isEditable,
                    isAdLockedEditable: this.isAdLockedEditable
                })
            },
            _parseChangedFields: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = ["permissions", "categoryAttributes"],
                    n = _.omit(t, i),
                    s = t.categoryAttributes || {},
                    r = s.PARKING_LOT || {};
                return [].concat(u.default.build(n, e)).concat(c.default.build(r, e))
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(133),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            TYPE: {
                CLOSED: "CLOSED",
                MOVED: "MOVED",
                RESIDENTIAL: "RESIDENTIAL",
                DUPLICATE: "DUPLICATE",
                INAPPROPRIATE: "INAPPROPRIATE",
                WRONG_DETAILS: "WRONG_DETAILS",
                LOW_QUALITY: "LOW_QUALITY",
                UNRELATED: "UNRELATED",
                OTHER: "OTHER"
            },
            initialize: function() {
                if (this.set("updateType", "flag"),
                    this.isImage() && this.set("imageId", this.get("entityId")),
                    this.isVenue() && this.get("type") === this.TYPE.DUPLICATE)
                    return this.set("duplicateVenueId", this.get("entityId"))
            },
            getDuplicateVenue: function() {
                var e = this.get("duplicateVenueId");
                return this.get("place").model.venues.get(e)
            },
            getImage: function() {
                return this._findImage(this.getImageId())
            },
            getImageId: function() {
                return this.get("imageId")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            nested: {
                point: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(511),
        __esModule: !0
    }
}, function(e, t, i) {
    i(90),
        i(69),
        e.exports = i(512)
}, function(e, t, i) {
    var n = i(127),
        s = i(22)("iterator"),
        r = i(58);
    e.exports = i(14).isIterable = function(e) {
        var t = Object(e);
        return void 0 !== t[s] || "@@iterator" in t || r.hasOwnProperty(n(t))
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(192),
        r = n(s),
        o = i(6),
        a = n(o),
        l = OpenLayers.Class(a.default, {
            nested: {
                numbers: r.default,
                editArea: OL.Geometry
            },
            initialize: function() {
                return a.default.prototype.initialize.apply(this, arguments),
                    this.createNumbers()
            },
            createNumbers: function() {
                for (var e = 0; e < this.numbers.length; e++)
                    this.numbers[e].parent = this
            },
            merge: function(e) {
                return a.default.prototype.merge.apply(this, arguments),
                    this.createNumbers()
            },
            getNumber: function(e) {
                for (var t = 0; t < this.numbers.length; t++) {
                    var i = this.numbers[t];
                    if (i.id === e)
                        return i
                }
                return null
            },
            getSegment: function() {
                return this.segment || (this.segment = this.model.segments.get(this.id))
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            getAllSegments: function() {
                return this.model.segments.getByIds(this.segIDs)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            nested: {
                geometry: OL.Geometry
            },
            initialize: function(e) {
                return e.id = e.id + "ma",
                    s.default.prototype.initialize.apply(this, arguments)
            },
            getUserName: function() {
                var e = this.model.users.get(this.userID);
                return e ? e.userName : ""
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(6),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            nested: {
                geometry: OL.Geometry
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(4),
        g = n(f),
        m = i(98),
        v = n(m),
        _ = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            objectID: null,
                            objectType: null,
                            actionType: null,
                            newValue: null,
                            oldValue: null
                        }
                    }
                }, {
                    key: "isSegmentSplit",
                    value: function() {
                        return this._isSegmentSplitMerge()[0]
                    }
                }, {
                    key: "isSegmentMerge",
                    value: function() {
                        return this._isSegmentSplitMerge()[1]
                    }
                }, {
                    key: "_isSegmentSplitMerge",
                    value: function() {
                        var e = !1,
                            t = !1;
                        if (this.attributes.objectType === g.default.SEGMENT) {
                            var i = this.attributes.newValue || {},
                                n = i.origIDs || [];
                            this.attributes.actionType === v.default.ACTIONS.ADD && (e = 1 === n.length,
                                t = 2 === n.length)
                        }
                        return [e, t]
                    }
                }]),
                t
        }(Backbone.Model);
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(48),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(52),
        o = i(15);
    e.exports = r.extend({
        template: "Waze/Modules/Cities/templates/feature_editor",
        events: {
            "click .edit-button": function() {
                this._toggleEditing(!0)
            },
            "click .cancel-button": "_cancelChanges",
            "click .save-button": "_applyChanges",
            "submit form": function() {
                return !1
            }
        },
        editedModelBindings: {
            "form .city-name": "name"
        },
        formBindings: {
            ".preview": {
                observe: "editing",
                visible: !0,
                onGet: _.negate(_.identity)
            },
            "form.attributes-form": {
                observe: "editing",
                visible: !0
            },
            "form.attributes-form input": {
                attributes: [{
                    name: "disabled",
                    observe: "submitting"
                }]
            }
        },
        ui: {
            cityNameInput: ".attributes-form .city-name"
        },
        initialize: function() {
            r.prototype.initialize.apply(this, arguments),
                this.editedModel = this._createEditableModel(),
                this.formModel = new Backbone.Model({
                    defaults: {
                        editing: !1,
                        submitting: !1
                    }
                })
        },
        serializeData: function() {
            return {
                canEdit: this.model.arePropertiesEditable(),
                city: this.model
            }
        },
        onRender: function() {
            this.stickit(this.editedModel, this.editedModelBindings),
                this.stickit(this.formModel, this.formBindings),
                r.prototype.onRender.apply(this, arguments)
        },
        _createEditableModel: function() {
            var e = $.extend(!0, {}, this.model.attributes);
            return new Backbone.Model(e)
        },
        _toggleEditing: function(e) {
            this.formModel.set("editing", e),
                e && this.ui.cityNameInput.focus()
        },
        _toggleSubmitting: function(e) {
            this.formModel.set("submitting", e)
        },
        _cancelChanges: function() {
            this.editedModel.set(this._createEditableModel().attributes),
                this._toggleEditing(!1)
        },
        _applyChanges: function() {
            this.editedModel.attributes.name !== this.model.attributes.name ? this._checkExistance().then(this._commitChanges.bind(this), alert) : this._toggleEditing(!1)
        },
        _checkExistance: function() {
            var e = this,
                t = arguments,
                i = this.editedModel.attributes.name,
                n = this.model.attributes,
                r = n.countryID,
                o = n.stateID;
            return this._toggleSubmitting(!0),
                new s.default(function(n, s) {
                    e.dataModel.cities.getCityExists(i, r, o).done(function(t) {
                        var i = t.existingCity;
                        if (i && i.id !== e.model.getID()) {
                            var r = I18n.t("edit.city.name_exists", {
                                name: t.existingCity.name
                            });
                            s(r)
                        } else
                            e._toggleEditing(!1),
                            n()
                    }).fail(function() {
                        return s(t)
                    }).always(function() {
                        return e._toggleSubmitting(!1)
                    })
                })
        },
        _commitChanges: function() {
            var e = new o(this.model, this.editedModel.attributes);
            this.dataModel.actionManager.add(e)
        }
    })
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(175);
    t.default = {
            init: function(e) {
                var t = e.map;
                this.markersLayer = t.getLayerByUniqueName(n.MARKERS_LAYER_NAME),
                    this.featuresLayer = t.getLayerByUniqueName(n.FEATURES_LAYER_NAME),
                    this.markersLayer.events.register("markerclick", this, this._onMarkerClick),
                    this.featuresLayer.events.register("featureunselected", this, this._onFeatureUnselected)
            },
            destroy: function() {
                this.markersLayer.events.unregister("markerclick", this, this._onMarkerClick),
                    this.featuresLayer.events.unregister("featureunselected", this, this._onFeatureUnselected)
            },
            _onFeatureUnselected: function(e) {
                var t = this;
                (e.features || [e.feature]).forEach(function(e) {
                    var i = e.model.getID();
                    t.markersLayer.getMarker(i).unhighlight()
                })
            },
            _onMarkerClick: function(e) {
                var t = e.target.attributes.cityId,
                    i = this.featuresLayer.features.filter(function(e) {
                        return e.model.getID() === t
                    })[0];
                void 0 !== i && (this.featuresLayer.selectControl.select(i),
                    this.markersLayer.getMarker(t).highlight())
            }
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(100),
        r = n(s),
        o = i(521),
        a = n(o),
        l = i(522),
        u = n(l),
        d = i(53),
        c = n(d),
        h = i(26),
        p = n(h),
        f = i(99),
        g = n(f),
        m = i(136),
        v = n(m),
        _ = p.default.LAYER_TYPE;
    t.default = {
            feature: {
                repositoryName: "mapComments",
                featureType: "mapComment",
                modelClass: r.default,
                featureEditorClass: u.default
            },
            layers: [{
                type: _.FEATURE,
                uniqueName: "mapComments",
                options: {
                    name: I18n.t("layers.name.comments"),
                    objectType: "mapComment",
                    selectable: !0,
                    visibleByDefault: !0,
                    styleMap: a.default,
                    enableZIndexing: !0,
                    geometryEditing: {
                        enable: !0,
                        options: {
                            mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.RESHAPE
                        }
                    }
                }
            }],
            layerSwitcher: {
                togglers: [{
                    id: "ITEM_MAP_COMMENTS",
                    parent: "GROUP_DISPLAY",
                    toggler: g.default.of("ITEM_MAP_COMMENTS", new v.default("mapComments"))
                }],
                defaultVisibility: {
                    ITEM_MAP_COMMENTS: !0
                },
                bitNumbers: {
                    ITEM_MAP_COMMENTS: 26
                }
            },
            menu: {
                name: "map-comments",
                displayClass: "waze-icon-bubble",
                items: [{
                    title: "",
                    featureName: I18n.t("drawing.map_comment"),
                    primaryShape: "point",
                    secondaryShape: "polygon",
                    layerUniqueName: "mapComments",
                    createFeature: function(e, t) {
                        var i = new r.default({
                                geometry: e
                            }),
                            n = new c.default(i, t.mapComments);
                        return t.actionManager.add(n),
                            n.object
                    }
                }]
            }
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(197),
        s = "#ffffff",
        r = {
            strokeColor: s,
            fillColor: s,
            strokeDashstyle: "dash",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        o = {
            pointRadius: 6,
            strokeWidth: 2,
            strokeColor: s,
            fillColor: s,
            graphicZIndex: 0,
            fillOpacity: 1
        },
        a = function(e) {
            var t = W.defaultRule({
                Point: o,
                Polygon: r
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        l = W.defaultRule({
            Point: {
                fillColor: "#00ece3",
                strokeColor: "#00ece3",
                fontFamily: "FontAwesome",
                label: "",
                labelOutlineWidth: 0,
                fontColor: "white",
                fontSize: 11,
                labelYOffset: 0,
                pointRadius: 12,
                strokeOpacity: 1,
                fillOpacity: .3
            },
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        u = W.defaultRule({
            Point: {
                fillColor: "#ff8383",
                strokeDashstyle: "dot",
                fillOpacity: .3
            },
            Polygon: {
                strokeDashstyle: "dash",
                strokeColor: "white",
                fillColor: "#ff8383"
            }
        }),
        d = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff8383"
            },
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        c = W.rule("isUnchanged", !1, {
            Point: {
                fillColor: "#ff9292"
            },
            Polygon: {
                fillColor: "#ff9292",
                strokeColor: "#ff9292"
            }
        }),
        h = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        });
    t.default = new OL.StyleMap({
            default: a([h, d, n.DragPointRule]),
            highlight: a([W.defaultRule({
                Point: {
                    fontColor: "white",
                    fontSize: 16,
                    pointRadius: 12,
                    fillColor: s,
                    fillOpacity: .6,
                    strokeOpacity: 1
                },
                Polygon: {
                    fillOpacity: .6,
                    strokeColor: s,
                    fillColor: s
                }
            }), h, c, n.DragPointHighlightRule]),
            select: a([l]),
            highlightselected: a([l]),
            delete: a([u]),
            highlightdeleted: a([u])
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(52),
        r = n(s),
        o = i(523),
        a = n(o),
        l = i(198),
        u = n(l),
        d = i(80),
        c = n(d),
        h = i(137),
        p = n(h),
        f = i(101),
        g = n(f),
        m = i(100),
        v = n(m),
        _ = r.default.extend({
            template: "Waze/Modules/Comments/templates/feature_editor",
            className: "map-comment-feature-editor",
            regions: {
                nameEditorRegion: ".name-editor-region",
                conversationRegion: ".conversation-region"
            },
            behaviors: {
                dateTimePickers: {
                    behaviorClass: c.default,
                    modelAttribute: "endDateModel"
                },
                charCount: {
                    behaviorClass: p.default,
                    charLimits: [{
                        inputSelector: ".new-subject-input",
                        charCountSelector: ".new-subject-max-length",
                        maxLength: v.default.prototype.MAX_SUBJECT_LENGTH,
                        modelAttribute: "newFormModel",
                        observe: "subject"
                    }, {
                        inputSelector: ".new-body-input",
                        charCountSelector: ".new-body-max-length",
                        maxLength: v.default.prototype.MAX_BODY_LENGTH,
                        modelAttribute: "newFormModel",
                        observe: "body"
                    }]
                }
            },
            initialize: function() {
                var e = this;
                r.default.prototype.initialize.apply(this, arguments),
                    this.endDateModel = new Backbone.Model({
                        endDate: this.model.attributes.endDate
                    }),
                    this.endDateModel.on("change:endDate", function(t, i, n) {
                        if (n.stickitChange)
                            return e.changed({
                                endDate: i
                            })
                    }),
                    this.newFormModel = new Backbone.Model({
                        body: this.model.attributes.body,
                        subject: this.model.attributes.subject
                    })
            },
            onRender: function() {
                this.model.isNew() ? this.newFormModel.set({
                        body: this.model.attributes.body,
                        subject: this.model.attributes.subject
                    }) : (this._renderNameEditor(),
                        this._renderConversationRegion()),
                    r.default.prototype.onRender.apply(this, arguments)
            },
            _renderNameEditor: function() {
                var e = this,
                    t = new a.default({
                        subject: this.model.attributes.subject,
                        body: this.model.attributes.body,
                        editable: this.model.arePropertiesEditable()
                    });
                return t.on("changed", function(t) {
                        return e.changed(t)
                    }),
                    this.showChildView("nameEditorRegion", t)
            },
            _renderConversationRegion: function() {
                var e = new u.default({
                    commentable: this.model
                });
                return this.showChildView("conversationRegion", e)
            },
            onFeaturesChanged: function(e) {
                if (r.default.prototype.onFeaturesChanged.apply(this, arguments),
                    this.hasEditedModelChanged(e))
                    return this.endDateModel.set({
                        endDate: this.model.attributes.endDate
                    })
            },
            serializeData: function() {
                return {
                    userRank: this.dataModel.loginManager.getUserRank(),
                    editable: this.model.arePropertiesEditable(),
                    comment: this.model
                }
            },
            isPointChanged: function(e) {
                var t = this,
                    i = void 0;
                i = "true" === e ? this.model.getPointGeometry() : this.model.getPolygonGeometry();
                var n = new g.default(this.model, this.dataModel.mapComments, this.model.geometry, i);
                return this.preventRender(function() {
                    return t.dataModel.actionManager.add(n)
                })
            }
        });
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(137),
        r = n(s),
        o = i(100),
        a = n(o),
        l = Marionette.View.extend({
            template: "Waze/Modules/Comments/templates/name_editor",
            className: "map-comment-name-editor",
            ui: {
                editButton: ".edit-button",
                applyButton: ".apply-button"
            },
            events: {
                "click @ui.editButton": "_onEditButtonClicked",
                "submit form": "_onApplyButtonClicked"
            },
            bindings: {
                ".preview": {
                    visible: !0,
                    observe: "showingPreview"
                },
                ".edit": {
                    visible: !0,
                    observe: "showingPreview",
                    onGet: _.negate(_.identity)
                },
                ".edit-button": {
                    visible: !0,
                    observe: "editable"
                },
                ".subject-preview": "subject",
                ".body-preview": "body",
                ".subject-input": "subject",
                ".body-textarea": "body"
            },
            behaviors: {
                charCount: {
                    behaviorClass: r.default,
                    charLimits: [{
                        inputSelector: ".subject-input",
                        charCountSelector: ".subject-max-length",
                        maxLength: a.default.prototype.MAX_SUBJECT_LENGTH,
                        modelAttribute: "model",
                        observe: "subject"
                    }, {
                        inputSelector: ".body-textarea",
                        charCountSelector: ".body-max-length",
                        maxLength: a.default.prototype.MAX_BODY_LENGTH,
                        modelAttribute: "model",
                        observe: "body"
                    }]
                }
            },
            initialize: function() {
                this.model = new Backbone.Model({
                    showingPreview: !0,
                    editable: this.options.editable,
                    subject: this.options.subject,
                    body: this.options.body
                })
            },
            onRender: function() {
                this.stickit()
            },
            _onEditButtonClicked: function() {
                this.model.set({
                    showingPreview: !1
                })
            },
            _onApplyButtonClicked: function(e) {
                return e.preventDefault(),
                    this.model.set({
                        showingPreview: !0
                    }),
                    this.trigger("changed", {
                        subject: this.model.get("subject"),
                        body: this.model.get("body")
                    }), !1
            }
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            tagName: "li",
            className: "comment",
            template: "Waze/Modules/Conversation/templates/item",
            templateContext: {
                getUserName: function() {
                    return this.isByReporter() ? I18n.t("conversation.reporter") : s.default.formatUserName(this.userID)
                },
                isByReporter: function() {
                    return -1 === this.userID
                },
                getCommentLines: function() {
                    return this.text.split("\n")
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='text-checkboxes'>\n<span class='title'>" + t(e(this.title)) + "</span>\n<div class='checkboxes'>"),
                            a = this.items,
                            n = 0,
                            r = a.length; n < r; n++)
                            s = a[n],
                            o = "layer-switcher-" + s.id.toLowerCase(),
                            i.push("<div class='text-checkbox'>\n<input class='" + t(e(o)) + "' id='" + t(e(o)) + "' type='checkbox'>\n<label for='" + t(e(o)) + "' title='" + t(e(this.t("layer_switcher.togglers." + s.id))) + "'>\n<i class='waze-icon-" + s.iconName + "'></i>\n</label>\n</div>");
                        return i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return e = this.__cleanValue,
                            t = [],
                            i = "Waze/Modules/LayerSwitcher/templates/checkbox",
                            n = "Waze/Modules/LayerSwitcher/templates/text-checkboxes",
                            t.push("<ul class='list-unstyled togglers'>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_ISSUES",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_MAP_ISSUES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_MAP_PROBLEMS"),
                                items: [{
                                    id: "ITEM_MAP_PROBLEMS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_CLOSED_MAP_PROBLEMS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_UPDATE_REQUESTS"),
                                items: [{
                                    id: "ITEM_UPDATE_REQUESTS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_CLOSED_UPDATE_REQUESTS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_PLACE_UPDATE_REQUESTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_PARKING_ISSUES"
                            }))),
                            t.push("<ul class='children extended horizontal-checkboxes'>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_PARKING_MAP_PROBLEMS"),
                                items: [{
                                    id: "ITEM_PARKING_MAP_PROBLEMS",
                                    iconName: "visible"
                                }, {
                                    id: "ITEM_PARKING_CLOSED_MAP_PROBLEMS",
                                    iconName: "closed-issue"
                                }]
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(n, {
                                title: this.t("layer_switcher.togglers.ITEM_PARKING_PLACE_UPDATE_REQUESTS"),
                                items: [{
                                    id: "ITEM_PARKING_PLACE_UPDATE_REQUESTS",
                                    iconName: "visible"
                                }]
                            }))),
                            t.push("</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_PLACES",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_VENUES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_RESIDENTIAL_PLACES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_PARKING_PLACES"
                            }))),
                            t.push("</li>\n</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_ROAD",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_ROAD"
                            }))),
                            t.push("</li>"),
                            W.Config.big_junctions.enable && (t.push("<li>"),
                                t.push("" + e(this.renderPartial(i, {
                                    id: "ITEM_JUNCTION_BOXES"
                                }))),
                                t.push("</li>")),
                            t.push("<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_CLOSURES"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_SPEED_CAMERAS"
                            }))),
                            t.push("</li>"),
                            t.push("" + e(this.renderPartial("Waze/Modules/LayerSwitcher/templates/module-togglers", {
                                id: "GROUP_ROAD"
                            }))),
                            t.push("</ul>\n</li>\n<li class='group'>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "GROUP_DISPLAY",
                                classes: "main"
                            }))),
                            t.push("<ul class='children'>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_SATELLITE_IMAGERY"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_AREA_MANAGERS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_GPS_POINTS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_EDITABLE_AREAS"
                            }))),
                            t.push("</li>\n<li>"),
                            t.push("" + e(this.renderPartial(i, {
                                id: "ITEM_LIVE_USERS"
                            }))),
                            t.push("</li>"),
                            t.push("" + e(this.renderPartial("Waze/Modules/LayerSwitcher/templates/module-togglers", {
                                id: "GROUP_DISPLAY"
                            }))),
                            t.push("</ul>\n</li>\n</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='name'>" + t(e(this.h.formatUserName(this.userID))) + "</div>"),
                            this.isPartner && (i.push("<div class='partner'>" + t(e(this.t("mte.edit.contributors.partner"))) + "</div>"),
                                this.editable && i.push("<div class='remove-button'>\n<i class='fa fa-remove'></i>\n</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='add-partner-section'>\n<button class='add-partner-button btn btn-block btn-positive btn-primary'>\n<i class='fa fa-plus'></i>"),
                            i.push("" + t(e(this.t("mte.edit.contributors.add_partner")))),
                            i.push("</button>\n<form class='add-partner-form'>\n<div class='header'>\n<a class='cancel-button pull-right'>" + t(e(this.t("mte.edit.contributors.cancel"))) + "</a>\n<h4 class='title'>" + t(e(this.t("mte.edit.contributors.add_partner"))) + "</h4>\n</div>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control partner-select' required></select>\n</div>\n<button class='add-button btn btn-block btn-primary' type='submit'>"),
                            i.push("" + t(e(this.t("mte.edit.contributors.add")))),
                            i.push("</button>\n</div>\n</form>\n</div>\n<div class='list'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='closures'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='loading'>"),
                            i.push("" + t(e(this.loadingMessage))),
                            i.push("</div>\n<div class='error'>"),
                            i.push("" + t(e(this.errorMessage))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='preview'>\n<h3 class='english-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview'>"),
                            i.push("" + t(e(this.ENGLISH_LOCALE))),
                            i.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n<h3 class='local-name-preview'>\n<button class='btn-link edit-names-button'>\n<span class='name'></span>\n<span class='language-preview local-language-preview'>"),
                            i.push("" + t(e(this.ENGLISH_LOCALE))),
                            i.push("</span>\n<i class='waze-icon-edit'></i>\n</button>\n</h3>\n</div>\n<form class='edit-form inner-form side-panel-section'>\n<div class='english-name form-group'>\n<div class='controls'>\n<input class='english-name form-control' required autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select' disabled>\n<option>English</option>\n</select>\n</div>\n</div>\n<div class='form-group local-name'>\n<div class='controls'>\n<button class='btn-link remove-local-name-button' type='button'>\n<i class='fa fa-remove'></i>\n</button>\n<input class='form-control local-name' autocomplete='off' maxlength='100' type='text'>\n<select class='form-control language-select locale'></select>\n</div>\n</div>\n<button class='add-local-name-button btn-link' type='button'>\n<i class='fa fa-plus'></i>"),
                            i.push("" + t(e(this.t("mte.edit.name_list.add_language")))),
                            i.push("</button>\n<button class='apply-button btn btn-primary'>Apply</button>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='edit-panel flex-parent mte-edit-view'>\n<div class='flex-noshrink navigation'>\n<button class='back-button btn-link' type='button'>\n&#60;"),
                            i.push("" + t(e(this.t("mte.edit.back_to_search")))),
                            i.push("</button>\n</div>\n<div class='contents'>\n<div class='no-outer-padding panel-header'>\n<div class='title'>\n<label class='control-label'>"),
                            this.newModel ? i.push("" + t(e(this.t("mte.edit.add_event_title")))) : i.push("" + t(e(this.t("mte.edit.edit_event_title")))),
                            i.push("</label>"),
                            this.newModel || i.push("<div class='submit-buttons'>\n<button class='btn btn-defaults submit-button'>" + t(e(this.t("mte.edit.submit"))) + "</button>\n<div class='submitted-indication'>" + t(e(this.t("mte.edit.submitted"))) + "</div>\n</div>\n<div class='publish-buttons'>\n<button class='btn btn-default publish-button'>" + t(e(this.t("mte.edit.publish"))) + "</button>\n<div class='published-indication'>" + t(e(this.t("mte.edit.published"))) + "</div>\n</div>"),
                            i.push("</div>\n<div class='names-container'>\n<div class='names-region'></div>\n<div class='validation-error' for='names'></div>\n</div>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#mte-edit-general'>"),
                            i.push("" + t(e(this.t("mte.edit.tabs.general")))),
                            i.push("</a>\n</li>\n<li class='closures-tab'>"),
                            this.newModel ? (i.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.closures_disabled"))) + "'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                i.push("</a>")) : (i.push("<a data-toggle='tab' href='#mte-edit-closures'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.closures")))),
                                i.push("</a>")),
                            i.push("</li>\n<li class='contributors-tab'>"),
                            this.newModel ? (i.push("<a disabled title='" + t(e(this.t("mte.edit.tabs.partners_disabled"))) + "'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                i.push("</a>")) : (i.push("<a data-toggle='tab' href='#mte-edit-contributors'>"),
                                i.push("" + t(e(this.t("mte.edit.tabs.contributors")))),
                                i.push("</a>")),
                            i.push("</li>\n</ul>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='mte-edit-general'>\n<form class='attributes-form'>"),
                            i.push("<button class='form-submit-button hidden'></button>\n<div class='form-group side-panel-section'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.category"))) + "</label>\n<div class='controls'>\n<select class='category form-control' required></select>\n</div>\n</div>\n<div class='side-panel-section'>\n<label class='control-label control-label-inline required-field'>" + t(e(this.t("mte.edit.fields.location"))) + "</label>\n<i class='location-tooltip waze-tooltip' data-toggle='tooltip' title='" + t(e(I18n.t("mte.edit.location_tooltip"))) + "'></i>\n<div class='address-edit-region'></div>\n<div class='validation-error' for='cityID'></div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group start-date-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.start_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date form-control start-date' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='form-control start-time' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='startDate'></div>\n</div>\n<div class='end-date-group form-group'>\n<label class='control-label required-field'>" + t(e(this.t("mte.edit.fields.end_date"))) + "</label>\n<div class='controls'>\n<div class='date date-input-group input-group pull-left'>\n<input class='date end-date form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-calendar'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group'>\n<input class='end-time form-control' type='text'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='validation-error' for='endDate'></div>\n</div>\n</div>\n<div class='form-group side-panel-section'>\n<label class='control-label'>" + t(e(this.t("mte.edit.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control url' type='text'>\n</div>\n</div>"),
                            this.showTweetControls) {
                            if (i.push("<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("mte.edit.tweet_text"))) + "</label>\n<textarea class='form-control' name='tweetText' maxlength='" + t(e(140)) + "'></textarea>\n</div>"),
                                this.modelAttributes.twitterAccountsUrls.length) {
                                for (i.push("<div class='form-group twitter-accounts-urls'>\n<label class='control-label'>" + t(e(this.t("mte.edit.twitter_accounts_urls"))) + "</label>\n<ul>"),
                                    r = this.modelAttributes.twitterAccountsUrls,
                                    n = 0,
                                    s = r.length; n < s; n++)
                                    o = r[n],
                                    i.push("<li>\n<a href='" + t(e(o)) + "' target='_blank'>" + t(e(o)) + "</a>\n</li>");
                                i.push("</ul>\n</div>")
                            }
                            i.push("</div>")
                        }
                        return i.push("<div class='event-page form-group side-panel-section'>\n<a class='btn btn-block btn-primary' target='_blank'>"),
                            i.push("" + t(e(this.t("mte.edit.waze_event_page")))),
                            i.push("</a>\n</div>\n<div class='side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/additional_details", this.modelAttributes))),
                            i.push("</div>\n</form>\n</div>\n<div class='tab-pane' id='mte-edit-closures'></div>\n<div class='tab-pane' id='mte-edit-contributors'>\n<div class='contributors-region'></div>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='icon'>\n<i class='mte-icon waze-icon-event'></i>"),
                            this.published && i.push("<i class='published-indication waze-icon-check'></i>"),
                            i.push("</div>\n<div class='name'>"),
                            i.push("" + t(e(this.name))),
                            i.push("</div>\n<div class='date'>"),
                            i.push("" + t(e(this.date))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, i, n, s, r, o;
                        i = this.__htmlEscape,
                            t = this.__cleanValue,
                            n = [],
                            n.push("<div class='flex-noshrink mte-search'>\n<div class='search-header'>\n<div class='title'>" + i(t(this.t("mte.search.title"))) + "</div>\n<div class='action date-switcher dropdown'>\n<a class='dropdown-toggle waze-dropdown' data-toggle='dropdown'>\n<span class='current-date-filter'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            o = this.dateFilters;
                        for (r in o)
                            e.call(o, r) && (s = o[r],
                                n.push("<li class='waze-dropdown-item'>\n<a class='date-filter-item' data-filter='" + i(t(r)) + "'>" + i(t("" + s.name)) + "</a>\n</li>"));
                        return n.push("</ul>\n</div>\n</div>\n<input class='form-control search-input' type='text' placeholder='" + i(t(this.t("mte.search.placeholder"))) + "'>\n</div>\n<ul class='list-unstyled mte-list'></ul>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='loaderRegion'>\n<div class='sidebar-loader'>\n<div class='fa-spin spinner'></div>\n</div>\n</div>\n<div class='mainRegion'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<button class='btn-link save-button toolbar-button waze-icon-save' title='" + t(e(this.t("mte.edit.toolbar.save"))) + "'></button>\n<button class='add-button btn-link toolbar-button waze-icon-event' title='" + t(e(this.t("mte.edit.toolbar.add"))) + "'></button>\n<button class='btn-link delete-button toolbar-button waze-icon-trash' title='" + t(e(this.t("mte.edit.toolbar.delete"))) + "'></button>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='topbar topbar-mte'>\n<div class='mode-name'>"),
                            i.push("" + t(e(this.t("modes.name.mte")))),
                            i.push("</div>\n<div class='location-info-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<span class='mouse-position' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'>00.00000 00.00000</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<a class='livemap-link' href='/livemap/' target='_blank'></a>\n<a class='fa fa-link permalink' data-toggle='tooltip' title='" + t(e(this.t("footer.copy_to_clipboard", {
                                button: this.h.copyShortcut()
                            }))) + "'></a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.showNext ? i.push("<div class='btn btn-block next'>" + t(e(this.adapter.getNextButtonString())) + "</div>") : i.push("<div class='btn btn-block done'>" + t(e(this.t("problems.panel.done"))) + "</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            null != this.attributes.description && (i.push("<p class='description'>"),
                                i.push("" + t(e(this.attributes.description))),
                                i.push("</p>")),
                            null != this.attributes.extraInfo && (i.push("<p class='extraInfo'>"),
                                i.push("" + t(e(this.attributes.extraInfo))),
                                i.push("</p>")),
                            null != this.attributes.street && (i.push("<div class='street'>\n<strong>" + t(e(this.t("problems.panel.closure.street") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.street))),
                                i.push("</div>")),
                            null != this.attributes.fromCrossStreet && (i.push("<div class='fromCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.from_cross_street") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.fromCrossStreet))),
                                i.push("</div>")),
                            null != this.attributes.toCrossStreet && (i.push("<div class='toCrossStreet'>\n<strong>" + t(e(this.t("problems.panel.closure.to_cross_street") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.toCrossStreet))),
                                i.push("</div>")),
                            null != this.attributes.startTime && (i.push("<div class='startTime'>\n<strong>" + t(e(this.t("problems.panel.closure.start_time") + ":")) + "</strong>"),
                                i.push("" + t(e(I18n.l("time.formats.long", this.attributes.startTime)))),
                                i.push("</div>")),
                            null != this.attributes.endTime && (i.push("<div class='endTime'>\n<strong>" + t(e(this.t("problems.panel.closure.end_time") + ":")) + "</strong>"),
                                i.push("" + t(e(I18n.l("time.formats.long", this.attributes.endTime)))),
                                i.push("</div>")),
                            null != this.attributes.dailyHours && (i.push("<div class='dailyHours'>\n<strong>" + t(e(this.t("problems.panel.closure.schedule") + ":")) + "</strong>"),
                                i.push("" + t(e(this.attributes.dailyHours))),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["problem-edit", "" + t(e("severity-" + this.adapter.getSeverity()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='header'>\n<a class='close-panel'>×</a>\n<a class='focus'>\n<i class='fa fa-crosshairs'></i>\n</a>\n<div class='type'>" + t(e(this.adapter.getTitle())) + "</div>\n<div class='reported'>" + t(e(this.adapter.getReportedString())) + "</div>"),
                            this.showDebug && i.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.adapter.problem.getID()
                            }))) + "</div>"),
                            i.push("</div>\n<div class='body'>\n<div class='problem-data'>"),
                            this.adapter.hasDescription() && (i.push("<div class='description section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.description"))) + "</div>\n<div class='collapsible content'>"),
                                null != this.adapter.getDescriptionTemplate() ? i.push("" + e(this.renderPartial(this.adapter.getDescriptionTemplate(), this.adapter.problem))) : i.push("" + t(e(this.adapter.getDescription()))),
                                i.push("</div>\n</div>")),
                            this.showMoreInfoSection()) {
                            for (i.push("<div class='collapsed more-info section'>\n<div class='title'>" + t(e(this.t("problems.panel.section.more_info"))) + "</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<form class='controls-container'>\n<div class='not-available'>" + t(e(this.t("problems.panel.more_info.not_available"))) + "</div>"),
                                r = this.adapter.getMoreInfoTypes(),
                                n = 0,
                                s = r.length; n < s; n++)
                                o = r[n],
                                o = o.get("name"),
                                i.push("<div class='" + ["more-info-checkbox", "more-info-" + t(e(o)) + "-checkbox"].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='" + ["legend", "more-info-" + t(e(o))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>"),
                                i.push("" + e(this.h.checkbox(this.t("problems.panel.more_info." + o), o, "on"))),
                                i.push("</div>");
                            i.push("</form>\n</div>\n</div>")
                        }
                        return this.adapter.isConversationAvailable() && (i.push("<div class='conversation section'>\n<div class='title'>"),
                                i.push("" + t(e(this.t("problems.panel.section.conversation")))),
                                i.push("<span class='comment-count-badge'></span>\n</div>\n<div class='collapsible loading-indicator'>\n<div class='fa fa-spin fa-spinner'></div>\n</div>\n<div class='collapsible content'>\n<div class='conversation-region'></div>\n</div>\n</div>")),
                            i.push("</div>\n<div class='actions'>"),
                            this.showCloseDetails() ? (i.push("<div class='close-details section'>\n<div class='content'>\n<div class='date'>" + e(this.getCloseDate()) + "</div>\n<div class='by'>" + e(this.getClosingUser()) + "</div>\n<div class='navigation'>"),
                                i.push("" + e(this.renderPartial("Waze/Modules/Problems/templates/_navigation", this))),
                                i.push("</div>\n</div>\n</div>")) : (i.push("<div class='section'>\n<div class='content'>\n<form class='controls-container'>"),
                                i.push("" + e(this.h.radio(this.adapter.getOpenStateString(), "state", "open", null, this.adapter.isEditable()))),
                                i.push("" + e(this.h.radio(this.adapter.getSolvedStateString(), "state", "solved", null, this.adapter.isEditable()))),
                                i.push("" + e(this.h.radio(this.adapter.getNotIdentifiedStateString(), "state", "not-identified", null, this.adapter.isEditable()))),
                                this.adapter.isEditable() || i.push("<div class='alert alert-danger'>" + t(e(this.t("problems.panel.no_permission"))) + "</div>"),
                                i.push("</form>\n<div class='navigation'>"),
                                i.push("" + e(this.renderPartial("Waze/Modules/Problems/templates/_navigation", this))),
                                i.push("</div>\n</div>\n</div>")),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='drive-profile-edit-blocked'>\n<div class='drive-profile-group'>\n<div class='controls-container'>\n<input id='all-vehicles-on-radio' type='radio' name='isAllVehicles' value='true'>\n<label for='all-vehicles-on-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.all_vehicles")))),
                            i.push("</label>\n</div>\n</div>\n<div class='drive-profile-group drive-profile-vehicles-group'>\n<div class='controls-container'>\n<input id='all-vehicles-off-radio' type='radio' name='isAllVehicles' value='false'>\n<label class='drive-profile-vehicles-option-label' for='all-vehicles-off-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.only_vehicles")))),
                            i.push("</label>\n</div>\n<div class='drive-profile-vehicle-types'>"),
                            o = this.getVehicleTypes(),
                            n = 0,
                            r = o.length; n < r; n++)
                            s = o[n],
                            i.push("<div class='controls-container'>\n<input class='vehicle-type' id='vehicle-type-" + s.value + "-checkbox' type='checkbox' value='" + t(e(s.value)) + "'>\n<label class='vehicle-type-label' for='vehicle-type-" + t(e(s.value)) + "-checkbox'>"),
                            i.push("" + t(e(this.t("restrictions.vehicle_types." + s.key)))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='drive-profile-edit-free'>\n<div class='collection-region'></div>\n<div class='add-drive-profile-item do-add-item'>\n<span class='waze-icon-plus'></span>"),
                            i.push("" + t(e(this.t("restrictions.editing.driving.add_vehicle")))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, i, n, s, r, o, a, l, u, d, c, h, p, f;
                        if (i = this.__htmlEscape,
                            t = this.__cleanValue,
                            n = [],
                            n.push("<div class='drive-profile-item-attributes'>"),
                            this.isBlank)
                            n.push("<div class='is-blank'>"),
                            n.push("" + i(t(this.t("restrictions.editing.driving.no_vehicle")))),
                            n.push("</div>");
                        else {
                            if (n.push("<div class='vehicle-type'>"),
                                this.hasVehicleType) {
                                for (n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + i(t(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + i(t(this.vehicleName))),
                                    n.push("</span>\n<i class='do-delete-vehicle-type drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    d = this.vehicleTypesNames,
                                    r = 0,
                                    l = d.length; r < l; r++)
                                    f = d[r],
                                    n.push("<li>\n<a class='do-set-vehicle-type' data-target='#' data-value='" + i(t(this.vehicleTypes[f])) + "'>"),
                                    n.push("" + i(t(this.t("restrictions.vehicle_types." + f)))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>")
                            } else
                                n.push("<div class='all-vehicles'>"),
                                n.push("" + i(t(this.t("restrictions.editing.driving.all_vehicles")))),
                                n.push("" + i(t(this.t("restrictions.editing.driving.prepositions.with")))),
                                n.push("</div>");
                            if (n.push("</div>"),
                                this.hasNumPassengers) {
                                for (n.push("<div class='num-passengers'>"),
                                    this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + i(t(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + i(t(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + i(t(this.t("restrictions.editing.driving.min_passengers", {
                                        count: this.numPassengers
                                    })))),
                                    n.push("</span>\n<i class='do-delete-num-passengers drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    c = this.numPassengersRange,
                                    o = 0,
                                    u = c.length; o < u; o++)
                                    s = c[o],
                                    n.push("<li>\n<a class='do-set-num-passengers' data-target='#' data-value='" + i(t(s)) + "'>"),
                                    n.push("" + i(t(this.t("restrictions.editing.driving.min_passengers", {
                                        count: s
                                    })))),
                                    n.push("</a>\n</li>");
                                n.push("</ul>\n</div>\n</div>")
                            }
                            if (this.hasSubscription) {
                                n.push("<div class='subscription'>"),
                                    this.hasNumPassengers ? (n.push("<span class='driving-preposition'>"),
                                        n.push("" + i(t(this.t("restrictions.editing.driving.prepositions.and")))),
                                        n.push("</span>")) : this.hasVehicleType && (n.push("<span class='driving-preposition'>"),
                                        n.push("" + i(t(this.t("restrictions.editing.driving.prepositions.with")))),
                                        n.push("</span>")),
                                    n.push("<div class='btn-group'>\n<span class='dropdown-toggle restriction-chip' data-toggle='" + i(t(this.restrictionEditable ? "dropdown" : void 0)) + "'>\n<span class='restriction-chip-content'>"),
                                    n.push("" + i(t(this.subscriptionName))),
                                    n.push("</span>\n<i class='do-delete-subscription drive-profile-item-action fa fa-times-circle'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    h = this.subscriptionOptions;
                                for (p in h)
                                    e.call(h, p) && (a = h[p],
                                        n.push("<li>\n<a class='do-set-subscription' data-target='#' data-value='" + i(t(p)) + "'>"),
                                        n.push("" + i(t(a))),
                                        n.push("</a>\n</li>"));
                                n.push("</ul>\n</div>\n</div>")
                            }
                        }
                        return n.push("</div>"),
                            this.restrictionEditable && (n.push("<div class='drive-profile-item-actions'>\n<div class='do-delete-item drive-profile-item-action'>\n<i class='fa fa-trash'></i>\n</div>"),
                                this.isExhaustive || (n.push("<div class='btn-group'>\n<span class='drive-profile-item-action dropdown-toggle' data-toggle='dropdown'>\n<i class='fa fa-plus'></i>\n</span>\n<ul class='dropdown-menu'>"),
                                    this.hasVehicleType || (n.push("<li>\n<a class='do-init-vehicle-type' data-target='#'>"),
                                        n.push("" + i(t(this.t("restrictions.editing.driving.dropdowns.vehicle_type")))),
                                        n.push("</a>\n</li>")), !this.hasNumPassengers && this.supportsNumPassengers && (n.push("<li>\n<a class='do-init-num-passengers' data-target='#'>"),
                                        n.push("" + i(t(this.t("restrictions.editing.driving.dropdowns.num_passengers")))),
                                        n.push("</a>\n</li>")), !this.hasSubscription && this.supportsSubscriptions && this.subscriptionsAvailable && (n.push("<li>\n<a class='do-init-subscription' data-target='#'>"),
                                        n.push("" + i(t(this.t("restrictions.editing.driving.dropdowns.subscription")))),
                                        n.push("</a>\n</li>")),
                                    n.push("</ul>\n</div>")),
                                n.push("</div>")),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            this.isNewRestriction ? i.push("" + t(e(this.t("restrictions.modal_headers.creating_restriction")))) : i.push("" + t(e(this.t("restrictions.modal_headers.editing_restriction")))),
                            i.push("</h3>\n</div>\n<div class='modal-body'>\n<div class='restriction-editing-region'>\n<div class='restriction-validation-region'></div>\n<div class='restriction-editing-section'>\n<div class='restriction-editing-title restriction-editing-title-main'>"),
                            i.push("" + t(e(this.editingTitle))),
                            i.push("</div>\n<div class='segment-editing-region'></div>\n<div class='timeframe-editing-region'></div>\n</div>\n<div class='restriction-editing-section'>\n<div class='driving-modality-editing-region'>\n<div class='restriction-editing-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.driving_prefix")))),
                            i.push("<select class='do-change-driving-modality driving-modality-select form-control'></select>"),
                            this.canAddTollRestriction || i.push("<i class='waze-tooltip' title='" + t(e(this.t("restrictions.editing.driving.toll_disabled"))) + "'></i>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.driving_suffix")))),
                            i.push("</div>\n</div>\n<div class='drive-profile-editing-region'></div>\n</div>\n<div class='restriction-editing-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.more_info")))),
                            i.push("</div>\n<div class='description-editing-region'>\n<textarea class='form-control' name='description' placeholder='" + t(e(this.t("restrictions.editing.placeholders.description"))) + "'></textarea>\n</div>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>\n<div class='help-message-region'>\n<i class='fa fa-exclamation-circle'></i>\n<div class='help-message'></div>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-cancel'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>"),
                            this.isNewRestriction ? i.push("<button class='btn btn-primary do-create'>" + t(e(this.t("restrictions.buttons.add"))) + "</button>") : i.push("<button class='btn btn-primary do-update'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>"),
                            i.push("</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='restriction-editing-container'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.segment.applies")))),
                            i.push("</div>\n<div class='segment-section-content'>\n<select class='form-control' name='disposition'></select>\n<select class='form-control' name='laneType'></select>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='restriction-validation-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.validation")))),
                            i.push("</div>\n<div class='collection-region'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<td class='restriction-segment-attribute'>"),
                            i.push("" + t(e(this.laneStr))),
                            i.push("</td>\n<td>"),
                            i.push("" + t(e(this.daysStr))),
                            i.push("</td>\n<td>"),
                            i.push("" + t(e(this.timeStr))),
                            i.push("</td>\n<td class='restriction-item-summary' title='" + t(e(this.summaryStr)) + "'>\n<div class='restriction-item-details'>"),
                            this.isAllowed && (i.push("<span class='restriction-item-badge restriction-item-badge-allowed'>"),
                                i.push("" + t(e(this.t("restrictions.summary.badges.allowed")))),
                                i.push("</span>")),
                            this.isBlocked && (i.push("<span class='restriction-item-badge restriction-item-badge-blocked'>"),
                                i.push("" + t(e(this.t("restrictions.summary.badges.blocked")))),
                                i.push("</span>")),
                            this.isTollFree && (i.push("<span class='restriction-item-badge restriction-item-badge-toll-free'>"),
                                i.push("" + t(e(this.t("restrictions.summary.badges.toll_free")))),
                                i.push("<i class='badge-tooltip fa fa-info-circle' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("restrictions.summary.tooltips.toll_free"))) + "'></i>\n</span>")),
                            i.push("<div class='restriction-item-details-summary'>"),
                            i.push("" + t(e(this.summaryStr))),
                            i.push("</div>\n</div>\n</td>\n<td>\n<div class='restriction-actions'>"),
                            this.canModifyRestriction && (i.push("<div class='restriction-editing-actions'>"),
                                this.canApplyToAll && i.push("<i class='apply-to-all-tooltip do-applyToAll fa fa-clone' title='" + t(e(this.t("restrictions.editing.actions.apply_to_all"))) + "'></i>"),
                                i.push("<i class='do-delete fa fa-trash' title='" + t(e(this.t("restrictions.editing.actions.delete"))) + "'></i>\n</div>")),
                            i.push("<i class='do-edit fa fa-chevron-right restriction-action-edit'></i>\n</div>\n</td>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='modal-dialog restrictions-modal'>\n<div class='modal-content'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            i.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            i.push("</h3>\n<div class='modal-header-messages'>"),
                            this.editingMultipleSegments && (i.push("<div class='modal-header-message'>"),
                                i.push("" + t(e(this.t("restrictions.modal_headers.multiple_segments")))),
                                i.push("</div>")),
                            this.canEditRestrictions || (i.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                i.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                i.push("</div>")),
                            i.push("</div>\n</div>\n<div class='modal-body'>\n<div class='forward-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-a-to-b'>\n      <span class='direction-icon direction-icon-a'>\n      A\n      </span>\n      <span class='direction-icon-to'>\n      &gt;\n      </span>\n      <span class='direction-icon direction-icon-b'>\n      B\n      </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.forwardTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='restriction-summary-group reverse-restrictions-summary'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-b-to-a'>\n      <span class='direction-icon direction-icon-b'>\n      B\n      </span>\n      <span class='direction-icon-to'>\n      &gt;\n      </span>\n      <span class='direction-icon direction-icon-a'>\n      A\n      </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.reverseTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n<div class='bidi-restrictions-summary restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='direction-icons direction-icons-bidi'>\n      <span class='direction-icon direction-icon-bidi'>"),
                            i.push("      " + t(e(this.t("segment.direction.label.3")))),
                            i.push("      </span>\n</div>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.bidiTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-all-list-region restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<div class='restrictions-list-region restrictions-some-list-region'>\n<div class='restrictions-some-message'>"),
                            i.push("" + t(e(this.t("restrictions.editing.sections.applies_to_some")))),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-container'>\n<input id='tollRoadCheckbox' type='checkbox' name='tollRoad'>\n<label for='tollRoadCheckbox'>"),
                            i.push("" + t(e(this.t("restrictions.editing.segment.toll_road")))),
                            i.push("</label>\n<i class='toll-road-tooltip waze-tooltip' title='" + t(e(this.t("restrictions.editing.segment.toll_road_disabled"))) + "'></i>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<table class='restrictions-table table'>\n<thead>\n<tr>\n<th class='restriction-segment-attribute'>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.lane")))),
                            i.push("</th>\n<th>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.days")))),
                            i.push("</th>\n<th>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.time")))),
                            i.push("</th>\n<th>"),
                            i.push("" + t(e(this.t("restrictions.summary.table_headers.summary")))),
                            i.push("</th>\n<th></th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-header'>\n<h3 class='modal-title'>"),
                            i.push("" + t(e(this.t("restrictions.modal_headers.restriction_summary")))),
                            i.push("</h3>\n<div class='modal-header-messages'>"),
                            this.canEditRestrictions || (i.push("<div class='modal-header-message'>\n<i class='fa fa-exclamation-circle'></i>"),
                                i.push("" + t(e(this.t("restrictions.modal_headers.limited_permissions")))),
                                i.push("</div>")),
                            i.push("</div>\n</div>\n<div class='modal-body'>\n<div class='restriction-summary-group'>\n<div class='restriction-summary-title'>\n<div class='restriction-summary-group-name'>"),
                            i.push("" + t(e(this.summaryTitle))),
                            i.push("</div>\n</div>\n<div class='restrictions-list-region'>"),
                            i.push("" + e(this.renderPartial("Waze/Modules/Restrictions/templates/restrictions_summary_table"))),
                            i.push("</div>\n<button class='btn btn-default do-create'>" + t(e(this.t("restrictions.buttons.add_new"))) + "</button>\n</div>\n</div>\n<div class='modal-footer'>\n<div class='footer-region'>\n<div class='controls-region'>\n<div class='controls-container'>\n<input id='is-difficult-checkbox' type='checkbox' name='isDifficult'>\n<label for='is-difficult-checkbox'>"),
                            i.push("" + t(e(this.t("restrictions.editing.turn.difficult_turn")))),
                            i.push("</label>\n</div>\n</div>\n<div class='buttons-region'>\n<button class='btn btn-default do-close'>" + t(e(this.t("restrictions.buttons.cancel"))) + "</button>\n<button class='btn btn-primary do-apply'>" + t(e(this.t("restrictions.buttons.apply"))) + "</button>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='restriction-editing-container'>\n<div class='timeframe-section timeframe-section-weekdays'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.days")))),
                            i.push("</div>\n<div class='timeframe-section-content'>\n<div class='timeframe-weekdays'>"),
                            o = W.Config.week_days_order,
                            s = 0,
                            r = o.length; s < r; s++)
                            n = o[s],
                            i.push("<div class='controls-container'>\n<input class='weekday' id='day-ordinal-" + n + "-checkbox' type='checkbox' value='" + t(e(this.getWeekdayFromOrdinal(n))) + "'>\n<label for='day-ordinal-" + t(e(n)) + "-checkbox'>"),
                            i.push("" + t(e(this.t("date.abbr_day_names")[n]))),
                            i.push("</label>\n</div>");
                        return i.push("</div>\n<div class='timeframe-weekdays-toggle'>"),
                            i.push("      " + t(e(this.t("restrictions.editing.toggle.select")))),
                            i.push("      <span>\n      :&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-all weekdays-toggle'>"),
                            i.push("      " + t(e(this.t("restrictions.editing.toggle.all")))),
                            i.push("      </span>\n      <span>\n      ,&nbsp;\n      </span>\n      <span class='do-toggle-weekdays-none weekdays-toggle'>"),
                            i.push("      " + t(e(this.t("restrictions.editing.toggle.none")))),
                            i.push("      </span>\n</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-hours'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.hours")))),
                            i.push("</div>\n<div class='timeframe-hours-controls'>\n<div class='timeframe-section-content'>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-from-time' name='fromTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='bootstrap-timepicker input-group timepicker'>\n<input class='form-control timepicker-to-time' name='toTime'>\n<span class='input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n<div class='controls-container timeframe-all-day'>\n<input id='is-all-day-checkbox' type='checkbox' name='isAllDay'>\n<label for='is-all-day-checkbox'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.all_day")))),
                            i.push("</label>\n</div>\n</div>\n<div class='timeframe-overnight-message'>\n<i class='waze-tooltip'></i>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.overnight")))),
                            i.push("</div>\n</div>\n</div>\n<div class='timeframe-section timeframe-section-dates'>\n<div class='restriction-section-title'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.applies")))),
                            i.push("</div>\n<div class='timeframe-section-content'>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-off-radio' type='radio' name='isDuringDates' value='false'>\n<label for='is-during-dates-off-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.always")))),
                            i.push("</label>\n</div>\n<div class='controls-container timeframe-section-option'>\n<input id='is-during-dates-on-radio' type='radio' name='isDuringDates' value='true'>\n<label class='label-datepicker' for='is-during-dates-on-radio'>"),
                            i.push("" + t(e(this.t("restrictions.editing.timeframe.every_month")))),
                            i.push("</label>\n<input class='btn btn-default datepicker'>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<p class='description'>"),
                            i.push("" + t(e(this.title))),
                            this.collated && i.push("" + t(e(" (" + this.collated + ")"))),
                            this.showPanButton && i.push("<a class='focus'>\n<i class='fa fa-crosshairs'></i>\n</a>"),
                            i.push("</p>\n<div class='suggestion'>\n<span class='suggestion-title'>" + t(e(this.t("save.error.suggestion"))) + "</span>"),
                            i.push("" + t(e(this.solution))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='error-list'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.getTitle())) + "</h4>\n</div>\n<div class='body'>\n<ul class='list list-unstyled'></ul>\n</div>\n<div class='actions clearfix'>"),
                            this.showActionTitle() && i.push("<p class='actions-title'>" + t(e(this.t("save.error.actions.title"))) + "</p>"),
                            this.collection.isIgnorable() ? i.push("<button class='btn btn-default edit'>" + t(e(this.t("save.error.actions.edit"))) + "</button>\n<button class='btn btn-default save'>" + t(e(this.t("save.error.actions.save"))) + "</button>") : i.push("<button class='btn btn-default close-button'>" + t(e(this.t("save.error.actions.close"))) + "</button>"),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='success'>\n<div class='arrow'></div>\n<a class='close-popover'>×</a>\n<div class='header'>\n<h4 class='title'>" + t(e(this.t("save.success.title"))) + "</h4>\n</div>\n<div class='body'>\n<div class='change-count'>"),
                            i.push("" + e(this.getSaveCountTextFor("segments"))),
                            i.push("" + e(this.getSaveCountTextFor("nodes"))),
                            i.push("" + e(this.getSaveCountTextFor("venues"))),
                            i.push("" + e(this.getSaveCountTextFor("bigJunctions"))),
                            i.push("</div>"),
                            this.showPendingVenues() && (i.push("<div class='pending-venues'></div>"),
                                this.venueNames.length > 0 ? i.push("" + e(this.safe_t("save.success.pending_venues.with_names", {
                                    names: this.h.contentTag("strong", this.venueNames)
                                }))) : i.push("" + e(this.safe_t("save.success.pending_venues.no_names")))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<form class='form-search'>\n<div class='input-wrapper'>\n<input class='search-query' autocomplete='off' name='q' spellcheck='off' type='text' placeholder='" + t(e(this.t("toolbar.search"))) + "'>\n<i class='fa fa-spin fa-spinner input-addon input-addon-right spinner'></i>\n</div>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<menu class='dropdown-menu'></menu>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<span class='menu-title'>" + t(e(this.title)) + "</span>"),
                            this.showDrawingControls && (i.push("<div class='drawing-controls'>"),
                                this.secondaryControl && i.push("<span class='" + ["drawing-control", "secondary-control", "" + t(e(this.secondaryControl.drawingType))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' title='" + t(e(this.t("drawing." + this.secondaryControl.drawingType, {
                                    name: this.featureName
                                }))) + "'></span>"),
                                this.control && i.push("<span class='" + ["drawing-control", "main-control", "" + t(e(this.control.drawingType))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' title='" + t(e(this.t("drawing." + this.control.drawingType, {
                                    name: this.featureName
                                }))) + "'></span>"),
                                i.push("</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='mode-switcher'>\n<div class='toolbar-button waze-icon-hive'></div>\n<menu class='dropdown-menu'>\n<ul class='list-unstyled'>\n<li class='mode-item' data-mode='" + t(e(0)) + "'>"),
                            i.push("" + t(e(this.t("modes.name.default")))),
                            i.push("</li>\n<li class='mode-item' data-mode='" + t(e(1)) + "'>"),
                            i.push("" + t(e(this.t("modes.name.mte")))),
                            i.push("</li>\n</ul>\n</menu>\n</div>\n<div id='search'></div>\n<div id='edit-buttons'></div>\n<div class='toolbar-separator'></div>\n<div class='layer-switcher-container'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='area-manager-item'>\n<a href='#'>\n<span class='username'>" + t(e(this.username)) + "</span>\n</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='main-list-region'></div>\n<div class='rest-list-region'></div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='title'>" + t(e(this.t("area_managers_list.title") + ":")) + "</div>\n<ul class='main-list'></ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.numItems > 0 && i.push("" + t(e("+"))),
                            i.push("<span class='dropdown'>\n<a class='dropdown-toggle' data-toggle='dropdown'>"),
                            this.numItems > 0 && i.push("" + t(e(this.t("area_managers_list.rest", {
                                count: this.numItems
                            })))),
                            i.push("</a>\n<ul class='dropdown-menu'></ul>\n</span>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='topbar'>\n<div class='location-info-region'></div>\n<div class='area-managers-region'></div>\n<div class='loading-indicator-region'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + t(e(this.operationText))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<span class='full-address'></span>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            null != this.updatedBy && t.push("<li>" + e(this.safe_t("edit.updated", {
                                time: this.h.dateOnlyString(this.updatedOn),
                                user: this.h.userProfile(this.updatedBy)
                            })) + "</li>"),
                            null != this.createdBy && t.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.createdOn),
                                user: this.h.userProfile(this.createdBy)
                            })) + "</li>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", {
                                createdBy: this.createdBy,
                                updatedBy: this.updatedBy
                            }))),
                            this.id && i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.id
                            }))) + "</li>"),
                            i.push("</ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(62).CITY_NAME_PATTERN,
                            n.push("<div class='clearfix preview'>\n<span class='full-address'></span>\n<a class='edit-button'>\n<i class='waze-icon-edit'></i>\n</a>\n</div>\n<form class='address-form clearfix inner-form'>"),
                            n.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                            this.showStreetInput && (n.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                                n.push("" + t(e(this.t("edit.address.street")))),
                                n.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-street' id='empty-street' type='checkbox'>\n<label for='empty-street'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls'>\n<input class='form-control street-name' autocomplete='off' type='text' maxlength='" + t(e(this.MAX_LENGTH.STREET_NAME)) + "'>\n</div>\n</div>")),
                            this.showHouseNumberInput && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.houseNumber"))) + "</label>\n<div class='controls'>\n<input class='form-control house-number' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.HOUSE_NUMBER)) + "' type='text'>\n</div>\n</div>"),
                            n.push("<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                            n.push("" + t(e(this.t("edit.address.city")))),
                            n.push("<div class='controls-container in-label toggle-empty'>\n<input class='empty-city' id='empty-city' type='checkbox'>\n<label for='empty-city'>" + t(e(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls'>"),
                            this.showCitySelect ? n.push("<select class='city-id form-control' required></select>") : n.push("<input class='city-name form-control' type='text' autocomplete='off' maxlength='" + t(e(this.MAX_LENGTH.CITY_NAME)) + "' pattern='" + t(e(s)) + "'>"),
                            n.push("</div>\n</div>"),
                            this.showStatesSelection && n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.state"))) + "</label>\n<div class='controls'>\n<select class='form-control state-id' required></select>\n</div>\n</div>"),
                            n.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.address.country"))) + "</label>\n<div class='controls'>\n<select class='country-id form-control' required></select>\n</div>\n</div>\n<div class='action-buttons'>\n<button class='btn btn-default cancel-button' type='button'>" + t(e(this.t("edit.cancel"))) + "</button>\n<button class='btn btn-primary save-button' type='submit'>" + t(e(this.t("edit.apply"))) + "</button>\n</div>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='archive-panel'>\n<div class='header'>\n<a class='close-panel'>×</a>"),
                            i.push("" + t(e(this.t("archive_panel.title")))),
                            i.push("</div>\n<div class='body'>"),
                            null != this.fromAddress && (i.push("<div class='from-address'>\n<strong>" + t(e(this.t("archive_panel.from") + ":")) + "</strong>"),
                                i.push("" + t(e(this.formatAddress(this.fromAddress)))),
                                i.push("</div>")),
                            null != this.toAddress && (i.push("<div class='to-address'>\n<strong>" + t(e(this.t("archive_panel.to") + ":")) + "</strong>"),
                                i.push("" + t(e(this.formatAddress(this.toAddress)))),
                                i.push("</div>")),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.sessions.isEmpty())
                            i.push("<p class='message'>\n<strong>"),
                            i.push("" + t(e(this.t("user.drives.no_drives")))),
                            i.push("</strong>\n</p>\n<p class='message'>"),
                            i.push("" + t(e(this.t("user.drives.no_drives_explanation")))),
                            i.push("</p>");
                        else {
                            for (i.push("<p class='message'>"),
                                i.push("" + t(e(this.t("user.drives.subtitle") + ":"))),
                                i.push("</p>\n<ul class='result-list'>"),
                                r = this.sessions,
                                n = 0,
                                s = r.length; n < s; n++)
                                o = r[n],
                                i.push("<li class='" + ["result", "session", "" + t(e(o.hasFullSession ? "session-available" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-id='" + t(e(o.id)) + "'>\n<p class='title'>" + t(e(this.h.dateString(o.startTime))) + "</p>\n<p class='additional-info clearfix'>\n<span>" + t(e(this.h.lengthString(o.totalRoadMeters))) + "</span>\n<span>" + t(e(this.h.durationString(o.startTime, o.endTime))) + "</span>\n</p>\n</li>");
                            i.push("</ul>")
                        }
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='big-junction'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.big_junction.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='big-junction-edit-general'>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text' value='" + t(e(this.bigJunction.attributes.name)) + "'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.big_junction.fields.lock"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' disabled='disabled' name='lockRank'>\n<option>" + t(e(this.h.formatRank(this.bigJunction.attributes.rank))) + "</option>\n</select>\n</div>\n</div>\n</form>\n<div class='address-edit side-panel-section'></div>\n<div class='path-list side-panel-section'>\n<div class='sub-section-header'>" + t(e(this.t("edit.big_junction.fields.connections"))) + "</div>\n<div class='path-list-container'></div>\n</div>\n<div class='form-group side-panel-section'>\n<div class='controls junction-actions'>\n<button class='action-button btn btn-default select-short-segments'>" + t(e(this.t("edit.big_junction.select_segments"))) + "</button>\n</div>\n</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li>" + t(e(this.t("edit.big_junction.segments", {
                                segments: this.bigJunction.getSegmentCount()
                            }))) + "</li>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.bigJunction.attributes))),
                            i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.bigJunction.getID()
                            }))) + "</li>\n</ul>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.camera.title"))) + "</span>\n</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='camera-edit-general'></div>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='type'>"),
                            i.push("" + e(this.h.option(this.t("edit.camera.fields.type.2"), 2, this.attributes.type))),
                            i.push("" + e(this.h.option(this.t("edit.camera.fields.type.3"), 3, this.attributes.type))),
                            i.push("" + e(this.h.option(this.t("edit.camera.fields.type.4"), 4, this.attributes.type))),
                            i.push("</select>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.camera.fields.speed")))),
                            i.push("" + t(e(this.h.speedString()))),
                            i.push("</label>\n<div class='controls'>\n<input class='form-control' type='number' name='speed' maxlength='4' value='" + t(e(this.h.getDisplayUnitValue(this.attributes.speed, this.UNITS.speed, !0))) + "' data-type='numeric' data-units='" + t(e(this.UNITS.speed)) + "'>\n<label class='checkbox'>\n<input type='checkbox' name='validated' checked='" + t(e(this.attributes.validated)) + "' disabled='" + t(e(!this.isValidationStateEditable)) + "'>"),
                            i.push("" + t(e(this.t("edit.camera.fields.approved")))),
                            i.push("</label>\n</div>\n</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            i.push("" + e(this.renderPartial("templates/add_update_details", this.attributes))),
                            i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.getID()
                            }))) + "</li>\n</ul>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='chat-toggle'>\n<button class='toggle'></button>\n</div>\n<div id='chat'>\n<div class='header'>\n<span class='room-name single-room-label'></span>\n<div class='dropdown room-selector'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='room-name'></span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu rooms'></ul>\n</div>\n<div class='dropdown visibilty-menu'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#' role='menu'>\n<span class='status'>" + t(e(this.status)) + "</span>\n<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu visibility'>\n<li class='visibility-visible'>\n<a href='#'>" + t(e(this.t("chat.visible"))) + "</a>\n</li>\n<li class='visibility-invisible'>\n<a href='#'>" + t(e(this.t("chat.invisible"))) + "</a>\n</li>\n</ul>\n</div>\n<button class='minimize' aria-hidden='true' type='button'>_</button>\n</div>\n<div class='not-connected-message'>Not Connected</div>\n<div class='chat-body'>\n<div class='messages'>\n<div class='message-list'></div>\n<a class='unread-messages-notification' href='#'></a>\n<div class='new-message'>\n<input class='message-input' placeholder='" + t(e(this.t("chat.placeholder"))) + "' data-auto-rtl>\n</div>\n</div>\n<div class='users'>\n<ul class='list-unstyled user-list'></ul>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='from'>" + t(e(this.message.from.name)) + "</div>\n<div class='body'>"),
                            o = this.message.body.split("\n"),
                            n = 0,
                            s = o.length; n < s; n++)
                            r = o[n],
                            i.push("<div>" + t(e(r)) + "</div>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<a class='" + ["user", "" + t(e(this.className))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#' data-id='" + t(e(this.user.id)) + "'>\n<div class='rank'>"),
                            this.user.rank < 6 ? i.push("" + t(e(this.user.rank + 1))) : i.push("&nbsp;"),
                            i.push("</div>\n<i class='crosshair fa fa-crosshairs'></i>\n<div class='username'>" + t(e(this.user.name)) + "</div>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div style='display:none'>\n<input type='text' name='PreventChromeAutocomplete' autocomplete='address-level4'>\n</div>"),
                            e.join("\n")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, o, a, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(199),
                            this.areas.isEmpty())
                            n.push("<p class='message'>" + t(e(this.t("user.areas.no_areas"))) + "</p>");
                        else {
                            for (n.push("<p class='message'>" + t(e(this.t("user.areas.subtitle") + ":")) + "</p>\n<ul class='result-list'>"),
                                l = this.areas,
                                o = 0,
                                a = l.length; o < a; o++)
                                r = l[o],
                                n.push("<li class='area result' data-index='" + t(e(r.get("num"))) + "'>"),
                                r.get("type") === s.prototype.TYPE.DRIVE ? n.push("<p class='title'>" + t(e(this.t("user.areas.area", {
                                    num: r.get("num") + 1
                                }))) + "</p>") : n.push("<p class='title'>" + t(e(this.t("user.areas.managed_area"))) + "</p>"),
                                n.push("<p class='additional-info clearfix'>\n<span>" + t(e(this.h.areaString(r.get("area")))) + "</span>\n</p>\n</li>");
                            n.push("</ul>")
                        }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["content", "" + t(e("valid-" + this.valid + " forced-" + this.forced))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='uneditable-number'>" + t(e(this.number)) + "</div>\n<div class='drag-handle'></div>\n<div class='" + ["input-wrapper", "" + t(e("side-" + (this.isLeft ? "left" : "right")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='number-preview'>" + t(e(this.number)) + "</div>\n<input class='number' value='" + t(e(this.number)) + "' type='text' placeholder='" + t(e(this.t("edit.segment.house_numbers.no_number"))) + "'>\n<div class='delete-button'>x</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='header'>\n<div class='hn-toolbar'>\n<button class='cancel toolbar-btn' title='" + t(e(this.t("edit.house_numbers.toolbar.close"))) + "'></button>\n<button class='redo toolbar-btn' disabled='" + t(e(!this.model.actionManager.canRedo() || this.disabled)) + "' title='" + t(e(this.t("edit.house_numbers.toolbar.redo"))) + "'></button>\n<button class='toolbar-btn undo' disabled='" + t(e(!this.model.actionManager.canUndo() || this.disabled)) + "' title='" + t(e(this.t("edit.house_numbers.toolbar.undo"))) + "'></button>\n<button class='save toolbar-btn' disabled='" + t(e(!this.model.actionManager.canSave() || this.disabled)) + "' title='" + t(e(this.t("edit.house_numbers.toolbar.save"))) + "'></button>\n<button class='add toolbar-btn' disabled='" + t(e(this.disabled || !this.pm.editingAllowedInZoom() || this.pm.failedLoading)) + "' title='" + t(e(this.t("edit.house_numbers.toolbar.add"))) + "'></button>\n</div>\n<div class='title'>"),
                            null != this.address && i.push("" + t(e(this.address.streetName + ", " + this.address.cityName + ", " + (this.address.hasState ? this.address.stateName : this.address.countryName)))),
                            i.push("</div>\n<div class='loading-animation not-shown'></div>\n</div>\n<div class='success-message' style='display: none;'>" + t(e(this.t("edit.house_numbers.save.success"))) + "</div>\n<div class='error-message' style='display: none;'>Error loading house numbers</div>\n<div class='save-error-message' style='display: none;'>Error saving, please try again later\n<br>\n<button class='btn btn-default btn-sm continue-editing'>OK</button>\n</div>"),
                            this.pm.editingAllowedInZoom() || i.push("<div class='zoom-message'>" + t(e(this.t("edit.house_numbers.zoom_to_edit"))) + "</div>"),
                            i.push("<div class='last-edited'>\nLast edited by\n<span class='username'>" + t(e(this.h.formatUserName(null != (n = this.pm.selectedNumber) ? n.model.updatedBy : void 0))) + "</span>\n</div>\n<div class='force-message' style='display: none;'>"),
                            i.push("" + t(e(this.t("edit.house_numbers.save.invalid")))),
                            i.push("<br>"),
                            this.pm.canForcedInvalid() && (i.push("" + t(e(this.t("edit.house_numbers.force.title")))),
                                i.push("<br>\n<button class='btn btn-default btn-sm force-invalid'>" + t(e(this.t("edit.house_numbers.force.action"))) + "</button>")),
                            i.push("<button class='btn btn-default btn-sm continue-editing'>" + t(e(this.t("edit.house_numbers.force.continue"))) + "</button>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='instruction-override-modal modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<h3>" + t(e(this.t("instruction_override.title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<div class='form-group'>\n<select class='form-control opcode-select'></select>\n</div>\n<div class='controls'>\n<button class='apply-button btn btn-primary'>" + t(e(this.t("edit.apply"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</div>\n</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, i, n, s, r, o, a, l, u, d;
                        i = this.__htmlEscape,
                            t = this.__cleanValue,
                            n = [],
                            u = this.groups;
                        for (r in u)
                            if (e.call(u, r)) {
                                for (s = u[r],
                                    n.push("<section class='shortcut-action-group'>"),
                                    null != s.members && n.push("<h2>" + i(t(this.t("keyboard_shortcuts.groups." + r + ".description"))) + "</h2>"),
                                    d = s.members,
                                    o = 0,
                                    a = d.length; o < a; o++)
                                    l = d[o],
                                    l.changeable && (n.push("<p class='" + ["shortcut-action", "" + i(t(l.enabled ? void 0 : "disabled"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' data-action='" + i(t(l.id)) + "'>"),
                                        null == l.shortcut || l.shortcut.isEmpty() ? n.push("<kbd class='no-shotcut'>None</kbd>") : (n.push("" + t(this.h.shortcutMaskToKeys(l.shortcut))),
                                            n.push("<kbd>" + i(t(this.h.getShortcutKey(l.shortcut))) + "</kbd>")),
                                        n.push("" + i(t(this.t("keyboard_shortcuts.groups." + r + ".members." + l.name)))),
                                        n.push("</p>"));
                                n.push("</section>")
                            }
                        return n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='shortcuts-dialog'>\n<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<button class='close' data-dismiss='modal' type='button'>×</button>\n<h3 class='modal-title'>" + t(e(this.t("keyboard_shortcuts.title"))) + "</h3>\n</div>\n<div class='modal-body'>"),
                            i.push("" + e(this.renderPartial("templates/keyboard_shortcuts/list", {
                                groups: this.groups
                            }))),
                            i.push("</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='footer-message location-message'>\nData for this location is on a different server environment,\n<a data-env='" + t(e(this.view.otherEnv)) + "' href='#'>switch now</a>\n<button class='close'>×</button>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<select class='form-control'>\n<option value='row' selected='" + t(e(this.isCurrentEnv("row"))) + "'>"),
                            i.push("" + t(e(this.t("envs.row")))),
                            i.push("</option>\n<option value='usa' selected='" + t(e(this.isCurrentEnv("usa"))) + "'>"),
                            i.push("" + t(e(this.t("envs.usa")))),
                            i.push("</option>\n<option value='il' selected='" + t(e(this.isCurrentEnv("il"))) + "'>"),
                            i.push("" + t(e(this.t("envs.il")))),
                            i.push("</option>\n</select>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-title'>"),
                            W.loginManager.expired ? (i.push("<div class='text-warning'>" + t(e(this.t("session.expired.title"))) + "</div>"),
                                i.push("" + t(e(this.t("session.expired.description"))))) : i.push("" + t(e(this.t("login.subtitle")))),
                            i.push("</div>\n<form action='#' method='post'>\n<input class='form-control username' name='username' required='" + t(e(!0)) + "' type='text' placeholder='" + t(e(this.t("login.form.username"))) + "'>\n<input class='form-control password' name='password' required='" + t(e(!0)) + "' type='password' placeholder='" + t(e(this.t("login.form.password"))) + "'>\n<div class='error-message text-danger'></div>\n<div class='form-action'>\n<button class='btn btn-primary submit' type='submit'>\n<span class='loading not-shown'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            i.push("" + t(e(this.t("login.form.action")))),
                            i.push("</button>\n</div>\n<a class='forgot-password' href='/forgot_password'>" + t(e(this.t("login.forgot_password"))) + "</a>\n</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='footer-message sandbox-message'>\n<strong>" + t(e(this.t("play_mode.title"))) + "</strong>"),
                            i.push("" + t(e(this.t("play_mode.description")))),
                            i.push("<span class='dropdown'>"),
                            i.push("" + e(this.safe_t("play_mode.login_msg", {
                                login_link: this.h.link(this.t("play_mode.login_link"), "#", {
                                    "data-toggle": "dropdown"
                                })
                            }))),
                            i.push("<ul class='dropdown-menu login-dropdown' role='menu'>\n<li class='login-form'></li>\n</ul>\n</span>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='map-modal' id='welcome-popup'>\n<div class='clearfix map-modal-body'>\n<div class='login'>\n<div class='action dropdown language-select'>\n<a class='dropdown-toggle not-shown' data-toggle='dropdown' href='#'>"),
                            i.push("" + t(e(I18n.t("language_name")))),
                            i.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>"),
                            o = I18n.availableLocales,
                            n = 0,
                            r = o.length; n < r; n++)
                            s = o[n],
                            i.push("<li>\n<a class='change-language' href='" + t(e(s !== W.Config.default_locale ? "/" + s : void 0)) + "/editor' data-locale='" + t(e(s)) + "'>"),
                            i.push("" + t(e(I18n.languageNames[s]))),
                            i.push("</a>\n</li>");
                        return i.push("</ul>\n</div>\n<div class='welcome-message'>\n<h2>" + t(e(this.t("welcome.title"))) + "</h2>\n<p>"),
                            i.push("" + t(e(this.t("welcome.content")))),
                            i.push("</p>\n</div>\n<div class='login-form'></div>\n</div>\n<div class='links'>\n<a class='btn btn-default tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='title'>" + t(e(this.t("welcome.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.tutorial.description"))) + "</div>\n</a>\n<a class='btn btn-default wiki' href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.wiki.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.wiki.description"))) + "</div>\n</a>\n<a class='btn btn-default forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.forum.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.forum.description"))) + "</div>\n</a>\n<a class='btn btn-default playmode' href='#'>\n<div class='title'>" + t(e(this.t("welcome.play_mode.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.play_mode.description"))) + "</div>\n</a>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div id='map'>\n<div id='input-overlay'></div>\n<div id='map-overlay'></div>\n<div id='popup-overlay'></div>\n<div class='not-shown' id='map-lightbox'>\n<div class='overlay'>\n<div class='top'></div>\n<div class='bottom'></div>\n<div class='left'></div>\n<div class='right'></div>\n</div>\n<div class='content'></div>\n</div>\n<div id='map-modal-container'></div>\n<div>\n<div id='topbar-container'></div>\n<div id='panel-container'></div>\n<div id='street-view-container'>\n<div class='panorama view-area'></div>\n<a class='close-button'>\n<i class='fa fa-remove'></i>\n</a>\n</div>\n<div class='view-area' id='WazeMap' tabindex='1'>\n<div class='snapshot-message'></div>\n</div>\n</div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='selection-text'>" + t(e(this.t("edit.node.title"))) + "</div>\n<div class='tab-content'>\n<div class='active tab-pane' id='node-edit-general'>\n<div class='side-panel-section'>"),
                            this.isConnectedToBigJunction() ? (i.push("<span class='error'>" + t(e(this.t("edit.node.permissions.big_junction.title"))) + "</span>"),
                                i.push("" + t(e(this.t("edit.node.permissions.big_junction.description"))))) : this.connectionsExist() && (i.push("<p class='connectionStatus'>"),
                                this.areAllConnectionsEnabled() && i.push("" + t(e(this.t("edit.node.turns.all_allowed")))),
                                this.areAllConnectionsDisabled() && i.push("" + t(e(this.t("edit.node.turns.all_disallowed")))),
                                i.push("</p>"),
                                this.areAllConnectionsEnabled() || i.push("<button class='allow-connections btn btn-default' disabled='" + t(e(!this.areConnectionsEditable())) + "'>" + t(e(this.t("edit.node.turns.allow_all"))) + "</button>"),
                                this.areAllConnectionsDisabled() || i.push("<button class='btn btn-default disallow-connections' disabled='" + t(e(!this.areConnectionsEditable())) + "'>" + t(e(this.t("edit.node.turns.disallow_all"))) + "</button>")),
                            i.push("</div>\n<ul class='additional-attributes list-unstyled side-panel-section'>\n<li>" + t(e(this.t("edit.id", {
                                num: this.getID()
                            }))) + "</li>\n</ul>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-content'>\n<div class='modal-header'>\n<h3 class='modal-title'>" + t(e(this.t("edit.landmark.opening_hours.add_title"))) + "</h3>\n</div>\n<div class='modal-body'>\n<div class='content'>\n<form class='add-opening-hour' action='#' method='post'>\n<div class='days section'>"),
                            i.push("" + e(this.renderPartial("templates/util/day-checkboxes", {
                                cb: this.dayCallback
                            }))),
                            i.push("" + e(this.renderPartial("templates/util/toggle-checkboxes"))),
                            i.push("</div>\n<div class='hours section'>\n<div class='clearfix'>\n<div class='labels'>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='on' checked='" + t(e(!1)) + "'>"),
                            i.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.all_day")))),
                            i.push("</label>\n</div>\n<div class='col-xs-2'>\n<label class='radio'>\n<input type='radio' name='allDay' value='off' checked='" + t(e(!0)) + "'>"),
                            i.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.from") + ":"))),
                            i.push("</label>\n</div>\n</div>\n<div class='inputs'>\n<div class='col-xs-4'>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control from-time time-selector' type='text' name='fromTime' value='" + t(e(this.defaultFromTime)) + "'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n<div class='col-xs-4'>\n<div class='pull-left to-label'>"),
                            i.push("" + t(e(this.t("edit.landmark.opening_hours.time_span.to") + ":"))),
                            i.push("</div>\n<div class='bootstrap-timepicker input-append input-group' dir='ltr'>\n<input class='form-control time-selector to-time' type='text' name='toTime' value='" + t(e(this.defaultToTime)) + "'>\n<span class='add-on input-group-addon'>\n<i class='fa fa-clock-o'></i>\n</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class='validation-errors'></div>\n<button class='btn btn-primary'>" + t(e(this.t("edit.add"))) + "</button>\n<button class='btn btn-default cancel-button'>" + t(e(this.t("edit.cancel"))) + "</button>\n</form>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + t(e(this.h.formatOpeningHour(this.model)))),
                            this.isEditable && i.push("<a class='delete' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='sub-section-header'>" + t(e(this.t("edit.landmark.opening_hours.title"))) + "</div>\n<ul class='list'></ul>"),
                            this.isEditable && i.push("<a class='add' href='#'>" + t(e(this.t("edit.landmark.opening_hours.add"))) + "</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["actions", "approve-intent-" + t(e(this.getApproveActionIntent())) + " " + t(e(this.model.get("updateType")))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            this.model.isPlaceAdLocked() ? i.push("<div class='alert alert-danger'>" + t(e(I18n.t("venues.update_requests.panel.needs_staff_approval"))) + "</div>") : this.model.isEditableByUser() ? (i.push("<form class='controls-container'>"),
                                i.push("" + e(this.h.radio(this.t("venues.update_requests.panel.action.open"), "approved", null, this.model.get("approved")))),
                                i.push("" + e(this.h.radio(this.getRejectActionName(), "approved", !1, this.model.get("approved")))),
                                i.push("" + e(this.h.radio(this.getApproveActionName(), "approved", !0, this.model.get("approved")))),
                                i.push("</form>")) : i.push("<div class='alert alert-danger'>" + t(e(this.getNoPermissionsMessage())) + "</div>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<div class='add-details'>"),
                            this.dateAdded && t.push("<div class='date small'>" + e(this.safe_t("venues.update_requests.panel.added_on", {
                                added_on_title: this.h.contentTag("strong", this.t("venues.update_requests.panel." + this.type)),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"), !this.hideUserDetails && this.createdBy && t.push("<div class='small user'>" + e(this.safe_t("venues.update_requests.panel.added_by", {
                                added_by_title: this.h.contentTag("strong", this.t("venues.update_requests.panel.added_by_title")),
                                username: this.h.userProfile(this.createdBy)
                            })) + "</div>"),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return e = this.__cleanValue,
                            t = [],
                            i = this.model.getAddedImage(),
                            t.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: i
                            }))),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !1,
                                dateAdded: i.get("date"),
                                createdBy: i.get("creatorUserId")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a, l, u, d;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.shouldShowName() && i.push("<h2 class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</h2>"),
                            i.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n<div class='images'>\n<div class='carousel slide' id='" + t(e(this.getCarouselUniqueId())) + "' data-ride='carousel' data-interval='false'>\n<div class='carousel-inner' role='listbox'>"),
                            u = this.getNewPlaceImages(),
                            r = n = 0,
                            a = u.length; n < a; r = ++n)
                            s = u[r],
                            i.push("<div class='" + ["item", "" + t(e(0 === r ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/image", {
                                image: s
                            }))),
                            i.push("</div>");
                        if (i.push("</div>"),
                            this.shouldShowCarousel()) {
                            for (i.push("<ol class='carousel-indicators list-unstyled'>"),
                                d = this.getNewPlaceImages(),
                                r = o = 0,
                                l = d.length; o < l; r = ++o)
                                s = d[r],
                                i.push("<li class='" + t(e(0 === r ? "active" : void 0)) + "' data-target='" + t(e("#" + this.getCarouselUniqueId())) + "' data-slide-to='" + t(e(r)) + "'></li>");
                            i.push("</ol>")
                        }
                        return i.push("</div>\n</div>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, o, a, l;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            n.push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            this.isGeometry)
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.hover")))),
                            n.push("<div class='current location-button'>"),
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.current")))),
                            n.push("<i class='fa fa-crosshairs'></i>\n</div>\n<div class='location-button suggested'>"),
                            n.push("" + t(e(this.t("venues.update_requests.panel.change.suggested")))),
                            n.push("<i class='fa fa-crosshairs'></i>\n</div>");
                        else if ("images" === this.fieldName) {
                            for (s = i(78).SIZE,
                                n.push("<div class='removed-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>\n<div class='remove-images'>"),
                                l = this.getRemovedImages(),
                                r = 0,
                                a = l.length; r < a; r++)
                                o = l[r],
                                n.push("<img class='image-preview' src='" + t(e(o.getUrl(s.WEB))) + "' data-image-id='" + t(e(o.id)) + "'>");
                            n.push("</div>")
                        } else
                            n.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this)));
                        return n.push("</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.showChangeList)
                            if (this.isExternalProvider)
                                i.push("<div class='external-providers-view'></div>");
                            else
                                for (i.push("<ul class='diff-list list-unstyled'></ul>"),
                                    o = this.changeList,
                                    n = 0,
                                    r = o.length; n < r; n++)
                                    s = o[n],
                                    i.push("<li class='" + ["diff", "" + t(e(s.changeType.toLowerCase()))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></li>\n<span class='name'>" + t(e(s.name)) + "</span>");
                        else
                            this.currentValue && (this.removing ? i.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.removed"))) + "</div>") : i.push("<div class='current-title'>" + t(e(this.t("venues.update_requests.panel.change.current"))) + "</div>"),
                                i.push("<div class='current'>" + t(e(this.currentValue)) + "</div>")),
                            this.removing || i.push("<div class='suggested-title'>" + t(e(this.t("venues.update_requests.panel.change.suggested"))) + "</div>\n<div class='suggested'>" + t(e(this.suggestedValue)) + "</div>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "").replace(/[\s\n]*\u0091/gm, "").replace(/\u0092[\s\n]*/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='" + ["change", "field-" + t(e(this.fieldName))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>\n<div class='field-name'>" + t(e(this.t("edit.landmark.parking.fields." + this.fieldName))) + "</div>\n<div class='values'>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/changed_field_item", this))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<h3>" + t(e(I18n.t("venues.update_requests.panel.place_deleted"))) + "</h3>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='anchor fa fa-crosshairs'></div>\n<div class='id span'>" + t(e(this.uuid)) + "</div>\n<a class='external-provider-link name' href='" + t(e(this.url)) + "' target='_blank'>" + t(e(this.name)) + "</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<ul class='diff-list external-providers-list list-unstyled'></ul>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            i.push("<div class='body'>\n<div class='scrollable'>\n<div class='request-details'>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                            this.showImage ? (i.push("" + e(this.renderPartial("templates/place_updates/image", {
                                    image: this.image
                                }))),
                                this.image && i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "picture_added_on_title",
                                    hideUserDetails: !this.showAddingUser,
                                    dateAdded: this.image.get("date"),
                                    createdBy: this.image.get("creatorUserId")
                                })))) : i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "added_on_title",
                                hideUserDetails: !this.showAddingUser,
                                dateAdded: this.venue.attributes.createdOn
                            }))),
                            i.push("</div>\n<div class='changes'>\n<div class='small'>" + t(e(I18n.t("venues.update_requests.panel.flag_reason"))) + "</div>\n<h3>" + t(e(this.t("venues.update_requests.flags." + this.model.get("type")))) + "</h3>"),
                            this.showComment && i.push("<div class='flag-comment'>" + t(e(this.model.get("comment"))) + "</div>"),
                            i.push("</div>"),
                            this.showDuplicateVenue && (i.push("<div class='duplicate request-details'>"),
                                i.push("" + e(this.renderPartial("templates/place_updates/place_details", _.defaults({
                                    venue: this.model.getDuplicateVenue()
                                }, this)))),
                                i.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                    type: "added_on_title",
                                    hideUserDetails: !0,
                                    dateAdded: this.model.getDuplicateVenue().attributes.createdOn
                                }))),
                                i.push("</div>")),
                            i.push("</div>"),
                            i.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(78).SIZE,
                            this.image ? n.push("<a>\n<img class='image-preview' src='" + t(e(this.image.getUrl(s.MOBILE))) + "' data-image-id='" + t(e(this.image.id)) + "'>\n</a>") : n.push("<div class='missing-image'></div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-dialog venue-image-dialog'>\n<div class='modal-content'>\n<div class='modal-header'>\n<a class='close' data-dismiss='modal' type='button'>×</a>\n<div class='venue-name'>" + t(e(this.h.formatVenueName(this.venueName))) + "</div>\n</div>\n<div class='modal-body'>\n<img src='" + t(e(this.imageUrl)) + "'>\n<div class='details'>\n<div class='date small'>" + e(this.safe_t("venues.images.added_on", {
                                added_on_title: this.h.contentTag("strong", this.t("venues.images.added_on_title")),
                                date: I18n.l("date.formats.long", this.dateAdded)
                            })) + "</div>"),
                            this.addingUserId && i.push("<div class='small user'>" + e(this.safe_t("venues.images.added_by", {
                                added_by_title: this.h.contentTag("strong", this.t("venues.images.added_by_title")),
                                username: this.h.userProfile(this.addingUserId)
                            })) + "</div>"),
                            i.push("</div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("" + e(this.renderPartial("templates/place_updates/panel_header", this))),
                            t.push("<div class='body'>\n<div class='scrollable'>"),
                            this.hidePlaceDetails || (t.push("<div class='request-details'>"),
                                t.push("" + e(this.renderPartial("templates/place_updates/place_details", this))),
                                t.push("</div>")),
                            t.push("<div class='changes'>"),
                            t.push("" + e(this.renderPartial(this.getChangesTemplate(), this))),
                            t.push("</div>\n</div>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/actions", this))),
                            t.push("</div>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='place-update'></div>\n<div class='navigation'>"),
                            this.showNextButton ? (i.push("<button class='" + ["btn", "btn-default", "btn-block", "next", "" + t(e(this.nextButtonClass))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                                i.push("" + t(e(this.nextButtonString))),
                                i.push("</button>")) : this.showNextVenueButton ? (i.push("<button class='btn btn-block btn-primary next-venue'>"),
                                i.push("" + t(e(this.t("venues.update_requests.panel.next_venue")))),
                                i.push("</button>")) : (i.push("<button class='btn btn-block btn-primary done'>"),
                                i.push("" + t(e(this.t("venues.update_requests.panel.done")))),
                                i.push("</button>")),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='header'>"),
                            i.push("" + t(e(this.getTitle()))),
                            i.push("<a class='close-panel'>×</a>\n<a class='focus'>\n<i class='fa fa-crosshairs'></i>\n</a>"),
                            this.showDebug && i.push("<div class='id'>" + t(e(this.t("edit.id", {
                                num: this.h.formatVenueUpdateRequestId(this.model.id)
                            }))) + "</div>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='place-details'>"),
                            this.shouldShowName() && i.push("<h3 class='name'>" + t(e(this.h.formatVenueName(this.venue.attributes.name))) + "</h3>"),
                            i.push("<div class='address'>" + t(e(this.h.formatAddress(this.venue.getAddress()))) + "</div>\n<div class='categories small'>" + t(e(this.h.formatVenueCategories(this.venue.attributes.categories))) + "</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<ul class='changed-fields list-unstyled'></ul>"),
                            t.push("" + e(this.renderPartial("templates/place_updates/add_details", {
                                type: "suggested_on_title",
                                dateAdded: this.model.get("dateAdded"),
                                createdBy: this.model.get("createdBy")
                            }))),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='side-panel-section'>\n<h4>" + t(e(this.t("user.prefs.subtitle"))) + "</h4>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.two_way"), "twoWayRoad", "on"))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.turns_allowed"), "turnsAllowed", "on"))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.h.checkbox(this.t("user.prefs.require_deselect"), "requireDeselect", "on"))),
                            i.push("</div>\n</div>\n<div class='form-group'>\n<div class='controls'>\n<label class='control-label'>" + t(e(this.t("user.prefs.units.title"))) + "</label>\n<div class='btn-group' data-toggle='buttons' data-type='boolean'>\n<label class='btn btn-default'>\n<input class='units-check' type='radio' name='units-radio' value='true'>"),
                            i.push("" + t(e(this.t("user.prefs.units.imperial")))),
                            i.push("</label>\n<label class='btn btn-default'>\n<input class='units-check' type='radio' name='units-radio' value='false'>"),
                            i.push("" + t(e(this.t("user.prefs.units.metric")))),
                            i.push("</label>\n</div>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("envs.title")))),
                            i.push("</label>\n<div class='controls' id='env-select'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>"),
                            i.push("" + t(e(this.t("user.prefs.language")))),
                            i.push("</label>\n<select class='form-control language-select'>"),
                            o = I18n.availableLocales,
                            n = 0,
                            r = o.length; n < r; n++)
                            s = o[n],
                            i.push("<option value='" + t(e(s)) + "' selected='" + t(e(s === I18n.currentLocale())) + "'>"),
                            i.push("" + t(e(I18n.languageNames["" + s]))),
                            i.push("</option>");
                        return i.push("</select>\n</div>\n</form>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            var e = {}.hasOwnProperty;
            return function(t) {
                return function() {
                        var t, n, s, r, o, a, l, u, d, c, h, p, f, g, m, v, _, y, b, E, w, S, M, C, T, A;
                        if (n = this.__htmlEscape,
                            t = this.__cleanValue,
                            s = [],
                            r = i(62).CITY_NAME_PATTERN,
                            s.push("<div class='clearfix preview'>\n<div class='address-edit-btn'>\n<h3 class='primary-street'>"),
                            null != this.addressDetails ? s.push("" + n(t(this.addressDetails.streetName + ", " + this.addressDetails.cityName + (this.addressDetails.hasState ? ", " + this.addressDetails.stateName : ", " + this.addressDetails.countryName)))) : s.push("" + n(t(this.t("segment.address.none")))),
                            s.push("<span class='address-edit-icon'>\n<i class='fa fa-pencil'></i>\n</span>\n</h3>\n</div>"),
                            null != this.address.altStreets && this.address.altStreets.length > 0) {
                            for (s.push("<ul class='alt-street-list list-unstyled'>"),
                                c = this.address.altStreets,
                                u = 0,
                                d = c.length; u < d; u++)
                                o = c[u],
                                s.push("<li class='alt-street'>"),
                                s.push("" + n(t(o.street.name + ", " + (o.city.isEmpty() ? this.t("edit.address.no_city") : o.city.attributes.name)))),
                                s.push("</li>");
                            s.push("</ul>")
                        }
                        if (s.push("</div>\n<form class='address-form clearfix inner-form'>"),
                            s.push("" + t(this.renderPartial("templates/chrome_autofill_off"))),
                            s.push("<div class='primary-street'>\n<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                            s.push("" + n(t(this.t("edit.address.street")))),
                            s.push("<div class='controls-container in-label toggle-empty'>\n<input id='emptyStreet' type='checkbox' name='emptyStreet' checked='" + n(t(!!(null != (h = this.address.street) ? h.isEmpty : void 0))) + "' disabled='" + n(t(this.disableEmptyStreet)) + "'>\n<label for='emptyStreet'>" + n(t(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls input-group'>\n<input class='form-control streetName' autocomplete='off' type='text' name='streetName' title='Street name' maxlength='100' value='" + n(t(null != (_ = this.address.street) ? _.name : void 0)) + "' required='" + n(t(!(null != (y = this.address.street) ? y.isEmpty : void 0))) + "' disabled='" + n(t(!!(null != (b = this.address.street) ? b.isEmpty : void 0))) + "'>\n<span class='input-group-btn tts-playback-region'></span>\n</div>\n</div>\n<div class='form-group toggleable-input'>\n<label class='control-label'>"),
                            s.push("" + n(t(this.t("edit.address.city")))),
                            s.push("<div class='controls-container in-label toggle-empty'>\n<input id='emptyCity' type='checkbox' name='emptyCity' checked='" + n(t(!!(null != (E = this.address.city) ? E.isEmpty() : void 0))) + "'>\n<label for='emptyCity'>" + n(t(this.t("edit.address.none"))) + "</label>\n</div>\n</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='cityName' title='City name' type='text' value='" + n(t(null != (w = this.address.city) && null != (S = w.attributes) ? S.name : void 0)) + "' pattern='" + n(t(r)) + "' required='" + n(t(!(null != (M = this.address.city) ? M.isEmpty() : void 0))) + "' disabled='" + n(t(!!(null != (C = this.address.city) ? C.isEmpty() : void 0))) + "'>\n</div>\n</div>"),
                            this.hasStates) {
                            s.push("<div class='form-group'>\n<label class='control-label'>" + n(t(this.t("edit.address.state"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='stateID' required>"),
                                this.segment.mixed.state && s.push("<option value=''></option>"),
                                p = this.dataModel.states.objects;
                            for (A in p)
                                e.call(p, A) && (T = p[A],
                                    s.push("" + t(this.h.option(T.name, A, null != (f = this.address.state) ? f.id : void 0))));
                            s.push("</select>\n</div>\n</div>")
                        } else
                            s.push("<input class='form-control' name='stateID' type='hidden' value='" + n(t(null != (g = this.address.state) ? g.id : void 0)) + "'>");
                        s.push("<div class='form-group'>\n<label class='control-label'>" + n(t(this.t("edit.address.country"))) + "</label>\n<div class='controls'>\n<select class='form-control' name='countryID' required>"),
                            this.segment.mixed.country && s.push("<option value=''></option>"),
                            m = this.dataModel.countries.objects;
                        for (l in m)
                            e.call(m, l) && (a = m[l],
                                s.push("" + t(this.h.option(a.name, l, null != (v = this.address.country) ? v.id : void 0))));
                        return s.push("</select>\n</div>\n</div>\n</div>\n<div class='alt-street-controls'></div>\n<div class='action-buttons'>\n<button class='address-edit-cancel btn btn-default cancel-button' type='button'>" + n(t(this.t("edit.cancel"))) + "</button>\n<button class='btn btn-primary save-button' type='submit'>\n<span class='loading not-shown'>\n<i class='fa fa-spin fa-spinner'></i>\n</span>"),
                            s.push("" + n(t(this.t("edit.apply")))),
                            s.push("</button>\n</div>\n</form>"),
                            s.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(t)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a, l, u, d;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.address.anyStreet || this.address.altStreets.length > 0) {
                            for (i.push("<table class='add-alt-street-form'>\n<tr>\n<th class='city'>" + t(e(this.t("edit.address.city"))) + "</th>\n<th>" + t(e(this.t("edit.address.street"))) + "</th>\n<th class='delete-buttons'></th>\n</tr>"),
                                o = this.address.altStreets,
                                s = 0,
                                r = o.length; s < r; s++)
                                n = o[s],
                                i.push("<tr class='alt-street' data-id='" + t(e(n.street.id)) + "'>\n<td>" + t(e(n.city.isEmpty() ? this.t("edit.address.none") : n.city.attributes.name)) + "</td>\n<td>" + t(e(n.street.name)) + "</td>\n<td>\n<a class='alt-street-delete' href='#'>\n<i class='fa fa-times-circle'></i>\n</a>\n</td>\n</tr>");
                            i.push("<tr class='alt-street-form-template new-alt-street'>\n<td>"),
                                i.push("" + e(this.renderPartial("templates/chrome_autofill_off"))),
                                this.isHighway ? (i.push("<div class='toggleable-input'>\n<label>\n<input class='form-control' autocomplete='off' disabled maxlength='100' name='cityName' title='City name' type='text'>\n</label>\n<div class='controls-container'>\n<input id='alt-city' checked name='emptyCity' type='checkbox'>\n<label class='checkbox' for='alt-city'>"),
                                    i.push("" + t(e(this.t("edit.address.none")))),
                                    i.push("</label>\n</div>\n</div>")) : (i.push("<div class='toggleable-input'>\n<label>\n<input class='form-control' type='text' autocomplete='off' name='cityName' title='City name' maxlength='100' required='" + t(e(!(null != (a = this.address.city) ? a.isEmpty() : void 0))) + "' disabled='" + t(e(null != (l = this.address.city) ? l.isEmpty() : void 0)) + "' value='" + t(e(null != (u = this.address.city) && null != (d = u.attributes) ? d.name : void 0)) + "'>\n</label>\n<div class='controls-container'>\n<input id='alt-city' type='checkbox' name='emptyCity' checked='" + t(e(this.address.city.isEmpty())) + "'>\n<label for='alt-city'>"),
                                    i.push("" + t(e(this.t("edit.address.none")))),
                                    i.push("</label>\n</div>\n</div>")),
                                i.push("</td>\n<td>\n<label>\n<input class='form-control' autocomplete='off' maxlength='100' name='streetName' required='' title='Street name' type='text'>\n</label>\n</td>\n<td>\n<a class='alt-street-delete' href='#'>\n<i class='fa fa-times-circle'></i>\n</a>\n</td>\n</tr>\n<div class='alt-streets-actions'>\n<a class='add-alt-street-btn' href='#'>" + t(e(this.t("edit.segment.actions.add_alt_street"))) + "</a>\n</div>\n</table>")
                        }
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<label class='control-label'>" + t(e(this.t("edit.segment.fields.average_speed_camera"))) + "</label>\n<div class='controls'>\n<div class='controls-container'>"),
                            (this.segment.mixed.fwdDirection || this.segment.attributes.fwdDirection) && i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "fwdSpeedCamera"
                            }))),
                            i.push("</div>\n<div class='controls-container'>"),
                            (this.segment.mixed.revDirection || this.segment.attributes.revDirection) && i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "revSpeedCamera"
                            }))),
                            i.push("</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a, l, u, d, c, h, p, f, g, m, v, _, y, b, E, w, S, M, C;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='segment'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.segment.title", {
                                count: this.numSegments
                            }))) + "</span>\n</div>"),
                            this.view.consistentDirection || (i.push("<div class='direction-message'>\n<i class='fa fa-info-circle'></i>"),
                                i.push("" + t(e(this.t("edit.segment.op_direction")))),
                                i.push("</div>")),
                            i.push("<div class='address-edit address-edit-view clearfix'></div>"),
                            this.editable || (i.push("<div class='segment-details'>"),
                                this.editingMultiple ? (i.push("<span class='error'>" + t(e(this.t("edit.segment.permissions.multiple.title"))) + "</span>"),
                                    i.push("" + t(e(this.t("edit.segment.permissions.multiple.description"))))) : this.segment.hasClosures() ? (i.push("<span class='error'>" + t(e(this.t("edit.segment.permissions.has_closures.title"))) + "</span>"),
                                    i.push("" + t(e(this.t("edit.segment.permissions.has_closures.description"))))) : this.isLockedForUser ? (i.push("<span class='error'>" + t(e(this.t("edit.segment.permissions.locked.title"))) + "</span>"),
                                    i.push("" + t(e(this.t("edit.segment.permissions.locked.description", {
                                        lockLevel: this.h.formatRank(this.segment.getLockRank())
                                    }))))) : this.isInBigJunction ? (i.push("<span class='error'>" + t(e(this.t("edit.segment.permissions.big_junction.title"))) + "</span>"),
                                    i.push("" + t(e(this.t("edit.segment.permissions.big_junction.description"))))) : (i.push("<span class='error'>" + t(e(this.t("edit.segment.permissions.area.title"))) + "</span>"),
                                    i.push("" + t(e(this.t("edit.segment.permissions.area.description"))))),
                                i.push("</div>")),
                            i.push("<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#segment-edit-general'>" + t(e(this.t("edit.segment.tabs.general"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#segment-edit-closures'>" + t(e(this.t("edit.segment.tabs.closures"))) + "</a>\n</li>\n</ul>\n<div class='tab-content'>\n<div class='active tab-pane' id='segment-edit-general'>\n<form class='attributes-form side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.road_type"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='roadType'>\n<option value='' selected='" + t(e(this.segment.mixed.roadType)) + "'>" + t(e(this.segment.mixed.roadType ? this.t("edit.multiple_values") : void 0)) + "</option>\n<optgroup label='" + t(e(this.t("segment.categories.highways"))) + "'>"),
                            m = this.segment.HIGHWAY_ROAD_TYPES,
                            s = 0,
                            l = m.length; s < l; s++)
                            M = m[s],
                            i.push("" + e(this.h.roadTypeOption(this.segment, M)));
                        for (i.push("</optgroup>\n<optgroup label='" + t(e(this.t("segment.categories.streets"))) + "'>"),
                            i.push("" + e(this.h.roadTypeOption(this.segment, 2))),
                            i.push("" + e(this.h.roadTypeOption(this.segment, 1))),
                            i.push("</optgroup>\n<optgroup label='" + t(e(this.t("segment.categories.other_drivable"))) + "'>"),
                            i.push("" + e(this.h.roadTypeOption(this.segment, 8))),
                            i.push("" + e(this.h.roadTypeOption(this.segment, 20))),
                            i.push("" + e(this.h.roadTypeOption(this.segment, 17))),
                            i.push("" + e(this.h.roadTypeOption(this.segment, 15))),
                            i.push("</optgroup>\n<optgroup label='" + t(e(this.t("segment.categories.non_drivable"))) + "'>"),
                            v = this.segment.NON_DRIVABLE_ROAD_TYPES,
                            r = 0,
                            u = v.length; r < u; r++)
                            M = v[r],
                            i.push("" + e(this.h.roadTypeOption(this.segment, M)));
                        for (i.push("</optgroup>\n</select>"),
                            this.view.shouldShowRoutingRoadTypeMessage() && i.push("<div class='hint'>" + e(this.view.getRoutingRoadTypeMessage()) + "</div>"),
                            i.push("<div class='controls-container'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "unpaved"
                            }))),
                            i.push("</div>\n<div class='controls-container'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "tunnel"
                            }))),
                            i.push("</div>"),
                            this.allowHeadlightsReminder && (i.push("<div class='controls-container'>"),
                                i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                    segment: this.segment,
                                    attribute: "headlights"
                                }))),
                                i.push("</div>")),
                            i.push("<div class='controls-container'>"),
                            i.push("" + e(this.renderPartial("templates/segment/flag-attribute", {
                                segment: this.segment,
                                attribute: "nearbyHOV"
                            }))),
                            i.push("<i class='waze-tooltip' data-toggle='tooltip' data-placement='bottom' title='" + t(e(this.t("edit.segment.tooltips.nearbyHOV"))) + "'></i>\n</div>\n</div>\n</div>"),
                            this.view.shouldShowRoutingSelect() && i.push("" + e(this.renderPartial("templates/segment/routing", this))),
                            this.segment.isTollRoad() && i.push("<div class='form-group'>\n<i class='waze-tooltip'></i>\n<span>" + t(e(this.t("edit.segment.fields.toll"))) + "</span>\n</div>"),
                            this.view.shouldAllowRestrictionEditing() && (i.push("<div class='form-group'>\n<button class='action-button btn btn-lightning btn-positive edit-restrictions'>"),
                                S = this.hasRestrictions && !this.editingMultiple ? "(" + this.segment.getRestrictionCount() + ")" : "",
                                this.segment.arePropertiesEditable() ? this.editingMultiple || this.hasRestrictions ? (i.push("" + t(e(this.t("edit.segment.actions.restrictions.edit")))),
                                    i.push("" + t(e(S)))) : i.push("" + t(e(this.t("edit.segment.actions.restrictions.add")))) : (i.push("" + t(e(this.t("edit.segment.actions.restrictions.view")))),
                                    i.push("" + t(e(S)))),
                                i.push("</button>\n</div>")),
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.direction"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='direction' data-refresh>"),
                            this.segment.mixed.direction && i.push("<option value='-1'>" + t(e(this.t("edit.multiple_values"))) + "</option>"),
                            i.push("" + e(this.h.directionOption(this.segment, 3))),
                            i.push("" + e(this.h.directionOption(this.segment, 1))),
                            i.push("" + e(this.h.directionOption(this.segment, 2))), !this.segment.mixed.allowNoDirection && this.segment.attributes.allowNoDirection && i.push("" + e(this.h.directionOption(this.segment, 0))),
                            i.push("</select>\n</div>\n</div>"),
                            this.allowAverageSpeedCameras && (i.push("<div class='form-group'>"),
                                i.push("" + e(this.renderPartial("templates/segment/average-speed-camera", {
                                    segment: this.segment
                                }))),
                                i.push("</div>")),
                            this.segment.isDrivable() && this.allowSpeedLimit && (i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.speed_limit"))) + "</label>\n<div class='clearfix controls speed-limit'>"),
                                (this.segment.mixed.fwdDirection || this.segment.attributes.fwdDirection) && (n = "fwdMaxSpeed",
                                    i.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                        segment: this.segment,
                                        value: this.view.getSpeedLimitValue(n),
                                        unverifiedAttribute: "fwdMaxSpeedUnverified",
                                        attribute: n
                                    })))),
                                (this.segment.mixed.revDirection || this.segment.attributes.revDirection) && (n = "revMaxSpeed",
                                    i.push("" + e(this.renderPartial("templates/segment/speed-limit", {
                                        segment: this.segment,
                                        value: this.view.getSpeedLimitValue(n),
                                        unverifiedAttribute: "revMaxSpeedUnverified",
                                        attribute: n
                                    })))),
                                i.push("</div>\n</div>")),
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.level"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='level'>\n<option value=''>" + t(e(this.segment.mixed.level ? this.t("edit.multiple_values") : void 0)) + "</option>"),
                            h = o = _ = this.segment.MaxLevel,
                            y = this.segment.MinLevel; _ <= y ? o <= y : o >= y; h = _ <= y ? ++o : --o)
                            i.push("" + e(this.h.option(this.t("edit.segment.levels")[h] || h, h, this.segment.attributes.level)));
                        if (i.push("</select>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.lock"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' data-nullable='" + t(e(!0)) + "' name='lockRank'>"),
                            this.segment.mixed.lockRank && i.push("<option value='' data-mixed-indicator='" + t(e(!0)) + "'>" + t(e(this.t("edit.multiple_values"))) + "</option>"),
                            this.editable)
                            for (i.push("" + e(this.h.segmentRankOption(this.segment, null, this.allowDefaultRank))),
                                g = a = 0,
                                b = this.userRank; 0 <= b ? a <= b : a >= b; g = 0 <= b ? ++a : --a)
                                i.push("" + e(this.h.segmentRankOption(this.segment, g)));
                        else
                            i.push("" + e(this.h.segmentRankOption(this.segment, this.segment.attributes.lockRank)));
                        if (i.push("</select>\n</div>\n</div>\n<div class='form-group more-actions'>"),
                            this.isInRoundabout && (i.push("<button class='action-button btn btn-default btn-positive select-entire-roundabout'>"),
                                i.push("" + t(e(this.t("edit.segment.actions.select_entire_roundabout")))),
                                i.push("</button>")),
                            this.segment.mixed.street || !this.address.street || this.address.street.isEmpty || (i.push("<button class='action-button btn btn-default btn-positive select-entire-street'>"),
                                i.push("" + t(e(this.t("edit.segment.actions.select_entire_street")))),
                                i.push("</button>"),
                                this.showHouseNumbersButton && (i.push("<button class='action-button btn btn-positive btn-success edit-house-numbers' disabled='" + t(e(this.disableHouseNumbersButton)) + "'>"),
                                    this.segment.canEditHouseNumbers() ? i.push("" + t(e(this.t("edit.segment.actions.edit_house_numbers")))) : i.push("" + t(e(this.t("edit.segment.actions.view_house_numbers")))),
                                    i.push("</button>"),
                                    this.disableHouseNumbersButton && i.push("<p>Save your changes to edit house numbers</p>"))),
                            i.push("</div>\n</form>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            null != this.segment.attributes.length && i.push("<li>\n<span class='name'>" + t(e(this.t("edit.segment.fields.length") + ":")) + "</span>\n<span class='value'>" + t(e(this.h.lengthString(this.segment.attributes.length))) + "</span>\n</li>"),
                            null != this.segment.attributes.updatedOn)
                            if (this.editingMultiple)
                                if (this.segment.mixed.updatedBy) {
                                    for (i.push("<li>"),
                                        i.push("" + t(e(this.t("edit.segment.fields.updated_by") + ":"))),
                                        i.push("<ul class='list-unstyled updated-by-list'>"),
                                        E = this.segment.attributes.updatedBy,
                                        p = 0,
                                        d = E.length; p < d; p++)
                                        C = E[p],
                                        i.push("<li>" + e(this.h.userProfile(C)) + "\n&lrm;\n</li>");
                                    i.push("</ul>\n</li>")
                                } else
                                    i.push("<li>\n<span class='name'>" + t(e(this.t("edit.segment.fields.updated_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.segment.attributes.updatedBy)) + "</span>\n</li>");
                        else
                            i.push("<li>" + e(this.safe_t("edit.updated", {
                                time: this.h.dateOnlyString(this.segment.attributes.updatedOn),
                                user: this.h.userProfile(this.segment.attributes.updatedBy)
                            })) + "\n&lrm;\n</li>");
                        if (this.editingMultiple)
                            if (this.segment.mixed.createdBy) {
                                for (i.push("<li>"),
                                    i.push("" + t(e(this.t("edit.segment.fields.created_by") + ":"))),
                                    i.push("<ul class='created-by-list list-unstyled'>"),
                                    w = this.segment.attributes.createdBy,
                                    f = 0,
                                    c = w.length; f < c; f++)
                                    C = w[f],
                                    i.push("<li>" + e(this.h.userProfile(C)) + "\n&lrm;\n</li>");
                                i.push("</ul>\n</li>")
                            } else
                                i.push("<li>\n<span>" + t(e(this.t("edit.segment.fields.created_by") + ":")) + "</span>\n<span class='value'>" + e(this.h.userProfile(this.segment.attributes.createdBy)) + "</span>\n</li>");
                        else
                            null != this.segment.attributes.createdBy && i.push("<li>" + e(this.safe_t("edit.created", {
                                time: this.h.dateOnlyString(this.segment.attributes.createdOn),
                                user: this.h.userProfile(this.segment.attributes.createdBy)
                            })) + "\n&lrm;\n</li>");
                        return i.push("<li>" + t(e(this.t("edit.id", {
                                num: this.segmentId
                            }))) + "</li>\n</ul>\n<div class='element-history-region'></div>\n</div>\n<div class='tab-pane' id='segment-edit-closures'>\n<div class='closures'></div>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            s = this.attribute + "Checkbox",
                            r = !!this.segment.mixed[this.attribute],
                            n = this.segment.getFlagAttribute(this.attribute) && !r,
                            i.push("<input id='" + t(e(s)) + "' name='" + t(e(this.attribute)) + "' type='checkbox' checked='" + t(e(n)) + "' mixed='" + t(e(r)) + "'>\n<label for='" + t(e(s)) + "'>"),
                            i.push("" + t(e(this.t("edit.segment.fields." + this.attribute)))),
                            i.push("</label>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.segment.fields.routing"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='routingRoadType' data-nullable>"),
                            this.segment.mixed.routingRoadType && i.push("<option value='' data-mixed-indicator='" + t(e(!0)) + "'>" + t(e(this.t("edit.multiple_values"))) + "</option>"),
                            i.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.prev"), this.routingRoadTypes.prev, this.segment.attributes.routingRoadType, !1, this.prevRouteRankDisabled))),
                            i.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.current"), null, this.segment.attributes.routingRoadType))),
                            i.push("" + e(this.h.option(this.t("edit.segment.routing.road_type.next"), this.routingRoadTypes.next, this.segment.attributes.routingRoadType, !1, this.nextRouteRankDisabled))),
                            i.push("</select>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<label>\n<div class='direction-label'>"),
                            i.push("" + t(e(this.t("edit.segment.speed_limit." + this.attribute)))),
                            i.push("</div>"),
                            this.segment.mixed[this.attribute] && this.t("edit.multiple_values"),
                            i.push("<input class='form-control' type='number' name='" + t(e(this.attribute)) + "' maxlength='4' value='" + t(e(this.value)) + "' data-type='numeric' data-nullable='true' data-units='" + t(e(this.segment.UNITS.speed)) + "'>\n<div class='unit-label'>"),
                            i.push("" + t(e(this.h.speedString()))),
                            i.push("</div>\n</label>"),
                            this.segment.canChangeMaxSpeedUnverified(this.unverifiedAttribute) && (i.push("<div class='controls-container'>\n<input id='" + this.unverifiedAttribute + "Checkbox' type='checkbox' name='" + t(e(this.unverifiedAttribute)) + "' checked='" + t(e(!this.segment.attributes[this.unverifiedAttribute])) + "' mixed='" + t(e(!!this.segment.mixed[this.unverifiedAttribute])) + "'>\n<label for='" + t(e(this.unverifiedAttribute)) + "Checkbox'>"),
                                i.push("" + t(e(this.t("edit.segment.speed_limit.verified")))),
                                i.push("</label>\n</div>")),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<select class='form-control language-select locale-select'>"),
                            o = this.locales,
                            n = 0,
                            s = o.length; n < s; n++)
                            a = o[n],
                            r = a.locale,
                            l = a.tts,
                            i.push("<option value='" + t(e(l)) + "'>" + t(e(I18n.languageNames[r] || r || l)) + "</option>");
                        return i.push("</select>\n<buttton class='btn btn-primary play-button'>" + t(e(this.t("tts.play"))) + "</buttton>\n<a class='report-problem-link' href='" + t(e(W.Config.tts.report_problem_url)) + "' target='_blank'>"),
                            i.push("" + t(e(this.t("tts.report_problem")))),
                            i.push("</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<button class='btn btn-primary tts-button' type='button' disabled='" + t(e(this.isEmpty)) + "'>\n<i class='fa fa-volume-up'></i>\n</button>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div id='session-expired-lightbox'>\n<div class='map-modal-header'>" + t(e(this.t("session.expired.title"))) + "</div>\n<div class='map-modal-body'>\n<p>" + t(e(this.t("session.expired.description"))) + "</p>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='action dropdown env-switcher'>\n<a class='dropdown-toggle' data-toggle='dropdown' href='#'>"),
                            i.push("" + t(e(this.t("envs")[W.location.code]))),
                            i.push("<i class='fa fa-angle-down'></i>\n</a>\n<ul class='dropdown-menu' role='menu'>\n<li>\n<a class='env-link' href='/" + t(e(I18n.locale !== W.Config.default_locale ? I18n.locale + "/" : void 0)) + "editor' data-env='row'>" + t(e(this.t("envs.row"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='/" + t(e(I18n.locale !== W.Config.default_locale ? I18n.locale + "/" : void 0)) + "editor' data-env='usa'>" + t(e(this.t("envs.usa"))) + "</a>\n</li>\n<li>\n<a class='env-link' href='/" + t(e(I18n.locale !== W.Config.default_locale ? I18n.locale + "/" : void 0)) + "editor' data-env='il'>" + t(e(this.t("envs.il"))) + "</a>\n</li>\n</ul>\n</div>\n<div id='snapshot-toggler'></div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='list-unstyled'>\n<li>\n<a href='" + t(e(this.t("internal.wiki_link"))) + "' target='_blank'>" + t(e(this.t("footer.wiki"))) + "</a>\n</li>\n<li>\n<a href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>" + t(e(this.t("footer.forum"))) + "</a>\n</li>\n<li>\n<a href='" + t(e(this.t("internal.status_page_link"))) + "' target='_blank'>" + t(e(this.t("footer.status"))) + "</a>\n</li>\n<li>\n<a href='#keyboard-dialog' data-toggle='modal'>\n<kbd>?</kbd>"),
                            i.push("" + t(e(this.t("footer.keyboard_shortcuts")))),
                            i.push("</a>\n</li>\n</ul>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='overlay'></div>\n<div id='user-info'></div>\n<div id='edit-panel'>\n<div class='contents'></div>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='user-profile'>\n<div class='" + ["level-icon", "level-icon-" + t(e(this.normalizedLevel))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'></div>\n<div class='user-about'>\n<h3>"),
                            i.push("" + t(e(this.userName))),
                            i.push("</h3>\n<a class='logout-link' href='#'>" + t(e(this.t("user.logout"))) + "</a>\n<div class='level'>"),
                            this.isStaff ? i.push("" + e(this.safe_t("user.info.staff_level_name"))) : i.push("" + e(this.safe_t("user.info.level_name", {
                                level: this.normalizedLevel
                            }))),
                            i.push("</div>\n<div class='user-stats'>\n<div class='stat'>"),
                            i.push("" + e(this.t("user.info.points", {
                                points: I18n.toNumber(this.totalPoints, {
                                    precision: 0
                                })
                            }))),
                            i.push("<div class='separator'>/</div>\n</div>\n<div class='stat'>"),
                            i.push("" + e(this.t("user.info.edits", {
                                edits: I18n.toNumber(this.totalEdits, {
                                    precision: 0
                                })
                            }))),
                            i.push("</div>\n<i class='waze-tooltip' id='permissions-info' data-toggle='tooltip'></i>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<section id='user-box'>\n<div id='user-details'></div>\n</section>\n<section id='user-tabs'>\n<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#sidepanel-feed'>" + t(e(this.t("user.feed.title"))) + "\n<span class='fa fa-repeat feed-refresh nav-tab-icon'></span>\n</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-drives'>" + t(e(this.t("user.drives.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-areas'>" + t(e(this.t("user.areas.title"))) + "</a>\n</li>\n<li>\n<a data-toggle='tab' href='#sidepanel-prefs'>\n<span class='fa fa-gear'></span>\n</a>\n</li>\n</ul>\n</section>\n<div class='tab-content'>\n<div class='active tab-pane' id='sidepanel-feed'></div>\n<div class='tab-pane' id='sidepanel-drives'>\n<div class='loading-animation'></div>\n<div class='error hide'>"),
                            i.push("" + t(e(this.t("user.drives.error")))),
                            i.push("</div>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-areas'>\n<div class='result-list-container'></div>\n<div class='pagination'></div>\n</div>\n<div class='tab-pane' id='sidepanel-prefs'></div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(74).UNIT,
                            W.Config.user_editing_enabled ? (n.push("" + t(e(this.t("user.info.edit_area.title", {
                                    distance: this.h.lengthString(this.editableMiles, {
                                        units: s.MILE,
                                        translationKey: "user.info.edit_area"
                                    })
                                })))),
                                this.isCountryManager() ? n.push("" + t(e(this.t("user.info.country_manager")))) : this.isAreaManager && n.push("" + t(e(this.t("user.info.area_manager"))))) : n.push("" + e(this.safe_t("user.info.editing_restricted", {
                                forum_link: this.h.link(this.t("user.info.forum"), this.t("internal.ur_forum_link"))
                            }))),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<h2>"),
                            i.push("" + e(this.safe_t("login.greeting", {
                                stranger: this.h.contentTag("strong", this.t("login.stranger"))
                            }))),
                            i.push("</h2>\n<div class='sandbox'>"),
                            i.push("" + t(e(this.t("play_mode.sidebar.subtitle")))),
                            i.push("<br>"),
                            i.push("" + t(e(this.t("play_mode.sidebar.description")))),
                            i.push("<br>"),
                            i.push("" + t(e(this.t("play_mode.sidebar.login")))),
                            i.push("<br>\n<a href='/forgot_password' target='_blank'>" + t(e(this.t("play_mode.sidebar.help"))) + "</a>\n<div class='links'>\n<a class='btn btn-default tutorial' data-toggle='modal' href='#tutorial-dialog'>\n<div class='title'>" + t(e(this.t("welcome.tutorial.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.tutorial.description"))) + "</div>\n</a>\n<a class='btn btn-default wiki' href='http://www.waze.com/wiki/index.php/Map_Editing_-_select_map_editor' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.wiki.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.wiki.description"))) + "</div>\n</a>\n<a class='btn btn-default forum' href='" + t(e(this.t("internal.editing_forum_link"))) + "' target='_blank'>\n<div class='title'>" + t(e(this.t("welcome.forum.title"))) + "</div>\n<div class='description'>" + t(e(this.t("welcome.forum.description"))) + "</div>\n</a>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='snapshot-message'>\nSnapshot mode - editing is disabled\n<a class='return-to-edit-mode'>Return to edit mode</a>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            this.isOn ? i.push("<a class='toggler'>Exit Snapshot mode</a>") : i.push("<a class='toggler' disabled='" + t(e(!this.canToggleOn)) + "'>Enter Snapshot mode</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e;
                        return e = [],
                            e.push("<div class='snapshot-message'>\nSnapshot mode - editing is disabled\n<a class='return-to-edit-mode'>Return to edit mode</a>\n</div>"),
                            e.join("\n").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            n.push("<div class='clearfix hidable-message' id='show-tutorial-lightbox'>\n<div class='fa fa-times-circle hide-message' data-hide-message='tips/watch-tutorial'></div>\n<a data-toggle='modal' href='#tutorial-dialog'>\n<img src='" + t(e(i(636))) + "'>"),
                            n.push("" + t(e(this.t("tutorial.title")))),
                            n.push("</a>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = i.p + "img/video-notext00f564d3d1e7b4eaa9f30c473da6a09f.png"
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='modal-dialog'>\n<div class='modal-content'>\n<div class='clearfix modal-body'>\n<div class='header'>" + t(e(this.t("tutorial.header"))) + "</div>\n<ul class='video-menu' style='display: none;'>"),
                            r = 0,
                            o = this.videos,
                            n = 0,
                            s = o.length; n < s; n++)
                            a = o[n],
                            r++,
                            i.push("<li class='video-link' data-video-key='" + t(e(a)) + "'>\n<div class='number'>" + t(e(r)) + "</div>\n<div class='text'>" + t(e(this.t("tutorial.videos." + a + ".title"))) + "</div>\n</li>");
                        return i.push("</ul>\n<div id='tutorial-player'></div>\n<a class='dialog-close-button' href='#'></a>\n</div>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<h2>" + e(this.safe_t("user.info.greeting", {
                                username: this.h.contentTag("strong", this.userName)
                            })) + "</h2>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            o = W.Config.week_days_order,
                            s = 0,
                            r = o.length; s < r; s++)
                            n = o[s],
                            i.push("<label class='checkbox-inline'>\n<input type='checkbox' name='days' value='" + t(e(n)) + "' checked='" + t(e(this.cb(n))) + "'>"),
                            i.push("" + t(e(this.t("date.abbr_day_names")[n]))),
                            i.push("</label>");
                        return i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='toggle'>\n<a class='select-all' href='#'>" + t(e(this.t("edit.select.all"))) + "</a>\n/\n<a class='select-none' href='#'>" + t(e(this.t("edit.select.none"))) + "</a>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<input class='alias-name form-control' type='text' value='" + t(e(this.name)) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='list list-unstyled'></ul>\n<a class='" + ["add", "" + t(e(this.hideAddButton ? "hidden" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' href='#'>"),
                            i.push("" + t(e(this.t("edit.landmark.aliases.add")))),
                            i.push("</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='category' data-category='" + t(e(this.category)) + "'>"),
                            i.push("" + t(e(this.t("venues.categories." + this.category)))),
                            this.hideClose || i.push("<a class='remove-choice select2-search-choice-close' href='#'>\n<i class='fa fa-remove'></i>\n</a>"),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<input class='uuid' value='" + t(e(this.uuid)) + "' type='hidden' placeholder='" + t(e(this.t("edit.landmark.external_providers.search"))) + "'>\n<a class='delete'>\n<i class='fa fa-times-circle'></i>\n</a>\n<a class='url' href='" + t(e(this.url)) + "' target='_blank'>\n<i class='fa fa-link'></i>\n</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<ul class='list list-unstyled'></ul>\n<a class='add' href='#'>"),
                            i.push("" + t(e(this.t("edit.landmark.external_providers.add")))),
                            i.push("</a>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r;
                        for (e = this.__cleanValue,
                            t = [],
                            t.push("<ul class='clearfix list-unstyled'>"),
                            r = this.view.getSuggestedCategories(),
                            n = 0,
                            s = r.length; n < s; n++)
                            i = r[n],
                            this.categoryMap[i] || (t.push("<li class='select2-search-choice suggested-category'>"),
                                t.push("" + e(this.renderPartial("templates/venue/category-tag", {
                                    category: i,
                                    hideClose: !0
                                }))),
                                t.push("</li>"));
                        return t.push("</ul>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<input name='categories' data-placeholder='" + t(e(this.t("edit.landmark.select_categories"))) + "' type='hidden'>\n<div class='suggested-categories'>"),
                            i.push("" + e(this.renderPartial("templates/venue/suggested-categories", this))),
                            i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o, a, l, u, d, c;
                        if (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = function(e) {
                                return e.replace(/\n/g, "&#x000A;")
                            },
                            i = [],
                            i.push("<form class='attributes-form side-panel-section'>"), !this.landmark.attributes.residential) {
                            for (i.push("<div class='form-group'>\n<label class='control-label control-label-inline'>" + t(e(this.t("edit.landmark.fields.categories"))) + "</label>\n<i class='categories-tooltip waze-tooltip' data-toggle='tooltip'></i>\n<div class='categories controls'></div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.name"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='name' type='text' value='" + t(e(this.landmark.attributes.name)) + "'>\n<div class='aliases-view'></div>\n</div>\n</div>\n<div class='" + ["form-group", "brand", "" + t(e(this.brands.length ? void 0 : "not-shown"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "'>"),
                                this.landmark.isParkingLot() ? i.push("<label class='control-label'>" + t(e(this.t("edit.landmark.parking.operator"))) + "</label>") : i.push("<label class='control-label'>" + t(e(this.t("edit.landmark.fields.brand"))) + "</label>"),
                                i.push("<div class='controls'>\n<select class='form-control select2style' name='brand'>"),
                                d = this.brands,
                                r = 0,
                                a = d.length; r < a; r++)
                                s = d[r],
                                i.push("" + e(this.h.option(s, s, this.landmark.attributes.brand, !0)));
                            if (i.push("</select>\n</div>"),
                                this.landmark.isParkingLot() && i.push("<a class='add-brand-link' href='" + t(e(this.t("internal.add_operator_form"))) + "' target='_blank'>" + t(e(this.t("edit.landmark.add_operator.text"))) + "</a>"),
                                i.push("</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.description"))) + "</label>\n<div class='controls'>\n<textarea class='form-control' name='description' maxlength='" + t(e(300)) + "'>" + n(t(e(this.landmark.attributes.description))) + "</textarea>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.lock"))) + "</label>\n<div class='controls'>\n<select class='form-control' data-type='numeric' name='lockRank'>"),
                                this.landmark.arePropertiesEditable())
                                for (c = this.lockRankRange,
                                    o = 0,
                                    l = c.length; o < l; o++)
                                    u = c[o],
                                    i.push("" + e(this.h.option(this.h.formatRank(u), u, this.landmark.attributes.lockRank)));
                            else
                                i.push("<option>" + t(e(this.h.formatRank(this.landmark.attributes.lockRank))) + "</option>");
                            i.push("</select>\n</div>\n</div>"),
                                this.canEditType && (i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.type"))) + "</label>\n<div class='controls'>"),
                                    this.landmark.isParkingLot() ? (i.push("<div class='btn btn-block btn-default convert-to-polygon'>"),
                                        i.push("" + t(e(this.t("edit.landmark.type.convert_to_area")))),
                                        i.push("</div>")) : (i.push("<div class='btn-group' data-toggle='buttons'>\n<label class='" + ["btn", "btn-default", "" + t(e(this.landmark.isPoint() ? "active" : void 0))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(this.landmark.isPoint())) + "' value='true'>"),
                                        i.push("" + t(e(this.t("edit.landmark.type.point")))),
                                        i.push("</label>\n<label class='" + ["btn", "btn-default", "" + t(e(this.landmark.isPoint() ? void 0 : "active"))].sort().join(" ").replace(/^\s+|\s+$/g, "") + "' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "'>\n<input type='radio' name='isPoint' checked='" + t(e(!this.landmark.isPoint())) + "' value='false'>"),
                                        i.push("" + t(e(this.t("edit.landmark.type.area")))),
                                        i.push("</label>\n</div>")),
                                    i.push("</div>\n</div>")),
                                this.showExternalProviderView && i.push("<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.external_providers.title"))) + "</label>\n<div class='controls'>\n<div class='external-providers-view'></div>\n</div>\n</div>")
                        }
                        return this.landmark.isParkingLot() || (i.push("<div class='form-group'>\n<div class='controls'>"),
                                this.landmark.attributes.residential ? this.landmark.canConvertToPublic() && (i.push("<button class='btn-link toggle-residential' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "' type='button'>"),
                                    i.push("" + t(e(this.t("edit.landmark.residential.convert_from")))),
                                    i.push("</button>")) : (i.push("<button class='btn-link toggle-residential' disabled='" + t(e(!this.landmark.arePropertiesEditable())) + "' type='button'>"),
                                    i.push("" + t(e(this.t("edit.landmark.residential.convert_to")))),
                                    i.push("</button>")),
                                i.push("</div>\n</div>")),
                            i.push("</form>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i;
                        return t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='sub-section-header'>" + t(e(this.t("edit.landmark.fields.contact"))) + "</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.url"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='url' type='text' value='" + t(e(this.landmark.attributes.url)) + "'>\n</div>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.fields.phone"))) + "</label>\n<div class='controls'>\n<input class='form-control' autocomplete='off' maxlength='100' name='phone' type='tel' value='" + t(e(this.landmark.attributes.phone)) + "'>\n</div>\n</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, o, a, l, u, d, c, h, p, f, g, m, v;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            s = i(79),
                            n.push("<form class='attributes-form'>\n<fieldset class='controls-container'>\n<div class='side-panel-section'>\n<div class='form-group'>\n<template class='hidden parkingType-tooltip-template'>\n<ul class='list-unstyled parkingType-tooltip-content'>"),
                            p = s.PARKING_TYPE,
                            r = 0,
                            u = p.length; r < u; r++)
                            v = p[r],
                            n.push("<li>\n<span class='parkingType-tooltip-header'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + v)))),
                            n.push("</span>\n<span>-</span>\n<span>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.titles.parkingType." + v)))),
                            n.push("</span>\n</li>");
                        for (n.push("</ul>\n</template>\n<label class='control-label control-label-inline'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.fields.parkingType")))),
                            n.push("</label>\n<i class='parkingType-tooltip waze-tooltip'></i>"),
                            f = s.PARKING_TYPE,
                            o = 0,
                            d = f.length; o < d; o++)
                            v = f[o],
                            n.push("<div class='parking-type-option'>\n<input id='parking-type-" + v + "' type='radio' name='parkingType' value='" + t(e(v)) + "'>\n<label for='parking-type-" + t(e(v)) + "'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.types.parkingType." + v)))),
                            n.push("</label>\n</div>");
                        for (n.push("</div>\n<div class='form-group'>\n<label class='control-label control-label-inline'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.fields.hasTBR")))),
                            n.push("</label>\n<i class='hasTBR-tooltip waze-tooltip' title='" + t(e(this.t("edit.landmark.parking.titles.hasTBR"))) + "'></i>\n<input id='has-tbr' type='checkbox' name='hasTBR'>\n<label for='has-tbr'>"),
                            n.push("" + t(e(this.t("edit.landmark.parking.general.yes")))),
                            n.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='opening-hours'></div>\n<div class='controls-container form-group'>\n<input id='can-exit-checkbox' type='checkbox' name='canExitWhileClosed'>\n<label for='can-exit-checkbox'>"),
                            n.push("" + e(this.t("edit.landmark.parking.fields.canExitWhileClosed"))),
                            n.push("</label>\n</div>\n</div>\n<div class='side-panel-section'>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.costType"))) + "</label>\n<select class='form-control' name='costType'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.paymentType"))) + "</label>"),
                            g = s.PAYMENT_TYPE,
                            a = 0,
                            c = g.length; a < c; a++)
                            v = g[a],
                            n.push("<div class='payment-checkbox'>\n<input id='payment-checkbox-" + v + "' type='checkbox' name='paymentType' value='" + t(e(v)) + "'>\n<label for='payment-checkbox-" + t(e(v)) + "'>"),
                            n.push("" + e(this.t("edit.landmark.parking.types.paymentType." + v))),
                            n.push("</label>\n</div>");
                        for (n.push("</div>\n<div class='form-group'>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-services", this))),
                            n.push("</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.estimatedNumberOfSpots"))) + "</label>\n<select class='form-control' name='estimatedNumberOfSpots'></select>\n</div>\n<div class='form-group'>\n<label class='control-label'>" + t(e(this.t("edit.landmark.parking.fields.lotType"))) + "</label>"),
                            m = s.LOT_TYPE,
                            l = 0,
                            h = m.length; l < h; l++)
                            v = m[l],
                            n.push("<div class='lot-checkbox'>\n<input id='lot-checkbox-" + v + "' type='checkbox' name='lotType' value='" + t(e(v)) + "'>\n<label for='lot-checkbox-" + t(e(v)) + "'>"),
                            n.push("" + e(this.t("edit.landmark.parking.types.lotType." + v))),
                            n.push("</label>\n</div>");
                        return n.push("</div>\n</div>\n<div class='side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-contact", this))),
                            n.push("</div>\n</fieldset>\n</form>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, i, n, s, r, o;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            i = [],
                            i.push("<div class='sub-section-header'>" + t(e(this.t("edit.landmark.fields.services"))) + "</div>\n<div class='controls-container form-group'>"),
                            r = this.serviceTypes,
                            n = 0,
                            s = r.length; n < s; n++)
                            o = r[n],
                            i.push("<div class='service-checkbox'>\n<input id='service-checkbox-" + o + "' type='checkbox' name='services' data-multiple='" + t(e(!0)) + "' value='" + t(e(o)) + "' checked='" + t(e(null != this.serviceSet[o])) + "'>\n<label for='service-checkbox-" + t(e(o)) + "'>" + t(e(this.t("venues.services." + o))) + "</label>\n</div>");
                        return i.push("</div>"),
                            i.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t;
                        return e = this.__cleanValue,
                            t = [],
                            t.push("<form class='attributes-form'>"),
                            this.landmark.attributes.residential || t.push("<div class='opening-hours side-panel-section'></div>"),
                            t.push("<div class='side-panel-section'>"),
                            t.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-contact", this))),
                            t.push("</div>\n<div class='side-panel-section'>"),
                            t.push("" + e(this.renderPartial("templates/venue/venue-edit-more-info-services", this))),
                            t.push("</div>\n</form>"),
                            t.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    e.exports = function() {
            return function(e) {
                return function() {
                        var e, t, n, s, r, o, a, l;
                        for (t = this.__htmlEscape,
                            e = this.__cleanValue,
                            n = [],
                            n.push("<div class='landmark'>\n<div class='selection'>\n<span class='text'>" + t(e(this.t("edit.landmark.title"))) + "</span>\n</div>"),
                            this.showUnapprovedAlert ? (n.push("<div class='alert alert-danger header-alert pending-changes-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.unapproved")))),
                                n.push("</div>")) : this.showPendingChangesAlert && (n.push("<div class='alert alert-danger header-alert pending-changes-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.pending")))),
                                n.push("</div>")),
                            this.showAdLockedAlert ? (n.push("<div class='alert alert-danger header-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.ad_locked")))),
                                n.push("</div>")) : this.showRequiresModerationAlert && (n.push("<div class='alert alert-danger header-alert'>"),
                                n.push("" + t(e(this.t("edit.landmark.update_requests.moderation")))),
                                n.push("</div>")),
                            n.push("<ul class='nav nav-tabs'>\n<li class='active'>\n<a data-toggle='tab' href='#landmark-edit-general'>" + t(e(this.t("edit.landmark.tabs.general"))) + "</a>\n</li>"),
                            this.landmark.attributes.residential || n.push("<li>\n<a data-toggle='tab' href='#landmark-edit-more-info'>" + t(e(this.t("edit.landmark.tabs.more_info"))) + "</a>\n</li>"),
                            n.push("<li>\n<a data-toggle='tab' href='#landmark-edit-photos'>"),
                            n.push("" + t(e(this.t("edit.landmark.tabs.photos") + " (" + this.imageCount + ")"))),
                            n.push("</a>\n</li>\n</ul>\n<div class='tab-content'>\n<div class='active tab-pane' id='landmark-edit-general'>"),
                            n.push("" + e(this.renderPartial("templates/venue/venue-edit-general", this))),
                            n.push("<div class='address-edit side-panel-section'></div>\n<ul class='additional-attributes list-unstyled side-panel-section'>"),
                            n.push("" + e(this.renderPartial("templates/add_update_details", this.landmark.attributes))),
                            n.push("<li>" + t(e(this.t("edit.id", {
                                num: this.landmark.getID()
                            }))) + "</li>\n</ul>\n<div class='element-history-region'></div>\n</div>"),
                            this.landmark.attributes.residential || n.push("<div class='more-info tab-pane' id='landmark-edit-more-info'></div>"),
                            n.push("<div class='tab-pane' id='landmark-edit-photos'>\n<div class='image-view'>"),
                            this.hasImages || n.push("<em>" + t(e(this.t("edit.landmark.no_photos"))) + "</em>"),
                            s = i(78).SIZE,
                            l = this.images,
                            r = 0,
                            a = l.length; r < a; r++)
                            o = l[r],
                            n.push("<div class='image-preview-container' data-id='" + t(e(o.id)) + "'>\n<img class='image-preview' src='" + t(e(o.getUrl(s.WEB))) + "'>\n<button class='btn fa fa-remove image-delete-button'></button>\n<button class='btn fa fa-search image-enlarge-button'></button>\n</div>");
                        return n.push("</div>\n</div>\n</div>\n</div>"),
                            n.join("\n").replace(/\s([\w-]+)='true'/gm, " $1").replace(/\s([\w-]+)='false'/gm, "").replace(/\s(?:id|class)=(['"])(\1)/gm, "")
                    }
                    .call(e)
            }
        }
        .call(this)
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(50),
        r = n(s),
        o = i(3),
        a = n(o),
        l = $.Deferred();
    W.Config = i(655),
        W.Config.raster_layers = i(656),
        W.Config.ready = l,
        W.Config.init = function() {
            Waze.Config.deployments && $.extend(!0, Waze.Config, Waze.Config.deployments[W.location.code]),
                Waze.Config.raster_layers.deployments && $.extend(!0, Waze.Config.raster_layers, Waze.Config.raster_layers.deployments[W.location.code]),
                (0,
                    a.default)(Waze.Config.paths).forEach(function(e) {
                    var t = Waze.Config.paths[e];
                    Waze.Config.paths[e] = Waze.Config.api_base + "/" + t
                });
            var e = W.Config.map.projection;
            e.local = new OL.Projection(e.local),
                e.remote = new OL.Projection(e.remote),
                (0,
                    r.default)(W.Config),
                l.resolve()
        }
}, function(e, t) {
    e.exports = {
        default_locale: "en",
        api_base: "/Descartes/app",
        loginPath: "/login/create",
        paths: {
            features: "Features",
            issues: "Feed/Issues",
            notifications: "Feed/Notifications",
            auth: "Session",
            problemDetails: "MapProblems/Details",
            updateRequestSessions: "MapProblems/UpdateRequests",
            updateRequestComments: "MapProblems/UpdateRequests/Comment",
            updateRequestFollow: "MapProblems/UpdateRequests/Notification",
            mapCommentConversation: "MapComments/Comment",
            mapCommentFollow: "MapComments/Notification",
            archive: "Archive/List",
            archiveSessions: "Archive/SessionGPS",
            houseNumbers: "HouseNumbers",
            cityExists: "CityExistence",
            mteDetails: "MajorTrafficEvents/Details",
            mtePublish: "MajorTrafficEvents/Publish",
            mteReady: "MajorTrafficEvents/Ready",
            logger: "ErrorReport",
            elementHistory: "ElementHistory"
        },
        enabled_modules: ["Comments", "Cities"],
        units: {
            lonLatPrecision: 5
        },
        week_days_order: [1, 2, 3, 4, 5, 6, 0],
        reporting: {
            enable: !0
        },
        search: {
            server: "/SearchServer/mozi",
            resultZoom: 3,
            options: {
                origin: "editor"
            }
        },
        places_api: {
            key: "AIzaSyBIfV0EMXrTDjrvD92QX5bBiyFmBbT-W8E",
            url: {
                autocomplete: "/maps/api/place/autocomplete/json",
                details: "/maps/api/place/details/json"
            }
        },
        mte: {
            root_url: "/mte"
        },
        map: {
            initialPosition: {
                il: {
                    lon: 34.789,
                    lat: 32.086,
                    initialZoom: 1
                },
                usa: {
                    lon: -73.99078,
                    lat: 40.73565,
                    initialZoom: 0
                },
                row: {
                    lon: -.119,
                    lat: 51.524,
                    initialZoom: 0
                }
            },
            projection: {
                remote: "EPSG:4326",
                local: "EPSG:900913"
            }
        },
        tts: {
            url: "https://ttsgw.world.waze.com/TTSGateway/Text2SpeechServlet",
            report_problem_url: "https://goo.gl/aAI4mu",
            default_locale: {
                tts: "en-US",
                locale: "en"
            },
            options: {
                version: 6,
                protocol: 2,
                sessionid: 12345654321,
                content_type: "audio/mpeg",
                type: "street",
                validate_data: "positive",
                skipCache: !0,
                lon: 0,
                lat: 0
            }
        },
        chat: {
            enable: !0,
            staffOnly: !1
        },
        segments: {
            allTypes: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],
            minDisplayZoom: 2,
            zoomToRoadType: {
                0: [],
                1: [],
                2: [2, 3, 4, 6, 7, 15],
                3: [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],
                4: -1,
                5: -1,
                6: -1,
                7: -1,
                8: -1,
                9: -1,
                10: -1
            }
        },
        speed_limit: {
            enable: !0
        },
        place_updates: {
            focusZoom: 6
        },
        problems: {
            maxDetailsZoom: 7,
            minDetailsZoom: 5
        },
        houseNumbers: {
            allowEditing: !0,
            minEditZoom: 6
        },
        restrictions: {
            allowEditing: !0
        },
        closures: {
            minDisplayZoom: 0
        },
        cameras: {
            minDisplayZoom: 3,
            minDragZoom: 3
        },
        editable_areas: {
            minDisplayZoom: 0
        },
        user_drive: {
            gutterMinDisplayZoom: 6,
            arrowsMinDisplayZoom: 5,
            instructionsMinDisplayZoom: 5,
            weightMinDisplayZoom: 5,
            initialZoom: 7
        },
        user_editing_enabled: !0,
        big_junctions: {
            minDisplayZoom: 2,
            minRank: 4,
            enable: !0
        },
        venues: {
            enable_point_navigation_point: !0,
            image_bucket_url: "https://venue-image.waze.com/",
            zoomToSize: {
                0: 1,
                1: 2,
                2: 3,
                3: 3,
                4: 3,
                5: 4,
                6: 4,
                7: 4,
                8: 4,
                9: 4,
                10: 4
            },
            categories: ["CAR_SERVICES", "TRANSPORTATION", "PROFESSIONAL_AND_PUBLIC", "SHOPPING_AND_SERVICES", "FOOD_AND_DRINK", "CULTURE_AND_ENTERTAINEMENT", "OTHER", "LODGING", "OUTDOORS", "NATURAL_FEATURES", "PARKING_LOT"],
            subcategories: {
                CAR_SERVICES: ["GAS_STATION", "GARAGE_AUTOMOTIVE_SHOP", "CAR_WASH", "CHARGING_STATION"],
                PARKING_LOT: [],
                TRANSPORTATION: ["AIRPORT", "BUS_STATION", "FERRY_PIER", "SEAPORT_MARINA_HARBOR", "SUBWAY_STATION", "TRAIN_STATION", "BRIDGE", "TUNNEL", "TAXI_STATION", "JUNCTION_INTERCHANGE"],
                PROFESSIONAL_AND_PUBLIC: ["COLLEGE_UNIVERSITY", "SCHOOL", "CONVENTIONS_EVENT_CENTER", "GOVERNMENT", "LIBRARY", "CITY_HALL", "ORGANIZATION_OR_ASSOCIATION", "PRISON_CORRECTIONAL_FACILITY", "COURTHOUSE", "CEMETERY", "FIRE_DEPARTMENT", "POLICE_STATION", "MILITARY", "HOSPITAL_URGENT_CARE", "DOCTOR_CLINIC", "OFFICES", "POST_OFFICE", "RELIGIOUS_CENTER", "KINDERGARDEN", "FACTORY_INDUSTRIAL", "EMBASSY_CONSULATE", "INFORMATION_POINT", "EMERGENCY_SHELTER"],
                SHOPPING_AND_SERVICES: ["ARTS_AND_CRAFTS", "BANK_FINANCIAL", "SPORTING_GOODS", "BOOKSTORE", "PHOTOGRAPHY", "CAR_DEALERSHIP", "FASHION_AND_CLOTHING", "CONVENIENCE_STORE", "PERSONAL_CARE", "DEPARTMENT_STORE", "PHARMACY", "ELECTRONICS", "FLOWERS", "FURNITURE_HOME_STORE", "GIFTS", "GYM_FITNESS", "SWIMMING_POOL", "HARDWARE_STORE", "MARKET", "SUPERMARKET_GROCERY", "JEWELRY", "LAUNDRY_DRY_CLEAN", "SHOPPING_CENTER", "MUSIC_STORE", "PET_STORE_VETERINARIAN_SERVICES", "TOY_STORE", "TRAVEL_AGENCY", "ATM", "CURRENCY_EXCHANGE", "CAR_RENTAL"],
                FOOD_AND_DRINK: ["RESTAURANT", "BAKERY", "DESSERT", "CAFE", "FAST_FOOD", "FOOD_COURT", "BAR", "ICE_CREAM"],
                CULTURE_AND_ENTERTAINEMENT: ["ART_GALLERY", "CASINO", "CLUB", "TOURIST_ATTRACTION_HISTORIC_SITE", "MOVIE_THEATER", "MUSEUM", "MUSIC_VENUE", "PERFORMING_ARTS_VENUE", "GAME_CLUB", "STADIUM_ARENA", "THEME_PARK", "ZOO_AQUARIUM", "RACING_TRACK", "THEATER"],
                OTHER: ["CONSTRUCTION_SITE"],
                LODGING: ["HOTEL", "HOSTEL", "CAMPING_TRAILER_PARK", "COTTAGE_CABIN", "BED_AND_BREAKFAST"],
                OUTDOORS: ["PARK", "PLAYGROUND", "BEACH", "SPORTS_COURT", "GOLF_COURSE", "PLAZA", "PROMENADE", "POOL", "SCENIC_LOOKOUT_VIEWPOINT", "SKI_AREA"],
                NATURAL_FEATURES: ["ISLAND", "SEA_LAKE_POOL", "RIVER_STREAM", "FOREST_GROVE", "FARM", "CANAL", "SWAMP_MARSH", "DAM"]
            }
        },
        marx: {
            server: "https://marx-beta.waze.com:443"
        },
        openlayers: {
            img_path: "images/"
        },
        log: {
            enable: !1
        },
        user_profile: {
            enable: !0,
            url: "https://www.waze.com/user/editor/"
        },
        area_manager_widget: {
            enable: !0
        },
        livemap: {
            zoom_offset: 12,
            max_zoom: 17,
            url: "/livemap"
        },
        advanced_tools: {
            minRank: 3
        },
        deployments: {
            usa: {
                api_base: "/Descartes/app",
                search: {
                    server: "/SearchServer/mozi"
                }
            },
            row: {
                api_base: "/row-Descartes/app",
                search: {
                    server: "/row-SearchServer/mozi"
                }
            },
            il: {
                api_base: "/il-Descartes/app",
                search: {
                    server: "/il-SearchServer/mozi"
                }
            }
        }
    }
}, function(e, t) {
    e.exports = {
        options: {
            alpha: !0,
            buffer: 1,
            tileWidth: 512,
            tileHeight: 512,
            gutter: 15,
            transitionEffect: "resize",
            displayInLayerSwitcher: !0,
            draggable: !1
        },
        wms: {
            servers: ["/wms"],
            file_name: "wme",
            params: {
                projection: "EPSG:900913",
                format: "image/png",
                transparent: !0
            }
        },
        mapnik: {
            servers: [""],
            file_name: "tiles/${z}/${x}/${y}.png"
        },
        roads: {
            uniqueName: "roads",
            visible: !0,
            type: "mapnik",
            options: {
                isBaseLayer: !1,
                zoomOffset: 12,
                draggable: !0,
                gutter: 0
            }
        },
        gps_points: {
            uniqueName: "gps_points",
            visible: !1,
            type: "mapnik",
            options: {
                isBaseLayer: !1,
                zoomOffset: 12,
                opacity: 1,
                draggable: !0,
                gutter: 0
            },
            params: {
                clientLayer: "gps_points"
            }
        },
        deployments: {
            usa: {
                wms: {
                    servers: ["http://etiles5.waze.com/wms", "http://etiles6.waze.com/wms", "http://etiles7.waze.com/wms", "http://etiles8.waze.com/wms"]
                },
                mapnik: {
                    servers: ["https://editor-tiles1.waze.com", "https://editor-tiles2.waze.com", "https://editor-tiles3.waze.com", "https://editor-tiles4.waze.com"]
                }
            },
            row: {
                wms: {
                    servers: ["http://etiles1.waze.com/wms", "http://etiles2.waze.com/wms", "http://etiles3.waze.com/wms", "http://etiles4.waze.com/wms"],
                    file_name: "wme_beta"
                },
                mapnik: {
                    servers: ["https://world-editor-tiles1.waze.com", "https://world-editor-tiles2.waze.com", "https://world-editor-tiles3.waze.com", "https://world-editor-tiles4.waze.com"]
                }
            },
            il: {
                wms: {
                    servers: ["http://etiles1.maps.waze.co.il/wms", "http://etiles2.maps.waze.co.il/wms", "http://etiles3.maps.waze.co.il/wms", "http://etiles4.maps.waze.co.il/wms"]
                },
                mapnik: {
                    servers: ["https://il-editor-tiles1.waze.com", "https://il-editor-tiles2.waze.com", "https://il-editor-tiles3.waze.com", "https://il-editor-tiles4.waze.com"]
                }
            }
        }
    }
}, function(e, t, i) {
    "use strict";
    var n = i(3),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n);
    Object.values = function(e) {
            var t = [];
            for (var i in e)
                e.hasOwnProperty(i) && t.push(e[i]);
            return t
        },
        s.default || (Object.keys = function(e) {
            var t = [];
            for (var i in e)
                e.hasOwnProperty(i) && t.push(i);
            return t
        }),
        Object.forEach = function(e, t, i) {
            for (var n in e)
                e.hasOwnProperty(n) && t.call(i, n, e[n])
        },
        Array.prototype.contains = function(e) {
            return -1 !== this.indexOf(e)
        },
        Array.prototype.isEmpty = function() {
            return 0 === this.length
        },
        Object.printMap = function(e) {
            var t = "{";
            return Object.forEach(e, function(e, i) {
                    t += e + ": " + i + ", "
                }),
                t += "}"
        },
        Array.prototype.unique = function() {
            for (var e = [], t = this.length, i = 0; i < t; i++) {
                for (var n = i + 1; n < t; n++)
                    this[i] === this[n] && (n = ++i);
                e.push(this[i])
            }
            return e
        },
        Array.prototype.uniqueBy = function(e) {
            for (var t = [], i = this.length, n = 0; n < i; n++) {
                for (var s = n + 1; s < i; s++)
                    e(this[n], this[s]) && (s = ++n);
                t.push(this[n])
            }
            return t
        },
        Array.prototype.union = function(e) {
            var t = [];
            return t = this.concat(e),
                t.unique()
        },
        Array.prototype.remove = function(e) {
            var t = this.indexOf(e),
                i = this.clone();
            return -1 !== t && i.splice(t, 1),
                i
        },
        Array.prototype.min = function() {
            for (var e = this[0], t = this.length, i = 1; i < t; i++)
                this[i] < e && (e = this[i]);
            return e
        },
        Array.prototype.max = function() {
            for (var e = this[0], t = this.length, i = 1; i < t; i++)
                this[i] > e && (e = this[i]);
            return e
        },
        Array.prototype.intersect = function() {
            if (!arguments.length)
                return [];
            for (var e = this, t = null, i = null, n = 0; n < arguments.length;) {
                t = [],
                    i = arguments[n];
                for (var s = e.length, r = i.length, o = 0; o < s; o++)
                    for (var a = 0; a < r; a++)
                        e[o] === i[a] && t.push(e[o]);
                e = t,
                    n++
            }
            return t.unique()
        },
        Array.prototype.equals = function(e) {
            if (this.length !== e.length)
                return !1;
            var t = this.clone().sort();
            return e = e.clone().sort(),
                t.every(function(t, i) {
                    return t === e[i]
                })
        },
        Array.prototype.clone = function() {
            return [].concat(this)
        },
        Array.prototype.last = function() {
            return this[this.length - 1]
        },
        Array.prototype.first = function() {
            return this[0]
        },
        Number.prototype.toRad = function() {
            return this * Math.PI / 180
        },
        Number.prototype.toDeg = function() {
            return this / Math.PI * 180
        },
        Array.prototype.groupBy = function(e, t) {
            for (var i = {
                    true: [],
                    false: []
                }, n = 0, s = this.length; n < s; n++)
                i[e.apply(this, [this[n]])].push(this[n]);
            return i
        },
        Array.prototype.toSet = function() {
            return this.reduce(function(e, t) {
                return e[t] = !0,
                    e
            }, {})
        },
        $.fn.booleanVal = function() {
            var e = this.val();
            return "null" === e ? null : "true" === e
        }
}, function(e, t, i) {
    "use strict";
    Waze.Rule = OL.Class(OL.Rule, {
            getContext: function(e) {
                return e
            },
            CLASS_NAME: "Waze.Rule"
        }),
        Waze.rule = function(e, t, i) {
            return new Waze.Rule({
                filter: new OL.Filter({
                    evaluate: function(i) {
                        null != i.model && (i = i.model);
                        var n = i[e];
                        return _.isFunction(n) && (n = n.apply(i)),
                            n === t
                    }
                }),
                symbolizer: i
            })
        },
        Waze.defaultRule = function(e) {
            return new Waze.Rule({
                filter: new OL.Filter({
                    evaluate: function(e) {
                        return !0
                    }
                }),
                symbolizer: e
            })
        }
}, function(e, t, i) {
    "use strict";
    var n = {
            EDITOR_RANK: "dimension1"
        },
        s = function(e, t, i, n) {
            e = "wme_" + e,
                W.Config.reporting.enable && ga("send", "event", e, t, i, n)
        };
    W.Report = {
        feedAction: function(e, t) {
            s("feed", e, t)
        },
        loginAction: function(e, t) {
            s("login", e, t)
        },
        generalAction: function(e, t) {
            s("general", e, t)
        },
        mapProblemAction: function(e, t, i) {
            s("map_problem", e, t, i)
        },
        updateRequestAction: function(e, t, i) {
            s("update_request", e, t, i)
        },
        placeUpdateRequestAction: function(e, t, i) {
            s("place_update_request", e, t, i)
        },
        chatAction: function(e, t) {
            s("chat", e, t)
        },
        elementHistoryAction: function(e, t) {
            s("element_history", e, t)
        },
        setUserRank: function(e) {
            if (null != e) {
                var t = "" + e;
                ga("set", n.EDITOR_RANK, t)
            }
        }
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(48),
        r = n(s),
        o = i(102),
        a = n(o),
        l = i(661),
        u = n(l),
        d = i(201),
        c = n(d),
        h = i(670),
        p = n(h),
        f = i(195),
        g = n(f),
        m = i(827),
        v = n(m),
        y = Backbone.Model.extend({
            defaults: {
                loading: !0,
                loadingFeatures: !1,
                loggedIn: null,
                sandbox: !1,
                sessionExpired: !1,
                editing: !1,
                featureSelected: !1,
                user: null,
                mode: c.default.DEFAULT
            },
            layout: null,
            modeController: null,
            initialize: function() {
                this._urlParams = OL.Util.getParameters(window.location.href)
            },
            start: function() {
                var e = this;
                return this.atlas = new p.default,
                    this.layout = new u.default({
                        model: this
                    }),
                    this.modeController = new v.default({
                        model: this,
                        layout: this.layout
                    }),
                    this.listenTo(this.modeController, a.default.STATE_CHANGED, this.trigger.bind(this, a.default.STATE_CHANGED)),
                    $.when(g.default.getCurrent()).done(function(t) {
                        return W.location = t,
                            e._redirectToLocation(),
                            W.location.redirectToLocale(),
                            e.atlas.heft(e).done(function() {
                                return e._onDependenciesReady()
                            })
                    })
            },
            _redirectToLocation: function() {
                if (this._urlParams.env && this._urlParams.env.length > 0 && W.location.code !== this._urlParams.env)
                    return W.location.change(this._urlParams.env),
                        window.location.reload()
            },
            _onDependenciesReady: function() {
                var e = this;
                return this.loginManager = W.loginManager,
                    this.loginManager.events.on({
                        login: this._onLoginChanged,
                        sessionExpired: this._onSessionExpired,
                        logout: this._onLogout,
                        scope: this
                    }),
                    this.loginManager.getLoggedInUser().always(function() {
                        return e.set("loading", !1),
                            e.layout.render(),
                            e._setLoggedInUser(),
                            $(window).on("beforeunload", e._onBeforeUnload.bind(e)),
                            e.modeController.activate(),
                            e._restoreState()
                    })
            },
            _onBeforeUnload: function(e) {
                if (!this.modeController.canExitMode() && !this.isSandboxMode()) {
                    var t = e || window.event;
                    return t && (t.returnValue = I18n.t("edit.unsaved_changes")),
                        I18n.t("edit.unsaved_changes")
                }
            },
            _onLoginChanged: function(e) {
                return this.get("sessionExpired") ? this._processRelogin() : (this._setLoggedInUser(),
                    this._setSandboxMode(!1))
            },
            _processRelogin: function() {
                return this.loginManager.returningUser ? this._setSessionExpired(!1) : this._onLogout()
            },
            _onSessionExpired: function(e) {
                return this._setSessionExpired(!0)
            },
            _onLogout: function() {
                return W.model.actionManager.clear(),
                    window.location.reload()
            },
            _setEditing: function() {
                var e = this.isSandboxMode() || this.loginManager.isLoggedIn();
                return this.set("editing", e)
            },
            _setSandboxMode: function(e) {
                if (this.get("sandbox") !== e)
                    return this.set("sandbox", e),
                        this._setEditing(),
                        W.controller.reload()
            },
            _setSessionExpired: function(e) {
                if (this.get("sessionExpired") !== e)
                    return this.set("sessionExpired", e),
                        this._setEditing()
            },
            _setLoggedInUser: function() {
                return this.set({
                        user: this.loginManager.user,
                        loggedIn: this.loginManager.isLoggedIn()
                    }),
                    this.loginManager.isFirstLogin() && this._onFirstLogin(),
                    this._setAnalyticsContext(),
                    this._setEditing(),
                    W.controller.activate()
            },
            _onFirstLogin: function() {
                var e = this.loginManager.user && this.loginManager.user.address;
                if (e && e.x && e.y) {
                    var t = W.map.getPannable(),
                        i = e.toLonLat();
                    t.panTo(i)
                }
            },
            _setAnalyticsContext: function() {
                var e = this.loginManager.user;
                null != e && W.Report.setUserRank(e.rank)
            },
            isLoggedIn: function() {
                return this.get("loggedIn")
            },
            isEditingMode: function() {
                return this.get("editing")
            },
            isSandboxMode: function() {
                return this.get("sandbox")
            },
            activateSandboxMode: function() {
                return this._setSandboxMode(!0)
            },
            requestModeChange: function(e) {
                var t = this;
                return new r.default(function(i, n) {
                    t.modeController.canExitMode() ? (W.Report.generalAction("mode_changed", e),
                        i(t.set({
                            mode: e
                        }))) : (W.Report.generalAction("mode_changed", -1),
                        n(t.modeController.getExitError()))
                })
            },
            getState: function() {
                var e = this.get("mode"),
                    t = {};
                return e !== c.default.DEFAULT && (t.mode = e),
                    _.extend(t, this.modeController.getState())
            },
            _restoreState: function() {
                this._restoreMode()
            },
            _restoreMode: function() {
                if (this._urlParams.mode) {
                    var e = parseInt(this._urlParams.mode, 10);
                    c.default.isValid(e) && this.set("mode", e)
                }
                return this.modeController.restore(this._urlParams)
            }
        });
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(662),
        r = n(s),
        o = i(663),
        a = n(o),
        l = i(668),
        u = n(l);
    t.default = Marionette.View.extend({
            el: "body",
            ui: {
                descartesVersion: "#debug .version.descrates"
            },
            regions: {
                toolbarRegion: "#toolbar",
                topbarRegion: "#topbar-container",
                advancedToolsRegion: "#advanced-tools",
                sidebarRegion: "#sidebarContent",
                linksRegions: "#links"
            },
            bindings: {
                ".app-loading": {
                    observe: "loading",
                    visible: !0
                },
                ".app": {
                    classes: {
                        "show-sidebar": "editing",
                        "not-visible": {
                            observe: "loading"
                        }
                    }
                },
                "#sidebar": {
                    observe: "editing",
                    visible: !0,
                    classes: {
                        "not-shown": {
                            observe: "editing",
                            onGet: function(e) {
                                return !e
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                this.listenTo(this.model, "change:user", this._renderStaffRegion),
                    this.listenTo(this.getRegion("topbarRegion"), "show", this._resizeMap),
                    this.addRegions({
                        dialogRegion: r.default
                    })
            },
            render: function() {
                this.stickit(),
                    this._initLoginLayout(),
                    this._renderDescartesVersion(),
                    this.showChildView("linksRegions", new Marionette.View({
                        tagName: "waze-links",
                        template: "templates/sidebar/links"
                    }))
            },
            _resizeMap: function() {
                return W.map.resize()
            },
            _renderStaffRegion: function() {
                var e = this.model.get("user");
                if (this.getRegion("advancedToolsRegion").empty(),
                    e.rank >= W.Config.advanced_tools.minRank)
                    return this.showChildView("advancedToolsRegion", new u.default({
                        model: this.model
                    }))
            },
            _initLoginLayout: function() {
                return new a.default({
                    map: W.map,
                    model: this.model
                }).render()
            },
            _renderDescartesVersion: function() {
                var e = this;
                return $.get(W.Config.api_base + "/info/version").done(function(t) {
                    return $(e.ui.descartesVersion).text(t.version)
                })
            }
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.Region.extend({
        el: "#dialog-region",
        initialize: function() {
            var e = this;
            return this._ensureElement(),
                this.$el.addClass("modal").attr("tabindex", -1),
                this.$el.on("hidden.bs.modal", function() {
                    if (!e._isClosing)
                        return e.empty()
                }),
                this.$el.on("click", ".cancel-button", function(t) {
                    return t.preventDefault(),
                        e.empty()
                })
        },
        empty: function() {
            this._isClosing || (this._isClosing = !0,
                this._destroyModal(),
                Marionette.Region.prototype.empty.apply(this, arguments),
                this._isClosing = !1)
        },
        _destroyModal: function() {
            this.stopListening(this.currentView),
                this.$el.off("keydown.dialog-region"),
                this.$el.modal("hide"),
                this.$el.removeData()
        },
        show: function(e) {
            var t = this,
                i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            Marionette.Region.prototype.show.apply(this, arguments),
                _.defaults(i, {
                    keyboard: !0,
                    backdrop: "static"
                }),
                e.on("destroy", function() {
                    return t.empty()
                }),
                e.$el.addClass("modal-dialog"),
                this.$el.on("keydown.dialog-region", function(e) {
                    return e.stopPropagation()
                }),
                this.$el.modal(i)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(664),
        r = n(s),
        o = i(667),
        a = n(o),
        l = Marionette.View.extend({
            el: "body",
            template: !1,
            bindings: {
                ".sandbox-message": {
                    observe: "sandbox",
                    visible: !0
                },
                "#popup-overlay": {
                    observe: "editing",
                    onGet: function(e) {
                        return !e
                    },
                    visible: !0,
                    visibleFn: function(e, t, i) {
                        return t ? (W.map.showPopup(this.welcomePopup),
                            W.map.resize()) : this.welcomePopup.close()
                    }
                }
            },
            initialize: function(e) {
                this.map = e.map,
                    W.loginManager.events.register("beforeloginchanged", null, function(e) {
                        if (!W.app.isSandboxMode() && W.model.actionManager.canUndo())
                            return window.confirm(I18n.t("edit.unsaved_changes"))
                    }),
                    this.welcomePopup = new r.default,
                    this.sandboxMessage = new a.default({
                        el: $("<div/>").appendTo(this.map.footerMessages.div)[0]
                    })
            },
            onRender: function() {
                return this.sandboxMessage.render(),
                    this.stickit()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(665),
        r = n(s),
        o = i(666),
        a = n(o),
        l = i(200),
        u = n(l),
        d = OL.Class(r.default, {
            template: "login/welcome-popup",
            events: {
                "click .playmode": "_onPlaymodeClicked"
            },
            ui: {
                languageSwitcher: "#welcome-popup .language-select"
            },
            initialize: function() {
                return $.extend(this.events, r.default.prototype.events),
                    r.default.prototype.initialize.apply(this, arguments)
            },
            render: function() {
                var e = r.default.prototype.render.apply(this, arguments);
                return this.languageSwitcher = new a.default({
                        el: this.ui.languageSwitcher
                    }),
                    this.loginPresenter = new u.default({
                        $el: this.$el.find(".login-form")
                    }),
                    this.loginPresenter.render(),
                    this.loginPresenter.reset(),
                    e
            },
            _onPlaymodeClicked: function(e) {
                return e.preventDefault(),
                    W.app.activateSandboxMode()
            },
            destroy: function() {
                return null != this.languageSwitcher && this.languageSwitcher.destroy(),
                    null != this.loginPresenter && this.loginPresenter.destroy(),
                    r.default.prototype.destroy.apply(this, arguments)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(34),
        s = OpenLayers.Class(n, {
            olEvents: null,
            events: {
                "click .modal-close": "onClose"
            },
            shown: !1,
            initialize: function(e) {
                n.prototype.initialize.apply(this, arguments),
                    this.olEvents = new OpenLayers.Events(this)
            },
            onClose: function(e) {
                e && e.preventDefault(),
                    this.close(),
                    this.destroy()
            },
            close: function() {
                this.shown = !1,
                    this.olEvents.triggerEvent("closed")
            },
            render: function(e) {
                var t = this;
                return n.prototype.render.apply(this, arguments).done(function() {
                    e.empty(),
                        e.append(t.$el),
                        t.shown = !0
                })
            },
            isShown: function() {
                return this.shown
            }
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        events: {
            "click .change-language": "_onChangeLanguageClicked"
        },
        initialize: function() {
            return this.delegateEvents(),
                $(".dropdown-toggle").removeClass("not-shown")
        },
        _onChangeLanguageClicked: function(e) {
            e.preventDefault();
            var t = $(e.target).data("locale");
            return W.location.setLocale(t),
                W.location.redirectToLocale()
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(200),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "templates/login/sandbox-message",
            onRender: function() {
                return this.loginPresenter = new s.default({
                        $el: this.$el.find(".login-form")
                    }),
                    this.loginPresenter.render(),
                    this.loginPresenter.$el.on("click mousedown dragstart", "input", function(e) {
                        return e.stopPropagation()
                    }),
                    this.loginPresenter.reset()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(669),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "templates/sidebar/advanced-tools",
            tagName: "waze-staff-tools",
            regions: {
                snaptShotToggleRegion: "#snapshot-toggler"
            },
            events: {
                "click .env-link": "onLocationChanged"
            },
            onRender: function() {
                this.showChildView("snaptShotToggleRegion", new s.default({
                        snapshotManager: W.snapshotManager
                    })),
                    this.stickit()
            },
            onLocationChanged: function(e) {
                e.preventDefault();
                var t = $(e.target).data("env");
                return this.changeLocation(t)
            },
            changeLocation: function(e) {
                return W.location.changeAndRemovePermalink(e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/snapshot-toggler",
        ui: {
            toggler: ".toggler"
        },
        events: {
            "click @ui.toggler": "_onSnapshotClicked"
        },
        initialize: function() {
            return this.snapshotManager = this.options.snapshotManager,
                this.listenTo(this.snapshotManager, "change:state change:togglable", this.render)
        },
        onRender: function() {
            if (!this.snapshotManager.canToggleOn())
                return this.ui.toggler.tooltip({
                    title: "Save changes first",
                    placement: "bottom"
                })
        },
        serializeData: function() {
            return {
                canToggleOn: this.snapshotManager.canToggleOn(),
                isOn: this.snapshotManager.isSnapshotOn()
            }
        },
        onBeforeDestroy: function() {
            return this.ui.toggler.tooltip("destroy")
        },
        _onSnapshotClicked: function() {
            return this.snapshotManager.isSnapshotOn() ? this.snapshotManager.toggle(!1) : this.snapshotManager.canToggleOn() ? this.snapshotManager.toggle(!0) : void 0
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(671),
        r = i(674),
        o = n(r),
        a = i(677),
        l = n(a),
        u = i(205),
        d = n(u),
        c = i(685),
        h = n(c),
        p = i(686),
        f = n(p),
        g = i(689),
        m = n(g),
        v = i(715),
        _ = n(v),
        y = i(224),
        b = n(y),
        E = i(716),
        w = n(E),
        S = i(717),
        M = n(S),
        C = i(718),
        T = n(C),
        A = i(225),
        I = n(A),
        O = i(721),
        L = n(O),
        D = i(777),
        k = n(D),
        R = i(778),
        x = n(R),
        P = i(788),
        N = n(P),
        V = i(806),
        U = n(V),
        j = i(813),
        z = n(j),
        F = i(814),
        B = n(F),
        G = i(815),
        H = n(G),
        q = i(821),
        Y = n(q),
        K = i(26),
        J = n(K),
        Z = i(822),
        X = n(Z),
        Q = i(824),
        ee = n(Q),
        te = OL.Class({
            initialize: function() {},
            heft: function(e) {
                return W.Config.init(),
                    W.vent = new Backbone.Wreqr.EventAggregator,
                    W.commands = new Backbone.Wreqr.Commands,
                    W.reqres = new Backbone.Wreqr.RequestResponse,
                    W.model = new d.default,
                    W.model.loginManager = W.loginManager = new I.default,
                    W.accelerators = new b.default,
                    this._initKeyboard(),
                    W.map = new L.default({
                        app: e
                    }),
                    W.map.registerAccelerators(W.accelerators),
                    W.togglerTree = ee.default.create(),
                    W.editingMediator = new h.default,
                    W.selectionManager = new z.default(W.model, W.map.layers),
                    W.geometryEditing = new m.default(W.selectionManager, W.editingMediator, W.map, W.model),
                    new H.default({
                        map: W.map,
                        selectionManager: W.selectionManager
                    }),
                    new f.default({
                        map: W.map,
                        viewContainer: W.map.zoomBar.geoLocationContainer
                    }),
                    new N.default({
                        mediator: W.editingMediator,
                        mapLayers: [W.map.problemLayer, W.map.updateRequestLayer]
                    }),
                    new x.default({
                        mediator: W.editingMediator,
                        map: W.map,
                        mapLayer: W.map.placeUpdatesLayer
                    }),
                    new x.default({
                        mediator: W.editingMediator,
                        map: W.map,
                        mapLayer: W.map.parkingPlaceUpdatesLayer
                    }),
                    new Y.default($("#tutorial-dialog")),
                    new X.default(W.model).activate(),
                    this._heftController(),
                    this._heftMarx(),
                    this._heftModules(),
                    $.Deferred().resolve()
            },
            _initKeyboard: function() {
                return W.accelerators.registerDefaultShortcuts(),
                    W.accelerators.restore(),
                    new _.default,
                    W.accelerators.activate()
            },
            _heftController: function() {
                W.snapshotManager = new B.default(W.model.actionManager),
                    W.map.setSnapshotManager(W.snapshotManager),
                    W.controller = new l.default({
                        snapshotManager: W.snapshotManager
                    }),
                    new U.default({
                        controller: W.controller,
                        mediator: W.editingMediator
                    }),
                    W.editingMediator.activate(),
                    W.map.initMapState(W.selectionManager, W.app, W.togglerTree),
                    W.map.setEditingMediator(W.editingMediator)
            },
            _heftMarx: function() {
                if (W.Config.chat.enable) {
                    var e = new k.default(W.model),
                        t = new w.default(W.model, e, W.map),
                        i = new M.default(W.model, e, t),
                        n = new T.default({
                            model: i,
                            map: W.map
                        }),
                        r = new s.Chat(W.model, e);
                    new o.default({
                            model: r,
                            marx: e,
                            liveUsersPresenter: n,
                            map: W.map
                        }),
                        W.model.chat = r,
                        W.model.liveUsers = i
                }
            },
            _heftModules: function() {
                var e = {
                    map: W.map
                };
                return J.default.getEntryPoints().forEach(function(t) {
                    return t(e)
                })
            }
        });
    t.default = te,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.ChatRooms = t.ChatRoom = t.Chat = void 0;
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(54),
        u = n(l),
        d = i(138),
        c = n(d),
        h = i(672),
        p = n(h),
        f = i(673),
        g = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(f),
        m = i(13),
        v = n(m),
        y = void 0,
        b = void 0,
        E = OL.Class(u.default, {
            initialize: function(e, t) {
                return this._wazeModel = e,
                    this._marx = t,
                    u.default.prototype.initialize.apply(this),
                    this.messages = new g.Collection,
                    this.users = new c.default([], {
                        model: p.default
                    }),
                    this.rooms = new b,
                    this._refreshRooms(),
                    this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                    this._marx.on("reconnect", this._onMarxReconnect, this),
                    this._marx.on("disconnect", this._onMarxDisconnect, this),
                    this._registerWazeModelEvents(),
                    this.set({
                        room: this._getTopRoom(),
                        currentUser: null,
                        active: !1,
                        visible: null,
                        open: !1
                    }),
                    this._loadFromLocalStorage(),
                    this.on("change:room", this._onRoomChange, this),
                    this.on("change:visible", this._onVisibilityChanged, this),
                    this.on("change:open", this._onOpenChanged, this)
            },
            _loadFromLocalStorage: function() {
                var e = v.default.localStorage.get("chatSettings");
                if (null != e)
                    return this.set(e)
            },
            _saveToLocalStorage: function() {
                return v.default.localStorage.set("chatSettings", {
                    visible: this.get("visible"),
                    open: this.get("open")
                })
            },
            _onMarxFirstConnect: function() {
                this._registerSocketEvents(),
                    this._activate()
            },
            _onMarxReconnect: function() {
                this._activate()
            },
            _onMarxDisconnect: function() {
                this._deactivate()
            },
            _canActivate: function() {
                var e = this._wazeModel.loginManager.user;
                return null != e && this._canUserChat(e)
            },
            _canUserChat: function(e) {
                return !W.Config.chat.staffOnly || e.isStaff
            },
            _getDefaultVisibility: function() {
                return !1
            },
            _activate: function(e) {
                if (this._canActivate()) {
                    var t = this.get("visible");
                    null == t && (t = this._getDefaultVisibility()),
                        this._refreshRooms();
                    var i = this.get("room") || this._getTopRoom();
                    return this.set({
                            currentUser: this._createMyUser(),
                            visible: t,
                            active: this._canActivate(),
                            room: i
                        }),
                        null == this.get("visible") && (t = this._getDefaultVisibility()),
                        null != i && this._onRoomChange(),
                        this._onVisibilityChanged()
                }
            },
            _createMyUser: function() {
                var e = this._wazeModel.loginManager.user;
                return new p.default({
                    id: e.id,
                    rank: e.rank,
                    name: e.userName
                })
            },
            _registerWazeModelEvents: function() {
                return this._wazeModel.events.on({
                    mergeend: this._onMergeEnd,
                    scope: this
                })
            },
            _registerSocketEvents: function() {
                return this._marx.socket.on("room:userJoin", $.proxy(this._onRoomUserJoin, this)),
                    this._marx.socket.on("room:userLeave", $.proxy(this._onRoomUserLeave, this)),
                    this._marx.socket.on("room:userPan", $.proxy(this._onRoomUserPan, this)),
                    this._marx.socket.on("room:userEdit", $.proxy(this._onRoomUserEdit, this)),
                    this._marx.socket.on("room:newMessage", $.proxy(this._onMessage, this)),
                    this._marx.socket.on("me:newMessage", $.proxy(this._onMessageFromOtherTab, this)),
                    this._marx.socket.on("me:change:room", $.proxy(this._onMeChangeRoom, this)),
                    this._marx.socket.on("me:change:visible", $.proxy(this._onMeChangeVisible, this))
            },
            _onMergeEnd: function() {
                this.get("active") && (this._refreshRooms(),
                    null == this.get("room") && this.set("room", this._getTopRoom()))
            },
            _getTopRoom: function() {
                return null != this._wazeModel.countries.top ? this.rooms.findById(this._wazeModel.countries.top.id) : this.rooms.first()
            },
            _refreshRooms: function() {
                var e = this._wazeModel.countries.objects || {};
                return this.rooms.update(e)
            },
            _deactivate: function() {
                return this.users.reset([]),
                    this.set({
                        active: !1
                    })
            },
            _onMeChangeVisible: function(e) {
                this._silent = !0,
                    this.set("visible", e.visible),
                    this._silent = !1
            },
            _onMeChangeRoom: function(e) {
                var t = e.room;
                return this.users.reset(t.users || []),
                    this.set({
                        room: this._findOrCreateRoom(t.name)
                    }, {
                        pushToServer: !1
                    }),
                    this.messages.add({
                        type: "system",
                        body: "Joined room " + t.name,
                        from: {}
                    }),
                    this._showOrHideMeInUsersList()
            },
            _findOrCreateRoom: function(e) {
                var t = this.rooms.findWhere({
                    name: e
                });
                return null == t && (t = new y({
                            name: e
                        }),
                        this.rooms.add(t)),
                    t
            },
            _onRoomUserJoin: function(e) {
                null == this.getUserById(e.user.id) && this.users.addSorted(e.user, {
                    ascending: !1,
                    attribute: "rank"
                })
            },
            _onRoomUserLeave: function(e) {
                var t = this.getUserById(e.user.id);
                null != t && this.users.remove(t)
            },
            _onRoomUserPan: function(e) {
                this.getUserById(e.user.id).set(e.user)
            },
            _onRoomUserEdit: function(e) {
                this.getUserById(e.user.id).set(e.user)
            },
            _onMessage: function(e) {
                this.messages.add(e),
                    W.Report.chatAction("chat_message")
            },
            _onMessageFromOtherTab: function(e) {
                e.from = this.get("currentUser").toJSON(),
                    this.messages.add(e)
            },
            getUserById: function(e) {
                return this.users.first(function(t) {
                    return t.get("id") === e
                })
            },
            _onRoomChange: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                this.set({
                        roomName: this._getCurrentRoomName()
                    }),
                    e = _.defaults(e, {
                        pushToServer: !0
                    }),
                    this.get("active") && e.pushToServer && this._marx.socket.emit("user:change:roomName", {
                        roomName: this.get("roomName")
                    })
            },
            _getCurrentRoomName: function() {
                var e = this.get("room");
                return e && e.get ? e.get("name") : null
            },
            _onVisibilityChanged: function() {
                this.get("active") && (this._saveToLocalStorage(),
                    this._silent || this._sendVisibilityChangedMessage(),
                    this._showOrHideMeInUsersList())
            },
            _showOrHideMeInUsersList: function() {
                return this.get("visible") ? this._addMeToUsers() : this._removeMeFromUsers()
            },
            _addMeToUsers: function() {
                var e = this.get("currentUser");
                if (null == this.getUserById(e.get("id")))
                    return this.users.add(e)
            },
            _removeMeFromUsers: function() {
                var e = this.get("currentUser").get("id"),
                    t = this.getUserById(e);
                if (null != t)
                    return this.users.remove(t)
            },
            _onOpenChanged: function() {
                this.get("active") && this._saveToLocalStorage()
            },
            _sendVisibilityChangedMessage: function() {
                return this._marx.socket.emit("user:change:visible", {
                    visible: this.get("visible")
                })
            },
            sendMessage: function(e) {
                var t = this.get("currentUser"),
                    i = {
                        body: e
                    };
                this._marx.socket.emit("user:newMessage", i);
                var n = {
                    body: e,
                    from: {
                        id: t.get("id"),
                        name: t.get("name")
                    }
                };
                return this.messages.add(n)
            }
        });
    t.ChatRoom = y = OL.Class(u.default, {
            initialize: function() {
                return u.default.prototype.initialize.apply(this, arguments)
            },
            getName: function() {
                return this.attributes.name
            },
            equals: function(e) {
                return null != e && this.getName() === e.getName()
            },
            matchesId: function(e) {
                return -1 !== (this.get("ids") || []).indexOf(e)
            },
            addId: function(e) {
                var t = this.get("ids") || [];
                if (-1 === t.indexOf(e))
                    return t.push(e),
                        this.set({
                            ids: t
                        })
            }
        }),
        t.ChatRooms = b = OL.Class(c.default, {
            model: y,
            _aliases: {
                Belgium: "Benelux",
                Netherlands: "Benelux",
                Luxembourg: "Benelux",
                "Palestinian Territory": "Israel",
                "West Bank": "Israel",
                "Gaza Strip": "Israel"
            },
            update: function(e) {
                for (var t = this, i = {}, n = 0; n < this.models.length; n++) {
                    var s = this.models[n];
                    i[s.getName()] = s
                }
                return function() {
                    var n = [],
                        s = !0,
                        o = !1,
                        l = void 0;
                    try {
                        for (var u, d = (0,
                                a.default)((0,
                                r.default)(e)); !(s = (u = d.next()).done); s = !0) {
                            var c = u.value,
                                h = e[c],
                                p = t._getRoomNameByCountry(h),
                                f = i[p];
                            null != f ? n.push(f.addId(h.id)) : (f = new y({
                                    name: p,
                                    ids: [h.id]
                                }),
                                i[p] = f,
                                n.push(t.add(f)))
                        }
                    } catch (e) {
                        o = !0,
                            l = e
                    } finally {
                        try {
                            !s && d.return && d.return()
                        } finally {
                            if (o)
                                throw l
                        }
                    }
                    return n
                }()
            },
            _getRoomNameByCountry: function(e) {
                return this._aliases[e.name] || e.name
            },
            findById: function(e) {
                for (var t = 0; t < this.models.length; t++) {
                    var i = this.models[t];
                    if (i.matchesId(e))
                        return i
                }
                return null
            }
        }),
        t.Chat = E,
        t.ChatRoom = y,
        t.ChatRooms = b
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(54),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            getCenter: function() {
                var e = this.get("center");
                return null != e ? new OL.LonLat(e.lon, e.lat) : null
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.Collection = t.ChatMessage = void 0;
    var s = i(54),
        r = n(s),
        o = i(138),
        a = n(o),
        l = OL.Class(r.default, {
            getSenderID: function() {
                return this.get("from").id
            },
            addLine: function(e) {
                var t = this.get("body") + "\n" + e;
                return this.set("body", t)
            },
            getType: function() {
                return this.get("type") || "normal"
            },
            isSystem: function() {
                return "normal" !== this.getType()
            }
        }),
        u = OL.Class(a.default, {
            model: l,
            _beforeAdd: function(e) {
                var t = this.last();
                return null == t || t.getSenderID() !== e.getSenderID() || (this.trigger("beforeMessageUpdated", t),
                    t.addLine(e.get("body")),
                    this.trigger("messageUpdated", t), !1)
            }
        });
    t.ChatMessage = l,
        t.Collection = u
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(34),
        r = n(s),
        o = i(675),
        a = n(o),
        l = i(676),
        u = n(l),
        d = OpenLayers.Class(r.default, {
            template: "chat",
            events: {
                "click .toggle": "toggleOpen",
                "click .minimize": "toggleOpen",
                "keypress .message-input": "_onMessageInputClicked",
                "click ul.visibility a": "_toggleVisibility",
                "click .header": "_onHeaderClicked",
                "click .unread-messages-notification": "_onUnreadMessagesNotificationClicked",
                "click .rooms a": "_onRoomClicked"
            },
            ui: {
                toggle: ".toggle",
                roomName: ".room-name",
                popup: "#chat",
                messages: ".message-list",
                users: ".user-list",
                rooms: ".rooms",
                messageInput: ".message-input",
                status: ".status",
                visibleButton: ".visibility-visible",
                invisibleButton: ".visibility-invisible",
                unreadMessagesNotification: ".unread-messages-notification"
            },
            initialize: function(e) {
                var t = this;
                r.default.prototype.initialize.apply(this, arguments),
                    this.$el.attr({
                        id: "chat-overlay"
                    }).appendTo($(e.map.div)),
                    this.$el.on("click mousedown dragstart", "input", function(e) {
                        return e.stopPropagation()
                    }),
                    this.model = e.model,
                    this.model.users.on("reset", this._onUsersReset, this),
                    this.model.users.on("add", this._addUser, this),
                    this.model.users.on("remove", this._onUserRemoved, this),
                    this.model.on("change:open", this._onOpenChanged, this),
                    this.model.on("change:active", this._onActiveChanged, this),
                    this.model.on("change:visible", this._updateStatus, this),
                    this.model.on("change:roomName", function() {
                        return t.ui.roomName.text(t.model.get("roomName") || I18n.t("chat.connecting")),
                            t.$el.toggleClass("connected", null != t.model.get("roomName")),
                            t._resetRooms()
                    }),
                    this.model.messages.on("add", this._addMessage, this),
                    this.model.messages.on("reset", this._resetMessages, this),
                    this.model.messages.on("beforeMessageUpdated", function() {
                        t._wasScrolledToBottom = t._isScrolledToBottomMessage()
                    }),
                    this.model.messages.on("messageUpdated", function(e) {
                        if (!e.isSystem())
                            return t._afterContentAdded(t._wasScrolledToBottom)
                    }),
                    this.model.rooms.on("reset", this._resetRooms, this),
                    this.model.rooms.on("add", this._resetRooms, this),
                    this.userPresenters = {},
                    this.render(),
                    this.ui.messages.on("scroll", function() {
                        return t._hideUnreadMessagesNotification()
                    }),
                    this._updateStatus(),
                    this._onOpenChanged(),
                    W.accelerators.events.on({
                        toggleChat: this.toggleOpen,
                        scope: this
                    })
            },
            _onHeaderClicked: function(e) {
                if ($(e.target).hasClass("header"))
                    return this.toggleOpen()
            },
            _onUsersReset: function() {
                var e = this;
                return this.ui.users.empty(),
                    this.model.users.models.map(function(t) {
                        return e._addUser(t)
                    })
            },
            _addUser: function(e) {
                var t = new a.default({
                    model: e,
                    map: this.map,
                    marx: this.marx,
                    currentUser: this.model.get("currentUser")
                });
                t.render(),
                    this.userPresenters[e.get("id")] = t;
                var i = this.model.users.models.indexOf(e),
                    n = this.ui.users.children().eq(i);
                return n.length ? t.$el.insertBefore(n) : t.$el.appendTo(this.ui.users)
            },
            _onUserRemoved: function(e) {
                var t = e.item.get("id"),
                    i = ".user[data-id='" + t + "']";
                return this.ui.users.find(i).remove(),
                    delete this.userPresenters[t]
            },
            _onOpenChanged: function() {
                var e = !0 === this.model.get("open");
                if (this.$el.toggleClass("open", e),
                    e)
                    return this._scrollToBottomMessage(),
                        this._hideUnreadMessagesNotification()
            },
            _onActiveChanged: function() {
                var e = this.model.get("active");
                return this.$el.toggle(e),
                    this.ui.toggle.toggle(e)
            },
            _onRoomClicked: function(e) {
                e.preventDefault();
                var t = $(e.target).data("room");
                return this.model.set("room", t)
            },
            _updateStatus: function() {
                var e = this.model.get("visible");
                return this.ui.status.text(this._getStatusText()),
                    this.ui.visibleButton.toggleClass("checked", e),
                    this.ui.invisibleButton.toggleClass("checked", !e),
                    this.$el.toggleClass("visible-true", e),
                    this.$el.toggleClass("visible-false", !e)
            },
            toggleOpen: function() {
                var e = this.model.get("open");
                return e || W.Report.chatAction("chat_open"),
                    this.model.set("open", !e)
            },
            _toggleVisibility: function(e) {
                return e && e.preventDefault(),
                    this.model.set("visible", !this.model.get("visible"))
            },
            _onMessageInputClicked: function(e) {
                if (13 === e.keyCode) {
                    var t = $.trim(this.ui.messageInput.val());
                    return null != this.model.get("room") && "" !== t && (this.model.sendMessage(t),
                        this.ui.messageInput.val("")), !1
                }
            },
            _addMessage: function(e) {
                var t = new u.default({
                    model: e
                });
                t.render();
                var i = this._isScrolledToBottomMessage();
                if (this.ui.messages.append(t.$el), !e.isSystem())
                    return this._afterContentAdded(i)
            },
            _afterContentAdded: function(e) {
                if (e ? this._scrollToBottomMessage() : this._showUnreadMessagesNotification(), !this.model.get("open"))
                    return this.$el.addClass("has-unread-messages")
            },
            _showUnreadMessagesNotification: function() {
                return this._unreadMessagesCount || (this._unreadMessagesCount = 0),
                    this._unreadMessagesCount++,
                    this.ui.unreadMessagesNotification.text(I18n.t("chat.unread", {
                        count: this._unreadMessagesCount
                    })).show()
            },
            _onUnreadMessagesNotificationClicked: function(e) {
                return e.preventDefault && e.preventDefault(),
                    this._scrollToBottomMessage(),
                    this._hideUnreadMessagesNotification()
            },
            _hideUnreadMessagesNotification: function() {
                return this._unreadMessagesCount = 0,
                    this.ui.unreadMessagesNotification.hide(),
                    this.$el.removeClass("has-unread-messages")
            },
            _isScrolledToBottomMessage: function() {
                var e = this.ui.messages;
                return e.scrollTop() + e.outerHeight() >= e[0].scrollHeight
            },
            _scrollToBottomMessage: function() {
                return this.ui.messages.scrollTop(this.ui.messages[0].scrollHeight)
            },
            _resetMessages: function(e) {
                var t = this;
                return this.ui.messages.empty(),
                    this.model.messages.models.map(function(e) {
                        return t._addMessage(e)
                    })
            },
            _resetRooms: function(e) {
                var t = this;
                return this.ui.rooms.empty(),
                    this.model.rooms.models.map(function(e) {
                        return t._addRoom(e)
                    })
            },
            _addRoom: function(e) {
                var t = this.model.get("room"),
                    i = this._createRoomMenuItem(e);
                return e.equals(t) && i.addClass("checked"),
                    i.appendTo(this.ui.rooms),
                    this.$el.toggleClass("multiple-rooms", this.model.rooms.models.length > 1)
            },
            _createRoomMenuItem: function(e) {
                var t = e.getName(),
                    i = $("<li>");
                return $("<a>").attr({
                        href: "#"
                    }).text(t).data({
                        room: e
                    }).appendTo(i),
                    i
            },
            serialize: function() {
                var e = this.model.toJSON();
                return e.status = this._getStatusText(),
                    e
            },
            _getStatusText: function() {
                return this.model.get("visible") ? I18n.t("chat.visible") : I18n.t("chat.invisible")
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(34),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            tagName: "li",
            template: "chat_user",
            events: {
                "click .user": "_onClick"
            },
            serialize: function() {
                return {
                    user: this.model.toJSON(),
                    className: this._isCurrentUser() ? "current-user" : ""
                }
            },
            _isCurrentUser: function() {
                return this.model.get("id").toString() === this.currentUser.get("id").toString()
            },
            _onClick: function(e) {
                e.preventDefault();
                var t = this._transformFromMarx(this.model.getCenter());
                return this.map.setCenter(t),
                    W.Report.chatAction("chat_user_clicked")
            },
            _transformFromMarx: function(e) {
                return e.transform(this.marx.displayProjection, this.map.getProjectionObject())
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(34),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(s.default, {
            template: "chat_message",
            ui: {
                body: ".body"
            },
            initialize: function() {
                return s.default.prototype.initialize.apply(this, arguments),
                    this.model.on("change:body", $.proxy(this.render, this)),
                    this
            },
            onRender: function() {
                return this.$el.addClass("message " + this.model.getType() + "-message"),
                    this.$el.find(".body div").autoRTL()
            },
            serialize: function() {
                return {
                    message: this.model.toJSON()
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(12),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(13),
        u = n(l),
        d = i(678),
        c = n(d),
        h = i(49),
        p = n(h),
        f = i(679),
        g = n(f),
        m = i(203),
        v = n(m),
        y = i(204),
        b = n(y),
        E = i(9),
        w = n(E),
        S = i(128),
        M = n(S),
        C = OpenLayers.Class(c.default, {
            events: null,
            scale: null,
            zoom: null,
            oldScale: null,
            keepObjects: !1,
            app: null,
            model: null,
            map: null,
            selectionManager: null,
            serializer: null,
            operationSerializor: null,
            lastReadRequest: null,
            initialize: function(e) {
                c.default.prototype.initialize.apply(this, [e]),
                    OpenLayers.Util.extend(this, e),
                    this.app = W.app,
                    this.model = W.model,
                    this.map = W.map,
                    this.descartes = new M.default(this.map),
                    this.selectionManager = W.selectionManager,
                    this.events = new OpenLayers.Events(this),
                    this.serializer = new p.default,
                    this.operationSerializor = new g.default,
                    this.loadingOperation = {
                        id: "pending.road_data"
                    },
                    this.snapshotManager.on("change:state", this.reload, this),
                    this.selectionManager.events.on({
                        selectionchanged: this._onSelectionChange,
                        scope: this
                    })
            },
            activate: function() {
                var e = c.default.prototype.activate.apply(this, arguments);
                return e && this.map.events.on({
                        moveend: function() {
                            return this.updateModel(!1)
                        },
                        scope: this
                    }),
                    this.reload(),
                    e
            },
            deactivate: function() {
                var e = c.default.prototype.deactivate.call(this, arguments);
                return e && this.map.events.un({
                        moveend: function() {
                            return this.updateModel(!1)
                        },
                        scope: this
                    }),
                    e
            },
            reload: function() {
                return this.model.clear(),
                    this.updateModel(!1)
            },
            updateModel: function(e) {
                var t = {};
                this.keepObjects = e,
                    this.oldScale = this.scale,
                    this.scale = this.map.getScale(),
                    this.zoom = this.map.getZoom();
                var i = this.descartes.currentDataBounds;
                if (null !== i) {
                    var n = !0,
                        s = !1,
                        o = void 0;
                    try {
                        for (var l, u = (0,
                                r.default)((0,
                                a.default)(this.model.repos)); !(n = (l = u.next()).done); n = !0) {
                            var d = l.value,
                                c = this.model.repos[d];
                            c.active && OL.Util.extend(t, c.updateDataExtent(this.map.calculateBounds(), this.scale, this.zoom))
                        }
                    } catch (e) {
                        s = !0,
                            o = e
                    } finally {
                        try {
                            !n && u.return && u.return()
                        } finally {
                            if (s)
                                throw o
                        }
                    }
                    return (0,
                        a.default)(t).isEmpty() ? void 0 : (this.app.isSandboxMode() && (t.sandbox = !0),
                        this.sendReadFeatures(t, i))
                }
            },
            _isEqualToLastRequest: function(e, t) {
                return null !== this.lastReadRequest && _.isEqual(this.lastReadRequest.filter, e) && t.equals(this.lastReadRequest.bounds)
            },
            sendReadFeatures: function(e, t) {
                var i = this;
                this._isEqualToLastRequest(e, t) || (null !== this.lastReadRequest && this.lastReadRequest.ajax.abort(),
                    this.events.triggerEvent("loadstart"),
                    W.vent.trigger("operationPending", {
                        operation: this.loadingOperation
                    }),
                    null != this.model.lastTransactionID && (e.mapVersionID = this.model.lastTransactionID),
                    this.snapshotManager.isSnapshotOn() && (e.snapshot = !0),
                    this.app.set("loadingFeatures", !0),
                    this.lastReadRequest = {
                        filter: e,
                        bounds: t
                    },
                    this.lastReadRequest.ajax = this.descartes.getFeatures(e).done(function(e) {
                        return i.serializer.read(e),
                            i.model.mergeObjects(t, e, i.keepObjects)
                    }).always(function() {
                        i.events.triggerEvent("loadend"),
                            W.vent.trigger("operationDone", {
                                operation: i.loadingOperation
                            }),
                            i.app.set("loadingFeatures", !1),
                            i.keepObjects = !1,
                            i.lastReadRequest = null
                    }))
            },
            save: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = $.Deferred();
                return u.default.protect("saving", function() {
                        var n = t.actions || e.model.actionManager.getActions(),
                            s = e._serializeActions(n);
                        return s = e.operationSerializor.write(s),
                            e.descartes.postFeatures(s, e.model.getChangesExtent(), t.ignoreWarnings).done(function(t) {
                                return e._processSaveResponse(t),
                                    i.resolve({
                                        pendingEdits: e._getPendingEdits(t),
                                        saveCount: e._getSaveCount(t),
                                        unsavedFeatures: t.unsavedFeatures
                                    })
                            }).fail(function(t) {
                                var n = e._parseErrorResponse(t);
                                i.reject(n);
                                var s = n[0],
                                    r = void 0;
                                return s && (r = s.get("code")),
                                    W.Report.generalAction("save_error", r)
                            }),
                            W.Report.generalAction("save_clicked", e.model.actionManager.unsavedActionsNum())
                    }),
                    i
            },
            _serializeActions: function(e) {
                var t = new b.default,
                    i = new w.default;
                return i.subActions = e,
                    i.accept(t),
                    t.getResult()
            },
            _getPendingEdits: function(e) {
                var t = void 0;
                return t = e.pendingEdits ? e.pendingEdits.venues : [], {
                    venues: this.model.venues.getByIds(t)
                }
            },
            _getSaveCount: function(e) {
                for (var t = {}, i = ["segments", "nodes", "venues", "bigJunctions"], n = 0; n < i.length; n++) {
                    var s = i[n],
                        r = e[s] || {};
                    t[s] = (0,
                        a.default)(r).length
                }
                return t
            },
            updateObject: function(e, t, i, n) {
                if (!e) {
                    var s = {};
                    return s[i] = {
                            objects: [t]
                        },
                        this.serializer.read(s),
                        void this.model[i].put(s[i].objects[0])
                }
                if (!t)
                    return e.state = OpenLayers.State.DELETE,
                        void this.model[i].remove(e);
                var r = t.id;
                return delete t.id,
                    e.merge(t),
                    e.setID(r),
                    n !== r && (e._prevID = n),
                    delete this.model[i].objects[n],
                    this.model[i].objects[r] = e,
                    e.state = null,
                    e.fid && (e.fid = r),
                    this.model[i].changed(e),
                    this.model[i].synced(e)
            },
            _parseErrorResponse: function(e) {
                if (!e.responseJSON) {
                    return [new v.default({
                        code: 500,
                        details: "fatal server error"
                    })]
                }
                return this._parseErrors(e.responseJSON)
            },
            _parseErrors: function(e) {
                var t = void 0;
                t = e.errorList ? e : {
                    errorList: [e],
                    errorLevel: "ERROR"
                };
                var i = "WARNING" === e.errorLevel,
                    n = t.errorList.map(function(e) {
                        return e.ignorable = i,
                            new v.default(e, {
                                parse: !0
                            })
                    });
                return n.length ? n : [new v.default({
                    code: "default"
                })]
            },
            _processSaveResponse: function(e) {
                var t = this,
                    i = $.proxy(this.updateObject, this);
                return u.default.protect("processing save results", function() {
                    var n = !0,
                        s = !1,
                        o = void 0;
                    try {
                        for (var l, u = (0,
                                r.default)((0,
                                a.default)(e)); !(n = (l = u.next()).done); n = !0) {
                            var d = l.value,
                                c = e[d];
                            if (t.model[d]) {
                                var h = !0,
                                    p = !1,
                                    f = void 0;
                                try {
                                    for (var g, m = (0,
                                            r.default)((0,
                                            a.default)(c)); !(h = (g = m.next()).done); h = !0) {
                                        var v = g.value,
                                            _ = c[v];
                                        $.when(t.model[d].get(v), _, d, v).done(i)
                                    }
                                } catch (e) {
                                    p = !0,
                                        f = e
                                } finally {
                                    try {
                                        !h && m.return && m.return()
                                    } finally {
                                        if (p)
                                            throw f
                                    }
                                }
                            }
                        }
                    } catch (e) {
                        s = !0,
                            o = e
                    } finally {
                        try {
                            !n && u.return && u.return()
                        } finally {
                            if (s)
                                throw o
                        }
                    }
                    var y = t.model.getModifiedObjects(),
                        b = !0,
                        E = !1,
                        w = void 0;
                    try {
                        for (var S, M = (0,
                                r.default)((0,
                                a.default)(y)); !(b = (S = M.next()).done); b = !0)
                            for (var C = S.value, T = y[C], A = 0; A < T[OL.State.DELETE].length; A++) {
                                var I = T[OL.State.DELETE][A];
                                t.model[C].remove(I)
                            }
                    } catch (e) {
                        E = !0,
                            w = e
                    } finally {
                        try {
                            !b && M.return && M.return()
                        } finally {
                            if (E)
                                throw w
                        }
                    }
                    null != e.segmentsIdMapping && t.model.getTurnGraph().deleteNewSegments((0,
                            a.default)(e.segmentsIdMapping)),
                        null != e.connections && t.model.getTurnGraph().fromDescartes(e.connections),
                        t.model.actionManager.clear(),
                        t.model.setLastTransactionID(e.mapVersionID)
                })
            },
            _onSelectionChange: function() {
                return this.app.set("featureSelected", this.selectionManager.hasSelectedItems()),
                    this.app.trigger("selectionChanged", {
                        selection: W.selectionManager.selectedItems
                    })
            },
            CLASS_NAME: "Waze.Controller"
        });
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class({
        active: !1,
        autoActivate: !0,
        autoDestroy: !0,
        initialize: function() {},
        destroy: function() {
            this.deactivate()
        },
        activate: function() {
            return !this.active && (this.active = !0, !0)
        },
        deactivate: function() {
            return !!this.active && (this.active = !1, !0)
        },
        CLASS_NAME: "Waze.Activatable"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class(OpenLayers.Format.JSON, {
        initialize: function(e) {
            OpenLayers.Format.JSON.prototype.initialize.apply(this, [e])
        },
        write: function(e) {
            return e._subActions ? this.writeSubActions(e._subActions) : this.writeSubActions(e),
                OpenLayers.Format.JSON.prototype.write.apply(this, [{
                    actions: e
                }])
        },
        writeSubActions: function(e) {
            e.forEach(function(e) {
                e._subActions && this.writeSubActions(e._subActions)
            }, this)
        },
        CLASS_NAME: "Waze.Format.Operation"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = function() {
            function e(t, i, n) {
                (0,
                    a.default)(this, e),
                this._name = t,
                    this._attributeBitNumbers = n,
                    this._categoryOrder = i,
                    this._attributes = i.map(function() {
                        return (0,
                            r.default)(n).reduce(function(e, t) {
                            return e[t] = !1,
                                e
                        }, {})
                    })
            }
            return (0,
                    u.default)(e, [{
                    key: "getName",
                    value: function() {
                        return this._name
                    }
                }, {
                    key: "setAttribute",
                    value: function(e, t, i) {
                        var n = this._categoryOrder.indexOf(e);
                        i !== this._attributes[n][t] && (this._attributes[n][t] = i,
                            this.trigger("change"))
                    }
                }, {
                    key: "_attributesToBitField",
                    value: function(e) {
                        var t = this;
                        return (0,
                            r.default)(e).reduce(function(i, n) {
                            return e[n] && (i |= 1 << t._attributeBitNumbers[n]),
                                i
                        }, 0)
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return this._attributes.map(this._attributesToBitField.bind(this)).every(function(e) {
                            return 0 === e
                        })
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return this._attributes.map(this._attributesToBitField.bind(this)).join(",")
                    }
                }]),
                e
        }();
    _.extend(d.prototype, Backbone.Events),
        t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(60),
        s = i(49),
        r = i(13),
        o = OpenLayers.Class(n, {
            serializer: null,
            initialize: function(e, t) {
                n.prototype.initialize.apply(this, arguments),
                    this.serializer = new s
            },
            get: function(e, t, i, s) {
                var o = this,
                    a = {},
                    l = void 0,
                    u = $.Deferred();
                return null !== e && (r.is("Array", e) ? a = {
                        ids: e.join(",")
                    } : (l = n.prototype.get.apply(this, arguments),
                        a = {
                            id: e
                        })),
                    this.model.loginManager.isLoggedIn() || (a.sandbox = !0),
                    r.defined(l) ? u.resolve(l) : (OpenLayers.Util.extend(a, t),
                        $.get(this.url, a).then(function(e) {
                            return o.serializer.read(e),
                                e
                        }).done(function(t) {
                            o.onFeatureRead(t, u, e)
                        }).fail(function() {
                            u.reject()
                        })),
                    u
            },
            onFeatureRead: function(e, t, i) {
                e.users && this.model.users.mergeObjects(e.users, null, new OL.Bounds),
                    e = e[this.objectType + "s"];
                var n = e.objects;
                delete e.objects,
                    this.put(n),
                    this.additionalInfo = e,
                    t.resolve(n)
            },
            CLASS_NAME: "Waze.Model.OnDemandRepository"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    var n = i(3),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(60),
        o = OpenLayers.Class(r, {
            zoomToRoadType: null,
            roadTypeBounds: null,
            topCityID: null,
            initialize: function(e, t) {
                r.prototype.initialize.apply(this, arguments),
                    this.zoomToRoadType = W.Config.segments.zoomToRoadType,
                    this.roadTypeBounds = {}
            },
            destroy: function() {
                this.roadTypeBounds = null,
                    r.prototype.destroy.apply(this, arguments)
            },
            updateDataExtent: function(e, t, i) {
                var n = this,
                    r = this.zoomToRoadType[i] || [],
                    o = [];
                return -1 === r && (r = W.Config.segments.allTypes),
                    (0,
                        s.default)(this.zoomToRoadType).forEach(function(t) {
                        t = parseInt(t, 10);
                        var i = r.contains(t);
                        n.roadTypeBounds[t] && n.roadTypeBounds[t].containsBounds(e) || i && o.push(t)
                    }),
                    o.isEmpty() ? null : {
                        roadTypes: r.toString()
                    }
            },
            mergeObjects: function(e, t, i, n, s) {
                this.currentDataBounds = i.clone(),
                    (e.roadTypes || []).forEach(function(e) {
                        this.roadTypeBounds[e] = i
                    }, this),
                    this.calcTopCity(e),
                    r.prototype.mergeObjects.apply(this, arguments)
            },
            calcTopCity: function(e) {
                var t = {},
                    i = void 0,
                    n = void 0,
                    s = void 0,
                    r = void 0,
                    o = 0;
                this.topCityID = null,
                    e.objects.forEach(function(e) {
                        (r = this.model.streets.get(e.attributes.primaryStreetID)) && (s = r.cityID,
                            (n = this.model.cities.get(s)) && !n.isEmpty() && (i = t[s] || 0,
                                t[s] = i++,
                                i >= o && (o = i,
                                    this.topCityID = s)))
                    }, this)
            },
            clear: function(e) {
                this.roadTypeBounds = {},
                    r.prototype.clear.apply(this, arguments)
            },
            CLASS_NAME: "Waze.Model.SegmentRepository"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    var n = i(60),
        s = OpenLayers.Class(n, {
            landmarkBounds: null,
            venueLevel: null,
            categoryBrands: null,
            zoomToSize: null,
            initialize: function(e, t) {
                n.prototype.initialize.apply(this, arguments),
                    this.zoomToSize = W.Config.venues.zoomToSize,
                    this.categoryBrands = {}
            },
            destroy: function() {
                this.landmarkBounds = null,
                    this.updateRequestBounds(),
                    n.prototype.destroy.apply(this, arguments)
            },
            updateDataExtent: function(e, t, i) {
                var n = this.zoomToSize[i],
                    s = {};
                return n ? (this._areLandmarksInBounds(e) && this.venueLevel === n || this.filter.isEmpty() || (s.venueLevel = n,
                        s[this.filter.getName()] = this.filter.serialize()),
                    s) : s
            },
            _areLandmarksInBounds: function(e) {
                return this.landmarkBounds && this.landmarkBounds.containsBounds(e)
            },
            mergeObjects: function(e, t, i, s, r) {
                this.landmarkBounds = i.clone(),
                    this.venueLevel = e.venueLevel,
                    this.categoryBrands = e.categoryBrands || {},
                    n.prototype.mergeObjects.apply(this, arguments)
            },
            clear: function() {
                this.landmarkBounds = null,
                    this.venueLevel = null,
                    n.prototype.clear.apply(this, arguments)
            },
            CLASS_NAME: "Waze.Model.LandmarkRepository"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(60),
        r = n(s),
        o = i(194),
        a = n(o),
        l = OL.Class(r.default, {
            MIN_CONVERAGE: .9,
            getInvalidEnvs: function() {
                var e = this;
                return this.getObjectArray(function(t) {
                    var i = t.attributes.geometry.getArea() / e.currentDataBounds.toGeometry().getArea();
                    return t.attributes.type === a.default.TYPE.INVALID_ENV && i >= e.MIN_CONVERAGE
                })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(54),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            initialize: function() {
                return s.default.prototype.initialize.apply(this),
                    this._editingLocks = {},
                    this.set({
                        drawing: !1,
                        editingEnabled: !1,
                        navigation: !1,
                        advancedTools: !1
                    })
            },
            activate: function() {
                return this.model = W.app,
                    this.model.on("change:editing", this._onEditingChanged, this)
            },
            lockEditing: function() {
                var e = _.uniqueId("editingLock_");
                return this._editingLocks[e] = !0,
                    this.set("editingEnabled", !1),
                    e
            },
            releaseEditing: function(e) {
                return delete this._editingLocks[e],
                    this.set("editingEnabled", _.isEmpty(this._editingLocks))
            },
            _onEditingChanged: function() {
                var e = this.model.get("loggedIn"),
                    t = this.model.get("user"),
                    i = this.model.get("editing");
                if (this.set("editingEnabled", i),
                    this.set("advancedTools", e && t.isStaff),
                    i)
                    return this.set("navigation", !0)
            },
            setDrawingInProgress: function() {
                return this.set("drawing", !0)
            },
            setDrawingDone: function() {
                return this.set("drawing", !1)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(687),
        r = n(s),
        o = i(688),
        a = n(o),
        l = i(11),
        u = n(l),
        d = Marionette.Object.extend({
            LOCATION_REQUEST_TIMEOUT_MILLIS: 1e4,
            initialize: function(e) {
                return this.locationProvider = r.default,
                    this.map = e.map,
                    this.panButtonView = new a.default({
                        el: e.viewContainer
                    }),
                    this.listenTo(this.panButtonView, "click:pan", this._onPanClicked),
                    this.panButtonView.render()
            },
            _onMapMoved: function() {
                return this.panButtonView.toggleGeoLocated(!1),
                    this.map.events.unregister("moveend", this, this._onMapMoved)
            },
            _onPanClicked: function() {
                var e = this;
                return this.panButtonView.toggleLoading(!0),
                    this.locationProvider.getLonLat(this.LOCATION_REQUEST_TIMEOUT_MILLIS).done(function(t) {
                        return t = t.clone(),
                            u.default.project(t),
                            e.map.setCenter(t),
                            e.map.events.register("moveend", e, e._onMapMoved),
                            e.panButtonView.toggleGeoLocated(!0)
                    }).always(function() {
                        return e.panButtonView.toggleLoading(!1)
                    })
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        _cachedLonLat: null,
        initialize: function() {},
        getLonLat: function(e) {
            var t = this,
                i = $.Deferred();
            return null !== this._cachedLonLat ? i.resolve(this._cachedLonLat) : (this._getLonLatFromBrowser(e, i),
                    window.setTimeout(function() {
                        return t._onTimeoutExpired(i)
                    }, e)),
                i.promise()
        },
        _getLonLatFromBrowser: function(e, t) {
            var i = this;
            return window.navigator.geolocation.getCurrentPosition(function(e) {
                return i._onGetPostionSuccess(e, t)
            }, function(e) {
                return i._onGetPositionError(e, t)
            }, {
                timeout: e
            })
        },
        _onGetPostionSuccess: function(e, t) {
            var i = e.coords;
            return this._cachedLonLat = new OL.LonLat(i.longitude, i.latitude),
                t.resolve(this._cachedLonLat)
        },
        _onGetPositionError: function(e, t) {
            return t.reject({
                code: e.code
            })
        },
        _onTimeoutExpired: function(e) {
            return e.reject({
                code: n.ERROR_CODES.USER_TIMEOUT
            })
        }
    });
    n.ERROR_CODES = {
            PERMISSION_DENIED: 1,
            POSITION_UNAVAILABLE: 2,
            TIMEOUT: 3,
            USER_TIMEOUT: 4
        },
        t.default = new n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        TOOLTIP_SHOW_DELAY_MILLIS: 750,
        template: "Waze/Modules/GeoLocation/templates/pan_button",
        events: {
            "click .pan-button": "_onPanClicked"
        },
        ui: {
            panButton: ".pan-button",
            loading: ".loading"
        },
        _onPanClicked: function() {
            return this.trigger("click:pan")
        },
        toggleGeoLocated: function(e) {
            return this.ui.panButton.toggleClass("geo-located", e)
        },
        toggleLoading: function(e) {
            return this.ui.loading.toggle(e),
                this.ui.panButton.toggle(!e)
        },
        onRender: function() {
            return this.toggleLoading(!1),
                this.ui.panButton.tooltip({
                    title: I18n.t("geolocation.tooltip"),
                    placement: "right",
                    container: "body",
                    delay: {
                        show: this.TOOLTIP_SHOW_DELAY_MILLIS
                    }
                })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s, r = i(21),
        o = n(r),
        a = i(17),
        l = n(a),
        u = i(690),
        d = i(691),
        c = i(699),
        h = i(222),
        p = i(712),
        f = i(713),
        g = i(147),
        m = i(4),
        v = i(26),
        y = OpenLayers.Class({
            selectionManager: null,
            modifyControl: null,
            selectControl: null,
            editors: null,
            activeEditor: null,
            TYPE_TO_EDITOR_CLASS: (s = {},
                (0,
                    l.default)(s, m.VENUE, f),
                (0,
                    l.default)(s, m.SPEED_CAMERA, p),
                s),
            initialize: function(e, t, i, n) {
                var s = this;
                this.selectionManager = e,
                    this.editingMediator = t,
                    this.map = i,
                    this.dataModel = n,
                    this._typeToEditorClass = _.clone(this.TYPE_TO_EDITOR_CLASS),
                    this._typeToEditorOptions = {},
                    v.getLayers().forEach(function(e) {
                        var t = e.options;
                        t.geometryEditing && t.geometryEditing.enable && (s._typeToEditorClass[t.objectType] = g),
                            t.geometryEditing && t.geometryEditing.options && (s._typeToEditorOptions[t.objectType] = t.geometryEditing.options)
                    }),
                    this.selectionManager.events.register("selectionchanged", this, this.onSelectionChanged),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.editingMediator.on("change:advancedTools", this._onAdvancedToolsChanged, this),
                    this._initControls()
            },
            destroy: function() {
                this.selectionManager.events.unregister("selectionchanged", this, this.onSelectionChanged),
                    this.editingMediator.un("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.editingMediator.un("change:advancedTools", this._onAdvancedToolsChanged, this)
            },
            _createGeometryEditor: function(e, t) {
                var i = e[0].model.type;
                if (i === m.SEGMENT || i === m.NODE)
                    return this._createSegmentGeometryEditor(e, t);
                var n = this._typeToEditorClass[i];
                if (!n)
                    return null;
                var s = this.dataModel.getRepository(i);
                return new n(e[0], (0,
                    o.default)({
                    virtualStyle: h.virtualVertices,
                    repo: s,
                    model: this.dataModel,
                    map: this.map
                }, this._typeToEditorOptions[i]))
            },
            _createSegmentGeometryEditor: function(e, t) {
                return new d(e, t, this.dataModel, this.map.sketchLayer, this.map.segmentLayer, this.map.nodeLayer, {
                    mode: OpenLayers.Control.ModifyFeature.RESHAPE,
                    virtualStyle: h.virtualVertices,
                    standalone: !0,
                    selectControl: this.selectControl,
                    map: this.map
                })
            },
            _onAdvancedToolsChanged: function() {
                this.editingMediator.get("advancedTools") ? this.selectControl.enableBoxSelection() : this.selectControl.disableBoxSelection()
            },
            _onEditingEnabledChanged: function() {
                this.editingMediator.get("editingEnabled") ? this.selectControl.activate() : this.selectControl.deactivate()
            },
            _initControls: function() {
                var e = _(this.map.layers).filter(function(e) {
                    return e.selectable
                });
                this.selectControl = new u(e, {
                        clickout: !0,
                        toggle: !0,
                        deselectKey: OpenLayers.Event.KEY_ESC,
                        multiple: !1,
                        multipleKeys: ["metaKey", "ctrlKey"],
                        requireDeselect: W.prefs.get("requireFeatureDeselect"),
                        boxMask: OpenLayers.Handler.MOD_CTRL | OpenLayers.Handler.MOD_SHIFT,
                        box: !0,
                        boxSelectionLayers: [this.map.segmentLayer]
                    }),
                    W.prefs.on("change:requireFeatureDeselect", function(e, t) {
                        this.selectControl.requireDeselect = t
                    }, this),
                    this.map.addControl(this.selectControl),
                    this.selectionManager.setSelectControl(this.selectControl),
                    this.map.addControl(this.selectControl),
                    this.editNodeConsControl = new c,
                    this.map.addControls([this.editNodeConsControl]),
                    this.editNodeConsControl.activate()
            },
            onSelectionChanged: function(e) {
                var t = e.selected;
                this.activeEditor && (this.activeEditor.destroy(),
                        this.activeEditor = null),
                    t.length > 0 && (this.activeEditor = this._createGeometryEditor(t, e.reversedSegments)),
                    this.selectControl.setSelectionEmpty(0 === t.length)
            }
        });
    e.exports = y
}, function(e, t, i) {
    "use strict";
    var n = i(47),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(211),
        o = OpenLayers.Class(OpenLayers.Control, {
            multipleKeys: null,
            toggleKey: null,
            deselectKey: null,
            requireDeselect: !1,
            boxMask: OpenLayers.Handler.MOD_NONE,
            multiple: !1,
            clickout: !0,
            toggle: !1,
            box: !1,
            selectionEmpty: !0,
            onBeforeSelect: function() {},
            onSelect: function() {},
            onUnselect: function() {},
            scope: null,
            geometryTypes: null,
            layer: null,
            layers: null,
            callbacks: null,
            selectStyle: null,
            selectRenderIntent: "select",
            highlightRenderIntent: "highlight",
            highlightSelectedRenderIntent: "highlightselected",
            deletedRenderIntent: "delete",
            highlightDeletedRenderIntent: "highlightdeleted",
            handlers: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.multipleKeys instanceof Array || (this.multipleKeys = [this.multipleKeys]),
                    null === this.scope && (this.scope = this),
                    this.initLayer(e);
                var i = {
                    click: this.clickFeature,
                    clickout: this.clickoutFeature,
                    over: this.overFeature,
                    out: this.outFeature
                };
                this.callbacks = OpenLayers.Util.extend(i, this.callbacks),
                    this.handlers = {
                        feature: new OpenLayers.Handler.Feature(this, this.layer, this.callbacks, {
                            geometryTypes: this.geometryTypes,
                            stopDown: !1,
                            geometryTypeMatches: function() {
                                return this.feature.layer && this.feature.layer.selectable
                            }
                        }),
                        keyboard: new r(this, {
                            keydown: this.handleKeypress
                        })
                    },
                    this.box && (OL.Handler.Drag.prototype.checkModifiers = function(e) {
                            return null === this.keyMask || ((e.shiftKey ? OpenLayers.Handler.MOD_SHIFT : 0) | (e.ctrlKey ? OpenLayers.Handler.MOD_CTRL : 0) | (e.metaKey ? OpenLayers.Handler.MOD_CTRL : 0) | (e.altKey ? OpenLayers.Handler.MOD_ALT : 0)) === this.keyMask
                        },
                        this.handlers.box = new OpenLayers.Handler.Box(this, {
                            done: this.selectBox
                        }, {
                            boxDivClassName: "olHandlerBoxSelectFeature",
                            keyMask: this.boxMask
                        }))
            },
            initLayer: function(e) {
                e.forEach(function(e) {
                        e.selectControl = this
                    }, this),
                    e instanceof Array ? (this.layers = e,
                        this.layer = new OpenLayers.Layer.Vector.RootContainer(this.id + "_container", {
                            layers: e
                        })) : this.layer = e
            },
            destroy: function() {
                this.active && this.layers && this.map.removeLayer(this.layer),
                    OpenLayers.Control.prototype.destroy.apply(this, arguments),
                    this.layers && this.layer.destroy()
            },
            activate: function() {
                return this.active || (this.layers && this.map.addLayer(this.layer),
                        this.handlers.feature.activate(),
                        this.handlers.keyboard.activate(),
                        this.box && this.handlers.box && this.handlers.box.activate()),
                    OpenLayers.Control.prototype.activate.apply(this, arguments)
            },
            deactivate: function() {
                return this.active && (this.handlers.feature.deactivate(),
                        this.handlers.keyboard.deactivate(),
                        this.handlers.box && this.handlers.box.deactivate(),
                        this.layers && this.map.removeLayer(this.layer)),
                    OpenLayers.Control.prototype.deactivate.apply(this, arguments)
            },
            handleKeypress: function(e) {
                this.deselectKey === e.keyCode && this.unselectAll()
            },
            canSelect: function() {
                return this.multipleSelect() || !this.requireDeselect || this.selectionEmpty
            },
            setSelectionEmpty: function(e) {
                this.selectionEmpty = e
            },
            clickFeature: function(e) {
                var t = e.layer && OpenLayers.Util.indexOf(e.layer.selectedFeatures, e) > -1;
                if (this.canSelect())
                    if (t)
                        this.toggleSelect() ? this.unselect(e) : this.multipleSelect() || this.unselectAll({
                            except: e
                        });
                    else {
                        if (this.handlers.feature.evt.altKey)
                            return void e.layer.events.triggerEvent("selectpath", {
                                feature: e
                            });
                        this.multipleSelect() || this.unselectAll({
                                except: e
                            }),
                            this.select(e)
                    }
            },
            multipleSelect: function() {
                var e = this.multipleKeys.some(function(e) {
                    return this.handlers.feature.evt[e]
                }, this);
                return this.multiple || !this.duringBoxSelection && this.handlers.feature.evt && e || this.duringBoxSelection && this.handlers.box && this.handlers.box.dragHandler.evt && e
            },
            toggleSelect: function() {
                return this.toggle || this.handlers.feature.evt && this.handlers.feature.evt[this.toggleKey]
            },
            clickoutFeature: function(e) {
                this.clickout && !this.multipleSelect() && this.unselectAll()
            },
            overFeature: function(e) {
                this.canSelect() && this.highlight(e)
            },
            outFeature: function(e) {
                if (e._lastHighlighter === this.id)
                    if (e._prevHighlighter && e._prevHighlighter !== this.id) {
                        delete e._lastHighlighter;
                        var t = this.map.getControl(e._prevHighlighter);
                        t && t.highlight(e)
                    } else
                        this.unhighlight(e)
            },
            highlight: function(e) {
                var t = e.layer;
                if (t) {
                    if (!1 !== this.events.triggerEvent("beforefeaturehighlighted", {
                            feature: e
                        })) {
                        e._prevHighlighter = e._lastHighlighter,
                            e._lastHighlighter = this.id;
                        var i = OpenLayers.Util.indexOf(t.selectedFeatures, e) > -1,
                            n = e.model && e.model.isDeleted(),
                            s = this.selectStyle;
                        s || (s = n ? this.highlightDeletedRenderIntent : i ? this.duringBoxSelection ? this.selectRenderIntent : this.highlightSelectedRenderIntent : this.highlightRenderIntent),
                            t.drawFeature(e, s),
                            this.events.triggerEvent("featurehighlighted", {
                                feature: e
                            })
                    }
                }
            },
            unhighlight: function(e) {
                var t = e.layer;
                e._lastHighlighter = e._prevHighlighter,
                    delete e._prevHighlighter;
                var i = e.model && e.model.isDeleted(),
                    n = OpenLayers.Util.indexOf(t.selectedFeatures, e) > -1,
                    s = this.selectStyle;
                s || (s = i ? this.deletedRenderIntent : n ? this.selectRenderIntent : e.layer.style || "default"),
                    t.drawFeature(e, s),
                    this.events.triggerEvent("featureunhighlighted", {
                        feature: e
                    })
            },
            select: function(e) {
                if (!e.model.isDeleted()) {
                    var t = this.onBeforeSelect.call(this.scope, e),
                        i = e.layer;
                    i && !1 !== t && !1 !== (t = i.events.triggerEvent("beforefeatureselected", {
                        feature: e
                    })) && (i.selectedFeatures.push(e),
                        this.highlight(e),
                        this.handlers.feature.lastFeature || (this.handlers.feature.lastFeature = i.selectedFeatures[0]),
                        e.model && e.model.setSelected(!0),
                        i.events.triggerEvent("featureselected", {
                            feature: e
                        }),
                        this.onSelect.call(this.scope, e))
                }
            },
            selectMultiple: function(e) {
                var t = void 0,
                    i = {};
                e.forEach(function(e) {
                        null !== (t = e.layer) && (i[t.id] = t,
                            t.selectedFeatures.push(e),
                            this.highlight(e),
                            this.handlers.feature.lastFeature || (this.handlers.feature.lastFeature = t.selectedFeatures[0]),
                            e.model && e.model.setSelected(!0))
                    }, this),
                    (0,
                        s.default)(i).forEach(function(t) {
                        t.events.triggerEvent("featureselected", {
                            feature: e
                        })
                    }),
                    this.onSelect.call(this.scope, e)
            },
            unselect: function(e, t) {
                var i = e.layer;
                OpenLayers.Util.removeItem(i.selectedFeatures, e),
                    this.unhighlight(e),
                    e.model && e.model.setSelected(!1), !0 !== t && (i.events.triggerEvent("featureunselected", {
                            features: [e]
                        }),
                        this.onUnselect.call(this.scope, e))
            },
            unselectAll: function(e) {
                var t = void 0,
                    i = void 0,
                    n = this.layers || [this.layer],
                    s = void 0,
                    r = void 0,
                    o = [];
                for (t = 0; t < n.length; ++t)
                    for (s = n[t],
                        o[t] = [s],
                        i = s.selectedFeatures.length - 1; i >= 0; --i)
                        !(r = s.selectedFeatures[i]) || e && e.except === r || (r.model && r.model.setSelected(!1),
                            o[t].push(r),
                            this.unselect(r, !0));
                o.forEach(function(e) {
                    s = e.first(),
                        e = e.splice(1),
                        e.isEmpty() || (s.events.triggerEvent("featureunselected", {
                                features: e
                            }),
                            this.onUnselect.call(this.scope, e))
                }, this)
            },
            selectBox: function(e) {
                if (e instanceof OpenLayers.Bounds) {
                    for (var t = this.map.getLonLatFromPixel(new OpenLayers.Pixel(e.left, e.bottom)), i = this.map.getLonLatFromPixel(new OpenLayers.Pixel(e.right, e.top)), n = new OpenLayers.Bounds(t.lon, t.lat, i.lon, i.lat).toGeometry(), s = this.boxSelectionLayers || this.layers || [this.layer], r = void 0, o = [], a = 0; a < s.length; ++a) {
                        r = s[a];
                        for (var l = 0, u = r.features.length; l < u; ++l) {
                            var d = r.features[l];
                            d.getVisibility() && (n.intersects(d.geometry) && o.push(d))
                        }
                    }
                    this.multipleSelect() || this.unselectAll(),
                        o.isEmpty() || this.selectMultiple(o)
                }
            },
            setMap: function(e) {
                this.handlers.feature.setMap(e),
                    this.box && this.handlers.box.setMap(e),
                    OpenLayers.Control.prototype.setMap.apply(this, arguments)
            },
            setLayer: function(e) {
                var t = this.active;
                this.unselectAll(),
                    this.deactivate(),
                    this.layers && (this.layer.destroy(),
                        this.layers = null),
                    this.initLayer(e),
                    this.handlers.feature.layer = this.layer,
                    t && this.activate()
            },
            enableBoxSelection: function() {
                this.box && !this.handlers.box.active && this.handlers.box.activate()
            },
            disableBoxSelection: function() {
                this.box && this.handlers.box.active && this.handlers.box.deactivate()
            },
            CLASS_NAME: "Waze.Control.SelectHighlightFeature"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    var n = i(692),
        s = i(20),
        r = i(76),
        o = i(4),
        a = i(146),
        l = i(215),
        u = i(213),
        d = i(13),
        c = OpenLayers.Class(n, {
            model: null,
            origGeometries: null,
            initialize: function(e, t, i, s, r, o, a) {
                this.features = e.clone(),
                    this.reverseSegments = t,
                    this.model = i,
                    n.prototype.initialize.apply(this, [s, r, o, a]),
                    this.origGeometries = {},
                    this._registerEvents(),
                    this.map.addControl(this),
                    this.activate(),
                    this.selectFeature(this.feature)
            },
            destroy: function() {
                this._unregisterEvents(),
                    this.unselectFeature(),
                    this.deactivate(),
                    n.prototype.destroy.apply(this, arguments)
            },
            _registerEvents: function() {
                this.model.segments.on(s.CHANGED, this.onFeatureUpdated, this),
                    this.model.nodes.on(s.CHANGED, this.onFeatureUpdated, this),
                    this.model.events.register("mergeend", this, this.onFeaturesMerge)
            },
            _unregisterEvents: function() {
                this.model.events.unregister("mergeend", this, this.onFeaturesMerge),
                    this.model.segments.off(s.CHANGED, this.onFeatureUpdated, this),
                    this.model.nodes.off(s.CHANGED, this.onFeatureUpdated, this)
            },
            onFeatureUpdated: function(e) {
                this.active && this.resetVertices()
            },
            clickOnDragPoint: function(e) {
                var t = null;
                if (e.parent && e.parent.model.type === o.NODE)
                    t = e.parent;
                else if (e.parent && e.parent.model.type === o.SEGMENT) {
                    var i = e.parent.geometry.getVertices(!0);
                    e.geometry.equals(i[0]) && e.parent.model.attributes.fromNodeID ? t = this.map.nodeLayer.getVector(this.model.nodes.get(e.parent.model.attributes.fromNodeID)) : e.geometry.equals(i[1]) && e.parent.model.attributes.toNodeID && (t = this.map.nodeLayer.getVector(this.model.nodes.get(e.parent.model.attributes.toNodeID)))
                }
                t && this.selectControl.clickFeature(t)
            },
            getFeaturesArray: function(e, t) {
                return e[t.getID()] || (e[t.getID()] = []),
                    e[t.getID()]
            },
            _getArrowVector: function(e, t, n) {
                var s = void 0,
                    r = void 0,
                    o = void 0;
                return e.isOneWay() ? (s = i(t ? 697 : 217),
                        r = 9,
                        o = 360 - n.last().toDeg(), !0 === e.attributes.revDirection && (o -= 180)) : (r = 5,
                        s = i(698)),
                    new OpenLayers.Feature.Vector(n.first(), {}, {
                        externalGraphic: s,
                        rotation: o,
                        graphicWidth: r,
                        graphicHeight: 5,
                        pointerEvents: "none"
                    })
            },
            collectVerticesFromFeatures: function(e, t, i, n) {
                var s = this.calculateNodesToParents(e),
                    a = this;
                Object.forEach(s, function(e, t) {
                    if (t && t[0].model.isAllowed(r.Nodes.EDIT_GEOMETRY) && t.allPresent) {
                        var i = new u(a.getFeatureGeometries(t), null);
                        i._sketch = !0,
                            i._sketchNode = !0,
                            i.parents = t,
                            i.parent = i.parents[0];
                        var s = i.parent.model;
                        i.uneditable = !s.isAllowedToMoveNode();
                        a.getFeaturesArray(n, i.parent.model).push(i)
                    }
                });
                for (var l = 0; l < e.length; l++) {
                    var d = e[l],
                        c = e[l].model;
                    if (c.type === o.SEGMENT) {
                        var h = c.getRestrictionCount();
                        (h || c.isOneWay()) && (this.directionArrows[c.getID()] = c.getArrowPoints(42 * this.map.getResolution(), 20 * this.map.getResolution(), 20 * this.map.getResolution()).map(_.partial(this._getArrowVector, c, h))),
                        this._createDragHandles(c, d, t, s, n, i)
                    }
                }
            },
            _createDragHandles: function(e, t, i, n, s, o) {
                var a = new OL.Feature.Vector(e.geometry.clone(), null),
                    l = e.getID();
                a.parent = t,
                    a._highlightPlaceHolder = !0,
                    this.dragPointsPaddingVertices.push(a);
                for (var u = e.isAllowed(r.Segments.EDIT_GEOMETRY) && !e.outOfScope, d = this.getFeaturesArray(i, e), c = this.getFeaturesArray(s, e), h = e.geometry, p = null, f = e.attributes.fromNodeID && n[e.attributes.fromNodeID] ? 1 : 0, g = h.components.length - (e.attributes.toNodeID && n[e.attributes.toNodeID] ? 1 : 0), m = f; m < g; ++m) {
                    var v = h.components[m];
                    if ("OpenLayers.Geometry.Point" === v.CLASS_NAME) {
                        var _ = new OL.Feature.Vector(v, null);
                        if (p) {
                            if (p.geometry.distanceTo(_.geometry) / this.map.getResolution() < 3 && m > 0 && m < h.components.length - 1)
                                continue
                        }
                        p = _,
                            _._sketch = !0,
                            _._virtualParent = a,
                            _.renderIntent = "sketch",
                            _.parent = t,
                            _.parents = [t];
                        var y = void 0;
                        0 === m && e.attributes.fromNodeID || m === h.components.length - 1 && e.attributes.toNodeID ? (0 === m ? (y = this.model.nodes.get(e.attributes.fromNodeID),
                                _[this.reverseSegments[l] ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0) : m === h.components.length - 1 && (y = this.model.nodes.get(e.attributes.toNodeID),
                                _[this.reverseSegments[l] ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0),
                            _.uneditable = !y || !y.isAllowedToMoveNode() || !u,
                            c.push(_)) : (_.uneditable = !u,
                            0 === m ? (_[this.reverseSegments[l] ? "_toNodeDragPoint" : "_fromNodeDragPoint"] = !0,
                                c.push(_)) : m === h.components.length - 1 ? (_[this.reverseSegments[l] ? "_fromNodeDragPoint" : "_toNodeDragPoint"] = !0,
                                c.push(_)) : (_._dragPoint = !0,
                                u && d.push(_)))
                    }
                }
                u && this._createVirtualVertices(e, h, t, a, o)
            },
            _createVirtualVertices: function(e, t, i, n, s) {
                var r = this.getFeaturesArray(s, e);
                if ("OpenLayers.Geometry.MultiPoint" !== t.CLASS_NAME)
                    for (var o = 0; o < t.components.length - 1; ++o) {
                        var a = t.components[o],
                            l = t.components[o + 1];
                        if ("OpenLayers.Geometry.Point" === a.CLASS_NAME && "OpenLayers.Geometry.Point" === l.CLASS_NAME) {
                            var u = a.distanceTo(l) / this.map.getResolution();
                            if (u < 20)
                                continue;
                            var d = (a.x + l.x) / 2,
                                c = (a.y + l.y) / 2,
                                h = new OL.Feature.Vector(new OpenLayers.Geometry.Point(d, c), null, this.virtualStyle);
                            h._virtualParent = n,
                                h.parent = i,
                                h.parents = [i],
                                h._index = o + 1,
                                h._sketch = !0,
                                h.virtual = !0,
                                r.push(h)
                        }
                    }
            },
            getFeatureGeometries: function(e) {
                var t = [],
                    i = e[0].model;
                t.push(i.geometry);
                for (var n = 1; n < e.length; n++) {
                    var s = e[n].model;
                    s.attributes.fromNodeID === i.getID() ? t.push(s.geometry.components[0]) : s.attributes.toNodeID === i.getID() && t.push(s.geometry.components[s.geometry.components.length - 1])
                }
                return t
            },
            calculateNodesToParents: function(e) {
                for (var t = {}, i = {}, n = 0; n < e.length; n++) {
                    var s = e[n].model;
                    if (s.type === o.SEGMENT) {
                        var r = s.attributes.fromNodeID,
                            a = s.attributes.toNodeID;
                        r && !t[r] && (i[r] ? (t[r] = this.getNodeIDParents(r),
                                delete i[r]) : i[r] = !0),
                            a && !t[a] && (i[a] ? (t[a] = this.getNodeIDParents(a),
                                delete i[a]) : i[a] = !0)
                    } else
                        s.type === o.NODE && (t[s.getID()] || (t[s.getID()] = this.getNodeIDParents(s.getID())))
                }
                return t
            },
            getNodeIDParents: function(e) {
                var t = this.model.nodes.get(e);
                if (!d.defined(t))
                    return null;
                var i = [this.map.nodeLayer.getVector(t)];
                i.allPresent = !0;
                for (var n = 0; n < t.attributes.segIDs.length; n++) {
                    var s = t.attributes.segIDs[n],
                        r = this.model.segments.get(s);
                    r ? (r = this.map.segmentLayer.getVector(r),
                        i.push(r)) : i.allPresent = !1
                }
                return i
            },
            onModificationStart: function(e) {
                e.parents && e.parents.forEach(function(e) {
                    var t = e.model.type + e.model.getID();
                    this.origGeometries[t] || (this.origGeometries[t] = e.geometry.clone())
                }, this)
            },
            onModificationComplete: function(e) {
                var t = void 0,
                    i = {},
                    n = this.snapControl.snappedFeature;
                if (n && !n.feature.model.outOfScope && (n.feature = n.feature.model,
                        i.snappedFeatures = n),
                    1 === e.parents.length) {
                    if (e.parent.model.type === o.SEGMENT) {
                        var s = e.parent.model.getID(),
                            r = e.parent.model;
                        t = this.origGeometries["segment" + s],
                            i.createNodes = !0,
                            t && this.model.actionManager.add(new a(r, t.clone(), e.parent.geometry, i))
                    }
                } else {
                    for (var u = {}, d = e.parent.model, c = 0; c < d.attributes.segIDs.length; c++) {
                        var h = d.attributes.segIDs[c];
                        this.model.segments.get(h) && (u[h] = this.origGeometries["segment" + h].clone())
                    }
                    this.model.actionManager.add(new l(d, this.origGeometries["node" + d.getID()].clone(), e.parent.geometry, u, i))
                }
                for (var p = 0; p < this.origGeometries.length; p++)
                    this.origGeometries[p].destroy();
                this.origGeometries = {}
            },
            onFeaturesMerge: function() {
                this.verifySelectionValidity()
            },
            verifySelectionValidity: function() {
                this.resetVertices()
            },
            CLASS_NAME: "Waze.Control.ModifyModelFeature"
        });
    e.exports = c
}, function(e, t, i) {
    "use strict";
    var n = i(3),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(30),
        o = i(693),
        a = i(212),
        l = i(213),
        u = i(4),
        d = i(695),
        c = i(696),
        h = OpenLayers.Class(OpenLayers.Control, r, {
            geometryTypes: null,
            clickout: !0,
            toggle: !0,
            toggleKey: null,
            multiple: !1,
            multipleKey: null,
            standalone: !1,
            sketchLayer: null,
            segmentLayer: null,
            nodeLayer: null,
            draggingIntent: "drag",
            features: null,
            dragHandles: null,
            nodeDragHandles: null,
            virtualDragHandles: null,
            directionArrows: null,
            dragPointsPaddingVertices: null,
            selectControl: null,
            featureHover: null,
            dragControl: null,
            snapControl: null,
            handlers: null,
            deleteCodes: null,
            virtualStyle: null,
            verticesStyle: null,
            mode: null,
            modified: [],
            radiusHandle: null,
            dragHandle: null,
            initialize: function(e, t, i, n) {
                this.sketchLayer = e,
                    this.segmentLayer = t,
                    this.nodeLayer = i,
                    this.dragHandles = {},
                    this.nodeDragHandles = {},
                    this.virtualDragHandles = {},
                    this.directionArrows = {},
                    this.dragPointsPaddingVertices = [],
                    this.deleteCodes = [68],
                    this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                    OpenLayers.Control.prototype.initialize.apply(this, [n]),
                    this.bridgeCreator = new c(this.features.map(function(e) {
                        return e.model
                    }), n.map.getDrawingContext(), this.model),
                    this.nodeCreator = new d(this.features.map(function(e) {
                        return e.model
                    }), n.map.getDrawingContext(), this.model),
                    this.deleteCodes instanceof Array || (this.deleteCodes = [this.deleteCodes]),
                    W.accelerators.events.register("toggleMultipleSelection", this, this.toggleMultipleSelection);
                var s = this;
                this.featureHover = new o(this, this.selectControl.layer, {
                        over: function(e) {
                            var t = e.parent;
                            !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.contains(t) && (this.drawSegmentDraggingHandles(t),
                                this.sketchLayer.removeFeatures(this.directionArrows[t.model.getID()] || [], {
                                    silent: !0
                                }))
                        },
                        out: function(e) {
                            var t = e.parent;
                            !this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.contains(t) && (this.removeAllFeatures(this.virtualDragHandles),
                                this.removeAllFeatures(this.dragHandles),
                                this.sketchLayer.addFeatures(this.directionArrows[t.model.getID()] || [], {
                                    silent: !0
                                }))
                        },
                        click: function(e) {
                            var t = e.parent;
                            if (!this.dragControl.handlers.drag.started && (e._highlightPlaceHolder || e._fromNodeDragPoint || e._toNodeDragPoint) && this.features.contains(t))
                                return this.selectControl.unselect(t), !1
                        }
                    }),
                    null === this.virtualStyle && (this.virtualStyle = OpenLayers.Util.extend({}, this.sketchLayer.style || this.sketchLayer.styleMap.createSymbolizer()),
                        this.virtualStyle.fillOpacity = .3,
                        this.virtualStyle.strokeOpacity = .3);
                var r = {
                    geometryTypes: ["OpenLayers.Geometry.Point"],
                    snappingOptions: this.snappingOptions,
                    onStart: function(e, t) {
                        s.dragStart.apply(s, [e, t])
                    },
                    onDrag: function(e, t) {
                        s.dragVertex.apply(s, [e, t])
                    },
                    onComplete: function(e) {
                        s.dragComplete.apply(s, [e])
                    },
                    featureCallbacks: {
                        over: function(e) {
                            e._sketch && s.dragControl.overFeature.apply(s.dragControl, [e])
                        },
                        click: function(e) {
                            s.clickOnDragPoint.apply(s, [e])
                        }
                    },
                    dragCallbacks: {}
                };
                this.dragControl = new OpenLayers.Control.DragFeature(this.sketchLayer, r),
                    this.dragControl.handlers.feature.geometryTypeMatches = function(e) {
                        return OpenLayers.Handler.Feature.prototype.geometryTypeMatches.apply(this, arguments) && !e.uneditable
                    };
                var l = {
                    keydown: this.handleKeypress
                };
                this.handlers = {
                        keyboard: new OpenLayers.Handler.Keyboard(this, l)
                    },
                    this.snapControl = new a({
                        layer: this.sketchLayer,
                        targets: [{
                            layer: this.nodeLayer
                        }, {
                            layer: this.segmentLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.outOfScope && e.model.isGeometryEditable()
                                }
                            }
                        }]
                    });
                var u = function(e) {
                    this.dragControl.feature && this.dragControl.feature._sketchNode && e.point.translate(e.point.x, e.point.y)
                };
                this.snapControl.events.on({
                    unsnap: u,
                    snap: u,
                    scope: this
                })
            },
            destroy: function() {
                this.dragPointsPaddingVertices = null,
                    this.segmentLayer = null,
                    this.nodeLayer = null,
                    this.sketchLayer = null,
                    this.dragControl.destroy(),
                    this.snapControl.destroy(),
                    this.bridgeCreator.destroy(),
                    this.nodeCreator.destroy(),
                    this.featureHover.destroy(),
                    this.standalone || this.selectControl.destroy(),
                    W.accelerators.events.unregister("toggleMultipleSelection", this, this.toggleMultipleSelection),
                    OpenLayers.Control.prototype.destroy.apply(this, []),
                    this.featureHover = null,
                    this.snapControl = null
            },
            activate: function() {
                return (this.standalone || this.selectControl.activate()) && this.handlers.keyboard.activate() && this.featureHover.activate() && this.snapControl.activate() && OpenLayers.Control.prototype.activate.apply(this, arguments)
            },
            deactivate: function() {
                var e = !1;
                return OpenLayers.Control.prototype.deactivate.apply(this, arguments) && (this.removeAllFeatures(this.dragHandles),
                        this.removeAllFeatures(this.virtualDragHandles),
                        this.dragHandles = [],
                        this.dragControl.deactivate(),
                        this.handlers.keyboard.deactivate(),
                        this.featureHover.deactivate(),
                        this.snapControl.deactivate(),
                        e = !0),
                    e
            },
            removeAllFeatures: function(e) {
                Object.forEach(e, function(e, t) {
                    this.sketchLayer.removeFeatures(t, {
                        silent: !0
                    })
                }, this)
            },
            addAllFeatures: function(e) {
                Object.forEach(e, function(e, t) {
                    this.sketchLayer.addFeatures(t, {
                        silent: !0
                    })
                }, this)
            },
            selectFeature: function() {
                this.features.forEach(function(e) {
                        this.drawSegmentDraggingHandles(e)
                    }, this),
                    this.mode = OpenLayers.Control.ModifyFeature.RESHAPE,
                    this.resetVertices(),
                    this.dragControl.activate()
            },
            unselectFeature: function(e) {
                e || (e = this.features),
                    e instanceof Array || (e = [e]),
                    e.clone().forEach(function(e) {
                        e._highlightPlaceHolder && (e = e.parent),
                            this.features.contains(e) && (OpenLayers.Util.removeItem(this.features, e),
                                e.layer && (e.layer.events.triggerEvent("afterfeaturemodified", {
                                        feature: e,
                                        modified: OpenLayers.Util.indexOf(this.modified, e) >= 0
                                    }),
                                    e._sketch && (delete e._sketch,
                                        e.layer.drawFeature(e))),
                                OpenLayers.Util.removeItem(this.modified, e))
                    }, this),
                    0 === this.features.length && this.dragControl.deactivate(),
                    this.resetVertices()
            },
            clickOnDragPoint: function(e) {},
            dragStart: function(e, t) {
                this.onModificationStart(e),
                    this.directionArrows[e.getID && e.getID()] && this.sketchLayer.removeFeatures(this.directionArrows[e.model.getID()], {
                        silent: !0
                    }),
                    OpenLayers.Util.indexOf(this.features, e) < 0 && !e.virtual && e !== this.dragHandle && e !== this.radiusHandle && (null !== this.geometryTypes && -1 === OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) || (this.dragControl.overFeature.apply(this.dragControl, [e]),
                            this.dragControl.lastPixel = t,
                            this.dragControl.handlers.drag.started = !0,
                            this.dragControl.handlers.drag.start = t,
                            this.dragControl.handlers.drag.last = t),
                        e.parents.forEach(function(e) {
                            e._sketch = !0
                        }))
            },
            dragVertex: function(e, t) {
                if (this.modified = !0,
                    e.parent && "OpenLayers.Geometry.Point" === e.parent.geometry.CLASS_NAME)
                    this.sketchLayer.events.triggerEvent("vertexmodified", {
                        vertex: e.geometry,
                        feature: e,
                        pixel: t
                    });
                else if (e._index) {
                    var i = e.parent.model.getID(),
                        n = e.parentGeom;
                    n || (n = e.parent.geometry),
                        n.addComponent(e.geometry, e._index),
                        delete e._index,
                        OpenLayers.Util.removeItem(this.virtualDragHandles[i], e),
                        this.dragHandles[i].push(e)
                } else
                    e === this.dragHandle ? (this.removeAllFeatures(this.dragHandles),
                        this.dragHandles = {},
                        this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                                silent: !0
                            }),
                            this.radiusHandle = null)) : e !== this.radiusHandle && this.sketchLayer.events.triggerEvent("vertexmodified", {
                        vertex: e.geometry,
                        feature: e.parent,
                        pixel: t
                    });
                (0,
                    s.default)(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                        this.virtualDragHandles = []),
                    e.parents.forEach(function(e) {
                        e.layer && e.layer.drawFeature(e, this.draggingIntent)
                    }, this),
                    this.sketchLayer.drawFeature(e)
            },
            dragComplete: function(e) {
                this.onModificationComplete(e),
                    this.sketchLayer.events.triggerEvent("featuremodified", {
                        feature: e
                    });
                for (var t = 0, i = e.parents.length; t < i; t++) {
                    var n = e.parents[t];
                    delete n._sketch,
                        n.layer && (n.layer.drawFeature(e.parents[t], this.isSelected(e.parents[t]) ? this.selectControl.selectRenderIntent : "default"),
                            n.layer.events.triggerEvent("featuremodified", {
                                feature: e.parents[t]
                            }))
                }
                this.resetVertices(),
                    e.parent && (this.sketchLayer.removeFeatures(this.directionArrows[e.parent.model.getID()], {
                            silent: !0
                        }),
                        this.drawSegmentDraggingHandles(e.parent))
            },
            drawSegmentDraggingHandles: function(e) {
                e && (this.sketchLayer.addFeatures(this.virtualDragHandles[e.model.getID()] || []),
                    this.sketchLayer.addFeatures(this.dragHandles[e.model.getID()] || []))
            },
            isSelected: function(e) {
                return e.layer && OpenLayers.Util.indexOf(e.layer.selectedFeatures, e) >= 0
            },
            resetVertices: function() {
                if (this.dragControl.feature && this.dragControl.outFeature(this.dragControl.feature),
                    (0,
                        s.default)(this.dragHandles).length > 0 && (this.removeAllFeatures(this.dragHandles),
                        this.dragHandles = {}),
                    (0,
                        s.default)(this.virtualDragHandles).length > 0 && (this.removeAllFeatures(this.virtualDragHandles),
                        this.virtualDragHandles = {}),
                    (0,
                        s.default)(this.nodeDragHandles).length > 0 && (this.removeAllFeatures(this.nodeDragHandles),
                        this.nodeDragHandles = {}),
                    (0,
                        s.default)(this.directionArrows).length > 0 && (this.removeAllFeatures(this.directionArrows),
                        this.directionArrows = {}),
                    this.dragPointsPaddingVertices.length > 0 && (this.sketchLayer.removeFeatures(this.dragPointsPaddingVertices, {
                            silent: !0
                        }),
                        this.dragPointsPaddingVertices = []),
                    this.dragHandle && (this.sketchLayer.destroyFeatures([this.dragHandle, this.dragBoundry], {
                            silent: !0
                        }),
                        this.dragHandle = null,
                        this.dragBoundry = null),
                    this.radiusHandle && (this.sketchLayer.destroyFeatures([this.radiusHandle], {
                            silent: !0
                        }),
                        this.radiusHandle = null),
                    this.features.length > 0) {
                    var e = this.selectControl.handlers.feature.lastFeature;
                    e && !e.layer && (this.selectControl.handlers.feature.lastFeature = this.features[0]),
                        this.mode & OpenLayers.Control.ModifyFeature.DRAG && this.collectDragHandle(),
                        this.mode & (OpenLayers.Control.ModifyFeature.ROTATE | OpenLayers.Control.ModifyFeature.RESIZE) && this.collectRadiusHandle(),
                        this.mode & OpenLayers.Control.ModifyFeature.RESHAPE && (this.mode & OpenLayers.Control.ModifyFeature.RESIZE || this.collectVertices())
                }
                this.bridgeCreator.drawBridgeMarker(),
                    this.nodeCreator.drawNodeMarker()
            },
            toggleMultipleSelection: function() {
                this.selectControl.multiple = !this.selectControl.multiple,
                    this.selectControl.clickout = !this.selectControl.clickout
            },
            handleKeypress: function(e) {
                var t = e.keyCode;
                if (this.features.length > 0 && -1 !== OpenLayers.Util.indexOf(this.deleteCodes, t)) {
                    var i = this.dragControl.feature;
                    i && i._dragPoint && !this.dragControl.handlers.drag.dragging && i.parent && (this.onModificationStart(i),
                        i.parentGeom ? i.parentGeom.removeComponent(i.geometry) : i.parent.geometry.removeComponent(i.geometry),
                        i.parent.layer.drawFeature(i.parent, this.selectControl.renderIntent),
                        this.onModificationComplete(i),
                        this.sketchLayer.events.triggerEvent("featuremodified", {
                            feature: i
                        }))
                }
            },
            createGeometryCollection: function() {
                for (var e = [], t = 0, i = this.features.length; t < i; t++)
                    e.push(this.features[t].geometry);
                return new OpenLayers.Geometry.Collection(e)
            },
            collectVertices: function() {
                this.dragHandles = {},
                    this.virtualDragHandles = {},
                    this.nodeDragHandles = {},
                    this.directionArrows = {},
                    this.dragPointsPaddingVertices = [],
                    this.collectVerticesFromFeatures(this.features, this.dragHandles, this.virtualDragHandles, this.nodeDragHandles),
                    this.sketchLayer.addFeatures(this.dragPointsPaddingVertices, {
                        silent: !0
                    }),
                    this.addAllFeatures(this.directionArrows),
                    this.addAllFeatures(this.nodeDragHandles)
            },
            collectComponentVertices: function(e, t, i) {
                var n = void 0,
                    s = void 0,
                    r = void 0,
                    o = void 0,
                    a = e.geometry;
                if ("OpenLayers.Geometry.Point" === a.CLASS_NAME)
                    s = new l([a], null, this.verticesStyle),
                    s._sketch = !0,
                    s.parent = e,
                    t.push(s);
                else {
                    var u = a.components.length;
                    for ("OpenLayers.Geometry.LinearRing" === a.CLASS_NAME && (u -= 1),
                        n = 0; n < u; ++n)
                        r = a.components[n],
                        "OpenLayers.Geometry.Point" === r.CLASS_NAME ? (s = new OL.Feature.Vector(r, null, this.verticesStyle),
                            s._sketch = !0,
                            s.renderIntent = "sketch",
                            s.parent = e,
                            t.push(s)) : this.collectComponentVertices(s, t, i);
                    if ("OpenLayers.Geometry.MultiPoint" !== a.CLASS_NAME)
                        for (n = 0,
                            o = a.components.length; n < o - 1; ++n) {
                            var d = a.components[n],
                                c = a.components[n + 1];
                            if ("OpenLayers.Geometry.Point" === d.CLASS_NAME && "OpenLayers.Geometry.Point" === c.CLASS_NAME) {
                                var h = (d.x + c.x) / 2,
                                    p = (d.y + c.y) / 2,
                                    f = new OL.Feature.Vector(new OpenLayers.Geometry.Point(h, p), null, this.virtualStyle);
                                f.parent = e,
                                    f._index = n + 1,
                                    f._sketch = !0,
                                    f.virtual = !0,
                                    i.push(f)
                            }
                        }
                }
            },
            collectVerticesFromFeatures: function(e, t, i) {
                for (var n = 0, s = e.length; n < s; n++)
                    this.collectComponentVertices(e[n], t, i)
            },
            setMap: function(e) {
                this.standalone || this.selectControl.setMap(e),
                    this.dragControl.setMap(e),
                    this.featureHover.setMap(e),
                    this.snapControl.setMap(e),
                    e.events.on({
                        zoomend: function() {
                            1 === this.features.length && this.features.first().type === u.SPEED_CAMERA && this.resetVertices()
                        },
                        scope: this
                    }),
                    OpenLayers.Control.prototype.setMap.apply(this, arguments)
            },
            onModificationStart: function(e) {},
            onModificationComplete: function(e) {},
            CLASS_NAME: "Waze.Control.ModifyFeature"
        });
    e.exports = h
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class(OpenLayers.Handler, {
        EVENTMAP: {
            mousemove: { in: "over",
                out: "out"
            },
            click: { in: "click"
            },
            dblclick: { in: "dblclick",
                out: null
            }
        },
        feature: null,
        lastFeature: null,
        geometryTypes: null,
        initialize: function(e, t, i, n) {
            OpenLayers.Handler.prototype.initialize.apply(this, [e, i, n]),
                this.layer = t
        },
        mousemove: function(e) {
            return !this.callbacks.over && !this.callbacks.out || (this.handle(e), !0)
        },
        click: function(e) {
            return !this.handle(e) || !this.stopClick
        },
        geometryTypeMatches: function(e) {
            return null === this.geometryTypes || OpenLayers.Util.indexOf(this.geometryTypes, e.geometry.CLASS_NAME) > -1
        },
        handle: function(e) {
            this.feature && !this.feature.layer && (this.feature = null);
            var t = e.type,
                i = !1,
                n = Boolean(this.feature);
            if (this.feature = this.layer.getFeatureFromEvent(e),
                this.feature && !this.feature.layer && (this.feature = null),
                this.lastFeature && !this.lastFeature.layer && (this.lastFeature = null),
                this.feature) {
                var s = this.feature !== this.lastFeature,
                    r = s && this.feature._virtualParent === this.lastFeature,
                    o = "click" === t || "dblclick" === t || "touchstart" === t;
                this.geometryTypeMatches(this.feature) && this.feature.layer && !this.feature.layer.featuresNonSelectable ? (n && s && !r ? (this.lastFeature && this.triggerCallback(t, "out", [this.lastFeature]),
                        this.triggerCallback(t, "in", [this.feature])) : n && !o || this.triggerCallback(t, "in", [this.feature]),
                    this.lastFeature = this.feature,
                    i = !0) : (this.lastFeature && n && s && this.triggerCallback(t, "out", [this.lastFeature]),
                    this.feature = null)
            } else
                this.lastFeature && n && this.triggerCallback(t, "out", [this.lastFeature]);
            return i
        },
        triggerCallback: function(e, t, i) {
            var n = this.EVENTMAP[e][t];
            n && this.callback(n, i)
        },
        activate: function() {
            var e = !1;
            return OpenLayers.Handler.prototype.activate.apply(this, arguments) && (this.moveLayerToTop(),
                    this.map.events.on({
                        removelayer: this.handleMapEvents,
                        changelayer: this.handleMapEvents,
                        scope: this
                    }),
                    e = !0),
                e
        },
        deactivate: function() {
            var e = !1;
            return OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.moveLayerBack(),
                    this.feature = null,
                    this.lastFeature = null,
                    this.down = null,
                    this.up = null,
                    this.map.events.un({
                        removelayer: this.handleMapEvents,
                        changelayer: this.handleMapEvents,
                        scope: this
                    }),
                    e = !0),
                e
        },
        handleMapEvents: function(e) {
            e.property && "order" !== e.property || this.moveLayerToTop()
        },
        moveLayerToTop: function() {
            var e = Math.max(this.map.Z_INDEX_BASE.Feature - 1, this.layer.getZIndex()) + 1;
            this.layer.setZIndex(e)
        },
        moveLayerBack: function() {
            var e = this.layer.getZIndex() - 1;
            e >= this.map.Z_INDEX_BASE.Feature ? this.layer.setZIndex(e) : this.map.setLayerZIndex(this.layer, this.map.getLayerIndex(this.layer))
        },
        CLASS_NAME: "Waze.Handler.Feature"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class(OpenLayers.Geometry.Point, {
        points: null,
        initialize: function(e) {
            OpenLayers.Geometry.Point.prototype.initialize.apply(this, [e[0].x, e[0].y]),
                this.points = e
        },
        clone: function() {
            return new n(this.points)
        },
        calculateBounds: function() {
            OpenLayers.Geometry.Point.prototype.calculateBounds.apply(this);
            for (var e = 0; e < this.points.length; e++)
                this.points[e].calculateBounds()
        },
        move: function(e, t) {
            OpenLayers.Geometry.Point.prototype.move.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].move(e, t)
        },
        translate: function(e, t) {
            this.x = e,
                this.y = t,
                this.clearBounds(),
                this.points.forEach(function(i) {
                    i.x = e,
                        i.y = t,
                        i.clearBounds()
                })
        },
        rotate: function(e, t) {
            OpenLayers.Geometry.Point.prototype.rotate.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].rotate(e, t)
        },
        resize: function(e, t, i) {
            OpenLayers.Geometry.Point.prototype.resize.apply(this, arguments);
            for (var n = 0; n < this.points.length; n++)
                this.points[n].resize(e, t, i)
        },
        transform: function(e, t) {
            OpenLayers.Geometry.Point.prototype.transform.apply(this, arguments);
            for (var i = 0; i < this.points.length; i++)
                this.points[i].transform(e, t)
        }
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = i(214),
        u = n(l),
        d = i(19),
        c = n(d),
        h = i(76),
        p = n(h),
        f = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._segments = t,
                    this._drawingContext = i,
                    this._dataModel = n,
                    this._splits = this._generateSplits(this._segments)
            }
            return (0,
                    a.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "_onMarkerClicked",
                    value: function() {
                        this._dataModel.actionManager.add(new u.default(this._segments, this._splits))
                    }
                }, {
                    key: "_generateSplits",
                    value: function(e) {
                        if (2 !== e.length)
                            return null;
                        var t = e[0],
                            i = e[1];
                        return t.geometry.bounds && i.geometry.bounds ? t.attributes.level !== i.attributes.level ? null : t.geometry.bounds.intersectsBounds(i.geometry.bounds) ? t.geometry.split(i.geometry, {
                            edge: !0,
                            mutual: !0
                        }) : null : null
                    }
                }, {
                    key: "drawNodeMarker",
                    value: function() {
                        if (this._drawingContext.clear(),
                            null !== this._splits && 2 === this._splits.first().length) {
                            if (this._segments.every(function(e) {
                                    return e.isAllowed(p.default.Segments.EDIT_GEOMETRY)
                                })) {
                                var e = this._splits.last().last().components.first(),
                                    t = new OL.Marker(new OL.LonLat(e.x, e.y), new c.default("add-junction"));
                                t.events.register("click", this, this._onMarkerClicked),
                                    this._drawingContext.addMarkers([t])
                            }
                        }
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = i(142),
        u = n(l),
        d = i(19),
        c = n(d),
        h = i(76),
        p = n(h),
        f = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._segments = t,
                    this._node = this._findConnectingNode(this._segments),
                    this._drawingContext = i,
                    this._dataModel = n
            }
            return (0,
                    a.default)(e, [{
                    key: "destroy",
                    value: function() {
                        this._drawingContext.destroy()
                    }
                }, {
                    key: "_onMarkerClicked",
                    value: function() {
                        this._dataModel.actionManager.add(new u.default(this._segments, this._node))
                    }
                }, {
                    key: "_findConnectingNode",
                    value: function(e) {
                        if (2 !== e.length)
                            return null;
                        var t = e[0].getFromNode();
                        return t ? (e[1].isConnectedToNode(t) || (t = e[0].getToNode(),
                                e[1].isConnectedToNode(t) || (t = null)),
                            t) : null
                    }
                }, {
                    key: "drawBridgeMarker",
                    value: function() {
                        if (this._drawingContext.clear(),
                            null !== this._node && this._node.areSegmentsBridgable(this._segments)) {
                            if (this._segments.every(function(e) {
                                    return e.isAllowed(p.default.Segments.EDIT_GEOMETRY)
                                })) {
                                var e = new OL.Marker(new OL.LonLat(this._node.geometry.x, this._node.geometry.y), new c.default("add-bridge"));
                                e.events.register("click", this, this._onMarkerClicked),
                                    this._drawingContext.addMarkers([e])
                            }
                        }
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-restricted12d401d9920318fa515cfbd84b8bd91c.png"
}, function(e, t, i) {
    e.exports = i.p + "img/two-way-restrictedd655660f966eee861e57842c3b34c64f.png"
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(30),
        r = n(s),
        o = i(29),
        a = n(o),
        l = i(19),
        u = n(l),
        d = i(20),
        c = n(d),
        h = i(4),
        p = n(h),
        f = i(35),
        g = n(f),
        m = i(700),
        v = i(711),
        _ = n(v),
        y = OpenLayers.Class(OpenLayers.Control, r.default, {
            showArrows: !0,
            showAllArrows: !1,
            offsetArrows: !1,
            model: null,
            conLayer: null,
            selectionManager: null,
            segment: null,
            arrowHeight: 40,
            minimalArrowAngle: 25,
            arrowDistanceFromNodeInPixels: 35,
            uturnArrowOffsetInPixels: 18,
            maxScaleForDisplay: 1e4,
            uturnMaxScale: 3385.5001277302295,
            uturnMinSegmentLength: 75,
            eventsRegistered: !1,
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    r.default.prototype.initialize.apply(this, [e]),
                    this.model = W.model,
                    this.conLayer = new OL.Layer.Markers("Node Connections"),
                    this.selectionManager = W.selectionManager,
                    W.accelerators.events.on({
                        spreadArrows: this.toggleArrowOffset,
                        hideArrows: this.toggleArrows,
                        showAllArrows: this.toggleShowAllArrows,
                        scope: this
                    })
            },
            setMap: function() {
                OpenLayers.Control.prototype.setMap.apply(this, arguments),
                    this.map.addLayer(this.conLayer)
            },
            toggleShowAllArrows: function() {
                this.enabled && (this.showAllArrows = !this.showAllArrows,
                    this.resetConnections(),
                    this.toggleEvents())
            },
            isActive: function() {
                return null !== this.segment || this.showAllArrows
            },
            toggleEvents: function() {
                this.isActive() ? this.registerEvents() : this.unregisterEvents()
            },
            toggleArrowOffset: function() {
                this.offsetArrows = !this.offsetArrows,
                    this.resetConnections()
            },
            toggleArrows: function() {
                this.showArrows = !this.showArrows,
                    this.conLayer.markers.forEach(function(e) {
                        e.icon.$div.toggleClass("disabled", !this.showArrows)
                    }, this)
            },
            destroy: function() {
                this.destroyConnections(),
                    W.accelerators.events.un({
                        spreadArrows: this.toggleArrowOffset,
                        hideArrows: this.toggleArrows
                    })
            },
            onArrowClicked: function(e) {
                var t = $(e.target),
                    i = t.hasClass("arrow") ? t : t.parents(".arrow"),
                    n = i.data("model"),
                    s = this.model.getTurnGraph();
                if (n.modifiable)
                    if (n.locked) {
                        var r = s.getTurnThroughNode(n.node, n.fromSeg, n.toSeg),
                            o = r.getTurnData();
                        o = o.withToggledState(!o.isAllowed()),
                            r = r.withTurnData(o);
                        var l = new a.default(s, r);
                        this.model.actionManager.add(l)
                    } else
                        n.fromSeg.lockTurns(n.node);
                return !1
            },
            onRestrictionsClicked: function(e) {
                e.stopPropagation();
                var t = this._getTurnModelFromEvent(e),
                    i = this.model.getTurnGraph().getTurnThroughNode(t.node, t.fromSeg, t.toSeg);
                W.app.layout.getRegion("dialogRegion").show(new m.TurnRestrictionsMainView({
                    turn: i,
                    dataModel: this.model,
                    canEditRestrictions: t.modifiable
                }))
            },
            onInstructionOverrideClicked: function(e) {
                e.stopPropagation();
                var t = this._getTurnModelFromEvent(e),
                    i = this.model.getTurnGraph(),
                    n = i.getTurnThroughNode(t.node, t.fromSeg, t.toSeg);
                W.app.layout.getRegion("dialogRegion").show(new _.default({
                    turn: n,
                    dataModel: this.model,
                    editable: t.modifiable
                }))
            },
            _getTurnModelFromEvent: function(e) {
                return $(e.target).parents(".arrow").data("model")
            },
            activate: function() {
                OpenLayers.Control.prototype.activate.apply(this),
                    this.selectionManager.events.register("selectionchanged", this, this.onSelectionChanged),
                    $(this.conLayer.div).on("click", ".arrow", $.proxy(this.onArrowClicked, this)),
                    $(this.conLayer.div).on("click", ".restrictions", $.proxy(this.onRestrictionsClicked, this)),
                    $(this.conLayer.div).on("click", ".instruction-override-button", $.proxy(this.onInstructionOverrideClicked, this))
            },
            deactivate: function() {
                this.unselect(),
                    this.selectionManager.events.unregister("selectionchanged", this, this.onSelectionChanged),
                    $(this.conLayer.div).off("click", ".arrow", $.proxy(this.onArrowClicked, this)),
                    OpenLayers.Control.prototype.deactivate.apply(this)
            },
            onSelectionChanged: function(e) {
                var t = e.selected || [];
                t.every(function(e) {
                    return e.model.type === p.default.SEGMENT
                }) && this.select(1 === t.length ? t[0].model : null)
            },
            select: function(e) {
                e !== this.segment && (this.segment = e,
                    this.resetConnections(),
                    this.toggleEvents())
            },
            unselect: function() {
                this.select(null)
            },
            registerEvents: function(e) {
                this.eventsRegistered || (this.model.getTurnGraph().on("change", this.onTurnChanged, this),
                    this.model.segments.on(c.default.CHANGED, this.onSegmentsChanged, this),
                    this.model.segments.on(c.default.REMOVED, this.onSegmentsRemoved, this),
                    this.model.nodes.on(c.default.CHANGED, this.onNodesChanged, this),
                    this.map.events.register("zoomend", this, this.zoomChanged),
                    this.eventsRegistered = !0)
            },
            unregisterEvents: function(e) {
                this.eventsRegistered && (this.model.getTurnGraph().off("change", this.onTurnChanged, this),
                    this.model.segments.off(c.default.CHANGED, this.onSegmentsChanged, this),
                    this.model.segments.off(c.default.REMOVED, this.onSegmentsRemoved, this),
                    this.model.nodes.off(c.default.CHANGED, this.onNodesChanged, this),
                    this.map.events.unregister("zoomend", this, this.zoomChanged),
                    this.eventsRegistered = !1)
            },
            onSegmentsChanged: function(e) {
                (null !== this.segment && OpenLayers.Util.indexOf(e, this.segment) >= 0 || this.showAllArrows) && this.resetConnections()
            },
            onSegmentsRemoved: function(e) {
                null !== this.segment && OpenLayers.Util.indexOf(e, this.segment) >= 0 && this.unselect()
            },
            onNodesChanged: function(e) {
                this.resetConnections()
            },
            onTurnChanged: function(e) {
                e.getFromVertex().getSegmentID() !== this.segment.getID() && e.getToVertex().getSegmentID() !== this.segment.getID() || this.resetConnections()
            },
            destroyConnections: function() {
                this.conLayer.clearMarkers()
            },
            isConnectable: function(e) {
                return e.isDrivable()
            },
            resetConnections: function() {
                var e = [],
                    t = void 0,
                    i = this;
                this.destroyConnections(),
                    this.conLayer.map.getScale() > this.maxScaleForDisplay || (this.showAllArrows ? e = this.model.segments.getObjectArray(function(e) {
                            return e.state !== OpenLayers.State.DELETE && e.geometry.bounds.intersectsBounds(i.map.getExtent())
                        }) : null !== this.segment && (e = [this.segment]),
                        e.isEmpty() || e.filter(function(e) {
                            return i.isConnectable(e)
                        }).forEach(function(e) {
                            ["fromNodeID", "toNodeID"].forEach(function(i) {
                                e.attributes[i] && (t = this.model.nodes.get(e.attributes[i])) && t.attributes.segIDs.length > 1 && this.createNodeConnections(t, e)
                            }, this)
                        }, this))
            },
            createNodeConnections: function(e, t) {
                var i = void 0,
                    n = void 0,
                    s = void 0,
                    r = void 0,
                    o = void 0,
                    a = void 0,
                    l = void 0,
                    d = this,
                    c = t.areTurnsLocked(e),
                    h = null,
                    p = null,
                    f = e.getAngleToSegment(t),
                    g = t.geometry.getLength() / this.map.getResolution(),
                    m = e.attributes.segIDs.reduce(function(i, n) {
                        if ((s = d.model.segments.get(n)) && d.isConnectable(s) && e.isTurnAllowedBySegDirections(t, s)) {
                            if (l = s.getID() === t.getID(),
                                o = e.getAngleToSegment(s), !l) {
                                var r = Math.abs(f - o);
                                r > 180 && r <= 360 && (r = 360 - r),
                                    r < 90 && (e.getDirectionBetweenSegments(t, s) ? (null === h || r < h) && (h = r) : (null === p || r < p) && (p = r))
                            }
                            i.push([s, o])
                        }
                        return i
                    }, []);
                if (!m.isEmpty()) {
                    for (m.sort(function(e, t) {
                            return e.last() - t.last()
                        }),
                        r = 0,
                        a = 1 === m.length ? Number.MAX_VALUE : m.last().last(),
                        i = 0; i < m.length; i++)
                        n = m[i],
                        o = Math.abs(n.last() - a),
                        o > 180 && o <= 360 && (o = 360 - o),
                        o < this.minimalArrowAngle && (i !== m.length - 1 || 2 !== m.length) ? r++ : (r = 0,
                            a = n.last()),
                        this.createConnectionFeature(e, t, n.first(), n.last(), r, c, h, p, g),
                        a = n.last();
                    if (!c && !this.showAllArrows) {
                        var v = e.geometry,
                            _ = new OpenLayers.Marker(new OL.LonLat(v.x, v.y), new u.default("unlocked-badge"));
                        this.conLayer.addMarker(_)
                    }
                }
            },
            createConnectionFeature: function(e, t, i, n, s, r, o, a, l) {
                var d = t.isTurnAllowed(i, e),
                    c = t.getID() === i.getID(),
                    h = void 0,
                    p = g.default.for(t, e),
                    f = g.default.for(i, e).getOpposite(),
                    m = this.model.getTurnGraph().getTurn(p, f),
                    v = m.isTimeRestricted(),
                    _ = m.isDifficult();
                if (!(this.showAllArrows && (d && !v || c) || c && (this.conLayer.map.getScale() > this.uturnMaxScale || l <= this.uturnMinSegmentLength))) {
                    h = t.attributes.toNodeID === e.getID() ? t.canEditToConnections() : t.canEditFromConnections(),
                        this.offsetArrows && !c || (s = 0),
                        c && (this.model.isLeftHand && null !== a && (s = (90 - a) / 90),
                            this.model.isLeftHand || null === o || (s = (90 - o) / 90));
                    var y = this.conLayer.map.getResolution(),
                        b = (this.arrowDistanceFromNodeInPixels + this.arrowHeight * s) * y,
                        E = (450 - n) % 360,
                        w = n.toRad(),
                        S = new OpenLayers.LonLat(e.geometry.x + Math.cos(w) * b, e.geometry.y + Math.sin(w) * b),
                        M = new OpenLayers.Marker(S, new u.default("connection-arrow")),
                        C = $("<div />"),
                        T = $("<div/>").addClass("button-container").appendTo(C);
                    if (c) {
                        var A = w - Math.PI / 2,
                            I = this.uturnArrowOffsetInPixels * y;
                        this.model.isLeftHand && (A += Math.PI,
                                C.addClass("lefthand")),
                            S.lon += Math.cos(A) * I,
                            S.lat += Math.sin(A) * I
                    }
                    if (C.addClass("arrow").css("transform", "rotate(" + E + "deg)"),
                        C.toggleClass("difficult", _),
                        C.toggleClass("uturn", c),
                        d) {
                        C.addClass("open"),
                            W.Config.restrictions.allowEditing && r && $("<div />").addClass("restrictions").addClass("arrow-button").addClass("waze-icon-clock").css("transform", "rotate(" + -E + "deg)").appendTo(T);
                        var O = $("<div />").addClass("instruction-override-button").addClass("fa").addClass("fa-volume-up").addClass("arrow-button").css("transform", "rotate(" + -E + "deg)").appendTo(T);
                        m.getTurnData().hasInstructionOpcode() && O.addClass("has-opcode"),
                            v && (C.addClass("restricted"),
                                $("<div />").addClass("restriction-badge").appendTo(C).css("transform", "rotate(" + -E + "deg)"))
                    } else
                        C.addClass("closed"),
                        C.append($("<div />").addClass("closed-badge").css("transform", "rotate(" + -E + "deg)"));
                    this.showArrows || M.icon.$div.addClass("disabled"),
                        C.data("model", {
                            node: e,
                            fromSeg: t,
                            toSeg: i,
                            locked: r,
                            value: d,
                            modifiable: h
                        }),
                        C.appendTo(M.icon.$div),
                        this.conLayer.addMarker(M)
                }
            },
            zoomChanged: function() {
                this.resetConnections()
            },
            CLASS_NAME: "Waze.Control.EditNodeConnections"
        });
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(29),
        g = n(f),
        m = i(51),
        v = i(209),
        _ = i(104),
        y = i(219),
        b = i(710),
        E = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: ".modal-content"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this._dataModel = e.dataModel,
                            this._turn = e.turn,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._restrictions = this._turn.getTurnData().getRestrictions(),
                            this._viewHelpers = new _.TurnRestrictionViewHelpers({
                                turn: this._turn,
                                dataModel: this._dataModel
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemEdit",
                    value: function(e) {
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !1
                        })
                    }
                }, {
                    key: "onChildviewRestrictionItemDelete",
                    value: function(e) {
                        var t = this._restrictions.indexOf(e);
                        this._restrictions.splice(t, 1),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCancel",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditUpdate",
                    value: function(e, t) {
                        var i = this._restrictions.indexOf(e);
                        this._restrictions.splice(i, 1, t),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCreate",
                    value: function(e) {
                        this._restrictions.push(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryClose",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryCreate",
                    value: function() {
                        this._showCreateTurnRestrictionView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryApply",
                    value: function(e) {
                        this._updateIsTurnDifficult(e.isDifficult),
                            this._updateTurnGraph(),
                            this.destroy()
                    }
                }, {
                    key: "_showSummaryView",
                    value: function() {
                        var e = this._turn.getTurnData().withRestrictions(this._restrictions),
                            t = this._turn.withTurnData(e);
                        this.showChildView("contentRegion", new b.TurnRestrictionsSummaryView({
                            turn: t,
                            canEditRestrictions: this._canEditRestrictions,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            viewHelpers: this._viewHelpers
                        }))
                    }
                }, {
                    key: "_showEditView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.restriction,
                            i = e.isNewRestriction,
                            n = void 0 !== i && i;
                        this.showChildView("contentRegion", new y.RestrictionEditView({
                            restriction: t,
                            isNewRestriction: n,
                            canEditRestrictions: this._canEditRestrictions,
                            canAddTollRestriction: !1,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            editingTitle: this._viewHelpers.getEditingTitle()
                        }))
                    }
                }, {
                    key: "_showCreateTurnRestrictionView",
                    value: function() {
                        var e = new v.TurnRestriction({
                            defaultType: m.RESTRICTION_TYPE.FREE
                        });
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !0
                        })
                    }
                }, {
                    key: "_updateIsTurnDifficult",
                    value: function(e) {
                        this._turn.isDifficult() !== e && (e ? this._restrictions.push(new v.TurnRestriction({
                            defaultType: m.RESTRICTION_TYPE.DIFFICULT
                        })) : this._restrictions = this._restrictions.filter(function(e) {
                            return !e.isDifficult()
                        }))
                    }
                }, {
                    key: "_updateTurnGraph",
                    value: function() {
                        var e = this._turn.getTurnData().withRestrictions(this._restrictions),
                            t = this._turn.withTurnData(e);
                        this._dataModel.actionManager.add(new g.default(this._dataModel.getTurnGraph(), t))
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            TurnRestrictionsMainView: E
        },
        e.exports = t.default
}, function(e, t, i) {
    e.exports = {
        default: i(702),
        __esModule: !0
    }
}, function(e, t, i) {
    i(69),
        i(703),
        e.exports = i(14).Array.from
}, function(e, t, i) {
    "use strict";
    var n = i(56),
        s = i(28),
        r = i(72),
        o = i(177),
        a = i(178),
        l = i(117),
        u = i(704),
        d = i(126);
    s(s.S + s.F * !i(180)(function(e) {
        Array.from(e)
    }), "Array", {
        from: function(e) {
            var t, i, s, c, h = r(e),
                p = "function" == typeof this ? this : Array,
                f = arguments.length,
                g = f > 1 ? arguments[1] : void 0,
                m = void 0 !== g,
                v = 0,
                _ = d(h);
            if (m && (g = n(g, f > 2 ? arguments[2] : void 0, 2)),
                void 0 == _ || p == Array && a(_))
                for (t = l(h.length),
                    i = new p(t); t > v; v++)
                    u(i, v, m ? g(h[v], v) : h[v]);
            else
                for (c = _.call(h),
                    i = new p; !(s = c.next()).done; v++)
                    u(i, v, m ? o(c, g, [s.value, v], !0) : s.value);
            return i.length = v,
                i
        }
    })
}, function(e, t, i) {
    "use strict";
    var n = i(31),
        s = i(70);
    e.exports = function(e, t, i) {
        t in e ? n.f(e, t, s(0, i)) : e[t] = i
    }
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "template",
                    value: function(e) {
                        return e.message
                    }
                }, {
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "restriction-validation-error"
                    }
                }]),
                t
        }(Marionette.View),
        g = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childView",
                    value: function() {
                        return f
                    }
                }]),
                t
        }(Marionette.CollectionView),
        m = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                errorMessages: []
                            },
                            t = e.errorMessages.map(function(e) {
                                return new Backbone.Model({
                                    message: e
                                })
                            });
                        this.collection = new Backbone.Collection(t)
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.showChildView("collectionRegion", new g({
                            collection: this.collection
                        }))
                    }
                }, {
                    key: "isValid",
                    value: function() {
                        return 0 === this.collection.length
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restriction_edit_validation"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            RestrictionEditValidationView: m
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(39),
        v = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "getSegmentData",
                    value: function() {
                        var e = this.attributes;
                        return {
                            laneType: e.laneType,
                            disposition: e.disposition
                        }
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            disposition: e.getDisposition(),
                            laneType: e.getLaneType()
                        })
                    }
                }]),
                t
        }(Backbone.Model),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=laneType]": {
                                observe: "laneType",
                                selectOptions: {
                                    collection: "this._laneTypeOptions",
                                    defaultOption: {
                                        value: null,
                                        label: I18n.t("restrictions.editing.segment.laneType.NONE")
                                    }
                                }
                            },
                            "[name=disposition]": {
                                observe: "disposition",
                                selectOptions: {
                                    collection: "this._dispositionOptions"
                                }
                            },
                            select: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._laneTypeOptions = this._getLaneTypeOptions(),
                            this._dispositionOptions = this._getDispositionOptions()
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.getSegmentData()
                    }
                }, {
                    key: "_getLaneTypeOptions",
                    value: function() {
                        var e = (0,
                            r.default)(m.RESTRICTION_SEGMENT_LANE_TYPE).map(function(e) {
                            return {
                                value: m.RESTRICTION_SEGMENT_LANE_TYPE[e],
                                label: I18n.t("restrictions.editing.segment.laneType." + e)
                            }
                        });
                        return _.sortBy(e, "label")
                    }
                }, {
                    key: "_getDispositionOptions",
                    value: function() {
                        return (0,
                            r.default)(m.RESTRICTION_SEGMENT_DISPOSITION).map(function(e) {
                            return {
                                value: m.RESTRICTION_SEGMENT_DISPOSITION[e],
                                label: I18n.t("restrictions.editing.segment.disposition." + e)
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restriction_edit_segment"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "segment-restriction-edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = v.for(e);
                        return r.set({
                                restrictionEditable: s
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            RestrictionEditSegmentView: y
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(17),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(18),
        u = n(l),
        d = i(5),
        c = n(d),
        h = i(1),
        p = n(h),
        f = i(2),
        g = n(f),
        m = i(7),
        v = n(m),
        _ = i(8),
        y = n(_),
        b = i(51),
        E = i(93),
        w = function(e) {
            function t() {
                return (0,
                        p.default)(this, t),
                    (0,
                        v.default)(this, (t.__proto__ || (0,
                        c.default)(t)).apply(this, arguments))
            }
            return (0,
                    y.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "getDriveProfileData",
                    value: function() {
                        return {
                            vehicleTypes: this.isAllVehicles() ? [] : this.attributes.vehicleTypes
                        }
                    }
                }, {
                    key: "isAllVehicles",
                    value: function() {
                        return this.attributes.isAllVehicles
                    }
                }, {
                    key: "hasVehicleTypes",
                    value: function() {
                        return this.attributes.vehicleTypes.length > 0
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.isAllVehicles() || this.hasVehicleTypes() || e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        return new t({
                            restrictionEditable: !1,
                            isAllVehicles: e.isAllVehicles(),
                            vehicleTypes: e.getVehicleTypes()
                        })
                    }
                }]),
                t
        }(Backbone.Model),
        S = function(e) {
            function t() {
                return (0,
                        p.default)(this, t),
                    (0,
                        v.default)(this, (t.__proto__ || (0,
                        c.default)(t)).apply(this, arguments))
            }
            return (0,
                    y.default)(t, e),
                (0,
                    g.default)(t, [{
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=isAllVehicles]": {
                                observe: "isAllVehicles",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".vehicle-type": {
                                observe: "vehicleTypes",
                                onGet: function(e) {
                                    return e.map(function(e) {
                                        return e.toString()
                                    })
                                },
                                onSet: function(e) {
                                    return e.map(function(e) {
                                        return parseInt(e, 10)
                                    })
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllVehicles", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                u.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return i || !n
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getVehicleTypes: function() {
                                return (0,
                                    a.default)(E.VEHICLE_TYPES).sort().map(function(e) {
                                    return {
                                        key: e,
                                        value: E.VEHICLE_TYPES[e]
                                    }
                                })
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return this.model.isAllVehicles() ? {
                            defaultType: b.RESTRICTION_TYPE.BLOCKED,
                            driveProfiles: {}
                        } : {
                            defaultType: b.RESTRICTION_TYPE.FREE,
                            driveProfiles: (0,
                                r.default)({}, b.RESTRICTION_TYPE.BLOCKED, [this.model.getDriveProfileData()])
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/drive_profile_blocked_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = e.getDriveProfileList(b.RESTRICTION_TYPE.BLOCKED),
                            o = r.getDriveProfiles(),
                            a = void 0;
                        if (0 === o.length)
                            a = new E.RestrictionDriveProfile;
                        else {
                            if (1 !== o.length)
                                throw new TypeError("Expected 1 driveProfile (got " + o.length + ")");
                            a = o[0]
                        }
                        var l = w.for(a);
                        return l.set({
                                restrictionEditable: s
                            }),
                            new t({
                                model: l
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            DriveProfileBlockedEditView: S,
            ViewModel: w
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(17),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(21),
        u = n(l),
        d = i(64),
        c = n(d),
        h = i(5),
        p = n(h),
        f = i(1),
        g = n(f),
        m = i(2),
        v = n(m),
        y = i(7),
        b = n(y),
        E = i(8),
        w = n(E),
        S = i(51),
        M = i(93),
        C = M.VEHICLE_TYPES.PRIVATE,
        T = function(e) {
            function t() {
                return (0,
                        g.default)(this, t),
                    (0,
                        b.default)(this, (t.__proto__ || (0,
                        p.default)(t)).apply(this, arguments))
            }
            return (0,
                    w.default)(t, e),
                (0,
                    v.default)(t, [{
                    key: "defaults",
                    value: function() {
                        return {
                            restrictionEditable: !1,
                            vehicleType: null,
                            numPassengers: null,
                            subscription: null
                        }
                    }
                }, {
                    key: "getDriveProfileData",
                    value: function() {
                        var e = this.attributes,
                            t = e.vehicleType,
                            i = e.numPassengers,
                            n = e.subscription,
                            s = {};
                        return null != t && (s.vehicleTypes = [t]),
                            null != i && (s.numPassengers = i),
                            null != n && (s.subscriptions = [n]),
                            s
                    }
                }, {
                    key: "hasVehicleType",
                    value: function() {
                        return null != this.attributes.vehicleType
                    }
                }, {
                    key: "hasNumPassengers",
                    value: function() {
                        var e = this.attributes.numPassengers;
                        return null != e && e > 0
                    }
                }, {
                    key: "hasSubscription",
                    value: function() {
                        return null != this.attributes.subscription
                    }
                }, {
                    key: "isBlank",
                    value: function() {
                        return !this.hasVehicleType() && !this.hasNumPassengers() && !this.hasSubscription()
                    }
                }, {
                    key: "isExhaustive",
                    value: function() {
                        return this.hasVehicleType() && this.hasNumPassengers() && this.hasSubscription()
                    }
                }], [{
                    key: "modelsFor",
                    value: function(e) {
                        var i, n = e.getNumPassengers(),
                            s = e.getVehicleTypes(),
                            r = e.getSubscriptions();
                        return 0 === n && (n = null),
                            0 === s.length && (s = [null]),
                            0 === r.length && (r = [null]),
                            (i = []).concat.apply(i, (0,
                                c.default)(s.map(function(e) {
                                return r.map(function(t) {
                                    return (0,
                                        u.default)({
                                        vehicleType: e,
                                        subscription: t,
                                        numPassengers: n
                                    })
                                })
                            }))).map(function(e) {
                                return new t(e)
                            })
                    }
                }]),
                t
        }(Backbone.Model),
        A = function(e) {
            function t() {
                return (0,
                        g.default)(this, t),
                    (0,
                        b.default)(this, (t.__proto__ || (0,
                        p.default)(t)).apply(this, arguments))
            }
            return (0,
                    w.default)(t, e),
                (0,
                    v.default)(t, [{
                    key: "className",
                    value: function() {
                        var e = ["drive-profile-item"];
                        return 0 === this.model.collection.indexOf(this.model) && e.push("drive-profile-item-sticky"),
                            e.join(" ")
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-init-vehicle-type": "_doInitVehicleType",
                            "click .do-init-num-passengers": "_doInitNumPassengers",
                            "click .do-init-subscription": "_doInitSubscription",
                            "click .do-set-vehicle-type": "_doSetVehicleType",
                            "click .do-set-num-passengers": "_doSetNumPassengers",
                            "click .do-set-subscription": "_doSetSubscription",
                            "click .do-delete-vehicle-type": "_doDeleteVehicleType",
                            "click .do-delete-num-passengers": "_doDeleteNumPassengers",
                            "click .do-delete-subscription": "_doDeleteSubscription"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-delete-item": "item:delete"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".drive-profile-item-action": {
                                observe: "restrictionEditable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            subscriptions: {},
                            supportsNumPassengers: !1,
                            supportsSubscriptions: !1
                        };
                        this._subscriptions = e.subscriptions,
                            this._subscriptionsAvailable = !_.isEmpty(e.subscriptions),
                            this._supportsNumPassengers = e.supportsNumPassengers,
                            this._supportsSubscriptions = e.supportsSubscriptions
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.vehicleType,
                            i = e.numPassengers,
                            n = e.subscription,
                            s = void 0,
                            r = void 0,
                            o = void 0;
                        null == t ? s = "" : (r = _.invert(M.VEHICLE_TYPES)[t],
                            s = I18n.t("restrictions.vehicle_types." + r));
                        var l = _.omit(M.VEHICLE_TYPES, r);
                        return o = this._subscriptions.hasOwnProperty(n) ? this._subscriptions[n] : n, {
                            numPassengersRange: _.range(2, i).concat(_.range(i + 1, 5)),
                            subscriptionName: o,
                            vehicleName: s,
                            vehicleTypes: l,
                            vehicleTypesNames: (0,
                                a.default)(l).sort(function(e, t) {
                                return e.localeCompare(t)
                            }),
                            subscriptionOptions: _.omit(this._subscriptions, n),
                            supportsSubscriptions: this._supportsSubscriptions,
                            subscriptionsAvailable: this._subscriptionsAvailable,
                            supportsNumPassengers: this._supportsNumPassengers,
                            isBlank: this.model.isBlank(),
                            isExhaustive: this.model.isExhaustive(),
                            hasVehicleType: this.model.hasVehicleType(),
                            hasNumPassengers: this.model.hasNumPassengers(),
                            hasSubscription: this.model.hasSubscription()
                        }
                    }
                }, {
                    key: "modelEvents",
                    value: function() {
                        return {
                            change: "render"
                        }
                    }
                }, {
                    key: "_doInitVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: C
                        })
                    }
                }, {
                    key: "_doInitNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: 2
                        })
                    }
                }, {
                    key: "_doInitSubscription",
                    value: function() {
                        if (this._supportsSubscriptions) {
                            var e = (0,
                                a.default)(this._subscriptions);
                            this.model.set({
                                subscription: e[0]
                            })
                        }
                    }
                }, {
                    key: "_doSetVehicleType",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            vehicleType: t
                        })
                    }
                }, {
                    key: "_doSetNumPassengers",
                    value: function(e) {
                        var t = parseInt(e.target.dataset.value, 10);
                        this.model.set({
                            numPassengers: t
                        })
                    }
                }, {
                    key: "_doSetSubscription",
                    value: function(e) {
                        var t = e.target.dataset.value;
                        this.model.set({
                            subscription: t
                        })
                    }
                }, {
                    key: "_doDeleteVehicleType",
                    value: function() {
                        this.model.set({
                            vehicleType: null
                        })
                    }
                }, {
                    key: "_doDeleteNumPassengers",
                    value: function() {
                        this.model.set({
                            numPassengers: null
                        })
                    }
                }, {
                    key: "_doDeleteSubscription",
                    value: function() {
                        this.model.set({
                            subscription: null
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/drive_profile_free_item"
                    }
                }]),
                t
        }(Marionette.View),
        I = function(e) {
            function t() {
                return (0,
                        g.default)(this, t),
                    (0,
                        b.default)(this, (t.__proto__ || (0,
                        p.default)(t)).apply(this, arguments))
            }
            return (0,
                    w.default)(t, e),
                (0,
                    v.default)(t, [{
                    key: "childView",
                    value: function() {
                        return A
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.collection.indexOf(e.model) > 0 && this.collection.remove(e.model)
                    }
                }]),
                t
        }(Marionette.CollectionView),
        O = function(e) {
            function t() {
                return (0,
                        g.default)(this, t),
                    (0,
                        b.default)(this, (t.__proto__ || (0,
                        p.default)(t)).apply(this, arguments))
            }
            return (0,
                    w.default)(t, e),
                (0,
                    v.default)(t, [{
                    key: "isBlank",
                    value: function() {
                        return this.models.every(function(e) {
                            return e.isBlank()
                        })
                    }
                }, {
                    key: "hasBlank",
                    value: function() {
                        return this.models.some(function(e) {
                            return e.isBlank()
                        })
                    }
                }]),
                t
        }(Backbone.Collection),
        L = function(e) {
            function t() {
                return (0,
                        g.default)(this, t),
                    (0,
                        b.default)(this, (t.__proto__ || (0,
                        p.default)(t)).apply(this, arguments))
            }
            return (0,
                    w.default)(t, e),
                (0,
                    v.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .do-add-item": "_doAddBlankItem"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            collectionRegion: ".collection-region"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".add-drive-profile-item": {
                                observe: "canAddBlankItem",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e, t = this,
                            i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                                driveProfileList: null,
                                restrictionEditable: !1,
                                subscriptions: {},
                                supportsNumPassengers: !1,
                                supportsSubscriptions: !1
                            };
                        this._driveProfileList = i.driveProfileList,
                            this._restrictionEditable = i.restrictionEditable,
                            this._subscriptions = i.subscriptions,
                            this._supportsSubscriptions = i.supportsSubscriptions,
                            this._supportsNumPassengers = i.supportsNumPassengers;
                        var n = (e = []).concat.apply(e, (0,
                            c.default)(this._driveProfileList.getDriveProfiles().map(function(e) {
                            return T.modelsFor(e)
                        })));
                        n.forEach(function(e) {
                                return e.set({
                                    restrictionEditable: t._restrictionEditable
                                })
                            }),
                            this.collection = new O(n),
                            0 === this.collection.length && this._doAddBlankItem(),
                            this.model = new Backbone.Model({
                                canAddBlankItem: this._canAddBlankItem()
                            }),
                            this.collection.on("all", function() {
                                return t.model.set({
                                    canAddBlankItem: t._canAddBlankItem()
                                })
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("collectionRegion", new I({
                                collection: this.collection,
                                subscriptions: this._subscriptions,
                                supportsNumPassengers: this._supportsNumPassengers,
                                supportsSubscriptions: this._supportsSubscriptions
                            }))
                    }
                }, {
                    key: "_canAddBlankItem",
                    value: function() {
                        return this._restrictionEditable && !this.collection.hasBlank()
                    }
                }, {
                    key: "_doAddBlankItem",
                    value: function() {
                        this._canAddBlankItem() && this.collection.push(new T({
                            restrictionEditable: this._restrictionEditable
                        }))
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            driveProfiles: (0,
                                r.default)({}, S.RESTRICTION_TYPE.FREE, this.collection.models.filter(function(e) {
                                return !e.isBlank()
                            }).map(function(e) {
                                return e.getDriveProfileData()
                            }))
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = [];
                        return this.collection.isBlank() && e.push(I18n.t("restrictions.editing.validation.vehicle_type")),
                            e
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/drive_profile_free_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = i.subscriptions,
                            o = void 0 === r ? {} : r;
                        return new t({
                            driveProfileList: e.getDriveProfileList(S.RESTRICTION_TYPE.FREE),
                            restrictionEditable: s,
                            subscriptions: o,
                            supportsNumPassengers: e.supportsNumPassengers(),
                            supportsSubscriptions: e.supportsSubscriptions()
                        })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            DriveProfileFreeEditView: L,
            DriveProfileItemViewModel: T
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(5),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(2),
        p = n(h),
        f = i(7),
        g = n(f),
        m = i(8),
        v = n(m),
        _ = i(218),
        y = i(129),
        b = i(80),
        E = n(b),
        w = moment(),
        S = moment().add(1, "month"),
        M = new _.DateTimeUtil,
        C = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "toggleAllWeekdays",
                    value: function(e) {
                        var t = e ? (0,
                            a.default)(y.WEEKDAYS) : [];
                        this.set({
                            weekdays: t
                        })
                    }
                }, {
                    key: "getWeekdaysValue",
                    value: function() {
                        var e = y.RestrictionTimeFrame.getWeekdaysBitValue(this.attributes.weekdays);
                        return 0 === e ? null : e
                    }
                }, {
                    key: "getTimeFrameData",
                    value: function() {
                        var e = this.attributes,
                            t = e.fromTime,
                            i = e.toTime,
                            n = e.startDate,
                            s = e.endDate;
                        this.attributes.isAllDay && (t = i = null),
                            this.attributes.isDuringDates ? (n = n.format(y.DATE_FORMAT),
                                s = s.format(y.DATE_FORMAT)) : n = s = null;
                        var r = this.getWeekdaysValue();
                        return 0 === r && (r = null), {
                            weekdays: r,
                            fromTime: t,
                            toTime: i,
                            startDate: n,
                            endDate: s
                        }
                    }
                }, {
                    key: "isOvernight",
                    value: function() {
                        var e = this.attributes,
                            t = e.isAllDay,
                            i = e.fromTime,
                            n = e.toTime;
                        return !t && 1 === M.compareTimes(i, n)
                    }
                }, {
                    key: "validate",
                    value: function() {
                        var e = this.attributes,
                            t = [];
                        return 0 === e.weekdays.length && t.push(I18n.t("restrictions.editing.validation.weekdays")), !1 === e.isAllDay && (M.isValidTime(e.fromTime) || t.push(I18n.t("restrictions.editing.validation.fromTime")),
                                M.isValidTime(e.toTime) || t.push(I18n.t("restrictions.editing.validation.toTime"))),
                            e.isDuringDates && (W_.isBlank(e.startDate) ? t.push(I18n.t("restrictions.editing.validation.startDate")) : e.startDate.isBefore(moment(), "day") && t.push(I18n.t("restrictions.editing.validation.startDate_in_past")),
                                W_.isBlank(e.endDate) && t.push(I18n.t("restrictions.editing.validation.endDate"))),
                            t
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = void 0,
                            n = void 0,
                            s = void 0,
                            r = void 0;
                        return e.isDuringDates() ? (i = moment(e.getStartDate(), y.DATE_FORMAT),
                                n = moment(e.getEndDate(), y.DATE_FORMAT)) : (i = w,
                                n = S),
                            e.isAllDay() ? (s = "8:00",
                                r = "17:00") : (s = e.getFromTime(),
                                r = e.getToTime()),
                            new t({
                                restrictionEditable: !1,
                                fromTime: s,
                                toTime: r,
                                startDate: i,
                                endDate: n,
                                weekdays: e.getWeekdays(),
                                isAllDay: e.isAllDay(),
                                isDuringDates: e.isDuringDates()
                            })
                    }
                }]),
                t
        }(Backbone.Model),
        T = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .do-toggle-weekdays-all": function() {
                                e.model.toggleAllWeekdays(!0)
                            },
                            "click .do-toggle-weekdays-none": function() {
                                e.model.toggleAllWeekdays(!1)
                            }
                        }
                    }
                }, {
                    key: "ui",
                    value: function() {
                        return {
                            bootstrapTimepickers: ".bootstrap-timepicker input",
                            timepickerFromTime: ".timepicker-from-time",
                            timepickerToTime: ".timepicker-to-time",
                            datepicker: ".datepicker"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".weekday": "weekdays",
                            ".timeframe-overnight-message": {
                                observe: ["fromTime", "toTime", "isAllDay"],
                                onGet: "_isOvernight",
                                visible: !0
                            },
                            "[name=fromTime]": "fromTime",
                            "[name=toTime]": "toTime",
                            "[name=isAllDay]": "isAllDay",
                            "[name=isDuringDates]": {
                                observe: "isDuringDates",
                                onSet: function(e) {
                                    return "true" === e
                                }
                            },
                            input: {
                                attributes: [{
                                    name: "disabled",
                                    observe: "restrictionEditable",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".timepicker input": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isAllDay", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                r.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return i || !n
                                    }
                                }]
                            },
                            ".datepicker": {
                                attributes: [{
                                    name: "disabled",
                                    observe: ["isDuringDates", "restrictionEditable"],
                                    onGet: function(e) {
                                        var t = (0,
                                                r.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return !i || !n
                                    }
                                }]
                            },
                            ".timeframe-weekdays-toggle": {
                                observe: "restrictionEditable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._renderTimePickers(),
                            this._renderDatePickers(),
                            this.stickit()
                    }
                }, {
                    key: "onBeforeDetach",
                    value: function() {
                        this._detachTimePickers(),
                            this._detachDatePickers()
                    }
                }, {
                    key: "_renderTimePickers",
                    value: function() {
                        this.getUI("bootstrapTimepickers").timepicker(E.default.prototype.timepickerOptions);
                        var e = this.model.attributes,
                            t = e.fromTime,
                            i = e.toTime;
                        null != t && this.getUI("timepickerFromTime").timepicker("setTime", t),
                            null != i && this.getUI("timepickerToTime").timepicker("setTime", i)
                    }
                }, {
                    key: "_detachTimePickers",
                    value: function() {
                        this.getUI("timepickerFromTime").data("timepicker").remove(),
                            this.getUI("timepickerToTime").data("timepicker").remove()
                    }
                }, {
                    key: "_renderDatePickers",
                    value: function() {
                        var e = this;
                        this.getUI("datepicker").daterangepicker({
                            autoApply: !0,
                            startDate: this.model.attributes.startDate,
                            endDate: this.model.attributes.endDate
                        }, function(t, i) {
                            e.model.set({
                                startDate: t,
                                endDate: i
                            })
                        })
                    }
                }, {
                    key: "_detachDatePickers",
                    value: function() {
                        this.getUI("datepicker").data("daterangepicker").remove()
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            getWeekdayFromOrdinal: function(e) {
                                return y.WEEKDAY_ORDINALS[e]
                            }
                        }
                    }
                }, {
                    key: "getRestrictionData",
                    value: function() {
                        return {
                            timeFrames: [this.model.getTimeFrameData()]
                        }
                    }
                }, {
                    key: "validate",
                    value: function() {
                        return this.model.validate()
                    }
                }, {
                    key: "_isOvernight",
                    value: function() {
                        return this.model.isOvernight()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/timeframe_edit"
                    }
                }], [{
                    key: "for",
                    value: function(e) {
                        var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            n = i.restrictionEditable,
                            s = void 0 !== n && n,
                            r = C.for(e);
                        return r.set({
                                restrictionEditable: s
                            }),
                            new t({
                                model: r
                            })
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            TimeFrameEditView: T,
            ViewModel: C
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(220),
        g = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-turn"
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            listRegion: {
                                el: ".restrictions-list-region tbody",
                                replaceElement: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .do-apply": "_onApplyChanges"
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-close": "restriction:summary:close",
                            "click .do-create": "restriction:summary:create"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            "[name=isDifficult]": "isDifficult",
                            ".restrictions-list-region": {
                                observe: "isTimeRestricted",
                                visible: !0
                            },
                            "input, .do-create, .do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditRestrictions",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            turn: null,
                            viewHelpers: null,
                            canEditRestrictions: !1,
                            subscriptions: {}
                        };
                        this._turn = e.turn,
                            this._viewHelpers = e.viewHelpers,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._subscriptions = e.subscriptions,
                            this._restrictions = this._turn.getTurnData().getRestrictions(),
                            this.model = new Backbone.Model({
                                isDifficult: this._turn.isDifficult(),
                                isTimeRestricted: this._turn.isTimeRestricted(),
                                canEditRestrictions: this._canEditRestrictions
                            })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            summaryTitle: this._viewHelpers.getSummaryTitle()
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.showChildView("listRegion", new f.RestrictionsListView({
                                restrictions: this._restrictions,
                                canEditRestrictions: this._canEditRestrictions,
                                subscriptions: this._subscriptions
                            }))
                    }
                }, {
                    key: "_onApplyChanges",
                    value: function() {
                        var e = this.model.attributes.isDifficult;
                        this.triggerMethod("restriction:summary:apply", {
                            isDifficult: e
                        })
                    }
                }, {
                    key: "onChildviewItemEdit",
                    value: function(e) {
                        this.triggerMethod("restriction:item:edit", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.triggerMethod("restriction:item:delete", e.getRestriction())
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_summary_turn"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            TurnRestrictionsSummaryView: g
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(221),
        v = n(m),
        y = i(29),
        b = n(y),
        E = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "events",
                    value: function() {
                        return {
                            "click .apply-button": "_onApplyClicked",
                            "click .cancel-button": "destroy"
                        }
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".opcode-select": {
                                observe: "opcode",
                                selectOptions: {
                                    collection: this._getOpcodeOptions,
                                    defaultOption: {
                                        label: I18n.t("instruction_override.no_opcode"),
                                        value: null
                                    }
                                },
                                attributes: [{
                                    name: "disabled",
                                    observe: "editable",
                                    onGet: _.negate(_.identity)
                                }]
                            },
                            ".apply-button": {
                                observe: "editable",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._turn = this.options.turn,
                            this._dataModel = this.options.dataModel,
                            this._viewModel = new Backbone.Model({
                                opcode: this._turn.getTurnData().getInstructionOpcode(),
                                editable: this.options.editable
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this._viewModel)
                    }
                }, {
                    key: "_onApplyClicked",
                    value: function() {
                        var e = this._viewModel.attributes.opcode;
                        if (e !== this._turn.getTurnData().getInstructionOpcode()) {
                            var t = this._turn.getTurnData().withInstructionOpcode(e),
                                i = new b.default(this._dataModel.getTurnGraph(), this._turn.withTurnData(t));
                            this._dataModel.actionManager.add(i)
                        }
                        this.destroy()
                    }
                }, {
                    key: "_getOpcodeOptions",
                    value: function() {
                        var e = I18n.t("instruction_override.opcodes");
                        return (0,
                            r.default)(v.default).map(function(t) {
                            return {
                                value: t,
                                label: e[t]
                            }
                        })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "templates/instruction-override"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(147),
        r = n(s),
        o = i(15),
        a = n(o),
        l = OL.Class(r.default, {
            mode: OL.Control.ModifyFeature.DRAG | OL.Control.ModifyFeature.ROTATE,
            RadiusHandleDistance: 50,
            dragBoundary: null,
            MaxDragDistance: 150,
            isDragging: !1,
            destroy: function() {
                return this.removeDragBoundary(),
                    r.default.prototype.destroy.apply(this, arguments)
            },
            resetVertices: function() {
                this.dragControl.feature && this.dragControl.outFeature(this.dragControl.feature),
                    this.isDragging && (this.isDragging = !1),
                    this.removeDragBoundary(),
                    this.removeRadiusHandle(),
                    this.feature && (this.cameraDraggable() && this.collectDragHandle(),
                        this.feature.model.isGeometryEditable() && this.collectRadiusHandle(),
                        this._originalGeometry = this.feature.geometry.clone())
            },
            removeDragBoundary: function() {
                this.dragBoundary && (this.layer.destroyFeatures([this.dragBoundary], {
                        silent: !0
                    }),
                    this.dragBoundary = null)
            },
            removeRadiusHandle: function() {
                this.radiusHandle && (this.layer.destroyFeatures([this.radiusHandle], {
                        silent: !0
                    }),
                    this.radiusHandle = null)
            },
            cameraDraggable: function() {
                return this.feature.model.isGeometryEditable() && this.map.getZoom() >= W.Config.cameras.minDragZoom
            },
            collectDragHandle: function() {
                var e = this.feature.geometry,
                    t = this.map.getResolution(),
                    i = new OL.Geometry.Point(e.x, e.y);
                this.feature.model.attributes.originalPosition || (this.feature.model.attributes.originalPosition = new OL.Geometry.Point(e.x, e.y));
                var n = this.feature.model.attributes.originalPosition;
                this.dragBoundary = new OL.Feature.Vector(n.clone(), {}, {
                    pointRadius: this.MaxDragDistance / t,
                    fillOpacity: .2,
                    pointerEvents: "none",
                    graphicZIndex: 0
                });
                var s = this.MaxDragDistance,
                    r = this;
                return e.move = function(t, o) {
                        r.isDragging = !0,
                            i.x += t,
                            i.y += o;
                        var a = i.x - n.x,
                            l = i.y - n.y,
                            u = Math.sqrt(Math.pow(a, 2) + Math.pow(l, 2));
                        return OL.Geometry.Point.prototype.move.apply(this, arguments),
                            u >= s ? (e.x = n.x + a * s / u,
                                e.y = n.y + l * s / u,
                                e.clearBounds()) : (e.x = i.x,
                                e.y = i.y,
                                e.clearBounds())
                    },
                    this.layer.addFeatures([this.dragBoundary], {
                        silent: !0
                    })
            },
            collectRadiusHandle: function() {
                var e = this.feature,
                    t = e.geometry,
                    i = (e.model.attributes.azymuth - 90).toRad(),
                    n = new OL.Geometry.Point(t.x, t.y),
                    s = new OL.Geometry.Point(t.x + this.RadiusHandleDistance * this.map.getResolution() * Math.cos(i), t.y - this.RadiusHandleDistance * this.map.getResolution() * Math.sin(i)),
                    r = new OL.Feature.Vector(s);
                this.originalAngle = e.model.attributes.azymuth,
                    s.move = function(t, s) {
                        OL.Geometry.Point.prototype.move.call(this, t, s);
                        var r = this.x - n.x,
                            o = this.y - n.y;
                        i = Math.atan2(o, r),
                            e.model.attributes.azymuth = 450 - i.toDeg()
                    },
                    r._sketch = !0,
                    r._cameraRotator = !0,
                    this.radiusHandle = r,
                    this.layer.addFeatures([this.radiusHandle], {
                        silent: !0
                    })
            },
            dragVertex: function(e, t) {
                return this.isDragging && this.removeRadiusHandle(),
                    this.layer.drawFeature(this.feature)
            },
            dragComplete: function(e) {
                if (e === this.radiusHandle) {
                    var t = this.feature.model.attributes.azymuth;
                    this.feature.model.attributes.azymuth = this.originalAngle,
                        this.model.actionManager.add(new a.default(this.feature.model, {
                            azymuth: t
                        }))
                } else
                    this.onModification(this.feature);
                return this.resetVertices()
            },
            CLASS_NAME: "Waze.Control.GeometryEditing.Camera"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(147),
        r = n(s),
        o = i(15),
        a = n(o),
        l = i(714),
        u = n(l),
        d = OL.Class(r.default, {
            MIN_COMPONENTS: 4,
            initialize: function(e, t) {
                t.mode = OL.Control.ModifyFeature.RESHAPE | OL.Control.ModifyFeature.DRAG,
                    this._drawingContext = t.map.getDrawingContext(),
                    this._navigationPointMarker = null,
                    this._dragBoundary = null,
                    this._line = null,
                    r.default.prototype.initialize.apply(this, arguments)
            },
            handleKeypress: function(e) {
                if (!this.feature || !this.deleteCodes.contains(e.keyCode))
                    return r.default.prototype.handleKeypress.apply(this, arguments);
                var t = this.dragControl.feature;
                return t && t.geometry && t.geometry.parent && t.geometry.parent.components.length > this.MIN_COMPONENTS ? r.default.prototype.handleKeypress.apply(this, arguments) : void 0
            },
            destroy: function() {
                return this._drawingContext.destroy(),
                    r.default.prototype.destroy.apply(this, arguments)
            },
            resetVertices: function() {
                r.default.prototype.resetVertices.apply(this, arguments),
                    this.feature.model.isPoint() && !W.Config.venues.enable_point_navigation_point || this._drawNavigationPoint()
            },
            _drawNavigationPoint: function() {
                this._drawingContext.clear(),
                    this._navigationPointMarker = new u.default(this.feature.model.getNavigationPoint().point.toLonLat(), this.feature.geometry, this.map),
                    this._navigationPointMarker.events.register("dragEnd", this, this._onNavigationPointChange),
                    this._navigationPointMarker.events.register("dragStart", this, this._onNavigationPointDragStart),
                    this._navigationPointMarker.events.register("drag", this, this._updateLine),
                    this._drawingContext.addMarkers([this._navigationPointMarker]),
                    this._dragBoundary = new OL.Feature.Vector(this._navigationPointMarker.dragBounds.toGeometry(), {}, {
                        fillOpacity: 0,
                        strokeDashstyle: "dash",
                        pointerEvents: "none"
                    }),
                    this._line = new OL.Feature.Vector(new OL.Geometry.LineString([this.feature.geometry.getCentroid().clone(), new OL.Geometry.Point(this._navigationPointMarker.lonlat.lon, this._navigationPointMarker.lonlat.lat)]), {}, {
                        strokeWidth: 2,
                        strokeColor: "#00ece3",
                        strokeDashstyle: "dash",
                        strokeDashArray: "4, 8"
                    }),
                    this._drawingContext.addFeatures([this._line])
            },
            _onNavigationPointChange: function() {
                var e = {
                        point: this._navigationPointMarker.lonlat.toPoint(),
                        entry: !0,
                        exit: !0
                    },
                    t = new a.default(this.feature.model, {
                        entryExitPoints: [e]
                    });
                this.model.actionManager.add(t)
            },
            _onNavigationPointDragStart: function() {
                this._drawingContext.addFeatures([this._dragBoundary])
            },
            _updateLine: function() {
                this._line.geometry.components[0] = this.feature.geometry.getCentroid().clone(),
                    this._line.geometry.components[1].x = this._navigationPointMarker.lonlat.lon,
                    this._line.geometry.components[1].y = this._navigationPointMarker.lonlat.lat,
                    this._drawingContext.redrawFeature(this._line)
            },
            dragStart: function(e) {
                r.default.prototype.dragStart.apply(this, arguments),
                    this._drawingContext.clear()
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(105),
        r = n(s),
        o = i(19),
        a = n(o),
        l = i(11),
        u = n(l),
        d = OL.Class(OL.Marker, {
            dragging: null,
            dragConstraint: null,
            MAX_DISTANCE_FROM_LANDMARK_METERS: 500,
            initialize: function(e, t, i) {
                var n = this;
                this.map = i;
                var s = new a.default("navigation-point fa fa-crosshairs");
                OL.Marker.prototype.initialize.call(this, e, s),
                    this.setLandmarkGeometry(t),
                    this.dragging = new r.default(this.map),
                    this.dragging.down = function(e) {
                        return n.icon.$div.addClass("dragging"),
                            n.events.triggerEvent("dragStart", {
                                xy: e ? e.xy : null,
                                marker: n
                            })
                    },
                    this.dragging.move = function(t) {
                        return e = n.map.getLonLatFromViewPortPx(t.xy),
                            n.dragBounds.containsLonLat(e) || (e.lon < n.dragBounds.left && (e.lon = n.dragBounds.left),
                                e.lon > n.dragBounds.right && (e.lon = n.dragBounds.right),
                                e.lat > n.dragBounds.top && (e.lat = n.dragBounds.top),
                                e.lat < n.dragBounds.bottom && (e.lat = n.dragBounds.bottom)),
                            n.lonlat = e,
                            n.layer.drawMarker(n),
                            n.events.triggerEvent("drag", {
                                xy: t.xy,
                                marker: n
                            })
                    },
                    this.dragging.done = function(e) {
                        return n.icon.$div.removeClass("dragging"),
                            n.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: n
                            })
                    },
                    this.dragging.activate(this.icon.$div)
            },
            setLandmarkGeometry: function(e) {
                var t = e.getBounds().clone(),
                    i = new OL.LonLat(t.left, t.top);
                i.transform(this.map.getProjectionObject(), this.map.displayProjection);
                var n = u.default.destinationOnPlane(i, 0, this.MAX_DISTANCE_FROM_LANDMARK_METERS),
                    s = u.default.destinationOnPlane(i, 90, this.MAX_DISTANCE_FROM_LANDMARK_METERS);
                n.transform(this.map.displayProjection, this.map.getProjectionObject()),
                    s.transform(this.map.displayProjection, this.map.getProjectionObject()),
                    n = n.lon - t.left,
                    s = s.lat - t.top,
                    t.left -= n,
                    t.right += n,
                    t.top += s,
                    t.bottom -= s,
                    this.dragBounds = t
            },
            destroy: function() {
                return OL.Marker.prototype.destroy.apply(this, arguments),
                    this.dragging.deactivate()
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(3),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(224),
        o = i(24),
        a = OpenLayers.Class({
            events: null,
            $element: null,
            currentAction: null,
            active: !1,
            initialize: function() {
                var e = this;
                this.$element = $("#keyboard-dialog"),
                    this.events = new OpenLayers.Events(this),
                    W.accelerators.events.register("showShortcutsDialog", this, function() {
                        this.show()
                    }),
                    $(window).bind("keydown.shortcut-editor", OpenLayers.Function.bind(this.onKeyDown, this)),
                    $(window).bind("keyup.shortcut-editor", OpenLayers.Function.bind(this.onKeyUp, this)),
                    this.$element.delegate(".shortcut-action", "click", function() {
                        e.onActionClicked(this.dataset.action)
                    }),
                    this.$element.on("hide.bs.modal", OpenLayers.Function.bind(this.onDialogClose, this)),
                    this.$element.on("show.bs.modal", function() {
                        e.activate()
                    })
            },
            activate: function() {
                this.render(),
                    this.active = !0
            },
            show: function() {
                this.activate(),
                    this.$element.modal("show")
            },
            onDialogClose: function() {
                this.active = !1
            },
            render: function() {
                this.$element.html(o.getHTML("templates/keyboard_shortcuts/modal", {
                    groups: Waze.accelerators.Groups
                }))
            },
            renderList: function() {
                this.$element.find(".modal-body").html(o.getHTML("templates/keyboard_shortcuts/list", {
                    groups: Waze.accelerators.Groups
                }))
            },
            onActionClicked: function(e) {
                var t = this.$element.find(".shortcut-action[data-action=" + e + "]");
                t.hasClass("disabled") || (this.currentAction && this.currentAction.removeClass("selected"),
                    this.currentAction = t,
                    this.currentAction.addClass("selected"))
            },
            onKeyDown: function(e) {
                var t = String.fromCharCode(e.which),
                    i = e.which;
                if (this.active && this.currentAction)
                    return e.stopImmediatePropagation(),
                        (t.match(/^[a-zA-Z0-9]+/) || (0,
                            s.default)(Waze.accelerators.SpecialKeys).contains(i.toString())) && (Waze.accelerators.registerShortcut(new r.KeyStroke(e).toString(), this.currentAction.get(0).dataset.action, !0),
                            this.currentAction.removeClass("selected"),
                            Waze.accelerators.persist(),
                            this.currentAction = null,
                            this.renderList()), !1
            },
            onKeyUp: function(e) {
                this.active && this.currentAction && e.stopImmediatePropagation()
            },
            getModifiersString: function(e) {
                var t = "";
                return e.shiftKey && (t += "Shift+"),
                    e.ctrlKey && !e.metaKey && (t += "Control+"),
                    e.altKey && (t += "Alt+"),
                    e.metaKey && (t += "Command+"),
                    t
            },
            getShortcutCode: function(e, t) {
                var i = "";
                return e.shiftKey && (i += "S"),
                    (e.ctrlKey || e.metaKey) && (i += "C"),
                    e.altKey && (i += "A"),
                    i + "+" + t
            },
            destroy: function() {
                this.events.destroy()
            },
            CLASS_NAME: "Waze.View.KeyboardShortcutEditor"
        });
    e.exports = a
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        initialize: function(e, t, i) {
            return this._wazeModel = e,
                this._marx = t,
                this._map = i,
                this.events = new OL.Events,
                this._active = !1,
                this
        },
        activate: function() {
            if (!this._active)
                return this._active = !0,
                    this._wazeModel.actionManager.events.on({
                        afteraction: this._onEditAreaChange,
                        afterundoaction: this._onEditAreaChange,
                        afterclearactions: this._onEditAreaChange,
                        scope: this
                    }),
                    this._map.events.on({
                        moveend: this._onViewAreaChange,
                        scope: this
                    })
        },
        deactivate: function() {
            this._active && (this._wazeModel.actionManager.events.un({
                    afteraction: this._onEditAreaChange,
                    afterundoaction: this._onEditAreaChange,
                    afterclearactions: this._onEditAreaChange,
                    scope: this
                }),
                this._map.events.un({
                    moveend: this._onViewAreaChange,
                    scope: this
                }),
                this._active = !1)
        },
        _onEditAreaChange: function() {
            return this.events.triggerEvent("change:editArea", {
                editArea: this.getEditArea()
            })
        },
        _onViewAreaChange: function() {
            return this.events.triggerEvent("change:viewArea", {
                viewArea: this.getViewArea()
            })
        },
        getEditArea: function() {
            var e = this._wazeModel.actionManager.getChangesBounds();
            return this.convertToMarx(e)
        },
        getCenter: function() {
            return this.convertToMarx(this._map.getCenter())
        },
        getViewArea: function() {
            return this.convertToMarx(this._map.getExtent())
        },
        convertToMarx: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
            return e = this.parseGeometry(e),
                null != e && (e = e.transform(this._map.getProjectionObject(), this._marx.displayProjection)),
                e
        },
        convertFromMarx: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
            return e = this.parseGeometry(e),
                null != e && (e = e.transform(this._marx.displayProjection, this._map.getProjectionObject())),
                e
        },
        parseGeometry: function(e) {
            return null != e && (e instanceof OL.LonLat || (e instanceof OL.Bounds ? 0 === e.getWidth() && 0 === e.getHeight() && (e = null) : null != e.lon && null != e.lat && (e = new OL.LonLat(e.lon, e.lat)))),
                e
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(54),
        r = n(s),
        o = i(138),
        a = n(o),
        l = void 0,
        u = OL.Class(r.default, {
            initialize: function(e, t, i) {
                this._wazeModel = e,
                    this._marx = t,
                    this._adapter = i,
                    r.default.prototype.initialize.apply(this),
                    this.users = new a.default([], {
                        model: l
                    }),
                    this.throttleUserPanMessage = _.throttle(this.sendUserPanMessage, 3e3, {
                        leading: !1
                    }),
                    this.throttleUserEditMessage = _.throttle(this.sendUserEditMessage, 3e3, {
                        leading: !1
                    }),
                    this._connected = !1,
                    this._adapter.events.on({
                        "change:editArea": this._onEditAreaChange,
                        "change:viewArea": this._onViewAreaChange,
                        scope: this
                    }),
                    this._marx.on("firstConnect", this._onMarxFirstConnect, this),
                    this._marx.on("reconnect", this._onMarxReconnect, this),
                    this._marx.on("disconnect", this._onMarxDisconnect, this)
            },
            _onMarxFirstConnect: function() {
                this._isUserAuthorized() && this._registerMarxEvents(),
                    this._activate()
            },
            _registerMarxEvents: function() {
                return this._marx.socket.on("viewport:userPan", $.proxy(this._onUserPan, this)),
                    this._marx.socket.on("viewport:userEdit", $.proxy(this._onUserEdit, this)),
                    this._marx.socket.on("viewport:userLeave", $.proxy(this._onUserLeave, this)),
                    this._marx.socket.on("viewport:reset", $.proxy(this._onViewportReset, this))
            },
            _onMarxReconnect: function() {
                this._activate()
            },
            _activate: function() {
                return this._connected || (this._connected = !0,
                        this._adapter.activate()),
                    this.sendUserPanMessage()
            },
            _onUserPan: function(e) {
                return this._mergeUser(e.user)
            },
            _onUserEdit: function(e) {
                return this._mergeUser(e.user)
            },
            _onUserLeave: function(e) {
                var t = this.findUserById(e.user.id);
                if (null != t)
                    return this.users.remove(t)
            },
            _isUserAuthorized: function() {
                return !W.Config.chat.staffOnly || this._wazeModel.loginManager.user.isStaff
            },
            _onMarxDisconnect: function() {
                this._connected && (this._adapter.deactivate(),
                    this._connected = !1)
            },
            _onViewportReset: function(e) {
                return this.mergeUsers(e)
            },
            mergeUsers: function(e) {
                var t = this;
                return this._removeUsersNotIn(e),
                    e.map(function(e) {
                        return t._mergeUser(e)
                    })
            },
            _mergeUser: function(e) {
                e = $.extend({}, e),
                    this._transformCenterFromMarx(e);
                var t = this.findUserById(e.id);
                return null != t ? t.set(e) : this.users.add(e)
            },
            _removeUsersNotIn: function(e) {
                for (var t = this, i = {}, n = 0; n < e.length; n++) {
                    var s = e[n];
                    i[s.id] = !0
                }
                var r = 0;
                return function() {
                    for (var e = []; r < t.users.models.length;) {
                        var n = t.users.models[r];
                        i[n.get("id")] ? e.push(r++) : e.push(t.users.removeAt(r))
                    }
                    return e
                }()
            },
            _transformCenterFromMarx: function(e) {
                if (null != e.center) {
                    var t = e.center;
                    t = new OL.LonLat(t.lon, t.lat),
                        e.center = this._adapter.convertFromMarx(t)
                }
            },
            findUserById: function(e) {
                return this.users.first(function(t) {
                    return t.get("id") === e
                })
            },
            _onEditAreaChange: function(e) {
                return this.throttleUserEditMessage()
            },
            sendUserEditMessage: function() {
                var e = {
                    editArea: this._adapter.getEditArea()
                };
                return this._marx.socket.emit("user:edit", e)
            },
            _onViewAreaChange: function(e) {
                return this.throttleUserPanMessage()
            },
            sendUserPanMessage: function() {
                if (null != this._marx.socket) {
                    var e = {
                        center: this._adapter.getCenter(),
                        viewArea: this._adapter.getViewArea()
                    };
                    return this._marx.socket.emit("user:pan", e)
                }
            }
        });
    l = OL.Class(r.default, {
            initialize: function() {
                return r.default.prototype.initialize.apply(this, arguments),
                    this.on("change:center", this._onCenterChanged, this)
            },
            _onCenterChanged: function(e) {
                if (null != e.newValue && null != e.oldValue && e.newValue.lon !== e.oldValue.lon && e.newValue.lat !== e.oldValue.lat)
                    return this.trigger("moved")
            }
        }),
        t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(34),
        r = n(s),
        o = i(719),
        a = n(o),
        l = OpenLayers.Class(r.default, {
            initialize: function(e) {
                r.default.prototype.initialize.apply(this, arguments),
                    this.map = e.map,
                    this.model = e.model,
                    this.model.users.on("add", this._addUser, this),
                    this.model.users.on("remove", this._onRemoveUser, this),
                    this.layer = this.map.liveUsersLayer,
                    this._markersByUserId = {}
            },
            _addUser: function(e) {
                var t = new a.default(e, this.map, this.layer);
                return this._markersByUserId[e.get("id")] = t,
                    this.layer.addMarker(t),
                    t.render()
            },
            _onRemoveUser: function(e) {
                var t = e.item,
                    i = t.get("id");
                return this._removeMarker(i)
            },
            _removeMarker: function(e) {
                var t = this._markersByUserId[e];
                return t.destroy(),
                    this.layer.removeMarker(t),
                    delete this._markersByUserId[e]
            },
            centerUser: function(e) {
                this._markersByUserId[e] && this._markersByUserId[e].center()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(19),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(OL.Marker, {
            initialize: function(e, t, i) {
                this.model = e,
                    this.map = t,
                    this.layer = i;
                var n = new s.default("live-user-marker", !0);
                return OL.Marker.prototype.initialize.call(this, this.getLonLat(), n),
                    this.model.on("moved", this._onMoved, this)
            },
            render: function() {
                return this.icon.$div.tooltip({
                    title: this.model.get("name")
                })
            },
            getLonLat: function() {
                return this.model.get("center")
            },
            _onMoved: function() {
                var e = this;
                return this.icon.$div.one("transitionend", function() {
                        return e.icon.$div.removeClass("moving")
                    }),
                    this.lonlat = this.getLonLat(),
                    this.icon.$div.addClass("moving"),
                    this.layer.drawMarker(this)
            },
            center: function() {
                return this.map.setCenter(this.getLonLat())
            },
            destroy: function() {
                return this.icon.$div.tooltip("destroy")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(6),
        s = i(68),
        r = i(199),
        o = {
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 4,
            6: 4
        },
        a = OpenLayers.Class(n, {
            isFirstLogin: !1,
            nested: {
                editableAreas: OL.Geometry,
                managedAreas: OL.Geometry,
                areas: r,
                address: OL.Geometry
            },
            initialize: function() {
                n.prototype.initialize.apply(this, arguments),
                    this._parseLegacyEditableAreas(),
                    this.normalizedLevel = s.prototype.NormalizedLevels[this.rank],
                    this.editableMiles = o[this.normalizedLevel]
            },
            _parseLegacyEditableAreas: function() {
                if (this.editableAreasMeters) {
                    var e = this.editableAreasMeters.map(function(e, t) {
                            return new r({
                                geometry: this.editableAreas.components[t],
                                area: e,
                                type: r.prototype.TYPE.DRIVE
                            })
                        }, this),
                        t = this.managedAreasMeters.map(function(e, t) {
                            return new r({
                                geometry: this.managedAreas.components[t],
                                area: e,
                                type: r.prototype.TYPE.MANAGED
                            })
                        }, this);
                    this.areas = e.concat(t)
                }
            },
            isCountryManager: function() {
                return this.editableCountryIDs && !this.editableCountryIDs.isEmpty()
            },
            CLASS_NAME: "Waze.Feature.Vector.LoggedInUser"
        });
    e.exports = a
}, function(e, t, i) {
    "use strict";
    var n = i(106),
        s = i(767),
        r = i(768),
        o = i(769),
        a = i(771),
        l = i(772),
        u = i(773),
        d = i(774),
        c = i(775),
        h = i(776),
        p = i(24),
        f = OpenLayers.Class(OL.Map, n, {
            DefaultPanInPixel: 20,
            navigationControl: null,
            zoomBar: null,
            mapState: null,
            popup: null,
            lightbox: null,
            popupOverlay: null,
            navigationEnabled: !0,
            $el: null,
            $map: null,
            initialize: function(e) {
                var t = this;
                e = e || {},
                    $("#editor-container").html(p.getHTML("templates/map")),
                    this.app = e.app,
                    this.$el = $("#map"),
                    this.$modalContainer = this.$el.find("#map-modal-container"),
                    this.$map = $("#WazeMap"),
                    this.popupOverlay = $("#popup-overlay"),
                    this.inputOverlay = $("#input-overlay"),
                    this.resize(),
                    this.navigationControl = new OpenLayers.Control.Navigation,
                    this.zoomBar = new s({
                        displayClass: "olControlPanZoomBar"
                    }),
                    this.footerControl = new OpenLayers.Control({
                        displayClass: "WazeMapFooter"
                    }),
                    this.footerMessages = new OpenLayers.Control({
                        displayClass: "footer-messages"
                    }),
                    e.controls = [this.navigationControl, this.zoomBar, this.footerControl, this.footerMessages],
                    e.projection = new OpenLayers.Projection(W.Config.map.projection.local),
                    e.displayProjection = new OpenLayers.Projection(W.Config.map.projection.remote),
                    e.theme = null,
                    OpenLayers.Map.prototype.initialize.apply(this, ["WazeMap", e]),
                    this.panelRegion = new c({
                        map: this
                    }),
                    $(this.viewPortDiv).on("mouseup", function(e) {
                        "INPUT" !== e.target.tagName && t.focus()
                    }),
                    $(window).on("resize", $.proxy(this.resize, this)),
                    this.initializeLayers()
            },
            initMapState: function(e, t, i) {
                this.mapState = new o(this, e, t, i),
                    new u({
                        app: this.app,
                        location: W.location,
                        mapState: this.mapState,
                        el: $("<div/>").addClass("WazeControlPermalink").appendTo(this.footerControl.div)
                    }).render(),
                    this._addFooterControls()
            },
            registerAccelerators: function(e) {
                e.events.on({
                    panUp: this.panUp,
                    panRight: this.panRight,
                    panDown: this.panDown,
                    panLeft: this.panLeft,
                    zoomIn: this.zoomIn,
                    zoomOut: this.zoomOut,
                    scope: this
                })
            },
            _addFooterControls: function() {
                this.addFooterControl({
                        displayClass: "olControlAttribution",
                        control: new OpenLayers.Control.Attribution
                    }),
                    new d({
                        map: this,
                        el: $("<div/>").addClass("WazeControlMousePosition").appendTo(this.footerControl.div)
                    }).render(),
                    this.addFooterControl({
                        displayClass: "olControlScaleLine",
                        control: new OpenLayers.Control.ScaleLine
                    }),
                    this.addControl(new r({
                        div: $("<div/>").appendTo(this.footerMessages.div)
                    })),
                    new a({
                        mapView: this,
                        model: W.model,
                        $el: $("<div/>").appendTo(this.footerMessages.div)
                    })
            },
            addFooterControl: function(e) {
                var t = $("<div>").addClass(e.displayClass);
                t.appendTo(this.footerControl.div),
                    e.control.div = t[0],
                    this.addControl(e.control)
            },
            focus: function() {
                $(this.div).focus()
            },
            panLeft: function() {
                this.navigationEnabled && this.pan(-this.DefaultPanInPixel, 0, {
                    animate: !1
                })
            },
            panRight: function() {
                this.navigationEnabled && this.pan(this.DefaultPanInPixel, 0, {
                    animate: !1
                })
            },
            panUp: function() {
                this.navigationEnabled && this.pan(0, -this.DefaultPanInPixel, {
                    animate: !1
                })
            },
            panDown: function() {
                this.navigationEnabled && this.pan(0, this.DefaultPanInPixel, {
                    animate: !1
                })
            },
            zoomIn: function() {
                this.navigationEnabled && OL.Map.prototype.zoomIn.apply(this, arguments)
            },
            zoomOut: function() {
                this.navigationEnabled && OL.Map.prototype.zoomOut.apply(this, arguments)
            },
            showOverlay: function() {
                $("#map-overlay").show()
            },
            hideOverlay: function() {
                $("#map-overlay").hide()
            },
            setEditingMediator: function(e) {
                W.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    W.editingMediator.on("change:navigation", this._onNavigationChanged, this)
            },
            setSnapshotManager: function(e) {
                this.snapshotManager = e,
                    this.snapshotManager.on("change:state", this._refreshRoadLayers, this),
                    this._createSnapshotMessage()
            },
            _createSnapshotMessage: function() {
                var e = $(this.div).find(".snapshot-message").css({
                    zIndex: this.Z_INDEX_BASE.Control
                });
                new l({
                    el: e,
                    snapshotManager: this.snapshotManager
                }).render()
            },
            _onEditingEnabledChanged: function() {
                var e = W.editingMediator.get("editingEnabled");
                this.$el.toggleClass("editing-disabled", !e),
                    e || this.panelRegion.empty()
            },
            _onNavigationChanged: function() {
                W.editingMediator.get("navigation") ? (this.zoomBar.show(),
                    this.popupOverlay.hide(),
                    this.navigationEnabled = !0) : (this.zoomBar.hide(),
                    this.popupOverlay.show(),
                    this.navigationEnabled = !1)
            },
            showPopup: function(e) {
                var t = this;
                this.popup !== e && (this.popup && this.popup.close(),
                    this.popup = e,
                    this.popupOverlay.show(),
                    this.removeLightbox(),
                    e.olEvents.register("closed", this, function() {
                        this.removePopup()
                    }),
                    e.render(this.$modalContainer).then(function() {
                        t.positionPopup()
                    }))
            },
            positionPopup: function() {
                var e = this.$modalContainer.find(".map-modal");
                e.css("left", (this.$map.outerWidth(!0) - e.outerWidth()) / 2)
            },
            removePopup: function() {
                this.popup = null,
                    this.popupOverlay.hide(),
                    this.$el.find(".map-modal").removeClass("show").addClass("hide")
            },
            showLightbox: function(e) {
                this.lightbox = e,
                    this.$el.addClass("lightboxShown"),
                    e.show(),
                    e.olEvents.register("closed", this, this.onLightboxClosed)
            },
            onLightboxClosed: function() {
                this.removeLightbox(!0)
            },
            removeLightbox: function(e) {
                null === this.lightbox || e || (this.lightbox.olEvents.unregister("closed", this, this.onLightboxClosed),
                        this.lightbox.close()),
                    this.lightbox = null,
                    this.$el.removeClass("lightboxShown")
            },
            toggleSVMode: function(e) {
                this.$el.toggleClass("street-view-mode", e),
                    this.updateSize()
            },
            resize: function() {
                var e = parseInt(this.$map.css("max-height"), 10),
                    t = parseInt(this.$map.css("min-height"), 10),
                    i = $(window).height() - this.$map.offset().top;
                i > e ? i = e : i < t && (i = t),
                    this.$el.find(".view-area").css("height", i),
                    this.positionPopup(),
                    null !== this.div && (this.updateSize(),
                        this.events.triggerEvent("resize", {
                            height: i
                        }))
            },
            getHeight: function() {
                return this.$map.height()
            },
            moveLayerToTop: function(e) {
                e.setZIndex(this.Z_INDEX_BASE.TopLayer)
            },
            setLayerZIndex: function(e, t) {
                var i = Boolean(e.markers);
                e.setZIndex(this.Z_INDEX_BASE[e.isBaseLayer ? "BaseLayer" : i ? "MarkerOverlay" : "Overlay"] + 5 * t)
            },
            getLayerVisibility: function(e) {
                var t = this.getLayersBy("uniqueName", e).first();
                return t ? t.getVisibility() : null
            },
            getPannable: function() {
                var e = this;
                return {
                    panTo: function(t, i, n) {
                        return e.moveTo(t, i, n)
                    },
                    getZoom: function() {
                        return e.getZoom()
                    }
                }
            },
            getDrawingContext: function(e) {
                return new h(this, e)
            },
            getBoundsWithRatio: function(e) {
                var t = this.calculateBounds();
                if (null === t)
                    return null;
                var i = t.getCenterLonLat(),
                    n = t.getWidth() * e,
                    s = t.getHeight() * e;
                return new OpenLayers.Bounds(i.lon - n / 2, i.lat - s / 2, i.lon + n / 2, i.lat + s / 2)
            },
            toggleLayerSwitcherPinned: function(e) {
                this.$el.toggleClass("layer-switcher-pinned", e)
            },
            CLASS_NAME: "Waze.Map"
        });
    OL.Map.prototype.Z_INDEX_BASE.MarkerOverlay = 850,
        OL.Map.prototype.Z_INDEX_BASE.TopLayer = 9999,
        e.exports = f
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = {
            fontFamily: "WazeFont",
            unicodeMap: {
                ".waze-icon-area": 61696,
                ".waze-icon-arrow-down": 61697,
                ".waze-icon-arrow-left": 61698,
                ".waze-icon-arrow-right": 61699,
                ".waze-icon-arrow-up": 61700,
                ".waze-icon-attach": 61701,
                ".waze-icon-bubble": 61702,
                ".waze-icon-c-alert": 61703,
                ".waze-icon-c-arrow-down": 61704,
                ".waze-icon-c-arrow-left": 61705,
                ".waze-icon-c-arrow-right": 61706,
                ".waze-icon-c-arrow-up": 61707,
                ".waze-icon-calendar": 61708,
                ".waze-icon-check": 61709,
                ".waze-icon-clock": 61710,
                ".waze-icon-close": 61711,
                ".waze-icon-closed-issue": 61712,
                ".waze-icon-closure": 61713,
                ".waze-icon-crosshair": 61714,
                ".waze-icon-detach": 61715,
                ".waze-icon-edit": 61716,
                ".waze-icon-envelope": 61717,
                ".waze-icon-event": 61718,
                ".waze-icon-full-arrow-down": 61719,
                ".waze-icon-full-arrow-left": 61720,
                ".waze-icon-full-arrow-right": 61721,
                ".waze-icon-full-arrow-up": 61722,
                ".waze-icon-hive": 61723,
                ".waze-icon-house": 61724,
                ".waze-icon-km": 61725,
                ".waze-icon-layers": 61726,
                ".waze-icon-map": 61727,
                ".waze-icon-pin": 61728,
                ".waze-icon-place": 61729,
                ".waze-icon-place-car": 61730,
                ".waze-icon-place-culture": 61731,
                ".waze-icon-place-food-drink": 61732,
                ".waze-icon-place-lodging": 61733,
                ".waze-icon-place-natural": 61734,
                ".waze-icon-place-other": 61735,
                ".waze-icon-place-outdoors": 61736,
                ".waze-icon-place-professional": 61737,
                ".waze-icon-place-shopping": 61738,
                ".waze-icon-place-transportation": 61739,
                ".waze-icon-plus": 61740,
                ".waze-icon-plus_neg": 61741,
                ".waze-icon-redo": 61742,
                ".waze-icon-reload": 61743,
                ".waze-icon-road": 61744,
                ".waze-icon-save": 61745,
                ".waze-icon-star": 61746,
                ".waze-icon-trash": 61747,
                ".waze-icon-undo": 61748,
                ".waze-icon-view": 61749,
                ".waze-icon-visible": 61750
            },
            toUnicode: function(e) {
                var t = this.unicodeMap["." + e];
                return String.fromCharCode(t)
            }
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: [W.defaultRule({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillOpacity: 0
                }), W.rule("isUnchanged", !1, {
                    fillColor: "#ff8383",
                    fillOpacity: 1
                })]
            }),
            highlight: new OpenLayers.Style(null, {
                rules: [W.defaultRule({
                    pointRadius: 7,
                    strokeWidth: 0,
                    fillColor: "#00ece3",
                    fillOpacity: 1
                }), W.rule("isUnchanged", !1, {
                    fillOpacity: 1,
                    fillColor: "#eb7171"
                })]
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = W.rule("_cameraRotator", !0, {
            pointRadius: 7,
            strokeOpacity: 1,
            strokeColor: "#aaaaaa",
            fillColor: "#ff3300",
            fillOpacity: 1,
            strokeWidth: 2,
            externalGraphic: null,
            graphicZIndex: 1
        }),
        s = W.rule("type", "camera", {}),
        r = [n, s],
        o = function(e) {
            return new OpenLayers.Style(e, {
                rules: r,
                context: {
                    getAzymuth: function(e) {
                        if (e.model)
                            return e.model.attributes.azymuth
                    },
                    getImageURL: function(e) {
                        var t = e.model;
                        if (t)
                            return i(725)("./camera" + t.attributes.type + t.attributes.validated + ".png")
                    }
                }
            })
        };
    t.default = new OpenLayers.StyleMap({
            default: o({
                externalGraphic: "${getImageURL}",
                pointRadius: 18,
                rotation: "${getAzymuth}",
                graphicZIndex: 1
            }),
            highlight: o({
                pointRadius: 22
            }),
            select: o({
                pointRadius: 22
            }),
            highlightselected: o({
                pointRadius: 22
            }),
            drag: o({
                pointRadius: 22
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./camera2false.png": 726,
        "./camera2true.png": 727,
        "./camera3false.png": 728,
        "./camera3true.png": 729,
        "./camera4false.png": 730,
        "./camera4true.png": 731
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 725
}, function(e, t, i) {
    e.exports = i.p + "img/camera2false939085363a833634fe17e9875b7941e7.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera2truea8ddef53efc28e8201b9f25d75a4e9ad.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera3false71d3b21e423ff7f7b512fcdf4eb94601.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera3trueee9b1b4b6419b735a33d66c2de82c80b.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera4false868766434958991e736f7334b23a498f.png"
}, function(e, t, i) {
    e.exports = i.p + "img/camera4truea43551aca063287131c5aa45520dad41.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            strokeColor: "#ffc62e",
            fillColor: "#ffc62e",
            strokeDashstyle: "solid",
            strokeOpacity: 1,
            strokeWidth: 2,
            fillOpacity: .3,
            graphicZIndex: "${getZIndex}"
        },
        s = function(e) {
            var t = W.defaultRule({
                Polygon: n
            });
            return new OL.Style(null, {
                rules: [t].concat(e),
                context: {
                    getZIndex: function(e) {
                        var t = e.geometry.getBounds();
                        return -Math.floor(t.getHeight() * t.getWidth())
                    }
                }
            })
        },
        r = W.defaultRule({
            Polygon: {
                strokeColor: "#00ece3",
                fillColor: "#00ece3"
            }
        }),
        o = W.defaultRule({
            Polygon: {
                fill: !1,
                strokeDashstyle: "dash",
                strokeColor: "#ff8383"
            }
        }),
        a = W.rule("isUnchanged", !1, {
            Polygon: {
                fillColor: "#ff8383",
                strokeColor: "#ff8383"
            }
        }),
        l = W.rule("_sketch", !0, {
            externalGraphic: null,
            strokeWidth: 3,
            strokeColor: "#00ece3",
            strokeOpacity: 1,
            pointRadius: 6,
            fillColor: "white",
            fillOpacity: 1,
            graphicZIndex: 0
        });
    t.default = new OL.StyleMap({
            default: s([l, a]),
            highlight: s([W.defaultRule({
                Polygon: {
                    strokeColor: "#fed15a",
                    fillColor: "#fed15a"
                }
            }), l, a]),
            select: s([r]),
            highlightselected: s([r]),
            delete: s([o]),
            highlightdeleted: s([o])
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = {
            dragPoint: {
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 6,
                fillColor: "white",
                fillOpacity: 1
            },
            fromNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "A",
                fillColor: "white",
                fillOpacity: 1
            },
            toNodeDragPoint: {
                fontSize: 10,
                fontColor: "#222222",
                strokeWidth: 3,
                strokeColor: "#00ece3",
                strokeOpacity: 1,
                pointRadius: 10,
                label: "B",
                fillColor: "white",
                fillOpacity: 1
            },
            sketchNode: {
                pointRadius: 9,
                strokeOpacity: 1,
                strokeColor: "white",
                fillColor: "#00ece3",
                fillOpacity: 1,
                strokeWidth: 3
            },
            cameraRotator: {
                pointRadius: 7,
                strokeOpacity: 1,
                strokeColor: "#aaaaaa",
                fillColor: "#ff3300",
                fillOpacity: 1,
                strokeWidth: 2
            },
            highlightPlaceHolder: {
                strokeColor: "transparent",
                strokeOpacity: 0,
                strokeWidth: 30
            }
        },
        u = function() {
            var e = [],
                t = !0,
                i = !1,
                n = void 0;
            try {
                for (var s, o = (0,
                        a.default)((0,
                        r.default)(l)); !(t = (s = o.next()).done); t = !0) {
                    var u = s.value,
                        d = l[u];
                    e.push(W.rule("_" + u, !0, d))
                }
            } catch (e) {
                i = !0,
                    n = e
            } finally {
                try {
                    !t && o.return && o.return()
                } finally {
                    if (i)
                        throw n
                }
            }
            return e
        }();
    u.push(W.rule("uneditable", !0, {
            fillColor: "#cecece",
            strokeColor: "#aeaeae"
        })),
        t.default = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(null, {
                rules: u
            }),
            highlight: new OpenLayers.Style(null, {
                rules: u
            })
        }),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(107),
        s = OpenLayers.Class(n, {
            colorEmptyStreetSegments: !1,
            initialize: function() {
                n.prototype.initialize.apply(this, arguments),
                    W.accelerators.events.register("colorEmptyStreets", this, this.colorEmptyStreetsToggled)
            },
            colorEmptyStreetsToggled: function() {
                this.colorEmptyStreetSegments = !this.colorEmptyStreetSegments,
                    this.redraw()
            },
            CLASS_NAME: "Waze.Layer.SegmentLayer"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(107),
        s = OpenLayers.Class(n, {
            nodeDisplayMaxScale: 1e4,
            shouldDisplayFeature: function(e) {
                return !0
            },
            onNodesAdded: function(e) {
                this.onFeaturesAdded(e)
            },
            onNodesChanged: function(e) {
                this.onFeaturesChanged(e)
            },
            onNodesRemoved: function(e) {
                this.onFeaturesRemoved(e)
            },
            onDisplayChanged: function(e) {
                this.displayedNodes = e.scale <= this.nodeDisplayMaxScale
            },
            updateDisplayedFeatures: function(e) {
                n.prototype.updateDisplayedFeatures.apply(this, [OpenLayers.Util.extend({}, e.nodes)])
            },
            CLASS_NAME: "Waze.Layer.NodeLayer"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(42),
        s = i(148),
        r = i(149),
        o = OpenLayers.Class(OpenLayers.Layer.Vector, {
            rendererOptions: {
                zIndexing: !0
            },
            renderers: [n],
            styleMap: s,
            initialize: function(e, t) {
                OpenLayers.Layer.Vector.prototype.initialize.apply(this, arguments),
                    this.driveRenderer = new r(this),
                    this.styleMap.styles.select = new OpenLayers.Style({
                        strokeColor: "black",
                        strokeWidth: 10,
                        pointerEvents: "none"
                    }),
                    this.styleMap.styles.highlight = new OpenLayers.Style({
                        strokeWidth: 10,
                        strokeOpacity: 1
                    })
            },
            setMap: function(e) {
                OpenLayers.Layer.Vector.prototype.setMap.apply(this, arguments),
                    this.map.events.on({
                        zoomend: this.onZoomEnd,
                        scope: this
                    })
            },
            destroy: function() {
                OpenLayers.Layer.Vector.prototype.destroy.apply(this, arguments),
                    this.map && this.map.events.un({
                        zoomend: this.onZoomEnd
                    })
            },
            onZoomEnd: function() {
                this.redraw()
            },
            drawDrive: function() {
                this.clearDrive();
                var e = this.pm.currentSessionData;
                e && e.driveParts.forEach(function(e) {
                    e.isMatched() ? this.driveRenderer.drawUserDrive(e.geometry) : this.driveRenderer.drawDisconnect(e.geometry)
                }, this)
            },
            clearDrive: function() {
                this.removeAllFeatures()
            },
            zoomToDrive: function() {
                var e = this.pm.currentSessionData;
                if (e) {
                    var t = e.getDriveBounds(),
                        i = this.map.getZoomForExtent(t);
                    this.map.setCenter(t.getCenterLonLat(), i)
                }
            },
            redraw: function() {
                this.pm && this.drawDrive()
            },
            CLASS_NAME: "Waze.Layer.ArchiveLayer"
        });
    e.exports = o
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./big_direction_end.png": 738,
        "./big_direction_exit_left.png": 739,
        "./big_direction_exit_right.png": 740,
        "./big_direction_forward.png": 741,
        "./big_direction_left.png": 742,
        "./big_direction_right.png": 743,
        "./big_direction_u.png": 744,
        "./big_directions_roundabout.png": 745,
        "./big_directions_roundabout_UK.png": 746,
        "./big_directions_roundabout_UK_l.png": 747,
        "./big_directions_roundabout_UK_s.png": 748,
        "./big_directions_roundabout_l.png": 749,
        "./big_directions_roundabout_r.png": 750,
        "./big_directions_roundabout_r_UK.png": 751,
        "./big_directions_roundabout_s.png": 752,
        "./big_directions_roundabout_u.png": 753,
        "./big_directions_roundabout_u_UK.png": 754,
        "./unknown.png": 755
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 737
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_end25226c71aed0efd3a2db41978066febc.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_exit_left1c1498a6dec9582bae81d34ec9e6dc3b.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_exit_rightba4fee1380f556a8570252c6745f1442.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_forwardc0958c4d4c5c79bcb656d34f3afb3ea2.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_left5b94fa33f945d46ab1bdd1131ac0457e.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_right2d403871f04763260a40c537e231897e.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_direction_u63cf785b68a57e8663020098cd07ed76.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout9f9bf37022d431be50fecc457cd6e3df.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_UK7dce607d7359326a799fd9d3ad8542aa.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_UK_ldc86a0b99cfcd4ed03b0192d5b350c70.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_UK_s01ea5c47f4e08b20532505d84b3271e0.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_l54dc48b91e36549b26bae30135462780.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_rc114740b6cafc42177a53aa6c803c14d.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_r_UKc34794c4d01ec8a9fa012150d2f1e02a.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_sffadf4fd7b277b8ef2f21688e79b9351.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_u3634283a7d740f30eb18c203f6a357be.png"
}, function(e, t, i) {
    e.exports = i.p + "img/big_directions_roundabout_u_UKba204c8a12885976f9bc5b07165b8644.png"
}, function(e, t, i) {
    e.exports = i.p + "img/unknownb34dd18530431d8e3b14a4750cbe4352.png"
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-drivee7f57df07fa6d5f61eee9b71ae5e18b1.png"
}, function(e, t, i) {
    e.exports = i.p + "img/problem-pinA1d99ad1e8cd947bcea5969fff69d2eb8.png"
}, function(e, t, i) {
    e.exports = i.p + "img/problem-pinBafa0a6c37d9eba8278e82a3a97088206.png"
}, function(e, t, i) {
    e.exports = i.p + "img/one-way-routed9aa340910f8fc7a0fd2285fa0aab968.png"
}, function(e, t, i) {
    "use strict";
    var n = i(107),
        s = i(42),
        r = OL.Class(n, {
            fogOfWar: null,
            renderers: [s],
            styleMap: new OL.StyleMap({
                default: new OL.Style({
                    fillOpacity: .3,
                    strokeOpacity: 1,
                    strokeWidth: 6,
                    fillColor: "white"
                })
            }),
            setMap: function() {
                n.prototype.setMap.apply(this, arguments)
            },
            setVisibility: function() {
                n.prototype.setVisibility.apply(this, arguments),
                    this.getVisibility() ? (this.map.events.register("moveend", this, this._refreshFogOfWar),
                        this._updateUserAreas()) : this.map.events.unregister("moveend", this, this._refreshFogOfWar)
            },
            _refreshFogOfWar: function() {
                this.removeFeatures(this.fogOfWar),
                    this._createFogOfWar(),
                    this.addFeatures(this.fogOfWar),
                    this.redraw()
            },
            onFeaturesAdded: function() {
                this._updateUserAreas()
            },
            _updateUserAreas: function() {
                if (this.removeAllFeatures(),
                    this.getVisibility()) {
                    var e = [];
                    this.model.userAreas.getObjectArray().forEach(function(t) {
                            this._createEditableAreaVector(e, t.geometry)
                        }, this),
                        this._createFogOfWar(),
                        this.addFeatures(e),
                        this.addFeatures(this.fogOfWar)
                }
            },
            _createEditableAreaVector: function(e, t) {
                e.push(new OL.Feature.Vector(t, {}, {
                        maskID: "editableAreaMask",
                        fillColor: "#000000",
                        fillOpacity: 1
                    })),
                    e.push(new OL.Feature.Vector(t.clone(), {}, {
                        fillColor: "transparent",
                        fillOpacity: 0,
                        strokeColor: "gray",
                        strokeWidth: 1
                    }))
            },
            _createFogOfWar: function() {
                this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                    fillColor: "black",
                    fillOpacity: .5,
                    strokeWidth: 0,
                    mask: "url(#editableAreaMask)"
                })
            },
            CLASS_NAME: "Waze.Layer.UserLayer"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    var n = i(91),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Layer.XYZ, {
            key: null,
            tileUrl: "https://www.googleapis.com/tile/v1/tiles/${z}/${x}/${y}?session=${session}&key=${key}",
            type: "satellite",
            language: "en-US",
            region: "us",
            sessionKey: null,
            gettingSession: !1,
            sessionError: !1,
            attributionRequest: null,
            ATTRIBUTION_THROTTLE: 1e3,
            initialize: function(e) {
                e = OpenLayers.Util.applyDefaults({
                    sphericalMercator: !0
                }, e);
                var t = e.name || "Google " + (e.type || this.type),
                    i = [t, null, e];
                OpenLayers.Layer.XYZ.prototype.initialize.apply(this, i),
                    this.tileOptions = OpenLayers.Util.extend({
                        crossOriginKeyword: null
                    }, this.options.tileOptions),
                    this.getSessionKey(),
                    this.updateAttribution = _.debounce(this.updateAttribution, this.ATTRIBUTION_THROTTLE)
            },
            getSessionKey: function() {
                if (!this.gettingSession && !this.sessionError) {
                    this.gettingSession = !0;
                    var e = this;
                    $.ajax({
                        type: "post",
                        url: "https://www.googleapis.com/tile/v1/createSession?key=" + this.key,
                        contentType: "application/json; charset=utf-8",
                        crossDomain: !0,
                        data: (0,
                            s.default)({
                            mapType: this.type,
                            language: this.language,
                            region: this.region
                        })
                    }).done(function(t) {
                        e.sessionKey = t.session,
                            window.setTimeout($.proxy(e.onSessionExpire, e), 72e6),
                            e.redraw(),
                            e.updateAttribution()
                    }).error(function() {
                        e.sessionError = !0,
                            e.events.triggerEvent("loaderror")
                    }).always(function() {
                        e.gettingSession = !1
                    })
                }
            },
            onSessionExpire: function() {
                this.map.events.register("movestart", this, this.renewSessionKey)
            },
            renewSessionKey: function() {
                this.map.events.unregister("movestart", this, this.renewSessionKey),
                    this.sessionKey = null,
                    this.getSessionKey()
            },
            getURL: function(e) {
                if (this.sessionKey) {
                    var t = this.getXYZ(e);
                    return t.session = this.sessionKey,
                        t.key = this.key,
                        OpenLayers.String.format(this.tileUrl, t)
                }
            },
            updateAttribution: function() {
                if (null !== this.sessionKey) {
                    null !== this.attributionRequest && this.attributionRequest.abort();
                    var e = this.map.getExtent(),
                        t = this;
                    null !== e && (e.transform(this.map.getProjectionObject(), new OpenLayers.Projection("EPSG:4326")),
                        this.attributionRequest = $.get("https://www.googleapis.com/tile/v1/viewport", {
                            key: this.key,
                            session: this.sessionKey,
                            zoom: this.getServerZoom(),
                            north: e.top,
                            south: e.bottom,
                            east: e.right,
                            west: e.left
                        }).done(function(e) {
                            t.attribution = e.copyright,
                                t.attribution.length > 0 && (t.attribution += " "),
                                t.attribution += "<a href='http://www.google.com/intl/en-US_US/help/terms_maps.html' target='_blank'>Terms</a>",
                                t.attribution += "<a href='https://www.waze.com/legal/notices' target='_blank'>Notices</a>"
                        }).error(function() {
                            t.attribution = ""
                        }).always(function() {
                            t.attributionRequest = null,
                                t.map.events.triggerEvent("changelayer", {
                                    layer: t,
                                    property: "attribution"
                                })
                        }))
                }
            },
            setMap: function() {
                OpenLayers.Layer.XYZ.prototype.setMap.apply(this, arguments),
                    this.updateAttribution(),
                    this.map.events.register("moveend", this, this.updateAttribution)
            },
            clone: function(e) {
                return null === e && (e = new OpenLayers.Layer.Google(this.options)),
                    e = OpenLayers.Layer.XYZ.prototype.clone.apply(this, [e])
            },
            destroy: function() {
                this.map && this.map.events.unregister("moveend", this, this.updateAttribution),
                    OpenLayers.Layer.XYZ.prototype.destroy.apply(this, arguments)
            },
            CLASS_NAME: "OpenLayers.Layer.Google"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(229),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            initialize: function(e) {
                s.default.prototype.initialize.apply(this, arguments)
            },
            render: function() {
                if (s.default.prototype.render.apply(this, arguments),
                    this.icon.$div.addClass("user-generated"),
                    this.model.attributes.hasComments)
                    return this.icon.$div.addClass("has-comments")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(19),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new s.default("place-update"),
                    i = this._getLocation();
                OL.Marker.prototype.initialize.call(this, i, t),
                    this.render(),
                    this.icon.$div.data("model", this.model),
                    this.icon.$div.attr("data-id", this.model.getID())
            },
            render: function() {
                var e = this.icon.$div,
                    t = e.hasClass("selected");
                return e.removeClass(),
                    e.addClass("place-update"),
                    this._hasMultipleUpdates() ? (e.addClass("multiple"),
                        e.attr("data-update-count", this._getUpdateCount())) : e.addClass(this._getUpdateType()),
                    this.model.hasOpenUpdateRequests() || e.addClass("approved"),
                    t && e.addClass("selected"),
                    e.addClass(this._getSeverity()),
                    this._reposition(this._getLocation())
            },
            _reposition: function(e) {
                if (!e.equals(this.lonlat))
                    return this.lonlat = e,
                        this.moveTo(this.map.getLayerPxFromLonLat(this.lonlat))
            },
            _getLocation: function() {
                return this.model.geometry.getBounds().getCenterLonLat()
            },
            _hasMultipleUpdates: function() {
                return this.model.attributes.venueUpdateRequests.length > 1
            },
            _getUpdateCount: function() {
                return this.model.attributes.venueUpdateRequests.length
            },
            _getUpdateType: function() {
                return this.model.attributes.venueUpdateRequests[0].get("updateType").toLowerCase()
            },
            _getSeverity: function() {
                return this.model.attributes.venueUpdateRequests[0].getSeverity()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        o = i(11),
        a = n(o),
        l = OL.Class(OL.Marker, {
            model: null,
            initialize: function(e) {
                this.model = e;
                var t = new r.default("road-closure"),
                    i = this._getCenter();
                OL.Marker.prototype.initialize.call(this, i.lonlat, t),
                    this.icon.$div.data("model", this.model),
                    this._createArrow(i.angle).appendTo(this.icon.$div),
                    this.render()
            },
            _createArrow: function(e) {
                var t = 360 - e.toDeg(),
                    i = "forward";
                return this.model.forward || (t -= 180,
                        i = "backward"),
                    this.arrow = $("<div>").addClass("arrow").addClass(i).css({
                        transform: "rotate(" + t + "deg)"
                    }),
                    this.arrow
            },
            _getCenter: function() {
                var e = this.model.geometry.getLength(),
                    t = a.default.getPointAlongLine(this.model.geometry.getVertices(), e / 2),
                    i = t.point;
                return {
                    angle: t.angle,
                    lonlat: new OL.LonLat(i.x, i.y)
                }
            },
            render: function() {
                return this.icon.$div.toggleClass("inactive", !this.model.active)
            },
            toggle: function(e) {
                return this.icon.$div.toggle(e)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = OL.Class(OL.Layer, {
            isBaseLayer: !1,
            markers: null,
            repo: null,
            drawn: !1,
            $div: null,
            className: null,
            markerClass: OL.Marker,
            filter: null,
            initialize: function(e, t, i) {
                OL.Layer.prototype.initialize.apply(this, [e, i]),
                    this.markers = {},
                    this.repo = t,
                    i.className && (this.className = i.className),
                    this._registerEvents()
            },
            destroy: function() {
                return this.clearMarkers(),
                    this.markers = null,
                    this._unregisterEvents(),
                    OL.Layer.prototype.destroy.apply(this, arguments)
            },
            _registerEvents: function() {
                return this.div.addEventListener("click", this._onDivClick.bind(this)),
                    this._registerRepoEvents()
            },
            _unregisterEvents: function() {
                return this.div.removeEventListener("click", this._onDivClick),
                    this._unregisterRepoEvents()
            },
            _registerRepoEvents: function() {
                var e = this;
                return this.repo.map(function(t) {
                    return t.on("objectsadded", e.onFeaturesAdded, e),
                        t.on("objectschanged", e.onFeaturesChanged, e),
                        t.on("objectsremoved", e.onFeaturesRemoved, e)
                })
            },
            _unregisterRepoEvents: function() {
                var e = this;
                return this.repo.map(function(t) {
                    return t.off("objectsadded", e.onFeaturesAdded, e),
                        t.off("objectschanged", e.onFeaturesChanged, e),
                        t.off("objectsremoved", e.onFeaturesRemoved, e)
                })
            },
            shouldAddFeature: function(e) {
                return !this.filter || this.filter(e)
            },
            onFeaturesAdded: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t];
                    if (this.shouldAddFeature(i)) {
                        var n = new this.markerClass(i);
                        this.addMarker(n, i.getID())
                    }
                }
            },
            onFeaturesChanged: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t],
                        n = this._findMarker(i);
                    null != n ? this.shouldAddFeature(i) ? (this.drawMarker(n),
                        n.render()) : this.removeMarker(n) : this.shouldAddFeature(i) && (n = new this.markerClass(i),
                        this.addMarker(n, i.getID()))
                }
            },
            _findMarker: function(e) {
                return this.markers[e.getID()] || this._findMarkerByOldID(e)
            },
            _findMarkerByOldID: function(e) {
                if (null != e._prevID) {
                    var t = this.markers[e._prevID];
                    if (null != t)
                        return t.id = e.getID(),
                            this.markers[t.id] = t,
                            delete this.markers[e._prevID],
                            t
                }
                return null
            },
            onFeaturesRemoved: function(e) {
                for (var t = 0; t < e.length; t++) {
                    var i = e[t],
                        n = this.markers[i.getID()];
                    null != n && this.removeMarker(n)
                }
            },
            setOpacity: function(e) {
                if (e !== this.opacity) {
                    this.opacity = e;
                    var t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, o = (0,
                                a.default)((0,
                                r.default)(this.markers)); !(t = (s = o.next()).done); t = !0) {
                            var l = s.value;
                            this.markers[l].setOpacity(this.opacity)
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && o.return && o.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
            },
            moveTo: function(e, t, i) {
                if (OL.Layer.prototype.moveTo.apply(this, arguments),
                    t || !this.drawn) {
                    var n = !0,
                        s = !1,
                        o = void 0;
                    try {
                        for (var l, u = (0,
                                a.default)((0,
                                r.default)(this.markers)); !(n = (l = u.next()).done); n = !0) {
                            var d = l.value,
                                c = this.markers[d];
                            this.drawMarker(c)
                        }
                    } catch (e) {
                        s = !0,
                            o = e
                    } finally {
                        try {
                            !n && u.return && u.return()
                        } finally {
                            if (s)
                                throw o
                        }
                    }
                    this.drawn = !0
                }
            },
            addMarker: function(e, t) {
                if (this.markers[t] = e,
                    e.id = t,
                    this.map && this.map.getExtent())
                    return e.map = this.map,
                        this.drawMarker(e)
            },
            getMarker: function(e) {
                return this.markers[e]
            },
            removeMarker: function(e) {
                if (this.markers)
                    return OL.Util.removeItem(this.markers, e),
                        e.erase(),
                        delete this.markers[e.id]
            },
            clearMarkers: function() {
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            a.default)((0,
                            r.default)(this.markers)); !(e = (n = s.next()).done); e = !0) {
                        var o = n.value,
                            l = this.markers[o];
                        this.removeMarker(l)
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
            },
            drawMarker: function(e) {
                var t = this.map.getLayerPxFromLonLat(e.lonlat);
                if (null == t)
                    return e.display(!1);
                if (!e.isDrawn()) {
                    var i = e.draw(t);
                    return i.classList.add("map-marker"),
                        this.div.appendChild(i)
                }
                return e.icon ? e.icon.moveTo(t) : void 0
            },
            setMap: function() {
                if (OL.Layer.prototype.setMap.apply(this, arguments),
                    this.$div = $(this.div),
                    this.$div.addClass("marker-layer"),
                    this.className)
                    return this.$div.addClass(this.className)
            },
            getDataExtent: function() {
                var e = null;
                if (this.markers) {
                    e = new OL.Bounds;
                    var t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, o = (0,
                                a.default)((0,
                                r.default)(this.markers)); !(t = (s = o.next()).done); t = !0) {
                            var l = s.value,
                                u = this.markers[l];
                            e.extend(u.lonlat)
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && o.return && o.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
                return e
            },
            getContainer: function() {
                return this.div
            },
            _onDivClick: function(e) {
                if (e.target.classList.contains("map-marker"))
                    return this.events.triggerEvent("markerclick", e), !1
            },
            CLASS_NAME: "W.Layer.Markers"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class(OL.Layer.XYZ, {
        getURL: function(e) {
            var t = OL.Layer.XYZ.prototype.getURL.apply(this, arguments),
                i = OL.Util.getParameterString(this.params);
            return OL.Util.urlAppend(t, i)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class(OpenLayers.Control.PanZoomBar, {
        zoomStopWidth: 27,
        zoomStopHeight: 9,
        streetViewContainer: null,
        draw: function(e) {
            var t = null === this.div;
            OpenLayers.Control.prototype.draw.apply(this, arguments),
                this.div.style.left = "",
                this.div.style.top = "",
                e = this.position.clone(),
                this.buttons = [];
            var i = new OpenLayers.Size(32, 32),
                n = new OpenLayers.Pixel(e.x + i.w / 2, e.y);
            return this._addButton("zoomin", n, i, "zoom-plus-button"),
                this._addZoomBar(n),
                this._addButton("zoomout", n, i, "zoom-minus-button"),
                this.streetViewContainer = $("<div />").addClass("street-view-control-container").appendTo($(this.div)),
                this.geoLocationContainer = $("<div />").addClass("geolocation-control-container").appendTo($(this.div)),
                this.buttons.push(this.streetViewContainer.get(0)),
                t && $(this.div).on("click", function(e) {
                    var t = e.target;
                    switch (t.action) {
                        case "zoomin":
                            t.map.zoomIn();
                            break;
                        case "zoomout":
                            t.map.zoomOut()
                    }
                    return !1
                }).on("dblclick click mousedown dragstart", function(e) {
                    e.stopPropagation()
                }),
                this.events.triggerEvent("drawn"),
                this.div
        },
        _addZoomBar: function(e) {
            var t = this.map.getNumZoomLevels() - 1 - this.map.getZoom(),
                i = document.createElement("div");
            i.style.top = e.y + t * this.zoomStopHeight + "px",
                $(i).addClass("slider"),
                this.slider = i,
                this.sliderEvents = new OpenLayers.Events(this, i, null, !0, {
                    includeXY: !0
                }),
                this.sliderEvents.on({
                    mousedown: this.zoomBarDown,
                    mousemove: this.zoomBarDrag,
                    mouseup: this.zoomBarUp,
                    dblclick: this.doubleClick,
                    click: this.doubleClick
                });
            var n = new OpenLayers.Size;
            n.h = this.zoomStopHeight * this.map.getNumZoomLevels(),
                n.w = this.zoomStopWidth;
            var s = null;
            return s = document.createElement("div"),
                s.id = "OpenLayers_Control_PanZoomBar_Zoombar" + this.map.id,
                s.style.top = e.y - 0 * this.zoomStopHeight + "px",
                s.style.height = this.zoomStopHeight * (this.map.getNumZoomLevels() + 0) + "px",
                $(s).addClass("slider-stops"),
                this.zoombarDiv = s,
                this.divEvents = new OpenLayers.Events(this, s, null, !0, {
                    includeXY: !0
                }),
                this.divEvents.on({
                    mousedown: this.divClick,
                    mousemove: this.passEventToSlider,
                    dblclick: this.doubleClick,
                    click: this.doubleClick
                }),
                this.div.appendChild(s),
                this.startTop = parseInt(s.style.top, 10),
                this.div.appendChild(i),
                this.map.events.register("zoomend", this, this.moveZoomBar),
                e = e.add(0, this.zoomStopHeight * this.map.getNumZoomLevels())
        },
        doubleClick: function(e) {
            return OpenLayers.Event.stop(e), !1
        },
        divClick: function(e) {
            if (OpenLayers.Event.isLeftClick(e)) {
                var t = e.xy.y / this.zoomStopHeight;
                !this.forceFixedZoomLevel && this.map.fractionalZoom || (t = Math.floor(t));
                var i = this.map.getNumZoomLevels() - 1 - t;
                i = Math.min(Math.max(i, 0), this.map.getNumZoomLevels() - 1),
                    this.map.zoomTo(i),
                    OpenLayers.Event.stop(e)
            }
        },
        getZoomStopsHeight: function() {
            return this.zoomStopHeight * this.map.getNumZoomLevels()
        },
        _addButton: function(e, t, i, n) {
            var s = document.createElement("div"),
                r = $(s),
                o = void 0;
            if (s.style.top = t.y + "px",
                s.id = this.id + "_" + e,
                r.addClass(n),
                r.addClass("zoom-button"),
                this.div.appendChild(s),
                s.action = e,
                s.map = this.map,
                this.slideRatio) {
                var a = this.slideRatio;
                o = function(e) {
                    return this.map.getSize()[e] * a
                }
            } else {
                var l = this.slideFactor;
                o = function() {
                    return l
                }
            }
            return s.getSlideFactor = o,
                this.buttons.push(s),
                s
        },
        show: function() {
            $(this.div).show()
        },
        hide: function() {
            $(this.div).hide()
        },
        CLASS_NAME: "OpenLayers.Control.PanZoomBar"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class(OL.Control, {
        googleAerialLayer: null,
        $div: null,
        $link: null,
        destroy: function() {
            return this.map.events.un({
                    changelayer: this.toggleVisibility,
                    scope: this
                }),
                OL.Control.prototype.destroy.apply(this, arguments)
        },
        draw: function() {
            return OL.Control.prototype.draw.apply(this, arguments),
                this.map.events.on({
                    changelayer: this.toggleVisibility,
                    scope: this
                }),
                this.$div = $(this.div).addClass("google-permalink"),
                this.$link = $("<a/>").attr({
                    target: "blank",
                    href: "http://maps.google.com"
                }).appendTo(this.$div),
                this.div
        },
        toggleVisibility: function() {
            var e = this.map.baseLayer,
                t = e && e.getVisibility();
            return this.$div.toggle(t)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(54),
        u = n(l),
        d = i(222),
        c = n(d),
        h = i(13),
        p = n(h),
        f = i(770),
        g = n(f),
        m = OL.Class(u.default, {
            locationsPerEnv: null,
            mapLocation: null,
            isMapLocationChanged: !1,
            mapSelection: null,
            selectedProblem: null,
            preselectedProblem: null,
            marker: null,
            urlParams: null,
            initialize: function(e, t, i, n) {
                return this.map = e,
                    this.selectionManager = t,
                    this.app = i,
                    this.togglers = n,
                    u.default.prototype.initialize.apply(this, arguments),
                    this.mapSelection = {},
                    this.marker = !1,
                    this.locationsPerEnv = {},
                    this._restore(),
                    this.map.events.on({
                        moveend: this._onMapLocationChanged,
                        scope: this
                    }),
                    this.selectionManager.events.on({
                        selectionchanged: this._onSelectionChanged,
                        scope: this
                    }),
                    this.app.on("change:loggedIn", this._onUserChanged, this),
                    W.vent.on({
                        "problems:shown": this._onProblemShown,
                        "problems:closed": this._onProblemClosed
                    }, this),
                    this.togglers.on("change", this._triggerStateChanged, this), !0
            },
            destroy: function() {
                this.map.events.un({
                        moveend: this._onMapLocationChanged,
                        scope: this
                    }),
                    this.selectionManager.events.un({
                        selectionchanged: this._onSelectionChanged,
                        scope: this
                    }),
                    this.togglers.off("change", this._onTogglersChanged, this)
            },
            _onMapLocationChanged: function() {
                return this.updateMapLocation()
            },
            _onUserChanged: function() {
                if (this.app.get("loggedIn") && !this.isMapLocationChanged)
                    return this._setLocationToUserDrive(this.app.get("user"))
            },
            _setLocationToUserDrive: function(e) {
                var t = e.editableAreas ? e.editableAreas.components : [];
                if (0 !== t.length) {
                    var i = t[0].getBounds(),
                        n = this.map.getZoomForExtent(i),
                        s = i.getCenterLonLat();
                    return s.zoom = n,
                        this.mapLocation = s,
                        this._setMapLocation()
                }
            },
            _setLocalStorage: function(e, t) {
                if (!W.app.isSandboxMode())
                    return p.default.localStorage.set(e, t)
            },
            updateMapLocation: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : W.location.code,
                    t = this.map.getCenter(),
                    i = this.map.getZoom();
                if (null != t)
                    return t.zoom = i,
                        this.mapLocation = t,
                        this.locationsPerEnv[e] = t,
                        this._setLocalStorage(m.LOCAL_STORAGE_MAP_LOCATION, this.locationsPerEnv),
                        this.isMapLocationChanged = !0,
                        this._triggerStateChanged(), !0
            },
            _getSelectedFeaturesByType: function() {
                for (var e = {}, t = 0; t < this.selectionManager.selectedItems.length; t++) {
                    var i = this.selectionManager.selectedItems[t];
                    if (!i.model.isNew()) {
                        var n = e[i.model.type + "s"] || [];
                        e[i.model.type + "s"] = n,
                            n.push(i.model.getID())
                    }
                }
                return this.selectedProblem && (e[this.selectedProblem.type] = this.selectedProblem.getID()),
                    e
            },
            _onSelectionChanged: function(e) {
                return this._updateMapSelection(), !0
            },
            _onProblemShown: function(e) {
                return this.selectedProblem = e,
                    this._updateMapSelection()
            },
            _onProblemClosed: function() {
                return this.selectedProblem = null,
                    this._updateMapSelection()
            },
            _updateMapSelection: function() {
                return this.mapSelection = this._getSelectedFeaturesByType(),
                    this._triggerStateChanged()
            },
            _triggerStateChanged: function() {
                return this.trigger("statechanged", {
                    center: this._getProjectedCenter(),
                    selection: this.mapSelection,
                    marker: this.marker,
                    s: this.togglers.serialize()
                })
            },
            _getProjectedCenter: function() {
                var e = this.mapLocation.zoom,
                    t = this.mapLocation.clone();
                return t.transform(this.map.getProjectionObject(), this.map.displayProjection),
                    t.zoom = e,
                    t
            },
            _isTogglerTreeParamPresent: function() {
                return null != this.urlParams.s && /^\d+$/.test(this.urlParams.s)
            },
            _restoreLayerVisibility: function() {
                var e = new g.default(this.urlParams);
                this._isTogglerTreeParamPresent() ? this.togglers.setStateFromBitfield(this.urlParams.s) : e.isLayerParamPresent() ? this.togglers.setState(e.getTogglersState()) : this.togglers.readFromLocalStorage(),
                    this.togglers.writeStateToApp({
                        map: this.map,
                        dataModel: W.model
                    })
            },
            _restoreMapLocation: function() {
                this.locationsPerEnv = p.default.localStorage.get(m.LOCAL_STORAGE_MAP_LOCATION),
                    null == this.locationsPerEnv && (this.locationsPerEnv = {});
                var e = this.locationsPerEnv[W.location.code];
                if (this.urlParams.lat && this.urlParams.lon) {
                    var t = new OL.LonLat(parseFloat(this.urlParams.lon), parseFloat(this.urlParams.lat));
                    if (t.transform(this.map.displayProjection, this.map.getProjectionObject()),
                        this.urlParams.zoom) {
                        var i = parseFloat(this.urlParams.zoom);
                        t.zoom = i
                    }
                    this.mapLocation = t,
                        this.isMapLocationChanged = !0
                } else if (null != e) {
                    var n = new OL.LonLat(e.lon, e.lat);
                    n.zoom = e.zoom,
                        this.mapLocation = n,
                        this.isMapLocationChanged = !0
                }
            },
            _restoreMarker: function() {
                this.marker = this.urlParams.marker
            },
            _restoreSelection: function() {
                var e = this;
                this.selectionManager.getSelectableRepos().forEach(function(t) {
                    var i = e.urlParams[t.name];
                    i && (i instanceof Array || (i = [i]),
                        e.mapSelection[t.name] = i)
                })
            },
            _selectObjects: function() {
                if (W.model.events.unregister("mergeend", this, this._selectObjects),
                    this.mapSelection) {
                    var e = [],
                        t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, o = (0,
                                a.default)((0,
                                r.default)(this.mapSelection)); !(t = (s = o.next()).done); t = !0) {
                            var l = s.value,
                                u = this.mapSelection[l],
                                d = W.model[l];
                            if (u && d)
                                for (var c = 0; c < u.length; c++) {
                                    var h = u[c],
                                        p = d.get(h);
                                    p && e.push(p)
                                }
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && o.return && o.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                    e.isEmpty() || this.selectionManager.select(e)
                }
                return this._selectProblem()
            },
            _restoreProblemSelection: function() {
                for (var e = [W.model.mapUpdateRequests, W.model.problems], t = 0; t < e.length; t++) {
                    var i = e[t],
                        n = i.objectType,
                        s = this.urlParams[n];
                    if (null != s)
                        return void(this.preselectedProblem = {
                            repo: i,
                            problemID: s
                        })
                }
            },
            _selectProblem: function() {
                if (this.preselectedProblem) {
                    var e = this.preselectedProblem.repo.get(this.preselectedProblem.problemID);
                    e && W.commands.execute("problems:show", e)
                }
            },
            _setupMap: function() {
                if (this._setMapLocation(),
                    this.marker) {
                    var e = new OL.Layer.Vector("PermalinkMarker", {
                            styleMap: c.default.permalinkMarker
                        }),
                        t = void 0;
                    t = this.mapLocation ? this.mapLocation.clone() : this.map.getCenter();
                    var i = new OL.Geometry.Point(t.lon, t.lat),
                        n = new OL.Feature.Vector(i);
                    this.map.addLayer(e),
                        e.addFeatures(n)
                }
                return W.model.events.register("mergeend", this, this._selectObjects)
            },
            _setMapLocation: function() {
                if (this.mapLocation) {
                    var e = this.mapLocation.clone();
                    return this.map.setCenter(e, this.mapLocation.zoom)
                }
            },
            _restore: function() {
                return this.urlParams = OL.Util.getParameters(window.location.href),
                    this._restoreMapLocation(),
                    this._restoreMarker(),
                    this._restoreSelection(),
                    this._restoreProblemSelection(),
                    this._restoreLayerVisibility(),
                    this._setupMap()
            }
        });
    _.extend(m, {
            LOCAL_STORAGE_MAP_LOCATION: "mapLocation"
        }),
        t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r, o = i(3),
        a = n(o),
        l = i(21),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(2),
        p = n(h),
        f = i(17),
        g = n(f),
        m = i(106),
        v = n(m),
        _ = i(151),
        y = n(_),
        b = i(75),
        E = n(b),
        w = y.default,
        S = v.default.LAYER_UNIQUE_NAMES,
        M = (s = {},
            (0,
                g.default)(s, S.SATELLITE_IMAGERY, w.ITEM_SATELLITE_IMAGERY),
            (0,
                g.default)(s, S.ROADS, w.ITEM_ROAD),
            (0,
                g.default)(s, S.GPS_POINTS, w.ITEM_GPS_POINTS),
            (0,
                g.default)(s, S.AREA_MANAGERS, w.ITEM_AREA_MANAGERS),
            (0,
                g.default)(s, S.LANDMARKS, w.ITEM_VENUES),
            (0,
                g.default)(s, S.SPEED_CAMERAS, w.ITEM_SPEED_CAMERAS),
            (0,
                g.default)(s, S.PROBLEMS, w.ITEM_MAP_PROBLEMS),
            (0,
                g.default)(s, S.UPDATE_REQUESTS, w.ITEM_UPDATE_REQUESTS),
            (0,
                g.default)(s, S.EDITABLE_AREAS, w.ITEM_EDITABLE_AREAS),
            (0,
                g.default)(s, S.LIVE_USERS, w.ITEM_LIVE_USERS),
            (0,
                g.default)(s, S.PLACE_UPDATES, w.ITEM_PLACE_UPDATE_REQUESTS),
            (0,
                g.default)(s, S.BIG_JUNCTIONS, w.ITEM_JUNCTION_BOXES),
            (0,
                g.default)(s, S.CLOSURES, w.ITEM_CLOSURES),
            s),
        C = (r = {},
            (0,
                g.default)(r, w.GROUP_ISSUES, !0),
            (0,
                g.default)(r, w.GROUP_MAP_ISSUES, !0),
            (0,
                g.default)(r, w.GROUP_PLACES, !0),
            (0,
                g.default)(r, w.GROUP_ROAD, !0),
            (0,
                g.default)(r, w.GROUP_DISPLAY, !0),
            r),
        T = function() {
            function e(t) {
                (0,
                    c.default)(this, e),
                this._urlParams = t
            }
            return (0,
                    p.default)(e, [{
                    key: "isLayerParamPresent",
                    value: function() {
                        return null != this._urlParams.layers && /^\d+$/.test(this._urlParams.layers)
                    }
                }, {
                    key: "getTogglersState",
                    value: function() {
                        var e = (0,
                                u.default)({}, C),
                            t = new E.default(this._urlParams.layers);
                        return (0,
                                a.default)(M).forEach(function(i) {
                                var n = v.default.layerVisibilityBitmask[i],
                                    s = 1 << n;
                                e[M[i]] = t.isEnabled(s)
                            }),
                            e
                    }
                }]),
                e
        }();
    t.default = T,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(34),
        r = n(s),
        o = i(20),
        a = n(o),
        l = OL.Class(r.default, {
            template: "location-message",
            events: {
                "click a": "onLocationLinkClicked",
                "click .close": "onCloseClicked"
            },
            initialize: function(e) {
                return r.default.prototype.initialize.apply(this, arguments),
                    this.model.restrictedAreas.on(a.default.UPDATED, this.onRestrictedAreasChanged, this),
                    this.onRestrictedAreasChanged()
            },
            onRestrictedAreasChanged: function() {
                var e = this.model.restrictedAreas.getInvalidEnvs();
                return e = _.filter(e, function(e) {
                        return e.attributes.env !== W.location.code
                    }),
                    e.length > 0 ? (this.otherEnv = e[0].attributes.env,
                        this.render(),
                        this.show()) : this.hide()
            },
            serialize: function() {
                return {
                    model: this.model,
                    view: this
                }
            },
            onLocationLinkClicked: function(e) {
                e.preventDefault();
                var t = $(e.target).data("env");
                return W.map.mapState.updateMapLocation(t),
                    W.location.changeAndRemovePermalink(t)
            },
            hide: function() {
                return r.default.prototype.hide.apply(this, arguments)
            },
            onCloseClicked: function() {
                this.hide(),
                    this.model.restrictedAreas.off(a.default.UPDATED, this.onRestrictedAreasChanged, this)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        className: "snapshot-message",
        template: "templates/snapshot-message",
        events: {
            "click .return-to-edit-mode": "_onReturnToEditModeClicked"
        },
        initialize: function() {
            return this.snapshotManager = this.options.snapshotManager,
                this.listenTo(this.snapshotManager, "change:state", this.render)
        },
        onRender: function() {
            return this.$el.toggle(this.snapshotManager.isSnapshotOn())
        },
        _onReturnToEditModeClicked: function() {
            return this.snapshotManager.toggle(!1)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(102),
        r = n(s),
        o = i(230),
        a = n(o),
        l = Backbone.Model.extend({
            defaults: function() {
                return {
                    env: null,
                    lon: null,
                    lat: null,
                    zoom: null,
                    marker: !1,
                    appState: {},
                    selection: {},
                    s: 0
                }
            },
            hrefAttributes: ["env", "lon", "lat", "s", "zoom", "marker"],
            initialize: function(e) {
                return this.app = e.app,
                    this.mapState = e.mapState,
                    this.location = e.location,
                    this._bindEvents(),
                    this._setAppState(),
                    this._setLocation(),
                    this
            },
            onDestroy: function() {
                return this._unbindEvents()
            },
            _bindEvents: function() {
                this.listenTo(this.app, "change:mode", this._setAppState),
                    this.listenTo(this.app, r.default.STATE_CHANGED, this._setAppState),
                    this.location.events.register("change", this, this._setLocation),
                    this.mapState.on("statechanged", this._setMapState, this)
            },
            _unbindEvents: function() {
                return this.location.events.unregister("change", this, this._setLocation),
                    this.mapState.off("statechanged", this._setMapState, this)
            },
            _setAppState: function() {
                this.set({
                    appState: this.app.getState()
                })
            },
            _setLocation: function() {
                this.set({
                    env: this.location.code
                })
            },
            _setMapState: function(e) {
                return this.set({
                    lon: e.center.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: e.center.lat.toFixed(W.Config.units.lonLatPrecision),
                    s: e.s,
                    zoom: e.center.zoom,
                    marker: !!e.marker || void 0,
                    selection: e.selection
                })
            },
            getHref: function() {
                var e = _.pick(this.attributes, this.hrefAttributes);
                _.extend(e, this.get("appState")),
                    _.extend(e, this.get("selection"));
                var t = OL.Util.getParameterString(e);
                return "" + window.location.origin + window.location.pathname + "?" + t
            }
        }),
        u = Marionette.View.extend({
            template: "Waze/Modules/MapControls/templates/permalink",
            mapState: null,
            marker: null,
            clipboard: null,
            ui: {
                permalink: ".permalink",
                livemapLink: ".livemap-link"
            },
            events: {
                "click @ui.permalink": "_onPermalinkClick",
                "mouseover @ui.permalink": "_onPermalinkMouseOver"
            },
            initialize: function(e) {
                return Marionette.View.prototype.initialize.apply(this, arguments),
                    this.mapState = e.mapState,
                    this.mapState.on("statechanged", this._setLivemapLink, this),
                    this.permalinkModel = new l({
                        app: e.app,
                        mapState: e.mapState,
                        location: e.location
                    }),
                    this.listenTo(this.permalinkModel, "change", this._setPermalinkLink),
                    this.clipboard = new a.default,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }), !0
            },
            _onPermalinkClick: function(e) {
                return e.stopPropagation(),
                    W.Report.generalAction("permalink_clicked")
            },
            _onPermalinkMouseOver: function(e) {
                return this.clipboard.set($(e.target).attr("href"))
            },
            _onClipboardCopied: function(e) {
                return this.ui.permalink.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.link_copied"))
            },
            _setPermalinkLink: function() {
                var e = this.permalinkModel.getHref();
                return this.ui.permalink.attr("href", e)
            },
            _setLivemapLink: function(e) {
                var t = e.center,
                    i = t.zoom + W.Config.livemap.zoom_offset;
                i = Math.min(W.Config.livemap.max_zoom, i);
                var n = $.param({
                    lon: t.lon.toFixed(W.Config.units.lonLatPrecision),
                    lat: t.lat.toFixed(W.Config.units.lonLatPrecision),
                    zoom: i
                });
                return this.ui.livemapLink.attr("href", W.Config.livemap.url + "?" + n)
            },
            onRender: function() {
                return this.ui.permalink.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.permalink)
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(230),
        r = n(s),
        o = i(11),
        a = n(o),
        l = Marionette.View.extend({
            granularity: 10,
            numDigits: 5,
            lastXy: null,
            mouseOver: !1,
            clipboard: null,
            template: "Waze/Modules/MapControls/templates/mouse_position",
            ui: {
                mousePosition: ".mouse-position"
            },
            events: {
                "mouseover @ui.mousePosition": "_onMouseOver",
                "mouseout @ui.mousePosition": "_onMouseOut"
            },
            initialize: function(e) {
                return this.map = e.map,
                    this.map.events.register("mousemove", this, this._onMapMouseMove),
                    this.clipboard = new r.default,
                    this.clipboard.events.on({
                        copied: this._onClipboardCopied,
                        scope: this
                    }), !0
            },
            onDestroy: function() {
                return this.map.events.unregister("mousemove", this, this._onMapMouseMove),
                    this.clipboard.events.un({
                        copied: this._onClipboardCopied,
                        scope: this
                    })
            },
            onRender: function() {
                return this.ui.mousePosition.tooltip({
                        placement: "top"
                    }),
                    this.clipboard.setEl(this.ui.mousePosition)
            },
            _formatOutput: function(e) {
                var t = parseInt(this.numDigits, 10);
                return e.lon.toFixed(t) + " " + e.lat.toFixed(t)
            },
            _onMouseOver: function(e) {
                this.mouseOver = !0;
                var t = this.map.getExtent().getCenterLonLat();
                return a.default.unproject(t),
                    this._updateHtmlFromLonLat(t),
                    this.clipboard.set(this.ui.mousePosition.html())
            },
            _onMouseOut: function(e) {
                this.mouseOver = !1
            },
            _onClipboardCopied: function(e) {
                return this.ui.mousePosition.next(".tooltip").find(".tooltip-inner").text(I18n.t("footer.coords_copied"))
            },
            _updateHtmlFromLonLat: function(e) {
                var t = this._formatOutput(e);
                if (t !== this.ui.mousePosition.html())
                    return this.ui.mousePosition.html(t)
            },
            _onMapMouseMove: function(e) {
                if (null != e && !this.mouseOver) {
                    (null == this.lastXy || Math.abs(e.xy.x - this.lastXy.x) > this.granularity || Math.abs(e.xy.y - this.lastXy.y) > this.granularity) && (this.lastXy = e.xy);
                    var t = this.map.getLonLatFromPixel(e.xy);
                    if (null == t)
                        return;
                    a.default.unproject(t),
                        this._updateHtmlFromLonLat(t),
                        this.lastXy = e.xy
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.Region.extend({
        el: "#panel-container",
        mapHeight: null,
        initialize: function(e) {
            return e.map.events.register("resize", this, this._onMapResize),
                this._bindCloseButtons()
        },
        onShow: function(e, t) {
            return this._ensureElement(),
                t.$el.addClass("panel"),
                this._setViewHeight()
        },
        _bindCloseButtons: function() {
            var e = this;
            return this.$el.on("click", ".close-panel, .done", function(t) {
                return e.trigger("closeClicked"),
                    e.empty()
            })
        },
        _onMapResize: function(e) {
            return this.mapHeight = e.height,
                this._setViewHeight()
        },
        _setViewHeight: function(e) {
            if (this.currentView && !this.currentView.isDestroyed()) {
                var t = this.mapHeight;
                t -= parseInt(this.currentView.$el.css("marginTop"), 10),
                    t -= parseInt(this.currentView.$el.css("marginBottom"), 10),
                    this.currentView.setMaxHeight && this.currentView.setMaxHeight(t)
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = i(42),
        u = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                (0,
                    r.default)(this, e),
                this._map = t,
                    this._options = i,
                    this._vectorLayer = null,
                    this._markerLayer = null,
                    this._styleMap = null,
                    this._map.events.register("zoomend", this, this._onMapZoomed)
            }
            return (0,
                    a.default)(e, [{
                    key: "destroy",
                    value: function() {
                        null !== this._vectorLayer && (this._map.removeLayer(this._vectorLayer),
                                this._vectorLayer.destroy()),
                            null !== this._markerLayer && (this._map.removeLayer(this._markerLayer),
                                this._markerLayer.destroy()),
                            this._map.events.unregister("zoomend", this, this._onMapZoomed)
                    }
                }, {
                    key: "addFeatures",
                    value: function(e) {
                        this._getVectorLayer().addFeatures(e)
                    }
                }, {
                    key: "redrawFeature",
                    value: function(e) {
                        this._getVectorLayer().drawFeature(e)
                    }
                }, {
                    key: "addMarkers",
                    value: function(e) {
                        var t = this;
                        e.forEach(function(e) {
                            t._getMarkerLayer().addMarker(e),
                                e.layer = t._getMarkerLayer()
                        })
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this.removeAllFeatures(),
                            this.removeAllMarkers()
                    }
                }, {
                    key: "removeAllMarkers",
                    value: function() {
                        var e = this;
                        null !== this._markerLayer && this._markerLayer.markers.forEach(function(t) {
                            e._markerLayer.removeMarker(t),
                                t.destroy()
                        })
                    }
                }, {
                    key: "removeAllFeatures",
                    value: function() {
                        null !== this._vectorLayer && this._vectorLayer.removeAllFeatures()
                    }
                }, {
                    key: "setStyleMap",
                    value: function(e) {
                        this._styleMap = e,
                            null !== this._vectorLayer && (this._vectorLayer.styleMap = e)
                    }
                }, {
                    key: "moveLayerToTop",
                    value: function() {
                        this._map.moveLayerToTop(this._getMarkerLayer()),
                            this._map.moveLayerToTop(this._getVectorLayer())
                    }
                }, {
                    key: "_getVectorLayer",
                    value: function() {
                        return null === this._vectorLayer && this._initVectorLayer(),
                            this._vectorLayer
                    }
                }, {
                    key: "_getMarkerLayer",
                    value: function() {
                        return null === this._markerLayer && (this._markerLayer = new OL.Layer.Markers(_.uniqueId("marker_drawing_context_")),
                                this._map.addLayer(this._markerLayer)),
                            this._markerLayer
                    }
                }, {
                    key: "_initVectorLayer",
                    value: function() {
                        var e = {
                            styleMap: this._styleMap
                        };
                        this._options.extendedMode && (e.renderers = [l]),
                            this._vectorLayer = new OL.Layer.Vector(_.uniqueId("vector_drawing_context_"), e),
                            this._map.addLayer(this._vectorLayer)
                    }
                }, {
                    key: "_onMapZoomed",
                    value: function() {
                        this.trigger("zoomend")
                    }
                }]),
                e
        }();
    t.default = u,
        _.extend(u.prototype, Backbone.Events),
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(225),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = {
            NotConnected: 0,
            FirstConnection: 1,
            Reconnection: 2
        },
        o = Backbone.Model.extend({
            socket: null,
            displayProjection: new OpenLayers.Projection("EPSG:4326"),
            initialize: function() {
                return this.mode = r.NotConnected,
                    W.app.on("change:loggedIn", this._onLoginChanged, this)
            },
            _onLoginChanged: function() {
                if (W.app.get("loggedIn"))
                    return this.activate()
            },
            activate: function() {
                var e = this;
                if (null == this.socket) {
                    var t = {},
                        i = void 0;
                    try {
                        i = $.cookie(s.default.prototype.COOKIE_NAME)
                    } catch (e) {}
                    t.sessionId = i;
                    var n = Waze.Config.marx.server + "/chat?" + $.param(t);
                    return this.socket = io.connect(n, {
                            "try multiple transports": !1
                        }),
                        this.socket.on("connect", function() {
                            return e.mode === r.NotConnected ? (e.mode = r.FirstConnection,
                                e.trigger("firstConnect")) : (e.mode = r.Reconnection,
                                e.trigger("reconnect"))
                        }),
                        this.socket.on("disconnect", function() {
                            return e.trigger("disconnect")
                        })
                }
            },
            CLASS_NAME: "Waze.Model.Marx"
        });
    t.default = o,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(779),
        r = n(s),
        o = i(780),
        a = n(o),
        l = i(787),
        u = n(l),
        d = i(236),
        c = n(d),
        h = OL.Class({
            initialize: function(e) {
                return this.mediator = e.mediator,
                    this.map = e.map,
                    this.mapLayer = e.mapLayer,
                    this.pannable = this.map.getPannable(),
                    this.layer = new r.default({
                        $el: this.mapLayer.$div,
                        mediator: e.mediator
                    }),
                    W.commands.setHandler("place_updates:list", this._showVenue.bind(this)),
                    W.reqres.setHandler("updaterequests:browse", this._browseUpdateRequest.bind(this))
            },
            _showVenue: function(e) {
                var t = {
                    venue: e,
                    venueIterator: function() {
                        var t = e.model.venues.getObjectArray(),
                            i = new u.default(t);
                        return i.sortByDistanceFrom(e),
                            i
                    }
                };
                return this._createBrowser(t).show()
            },
            _browseUpdateRequest: function(e) {
                var t = e.updateRequest.get("place");
                e = {
                    venue: t,
                    updateRequests: [e.updateRequest],
                    showNext: e.showNext,
                    nextButtonString: e.nextButtonString,
                    nextButtonClass: e.nextButtonClass,
                    venueIterator: function() {
                        return new u.default([t])
                    }
                };
                var i = this._createBrowser(e);
                i.show(),
                    this._showLayers(t);
                var n = new c.default;
                return i.on("nextClicked", function() {
                        return n.next()
                    }),
                    n
            },
            _createBrowser: function(e) {
                var t = this;
                _.defaults(e, {
                    showDebug: this.mediator.get("advancedTools"),
                    pannable: this.pannable
                });
                var i = new a.default(e);
                return i.on("close", function() {
                        return t.layer.unhighlightAllMarkers()
                    }),
                    i.on("show", function(e) {
                        return t.layer.highlightMarker(e)
                    }),
                    i
            },
            _showLayers: function(e) {
                return this.map.showLayerByObjectType(e.type),
                    this.mapLayer.setVisibility(!0)
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        initialize: function(e) {
            this.mediator = e.mediator,
                this.setElement(e.$el)
        },
        events: {
            "click .place-update": "_onMarkerClicked"
        },
        _onMarkerClicked: function(e) {
            if (this.mediator.get("editingEnabled")) {
                var t = $(e.target).data("model");
                return W.commands.execute("place_updates:list", t)
            }
        },
        _findMarkerByVenueId: function(e) {
            return this.$el.find("[data-id='" + e + "']")
        },
        highlightMarker: function(e) {
            this.$el.addClass("highlight-selected");
            var t = this._findMarkerByVenueId(e.getID());
            return t.addClass("selected"),
                this._moveToTop(t)
        },
        _moveToTop: function(e) {
            return e.detach().appendTo(this.$el)
        },
        unhighlightAllMarkers: function() {
            return this.$el.removeClass("highlight-selected"),
                this.$el.find(".place-update").removeClass("selected")
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(781),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Object.extend({
            _nextVenue: null,
            initialize: function(e) {
                return this.venue = e.venue,
                    this.pannable = e.pannable,
                    this.dataModel = this.venue.model,
                    this._generateIterator(),
                    this.dataModel.events.register("mergeend", this, this._onVenuesChanged)
            },
            _generateIterator: function() {
                this.iterator = new this.options.venueIterator
            },
            show: function() {
                var e = this;
                this._getNextVenue();
                var t = new s.default({
                    model: this.venue,
                    nextVenue: this._nextVenue,
                    updateRequests: this.options.updateRequests,
                    showNext: this.options.showNext,
                    showDebug: this.options.showDebug,
                    nextButtonString: this.options.nextButtonString,
                    nextButtonClass: this.options.nextButtonClass
                });
                return t.on("showNextVenueClicked", this._onNextVenueClicked.bind(this)),
                    t.on("nextClicked", this._onNextClicked.bind(this)),
                    t.on("destroy", this._close, this),
                    t.on("focusClicked", function() {
                        return e._focusVenue(W.Config.place_updates.focusZoom)
                    }),
                    W.map.panelRegion.show(t),
                    this._focusVenue(),
                    this.trigger("show", this.venue)
            },
            _onVenuesChanged: function() {
                return this._generateIterator(),
                    this._getNextVenue()
            },
            _onNextVenueClicked: function() {
                return this.venue = this._nextVenue,
                    this.show()
            },
            _onNextClicked: function() {
                return this.trigger("nextClicked")
            },
            _close: function() {
                return this.dataModel.events.unregister("mergeend", this, this._onVenuesChanged),
                    this.trigger("close")
            },
            _getNextVenue: function() {
                this._nextVenue = this.iterator.getNext(),
                    null !== this._nextVenue && this._nextVenue.getID() === this.venue.getID() && (this._nextVenue = this.iterator.getNext())
            },
            _focusVenue: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.pannable.getZoom();
                return this.pannable.panTo(this.venue.geometry.getBounds().getCenterLonLat(), e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(231),
        r = n(s),
        o = i(786),
        a = n(o),
        l = i(20),
        u = n(l),
        d = Marionette.View.extend({
            template: "templates/place_updates/layout",
            regions: {
                placeUpdate: ".place-update"
            },
            events: {
                "click .next": "_onNextClicked"
            },
            triggers: {
                "click .next-venue": "showNextVenueClicked"
            },
            ui: {
                navigation: ".navigation"
            },
            className: "place-update-edit",
            currentIndex: 0,
            dataModel: null,
            maxHeight: null,
            initialize: function() {
                return this.dataModel = this.model.model,
                    this._setUpdateRequests(),
                    this.listenTo(this.dataModel.venues, u.default.CHANGED, this._onVenuesChanged),
                    this.listenTo(this.dataModel.venues, u.default.REMOVED, this._onVenuesDeleted),
                    this.model.setSelected(!0)
            },
            _setUpdateRequests: function() {
                this.updateRequests = this.options.updateRequests,
                    null == this.updateRequests && (this.updateRequests = _(this.model.attributes.venueUpdateRequests).sortBy(function(e) {
                        return e.get("dateAdded")
                    }))
            },
            _onVenuesChanged: function(e) {
                var t = this;
                if (e.some(function(e) {
                        return e.getID() === t.model.getID() && e.isDeleted()
                    }))
                    return this.destroy()
            },
            _onVenuesDeleted: function(e) {
                var t = this;
                if (e.some(function(e) {
                        return e.getID() === t.model.getID()
                    }))
                    return this.destroy()
            },
            onDestroy: function() {
                return this.model.setSelected(!1)
            },
            serializeData: function() {
                var e = this._hasMoreUpdates();
                return {
                    showNextButton: e || this.options.showNext || !1,
                    showNextVenueButton: !e && null !== this.options.nextVenue,
                    showNextIssueButton: this.options.showNextIssueButton,
                    nextButtonString: this.options.nextButtonString || I18n.t("venues.update_requests.panel.next"),
                    nextButtonClass: this.options.nextButtonClass
                }
            },
            onRender: function() {
                return this._showCurrentUpdateView(),
                    this._setHeight()
            },
            _showCurrentUpdateView: function() {
                var e = this,
                    t = this.updateRequests[this.currentIndex],
                    i = r.default;
                "flag" === t.get("updateType") && (i = a.default);
                var n = new i({
                    model: t,
                    venue: this.model,
                    showDebug: this.options.showDebug
                });
                return this.listenTo(n, "focusClicked", function() {
                        return e.trigger("focusClicked")
                    }),
                    this.showChildView("placeUpdate", n)
            },
            _hasMoreUpdates: function() {
                return this.currentIndex < this.updateRequests.length - 1
            },
            _onNextClicked: function() {
                return this._hasMoreUpdates() && (this.currentIndex++,
                        this.render()),
                    this.trigger("nextClicked")
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setHeight()
            },
            _setHeight: function() {
                return this.$el.css({
                        maxHeight: this.maxHeight
                    }),
                    this.getChildView("placeUpdate").setMaxHeight(this.maxHeight - this.ui.navigation.outerHeight())
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(190),
        r = n(s),
        o = i(232),
        a = n(o),
        l = i(785),
        u = n(l),
        d = Marionette.CollectionView.extend({
            childView: function(e) {
                return e instanceof r.default ? u.default : a.default
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(784),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            template: "templates/place_updates/external_provider/list",
            childView: s.default,
            childViewContainer: ".diff-list",
            initialize: function() {
                this.venue = this.options.venue;
                var e = this.venue.attributes.externalProviderIDs.map(function(e) {
                    return e.clone()
                });
                this.collection = new Backbone.Collection(e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(11),
        r = n(s),
        o = i(233),
        a = n(o),
        l = Marionette.View.extend({
            template: "templates/place_updates/external_provider/item",
            tagName: "li",
            behaviors: {
                ToolTip: {
                    behaviorClass: a.default,
                    layerClassName: "suggested-geometry-layer"
                }
            },
            events: {
                "mouseover .anchor": "_onAnchorOver",
                "mouseout .anchor": "_onAnchorOut"
            },
            bindings: {
                ".external-provider-link": {
                    observe: "name",
                    attributes: [{
                        name: "href",
                        observe: "url"
                    }]
                }
            },
            onRender: function() {
                this._fetchDetails(),
                    this.stickit(this.model, this.bindings)
            },
            _fetchDetails: function() {
                return $.when(this.model.getDetails())
            },
            _onAnchorOver: function() {
                var e = this.model.get("location");
                if (e) {
                    var t = new OpenLayers.Geometry.Point(e.lng, e.lat);
                    r.default.project(t);
                    var i = new OL.Feature.Vector(t, {}, {
                        pointRadius: 6,
                        fillColor: "#c290c6",
                        strokeWidth: 3,
                        strokeColor: "#00ece3"
                    });
                    this.triggerMethod("show:tooltip", t.getBounds().getCenterLonLat(), this.model.get("name"), "", i)
                }
            },
            _onAnchorOut: function() {
                this.triggerMethod("hide:tooltip")
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(232),
        r = n(s),
        o = i(16),
        a = n(o),
        l = function(e, t) {
            var i = t.attributes.categoryAttributes;
            if (i && i.PARKING_LOT)
                return i.PARKING_LOT[e]
        },
        u = function(e, t) {
            var i = l(e, t);
            return null !== i && void 0 !== i ? _.isArray(i) ? i.map(function(t) {
                return I18n.t("edit.landmark.parking.types." + e + "." + t)
            }) : I18n.t("edit.landmark.parking.types." + e + "." + i) : null
        },
        d = r.default.extend({
            template: "templates/place_updates/changed_field_parking_lot",
            _getValue: function(e) {
                var t = this.model.get("fieldName");
                return this.valueGetters[t] ? this.valueGetters[t](e) : l(t, e)
            },
            valueGetters: {
                canExitWhileClosed: function(e) {
                    return a.default.formatYesNo(l("canExitWhileClosed", e))
                },
                estimatedNumberOfSpots: function(e) {
                    return u("estimatedNumberOfSpots", e)
                },
                costType: function(e) {
                    return u("costType", e)
                },
                lotType: function(e) {
                    return u("lotType", e)
                },
                paymentType: function(e) {
                    return u("paymentType", e)
                }
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(231),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            template: "templates/place_updates/flag",
            APPROVE_ACTION_NAMES: {
                default: I18n.t("venues.update_requests.panel.action.solved"),
                DUPLICATE: I18n.t("venues.update_requests.panel.action.merge"),
                CLOSED: I18n.t("venues.update_requests.panel.action.delete")
            },
            APPROVE_ACTION_INTENT: {
                CLOSED: "danger"
            },
            COMMENT_TYPES: {
                WRONG_DETAILS: !0,
                CLOSED: !0,
                INAPPROPRIATE: !0
            },
            serializeData: function() {
                var e = this.model.isImage(),
                    t = e ? this.model.getImage() : null;
                return {
                    model: this.model,
                    venue: this.options.venue,
                    showImage: e,
                    image: t,
                    showAddingUser: e,
                    showComment: this.COMMENT_TYPES[this.model.get("type")],
                    showDuplicateVenue: this.model.get("type") === this.model.TYPE.DUPLICATE,
                    showDebug: this.options.showDebug
                }
            },
            templateContext: _({}).extend(s.default.prototype.templateContext, {
                getTitle: function() {
                    var e = this.model.get("subject");
                    return I18n.t("venues.update_requests.panel.flag_title." + e)
                },
                getApproveActionName: function() {
                    if (this.model.isVenue()) {
                        var e = r.prototype.APPROVE_ACTION_NAMES;
                        return e[this.model.get("type")] || e.default
                    }
                    return I18n.t("venues.update_requests.panel.action.delete_picture")
                },
                getApproveActionIntent: function() {
                    return this.model.isImage() ? "danger" : r.prototype.APPROVE_ACTION_INTENT[this.model.get("type")] || "default"
                },
                getRejectActionName: function() {
                    return I18n.t("venues.update_requests.panel.action.reject_flag")
                }
            })
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        _currentIndex: 0,
        _venues: null,
        initialize: function(e) {
            this._venues = _.filter(e, function(e) {
                return e.areUpdateRequestsEditable() && e.hasOpenUpdateRequests() && !e.attributes.residential && !e.attributes.adLocked
            })
        },
        sortByDistanceFrom: function(e) {
            this.reset();
            var t = e.geometry.getBounds().getCenterLonLat();
            this._venues = _(this._venues).sortBy(function(e) {
                var i = e.geometry.getBounds().getCenterLonLat(),
                    n = t.lon - i.lon,
                    s = t.lat - i.lat;
                return n * n + s * s
            })
        },
        getNext: function() {
            return this._currentIndex >= this._venues.length ? null : this._venues[this._currentIndex++]
        },
        reset: function() {
            this._currentIndex = 0
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(236),
        r = n(s),
        o = i(789),
        a = n(o),
        l = i(790),
        u = n(l),
        d = OL.Class({
            editController: null,
            initialize: function(e) {
                this.mediator = e.mediator,
                    this.mapLayers = e.mapLayers,
                    this._listenToLayerClicks(),
                    W.commands.setHandler("problems:show", this.showProblem, this),
                    W.reqres.setHandler("problems:browse", this.browseProblem, this)
            },
            showProblem: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.editController && this.editController.destroy(),
                    this.editController = new u.default({
                        problem: e,
                        showDebug: this.mediator.get("advancedTools"),
                        showNext: i.showNext,
                        nextButtonString: i.nextButtonString
                    }),
                    this.editController.on("destroy", function() {
                        return t.editController = null,
                            W.vent.trigger("problems:closed")
                    }),
                    W.vent.trigger("problems:shown", e)
            },
            browseProblem: function(e) {
                var t = e.problem;
                this.showProblem(t, e),
                    this._showLayer(t);
                var i = new r.default;
                return e.showNext && this.editController.on("nextClicked", function() {
                        return i.next()
                    }),
                    i
            },
            showProblemStream: function(e) {
                var t = this;
                if (e.hasNext()) {
                    var i = e.next(),
                        n = e.hasNext();
                    return this.showProblem(i, {
                            showNext: n
                        }),
                        n ? this.editController.on("nextClicked", function() {
                            return t.showProblemStream(e)
                        }) : void 0
                }
            },
            _showLayer: function(e) {
                return W.map.showLayerByObjectType(e.type)
            },
            _listenToLayerClicks: function() {
                var e = this;
                this.mapLayers.forEach(function(t) {
                    return $(t.div).on("click", ".map-problem", $.proxy(e._onProblemMarkerClicked, e))
                })
            },
            _onProblemMarkerClicked: function(e) {
                if (this.mediator.get("editingEnabled")) {
                    var t = $(e.target).data("model"),
                        i = new a.default(t.type).sortByDistance(t);
                    return this.showProblemStream(i)
                }
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e(t) {
                (0,
                    r.default)(this, e);
                var i = this._getRepository(t);
                this.problems = i.getObjectArray()
            }
            return (0,
                    a.default)(e, [{
                    key: "_getRepository",
                    value: function(e) {
                        var t = this.TYPE_TO_REPO[e];
                        return W.model[t]
                    }
                }, {
                    key: "sortByDistance",
                    value: function(e) {
                        return this.problems = _.sortBy(this.problems, function(t) {
                                return -1 * e.geometry.distanceTo(t.geometry)
                            }),
                            this
                    }
                }, {
                    key: "next",
                    value: function() {
                        return this.problems.pop()
                    }
                }, {
                    key: "hasNext",
                    value: function() {
                        return this.problems && this.problems.length > 0
                    }
                }]),
                e
        }();
    l.prototype.TYPE_TO_REPO = {
            mapProblem: "problems",
            mapUpdateRequest: "mapUpdateRequests"
        },
        t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(791),
        r = n(s),
        o = i(792),
        a = n(o),
        l = i(803),
        u = n(l),
        d = i(20),
        c = n(d),
        h = i(805),
        p = n(h),
        f = Marionette.Object.extend({
            initialize: function() {
                return this.problem = this.options.problem,
                    this.adapter = a.default.createAdapter(this.problem),
                    null != this.options.nextButtonString && this.adapter.setNextButtonString(this.options.nextButtonString),
                    this.viewModel = new p.default({
                        adapter: this.adapter
                    }),
                    this.mapView = new u.default({
                        map: W.map,
                        markerLayer: this.adapter.getMarkerLayer(),
                        adapter: this.adapter,
                        viewModel: this.viewModel
                    }),
                    this.mapView.centerProblem(),
                    this.listenTo(this.viewModel, "change:problemState", this._onProblemStateChanged),
                    this.listenTo(this.adapter.getRepository(), c.default.CHANGED, this._repositoryChanged),
                    this.listenTo(this.adapter.getRepository(), c.default.ADDED, this._onProblemsAdded),
                    this.editView = new r.default({
                        model: this.viewModel,
                        adapter: this.adapter,
                        showDebug: this.options.showDebug,
                        showNext: this.options.showNext
                    }),
                    this.listenTo(this.editView, "destroy", this.destroy),
                    this.listenTo(this.editView, "focusClicked", this._onFocusClicked),
                    this.listenTo(this.editView, "nextClicked", this.trigger.bind(this, "nextClicked")),
                    W.map.panelRegion.show(this.editView)
            },
            _onProblemStateChanged: function(e, t, i) {
                i.fromRepository || (this.adapter.setState(this.viewModel.get("problemState")),
                    this.adapter.reportStateChanged())
            },
            _repositoryChanged: function() {
                return this.viewModel.set("problemState", this.adapter.getState(), {
                    fromRepository: !0
                })
            },
            _onProblemsAdded: function() {
                var e = this.adapter.problem.getID(),
                    t = this.adapter.getRepository().get(e);
                return null != t && (this.adapter.problem = t),
                    this.mapView.selectMarker()
            },
            _onFocusClicked: function() {
                return this.mapView.focusProblem()
            },
            onDestroy: function() {
                return this.editView.destroy(),
                    this.mapView.destroy()
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(198),
        r = n(s),
        o = i(16),
        a = n(o),
        l = Marionette.View.extend({
            maxHeight: null,
            template: "Waze/Modules/Problems/templates/edit",
            events: {
                "click .done": "destroy",
                "click .title": "_onSectionTitleClicked",
                "click .focus": "_onFocusClicked"
            },
            triggers: {
                "click .next": "nextClicked"
            },
            regions: {
                conversationRegion: ".conversation-region"
            },
            ui: {
                problemData: ".problem-data",
                actions: ".actions",
                header: ".header"
            },
            bindings: {
                "input[name=state]": "problemState",
                ".more-info": {
                    observe: "loadingMoreInfo",
                    update: function(e, t) {
                        return e.toggleClass("loading", t)
                    }
                },
                ".conversation": {
                    observe: "loadingConversation",
                    update: function(e, t) {
                        return e.toggleClass("loading", t)
                    }
                },
                ".problem-edit": {
                    observe: "problemState",
                    update: function(e, t) {
                        return e.attr("data-state", t)
                    }
                },
                ".not-available": {
                    observe: "moreInfoAvailable",
                    update: function(e, t) {
                        return e.toggle(!t)
                    }
                }
            },
            initialize: function() {
                this.adapter = this.options.adapter
            },
            _bindMoreInfo: function() {
                var e = this,
                    t = void 0;
                return this.adapter.getMoreInfoTypes().map(function(i) {
                    return t = i.get("name"),
                        e.addBinding(i, "input[name=" + t + "]", "visible"),
                        e.addBinding(i, ".more-info-" + t + "-checkbox", {
                            observe: "available",
                            update: function(e, t) {
                                return e.toggle(t)
                            }
                        })
                })
            },
            serializeData: function() {
                return {
                    adapter: this.adapter,
                    showDebug: this.options.showDebug,
                    showNext: this.options.showNext,
                    model: this.model
                }
            },
            onRender: function() {
                return this.adapter.isConversationAvailable() && this._renderConversationView(),
                    this._bindMoreInfo(),
                    this.stickit(),
                    this._setHeight()
            },
            _renderConversationView: function() {
                var e = this;
                return $.when(this.adapter.getConversation()).done(function(t) {
                    return e.conversationView = new r.default({
                            commentable: t.getCommentable(),
                            enabled: e.adapter.allowCommenting()
                        }),
                        e.stickit(e.conversationView.viewModel, {
                            ".comment-count-badge": "commentCount"
                        }),
                        e.showChildView("conversationRegion", e.conversationView)
                })
            },
            _onSectionTitleClicked: function(e) {
                return $(e.target).parent(".section").toggleClass("collapsed")
            },
            _onFocusClicked: function(e) {
                return e.preventDefault(),
                    this.trigger("focusClicked")
            },
            setMaxHeight: function(e) {
                return this.maxHeight = e,
                    this._setHeight()
            },
            _setHeight: function() {
                var e = this.maxHeight - this.ui.actions.outerHeight() - this.ui.header.outerHeight();
                return this.ui.problemData.css({
                    maxHeight: e
                })
            },
            templateContext: {
                showMoreInfoSection: function() {
                    return this.adapter.getMoreInfoTypes().length > 0
                },
                showCloseDetails: function() {
                    return !this.adapter.problem.editable
                },
                getCloseDate: function() {
                    var e = this.adapter.problem.attributes.resolvedOn,
                        t = I18n.t("problems.panel.closed.not_available");
                    return null != e && (t = I18n.l("date.formats.long", e)),
                        a.default.safe_t("problems.panel.closed.date", {
                            date_title: a.default.contentTag("strong", I18n.t("problems.panel.closed.date_title")),
                            date: t
                        })
                },
                getClosingUser: function() {
                    var e = this.adapter.problem.attributes.resolvedBy,
                        t = I18n.t("problems.panel.closed.not_available");
                    return null != e && (t = a.default.userProfile(e)),
                        a.default.safe_t("problems.panel.closed.user", {
                            user_title: a.default.contentTag("strong", I18n.t("problems.panel.closed.user_title")),
                            username: t
                        })
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(85),
        l = n(a),
        u = i(795),
        d = n(u),
        c = i(797),
        h = n(c),
        p = i(799),
        f = n(p),
        g = i(801),
        m = n(g),
        v = i(4),
        _ = n(v),
        y = i(61).prototype.TYPE,
        b = {},
        E = (s = {},
            (0,
                o.default)(s, y.DISCONNECTION, l.default),
            (0,
                o.default)(s, y.TURN, h.default),
            (0,
                o.default)(s, y.DATA, d.default),
            (0,
                o.default)(s, y.ROAD_CLOSURE, f.default),
            s);
    b.createAdapter = function(e) {
            return new(e.type === _.default.UPDATE_REQUEST ? m.default : E[e.attributes.problemType])(e)
        },
        t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        layer: null,
        info: null,
        displayOptions: null,
        initialize: function(e, t, i) {
            this.info = e,
                this.layer = t,
                this.displayOptions = i
        },
        drawMoreInfo: function() {
            return this.layer.removeAllFeatures({
                    silent: !0
                }),
                this._drawSessions()
        },
        _drawSessions: function() {
            return this._drawMatchingSegments(),
                this.displayOptions.allSessions && this._drawAllSessions(),
                this.displayOptions.averageSession && this._drawAverageSession(),
                this._drawPins()
        },
        _drawMatchingSegments: function() {
            if (this.info.average.nextSegGeom && this.layer.driveRenderer.drawMatchedSegment(this.info.average.nextSegGeom),
                this.info.average.prevSegGeom)
                return this.layer.driveRenderer.drawMatchedSegment(this.info.average.prevSegGeom)
        },
        _drawAllSessions: function() {
            var e = this;
            return this.info.sessions.map(function(t) {
                return t.geometry.components.map(function(t) {
                    return e.layer.driveRenderer.drawSession(t)
                })
            })
        },
        _drawAverageSession: function() {
            if (this.info.average.geometry)
                return this.layer.driveRenderer.drawDisconnect(this.info.average.geometry.components[1]),
                    this.layer.driveRenderer.drawUserDrive(this.info.average.geometry.components[0]),
                    this.layer.driveRenderer.drawUserDrive(this.info.average.geometry.components[2])
        },
        _drawPins: function() {
            var e = this.info.average.prevSegGeom.getVertices(!0).last(),
                t = this.info.average.nextSegGeom.getVertices(!0).first();
            if (!e.equals(t))
                return this.layer.driveRenderer.drawPin(e, "A"),
                    this.layer.driveRenderer.drawPin(t, "B")
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            available: !0,
            visible: !0
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(796),
        r = n(s),
        o = i(85),
        a = n(o),
        l = a.default.extend({
            MORE_INFO_DEFAULTS: [],
            createMoreInfoRenderer: function(e, t, i) {
                return new r.default(e, t, i)
            },
            getMoreInfo: function() {
                return null != this.moreInfo ? this.moreInfo : this.moreInfo = this.problem.getSessions()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        layer: null,
        info: null,
        displayOptions: null,
        initialize: function(e, t, i) {
            this.info = e,
                this.layer = t,
                this.displayOptions = i
        },
        drawMoreInfo: function() {
            return this.layer.removeAllFeatures({
                    silent: !0
                }),
                this._drawSegments(),
                this._drawVenue()
        },
        _drawSegments: function() {
            if (null != this.info.segmentGeom && this.layer.driveRenderer.drawShortSegment(this.info.segmentGeom),
                null != this.info.secondarySegmentGeom)
                return this.layer.driveRenderer.drawShortSegment(this.info.secondarySegmentGeom)
        },
        _drawVenue: function() {
            if (null != this.info.venueGeom)
                return this.layer.driveRenderer.drawVenue(this.info.venueGeom)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(798),
        r = n(s),
        o = i(85),
        a = n(o),
        l = a.default.extend({
            MORE_INFO_DEFAULTS: [],
            createMoreInfoRenderer: function(e, t, i) {
                return new r.default(e, t, i)
            },
            getMoreInfo: function() {
                return null != this.moreInfo ? this.moreInfo : this.moreInfo = this.problem.getSessions()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        layer: null,
        info: null,
        displayOptions: null,
        initialize: function(e, t, i) {
            this.info = e,
                this.layer = t,
                this.displayOptions = i
        },
        drawMoreInfo: function() {
            return this.layer.removeAllFeatures({
                    silent: !0
                }),
                this._drawSuggestedRoute(),
                this._drawAlternatives()
        },
        _drawSuggestedRoute: function() {
            return this.layer.driveRenderer.drawSuggestedRoute(this.info.routePrevSeg),
                this.layer.driveRenderer.drawSuggestedRoute(this.info.routeNextSeg)
        },
        _drawAlternatives: function() {
            for (var e = this.info.routePrevSeg.components.last().clone(), t = 0; t < this.info.alternatives.length; t++) {
                var i = this.info.alternatives[t];
                this.layer.driveRenderer.drawUserDrive(i.averageGeom),
                    this.layer.driveRenderer.drawDriveWeightPoint(e, i.averageGeom, i.numDrives.toString())
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(85),
        r = n(s),
        o = i(800),
        a = n(o),
        l = r.default.extend({
            MORE_INFO_DEFAULTS: [],
            getTitle: function() {
                return I18n.t("problems.panel.closure.title")
            },
            getReportedString: function() {
                return I18n.t("problems.panel.closure.reported")
            },
            hasDescription: function() {
                return !0
            },
            getDescriptionTemplate: function() {
                return "Waze/Modules/Problems/templates/closure_description"
            },
            getMoreInfo: function() {
                return [this.problem]
            },
            createMoreInfoRenderer: function(e, t, i) {
                return new a.default(e, t, i)
            },
            getSolvedStateString: function() {
                return I18n.t("problems.panel.closure.states.solved")
            },
            getNotIdentifiedStateString: function() {
                return I18n.t("problems.panel.closure.states.not_identified")
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        layer: null,
        info: null,
        displayOptions: null,
        initialize: function(e, t, i) {
            this.closureProblem = e,
                this.layer = t,
                this.displayOptions = i
        },
        drawMoreInfo: function() {
            return this.layer.removeAllFeatures({
                    silent: !0
                }),
                this._drawPins()
        },
        _drawPins: function() {
            if (this.closureProblem.hasEndPoint())
                return this.layer.driveRenderer.drawPin(this.closureProblem.attributes.geometry, "A"),
                    this.layer.driveRenderer.drawPin(this.closureProblem.attributes.endPoint, "B")
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(237),
        r = n(s),
        o = i(802),
        a = n(o),
        l = i(85),
        u = n(l),
        d = u.default.extend({
            MORE_INFO_DEFAULTS: [{
                name: "route",
                visible: !0
            }, {
                name: "drive",
                visible: !0
            }],
            getTitle: function() {
                return this.problem.attributes.typeText
            },
            getReportedString: function() {
                var e = this.problem.attributes.localDriveTime || this.problem.attributes.driveDate;
                return I18n.t("update_requests.panel.reported", {
                    date: I18n.l("time.formats.long", Date.parse(e))
                })
            },
            hasDescription: function() {
                var e = this.problem.attributes.description;
                return null != e && e.length > 0
            },
            getDescription: function() {
                return this.problem.attributes.description
            },
            isConversationAvailable: function() {
                return !0
            },
            allowCommenting: function() {
                return this.problem.model.loginManager.isLoggedIn()
            },
            getMoreInfo: function() {
                var e = this;
                return null != this.moreInfo ? this.moreInfo : this.moreInfo = this.problem.model.updateRequestSessions.get([this.problem.getID()]).done(function(t) {
                    return t = t[0],
                        e._moreInfoTypeMap.drive.set({
                            available: null != t.driveGeometry
                        }),
                        e._moreInfoTypeMap.route.set({
                            available: null != t.routeGeometry
                        })
                })
            },
            getConversation: function() {
                return null != this.conversation ? this.conversation : this.conversation = $.when(this.getMoreInfo()).then(function(e) {
                    return e[0]
                })
            },
            getRepository: function() {
                return this.problem.model.mapUpdateRequests
            },
            createMoreInfoRenderer: function(e, t, i) {
                return new a.default(e, t, i)
            },
            getMarkerLayer: function() {
                return W.map.updateRequestLayer
            },
            getBounds: function() {
                return this.problem.getRequestBounds().getBounds()
            },
            getNextButtonString: function() {
                return this._nextButtonString || I18n.t("update_requests.panel.next")
            },
            reportStateChanged: function() {
                var e = "" + this.problem.attributes.type;
                this.getState() === r.default.SOLVED ? W.Report.updateRequestAction("update_state", e, 1) : this.getState() === r.default.NOT_IDENTIFIED && W.Report.updateRequestAction("update_state", e, -1)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        layer: null,
        info: null,
        displayOptions: null,
        initialize: function(e, t, i) {
            this.info = e,
                this.layer = t,
                this.displayOptions = i
        },
        drawMoreInfo: function() {
            if (this.layer.removeAllFeatures({
                    silent: !0
                }),
                this.displayOptions.drive && this._drawUserDrive(),
                this.displayOptions.route)
                return this._drawRoute()
        },
        _drawUserDrive: function() {
            if (this.info.driveGeometry)
                for (var e = 0; e < this.info.driveGeometry.components.length; e++) {
                    var t = this.info.driveGeometry.components[e];
                    this.layer.driveRenderer.drawUserDrive(t)
                }
        },
        _drawRoute: function() {
            var e = this;
            if (this.info.routeGeometry)
                return this.info.routeGeometry.components.map(function(t) {
                    return e.layer.driveRenderer.drawSuggestedRoute(t),
                        e.layer.driveRenderer.drawRouteInstructions(t, e.info.getRouteInstructions())
                })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(804),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Object.extend({
            layer: null,
            info: null,
            viewModel: null,
            initialize: function() {
                this.viewModel = this.options.viewModel,
                    this.map = this.options.map,
                    this.markerLayer = this.options.markerLayer,
                    this.adapter = this.options.adapter,
                    this.layer = new s.default("problemMoreInfo"),
                    this.viewModel.get("loadingMoreInfo") ? this.listenTo(this.viewModel, "change:loadingMoreInfo", this._onMoreInfoLoaded) : this._onMoreInfoLoaded();
                for (var e = this.adapter.getMoreInfoTypes(), t = 0; t < e.length; t++) {
                    var i = e[t];
                    this.listenTo(i, "change:visible", this._drawMoreInfo)
                }
                this.selectMarker()
            },
            centerProblem: function() {
                var e = this.adapter.getGeometry(),
                    t = new OL.LonLat(e.x, e.y);
                return this.map.setCenter(t)
            },
            focusProblem: function() {
                var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                    t = this.adapter.getBounds(),
                    i = t.getCenterLonLat();
                return e ? (e = this.map.getZoomForExtent(t),
                        e = Math.min(e, W.Config.problems.maxDetailsZoom),
                        e = Math.max(e, W.Config.problems.minDetailsZoom)) : e = this.map.getZoom(),
                    this.map.setCenter(i, e)
            },
            onDestroy: function() {
                return null != this.layer.map && this.map.removeLayer(this.layer),
                    this.map.events.unregister("zoomend", this, this._drawMoreInfo),
                    this._unselectMarker()
            },
            _onMoreInfoLoaded: function() {
                var e = this;
                return this.map.addLayer(this.layer),
                    this.map.events.register("zoomend", this, this._drawMoreInfo),
                    $.when(this.adapter.getMoreInfo()).done(function(t) {
                        return e.info = t[0],
                            e._drawMoreInfo()
                    })
            },
            _getDisplayOptions: function() {
                for (var e = {}, t = this.adapter.getMoreInfoTypes(), i = 0; i < t.length; i++) {
                    var n = t[i];
                    e[n.get("name")] = n.get("visible") && n.get("available")
                }
                return e
            },
            _drawMoreInfo: function() {
                return this.layer.removeAllFeatures({
                        silent: !0
                    }),
                    this.renderer = this.adapter.createMoreInfoRenderer(this.info, this.layer, this._getDisplayOptions()),
                    this.renderer.drawMoreInfo()
            },
            selectMarker: function() {
                return this._toggleMarkerSelection(!0)
            },
            _unselectMarker: function() {
                return this._toggleMarkerSelection(!1)
            },
            _toggleMarkerSelection: function(e) {
                var t = this.adapter.problem.getID();
                return $(this.markerLayer.div).find("[data-id='" + t + "']").toggleClass("selected", e),
                    $(this.map.div).toggleClass("problem-selected", e)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(149),
        r = n(s),
        o = i(42),
        a = n(o),
        l = i(148),
        u = n(l),
        d = OL.Class(OL.Layer.Vector, {
            rendererOptions: {
                zIndexing: !0
            },
            renderers: [a.default],
            styleMap: u.default,
            initialize: function() {
                OL.Layer.Vector.prototype.initialize.apply(this, arguments),
                    this.driveRenderer = new r.default(this)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            loadingMoreInfo: !0,
            loadingConversation: !0,
            moreInfoAvailable: !0
        },
        initialize: function() {
            var e = this;
            this.adapter = this.get("adapter"),
                this.set({
                    problemState: this.adapter.getState()
                }),
                $.when(this.adapter.getMoreInfo()).done(function() {
                    return e.set({
                            loadingMoreInfo: !1
                        }),
                        e.set({
                            loadingConversation: !1
                        }),
                        e.set({
                            moreInfoAvailable: e.adapter.isMoreInfoAvailable()
                        })
                })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(238),
        r = n(s),
        o = i(241),
        a = n(o),
        l = Marionette.Object.extend({
            initialize: function(e) {
                this.controller = e.controller,
                    this.mediator = e.mediator,
                    this._setDefaultHandler(),
                    W.commands.setHandler("save:restoreDefaultHandler", this._setDefaultHandler, this),
                    W.commands.setHandler("save:setHandler", this._setHandler, this),
                    this.savePopoverRegion = new a.default({
                        saveButtonSelector: "#toolbar .waze-icon-save"
                    })
            },
            _startSave: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = this.controller.save(t);
                return null != this.flowController && this.flowController.destroy(),
                    this.flowController = new r.default({
                        saveResult: i,
                        map: W.map,
                        mediator: this.mediator,
                        popoverRegion: this.savePopoverRegion
                    }),
                    this.flowController.on("resave", function() {
                        return e._startSave({
                            ignoreWarnings: !0
                        })
                    })
            },
            _setDefaultHandler: function() {
                return this._setHandler(this._startSave, this)
            },
            _setHandler: function(e, t) {
                return W.commands.setHandler("save:start", e, t)
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
            pointerEvents: "none",
            strokeLinecap: "square",
            strokeWidth: 5
        },
        s = new OpenLayers.StyleMap({
            default: new OpenLayers.Style(n)
        });
    s.addUniqueValueRules("default", "type", {
            homePin: {
                pointerEvents: "visiblePainted",
                externalGraphic: i(808),
                graphicWidth: 33,
                graphicHeight: 40,
                graphicYOffset: -35
            }
        }),
        t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/home-pin274fef96719c46ce1a4cf43e3b4a86b9.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(240),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default,
            isIgnorable: function() {
                return this.all(function(e) {
                    return e.get("ignorable")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(811),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            childView: s.default,
            childViewContainer: ".list",
            template: "Waze/Modules/Save/templates/error_list",
            events: {
                "click .save": "_onSaveClicked",
                "click .edit": "destroy",
                "click .close-button": "destroy"
            },
            childViewEvents: function() {
                return {
                    "click:focus": this._onChildFocusClicked
                }
            },
            _onChildFocusClicked: function(e) {
                return this.trigger("click:focus", e.model)
            },
            _onSaveClicked: function() {
                return this.trigger("click:save")
            },
            serializeData: function() {
                return {
                    collection: this.collection
                }
            },
            templateContext: {
                getTitle: function() {
                    return this.collection.isIgnorable() ? I18n.t("save.error.title_ignorable") : I18n.t("save.error.title")
                },
                showActionTitle: function() {
                    return this.collection.isIgnorable()
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(240),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/Save/templates/error_item",
            tagName: "li",
            className: "error-item",
            events: {
                "click .focus": "_onFocusClicked"
            },
            _onFocusClicked: function() {
                return this.trigger("click:focus")
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments),
                    t = this._getTranslations();
                e.title = t.title,
                    e.solution = t.solution || I18n.t("save.default_solution"),
                    e.showPanButton = null !== this.model.get("geometry");
                var i = this.model.get("collatedCount");
                return null != i && i > 1 && (e.collated = I18n.t("save.error.collated", {
                        count: i
                    })),
                    e
            },
            _getTranslations: function() {
                var e = I18n.t("save.error_types"),
                    t = e[this.model.get("code")];
                if (null == t) {
                    t = e[s.default.prototype.defaults.code]
                }
                return t
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            CLOSE_TIMEOUT_MILLIS: 2e3,
            template: "Waze/Modules/Save/templates/success",
            serializeData: function() {
                return {
                    venueNames: this._getVenueNames(),
                    model: this.model
                }
            },
            _getVenueNames: function() {
                var e = this.model.pendingEdits.venues.map(function(e) {
                    return e.attributes.name
                });
                return _.compact(e),
                    e.join(", ")
            },
            onRender: function() {
                return window.setTimeout(_.bind(this.destroy, this), this.CLOSE_TIMEOUT_MILLIS)
            },
            templateContext: function() {
                return {
                    showPendingVenues: function() {
                        return this.model.pendingEdits.venues.length > 0
                    },
                    getSaveCountTextFor: function(e) {
                        var t = this.model.saveCount[e];
                        return t < 1 ? "" : s.default.contentTag("div", I18n.t("save.success.change_count." + e, {
                            count: t
                        }))
                    }
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(4),
        c = n(d),
        h = i(152),
        p = n(h),
        f = function() {
            function e(t, i, n) {
                var s = this;
                (0,
                    a.default)(this, e),
                this.model = t,
                    this.events = new OpenLayers.Events(this),
                    this.selectControl = null,
                    this.selectedItems = [],
                    this.layers = _(i).filter(function(e) {
                        return e.selectable
                    }),
                    this._objectTypeToLayer = {},
                    this.layers.forEach(function(e) {
                        return s._objectTypeToLayer[e.featureType] = e
                    }),
                    this.layers.forEach(function(e) {
                        e.events.on({
                            featureselected: s.itemsSelected,
                            featureunselected: s.itemsUnselected,
                            visibilitychanged: s.layerVisibilityChanged,
                            beforefeatureselected: s._unselectPreviousFeatures,
                            selectpath: s.selectPath,
                            scope: s
                        })
                    }),
                    OpenLayers.Util.extend(this, n)
            }
            return (0,
                    u.default)(e, [{
                    key: "layerVisibilityChanged",
                    value: function(e) {
                        var t = e.object;
                        if (!t.getVisibility())
                            for (var i = 0; i < this.selectedItems.length; i++) {
                                var n = this.selectedItems[i];
                                n.layer === t && this.selectControl.unselect(n)
                            }
                    }
                }, {
                    key: "setSelectControl",
                    value: function(e) {
                        this.selectControl = e
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        var e = this;
                        this.layers.forEach(function(t) {
                            return t.events.un({
                                featureselected: e.itemsSelected,
                                featureunselected: e.itemsUnselected,
                                visibilitychanged: e.layerVisibilityChanged,
                                beforefeatureselected: e._unselectPreviousFeatures,
                                scope: e
                            })
                        })
                    }
                }, {
                    key: "itemsSelected",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        e = e.feature,
                            _(e).isArray() || (e = [e]);
                        for (var i = !1, n = 0; n < e.length; n++) {
                            var s = e[n];
                            this.selectedItems.contains(s) || (this.selectedItems.push(s),
                                i = !0)
                        }
                        if (!t.silent && i)
                            return this.events.triggerEvent("selectionchanged", {
                                selected: this.selectedItems,
                                reversedSegments: this.getReversedSegments()
                            })
                    }
                }, {
                    key: "selectPath",
                    value: function(e) {
                        var t = this.selectedItems[0].model,
                            i = e.feature.model;
                        if (!(this.selectedItems.length > 1 || t.type !== c.default.SEGMENT)) {
                            var n = function(e) {
                                    return e.attributes.primaryStreetID === t.attributes.primaryStreetID
                                },
                                s = function(e) {
                                    return e.getID() === i.getID()
                                },
                                o = p.default.bfs(t, n, s),
                                a = (0,
                                    r.default)(o, 2),
                                l = a[0],
                                u = a[1];
                            if (null === l) {
                                var d = p.default.bfs(t, function() {
                                    return !0
                                }, s);
                                u = (0,
                                    r.default)(d, 2)[1]
                            }
                            var h = this._getPathFromVisitedSegments(u, t, i);
                            return h.length <= 25 ? this.select(h) : void 0
                        }
                    }
                }, {
                    key: "_getPathFromVisitedSegments",
                    value: function(e, t, i) {
                        for (var n = i.getID(), s = t.getID(), r = []; n !== s && null != n;)
                            r.push(n),
                            n = e[n];
                        return r.push(t.getID()),
                            r.map(function(e) {
                                return W.model.segments.get(e)
                            })
                    }
                }, {
                    key: "_getSelectionCountByType",
                    value: function() {
                        var e = this.selectedItems.map(function(e) {
                            return e.model.type
                        });
                        return _.countBy(e, _.identity)
                    }
                }, {
                    key: "itemsUnselected",
                    value: function(e) {
                        e = e.features,
                            _(e).isArray() || (e = [e]);
                        for (var t = !1, i = 0; i < e.length; i++) {
                            var n = e[i];
                            this.selectedItems.contains(n) && (OpenLayers.Util.removeItem(this.selectedItems, n),
                                t = !0)
                        }
                        if (t)
                            return this.events.triggerEvent("selectionchanged", {
                                selected: this.selectedItems,
                                reversedSegments: this.getReversedSegments()
                            })
                    }
                }, {
                    key: "_unselectPreviousFeatures",
                    value: function(e) {
                        var t = e.feature,
                            i = t.model.type,
                            n = this._getSelectionCountByType()[c.default.SEGMENT];
                        i === c.default.SEGMENT && n || this.selectControl.unselectAll()
                    }
                }, {
                    key: "select",
                    value: function(e) {
                        var t = this;
                        this.selectControl.unselectAll(this.selectedItems);
                        var i = e.map(function(e) {
                            return t._objectTypeToLayer[e.type].getVector(e)
                        });
                        return i = _.compact(i),
                            this.selectControl.selectMultiple(i)
                    }
                }, {
                    key: "unselectAll",
                    value: function() {
                        return this.selectControl.unselectAll(this.selectedItems)
                    }
                }, {
                    key: "hasSelectedItems",
                    value: function() {
                        return !this.selectedItems.isEmpty()
                    }
                }, {
                    key: "getReversedSegments",
                    value: function() {
                        var e = _(this.selectedItems).pluck("model"),
                            t = {
                                multipleConnectedComponents: !1,
                                numReversed: 0
                            };
                        return this._getSelectionCountByType().segment > 0 ? p.default.getReversedSegments(e) : t
                    }
                }, {
                    key: "getSelectableRepos",
                    value: function() {
                        return this.layers.map(function(e) {
                            return e.repo
                        }).filter(function(e) {
                            return void 0 !== e
                        }).map(function(e) {
                            return e[0]
                        })
                    }
                }]),
                e
        }();
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        _snapshot: !1,
        initialize: function(e) {
            this._actionManager = e,
                this._actionManager.events.on({
                    hasActions: this._onActionsChanged,
                    noActions: this._onActionsChanged,
                    scope: this
                })
        },
        isSnapshotOn: function() {
            return this._snapshot
        },
        canToggleOn: function() {
            return !this._actionManager.canSave()
        },
        toggle: function(e) {
            if (e !== this._snapshot)
                return !1 === e && this._actionManager.clear(),
                    this._snapshot = e,
                    this._actionManager.toggleSavingEnabled(!e),
                    this.trigger("change:state")
        },
        _onActionsChanged: function() {
            return this.trigger("change:togglable")
        }
    });
    _.extend(n.prototype, Backbone.Events),
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(816),
        r = n(s),
        o = i(817),
        a = n(o),
        l = i(819),
        u = n(l),
        d = Marionette.Object.extend({
            initialize: function(e) {
                var t = new r.default,
                    i = e.map;
                return this.scene = new a.default({
                        panoramaProvider: t
                    }),
                    new u.default({
                        scene: this.scene,
                        map: i,
                        zoomBarControl: i.zoomBar
                    }),
                    e.selectionManager.events.register("selectionchanged", this, this._onSelectionChanged)
            },
            _onSelectionChanged: function(e) {
                var t = _.pluck(e.selected, "model");
                return this.scene.set({
                    content: t
                })
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = OL.Class({
        DEFAULT_SEARCH_RADIUS_METERS: 50,
        SEARCH_RADIUS_PADDING_FACTOR: 2,
        _streetViewProvider: null,
        initialize: function() {},
        getPanorama: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.DEFAULT_SEARCH_RADIUS_METERS,
                i = new google.maps.LatLng(e.lat, e.lon);
            t *= this.SEARCH_RADIUS_PADDING_FACTOR,
                t = Math.floor(t);
            var n = $.Deferred(),
                s = google.maps.StreetViewStatus;
            return this._getStreetViewProvider().getPanoramaByLocation(i, t, function(e, t) {
                    switch (t) {
                        case s.OK:
                            return n.resolve(e);
                        case s.ZERO_RESULTS:
                            return n.resolve(null);
                        case s.UNKNOWN_ERROR:
                            return n.reject()
                    }
                }),
                n.promise()
        },
        _getStreetViewProvider: function() {
            return this._streetViewProvider || (this._streetViewProvider = new google.maps.StreetViewService)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(11),
        r = n(s),
        o = i(818),
        a = n(o),
        l = Backbone.Model.extend({
            defaults: function() {
                return {
                    panorama: null,
                    cameraLonLat: null,
                    cameraHeading: 0,
                    content: [],
                    panoramaProvider: null
                }
            },
            initialize: function() {
                this.on("change:cameraLonLat", this._onCameraLonLatChanged, this),
                    this.panoramaProvider = this.attributes.panoramaProvider,
                    this.headingFinder = new a.default
            },
            isPanoramaAvailable: function() {
                return null !== this.get("panorama")
            },
            getPanorama: function(e) {
                var t = this,
                    i = this.get("cameraLonLat"),
                    n = this.get("panorama");
                return null !== n ? n : this.panoramaProvider.getPanorama(i, e).then(function(e) {
                    return t.set({
                        panorama: e
                    })
                }, function() {
                    return t.set({
                        panorama: null
                    })
                }).then(function() {
                    return t.get("panorama")
                })
            },
            _onCameraLonLatChanged: function() {
                return this.set({
                    panorama: null
                })
            },
            lookAtContent: function(e) {
                var t = this._getCameraInContentProjection(),
                    i = this.headingFinder.find(t, this.get("content"), e);
                return this.set({
                    cameraHeading: i
                })
            },
            _getCameraInContentProjection: function() {
                var e = this.get("cameraLonLat").clone();
                return r.default.project(e),
                    e
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(11),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class({
            DEFAULT_HEADING: 0,
            initialize: function() {},
            find: function(e, t, i) {
                if (0 === t.length)
                    return this.DEFAULT_HEADING;
                var n = void 0;
                return n = "segment" === t[0].type ? this._getAngleOfClosestEdge(e, t, i) : this._getContentCentroidAngle(e, t),
                    null === n ? this.DEFAULT_HEADING : this._angleToHeading(n).toDeg()
            },
            _getContentCentroidAngle: function(e, t) {
                var i = t[0].geometry.getCentroid();
                return Math.atan2(e.lat - i.y, e.lon - i.x)
            },
            _getAngleOfClosestEdge: function(e, t, i) {
                var n = this._getClosestSegmentInfo(e, t);
                if (n.distance > i)
                    return null;
                var r = n.segment,
                    o = new OL.Geometry.Point(n.x0, n.y0),
                    a = s.default.getPointEdge(r.geometry.components, o),
                    l = r.geometry.components[a],
                    u = r.geometry.components[a + 1],
                    d = Math.atan2(l.y - u.y, l.x - u.x);
                return r.isOneWay() && r.attributes.revDirection && (d += Math.PI),
                    d
            },
            _getClosestSegmentInfo: function(e, t) {
                var i = new OL.Geometry.Point(e.lon, e.lat),
                    n = t.map(function(e) {
                        var t = e.geometry.distanceTo(i, {
                            details: !0
                        });
                        return t.segment = e,
                            t
                    });
                return _.min(n, function(e) {
                    return e.distance
                })
            },
            _angleToHeading: function(e) {
                return 3 * Math.PI / 2 - e
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(34),
        r = n(s),
        o = i(820),
        a = n(o),
        l = OL.Class(r.default, {
            DRAG_THROTTLE_MILLIS: 200,
            elSelector: "#street-view-container",
            panoramaView: null,
            availabilityRadius: null,
            svActive: !1,
            map: null,
            zoomBarControl: null,
            events: {
                "click .close-button": "_closePanoramaView"
            },
            ui: {
                panoramaEl: ".panorama"
            },
            initialize: function(e) {
                r.default.prototype.initialize.apply(this, arguments),
                    this._findUiElements(),
                    W.accelerators.events.register("closeStreetView", this, this._closePanoramaView),
                    this._renderCrosshair(),
                    this._setupMap()
            },
            _activateSv: function() {
                if (!this.svActive)
                    return this.svActive = !0,
                        this.map.toggleSVMode(!0),
                        W.Report.generalAction("streeview_started")
            },
            _deactivateSv: function() {
                if (this.svActive)
                    return this.scene.set({
                            cameraLonLat: null,
                            cameraHeading: 0
                        }),
                        this.svActive = !1,
                        this.el.show(),
                        this._getPanoramaView().setVisible(!1),
                        this.pin.toggleVisibility(!1),
                        this.map.toggleSVMode(!1)
            },
            _setupMap: function() {
                this.map.events.register("moveend", this, function() {
                        this.availabilityRadius = null;
                        var e = this.map.getExtent().containsLonLat(this.pin.lonlat);
                        if (this.svActive)
                            return this.el.toggle(!e)
                    }),
                    this.markerLayer = new OL.Layer.Markers("streetViewPin"),
                    this.map.addLayer(this.markerLayer),
                    this.pin = new a.default(this.map.getCenter() || new OL.LonLat(0, 0), this.map),
                    this.pin.toggleVisibility(!1),
                    this.markerLayer.addMarker(this.pin),
                    this.pin.layer = this.markerLayer,
                    $(this.markerLayer.div).addClass("street-view-layer");
                var e = _.throttle(this._onPinDrag, this.DRAG_THROTTLE_MILLIS);
                return this.pin.events.on({
                    dragStart: function() {
                        return this.pin.toggleVisibility(!0),
                            this.el.hide()
                    },
                    drag: function(t) {
                        return e.call(this, t)
                    },
                    dragCancel: function(e) {},
                    dragDone: this._onPinDragDone,
                    scope: this
                })
            },
            _onPinDrag: function(e) {
                var t = this;
                return this.scene.set({
                        cameraLonLat: e.svLonlat.clone()
                    }),
                    $.when(this.scene.getPanorama(this._getAvailabilityRadius())).done(function() {
                        return t.pin.setPanoAvailable(t.scene.isPanoramaAvailable())
                    })
            },
            _onPinDragDone: function() {
                if (this.scene.isPanoramaAvailable()) {
                    this.scene.lookAtContent(this.pin.getCrosshairRadius());
                    var e = this.scene.get("panorama"),
                        t = this.scene.get("cameraHeading");
                    return this._activateSv(),
                        this._getPanoramaView(!0).setPano(e.location.pano),
                        this._getPanoramaView().setPov({
                            heading: t,
                            pitch: 0
                        }),
                        this._getPanoramaView().setVisible(!0)
                }
                return this._deactivateSv(),
                    this.pin.toggleVisibility(!1),
                    this.el.show()
            },
            _renderCrosshair: function() {
                var e = this;
                return this.el && this.el.off(".street-view-control"),
                    this.el = $("<div/>").appendTo(this.zoomBarControl.streetViewContainer),
                    this.el.addClass("street-view-control"),
                    this.el.tooltip({
                        title: I18n.t("street_view.tooltip"),
                        placement: "right",
                        container: "body",
                        delay: {
                            show: 750
                        }
                    }),
                    this.el.on("mousedown.street-view-control", function(t) {
                        return e.pin.setCrosshairLonlat(new OL.LonLat(0, 0)),
                            e.pin.setPanoAvailable(!1),
                            e.pin.dragging.forceStart(!0), !1
                    })
            },
            _getPanoramaView: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return null == this.panoramaView || t ? (this.panoramaView = new google.maps.StreetViewPanorama(this.ui.panoramaEl.get(0), {
                        panControl: !0,
                        panControlOptions: {
                            position: google.maps.ControlPosition.TOP_RIGHT
                        },
                        zoomControl: !0,
                        zoomControlOptions: {
                            position: google.maps.ControlPosition.TOP_RIGHT
                        },
                        enableCloseButton: !1,
                        addressControl: !1,
                        visible: !0
                    }),
                    google.maps.event.addListener(this.panoramaView, "position_changed", function() {
                        var t = e.panoramaView.getPosition();
                        if (t) {
                            var i = new OL.LonLat(t.lng(), t.lat());
                            if (e.pin.setCrosshairLonlat(i), !e.map.getExtent().containsLonLat(i))
                                return e.map.setCenter(i)
                        }
                    }),
                    google.maps.event.addListener(this.panoramaView, "pov_changed", function() {
                        var t = e.panoramaView.getPov(),
                            i = t.heading;
                        return e.scene.set({
                                cameraHeading: i
                            }),
                            e.pin.setCrosshairAngle(i)
                    }),
                    google.maps.event.addListener(this.panoramaView, "visible_changed", function() {
                        if (!e.panoramaView.getVisible())
                            return e._deactivateSv()
                    }),
                    this.panoramaView) : this.panoramaView
            },
            _closePanoramaView: function() {
                return this.panoramaView.setVisible(!1)
            },
            _getAvailabilityRadius: function() {
                return this.availabilityRadius || (this.availabilityRadius = this.pin.getGeodesicCrosshairRadius())
            },
            CLASS_NAME: "W.Presenter.StreetView"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        o = i(105),
        a = n(o),
        l = OL.Class(OL.Marker, {
            DRAG_POINT_RADIUS: 7,
            CROSSHAIR_RADIUS: 22,
            initialize: function(e) {
                var t = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                OL.Marker.prototype.initialize.call(this, e, new r.default("pin", !0));
                var n = (this.CROSSHAIR_RADIUS + this.DRAG_POINT_RADIUS) / Math.sqrt(2);
                this.crossHairOffset = new OL.Pixel(-n, -n),
                    this.svProjection = new OpenLayers.Projection("EPSG:4326"),
                    this.map = i,
                    this.render();
                var s = this.icon.$div;
                this.dragging = new a.default(this.map),
                    this.dragging.down = function(e) {
                        return s.addClass("dragging"),
                            t.events.triggerEvent("dragStart", {
                                xy: e.xy,
                                marker: t
                            })
                    },
                    this.dragging.force = function(e) {
                        return s.addClass("dragging"),
                            t.events.triggerEvent("dragStart", {
                                marker: t
                            })
                    },
                    this.dragging.move = function(e) {
                        t.lonlat = t.map.getLonLatFromViewPortPx(e.xy.offset(t.crossHairOffset));
                        var i = t.lonlat.clone().transform(t.map.getProjectionObject(), t.svProjection);
                        return t.layer.drawMarker(t),
                            t.events.triggerEvent("drag", {
                                xy: e.xy,
                                marker: t,
                                svLonlat: i
                            })
                    },
                    this.dragging.up = function(e) {
                        return s.removeClass("dragging"),
                            t.events.triggerEvent("dragCancel", {})
                    },
                    this.dragging.done = function(e) {
                        return t.icon.$div.removeClass("dragging"),
                            t.events.triggerEvent("dragDone", {
                                xy: e.xy,
                                marker: t
                            })
                    },
                    this.dragging.activate(this.dragHandle)
            },
            render: function() {
                this.crossHair = $("<div />").addClass("crosshair").appendTo(this.icon.$div),
                    this.dragHandle = $("<div />").addClass("drag-handle").appendTo(this.icon.$div),
                    this.arrow = $("<div/>").append($("<i/>").addClass("fa fa-arrow-up arrow")).appendTo(this.crossHair)
            },
            setPanoAvailable: function(e) {
                return this.icon.$div.toggleClass("pano-available", e)
            },
            setCrosshairAngle: function(e) {
                return this.arrow.css({
                    transform: "rotate(" + e + "deg)"
                })
            },
            setCrosshairLonlat: function(e) {
                return this.lonlat = e.transform(this.svProjection, this.map.getProjectionObject()),
                    this.layer.drawMarker(this)
            },
            toggleVisibility: function(e) {
                return this.icon.display(e)
            },
            getGeodesicCrosshairRadius: function() {
                return this.CROSSHAIR_RADIUS * this.map.getGeodesicPixelSize().h * 1e3
            },
            getCrosshairRadius: function() {
                return this.CROSSHAIR_RADIUS * this.map.resolution
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(24),
        s = OpenLayers.Class({
            videos: ["intro", "segments", "attributes", "turns", "house_numbers", "permalinks", "places_points", "places_areas"],
            videoDetails: null,
            $element: null,
            player: null,
            currentVideo: null,
            YoutubePlayerStates: {
                End: 0
            },
            initialize: function(e) {
                var t = this;
                this.$element = e,
                    this.videoDetails = I18n.t("tutorial.videos"),
                    this.$element.delegate(".video-menu .video-link", "click", function() {
                        t.onVideoSectionClicked(this.dataset.videoKey)
                    }),
                    this.$element.delegate(".dialog-close-button", "click", function() {
                        t.$element.modal("hide"),
                            t.onDialogClose()
                    }),
                    this.$element.on("show.bs.modal", function() {
                        t.initPlayer()
                    })
            },
            initPlayer: function() {
                var e = this,
                    t = this.videos.first(),
                    i = this.videoDetails[t].video_id;
                $.when(this.getYoutubePlayer()).done(function(n) {
                    e.$element.find(".video-menu").show(),
                        e.setSelectedVideoLink(t),
                        e.$element.data("bs.modal").isShown ? n.loadVideoById(i) : n.cueVideoById(i)
                })
            },
            onDialogClose: function() {
                this.player && this.player.stopVideo()
            },
            render: function() {
                return this.$element.html(n.getHTML("templates/tutorial-lightbox", {
                    videos: this.videos
                }))
            },
            onVideoSectionClicked: function(e) {
                this.setSelectedVideoLink(e),
                    this.player.loadVideoById(this.videoDetails[e].video_id)
            },
            setSelectedVideoLink: function(e) {
                this.currentVideo = e,
                    this.$element.find(".video-link").removeClass("active"),
                    this.$element.find(".video-link[data-video-key=" + e + "]").addClass("active")
            },
            onPlayerStateChanged: function(e) {
                e.data === this.YoutubePlayerStates.End && this.playNextVideo()
            },
            playNextVideo: function() {
                var e = this.videos.indexOf(this.currentVideo) + 1;
                e >= this.videos.length && (e = 0);
                var t = this.videos[e],
                    i = this.videoDetails[t].video_id;
                this.setSelectedVideoLink(t),
                    0 === e ? this.player.cueVideoById(i) : this.player.loadVideoById(i)
            },
            getYoutubePlayer: function() {
                var e = this,
                    t = $.Deferred();
                if (null !== this.player)
                    return this.player;
                var i = function(i) {
                    e.player = i.target,
                        t.resolve(e.player)
                };
                return this.render(),
                    $.getScript("https://www.youtube.com/player_api"),
                    window.onYouTubePlayerAPIReady = function() {
                        delete window.onYouTubePlayerAPIReady,
                            new window.YT.Player("tutorial-player", {
                                height: "481",
                                width: "800",
                                playerVars: {
                                    wmode: "transparent",
                                    modestbranding: 1,
                                    rel: 0,
                                    showinfo: 0,
                                    showsearch: 0
                                },
                                events: {
                                    onReady: i,
                                    onStateChange: $.proxy(e.onPlayerStateChanged, e)
                                }
                            })
                    },
                    t
            },
            CLASS_NAME: "Waze.View.Tutorial"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(823),
        s = i(20),
        r = OpenLayers.Class({
            flashService: null,
            initialize: function(e, t) {
                OpenLayers.Util.extend(this, t),
                    this.model = e,
                    this.flashService = new n
            },
            destroy: function() {
                this.flashService.destroy()
            },
            activate: function() {
                this.model.segments.on(s.CHANGED, this.onSegmentsChanged, this),
                    this.model.segments.on(s.ADDED, this.onSegmentsAdded, this)
            },
            deactivate: function() {
                this.model.segments.off(s.CHANGED, this.onSegmentsChanged, this),
                    this.model.segments.off(s.ADDED, this.onSegmentsAdded, this)
            },
            flash: function(e) {
                e instanceof Array ? this.flashService.addFeatures(e) : this.flashService.addFeature(e)
            },
            onSegmentsChanged: function(e) {
                for (var t = [], i = 0, n = e.length; i < n; i++)
                    e[i].state || t.push(e[i]);
                t.length > 0 && this.flash(t)
            },
            onSegmentsAdded: function(e) {
                for (var t = [], i = 0; i < 2; i++)
                    for (var n = 0, s = e.length; n < s; n++)
                        e[n].state === OpenLayers.State.INSERT && e[n].attributes.origIDs && t.push(e[n]);
                t.length > 0 && this.flash(t)
            },
            CLASS_NAME: "Waze.Service.Services"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    var n = OpenLayers.Class({
        pendingFeatures: null,
        current: null,
        currentIntent: null,
        flashTimeMillis: 100,
        flashIntent: "flash",
        initialize: function(e) {
            OpenLayers.Util.extend(this, e),
                this.pendingFeatures = [],
                this.current = null
        },
        destroy: function() {
            this.pendingFeatures.splice(0, this.pendingFeatures.length)
        },
        addFeature: function(e) {
            this.pendingFeatures.push(e),
                this.current || this.flash()
        },
        addFeatures: function(e) {
            this.pendingFeatures = this.pendingFeatures.concat(e),
                this.current || this.flash()
        },
        flash: function() {
            if (this.current && this.current.layer && this.current.renderIntent === this.flashIntent && this.current.layer.drawFeature(this.current, this.currentIntent),
                0 === this.pendingFeatures.length)
                return void(this.current = null);
            if (this.current = this.pendingFeatures.shift(),
                this.current = W.map.segmentLayer.getVector(this.current),
                this.current) {
                this.currentIntent = this.current.renderIntent,
                    this.current.layer && this.current.layer.drawFeature(this.current, this.flashIntent);
                var e = this;
                window.setTimeout(function() {
                    e.flash()
                }, this.flashTimeMillis)
            }
        },
        CLASS_NAME: "Waze.Service.FlashService"
    });
    e.exports = n
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(21),
        o = n(r),
        a = i(3),
        l = n(a),
        u = i(1),
        d = n(u),
        c = i(2),
        h = n(c),
        p = i(17),
        f = n(p),
        g = i(26),
        m = n(g),
        v = i(106),
        _ = n(v),
        y = i(13),
        b = n(y),
        E = i(99),
        w = n(E),
        S = i(196),
        M = n(S),
        C = i(825),
        T = n(C),
        A = i(136),
        I = n(A),
        O = i(151),
        L = n(O),
        D = i(826),
        k = n(D),
        R = (s = {},
            (0,
                f.default)(s, L.default.GROUP_ISSUES, !0),
            (0,
                f.default)(s, L.default.GROUP_MAP_ISSUES, !0),
            (0,
                f.default)(s, L.default.ITEM_MAP_PROBLEMS, !0),
            (0,
                f.default)(s, L.default.ITEM_CLOSED_MAP_PROBLEMS, !1),
            (0,
                f.default)(s, L.default.ITEM_UPDATE_REQUESTS, !0),
            (0,
                f.default)(s, L.default.ITEM_CLOSED_UPDATE_REQUESTS, !1),
            (0,
                f.default)(s, L.default.ITEM_PLACE_UPDATE_REQUESTS, !1),
            (0,
                f.default)(s, L.default.GROUP_PARKING_ISSUES, !1),
            (0,
                f.default)(s, L.default.ITEM_PARKING_MAP_PROBLEMS, !0),
            (0,
                f.default)(s, L.default.ITEM_PARKING_CLOSED_MAP_PROBLEMS, !1),
            (0,
                f.default)(s, L.default.ITEM_PARKING_PLACE_UPDATE_REQUESTS, !0),
            (0,
                f.default)(s, L.default.GROUP_PLACES, !0),
            (0,
                f.default)(s, L.default.ITEM_VENUES, !0),
            (0,
                f.default)(s, L.default.ITEM_RESIDENTIAL_PLACES, !1),
            (0,
                f.default)(s, L.default.ITEM_PARKING_PLACES, !1),
            (0,
                f.default)(s, L.default.GROUP_ROAD, !0),
            (0,
                f.default)(s, L.default.ITEM_ROAD, !0),
            (0,
                f.default)(s, L.default.ITEM_JUNCTION_BOXES, W.Config.big_junctions.enable),
            (0,
                f.default)(s, L.default.ITEM_CLOSURES, !1),
            (0,
                f.default)(s, L.default.ITEM_SPEED_CAMERAS, !1),
            (0,
                f.default)(s, L.default.GROUP_DISPLAY, !0),
            (0,
                f.default)(s, L.default.ITEM_SATELLITE_IMAGERY, !0),
            (0,
                f.default)(s, L.default.ITEM_AREA_MANAGERS, !1),
            (0,
                f.default)(s, L.default.ITEM_GPS_POINTS, !1),
            (0,
                f.default)(s, L.default.ITEM_LIVE_USERS, !1),
            (0,
                f.default)(s, L.default.ITEM_EDITABLE_AREAS, !1),
            s),
        x = function() {
            function e(t) {
                (0,
                    d.default)(this, e),
                this._LOCAL_STORAGE_KEY = "togglersState",
                    this._tree = t,
                    this._togglers = this._getTogglersMap(),
                    this._bitFieldSerializer = new k.default
            }
            return (0,
                    h.default)(e, [{
                    key: "_getTogglersMap",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t) {
                                e[t.getId()] = t
                            }),
                            e
                    }
                }, {
                    key: "setState",
                    value: function(e) {
                        var t = this;
                        (0,
                            l.default)(e).forEach(function(i) {
                                var n = e[i];
                                t._togglers[i].setState(n)
                            }),
                            this.trigger("change")
                    }
                }, {
                    key: "writeStateToApp",
                    value: function(e) {
                        this._eachToggler(this._tree, !0, function(t, i) {
                            t.writeStateToApp(i && t.getState(), e)
                        })
                    }
                }, {
                    key: "getState",
                    value: function() {
                        var e = (0,
                            o.default)({}, this._togglers);
                        return (0,
                                l.default)(e).forEach(function(t) {
                                e[t] = e[t].getState()
                            }),
                            e
                    }
                }, {
                    key: "append",
                    value: function(e, t) {
                        this._togglers[e].appendChild(t),
                            this._togglers = this._getTogglersMap()
                    }
                }, {
                    key: "_eachToggler",
                    value: function(e, t, i) {
                        var n = this;
                        e.getChildren().forEach(function(e) {
                            i(e, t),
                                e.isLeaf() || n._eachToggler(e, t && e.getState(), i)
                        })
                    }
                }, {
                    key: "getTreeState",
                    value: function() {
                        var e = {};
                        return this._eachToggler(this._tree, !0, function(t, i) {
                                e[t.getId()] = i
                            }),
                            e
                    }
                }, {
                    key: "serialize",
                    value: function() {
                        return this._bitFieldSerializer.convertStateToBitfield(this.getState())
                    }
                }, {
                    key: "setStateFromBitfield",
                    value: function(e) {
                        var t = this._bitFieldSerializer.convertBitFieldToState(e);
                        this.setState(t)
                    }
                }, {
                    key: "readFromLocalStorage",
                    value: function() {
                        var e = b.default.localStorage.get(this._LOCAL_STORAGE_KEY);
                        null != e && this.setStateFromBitfield(e)
                    }
                }, {
                    key: "writeToLocalStorage",
                    value: function() {
                        b.default.localStorage.set(this._LOCAL_STORAGE_KEY, this.serialize())
                    }
                }], [{
                    key: "create",
                    value: function() {
                        var t = _.default.LAYER_UNIQUE_NAMES,
                            i = L.default,
                            n = new e(M.default.of("ROOT", [M.default.of(i.GROUP_ISSUES, [M.default.of(i.GROUP_MAP_ISSUES, [w.default.of(i.ITEM_MAP_PROBLEMS, new T.default("problems", "ALL", "OPEN")), w.default.of(i.ITEM_CLOSED_MAP_PROBLEMS, new T.default("problems", "ALL", "CLOSED")), w.default.of(i.ITEM_UPDATE_REQUESTS, new T.default("mapUpdateRequests", "ALL", "OPEN")), w.default.of(i.ITEM_CLOSED_UPDATE_REQUESTS, new T.default("mapUpdateRequests", "ALL", "CLOSED"))]), w.default.of(i.ITEM_PLACE_UPDATE_REQUESTS, [new T.default("venues", "ALL", "UPDATE_REQUEST"), new I.default(t.PLACE_UPDATES)]), M.default.of(i.GROUP_PARKING_ISSUES, [w.default.of(i.ITEM_PARKING_MAP_PROBLEMS, new T.default("problems", "PARKING", "OPEN")), w.default.of(i.ITEM_PARKING_CLOSED_MAP_PROBLEMS, new T.default("problems", "PARKING", "CLOSED")), w.default.of(i.ITEM_PARKING_PLACE_UPDATE_REQUESTS, [new T.default("venues", "PARKING", "UPDATE_REQUEST"), new I.default("PARKING_PLACE_UPDATES")])])]), M.default.of(i.GROUP_PLACES, [w.default.of(i.ITEM_VENUES, new T.default("venues", "ALL", "SHOW")), w.default.of(i.ITEM_RESIDENTIAL_PLACES, new T.default("venues", "RESIDENTIAL", "SHOW")), w.default.of(i.ITEM_PARKING_PLACES, new T.default("venues", "PARKING", "SHOW"))]), M.default.of(i.GROUP_ROAD, [w.default.of(i.ITEM_ROAD, new I.default(t.ROADS)), w.default.of(i.ITEM_JUNCTION_BOXES, new I.default(t.BIG_JUNCTIONS)), w.default.of(i.ITEM_CLOSURES, new I.default(t.CLOSURES)), w.default.of(i.ITEM_SPEED_CAMERAS, new I.default(t.SPEED_CAMERAS))]), M.default.of(i.GROUP_DISPLAY, [w.default.of(i.ITEM_SATELLITE_IMAGERY, new I.default(t.SATELLITE_IMAGERY)), w.default.of(i.ITEM_AREA_MANAGERS, new I.default(t.AREA_MANAGERS)), w.default.of(i.ITEM_GPS_POINTS, new I.default(t.GPS_POINTS)), w.default.of(i.ITEM_EDITABLE_AREAS, new I.default(t.EDITABLE_AREAS)), w.default.of(i.ITEM_LIVE_USERS, new I.default(t.LIVE_USERS))])])),
                            s = m.default.getLayerSwitcherConfig(),
                            r = (0,
                                o.default)({}, R);
                        return s.forEach(function(e) {
                                e.togglers.forEach(function(e) {
                                        return n.append(e.parent, e.toggler)
                                    }),
                                    (0,
                                        o.default)(r, e.defaultVisibility)
                            }),
                            n.setState(r),
                            n
                    }
                }]),
                e
        }();
    (0,
        o.default)(x.prototype, Backbone.Events),
    t.default = x,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(1),
        r = n(s),
        o = i(2),
        a = n(o),
        l = function() {
            function e(t, i, n) {
                (0,
                    r.default)(this, e),
                this._repoName = t,
                    this._categoryName = i,
                    this._attributeName = n
            }
            return (0,
                    a.default)(e, [{
                    key: "writeStateToApp",
                    value: function(e, t) {
                        t.dataModel[this._repoName].filter.setAttribute(this._categoryName, this._attributeName, e)
                    }
                }]),
                e
        }();
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(3),
        o = n(r),
        a = i(21),
        l = n(a),
        u = i(1),
        d = n(u),
        c = i(2),
        h = n(c),
        p = i(17),
        f = n(p),
        g = i(26),
        m = n(g),
        v = i(151),
        _ = n(v),
        y = (s = {},
            (0,
                f.default)(s, _.default.GROUP_ISSUES, 0),
            (0,
                f.default)(s, _.default.GROUP_MAP_ISSUES, 1),
            (0,
                f.default)(s, _.default.ITEM_MAP_PROBLEMS, 2),
            (0,
                f.default)(s, _.default.ITEM_CLOSED_MAP_PROBLEMS, 3),
            (0,
                f.default)(s, _.default.ITEM_UPDATE_REQUESTS, 4),
            (0,
                f.default)(s, _.default.ITEM_CLOSED_UPDATE_REQUESTS, 5),
            (0,
                f.default)(s, _.default.ITEM_PLACE_UPDATE_REQUESTS, 6),
            (0,
                f.default)(s, _.default.GROUP_PARKING_ISSUES, 7),
            (0,
                f.default)(s, _.default.ITEM_PARKING_MAP_PROBLEMS, 8),
            (0,
                f.default)(s, _.default.ITEM_PARKING_CLOSED_MAP_PROBLEMS, 9),
            (0,
                f.default)(s, _.default.ITEM_PARKING_PLACE_UPDATE_REQUESTS, 10),
            (0,
                f.default)(s, _.default.GROUP_PLACES, 11),
            (0,
                f.default)(s, _.default.ITEM_VENUES, 12),
            (0,
                f.default)(s, _.default.ITEM_RESIDENTIAL_PLACES, 13),
            (0,
                f.default)(s, _.default.ITEM_PARKING_PLACES, 14),
            (0,
                f.default)(s, _.default.GROUP_ROAD, 15),
            (0,
                f.default)(s, _.default.ITEM_ROAD, 16),
            (0,
                f.default)(s, _.default.ITEM_JUNCTION_BOXES, 17),
            (0,
                f.default)(s, _.default.ITEM_CLOSURES, 18),
            (0,
                f.default)(s, _.default.ITEM_SPEED_CAMERAS, 19),
            (0,
                f.default)(s, _.default.GROUP_DISPLAY, 20),
            (0,
                f.default)(s, _.default.ITEM_SATELLITE_IMAGERY, 21),
            (0,
                f.default)(s, _.default.ITEM_AREA_MANAGERS, 22),
            (0,
                f.default)(s, _.default.ITEM_GPS_POINTS, 23),
            (0,
                f.default)(s, _.default.ITEM_LIVE_USERS, 24),
            (0,
                f.default)(s, _.default.ITEM_EDITABLE_AREAS, 25),
            s),
        b = function() {
            function e() {
                var t = this;
                (0,
                    d.default)(this, e),
                this._togglerBitNumber = (0,
                        l.default)({}, y),
                    m.default.getLayerSwitcherConfig().forEach(function(e) {
                        (0,
                            l.default)(t._togglerBitNumber, e.bitNumbers)
                    })
            }
            return (0,
                    h.default)(e, [{
                    key: "convertStateToBitfield",
                    value: function(e) {
                        var t = this;
                        return (0,
                            o.default)(e).reduce(function(i, n) {
                            return e[n] && (i |= 1 << t._togglerBitNumber[n]),
                                i
                        }, 0)
                    }
                }, {
                    key: "convertBitFieldToState",
                    value: function(e) {
                        var t = this;
                        return (0,
                            o.default)(this._togglerBitNumber).reduce(function(i, n) {
                            return i[n] = 0 != (e & 1 << t._togglerBitNumber[n]),
                                i
                        }, {})
                    }
                }]),
                e
        }();
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(201),
        l = n(a),
        u = i(102),
        d = n(u),
        c = i(828),
        h = n(c),
        p = i(926),
        f = n(p),
        g = Marionette.Object.extend({
            MODE_TO_CLASS: (s = {},
                (0,
                    o.default)(s, l.default.DEFAULT, h.default),
                (0,
                    o.default)(s, l.default.MTE, f.default),
                s),
            initialize: function(e) {
                this.model = e.model,
                    this.sidebarRegion = e.layout.getRegion("sidebarRegion"),
                    this.toolbarRegion = e.layout.getRegion("toolbarRegion"),
                    this.topbarRegion = e.layout.getRegion("topbarRegion")
            },
            activate: function() {
                return this.model.on("change:mode change:sandbox change:user", this._onModeChange, this),
                    W.prefs.on("change:isImperial", this._onModeChange, this),
                    this._onModeChange("activate")
            },
            restore: function(e) {
                this.mode.restore && this.mode.restore(e)
            },
            canExitMode: function() {
                return this.mode && !this.mode.blockingExit()
            },
            getExitError: function() {
                if (this.mode)
                    return this.mode.blockingExitReason()
            },
            getState: function() {
                if (this.mode && this.mode.getState)
                    return this.mode.getState()
            },
            _onModeChange: function() {
                return this._setMode(this.model.get("mode"))
            },
            _setMode: function(e) {
                this.mode && (this.mode.exit(),
                    this.mode.off(d.default.STATE_CHANGED, this._onModeStateChange, this));
                var t = this.MODE_TO_CLASS[e];
                return this.mode = new t,
                    this.toolbarRegion.show(this.mode.getToolbarLayout()),
                    this.topbarRegion.show(this.mode.getTopbarLayout()),
                    this.sidebarRegion.show(this.mode.getSidebarLayout()),
                    this.mode.enter(),
                    this.mode.on(d.default.STATE_CHANGED, this._onModeStateChange, this)
            },
            _onModeStateChange: function() {
                return this.trigger(d.default.STATE_CHANGED)
            }
        });
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(829),
        r = n(s),
        o = i(852),
        a = n(o),
        l = i(905),
        u = n(l),
        d = i(920),
        c = n(d),
        h = Marionette.Object.extend({
            sidebarLayout: null,
            feedControl: null,
            initialize: function() {
                this.feedControl = this._createFeed(),
                    this.sidebarLayout = new a.default({
                        model: W.app,
                        selectionManager: W.selectionManager,
                        editingMediator: W.editingMediator,
                        dataModel: W.model,
                        sandbox: W.app.isSandboxMode(),
                        loggedIn: W.app.isLoggedIn(),
                        feedControl: this.feedControl
                    }),
                    this.toolbarController = new u.default({
                        actionManager: W.model.actionManager,
                        togglerTree: W.togglerTree,
                        app: W.app,
                        controller: W.controller,
                        dataModel: W.model,
                        loginManager: W.loginManager,
                        map: W.map,
                        mediator: W.editingMediator,
                        selectionManager: W.selectionManager
                    }),
                    this.topbarController = new c.default({
                        dataModel: W.model,
                        globalVent: W.vent,
                        managedAreasRepository: W.model.managedAreas,
                        map: W.map
                    })
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getTopbarLayout: function() {
                return this.topbarController.layout
            },
            enter: function() {
                this.feedControl && (W.app.loginManager && W.app.loginManager.isFirstLogin() ? this.feedControl.startFirstTimePolling() : this.feedControl.refresh())
            },
            exit: function() {
                return this.feedControl && this.feedControl.destroy(),
                    this.toolbarController.destroy(),
                    this.topbarController.destroy(),
                    W.selectionManager.unselectAll()
            },
            blockingExit: function() {
                return W.model.actionManager.canUndo()
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            _createFeed: function() {
                return this.feedControl = new r.default({
                        container: W.map.panelRegion
                    }),
                    this.feedControl
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(830),
        r = n(s),
        o = i(835),
        a = n(o),
        l = i(836),
        u = n(l),
        d = i(243),
        c = n(d),
        h = i(843),
        p = n(h),
        f = i(845),
        g = n(f),
        m = i(849),
        v = n(m),
        _ = Marionette.Object.extend({
            browser: null,
            initialize: function(e) {
                this.model = new r.default,
                    this.container = e.container
            },
            render: function(e) {
                this.layout = new a.default({
                        el: e.el,
                        model: this.model
                    }),
                    this.layout.render(),
                    this._createViews(),
                    this._bindEvents(),
                    this._showViews()
            },
            refresh: function() {
                return this.model.refresh()
            },
            startFirstTimePolling: function() {
                this.model.startFirstTimePolling()
            },
            destroy: function() {
                this.layout && this.layout.destroy(),
                    this.browser && this.browser.destroy()
            },
            _createViews: function() {
                this.views = {
                    notifications: new c.default({
                        collection: this.model.notifications
                    }),
                    messages: new p.default({
                        collection: this.model.messages
                    }),
                    issues: new g.default({
                        collection: this.model.issues
                    }),
                    firstTimeMessages: new v.default({
                        collection: this.model.firstTimeMessages
                    })
                }
            },
            _showViews: function() {
                this.layout.showChildView("firstTimeMessages", this.views.firstTimeMessages),
                    this.layout.showChildView("notifications", this.views.notifications),
                    this.layout.showChildView("messages", this.views.messages),
                    this.layout.showChildView("issues", this.views.issues)
            },
            _bindEvents: function() {
                return this.listenTo(this.views.issues, "issues:click", this._onItemClick),
                    this.listenTo(this.views.messages, "messages:click", this._onItemClick),
                    this.listenTo(this.views.notifications, "notifications:click", this._onItemClick)
            },
            _onItemClick: function(e) {
                this.browser && this.browser.destroy();
                var t = e.model,
                    i = t.collection,
                    n = i.indexOf(t);
                this.browser = new u.default({
                        collection: i,
                        container: this.container
                    }),
                    this.browser.browse(n),
                    this.listenTo(this.browser, "destroy", function() {
                        this.browser = null
                    })
            }
        });
    t.default = _,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(48),
        r = n(s),
        o = i(49),
        a = n(o),
        l = i(153),
        u = n(l),
        d = i(831),
        c = n(d),
        h = i(832),
        p = n(h),
        f = i(833),
        g = n(f),
        m = i(834),
        v = n(m),
        y = Backbone.Model.extend({
            defaults: {
                empty: !0,
                loading: !1,
                loadingMore: !1,
                lastIssueId: null,
                firstTimePolling: !1
            },
            initialize: function() {
                return this.serializer = new a.default,
                    this.notifications = new u.default,
                    this.notifications.on("all", this._updateSelf, this),
                    this.messages = new c.default,
                    this.messages.on("all", this._updateSelf, this),
                    this.firstTimeMessages = new p.default,
                    this.firstTimeMessages.on("all", this._updateSelf, this),
                    this.issues = new g.default,
                    this.issues.on("all", this._updateSelf, this)
            },
            startFirstTimePolling: function() {
                var e = this;
                this.set("firstTimePolling", !0),
                    this.notificationsPolling = new v.default({
                        intervalTime: 3e3,
                        maxCount: 4,
                        task: function() {
                            var t = $.get(W.Config.paths.notifications);
                            return $.when(t).done(function(t) {
                                e._onNotificationsResponse(t)
                            })
                        },
                        repeatUntil: function() {
                            return e.firstTimeMessages.length > 0
                        }
                    }),
                    this.issuesPolling = new v.default({
                        intervalTime: 5e3,
                        maxCount: 4,
                        task: function() {
                            return e.issues.fetch({
                                reset: !0
                            })
                        },
                        repeatUntil: function() {
                            return e.issues.length > 0
                        }
                    });
                var t = this.notificationsPolling.startLoop(),
                    i = this.issuesPolling.startLoop();
                r.default.all([t, i]).then(function() {
                    e.set("firstTimePolling", !1)
                }, function() {
                    e.set("firstTimePolling", !1)
                })
            },
            refresh: function() {
                var e = this;
                if (!this.attributes.loading) {
                    this.set("loading", !0);
                    var t = $.get(W.Config.paths.notifications),
                        i = this.issues.fetch({
                            reset: !0
                        });
                    return $.when(t, i).always(function() {
                        return e.set("loading", !1)
                    }).done(function(t, i) {
                        var n = i[0];
                        return e._onNotificationsResponse(t[0]),
                            e.notificationsPolling && e.notificationsPolling.checkAndStopIfFinished(),
                            e.set("lastIssueId", n.lastIssueId)
                    })
                }
            },
            _onNotificationsResponse: function(e) {
                var t = this;
                if (this.serializer.read(e),
                    e.notifications) {
                    var i = e.notifications.objects,
                        n = _.filter(i, function(e) {
                            return e.isNotification()
                        }),
                        s = _.filter(i, function(e) {
                            return e.isForumMessage()
                        }),
                        r = i.filter(function(e) {
                            return e.isFirstTimeMessage()
                        }).filter(function(e) {
                            return e.attributes.type !== e.TYPE.CHECK_YOUR_NEIGHBORHOOD || t._hasHome(e)
                        });
                    this.notifications.reset(n),
                        this.messages.reset(s),
                        this.firstTimeMessages.reset(r)
                }
            },
            _hasHome: function(e) {
                return Boolean(e.attributes.parameters.address)
            },
            loadMore: function() {
                var e = this;
                if (!this.attributes.loadingMore)
                    return this.set("loadingMore", !0),
                        this.issues.fetch({
                            remove: !1,
                            data: {
                                lastIssueId: this.get("lastIssueId")
                            }
                        }).always(function() {
                            return e.set("loadingMore", !1)
                        }).done(function(t) {
                            return e.set("lastIssueId", t.lastIssueId)
                        })
            },
            _updateSelf: function() {
                var e = this.notifications.length + this.messages.length + this.firstTimeMessages.length + this.issues.length === 0;
                return this.set("empty", e)
            }
        });
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(153),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            parse: function(e) {
                return this.serializer.read(e),
                    _.filter(e.notifications.objects, function(e) {
                        return e.isForumMessage()
                    })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(153),
        g = n(f),
        m = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "parse",
                    value: function(e) {
                        return this.serializer.read(e),
                            _.filter(e.notifications.objects, function(e) {
                                return e.isFirstTimeMessage()
                            })
                    }
                }]),
                t
        }(g.default);
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(49),
        a = n(o),
        l = i(38),
        u = n(l),
        d = i(20),
        c = n(d),
        h = u.default.prototype.TYPE,
        p = Backbone.Collection.extend({
            model: u.default,
            initialize: function() {
                this.dataModel = W.model,
                    this.dataModelRefs = {},
                    this.serializer = new a.default
            },
            url: function() {
                return W.Config.paths.issues
            },
            parse: function(e) {
                if (!e.issues || !e.issues.objects)
                    return [];
                this.serializer.read(e),
                    this.dataModel.putPersistent(e);
                var t = this._setReferences(e.issues.objects);
                return this._setListeners(),
                    t
            },
            _setReferences: function(e) {
                for (var t = [], i = 0; i < e.length; i++) {
                    var n = e[i],
                        s = n.attributes.type,
                        r = void 0,
                        o = void 0,
                        a = void 0,
                        l = {};
                    switch (s) {
                        case h.MAP_PROBLEM:
                            r = this._getProblem(n),
                                o = null != r,
                                l = {
                                    problem: r
                                };
                            break;
                        case h.UPDATE_REQUEST:
                            r = this._getUpdateRequest(n),
                                o = null != r,
                                l = {
                                    updateRequest: r
                                };
                            break;
                        case h.VENUE_UPDATE_REQUEST:
                            r = this._getVenue(n),
                                a = this._getVenueUpdateRequest(n),
                                o = null != r && null != a,
                                l = {
                                    venue: r,
                                    updateRequest: a,
                                    initialApproved: a ? a.get("approved") : void 0
                                }
                    }
                    var u = this._getKey(r);
                    o && null != u && (n.set(l),
                        this.dataModelRefs[u] || (this.dataModelRefs[u] = []),
                        this.dataModelRefs[u].push(n),
                        t.push(n))
                }
                return t
            },
            _setListeners: function() {
                return this._bindRepositoryEvents(this.dataModel.problems),
                    this._bindRepositoryEvents(this.dataModel.mapUpdateRequests),
                    this._bindRepositoryEvents(this.dataModel.venues)
            },
            _bindRepositoryEvents: function(e) {
                var t = this,
                    i = {};
                i[c.default.CHANGED] = this._makeTrigger("onModelChanged"),
                    i[c.default.REMOVED] = this._makeTrigger("onModelRemoved"),
                    i[c.default.SYNCED] = this._makeTrigger("onModelSynced"),
                    (0,
                        r.default)(i).forEach(function(n) {
                        var s = i[n];
                        e.on(n, s, t)
                    })
            },
            _makeTrigger: function(e) {
                var t = this;
                return function(i) {
                    for (var n = 0; n < i.length; n++) {
                        var s = i[n],
                            r = t._getIssues(s);
                        null != r && r.forEach(function(t) {
                            return t[e].call(t)
                        })
                    }
                }
            },
            _getProblem: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.problems.get(t)
            },
            _getUpdateRequest: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.mapUpdateRequests.get(t)
            },
            _getVenue: function(e) {
                var t = e.attributes.referenceId;
                if (t)
                    return this.dataModel.venues.get(t)
            },
            _getVenueUpdateRequest: function(e) {
                var t = this._getVenue(e),
                    i = t.attributes.venueUpdateRequests,
                    n = e.attributes.venueUpdateRequestId;
                return _(i).findWhere({
                    id: n
                })
            },
            _getKey: function(e) {
                if (e)
                    return e.type + "_" + e.getID()
            },
            _getIssues: function(e) {
                var t = this._getKey(e);
                return this.dataModelRefs[t]
            }
        });
    t.default = p,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(48),
        r = n(s),
        o = i(21),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = function() {
            function e(t) {
                var i = this;
                (0,
                    u.default)(this, e),
                this.intervalTime = 5e3,
                    this.count = 0,
                    this.maxCount = 3,
                    this.task = function() {},
                    this.repeatUntil = function() {
                        return !1
                    },
                    (0,
                        a.default)(this, t),
                    this._lastTaskResult = null,
                    this._timeout = 0,
                    this.reject = null,
                    this.resolve = null,
                    this._stopped = !1,
                    this._started = !1,
                    this._promise = new r.default(function(e, t) {
                        i.resolve = e,
                            i.reject = t
                    })
            }
            return (0,
                    c.default)(e, [{
                    key: "startLoop",
                    value: function() {
                        return this._started ? this._promise : (this._started = !0,
                            this._pollingLoop(),
                            this._promise)
                    }
                }, {
                    key: "_resolve",
                    value: function(e) {
                        this._stopPollingLoop(),
                            this._stopped || (this._stopped = !0,
                                this.resolve(e))
                    }
                }, {
                    key: "_reject",
                    value: function(e) {
                        this._stopPollingLoop(),
                            this._stopped || (this._stopped = !0,
                                this.reject(e))
                    }
                }, {
                    key: "breakLoop",
                    value: function() {
                        this._reject(!1)
                    }
                }, {
                    key: "_stopPollingLoop",
                    value: function() {
                        this._timeout && (window.clearTimeout(this._timeout),
                            this._timeout = 0)
                    }
                }, {
                    key: "_pollingLoop",
                    value: function() {
                        var e = this;
                        if (!this._stopped) {
                            if (this.count >= this.maxCount)
                                return void this._reject(!1);
                            var t = this.intervalTime;
                            0 === this.count && (t = 0),
                                this._timeout = window.setTimeout(function() {
                                    e.count++;
                                    var t = e.task();
                                    r.default.resolve(t).catch(function() {}).then(e._responseCallback.bind(e))
                                }, t)
                        }
                    }
                }, {
                    key: "_responseCallback",
                    value: function(e) {
                        this._lastTaskResult = e,
                            this._next()
                    }
                }, {
                    key: "_next",
                    value: function() {
                        this._stopPollingLoop(),
                            this.checkAndStopIfFinished() || this._pollingLoop()
                    }
                }, {
                    key: "checkAndStopIfFinished",
                    value: function() {
                        return !!this.repeatUntil(this._lastTaskResult) && (this._resolve(!0), !0)
                    }
                }]),
                e
        }();
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(18),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/Feed/templates/feed",
            events: {
                "click .feed-load-more": "_onLoadMoreClick"
            },
            regions: {
                notifications: ".feed-notifications",
                firstTimeMessages: ".feed-first-time-messages",
                messages: ".feed-messages",
                issues: ".feed-issues"
            },
            bindings: {
                ".feed-loading": {
                    observe: "loading",
                    visible: !0
                },
                ".feed-content": {
                    observe: "loading",
                    visible: function(e) {
                        return !e
                    }
                },
                ".feed-empty": {
                    observe: ["empty", "loading"],
                    visible: function(e) {
                        var t = (0,
                                s.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return i && !n
                    }
                },
                ".feed-load-more": {
                    observe: ["loading", "loadingMore"],
                    visible: function(e) {
                        var t = (0,
                                s.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return !i && !n
                    }
                },
                ".feed-loading-more": {
                    observe: "loadingMore",
                    visible: !0
                },
                ".feed-load-section": {
                    observe: "firstTimePolling",
                    visible: _.negate(_.identity)
                },
                ".feed-first-time-load": {
                    observe: "firstTimePolling",
                    visible: !0
                }
            },
            onRender: function() {
                return this.stickit()
            },
            _onLoadMoreClick: function() {
                return this.model.loadMore(),
                    W.Report.feedAction("load_more")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(96),
        r = n(s),
        o = i(242),
        a = n(o),
        l = i(842),
        u = n(l),
        d = i(96).prototype.TYPE,
        c = i(38).prototype.TYPE,
        h = Marionette.Object.extend({
            initialize: function(e) {
                return this.currentFeedItem = null,
                    this.collection = e.collection,
                    this.container = e.container,
                    this.listenTo(this.container, "closeClicked", this.destroy),
                    W.accelerators.events.register("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.register("prevFeedItem", this, this._prevItemClicked)
            },
            browse: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                return this._setCurrent(this.collection.at(e)),
                    this._show(this.currentFeedItem)
            },
            showNext: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_next", this.currentFeedItem),
                    this._setCurrent(this.collection.at(++e)),
                    this._show(this.currentFeedItem)
            },
            showPrev: function() {
                var e = this.collection.indexOf(this.currentFeedItem);
                return this._reportEvent("show_prev", this.currentFeedItem),
                    this._setCurrent(this.collection.at(--e)),
                    this._show(this.currentFeedItem)
            },
            _reportEvent: function(e, t) {
                var i = t.get("type");
                return W.Report.feedAction(e, i)
            },
            _nextItemClicked: function() {
                if (!this._isDone())
                    return this.showNext()
            },
            _prevItemClicked: function() {
                if (!this._isAtBeginning())
                    return this.showPrev()
            },
            onDestroy: function() {
                return this._clearCurrent(),
                    W.accelerators.events.unregister("nextFeedItem", this, this._nextItemClicked),
                    W.accelerators.events.unregister("prevFeedItem", this, this._prevItemClicked)
            },
            _show: function(e) {
                return e instanceof r.default ? this._showNotification(e) : this._showIssue(e),
                    W.Report.feedAction("show", e.get("type"))
            },
            _showNotification: function(e) {
                var t = e.get("type"),
                    i = void 0;
                i = t === d.PRIVATE_FORUM_MESSAGE ? u.default : a.default;
                var n = new i({
                    model: e,
                    hasNext: !this._isDone()
                });
                return this.listenTo(n, "nextClicked", this.showNext),
                    this.container.show(n)
            },
            _showIssue: function(e) {
                var t = {
                        showNext: !this._isDone(),
                        nextButtonString: I18n.t("feed.issues.next"),
                        nextButtonClass: "btn-primary"
                    },
                    i = e.get("type"),
                    n = void 0;
                switch (i) {
                    case c.MAP_PROBLEM:
                        n = W.reqres.request("problems:browse", _.extend(t, {
                            problem: e.get("problem")
                        }));
                        break;
                    case c.UPDATE_REQUEST:
                        n = W.reqres.request("problems:browse", _.extend(t, {
                            problem: e.get("updateRequest")
                        }));
                        break;
                    case c.VENUE_UPDATE_REQUEST:
                        n = W.reqres.request("updaterequests:browse", _.extend(t, {
                            updateRequest: e.get("updateRequest")
                        }))
                }
                return n.on("next", this.showNext.bind(this))
            },
            _isDone: function() {
                return this.currentFeedItem === this.collection.last()
            },
            _isAtBeginning: function() {
                return this.currentFeedItem === this.collection.first()
            },
            _onItemDestroy: function() {
                return this._isDone() ? (this._clearCurrent(),
                    this.container.empty()) : this.showNext()
            },
            _setCurrent: function(e) {
                return this._clearCurrent(),
                    this.currentFeedItem = e,
                    this.currentFeedItem.set("selected", !0),
                    this.currentFeedItem.on("destroy", this._onItemDestroy, this)
            },
            _clearCurrent: function() {
                this.currentFeedItem && (this.currentFeedItem.set("selected", !1),
                        this.currentFeedItem.off("destroy", this._onItemDestroy)),
                    this.currentFeedItem = null
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    e.exports = i.p + "img/level0233d12d7a41f4890f6dd1ee9088ac84e6.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level032896edee403d97e81128b54ed81cf668.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level0482dfdf79740aa5d92aae015abc6660fc.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level050754532211b9f1d2a6bef279e237217f.png"
}, function(e, t, i) {
    e.exports = i.p + "img/level06d91ac1e234d4a0b11bec9fd0635882ca.png"
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(242),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: "notification-detail notification-detail-pm",
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    type: "pm",
                    sender: this.model.getParameter("sender"),
                    senderURL: this.model.getParameter("senderURL")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(243),
        r = n(s),
        o = i(844),
        a = n(o),
        l = r.default.extend({
            childView: a.default,
            childViewEventPrefix: "messages",
            moreItemsMessage: "feed.messages.more_items"
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(155),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: "feed-item feed-notification-pm",
            template: "Waze/Modules/Feed/templates/message_item",
            serializeData: function() {
                return _.extend(s.default.prototype.serializeData.apply(this, arguments), {
                    title: this.model.getParameter("subject"),
                    sender: this.model.getParameter("sender")
                })
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(17),
        o = n(r),
        a = i(108),
        l = n(a),
        u = i(846),
        d = n(u),
        c = i(847),
        h = n(c),
        p = i(848),
        f = n(p),
        g = i(38).prototype.TYPE,
        m = Marionette.CollectionView.extend({
            TYPE_TO_VIEW: (s = {},
                (0,
                    o.default)(s, g.MAP_PROBLEM, d.default),
                (0,
                    o.default)(s, g.UPDATE_REQUEST, h.default),
                (0,
                    o.default)(s, g.VENUE_UPDATE_REQUEST, f.default),
                s),
            tagName: "ul",
            className: "feed-list",
            childView: l.default,
            childViewEventPrefix: "issues",
            buildChildView: function(e, t, i) {
                var n = e.attributes.type;
                return new(0,
                    this.TYPE_TO_VIEW[n])({
                    model: e
                })
            }
        });
    t.default = m,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(108),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: function() {
                return "feed-item feed-issue-mp " + this._getSeverityClass()
            },
            getType: function() {
                var e = this.model.attributes.problem;
                return I18n.t("problems.types." + e.attributes.subType + ".title")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(108),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: function() {
                return "feed-item feed-issue-ur " + this._getSeverityClass()
            },
            getType: function() {
                return this.model.attributes.updateRequest.getTypeText()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(108),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            className: function() {
                return "feed-item feed-issue-pu " + this._getSeverityClass()
            },
            getType: function() {
                var e = this.model.attributes.updateRequest,
                    t = e.get("subject"),
                    i = e.get("updateType");
                return "flag" === i ? I18n.t("venues.update_requests.panel.flag_title." + t) : I18n.t("venues.update_requests.panel.title." + i)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(850),
        r = n(s),
        o = i(851),
        a = n(o),
        l = Marionette.CollectionView.extend({
            className: "feed-group list-unstyled",
            tagName: "ul",
            childView: r.default,
            childViewEventPrefix: "first-time",
            initialize: function() {
                this.cyclesTimeout = new a.default({
                    numberOfCycles: 3,
                    cyclesIntervalTime: 3e4,
                    itemIntervalTime: 5e3,
                    startDelay: 3e3,
                    handler: this._cycleAnimationLoop.bind(this)
                })
            },
            _cycleAnimationLoop: function() {
                if (this.cyclesTimeout) {
                    var e = this.cyclesTimeout.getCurrentIndex(),
                        t = this.children.toArray();
                    if (e < this.children.length) {
                        t[this.cyclesTimeout.getCurrentIndex()].$el.addClass("animate").siblings().removeClass("animate")
                    } else
                        this.cyclesTimeout.stopCycle()
                }
            },
            onRender: function() {
                this.cyclesTimeout.start()
            },
            onDestroy: function() {
                this.cyclesTimeout.stop()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(59),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(154),
        v = n(m),
        y = i(11),
        b = n(y),
        E = i(239),
        w = n(E),
        S = I18n.t("internal.editing_local_forum_link"),
        M = I18n.t("internal.wiki_link"),
        C = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "className",
                    value: function() {
                        return (0,
                            p.default)(t.prototype.__proto__ || (0,
                            r.default)(t.prototype), "className", this).call(this) + " feed-first-time type-" + this.model.attributes.type.toLowerCase()
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .inner": "_onClick",
                            "click .delete": "_onClickDelete"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.overlayRenderer = null
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return _.extend(v.default.prototype.serializeData.apply(this, arguments), {
                            title: this._getValueOrTemplate("title"),
                            shortMessage: this._getValueOrTemplate("shortMessage"),
                            linkUrl: this._getValueOrTemplate("linkUrl")
                        })
                    }
                }, {
                    key: "_onClick",
                    value: function() {
                        var e = this.model.TYPE,
                            t = this.model.attributes.type;
                        switch (W.Report.feedAction("show", t),
                            t) {
                            case e.DISCOVER_COMMUNITY_FORUM:
                                this._openUrl(S);
                                break;
                            case e.DISCOVER_LOCAL_WIKI:
                                this._openUrl(M);
                                break;
                            case e.FIRST_TIME_VIDEOS:
                                this._openVideoTutorial();
                                break;
                            case e.CHECK_YOUR_NEIGHBORHOOD:
                                this._goToNeighborhood()
                        }
                    }
                }, {
                    key: "_openVideoTutorial",
                    value: function() {
                        $("#tutorial-dialog").modal("show")
                    }
                }, {
                    key: "_goToNeighborhood",
                    value: function() {
                        var e = this.model.attributes.parameters.address;
                        if (e) {
                            var t = Number(e.split(",")[0]),
                                i = Number(e.split(",")[1]),
                                n = new OL.LonLat(t, i);
                            b.default.project(n),
                                this._animateSpotLight(n)
                        }
                    }
                }, {
                    key: "_animateSpotLight",
                    value: function(e) {
                        this.overlayRenderer && this.overlayRenderer.destroy(),
                            this.overlayRenderer = new w.default(W.map),
                            this.overlayRenderer.drawOverlay(),
                            this.overlayRenderer.animateHome(e)
                    }
                }, {
                    key: "_openUrl",
                    value: function(e) {
                        e && window.open(e, "_blank")
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        this.overlayRenderer && this.overlayRenderer.destroy()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Feed/templates/notification_item"
                    }
                }]),
                t
        }(v.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(21),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = function() {
            function e(t) {
                (0,
                    a.default)(this, e),
                this.startDelay = 0,
                    this.numberOfCycles = 3,
                    this.cyclesIntervalTime = 3e4,
                    this.itemIntervalTime = 5e3,
                    this.handler = null,
                    (0,
                        r.default)(this, t),
                    this._currentCycle = 0,
                    this._nextItemTimeout = 0,
                    this._cyclesTimeout = 0,
                    this._isRuning = !1,
                    this._currentIndex = -1
            }
            return (0,
                    u.default)(e, [{
                    key: "start",
                    value: function() {
                        this.stop(),
                            this._isRuning = !0,
                            this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.startDelay)
                    }
                }, {
                    key: "stop",
                    value: function() {
                        this._isRuning && (this._cyclesTimeout && window.clearTimeout(this._cyclesTimeout),
                            this.stopCycle(),
                            this._cyclesTimeout = 0,
                            this._isRuning = !1)
                    }
                }, {
                    key: "_animationLoop",
                    value: function() {
                        this._currentCycle < this.numberOfCycles ? (this._currentCycle++,
                            this._startCycle(),
                            this._cyclesTimeout = window.setTimeout(this._animationLoop.bind(this), this.cyclesIntervalTime)) : this.stop()
                    }
                }, {
                    key: "_startCycle",
                    value: function() {
                        this.stopCycle(),
                            this._currentIndex = -1,
                            this._cycleAnimationLoop()
                    }
                }, {
                    key: "stopCycle",
                    value: function() {
                        this._nextItemTimeout && (window.clearTimeout(this._nextItemTimeout),
                            this._nextItemTimeout = 0)
                    }
                }, {
                    key: "_cycleAnimationLoop",
                    value: function() {
                        this._currentIndex++,
                            "function" == typeof this.handler && this.handler(),
                            this._nextItemTimeout = window.setTimeout(this._cycleAnimationLoop.bind(this), this.itemIntervalTime)
                    }
                }, {
                    key: "setHandler",
                    value: function(e) {
                        "function" == typeof e && (this.handler = e)
                    }
                }, {
                    key: "getCurrentIndex",
                    value: function() {
                        return this._currentIndex
                    }
                }]),
                e
        }();
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(853),
        r = n(s),
        o = i(896),
        a = n(o),
        l = i(904),
        u = n(l),
        d = Marionette.View.extend({
            template: "templates/sidebar/sidebar",
            className: "sidebar-layout",
            regions: {
                editRegion: "#edit-panel .contents",
                userRegion: "#user-info"
            },
            ui: {
                overlay: ".overlay"
            },
            bindings: {
                "#edit-panel": {
                    observe: "featureSelected",
                    visible: !0,
                    visibleFn: function(e, t, i) {
                        if (t && this._storeScroll(),
                            e.toggle(t),
                            t)
                            return this.$el.scrollTop(0)
                    }
                },
                "#user-info": {
                    observe: "featureSelected",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    },
                    visibleFn: function(e, t, i) {
                        if (e.toggle(t),
                            t)
                            return this._restoreScroll()
                    }
                }
            },
            scrollTop: null,
            initialize: function(e) {
                return this.dataModel = e.dataModel,
                    this.selectionManager = e.selectionManager,
                    this.editingMediator = e.editingMediator,
                    this.featureEditorFactory = new r.default({
                        selectionManager: this.selectionManager,
                        dataModel: this.dataModel
                    }),
                    this.scrollTop = 0,
                    this.listenTo(this.model, "selectionChanged", this._onSelectionChanged),
                    this.editingMediator.on("change:editingEnabled", this._toggleEditing, this)
            },
            onDestroy: function() {
                return this.editingMediator.off("change:editingEnabled", this._toggleEditing, this)
            },
            onRender: function() {
                this._renderUserInfo(),
                    this._toggleEditing(),
                    this.stickit()
            },
            _onSelectionChanged: function(e) {
                return e.selection.length ? (this.editView = this.featureEditorFactory.create(),
                    this.showChildView("editRegion", this.editView),
                    this._toggleEditing()) : this.getRegion("editRegion").empty()
            },
            _toggleEditing: function() {
                var e = this.editingMediator.get("editingEnabled");
                this.ui.overlay.toggle(!e),
                    this.getChildView("editRegion") && this.getChildView("editRegion").toggleEnabled(e)
            },
            _renderUserInfo: function() {
                return this.options.sandbox ? this.showChildView("userRegion", new u.default) : this.options.loggedIn ? this.showChildView("userRegion", new a.default({
                    model: this.model,
                    feedControl: this.options.feedControl
                })) : this.getRegion("userRegion").empty()
            },
            _storeScroll: function() {
                this.scrollTop = this.$el.scrollTop()
            },
            _restoreScroll: function() {
                return this.$el.scrollTop(this.scrollTop)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r, o = i(17),
        a = n(o),
        l = i(854),
        u = n(l),
        d = i(861),
        c = n(d),
        h = i(862),
        p = n(h),
        f = i(879),
        g = n(f),
        m = i(4),
        v = n(m),
        y = i(880),
        b = n(y),
        E = i(26),
        w = n(E),
        S = Marionette.Object.extend({
            TYPE_TO_EDITOR_CLASS: (s = {},
                (0,
                    a.default)(s, v.default.SEGMENT, b.default),
                (0,
                    a.default)(s, v.default.VENUE, p.default),
                (0,
                    a.default)(s, v.default.NODE, g.default),
                (0,
                    a.default)(s, v.default.SPEED_CAMERA, c.default),
                (0,
                    a.default)(s, v.default.BIG_JUNCTION, u.default),
                s),
            TYPE_TO_OPTIONS: (r = {},
                (0,
                    a.default)(r, v.default.SEGMENT, function() {
                    return {
                        selectionManager: this.options.selectionManager,
                        reversedSegments: this.options.selectionManager.getReversedSegments()
                    }
                }),
                (0,
                    a.default)(r, v.default.BIG_JUNCTION, function() {
                    return {
                        selectionManager: this.options.selectionManager
                    }
                }),
                r),
            initialize: function() {
                var e = this;
                return this.typeToEditorClass = _.clone(this.TYPE_TO_EDITOR_CLASS),
                    w.default.getFeatureEditors().map(function(t) {
                        var i = t.featureType,
                            n = t.featureEditorClass;
                        return e.typeToEditorClass[i] = n
                    })
            },
            create: function() {
                var e = this.options.selectionManager,
                    t = this.options.dataModel,
                    i = _(e.selectedItems).pluck("model"),
                    n = i.first().type,
                    s = this.typeToEditorClass[n],
                    r = {};
                return this.TYPE_TO_OPTIONS[n] && (r = this.TYPE_TO_OPTIONS[n].call(this)),
                    new s(_.defaults({
                        dataModel: t,
                        selection: i,
                        map: W.map
                    }, r))
            }
        });
    t.default = S,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(52),
        r = n(s),
        o = i(68),
        a = n(o),
        l = i(855),
        u = n(l),
        d = i(244),
        c = n(d),
        h = i(156),
        p = n(h),
        f = r.default.extend({
            events: _.extend({}, r.default.prototype.events, {
                "click .select-short-segments": "_selectShortSegments"
            }),
            template: "templates/big-junction-edit",
            ui: {
                pathListContainer: ".path-list-container"
            },
            regions: {
                addressEdit: ".address-edit"
            },
            previousGeometry: null,
            pathEditController: null,
            initialize: function(e) {
                r.default.prototype.initialize.apply(this, arguments),
                    this.selectionManager = this.options.selectionManager,
                    this.previousGeometry = this.model.geometry
            },
            serializeData: function() {
                return {
                    bigJunction: this.model,
                    dataModel: this.dataModel
                }
            },
            _isStaffLocked: function() {
                return this.model.getLockRank() === a.default.prototype.StaffRank
            },
            _selectShortSegments: function(e) {
                var t = this.dataModel.segments.getByIds(this.model.attributes.segIDs);
                return this.selectionManager.select(t)
            },
            onRender: function() {
                this.showChildView("addressEdit", new p.default({
                        addressModel: this.model.getAddress(),
                        dataModel: this.dataModel,
                        feature: this.model,
                        editable: this.model.arePropertiesEditable(),
                        editStreet: !1
                    })),
                    this.pathEditController && this.pathEditController.destroy(),
                    this.pathEditController = new u.default({
                        junction: this.model,
                        listContainer: this.ui.pathListContainer,
                        enableEditing: this.dataModel.loginManager.canEditBigJunctions() && this.model.arePropertiesEditable(),
                        map: W.map
                    }),
                    this.listenTo(this.pathEditController, "pathNavigableChanged", this._onPathNavigableChanged),
                    r.default.prototype.onRender.apply(this, arguments)
            },
            _onPathNavigableChanged: function(e, t) {
                var i = new c.default(this.model, e, t);
                this.changing = !0,
                    this.dataModel.actionManager.add(i),
                    this.changing = !1
            },
            onDestroy: function() {
                this.pathEditController && this.pathEditController.destroy()
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(856),
        r = n(s),
        o = i(858),
        a = n(o),
        l = Marionette.Object.extend({
            initialize: function() {
                var e = this;
                this.junction = this.options.junction;
                for (var t = this.junction.getEntryPoints(), i = this.junction.getExitPoints(), n = {}, s = t.concat(i), o = 0; o < s.length; o++) {
                    var l = s[o];
                    n[l.getID()] = String.fromCharCode("A".charCodeAt() + o)
                }
                for (var u = 0; u < t.length; u++) {
                    var d = t[u],
                        c = _.sortBy(d.get("paths"), function(e) {
                            return n[e.getExitGraphNode().getID()]
                        });
                    d.set({
                        paths: c
                    })
                }
                return this.listView = new r.default({
                        el: this.options.listContainer,
                        accessPointNames: n,
                        enableEditing: this.options.enableEditing,
                        collection: new Backbone.Collection(t)
                    }),
                    this.mapView = new a.default({
                        map: this.options.map,
                        accessPointNames: n,
                        entryPoints: t,
                        exitPoints: i,
                        junction: this.junction
                    }),
                    this.listenTo(this.listView, "pathHovered", function(t) {
                        return e.mapView.drawPaths([t])
                    }),
                    this.listenTo(this.listView, "pathUnhovered", function(t) {
                        return e.mapView.removeAllPaths()
                    }),
                    this.listenTo(this.listView, "pathNavigableChanged", function(t, i) {
                        return e.trigger("pathNavigableChanged", t, i)
                    }),
                    this.listView.render()
            },
            onDestroy: function() {
                return this.mapView.destroy(),
                    this.listView.destroy()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(857),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CollectionView.extend({
            template: "Waze/Modules/BigJunction/templates/path_list",
            childView: s.default,
            childViewOptions: function() {
                return {
                    accessPointNames: this.options.accessPointNames,
                    enableEditing: this.options.enableEditing
                }
            },
            events: {
                "click .add": "_onAddClicked"
            },
            childViewEvents: function() {
                return {
                    pathHovered: this._onPathHovered,
                    pathUnhovered: this._onPathUnhovered,
                    pathNavigableChanged: this._onPathNavigableChanged
                }
            },
            _onPathHovered: function(e) {
                return this.trigger("pathHovered", e)
            },
            _onPathUnhovered: function(e) {
                return this.trigger("pathUnhovered", e)
            },
            _onPathNavigableChanged: function(e, t) {
                return this.trigger("pathNavigableChanged", e, t)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/BigJunction/templates/path_item",
        events: {
            "mouseenter .path-item": "_onPathHovered",
            "mouseleave .path-item": "_onPathUnhovered",
            "change .navigable-checkbox": "_onNavigableChanged"
        },
        serializeData: function() {
            return {
                paths: this.model.get("paths"),
                accessPointNames: this.options.accessPointNames,
                enableEditing: this.options.enableEditing
            }
        },
        _onPathHovered: function(e) {
            return this.trigger("pathHovered", this._getPathFromElement(e))
        },
        _onPathUnhovered: function(e) {
            return this.trigger("pathUnhovered", this._getPathFromElement(e))
        },
        _onNavigableChanged: function(e) {
            var t = $(e.target).is(":checked");
            return this.trigger("pathNavigableChanged", this._getPathFromElement(e), t)
        },
        _getPathFromElement: function(e) {
            var t = $(e.currentTarget).data("path-index");
            return this.model.get("paths")[t]
        },
        templateContext: {
            getPathName: function(e) {
                return this.getFromName(e) + " to " + this.getToName(e)
            },
            getFromName: function(e) {
                return this.accessPointNames[e.getEntryGraphNode().getID()]
            },
            getToName: function(e) {
                return this.accessPointNames[e.getExitGraphNode().getID()]
            },
            getCheckboxID: function(e, t) {
                return "navigable-checkbox-" + e.cid
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(859),
        u = n(l),
        d = i(149),
        c = n(d),
        h = Marionette.Object.extend({
            _pathVectors: null,
            _idToMarker: null,
            initialize: function() {
                return this._idToMarker = {},
                    this.map = this.options.map,
                    this.pathLayer = this.map.bigJunctionPathLayer,
                    this.driveRenderer = new c.default(this.pathLayer),
                    this.accessPointLayer = new OL.Layer.Markers("accessPointLayer"),
                    this.map.addLayer(this.accessPointLayer),
                    this._drawAccessPoints(),
                    this._drawShortSegments()
            },
            drawPaths: function(e) {
                var t = this;
                return this.removeAllPaths(),
                    this._pathVectors = e.map(function(e) {
                        var i = e.getStenciledGeometry(t.options.junction.geometry);
                        return t.driveRenderer.drawSuggestedRoute(i)
                    }),
                    e.map(function(e) {
                        return t._highlightMarkers(e)
                    })
            },
            removeAllPaths: function() {
                var e = !0,
                    t = !1,
                    i = void 0;
                try {
                    for (var n, s = (0,
                            a.default)((0,
                            r.default)(this._idToMarker)); !(e = (n = s.next()).done); e = !0) {
                        var o = n.value;
                        this._idToMarker[o].setSelected(!1)
                    }
                } catch (e) {
                    t = !0,
                        i = e
                } finally {
                    try {
                        !e && s.return && s.return()
                    } finally {
                        if (t)
                            throw i
                    }
                }
                if (null !== this._pathVectors) {
                    for (var l = 0; l < this._pathVectors.length; l++) {
                        var u = this._pathVectors[l];
                        this.pathLayer.removeFeatures(u)
                    }
                    this._pathVectors = null
                }
            },
            _drawAccessPoints: function() {
                var e = this,
                    t = {};
                return function() {
                    for (var i = [], n = e.options.exitPoints.concat(e.options.entryPoints), s = 0; s < n.length; s++) {
                        var r = n[s],
                            o = r.getID(),
                            a = e.options.accessPointNames[o],
                            l = r.get("graphNode").segment.geometry,
                            d = e.options.junction.geometry.distanceTo(l, {
                                details: !0
                            }),
                            c = d.x0,
                            h = d.y0,
                            p = new OL.LonLat(c, h),
                            f = new u.default(r, p, a),
                            g = p.toString();
                        t[g] && f.addOffset(),
                            t[g] = !0,
                            f.events.on({
                                hover: e._onAccessPointHover,
                                unhover: e._onAccessPointUnhover,
                                scope: e
                            }),
                            e._idToMarker[o] = f,
                            i.push(e.accessPointLayer.addMarker(f))
                    }
                    return i
                }()
            },
            _highlightMarkers: function(e) {
                return [this._idToMarker[e.getEntryPoint().getID()], this._idToMarker[e.getExitPoint().getID()]].forEach(function(e) {
                    e && (e.setSelected(!0),
                        e.icon.bringToFront())
                })
            },
            _drawShortSegments: function() {
                var e = this;
                return this.options.junction.getShortSegments().map(function(t) {
                    return e.driveRenderer.drawShortSegment(t.geometry.clone())
                })
            },
            _onAccessPointHover: function(e) {
                return this.drawPaths(e.accessPoint.get("paths"))
            },
            _onAccessPointUnhover: function() {
                return this.removeAllPaths()
            },
            onDestroy: function() {
                return this._idToMarker = null,
                    this.pathLayer.removeAllFeatures(),
                    this.map.removeLayer(this.accessPointLayer),
                    this.accessPointLayer.destroy()
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(19),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(OL.Marker, {
            EVENT_SUFFIX: ".access-point-view",
            initialize: function(e, t, i) {
                var n = this;
                this.accessPoint = e,
                    this.icon = new s.default("path-access-point"),
                    OL.Marker.prototype.initialize.call(this, t, this.icon),
                    this.icon.$div.text(i),
                    this.icon.$div.addClass(this.accessPoint.get("type")),
                    this.icon.$div.on("mouseenter" + this.EVENT_SUFFIX, function() {
                        return n.events.triggerEvent("hover", {
                            accessPoint: n.accessPoint
                        })
                    }),
                    this.icon.$div.on("mouseout" + this.EVENT_SUFFIX, function() {
                        return n.events.triggerEvent("unhover", {
                            accessPoint: n.accessPoint
                        })
                    })
            },
            erase: function() {
                return this.icon.$div.off(this.EVENT_SUFFIX)
            },
            setSelected: function(e) {
                return e ? this.icon.$div.addClass("selected") : this.icon.$div.removeClass("selected")
            },
            addOffset: function() {
                return this.icon.$div.addClass("offset")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        MAX_LENGTH: {
            STREET_NAME: 100,
            CITY_NAME: 100,
            HOUSE_NUMBER: 20
        },
        defaults: {
            houseNumber: "",
            streetName: "",
            emptyStreet: !1,
            cityName: "",
            emptyCity: !1,
            cityID: null,
            stateID: null,
            countryID: null,
            addressFormShown: !1,
            editable: !0,
            fullAddress: ""
        },
        populateFromAddressModel: function(e, t) {
            var i = e.attributes;
            return this.set({
                    cityID: i.city.getID(),
                    cityName: i.city.attributes.name,
                    emptyCity: i.city.isEmpty(),
                    stateID: i.state.getID(),
                    countryID: i.country.getID(),
                    houseNumber: i.houseNumber
                }),
                null != i.street && this.set({
                    streetName: i.street.name,
                    emptyStreet: i.street.isEmpty
                }),
                this
        }
    });
    n.fromAddress = function(e, t) {
            if (e.get("isEmpty")) {
                var i = t.countries.top,
                    s = t.states.top;
                return new n({
                    countryID: i ? i.getID() : void 0,
                    stateID: s ? s.getID() : void 0
                })
            }
            var r = new n;
            return r.populateFromAddressModel(e, t),
                r
        },
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(52),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = s.default.extend({
            template: "templates/camera-edit"
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(52),
        r = n(s),
        o = i(863),
        a = n(o),
        l = i(864),
        u = n(l),
        d = i(15),
        c = n(d),
        h = i(101),
        p = n(h),
        f = i(77),
        g = n(f),
        m = i(235),
        v = n(m),
        y = i(246),
        b = i(867),
        E = n(b),
        w = i(869),
        S = n(w),
        M = i(247),
        C = n(M),
        T = i(156),
        A = n(T),
        I = i(248),
        O = n(I),
        L = i(872),
        D = n(L),
        k = i(249),
        R = n(k),
        x = i(95),
        P = r.default.extend({
            behaviors: {
                restoreLastTab: {
                    behaviorClass: C.default
                }
            },
            ui: {
                categoriesTooltip: ".categories-tooltip",
                brandInput: ".form-control[name=brand]"
            },
            events: _.extend({}, r.default.prototype.events, {
                "click .image-delete-button": "_onDeleteImageClicked",
                "click .image-preview-container": "_onImagePreviewClicked",
                "click .pending-changes-alert": "_onPendingChangesAlertClicked",
                "click .toggle-residential": "_onResidentialToggled",
                "click .convert-to-polygon": "_onConvertToPolygonClicked"
            }),
            template: "templates/venue/venue-edit",
            regions: {
                categoriesRegion: ".categories",
                openingHoursRegion: ".opening-hours",
                aliasesRegion: ".aliases-view",
                externalProvidersRegion: ".external-providers-view",
                moreInfoRegion: ".more-info",
                addressEdit: ".address-edit",
                historyRegion: ".element-history-region"
            },
            previousGeometry: null,
            initialize: function(e) {
                r.default.prototype.initialize.apply(this, arguments),
                    this.previousGeometry = null,
                    this.model.isPoint() || (this.previousGeometry = this.model.geometry)
            },
            serializeData: function() {
                var e = this._getApprovedImages();
                return {
                    landmark: this.model,
                    dataModel: this.dataModel,
                    canEditType: this._canEditType(),
                    showStatesSelection: this.dataModel.hasStates(),
                    showExternalProviderView: this._isExternalProviderEditingAllowed(),
                    lockRankRange: this._getLockRankRange(),
                    imageCount: e.length,
                    hasImages: e.length > 0,
                    showUnapprovedAlert: !this.model.attributes.approved,
                    showPendingChangesAlert: this.model.hasUpdateRequests(),
                    showRequiresModerationAlert: this._requiresModeration(),
                    showAdLockedAlert: this.model.attributes.adLocked,
                    brands: this._getBrands(),
                    images: e
                }
            },
            _getServiceTypes: function() {
                return this.model.isParkingLot() ? g.default.prototype.SERVICE_TYPES.PARKING_LOT : g.default.prototype.SERVICE_TYPES.GENERAL
            },
            _getBrands: function() {
                var e = void 0;
                return this.model.isGasStation() && (e = this.dataModel.venues.categoryBrands.GAS_STATION),
                    this.model.isParkingLot() && (e = this.dataModel.venues.categoryBrands.PARKING_LOT),
                    Array.isArray(e) ? e.sort(function(e, t) {
                        return e.localeCompare(t)
                    }) : []
            },
            _canEditType: function() {
                return !this.model.isParkingLot() || this.model.isPoint()
            },
            _getApprovedImages: function() {
                return _.filter(this.model.attributes.images, function(e) {
                    return e.get("approved")
                })
            },
            _getLockRankRange: function() {
                var e = this.dataModel.loginManager.getUserRank(),
                    t = this.model.attributes.lockRank,
                    i = Math.max(e, t);
                return _.range(0, i + 1)
            },
            _requiresModeration: function() {
                return this.dataModel.loginManager.getUserRank() < this.model.attributes.lockRank
            },
            _isExternalProviderEditingAllowed: function() {
                return this.model.areExternalProvidersEditable()
            },
            _onPendingChangesAlertClicked: function() {
                return W.commands.execute("place_updates:list", this.model)
            },
            _onConvertToPolygonClicked: function(e) {
                return $(e.target).attr("disabled", !0),
                    this.isPointChanged(!1)
            },
            isPointChanged: function(e) {
                var t = this.model,
                    i = void 0;
                i = "true" === e ? t.getPointGeometry() : this.previousGeometry ? this.previousGeometry.clone() : t.getPolygonGeometry();
                var n = new p.default(t, this.dataModel.venues, t.geometry, i);
                this.changing = !0,
                    this.dataModel.actionManager.add(n),
                    this.changing = !1
            },
            categoriesChanged: function(e) {
                _.isArray(e) || (e = _(e.split(",")).compact()),
                    e = this._handleParkingLotCategoryLogic(e),
                    this.changed({
                        categories: e
                    }, !0),
                    this.suggestedCategoriesView && this.suggestedCategoriesView.categoriesChanged(e)
            },
            _handleParkingLotCategoryLogic: function(e) {
                return this.model.isParkingLot() ? e.length > 1 && (e = e.filter(function(e) {
                        return e !== x.PARKING_LOT
                    })) : _.contains(e, x.PARKING_LOT) && (e = [x.PARKING_LOT]),
                    e
            },
            onFeaturesChanged: function(e) {
                r.default.prototype.onFeaturesChanged.apply(this, arguments),
                    this.hasEditedModelChanged(e) && !this.model.isPoint() && (this.previousGeometry = this.model.geometry)
            },
            _onCategoryClicked: function(e) {
                var t = this.model.attributes.categories,
                    i = _.without(t.clone(), e.category);
                if (e.isSuggested)
                    i.pop(),
                    i.push(e.category);
                else {
                    if (t.length > 0 && t[0] === e.category)
                        return;
                    i.unshift(e.category)
                }
                return this.categoriesChanged(i)
            },
            onOpeningHoursChanged: function() {
                this.changing = !0;
                var e = {
                    openingHours: this.openingHoursLayout.collection.toJSON()
                };
                this.dataModel.actionManager.add(new c.default(this.model, e)),
                    this.changing = !1
            },
            _onDeleteImageClicked: function(e) {
                var t = $(e.target).parent(".image-preview-container").data("id"),
                    i = _(this.model.attributes.images).reject(function(e) {
                        return e.id === t
                    }),
                    n = {
                        images: i
                    };
                return this.dataModel.actionManager.add(new c.default(this.model, n)), !1
            },
            _onImagePreviewClicked: function(e) {
                var t = $(e.currentTarget).data("id"),
                    i = new v.default({
                        venue: this.model,
                        imageId: t
                    });
                W.app.layout.getRegion("dialogRegion").show(i),
                    e.preventDefault && e.preventDefault()
            },
            _onAliasesChanged: function() {
                var e = this.aliasesLayout.collection.removeEmpty().map(function(e) {
                        return e.get("name")
                    }),
                    t = {
                        aliases: e
                    };
                return this.dataModel.actionManager.add(new c.default(this.model, t))
            },
            _onResidentialToggled: function(e) {
                e.preventDefault();
                var t = this.model.attributes.residential;
                return this.dataModel.actionManager.add(new c.default(this.model, {
                    residential: !t
                }))
            },
            _initAliasesView: function() {
                var e = this.model.attributes.aliases.map(function(e) {
                    return new y.Item({
                        name: e
                    })
                });
                return this.aliasesLayout = new E.default({
                        collection: new y.Collection(e),
                        editable: this.model.arePropertiesEditable()
                    }),
                    this.listenTo(this.aliasesLayout.collection, "remove change", this._onAliasesChanged),
                    this.showChildView("aliasesRegion", this.aliasesLayout)
            },
            _initExternalProvidersView: function() {
                var e = this,
                    t = new S.default({
                        venue: this.model,
                        editable: !0
                    });
                return this.listenTo(t, "change", function(t) {
                        var i = {
                            externalProviderIDs: t
                        };
                        return e.preventRender(function() {
                            return e.dataModel.actionManager.add(new c.default(e.model, i))
                        })
                    }),
                    this.showChildView("externalProvidersRegion", t)
            },
            _initOpeningHoursView: function() {
                return this.openingHoursLayout = new u.default({
                        collection: this.model.getOpeningHours(),
                        editable: this.model.arePropertiesEditable()
                    }),
                    this.listenTo(this.openingHoursLayout.collection, "remove add change", this.onOpeningHoursChanged),
                    this.showChildView("openingHoursRegion", this.openingHoursLayout)
            },
            _initCategoriesView: function() {
                return this.suggestedCategoriesView = new a.default({
                        venue: this.model,
                        editable: this.model.arePropertiesEditable()
                    }),
                    this.listenTo(this.suggestedCategoriesView, "categoryClicked", this._onCategoryClicked),
                    this.showChildView("categoriesRegion", this.suggestedCategoriesView)
            },
            _initMoreInfoTab: function() {
                var e = this.model.isParkingLot() ? D.default : O.default;
                return this.moreInfoView = new e({
                        model: this.model,
                        serviceTypes: this._getServiceTypes(),
                        serviceSet: this.model.getServiceSet()
                    }),
                    this.listenTo(this.moreInfoView, "change", this._onMoreInfoChanged),
                    this.showChildView("moreInfoRegion", this.moreInfoView)
            },
            _onMoreInfoChanged: function(e) {
                return this.changed(e.newAttributes)
            },
            onRender: function() {
                this.ui.categoriesTooltip.tooltip({
                        title: I18n.t(this.model.isParkingLot() ? "edit.landmark.tooltip.parking_lot" : "edit.landmark.tooltip.categories")
                    }),
                    this.model.isResidential() || (this._initCategoriesView(),
                        this._initMoreInfoTab(),
                        this._initOpeningHoursView(),
                        this._initAliasesView(),
                        this._isExternalProviderEditingAllowed() && this._initExternalProvidersView()),
                    this._renderAddressEdit(),
                    this._renderElementHistory(),
                    (this.model.isParkingLot() || this.model.isGasStation()) && this._initBrandAutoComplete(),
                    r.default.prototype.onRender.apply(this, arguments)
            },
            _initBrandAutoComplete: function() {
                this.ui.brandInput.select2({
                    allowClear: !0
                })
            },
            _renderAddressEdit: function() {
                this.showChildView("addressEdit", new A.default({
                    addressModel: this.model.getAddress(),
                    dataModel: this.dataModel,
                    feature: this.model,
                    editable: this.model.arePropertiesEditable(),
                    editHouseNumber: !0
                }))
            },
            _renderElementHistory: function() {
                this.showChildView("historyRegion", new R.default({
                    map: this.options.map,
                    model: this.options.selection[0]
                }))
            },
            onBeforeDestroy: function() {
                if (this.model.isParkingLot() || this.model.isGasStation())
                    return this.ui.brandInput.select2("destroy")
            }
        });
    t.default = P,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(95),
        s = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(n),
        r = i(24),
        o = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(r),
        a = Marionette.View.extend({
            template: "templates/venue/venue-categories",
            events: {
                "click .category": "onSuggestCategoryClicked"
            },
            ui: {
                select: "[name=categories]",
                suggestedCategories: ".suggested-categories"
            },
            initialize: function(e) {
                this.venue = e.venue,
                    this.editable = e.editable,
                    this.mainCategories = s.mainCategories,
                    this.categoryMap = this.venue.getCategorySet()
            },
            serializeData: function() {
                return {
                    view: this,
                    categoryMap: this.categoryMap
                }
            },
            getSuggestedCategories: function() {
                if (!this.editable)
                    return [];
                var e = this.venue.attributes.categories;
                return e.isEmpty() ? this.mainCategories : 1 === e.length && this.isMainCategory(e.first()) ? W.Config.venues.subcategories[e.first()] : []
            },
            isMainCategory: function(e) {
                return s.mainCategoryMap[e]
            },
            categoriesChanged: function(e, t) {
                return this.categoryMap = this.venue.getCategorySet(),
                    this.setSelectedCategories(),
                    this.ui.suggestedCategories.hide(),
                    this.ui.suggestedCategories.html(o.default.getHTML("templates/venue/suggested-categories", this.serializeData())),
                    this.ui.suggestedCategories.fadeIn("fast")
            },
            onRender: function() {
                var e = this;
                return this.ui.select.select2({
                        width: "100%",
                        formatResult: this.format,
                        formatSelection: function(t) {
                            return o.default.getHTML("templates/venue/category-tag", {
                                category: t.id,
                                hideClose: !e.editable
                            })
                        },
                        data: {
                            results: s.allCategories,
                            text: this.format
                        },
                        multiple: !0,
                        sortResults: function(e, t, i) {
                            return e.sort(function(e, t) {
                                return e.id.localeCompare(t.id)
                            })
                        }
                    }),
                    this._bindCategoryClickEvent(),
                    this.setSelectedCategories()
            },
            _bindCategoryClickEvent: function() {
                this.$el.find(".select2-choices").on("click", ".category", this.onCategoryClicked.bind(this))
            },
            setSelectedCategories: function() {
                return this.ui.select.select2("data", _(this.venue.attributes.categories).map(function(e) {
                    return {
                        id: e
                    }
                }))
            },
            format: function(e) {
                return I18n.t("venues.categories." + e.id)
            },
            onSuggestCategoryClicked: function(e) {
                this._categoryClickHelper(e, !0)
            },
            onCategoryClicked: function(e) {
                this._categoryClickHelper(e, !1)
            },
            _categoryClickHelper: function(e, t) {
                e.preventDefault();
                var i = $(e.target).data("category");
                return this.trigger("categoryClicked", {
                    category: i,
                    isSuggested: t
                })
            }
        });
    t.default = a,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(865),
        r = n(s),
        o = i(866),
        a = n(o),
        l = Marionette.CompositeView.extend({
            template: "templates/opening_hours/layout",
            childView: r.default,
            childViewContainer: ".list",
            events: {
                "click .add": "onAddClicked"
            },
            childViewOptions: function() {
                return {
                    editable: this.options.editable
                }
            },
            onAddClicked: function(e) {
                return e.preventDefault(),
                    this.showAddDialog()
            },
            showAddDialog: function() {
                var e = new a.default({
                    collection: this.collection
                });
                return W.app.layout.getRegion("dialogRegion").show(e)
            },
            serializeData: function() {
                return {
                    isEditable: this.options.editable
                }
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        tagName: "li",
        template: "templates/opening_hours/item",
        events: {
            "click .delete": "onDelete"
        },
        serializeData: function() {
            return {
                model: this.model,
                isEditable: this.options.editable
            }
        },
        onDelete: function() {
            return this.model.collection.remove(this.model)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(132),
        s = i(80),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s),
        o = Marionette.View.extend({
            template: "templates/opening_hours/add",
            ui: {
                form: "form",
                timeSelectors: ".time-selector",
                fromTime: "input[name=fromTime]",
                toTime: "input[name=toTime]",
                dayCheckboxes: "input[name=days]",
                validationErrors: ".validation-errors"
            },
            events: {
                submit: "onSubmit",
                "click .select-all": "selectAllDays",
                "click .select-none": "deselectAllDays",
                "change input[name=allDay]": "onTimeToggled"
            },
            HOUR_FORMAT: "H:mm",
            selectAllDays: function(e) {
                return e.preventDefault(),
                    this.toggleDayCheckboxes(!0)
            },
            deselectAllDays: function(e) {
                return e.preventDefault(),
                    this.toggleDayCheckboxes(!1)
            },
            onTimeToggled: function() {
                return this.toggleTimeSelectors(!this.isAllDaySelected())
            },
            isAllDaySelected: function() {
                return "on" === this.$("input[name=allDay]:checked").val()
            },
            toggleTimeSelectors: function(e) {
                return this.ui.timeSelectors.prop({
                    disabled: !e,
                    required: e
                })
            },
            toggleDayCheckboxes: function(e) {
                return this.ui.dayCheckboxes.prop("checked", e)
            },
            onRender: function() {
                return this.ui.timeSelectors.timepicker(r.default.prototype.timepickerOptions)
            },
            onBeforeDestroy: function() {
                return this.$el.remove(),
                    this.ui.timeSelectors.timepicker("remove")
            },
            serializeData: function() {
                var e = n.OpeningHour.prototype.defaults();
                return {
                    dayCallback: this.isDayCheckedByDefault,
                    defaultFromTime: e.fromHour,
                    defaultToTime: e.toHour
                }
            },
            isDayCheckedByDefault: function(e) {
                return n.OpeningHour.prototype.defaultDays.contains(e)
            },
            onSubmit: function(e) {
                e.preventDefault();
                var t = this.ui.fromTime.val(),
                    i = this.ui.toTime.val(),
                    s = this.readDays();
                if (this._clearValidationErrors(),
                    this._vaildate(t, i, s)) {
                    var r = new n.OpeningHour({
                        days: s,
                        fromHour: t,
                        toHour: i
                    });
                    return this.isAllDaySelected() && r.setAllDay(),
                        this.collection.add(r),
                        this.destroy()
                }
            },
            _vaildate: function(e, t, i) {
                var n = [];
                if (0 === i.length && n.push(I18n.t("edit.landmark.opening_hours.errors.days")),
                    e = Date.parseExact(e, this.HOUR_FORMAT),
                    t = Date.parseExact(t, this.HOUR_FORMAT),
                    this.isAllDaySelected() || (null === e && n.push(I18n.t("edit.landmark.opening_hours.errors.fromHour")),
                        null === t && n.push(I18n.t("edit.landmark.opening_hours.errors.toHour")),
                        Number(e) === Number(t) && n.push(I18n.t("edit.landmark.opening_hours.errors.same"))),
                    n.length > 0) {
                    var s = n.map(function(e) {
                        return $("<div/>").text(e)
                    });
                    this.ui.validationErrors.append(s)
                }
                return 0 === n.length
            },
            _clearValidationErrors: function() {
                return this.ui.validationErrors.empty()
            },
            readDays: function() {
                return this.ui.form.find("input[name=days]:checked").toArray().map(function(e) {
                    return parseInt($(e).val(), 10)
                })
            }
        });
    t.default = o,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(246),
        s = i(868),
        r = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(s),
        o = Marionette.CompositeView.extend({
            MAX_ALIASES: 4,
            template: "templates/venue/aliases-layout",
            childView: r.default,
            childViewContainer: ".list",
            events: {
                "click .add": "_onAddClicked"
            },
            ui: {
                addButton: ".add"
            },
            initialize: function() {
                return this.collection.on("add remove", this._toggleAddButton, this)
            },
            serializeData: function() {
                return {
                    hideAddButton: this._shouldHideAddButton()
                }
            },
            _onAddClicked: function(e) {
                return e.preventDefault && e.preventDefault(),
                    this.collection.add(new n.Item({
                        name: ""
                    }))
            },
            _shouldHideAddButton: function() {
                return this.collection.length >= this.MAX_ALIASES || !this.options.editable
            },
            _toggleAddButton: function() {
                return this.ui.addButton.toggleClass("hidden", this._shouldHideAddButton())
            }
        });
    t.default = o,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/venue/alias",
        tagName: "li",
        ui: {
            name: ".alias-name"
        },
        events: {
            "click .delete": "_onDeleteClicked",
            "change .alias-name": "_onNameChanged"
        },
        _onNameChanged: function() {
            return this.model.set("name", this.ui.name.val())
        },
        _onDeleteClicked: function() {
            return this.model.collection.remove(this.model)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(870),
        r = n(s),
        o = i(871),
        a = n(o),
        l = i(188),
        u = n(l),
        d = Marionette.View.extend({
            template: "templates/venue/external-provider/list",
            regions: {
                list: ".list"
            },
            events: {
                "click .add": "_onAddClicked"
            },
            bindings: {
                ".add": {
                    observe: "showAddButton",
                    visible: !0
                }
            },
            initialize: function() {
                this.venue = this.options.venue,
                    this.collection = new Backbone.Collection(this.venue.attributes.externalProviderIDs),
                    this.viewModel = new a.default(null, {
                        collection: this.collection
                    }),
                    this.listenTo(this.collection, "remove change:uuid", this._onCollectionChanged)
            },
            _onCollectionChanged: function() {
                var e = this.collection.models.filter(function(e) {
                    return e.get("uuid").length
                });
                return this.trigger("change", e)
            },
            onRender: function() {
                return this.showChildView("list", new Marionette.CollectionView({
                        childView: r.default,
                        collection: this.collection,
                        childViewOptions: {
                            venueCentroid: this.venue.geometry.getCentroid()
                        }
                    })),
                    this.stickit(this.viewModel)
            },
            _onAddClicked: function(e) {
                return e.preventDefault && e.preventDefault(),
                    this.collection.add(new u.default({
                        uuid: ""
                    }))
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(11),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            AUTO_COMPLETE: {
                MIN_INPUT_LENGHT: 3,
                FETCH_DELAY_MS: 250
            },
            PLACES_API_SEARCH_RADIUS: 5,
            PLACES_API_TYPES: "establishment",
            template: "templates/venue/external-provider/item",
            tagName: "li",
            className: "external-provider-item",
            events: {
                "click .delete": "_onDeleteClicked",
                "change .uuid": "_onUuidChanged"
            },
            ui: {
                uuid: ".uuid"
            },
            bindings: {
                ".url": {
                    observe: "url",
                    update: function(e, t) {
                        e.attr("href", t)
                    }
                }
            },
            _onDeleteClicked: function() {
                this.model.collection.remove(this.model)
            },
            onRender: function() {
                this.stickit(),
                    this._initAutoComplete()
            },
            _onUuidChanged: function(e) {
                this.model.set({
                        uuid: this.ui.uuid.val(),
                        name: null,
                        url: null
                    }),
                    null !== this.model.get("uuid") && this.model.getDetails(),
                    e.stopPropagation()
            },
            _initAutoComplete: function() {
                var e = this,
                    t = s.default.unproject(this.options.venueCentroid.clone()),
                    i = t.y + "," + t.x;
                this.ui.uuid.select2({
                    minimumInputLength: this.AUTO_COMPLETE.MIN_INPUT_LENGHT,
                    initSelection: this._getInitialSelection.bind(this),
                    ajax: {
                        url: W.Config.places_api.url.autocomplete,
                        data: function(t, n) {
                            return {
                                input: t,
                                key: W.Config.places_api.key,
                                location: i,
                                radius: e.PLACES_API_SEARCH_RADIUS,
                                types: e.PLACES_API_TYPES
                            }
                        },
                        dataType: "json",
                        quietMillis: this.AUTO_COMPLETE.FETCH_DELAY_MS,
                        results: this._parseAutoCompleteResults
                    }
                })
            },
            _parseAutoCompleteResults: function(e) {
                return {
                    results: e.predictions.map(function(e) {
                        return {
                            id: e.place_id,
                            text: e.description
                        }
                    })
                }
            },
            _getInitialSelection: function(e, t) {
                var i = this;
                return this.model.getDetails().then(function(e) {
                    return t({
                        id: i.model.get("uuid"),
                        text: e.name
                    })
                })
            },
            onBeforeDestroy: function() {
                this.ui.uuid.select2("close")
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        MAX_ITEMS: 4,
        defaults: {
            showAddButton: !0
        },
        initialize: function(e, t) {
            this.collection = t.collection,
                this.listenTo(this.collection, "add remove", this._onCollectionChanged),
                this.set({
                    showAddButton: this._shouldShowAddButton()
                })
        },
        _onCollectionChanged: function() {
            return this.set({
                showAddButton: this._shouldShowAddButton()
            })
        },
        _shouldShowAddButton: function() {
            return this.collection.length < this.MAX_ITEMS
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(248),
        r = n(s),
        o = i(157),
        a = n(o),
        l = i(79),
        u = n(l),
        d = i(134),
        c = n(d),
        h = r.default.extend({
            template: "templates/venue/venue-edit-more-info-parking-lot",
            ui: {
                parkingTypeTooltip: ".parkingType-tooltip",
                parkingTypeTooltipTemplate: ".parkingType-tooltip-template",
                hasTBRTooltip: ".hasTBR-tooltip"
            },
            bindings: {
                "[name=canExitWhileClosed]": "canExitWhileClosed",
                "[name=lotType]": "lotType",
                "[name=parkingType]": "parkingType",
                "[name=hasTBR]": "hasTBR",
                "[name=paymentType]": a.default.checkboxList("paymentType"),
                "[name=estimatedNumberOfSpots]": {
                    observe: "estimatedNumberOfSpots",
                    selectOptions: a.default.selectOptionsFromList(u.default.SPOTS_ESTIMATE.map(function(e) {
                        return e.value
                    }), function(e) {
                        return I18n.t("edit.landmark.parking.types.estimatedNumberOfSpots." + e)
                    })
                },
                "[name=costType]": {
                    observe: "costType",
                    selectOptions: {
                        collection: u.default.COST_TYPE.map(function(e) {
                            return {
                                value: e,
                                label: I18n.t("edit.landmark.parking.types.costType." + e)
                            }
                        }),
                        defaultOption: {
                            value: u.default.UNKNOWN,
                            label: ""
                        }
                    }
                }
            },
            initialize: function() {
                var e = $.extend(!0, {}, this.model.attributes.categoryAttributes.PARKING_LOT);
                this.viewModel = new c.default(e),
                    this.viewModel.on("change", this._onViewModelChange.bind(this))
            },
            onRender: function() {
                this.ui.hasTBRTooltip.tooltip(),
                    this.ui.parkingTypeTooltip.tooltip({
                        title: this.ui.parkingTypeTooltipTemplate.html(),
                        html: !0,
                        placement: "right"
                    }),
                    this.stickit(this.viewModel)
            },
            _onViewModelChange: function() {
                var e = $.extend(!0, {}, this.model.attributes.categoryAttributes);
                return e.PARKING_LOT = this.viewModel.attributes,
                    this.trigger("change", {
                        newAttributes: {
                            categoryAttributes: e
                        }
                    })
            }
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(874),
        g = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "childView",
                    value: function() {
                        return f
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this.collection = new Backbone.Collection
                    }
                }, {
                    key: "tagName",
                    get: function() {
                        return "ul"
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = g,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(64),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(250),
        v = n(m),
        _ = i(4),
        y = n(_),
        b = i(98),
        E = n(b),
        w = i(159),
        S = n(w),
        M = i(875),
        C = n(M),
        T = i(876),
        A = n(T),
        I = i(877),
        O = n(I),
        L = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "element-history-item closed"
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "click .tx-toggle-closed": "_toggleClosed"
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            mainObjectRegion: ".main-object-region",
                            relatedObjectsRegion: ".related-objects-region"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._map = this.options.map,
                            this._historyDataModel = this.options.historyDataModel,
                            this._modelViewHelpers = new v.default(this._historyDataModel),
                            this._objectType = this.options.objectType,
                            this._objectID = this.options.objectID,
                            this._actionType = this.model.attributes.actionType;
                        var e = this._getMainObject(),
                            t = this._getRelatedObjects(),
                            i = null != e && this._actionType === E.default.ACTIONS.UPDATE;
                        if (this._hasRelated = t.length > 0,
                            this._hasContent = i || this._hasRelated,
                            i) {
                            var n = this._getMainObjectViewClass();
                            this._mainObjectView = new n({
                                map: this._map,
                                model: e,
                                modelViewHelpers: this._modelViewHelpers
                            })
                        }
                        t.length && (this._relatedObjectsView = new O.default({
                            modelViewHelpers: this._modelViewHelpers,
                            collection: new Backbone.Collection(t)
                        }))
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.el.classList.toggle("tx-has-content", this._hasContent),
                            this.el.classList.toggle("tx-has-related", this._hasRelated),
                            this.el.dataset.transactionID = this.model.attributes.transactionID,
                            null != this._mainObjectView && this.showChildView("mainObjectRegion", this._mainObjectView),
                            null != this._relatedObjectsView && this.showChildView("relatedObjectsRegion", this._relatedObjectsView)
                    }
                }, {
                    key: "_toggleClosed",
                    value: function() {
                        this.el.classList.toggle("closed")
                    }
                }, {
                    key: "_getMainObjectViewClass",
                    value: function() {
                        switch (this._objectType) {
                            case y.default.SEGMENT:
                                return C.default;
                            case y.default.VENUE:
                                return A.default;
                            default:
                                return S.default
                        }
                    }
                }, {
                    key: "_getMainObject",
                    value: function() {
                        return this.model.getObject(this._objectType, this._objectID)
                    }
                }, {
                    key: "_getRelatedObjects",
                    value: function() {
                        var e = this;
                        return this.model.attributes.objects.filter(function(t) {
                            return t.attributes.objectID !== e._objectID
                        })
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.date,
                            i = e.userID;
                        return {
                            date: t,
                            userProfile: this._modelViewHelpers.userProfile(i),
                            previewItems: this._serializeChangesPreview(),
                            mainObjectAction: this._serializeMainObjectAction()
                        }
                    }
                }, {
                    key: "_serializeChangesPreview",
                    value: function() {
                        var e = this,
                            t = [];
                        if (null != this._mainObjectView && t.push.apply(t, (0,
                                r.default)(this._mainObjectView.getChangedAttributesNames())),
                            null != this._relatedObjectsView) {
                            var i = this._relatedObjectsView.collection.map(function(t) {
                                return e._modelViewHelpers.formatObjectName(t.attributes.objectType)
                            });
                            t.push.apply(t, (0,
                                r.default)(i))
                        }
                        if (t.length > 1)
                            return I18n.t("element_history.multiple_changes");
                        if (1 === t.length) {
                            var n = "element_history.preview_actions." + this._actionType;
                            return I18n.t(n, {
                                field: t[0]
                            })
                        }
                        return null
                    }
                }, {
                    key: "_serializeMainObjectAction",
                    value: function() {
                        var e = this._getMainObject();
                        return null == e ? null : this._objectType === y.default.SEGMENT ? this._serializeSegmentAction(e) : this._serializeAction()
                    }
                }, {
                    key: "_serializeSegmentAction",
                    value: function(e) {
                        return e.isSegmentSplit() ? I18n.t("element_history.segment_created_by_split") : e.isSegmentMerge() ? I18n.t("element_history.segment_created_by_merge") : this._serializeAction()
                    }
                }, {
                    key: "_serializeAction",
                    value: function() {
                        var e = void 0,
                            t = this._modelViewHelpers.formatObjectName(this._objectType);
                        return this._actionType === E.default.ACTIONS.ADD ? e = "element_history.object_created" : this._actionType === E.default.ACTIONS.DELETE && (e = "element_history.object_deleted"),
                            null != e ? I18n.t(e, {
                                object: t
                            }) : ""
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/tx_item"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = L,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(59),
        g = n(f),
        m = i(8),
        v = n(m),
        y = i(159),
        b = n(y),
        E = i(27),
        w = n(E),
        S = {
            fwdMaxSpeedUnverified: function(e) {
                return !e
            },
            revMaxSpeedUnverified: function(e) {
                return !e
            }
        },
        M = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "_buildChanges",
                    value: function() {
                        return (0,
                            g.default)(t.prototype.__proto__ || (0,
                            a.default)(t.prototype), "_buildChanges", this).call(this).concat(this._buildSegmentFlagsChanges())
                    }
                }, {
                    key: "_buildSegmentFlagsChanges",
                    value: function() {
                        var e = this.model.attributes,
                            t = e.objectType,
                            i = e.newValue,
                            n = e.oldValue,
                            s = new w.default(n),
                            r = new w.default(i),
                            o = s.getFlagAttributes(),
                            a = r.getFlagAttributes();
                        return this._buildFlagChanges(t, o, a)
                    }
                }, {
                    key: "_buildFlagChanges",
                    value: function(e, t, i) {
                        var n = this;
                        return _.unique((0,
                            r.default)(t).concat((0,
                            r.default)(i))).filter(function(e) {
                            return t[e] !== i[e]
                        }).map(function(s) {
                            return {
                                name: s,
                                displayName: n._modelViewHelpers.formatFlagName(e, s),
                                newValue: n._formatBoolean(i[s]),
                                oldValue: n._formatBoolean(t[s]),
                                isVisual: !1
                            }
                        })
                    }
                }, {
                    key: "_processValue",
                    value: function(e, t) {
                        var i = S[e];
                        return null != i ? i(t) : t
                    }
                }, {
                    key: "_formatValue",
                    value: function(e, t) {
                        var i = this.model.attributes.objectType;
                        if (W_.isBlank(t))
                            return null;
                        var n = this._processValue(e, t);
                        return _.isBoolean(n) ? this._formatBoolean(n) : this._modelViewHelpers.formatFieldValue(i, e, n)
                    }
                }, {
                    key: "BLACKLIST_ATTRIBTUES",
                    get: function() {
                        return {
                            fromNodeID: !0,
                            toNodeID: !0,
                            crossroadID: !0,
                            flags: !0,
                            fwdFlags: !0,
                            revFlags: !0,
                            scheduleID: !0
                        }
                    }
                }]),
                t
        }(b.default);
    t.default = M,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(21),
        a = n(o),
        l = i(5),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(2),
        p = n(h),
        f = i(7),
        g = n(f),
        m = i(59),
        v = n(m),
        y = i(8),
        b = n(y),
        E = i(11),
        w = n(E),
        S = i(159),
        M = n(S),
        C = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    b.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "events",
                    value: function() {
                        return (0,
                            a.default)({}, _.result(M.default.prototype, "events"), {
                            "mouseenter .ca-entryExitPoints .ca-value-new": this._showNewEntryExitPoints,
                            "mouseenter .ca-entryExitPoints .ca-value-old": this._showOldExtryExitPoints
                        })
                    }
                }, {
                    key: "_buildChanges",
                    value: function() {
                        return (0,
                            v.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "_buildChanges", this).call(this).concat(this._buildCategoryAttributesChanges())
                    }
                }, {
                    key: "_buildCategoryAttributesChanges",
                    value: function() {
                        var e = this,
                            t = this.model.attributes,
                            i = t.newValue,
                            n = t.oldValue,
                            s = i.categoryAttributes || {},
                            o = n.categoryAttributes || {},
                            l = (0,
                                r.default)(o).reduce(function(e, t) {
                                return (0,
                                    a.default)(e, o[t])
                            }, {}),
                            u = (0,
                                r.default)(s).reduce(function(e, t) {
                                return (0,
                                    a.default)(e, s[t])
                            }, {});
                        return _.unique((0,
                            r.default)(l).concat((0,
                            r.default)(u))).filter(function(e) {
                            return !_.isEqual(l[e], u[e])
                        }).map(function(t) {
                            var i = u[t],
                                n = l[t];
                            return {
                                name: t,
                                displayName: e._modelViewHelpers.formatCategoryAttributeName(t),
                                newValue: e._formatCategoryAttribute(t, i),
                                oldValue: e._formatCategoryAttribute(t, n),
                                isVisual: !1
                            }
                        })
                    }
                }, {
                    key: "_formatCategoryAttribute",
                    value: function(e, t) {
                        return W_.isBlank(t) ? null : _.isBoolean(t) ? this._formatBoolean(t) : this._modelViewHelpers.formatCategoryAttributeValue(e, t)
                    }
                }, {
                    key: "_drawEntryExitPoints",
                    value: function(e) {
                        var t = e.filter(function(e) {
                            return null != e.point
                        }).map(function(e) {
                            return w.default.parse(e.point)
                        }).map(function(e) {
                            return new OL.Feature.Vector(e.clone())
                        });
                        this._getDrawingContext().addFeatures(t)
                    }
                }, {
                    key: "_showNewEntryExitPoints",
                    value: function() {
                        this._drawEntryExitPoints(this.model.attributes.newValue.entryExitPoints)
                    }
                }, {
                    key: "_showOldExtryExitPoints",
                    value: function() {
                        this._drawEntryExitPoints(this.model.attributes.oldValue.entryExitPoints)
                    }
                }, {
                    key: "VISUAL_ATTRIBUTES",
                    get: function() {
                        return (0,
                            a.default)({}, _.result(M.default.prototype, "VISUAL_ATTRIBUTES"), {
                            entryExitPoints: !0
                        })
                    }
                }, {
                    key: "BLACKLIST_ATTRIBTUES",
                    get: function() {
                        return {
                            categoryAttributes: !0
                        }
                    }
                }]),
                t
        }(M.default);
    t.default = C,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s, r = i(5),
        o = n(r),
        a = i(1),
        l = n(a),
        u = i(2),
        d = n(u),
        c = i(7),
        h = n(c),
        p = i(8),
        f = n(p),
        g = i(17),
        m = n(g),
        v = i(4),
        _ = n(v),
        y = i(878),
        b = (s = {},
            (0,
                m.default)(s, _.default.HOUSE_NUMBER, y.HouseNumberChangeView),
            (0,
                m.default)(s, _.default.VENUE_UPDATE_REQUEST, y.VenueUpdateRequestView),
            s),
        E = function(e) {
            function t() {
                return (0,
                        l.default)(this, t),
                    (0,
                        h.default)(this, (t.__proto__ || (0,
                        o.default)(t)).apply(this, arguments))
            }
            return (0,
                    f.default)(t, e),
                (0,
                    d.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "ul"
                    }
                }, {
                    key: "childViewOptions",
                    value: function() {
                        return this.options
                    }
                }, {
                    key: "childView",
                    value: function(e) {
                        var t = e.attributes.objectType,
                            i = b[t];
                        return null == i && (i = y.DefaultChangeView),
                            i
                    }
                }]),
                t
        }(Marionette.CollectionView);
    t.default = E,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(21),
        r = n(s),
        o = i(59),
        a = n(o),
        l = i(5),
        u = n(l),
        d = i(1),
        c = n(d),
        h = i(2),
        p = n(h),
        f = i(7),
        g = n(f),
        m = i(8),
        v = n(m),
        _ = i(98),
        y = n(_),
        b = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "tagName",
                    value: function() {
                        return "li"
                    }
                }, {
                    key: "className",
                    value: function() {
                        return "tx-changed-ro"
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        this._actionType = this.model.attributes.actionType,
                            this._objectType = this.model.attributes.objectType,
                            this._modelViewHelpers = this.options.modelViewHelpers
                    }
                }, {
                    key: "serializeData",
                    value: function() {
                        return {
                            displayName: this._modelViewHelpers.formatObjectName(this._objectType),
                            displayValue: null,
                            actionText: this._getActionText()
                        }
                    }
                }, {
                    key: "_getActionText",
                    value: function() {
                        var e = "element_history.actions." + this._objectType + "." + this._actionType;
                        return I18n.lookup(e) ? I18n.t(e) : I18n.t("element_history.actions.default." + this._actionType)
                    }
                }, {
                    key: "_getByActionType",
                    value: function(e) {
                        var t = null;
                        return this._actionType === y.default.ACTIONS.ADD && this.model.attributes.newValue ? t = this.model.attributes.newValue[e] : this._actionType === y.default.ACTIONS.DELETE && this.model.attributes.oldValue && (t = this.model.attributes.oldValue[e]),
                            t
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/ElementHistory/templates/tx_object_related"
                    }
                }]),
                t
        }(Marionette.View),
        E = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        return (0,
                            r.default)((0,
                            a.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "serializeData", this).call(this), {
                            displayValue: this._getByActionType("number")
                        })
                    }
                }]),
                t
        }(b),
        w = function(e) {
            function t() {
                return (0,
                        c.default)(this, t),
                    (0,
                        g.default)(this, (t.__proto__ || (0,
                        u.default)(t)).apply(this, arguments))
            }
            return (0,
                    v.default)(t, e),
                (0,
                    p.default)(t, [{
                    key: "serializeData",
                    value: function() {
                        var e = (0,
                            a.default)(t.prototype.__proto__ || (0,
                            u.default)(t.prototype), "serializeData", this).call(this);
                        return null != this.isApproved && (e.actionText = this.isApproved ? I18n.t("element_history.approved") : I18n.t("element_history.rejected")),
                            e
                    }
                }, {
                    key: "isApproved",
                    get: function() {
                        var e = null;
                        return this._actionType === y.default.ACTIONS.DELETE && this.model.attributes.oldValue && (e = this.model.attributes.oldValue.approve),
                            e
                    }
                }]),
                t
        }(b);
    t.default = {
            DefaultChangeView: b,
            HouseNumberChangeView: E,
            VenueUpdateRequestView: w
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(52),
        s = i(145),
        r = i(160),
        o = i(4),
        a = i(20),
        l = n.extend({
            behaviors: {
                accelerators: {
                    behaviorClass: r
                }
            },
            events: {
                "click .disallow-connections": "_disallowAllConnections",
                "click .allow-connections": "_allowAllConnections"
            },
            accelerators: {
                disallowAllConnections: "_disallowAllConnections",
                allowAllConnections: "_allowAllConnections"
            },
            template: "templates/node-edit",
            initialize: function() {
                n.prototype.initialize.apply(this, arguments),
                    this.listenTo(this.dataModel.segments, a.CHANGED, this.onFeaturesChanged)
            },
            isModelEditable: function() {
                return this.dataModel.segments.getByIds(this.model.attributes.segIDs).every(function(e) {
                    return e.canEditFromConnections() && e.canEditToConnections()
                })
            },
            _setAllConnections: function(e) {
                this.model.areConnectionsEditable() && (this.changing = !0,
                    this.dataModel.actionManager.add(new s(this.model, e)),
                    this.changing = !1,
                    this.render())
            },
            hasEditedModelChanged: function(e) {
                if (n.prototype.hasEditedModelChanged.apply(this, arguments))
                    return !0;
                var t = this.model.attributes.segIDs;
                return e.some(function(e) {
                    return e.type === o.SEGMENT && t.contains(e.getID())
                })
            },
            _allowAllConnections: function() {
                this.model.areAllConnectionsEnabled() || this._setAllConnections(!0)
            },
            _disallowAllConnections: function() {
                this.model.areAllConnectionsEnabled() && this._setAllConnections(!1)
            }
        });
    e.exports = l
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var s = i(3),
        r = n(s),
        o = i(249),
        a = n(o),
        l = i(881),
        u = i(52),
        d = i(161),
        c = i(63),
        h = i(251),
        p = i(15),
        f = i(158),
        g = i(27),
        m = i(245),
        v = i(16),
        y = i(252),
        b = i(247),
        E = i(160),
        w = i(888),
        S = i(893),
        M = i(895),
        C = i(261),
        T = i(262),
        A = i(24),
        I = i(75),
        O = u.extend({
            behaviors: {
                restoreLastTab: {
                    behaviorClass: b
                },
                accelerators: {
                    behaviorClass: E
                }
            },
            events: _.extend({}, u.prototype.events, {
                "click .segment .address-edit-btn": "editAddressClicked",
                "click .segment .address-edit-cancel": "cancelEditAddressClicked",
                "submit .segment .address-form": "addressEdited",
                "click .segment .select-entire-street": "selectEntireStreetClicked",
                "click .segment .select-entire-roundabout": "selectEntireRoundaboutClicked",
                "click .segment .edit-house-numbers": "editHouseNumbersClicked",
                "click .segment .edit-restrictions": "editRestrictionsClicked",
                "click .segment .add-alt-street-btn": "addAltStreetClicked",
                "click .segment .alt-street-delete": "deleteAltStreetClicked",
                "click .segment input[type='checkbox'][mixed]": "mixedCheckboxClicked",
                "change .segment input[name=emptyStreet], .segment input[name=emptyCity]": "emptyAddressToggled",
                "change select[name=countryID]": "addressChanged",
                "change input[name=streetName]": "addressChanged"
            }),
            accelerators: {
                toggleSegmentDirection: "toggleDirection",
                editSegmentAddress: "editSegmentShortcutClicked",
                editHouseNumbers: "editHouseNumbersShortcutClicked",
                editRestrictions: "editRestrictionsShortcutClicked",
                selectEntireStreet: "selectEntireStreet",
                increaseSegmentLevel: "increaseSegmentLevel",
                decreaseSegmentLevel: "decreaseSegmentLevel"
            },
            regions: {
                closuresRegion: ".closures",
                ttsPlaybackRegion: ".tts-playback-region",
                historyRegion: ".element-history-region"
            },
            template: "templates/segment/edit-panel",
            cityNames: null,
            streetNames: null,
            initialize: function() {
                u.prototype.initialize.apply(this, arguments),
                    this._toggleEvents(!0),
                    this.model = new d(this.options.selection, this.options.dataModel, this.options.reversedSegments),
                    this.selectionManager = this.options.selectionManager,
                    this.cityNames = this.dataModel.cities.getValidCities().map(function(e) {
                        return e.attributes.name
                    });
                var e = _.values(this.dataModel.streets.objects);
                this.streetNames = _(e).pluck("name").filter(function(e) {
                        return e
                    }),
                    this.reverseSegments = this.options.reversedSegments,
                    this.consistentDirection = 0 === this.reverseSegments.numReversed && !this.reverseSegments.multipleConnectedComponents
            },
            _toggleEvents: function(e) {
                var t = e ? "on" : "off",
                    i = e ? "on" : "un";
                this.dataModel.roadClosures[t]("change:active", this.render, this),
                    this.dataModel.actionManager.events[i]({
                        hasActions: this.onActionsChanged,
                        noActions: this.onActionsChanged,
                        scope: this
                    })
            },
            onDestroy: function() {
                this._toggleEvents(!1)
            },
            selectEntireStreetClicked: function(e) {
                e.preventDefault(),
                    this.selectEntireStreet()
            },
            selectEntireStreet: function() {
                this.selectionManager.select(this.model.children.first().getEntireStreet(this.dataModel))
            },
            selectEntireRoundaboutClicked: function(e) {
                e.preventDefault(),
                    this._selectEntireRoundabout()
            },
            _selectEntireRoundabout: function() {
                var e = this.model.children.first().getRoundabout();
                null !== e && this.selectionManager.select(e.getAllSegments())
            },
            onRender: function() {
                this.renderAddressEdit(),
                    this._initClosureEditing(),
                    this._renderElementHistory(),
                    this.$(".waze-tooltip").tooltip(),
                    u.prototype.onRender.apply(this, arguments)
            },
            _renderElementHistory: function() {
                this.showChildView("historyRegion", new a.default({
                    map: this.options.map,
                    model: this.options.selection[0]
                }))
            },
            _initTTSView: function() {
                var e = this.model.getAddress(),
                    t = this.model.children[0].geometry.components[0];
                this.streetModel = new M,
                    null !== e.street && this.streetModel.set({
                        name: e.street.name,
                        isEmpty: e.street.isEmpty,
                        lonlat: t.toLonLat(),
                        country: e.country
                    });
                var i = new S({
                    model: this.streetModel
                });
                this.getRegion("ttsPlaybackRegion").reset(),
                    this.showChildView("ttsPlaybackRegion", i)
            },
            _initClosureEditing: function() {
                var e = new y({
                    pannable: W.map.getPannable(),
                    compositeSegment: this.model,
                    repoActive: this.dataModel.roadClosures.active,
                    canSaveClosures: !this.dataModel.actionManager.canSave(),
                    canAdd: !0,
                    dataModel: this.dataModel,
                    editViewConfig: C.SEGMENT,
                    listViewConfig: T.SEGMENT
                });
                this.showChildView("closuresRegion", e)
            },
            renderAddressEdit: function() {
                this.$(".address-edit").html(A.getHTML("templates/segment/address-edit", this.serializeData())),
                    this.disableAddressEditing(),
                    this.$(".address-edit-btn").prop("disabled", !this.model.arePropertiesEditable()),
                    this.$(".address-edit-btn").toggleClass("disabled", !this.model.arePropertiesEditable()),
                    this.$(".address-edit input[name=streetName]").typeahead({
                        source: this.streetNames
                    }),
                    this.renderCityEdit(),
                    this.renderAltStreetsEdit(),
                    this._initTTSView()
            },
            renderCityEdit: function() {
                var e = this,
                    t = this.dataModel.hasStates(),
                    i = this.$(".address-edit input[name=cityName]");
                if (i.typeahead({
                        source: this.cityNames
                    }),
                    t) {
                    var n = this.$(".address-edit select[name=stateID]");
                    i.on("change", function() {
                        var t = e.dataModel.cities.getByAttributes({
                                name: i.val()
                            }),
                            s = t[0];
                        null != s && null != s.attributes.stateID && n.val(s.attributes.stateID)
                    })
                }
            },
            renderAltStreetsEdit: function() {
                this.$(".alt-street-controls").html(A.getHTML("templates/segment/alt-streets-edit", this.serializeData())),
                    this.$altStreetFormTemplate = this.$(".alt-street-form-template").detach(),
                    this.model.arePropertiesEditable() || (this.$(".add-alt-street-btn").prop("disabled", !0),
                        this.$(".alt-street-list").addClass("undeletable"))
            },
            emptyAddressToggled: function(e) {
                var t = $(e.target),
                    i = t.parents(".toggleable-input").find("input:not([type=checkbox])"),
                    n = t.is(":checked");
                i.prop({
                        disabled: n,
                        required: !n
                    }),
                    this.streetModel.set("isEmpty", n)
            },
            addressChanged: function() {
                var e = this._readAddressForm(),
                    t = this.dataModel.countries.get(e.countryID);
                this.streetModel.set({
                    country: t,
                    isEmpty: e.emptyStreet,
                    name: e.streetName
                })
            },
            editAddressClicked: function(e) {
                e.preventDefault(),
                    this.enableAddressEditing()
            },
            cancelEditAddressClicked: function(e) {
                e.preventDefault(),
                    this.renderAddressEdit()
            },
            enableAddressEditing: function() {
                this.$el.find(".address-edit").addClass("editing").removeClass("preview")
            },
            disableAddressEditing: function() {
                this.$el.find(".address-edit").removeClass("editing").addClass("preview")
            },
            isAllowHeadlightsReminder: function() {
                var e = this.model.getAddress();
                return e.country && e.country.allowHeadlightsReminder
            },
            isAllowAverageSpeedCameras: function() {
                var e = this.model.getAddress();
                return e.country && e.country.allowAverageSpeedCameras
            },
            serializeData: function() {
                var e = this.dataModel.loginManager.getUserRank(),
                    t = this.model.getRoutingRoadTypes();
                return {
                    segment: this.model,
                    segmentId: this.model.getID(),
                    isLockedForUser: this.model.isLockedByHigherRank(),
                    isInBigJunction: this.model.isInBigJunction(),
                    userRank: e,
                    editable: this.model.arePropertiesEditable(),
                    address: this.model.getAddress(),
                    addressDetails: this.model.getAddressDetails(),
                    isHighway: this.model.isHighway(),
                    isInRoundabout: this.model.isInRoundabout(),
                    isImperial: W.model.isImperial,
                    hasStates: this.dataModel.hasStates(),
                    hasRestrictions: this.model.getRestrictionCount() > 0,
                    editingMultiple: this.model.children.length > 1,
                    showHouseNumbersButton: this.shouldShowHouseNumbersButton(),
                    disableHouseNumbersButton: this.shouldDisableHouseNumbersButton(),
                    allowDefaultRank: this.model.canUserSetDefaultRank(e),
                    allowSpeedLimit: W.Config.speed_limit.enable,
                    allowHeadlightsReminder: this.isAllowHeadlightsReminder(),
                    allowAverageSpeedCameras: this.isAllowAverageSpeedCameras(),
                    numSegments: this.model.children.length,
                    prevRouteRankDisabled: null === t.prev,
                    nextRouteRankDisabled: null === t.next,
                    routingRoadTypes: t,
                    disableEmptyStreet: this.shouldDisableEmptyStreet(),
                    dataModel: this.dataModel,
                    view: this
                }
            },
            getSpeedLimitValue: function(e) {
                var t = this.model,
                    i = t.attributes[e];
                return null !== t.attributes[e] ? v.getDisplayUnitValue(i, t.UNITS.speed, !0) : ""
            },
            directionChanged: function(e) {
                if (e >= 0) {
                    var t = 0 != (1 & e),
                        i = 0 != (2 & e);
                    this.changed({
                        fwdDirection: t,
                        revDirection: i
                    }, !0)
                }
            },
            tollRoadChanged: function(e) {
                this.changed({
                    fwdToll: e,
                    revToll: e
                })
            },
            roadTypeChanged: function(e) {
                this.changed({
                    roadType: e,
                    routingRoadType: null
                }, !0)
            },
            routingRoadTypeChanged: function(e) {
                this.changed({
                    routingRoadType: e
                }, !0)
            },
            maxSpeedChanged: function(e, t) {
                var i = {};
                i[e] = t,
                    i[e + "Unverified"] = !1,
                    this.changed(i)
            },
            fwdMaxSpeedChanged: function(e) {
                this.maxSpeedChanged("fwdMaxSpeed", e)
            },
            revMaxSpeedChanged: function(e) {
                this.maxSpeedChanged("revMaxSpeed", e)
            },
            fwdMaxSpeedUnverifiedChanged: function(e) {
                this._maxSpeedUnverfiedChanged("fwdMaxSpeedUnverified", !e)
            },
            revMaxSpeedUnverifiedChanged: function(e) {
                this._maxSpeedUnverfiedChanged("revMaxSpeedUnverified", !e)
            },
            _maxSpeedUnverfiedChanged: function(e, t) {
                var i = {};
                i[e] = t,
                    this.changed(i, !1, function(t) {
                        return t.canChangeMaxSpeedUnverified(e)
                    })
            },
            shouldShowRoutingRoadTypeMessage: function() {
                if (this.model.mixed.routingRoadType)
                    return !1;
                var e = this.model.attributes.routingRoadType,
                    t = this.model.attributes.roadType;
                return null !== e && t !== e
            },
            getRoutingRoadTypeMessage: function() {
                var e = this.model.attributes.routingRoadType,
                    t = v.contentTag("strong", I18n.t("segment.road_types." + e));
                return v.safe_t("edit.segment.routing.info", {
                    roadType: t
                })
            },
            shouldDisableEmptyStreet: function() {
                var e = this.model.getAddress(),
                    t = null != e.street && e.street.isEmpty;
                return this.model.attributes.hasHNs && !t
            },
            shouldShowRoutingSelect: function() {
                var e = this.model;
                return !e.mixed.roadType && e.isRoutable() && e.canEditRoutingRoadTypes()
            },
            shouldShowHouseNumbersButton: function() {
                return Waze.Config.houseNumbers.allowEditing && 1 === this.model.children.length && this.model.houseNumbersEditablePerType()
            },
            shouldDisableHouseNumbersButton: function() {
                return this.dataModel.actionManager.canSave()
            },
            changed: function(e, t) {
                var i = this,
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(e) {
                        return !0
                    },
                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : void 0,
                    r = new c,
                    o = this,
                    a = {};
                t || (this.changing = !0),
                    r.setModel(this.dataModel),
                    this.model.children.filter(n).forEach(function(t) {
                        var n = {};
                        s && (n = i._getSegmentChangedFlagAttributes(t, s));
                        var l = _.extend({}, e, n);
                        o.reverseSegments[t.getID()] ? (a = i.reverseAttributes(l),
                            r.doSubAction(new p(t, a))) : r.doSubAction(new p(t, l))
                    }),
                    this.dataModel.actionManager.add(r),
                    this.changing = !1
            },
            _getSegmentChangedFlagAttributes: function(e, t) {
                var i = this,
                    n = {},
                    s = (0,
                        r.default)(t),
                    o = s.reduce(function(e, n) {
                        var s = i.model.FLAG_ATTRIBUTES[n];
                        return e[s.mask] || (e[s.mask] = []),
                            e[s.mask].push([s.flag, t[n]]),
                            e
                    }, {});
                return (0,
                        r.default)(o).forEach(function(t) {
                        var i = o[t],
                            s = e.attributes[t],
                            r = new I(s);
                        r.setBits(i),
                            n[t] = r.value
                    }),
                    n
            },
            reverseAttributes: function(e) {
                var t = {};
                return _.each(e, function(e, i) {
                        var n = d.prototype.reversableAttributes[i];
                        n ? t[n] = e : t[i] = e
                    }),
                    t
            },
            addressEdited: function(e) {
                e.preventDefault();
                var t = this._readAddressForm();
                this._cityExists(t) ? this._submitAddressChanges(t) : this._confirmCityChanges(t)
            },
            _readAddressForm: function() {
                var e = this,
                    t = {},
                    i = void 0;
                return $.each(this.$(".address-edit .primary-street").find("select,input,textarea"), function(n, s) {
                        i = $(s),
                            t[i.attr("name")] = e.serializeElement(i)
                    }),
                    t.isEmpty = t.emptyCity,
                    t.name = t.emptyCity ? "" : t.cityName,
                    t.countryID = parseInt(t.countryID, 10),
                    t.stateID = parseInt(t.stateID, 10),
                    t
            },
            _confirmCityChanges: function(e) {
                var t = this;
                this._toggleAddressFormLoading(!0),
                    m.getAndConfirmCityChange(e.name, e.countryID, e.stateID).then(function(i) {
                        i && t._submitAddressChanges(e)
                    }).catch(function() {
                        t._submitAddressChanges(e)
                    }).then(function() {
                        t._toggleAddressFormLoading(!1)
                    })
            },
            _toggleAddressFormLoading: function(e) {
                this.$el.find(".address-form").toggleClass("saving", e),
                    this.$el.find(".save-button .loading").toggleClass("not-shown", !e)
            },
            _cityExists: function(e) {
                return W.model.cities.getByAttributes(e).length > 0
            },
            _submitAddressChanges: function(e) {
                var t = new c;
                t.setModel(this.dataModel),
                    this.changing = !0,
                    this.disableAddressEditing(),
                    this.model.children.forEach(function(i) {
                        t.doSubAction(new f(i, e, {
                            streetIDField: "primaryStreetID"
                        }))
                    }),
                    this.processAltStreets(t),
                    this.dataModel.actionManager.add(t),
                    this.changing = !1,
                    this.model.calcAttributes(),
                    this.render()
            },
            addAltStreetClicked: function(e) {
                e.preventDefault(),
                    this.addAltStreetFrom()
            },
            processAltStreets: function(e) {
                var t = [],
                    i = {},
                    n = void 0,
                    s = this,
                    r = $.map(this.$el.find(".alt-street.deleted"), function(e) {
                        return $(e).data("id")
                    });
                r.isEmpty() || r.forEach(function(t) {
                        this.model.children.forEach(function(i) {
                            e.doSubAction(new p(i, {
                                streetIDs: i.attributes.streetIDs.remove(t)
                            }))
                        }, this)
                    }, this),
                    $.each(this.$el.find(".new-alt-street"), function(r, o) {
                        t.push(i = {}),
                            $.each($(o).find("input"), function(e, t) {
                                n = $(t),
                                    i[n.attr("name")] = s.serializeElement(n)
                            }),
                            s.model.children.forEach(function(t) {
                                e.doSubAction(new h(t, i))
                            })
                    })
            },
            deleteAltStreetClicked: function(e) {
                var t = $(e.target).parents(".alt-street, .new-alt-street");
                e.preventDefault(),
                    t.fadeOut("fast", function() {
                        t.hasClass("new-alt-street") ? t.remove() : t.addClass("deleted")
                    })
            },
            addAltStreetFrom: function() {
                var e = this.$altStreetFormTemplate.clone().appendTo(this.$el.find(".add-alt-street-form")),
                    t = this.$el.find(".add-alt-street-form .new-alt-street").length,
                    i = "alt-city-" + t;
                e.find("input[name=emptyCity]").attr("id", i),
                    e.find("input[name=emptyCity] + label").attr("for", i),
                    e.find("input[name=streetName]").typeahead({
                        source: this.streetNames
                    }),
                    e.find("input[name=cityName]").typeahead({
                        source: this.cityNames
                    })
            },
            onFeaturesChanged: function(e) {
                this.hasEditedModelChanged(e) && this.model.calcAttributes(),
                    u.prototype.onFeaturesChanged.apply(this, arguments)
            },
            hasEditedModelChanged: function(e) {
                var t = this;
                return e.some(function(e) {
                    return t.model.children.some(function(t) {
                        return t.equals(e)
                    })
                })
            },
            increaseSegmentLevel: function() {
                this.changeSegmentLevelBy(1)
            },
            decreaseSegmentLevel: function() {
                this.changeSegmentLevelBy(-1)
            },
            changeSegmentLevelBy: function(e) {
                if (!this.model.mixed.level && this.model.arePropertiesEditable()) {
                    var t = this.model.attributes.level || 0;
                    t += e,
                        t >= g.prototype.MinLevel && t <= g.prototype.MaxLevel && this.changed({
                            level: t
                        }, !0)
                }
            },
            toggleDirection: function() {
                if (!this.model.mixed.direction && this.model.arePropertiesEditable()) {
                    var e = (this.model.attributes.direction + 1) % 4;
                    0 === e && e++,
                        this.directionChanged(e)
                }
            },
            editSegmentShortcutClicked: function() {
                this.model.arePropertiesEditable() && this.enableAddressEditing()
            },
            editHouseNumbersShortcutClicked: function() {
                this.shouldShowHouseNumbersButton() && !this.shouldDisableHouseNumbersButton() && this.editHouseNumbers()
            },
            editHouseNumbersClicked: function(e) {
                e.preventDefault(),
                    this.editHouseNumbers()
            },
            editHouseNumbers: function() {
                var e = this.model.children.first(),
                    t = e.getEntireStreet(this.dataModel);
                new w({
                    model: this.dataModel,
                    map: W.map,
                    editable: e.canEditHouseNumbers(),
                    segments: t
                })
            },
            editRestrictionsClicked: function(e) {
                e.preventDefault(),
                    this.editRestrictions()
            },
            editRestrictionsShortcutClicked: function() {
                this.shouldAllowRestrictionEditing() && this.editRestrictions()
            },
            editRestrictions: function(e) {
                var t = this,
                    i = new l.SegmentsRestrictionsMainView({
                        dataModel: this.dataModel,
                        segments: this.model.children,
                        isTollRoad: this.model.isTollRoad(),
                        isTollRoadMixed: this.model.isTollRoadMixed()
                    });
                i.on("restriction:summary:apply", function(e) {
                        var i = e.isTollRoad;
                        (t.model.isTollRoadMixed() || t.model.isTollRoad() !== i) && t.tollRoadChanged(i)
                    }),
                    W.app.layout.getRegion("dialogRegion").show(i)
            },
            editClosures: function(e) {
                W.commands.execute("closures:list", this.model)
            },
            onActionsChanged: function() {
                this.model.calcAttributes(),
                    this.render()
            },
            shouldAllowRestrictionEditing: function() {
                return W.Config.restrictions.allowEditing
            },
            mixedCheckboxClicked: function(e) {
                e.target.removeAttribute("mixed")
            }
        });
    e.exports = O
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(5),
        r = n(s),
        o = i(1),
        a = n(o),
        l = i(2),
        u = n(l),
        d = i(7),
        c = n(d),
        h = i(8),
        p = n(h),
        f = i(63),
        g = n(f),
        m = i(15),
        v = n(m),
        _ = i(39),
        y = i(882),
        b = i(219),
        E = i(883),
        w = i(104),
        S = function(e) {
            function t() {
                return (0,
                        a.default)(this, t),
                    (0,
                        c.default)(this, (t.__proto__ || (0,
                        r.default)(t)).apply(this, arguments))
            }
            return (0,
                    p.default)(t, e),
                (0,
                    u.default)(t, [{
                    key: "regions",
                    value: function() {
                        return {
                            contentRegion: ".modal-content"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        var t = this,
                            i = e.segments[0];
                        this._dataModel = e.dataModel,
                            this._segments = e.segments,
                            this._canEditRestrictions = i.arePropertiesEditable(),
                            this._viewHelpers = new w.SegmentRestrictionViewHelpers({
                                segment: i,
                                dataModel: this._dataModel
                            }),
                            this._restrictionsBuilder = new y.SegmentsRestrictionsBuilder({
                                segments: this._segments
                            }),
                            this._tollRoadModel = new Backbone.Model({
                                isTollRoad: e.isTollRoad,
                                isTollRoadMixed: e.isTollRoadMixed,
                                hasTollRestriction: this._restrictionsBuilder.hasTollRestriction()
                            }),
                            this._tollRoadModel.on("change isTollRoad", function() {
                                return t._tollRoadModel.set({
                                    isTollRoadMixed: !1
                                })
                            })
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemEdit",
                    value: function(e) {
                        this._showEditView({
                            restriction: e,
                            isNewRestriction: !1
                        })
                    }
                }, {
                    key: "onChildviewRestrictionItemDelete",
                    value: function(e) {
                        this._restrictionsBuilder.deleteRestriction(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionItemApplyToAll",
                    value: function(e) {
                        this._restrictionsBuilder.addRestriction(e),
                            e.isTollFreeModality() && this._tollRoadModel.set({
                                isTollRoad: !1,
                                isTollRoadMixed: !1
                            }),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCancel",
                    value: function() {
                        this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditUpdate",
                    value: function(e, t) {
                        this._restrictionsBuilder.updateRestriction(e, t),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionEditCreate",
                    value: function(e) {
                        this._restrictionsBuilder.addRestriction(e),
                            this._showSummaryView()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryClose",
                    value: function() {
                        this.destroy()
                    }
                }, {
                    key: "onChildviewRestrictionSummaryCreate",
                    value: function(e) {
                        this._showCreateSegmentsRestrictionView({
                            direction: e.direction
                        })
                    }
                }, {
                    key: "onChildviewRestrictionSummaryApply",
                    value: function() {
                        this.trigger("restriction:summary:apply", {
                                isTollRoad: this._tollRoadModel.attributes.isTollRoad
                            }),
                            this._applyChanges(),
                            this.destroy()
                    }
                }, {
                    key: "_showSummaryView",
                    value: function() {
                        this._tollRoadModel.set({
                                hasTollRestriction: this._restrictionsBuilder.hasTollRestriction()
                            }),
                            this.showChildView("contentRegion", new E.SegmentRestrictionSummaryView({
                                viewHelpers: this._viewHelpers,
                                subscriptions: this._dataModel.getRestrictionSubscriptions(),
                                restrictionBuilder: this._restrictionsBuilder,
                                canEditRestrictions: this._canEditRestrictions,
                                tollRoadModel: this._tollRoadModel
                            }))
                    }
                }, {
                    key: "_showEditView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.restriction,
                            i = e.isNewRestriction,
                            n = void 0 !== i && i;
                        this.showChildView("contentRegion", new b.RestrictionEditView({
                            restriction: t,
                            isNewRestriction: n,
                            canEditRestrictions: this._canEditRestrictions,
                            canAddTollRestriction: !this._tollRoadModel.attributes.isTollRoad,
                            subscriptions: this._dataModel.getRestrictionSubscriptions(),
                            editingTitle: this._viewHelpers.getEditingTitle(t.getDirection())
                        }))
                    }
                }, {
                    key: "_showCreateSegmentsRestrictionView",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.direction,
                            i = void 0 === t ? _.RESTRICTION_SEGMENT_DIRECTION.FWD : t,
                            n = new _.SegmentRestriction({
                                direction: i
                            });
                        this._showEditView({
                            restriction: n,
                            isNewRestriction: !0
                        })
                    }
                }, {
                    key: "_applyChanges",
                    value: function() {
                        var e = this,
                            t = new g.default;
                        this._dataModel.actionManager.add(t),
                            this._segments.forEach(function(i) {
                                var n = e._restrictionsBuilder.getRestrictions(i.getID());
                                t.doSubAction(new v.default(i, {
                                    restrictions: n
                                }))
                            })
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_main"
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            SegmentsRestrictionsMainView: S
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(64),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(152),
        p = n(h),
        f = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.segments,
                    n = void 0 === i ? [] : i;
                (0,
                    u.default)(this, e),
                this._reversedSegmentsIDs = p.default.getReversedSegments(n),
                    this._segmentIDs = n.map(function(e) {
                        return e.getID()
                    }),
                    this._restrictionsBySegmentID = n.reduce(function(e, t) {
                        return e[t.getID()] = t.getRestrictions(),
                            e
                    }, {})
            }
            return (0,
                    c.default)(e, [{
                    key: "hasMultipleSegments",
                    value: function() {
                        return (0,
                            a.default)(this._segmentIDs).length > 1
                    }
                }, {
                    key: "hasTollRestriction",
                    value: function() {
                        var e = this;
                        return this._segmentIDs.some(function(t) {
                            return e.getRestrictions(t).some(function(e) {
                                return e.isTollFreeModality()
                            })
                        })
                    }
                }, {
                    key: "appliesToAllSegments",
                    value: function(e) {
                        var t = this;
                        return this._segmentIDs.every(function(i) {
                            return t.getRestrictions(i).some(function(n) {
                                return t._withCorrectDirection(i, n).equals(e)
                            })
                        })
                    }
                }, {
                    key: "addRestriction",
                    value: function(e) {
                        var t = this;
                        this._segmentIDs.forEach(function(i) {
                            var n = t.getRestrictions(i),
                                s = t._withCorrectDirection(i, e);
                            n.some(function(e) {
                                return e.equals(s)
                            }) || n.push(s)
                        })
                    }
                }, {
                    key: "updateRestriction",
                    value: function(e, t) {
                        var i = this;
                        this._segmentIDs.forEach(function(n) {
                            var s = i.getRestrictions(n),
                                r = _.findIndex(s, function(t) {
                                    return t.equals(i._withCorrectDirection(n, e))
                                });
                            r > -1 && s.splice(r, 1, i._withCorrectDirection(n, t))
                        })
                    }
                }, {
                    key: "deleteRestriction",
                    value: function(e) {
                        var t = this;
                        this._segmentIDs.forEach(function(i) {
                            var n = t.getRestrictions(i),
                                s = _.findIndex(n, function(n) {
                                    return n.equals(t._withCorrectDirection(i, e))
                                });
                            s > -1 && n.splice(s, 1)
                        })
                    }
                }, {
                    key: "getRestrictions",
                    value: function(e) {
                        return this._restrictionsBySegmentID[e]
                    }
                }, {
                    key: "getForwardRestrictions",
                    value: function() {
                        var e, t = this,
                            i = (e = []).concat.apply(e, (0,
                                r.default)(this._segmentIDs.map(function(e) {
                                return t._getForwardRestrictions(e)
                            })));
                        return this._dedupRestrictions(i)
                    }
                }, {
                    key: "getReverseRestrictions",
                    value: function() {
                        var e, t = this,
                            i = (e = []).concat.apply(e, (0,
                                r.default)(this._segmentIDs.map(function(e) {
                                return t._getReverseRestrictions(e)
                            })));
                        return this._dedupRestrictions(i)
                    }
                }, {
                    key: "getBidiRestrictions",
                    value: function() {
                        var e, t = this,
                            i = (e = []).concat.apply(e, (0,
                                r.default)(this._segmentIDs.map(function(e) {
                                return t._getBidiRestrictions(e)
                            })));
                        return this._dedupRestrictions(i)
                    }
                }, {
                    key: "_getForwardRestrictions",
                    value: function(e) {
                        var t = this;
                        return this.getRestrictions(e).map(function(i) {
                            return t._withCorrectDirection(e, i)
                        }).filter(function(e) {
                            return e.isForward()
                        })
                    }
                }, {
                    key: "_getReverseRestrictions",
                    value: function(e) {
                        var t = this;
                        return this.getRestrictions(e).map(function(i) {
                            return t._withCorrectDirection(e, i)
                        }).filter(function(e) {
                            return e.isReverse()
                        })
                    }
                }, {
                    key: "_getBidiRestrictions",
                    value: function(e) {
                        return this.getRestrictions(e).filter(function(e) {
                            return e.isBidi()
                        })
                    }
                }, {
                    key: "_dedupRestrictions",
                    value: function(e) {
                        return e.reduce(function(e, t) {
                            return !1 === e.some(function(e) {
                                    return e.equals(t)
                                }) && e.push(t),
                                e
                        }, [])
                    }
                }, {
                    key: "_isReversed",
                    value: function(e) {
                        return !0 === this._reversedSegmentsIDs[e]
                    }
                }, {
                    key: "_withCorrectDirection",
                    value: function(e, t) {
                        return this._isReversed(e) ? t.withReverseDirection() : t
                    }
                }]),
                e
        }();
    t.default = {
            SegmentsRestrictionsBuilder: f
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(220),
        v = i(39),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "className",
                    value: function() {
                        return "restrictions-summary restrictions-summary-segment"
                    }
                }, {
                    key: "bindings",
                    value: function() {
                        return {
                            ".do-create, .do-apply": {
                                attributes: [{
                                    name: "disabled",
                                    observe: "canEditRestrictions",
                                    onGet: function(e) {
                                        return !e
                                    }
                                }]
                            },
                            ".forward-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasFwdAll",
                                visible: !0
                            },
                            ".forward-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasFwdSome",
                                visible: !0
                            },
                            ".reverse-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasRevAll",
                                visible: !0
                            },
                            ".reverse-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasRevSome",
                                visible: !0
                            },
                            ".bidi-restrictions-summary .restrictions-all-list-region ": {
                                observe: "hasBidiAll",
                                visible: !0
                            },
                            ".bidi-restrictions-summary .restrictions-some-list-region ": {
                                observe: "hasBidiSome",
                                visible: !0
                            }
                        }
                    }
                }, {
                    key: "regions",
                    value: function() {
                        return {
                            forwardAllListRegion: {
                                el: ".forward-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            forwardSomeListRegion: {
                                el: ".forward-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            },
                            reverseAllListRegion: {
                                el: ".reverse-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            reverseSomeListRegion: {
                                el: ".reverse-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            },
                            bidiAllListRegion: {
                                el: ".bidi-restrictions-summary .restrictions-all-list-region tbody",
                                replaceElement: !0
                            },
                            bidiSomeListRegion: {
                                el: ".bidi-restrictions-summary .restrictions-some-list-region tbody",
                                replaceElement: !0
                            }
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        var e = this;
                        return {
                            "click .do-apply": "_onApplyChanges",
                            "click .forward-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(v.RESTRICTION_SEGMENT_DIRECTION.FWD)
                            },
                            "click .reverse-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(v.RESTRICTION_SEGMENT_DIRECTION.REV)
                            },
                            "click .bidi-restrictions-summary .do-create": function() {
                                return e._onCreateRestriction(v.RESTRICTION_SEGMENT_DIRECTION.BOTH)
                            }
                        }
                    }
                }, {
                    key: "triggers",
                    value: function() {
                        return {
                            "click .do-close": "restriction:summary:close"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {
                            viewHelpers: null,
                            restrictionBuilder: null,
                            canEditRestrictions: !1,
                            subscriptions: {},
                            tollRoadModel: null
                        };
                        this._viewHelpers = e.viewHelpers,
                            this._restrictionsBuilder = e.restrictionBuilder,
                            this._canEditRestrictions = e.canEditRestrictions,
                            this._subscriptions = e.subscriptions,
                            this._tollRoadModel = e.tollRoadModel;
                        var t = _.partition(this._restrictionsBuilder.getForwardRestrictions(), this._appliesToAll.bind(this)),
                            i = (0,
                                r.default)(t, 2);
                        this._fwdAll = i[0],
                            this._fwdSome = i[1];
                        var n = _.partition(this._restrictionsBuilder.getReverseRestrictions(), this._appliesToAll.bind(this)),
                            s = (0,
                                r.default)(n, 2);
                        this._revAll = s[0],
                            this._revSome = s[1];
                        var o = _.partition(this._restrictionsBuilder.getBidiRestrictions(), this._appliesToAll.bind(this)),
                            a = (0,
                                r.default)(o, 2);
                        this._bidiAll = a[0],
                            this._bidiSome = a[1],
                            this.model = new Backbone.Model({
                                canEditRestrictions: this._canEditRestrictions,
                                hasFwdAll: this._fwdAll.length > 0,
                                hasFwdSome: this._fwdSome.length > 0,
                                hasRevAll: this._revAll.length > 0,
                                hasRevSome: this._revSome.length > 0,
                                hasBidiAll: this._bidiAll.length > 0,
                                hasBidiSome: this._bidiSome.length > 0
                            })
                    }
                }, {
                    key: "templateContext",
                    value: function() {
                        return {
                            forwardTitle: this._viewHelpers.getForwardSummaryTitle(),
                            reverseTitle: this._viewHelpers.getReverseSummaryTitle(),
                            bidiTitle: this._viewHelpers.getBidiSummaryTitle(),
                            editingMultipleSegments: this._restrictionsBuilder.hasMultipleSegments()
                        }
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(),
                            this.stickit(this._tollRoadModel, this.tollRoadBindings),
                            this.$(".waze-tooltip").tooltip(),
                            this.showChildView("forwardAllListRegion", this._createListView(this._fwdAll)),
                            this.showChildView("forwardSomeListRegion", this._createListView(this._fwdSome, !0)),
                            this.showChildView("reverseAllListRegion", this._createListView(this._revAll)),
                            this.showChildView("reverseSomeListRegion", this._createListView(this._revSome, !0)),
                            this.showChildView("bidiAllListRegion", this._createListView(this._bidiAll)),
                            this.showChildView("bidiSomeListRegion", this._createListView(this._bidiSome, !0))
                    }
                }, {
                    key: "_createListView",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        return new m.RestrictionsListView({
                            restrictions: e,
                            canApplyToAll: t,
                            subscriptions: this._subscriptions,
                            canEditRestrictions: this._canEditRestrictions
                        })
                    }
                }, {
                    key: "_onApplyChanges",
                    value: function() {
                        this.triggerMethod("restriction:summary:apply", {})
                    }
                }, {
                    key: "_onCreateRestriction",
                    value: function(e) {
                        this.triggerMethod("restriction:summary:create", {
                            direction: e
                        })
                    }
                }, {
                    key: "onChildviewItemEdit",
                    value: function(e) {
                        this.triggerMethod("restriction:item:edit", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemDelete",
                    value: function(e) {
                        this.triggerMethod("restriction:item:delete", e.getRestriction())
                    }
                }, {
                    key: "onChildviewItemApplyToAll",
                    value: function(e) {
                        this.triggerMethod("restriction:item:applyToAll", e.getRestriction())
                    }
                }, {
                    key: "_appliesToAll",
                    value: function(e) {
                        return this._restrictionsBuilder.appliesToAllSegments(e)
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/Restrictions/templates/restrictions_summary_segments"
                    }
                }, {
                    key: "tollRoadBindings",
                    get: function() {
                        return {
                            ".toll-road-tooltip": {
                                observe: "hasTollRestriction",
                                visible: !0
                            },
                            "[name=tollRoad]": {
                                observe: "isTollRoad",
                                update: _.noop,
                                attributes: [{
                                    name: "disabled",
                                    observe: "hasTollRestriction"
                                }, {
                                    name: "mixed",
                                    observe: "isTollRoadMixed"
                                }, {
                                    name: "checked",
                                    observe: ["isTollRoad", "isTollRoadMixed"],
                                    onGet: function(e) {
                                        var t = (0,
                                                r.default)(e, 2),
                                            i = t[0],
                                            n = t[1];
                                        return i && !n
                                    }
                                }]
                            }
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = {
            SegmentRestrictionSummaryView: y
        },
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = {
        sum: function(e, t) {
            return (e || 0) + (t || 0)
        },
        max: function(e, t) {
            return Math.max(e, t)
        },
        logical: {
            and: function(e, t) {
                return e && t
            },
            or: function(e, t) {
                return e || t
            }
        },
        bitwise: {
            and: function(e, t) {
                return e & t
            },
            or: function(e, t) {
                return e | t
            },
            xor: function(e, t) {
                return e ^ t
            }
        }
    };
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(886),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            template: "Waze/Modules/Closures/templates/list",
            className: "closures-list",
            childView: s.default,
            childViewOptions: function() {
                var e = _.pick(this.options, ["dataModel", "canEdit"]);
                return _.extend(e, this.options.extendedChildViewOptions)
            },
            ui: {
                message: ".message",
                partial: ".partial-closures",
                partialHeader: ".partial-closures-header",
                full: ".full-closures"
            },
            triggers: {
                "click .add-closure-button": "add"
            },
            initialize: function() {
                var e = this;
                return this.on("childview:edit", function(t) {
                        return e.trigger("edit", t.model)
                    }),
                    this.on("childview:delete", function(t) {
                        return e.trigger("delete", t.model)
                    }),
                    this.on("childview:locate", function(t) {
                        return e.trigger("locate", t.model)
                    }),
                    this.on("childview:applyToAll", function(t) {
                        return e.trigger("applyToAll", t.model)
                    })
            },
            attachHtml: function(e, t, i) {
                return t.model.get("partial") ? (this.ui.partial.append(t.el),
                    this.ui.partialHeader.show()) : this.ui.full.append(t.el)
            },
            viewComparator: function(e, t) {
                var i = Date.parse(e.get("startDate")),
                    n = Date.parse(t.get("startDate")),
                    s = Date.parse(e.get("endDate")),
                    r = Date.parse(t.get("endDate"));
                if (i > n)
                    return 1;
                if (i === n) {
                    if (s > r)
                        return 1;
                    if (s === r)
                        return 0
                }
                return -1
            },
            onRender: function() {
                return this.message = new W.brara.StatusMessageView(this.ui.message),
                    null != this.options.successMessage ? this.message.showSuccess(this.options.successMessage) : null != this.options.errorMessage ? this.message.showError(this.options.errorMessage) : void 0
            },
            serializeData: function() {
                return {
                    canAdd: this.options.canAdd,
                    canEdit: this.options.canEdit,
                    showActivateRepoMessage: this.options.showActivateRepoMessage,
                    showSaveMessage: this.options.showSaveMessage,
                    showPartialClosuresHeader: this.options.showPartialClosuresHeader
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(65),
        s = Marionette.View.extend({
            template: "Waze/Modules/Closures/templates/item",
            className: "closure-item",
            tagName: "li",
            triggers: {
                "click .edit": "edit",
                "click .delete": "delete",
                "click .locate": "locate",
                "click .apply-to-all": "applyToAll"
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments);
                return e.isStartDateSet = this.model.isStartDateSet(),
                    e.isEndDateSet = this.model.isEndDateSet(),
                    e.startDate = this.model.get("startDate"),
                    e.endDate = this.model.get("endDate"),
                    e.showApplyToAll = this.model.attributes.partial && this.options.allowApplyToAll,
                    e.description = this.options.getDescription(this.model),
                    e.canEdit = this.options.canEdit,
                    e.showLocateButton = this.options.showLocateButton,
                    e.eventName = this._getEventName(),
                    e.DIRECTION = n.DIRECTION,
                    e
            },
            _getEventName: function() {
                if (this.options.showEventName) {
                    var e = this.options.dataModel.majorTrafficEvents.get(this.model.get("eventId"));
                    return e ? e.getEnglishName() : null
                }
                return null
            },
            templateContext: {
                formatDate: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    return I18n.l("date.formats.default", e)
                },
                formatTime: function() {
                    return (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "").split(" ")[1]
                }
            }
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(157),
        a = n(o),
        l = i(80),
        u = n(l),
        d = Marionette.View.extend({
            template: "Waze/Modules/Closures/templates/edit",
            behaviors: {
                dateTimePickers: {
                    behaviorClass: u.default
                }
            },
            bindings: {
                "[name=closure_event]": "event",
                "[name=closure_permanent]": "permanent",
                "[name=closure_reason]": "reason",
                "[name=closure_direction]": {
                    observe: "direction",
                    onGet: function(e) {
                        return "" + e
                    },
                    onSet: function(e) {
                        return parseInt(e, 10)
                    }
                }
            },
            mteBindings: {
                ".mte-message-empty": {
                    observe: ["startDate", "endDate"],
                    visible: "_datesNotSet"
                },
                "[name=closure_eventId]": {
                    observe: "eventId",
                    attributes: [{
                        name: "disabled",
                        observe: ["startDate", "endDate"],
                        onGet: "_datesNotSet"
                    }],
                    update: function(e, t, i, n) {
                        if (Backbone.Stickit.getConfiguration(e).update.apply(this, arguments),
                            this.options.newClosure) {
                            var s = a.default.selectionRequiredOption(I18n.t("closures.choose_event"));
                            return e.prepend(s)
                        }
                    },
                    selectOptions: {
                        collection: "this.eventOptions",
                        defaultOption: {
                            label: "None",
                            value: null
                        }
                    }
                }
            },
            ui: {
                form: "form",
                formSubmit: "form input[type=submit]",
                message: ".message",
                mteTooltip: ".mte-tooltip",
                permanentTooltip: ".permanent-tooltip"
            },
            events: {
                "change .start-time, .end-time, .start-date, .end-date": function() {
                    if (this.options.canEditMTE)
                        return this._populateMTEOptions()
                },
                "click .save-button": "save",
                "submit form": "save"
            },
            triggers: {
                "click .cancel-button": "editCancelled"
            },
            initialize: function(e) {
                return this._populateMTEOptions()
            },
            onRender: function() {
                return this.stickit(this.model, this.bindings),
                    this.options.canEditMTE && this.stickit(this.model, this.mteBindings),
                    this.message = new W.brara.StatusMessageView(this.ui.message),
                    this.ui.mteTooltip.tooltip(),
                    this.ui.permanentTooltip.tooltip()
            },
            save: function(e) {
                e.preventDefault && e.preventDefault(),
                    this._hideErrors();
                var t = this.ui.form.get(0).checkValidity();
                return this.model.validate() && t ? this.trigger("save") : this._showErrors()
            },
            _datesNotSet: function() {
                return !this.model.get("startDate") || !this.model.get("endDate")
            },
            _showErrors: function() {
                var e = this;
                this.ui.formSubmit.click(),
                    (0,
                        r.default)(this.model.errors).forEach(function(t) {
                        var i = e.model.errors[t];
                        e._showError(t, i)
                    })
            },
            _showError: function(e, t) {
                e = this.$el.find("[name=closure_" + e + "]");
                var i = e.closest(".form-group");
                return i.addClass("has-error"),
                    $("<span>").addClass("help-block error-message").text(I18n.t("closures.validation." + t)).appendTo(i.find(".controls"))
            },
            _hideErrors: function() {
                return this.$el.find(".error-message").remove(),
                    this.$el.find(".form-group").removeClass("has-error")
            },
            _populateMTEOptions: function() {
                var e = this.options.availableEvents,
                    t = this.model.get("startDate"),
                    i = this.model.get("endDate");
                t && (e = e.filter(function(e) {
                        return Date.parse(e.get("startDate")) <= Date.parse(t)
                    })),
                    i && (e = e.filter(function(e) {
                        return Date.parse(e.get("endDate")) >= Date.parse(i)
                    }));
                var n = e.map(function(e) {
                    return {
                        label: e.getEnglishName() || e.getID(),
                        value: e.getID()
                    }
                });
                return this.eventOptions = _.sortBy(n, function(e) {
                        return e.label.toString().toLowerCase()
                    }),
                    this.model.get("eventId") && e.map(function(e) {
                        return e.getID()
                    }).indexOf(this.model.get("eventId")) < 0 && this.model.set("eventId", null),
                    this.stickit(this.model, this.mteBindings)
            },
            serializeData: function() {
                var e = Marionette.View.prototype.serializeData.apply(this, arguments);
                return e.newClosure = this.options.newClosure,
                    e.showHeader = this.options.newClosure,
                    e.showFooterCancelButton = !this.options.newClosure,
                    e.canEditMTE = this.options.canEditMTE,
                    e
            },
            templateContext: {
                getProvider: function() {
                    return this.closures[0] ? this.closures[0].provider : null
                }
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(47),
        r = n(s),
        o = i(3),
        a = n(o),
        l = i(12),
        u = n(l),
        d = i(889),
        c = n(d),
        h = i(192),
        p = n(h),
        f = i(259),
        g = n(f),
        m = i(162),
        v = n(m),
        _ = i(260),
        y = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(_),
        b = i(63),
        E = n(b),
        w = i(890),
        S = n(w),
        M = i(42),
        C = n(M),
        T = i(892),
        A = n(T),
        I = Marionette.Object.extend({
            MIN_EDIT_ZOOM: 6,
            HOUSE_NUMBERS_SAVE_ERROR_CODE: 716,
            _editingLock: null,
            model: null,
            segments: null,
            houseNumberSets: null,
            layer: null,
            markerLayer: null,
            fractionPoint: null,
            fractionLine: null,
            originalGeometry: null,
            updating: !1,
            lightboxView: null,
            fogOfWar: null,
            selectedNumber: null,
            invalidHouseNumbers: null,
            failedLoading: !1,
            enabled: !0,
            active: !1,
            showingForceDialog: !1,
            segmentStyle: {
                fill: {
                    strokeColor: "#00ece3",
                    strokeWidth: 7,
                    graphicZIndex: 2
                }
            },
            editAreaStyle: {
                maskID: "HNAreaMask",
                fillColor: "black",
                graphicZIndex: 1
            },
            fractionLineStyle: {
                strokeWidth: 2,
                strokeColor: "white",
                strokeDashstyle: "dash",
                strokeDashArray: "8, 8"
            },
            fractionLinePaddingStyle: {
                strokeWidth: 4,
                strokeColor: "#000",
                strokeOpacity: .5,
                strokeDashstyle: "dash",
                strokeDashArray: "8, 8"
            },
            initialize: function() {
                var e = this;
                return this.model = this.options.model,
                    this.map = this.options.map,
                    this.editable = this.options.editable,
                    this.enabled = this.options.editable,
                    this.segments = this.options.segments,
                    this.lightboxView = new S.default({
                        model: this.model,
                        pm: this
                    }),
                    this.lightboxView.olEvents.register("closed", this, this.destroy),
                    this.lightboxView.onSave = function() {
                        return e.onSave()
                    },
                    this.lightboxView.onAdd = function() {
                        return e.onAddClicked()
                    },
                    this.lightboxView.disabled = !this.options.editable,
                    this._initLayers(),
                    this._setupSegments()
            },
            _initLayers: function() {
                return this.layer = new OL.Layer.Vector("houseNumbers", {
                        renderers: [C.default],
                        rendererOptions: {
                            zIndexing: !0
                        }
                    }),
                    this.markerLayer = new OL.Layer.Markers("houseNumberMarkers"),
                    this.map.addLayer(this.layer),
                    this.map.addLayer(this.markerLayer),
                    $(this.markerLayer.div).addClass("house-numbers-layer")
            },
            _setupSegments: function() {
                var e = this,
                    t = void 0,
                    i = this.segments.map(function(e) {
                        return t = e.geometry.clone(),
                            t.model = e,
                            t
                    });
                this.joinedGeometry = new OL.Geometry.MultiLineString(i);
                var n = this.segments.map(function(e) {
                    return e.getID()
                });
                return this.model.houseNumbers.get(n).done(function(t) {
                        if (e.active) {
                            e.houseNumberSets = {};
                            for (var i = 0; i < t.length; i++) {
                                var n = t[i];
                                e.houseNumberSets[n.id] = n
                            }
                            return e.render()
                        }
                    }).fail(function() {
                        return e.failedLoading = !0,
                            e.lightboxView.render(),
                            e.lightboxView.showErrorMessage()
                    }).always(function() {
                        return e.lightboxView.setLoading(!1)
                    }),
                    this.lightboxView.address = this.segments.first().getAddressDetails(),
                    this.activate(),
                    this.lightboxView.setLoading(!0)
            },
            onDrag: function(e) {
                return this.selectedNumber.model.calculateProjection(this.joinedGeometry),
                    this.fractionPoint.lonlat = this.selectedNumber.model.projectionLonLat,
                    this.selectedNumber.updateSide(),
                    this.markerLayer.drawMarker(this.fractionPoint),
                    this.selectedNumber.icon.forceReflow(),
                    this.fractionLine.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLine.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionLine.geometry.components[1].x = this.selectedNumber.lonlat.lon,
                    this.fractionLine.geometry.components[1].y = this.selectedNumber.lonlat.lat,
                    this.fractionLinePadding.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLinePadding.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionLinePadding.geometry.components[1].x = this.selectedNumber.lonlat.lon,
                    this.fractionLinePadding.geometry.components[1].y = this.selectedNumber.lonlat.lat,
                    this.layer.drawFeature(this.fractionLinePadding),
                    this.layer.drawFeature(this.fractionLine)
            },
            onDragEnd: function(e) {
                var t = this;
                if (!this.selectedNumber.isNew) {
                    var i = new OL.Geometry.Point(this.selectedNumber.lonlat.lon, this.selectedNumber.lonlat.lat),
                        n = new E.default;
                    this.model.actionManager.add(n),
                        this.ignoreUpdates(function() {
                            if (t.selectedNumber.model.changedSegment()) {
                                var e = t.houseNumberSets[t.selectedNumber.model.closestSegment.getID()],
                                    s = new y.ReplaceHouseNumberSegment(t.selectedNumber.model, e);
                                t.selectedNumber.model.geometry = t.originalGeometry.clone(),
                                    n.doSubAction(s),
                                    t.selectedNumber.model = s.newHouseNumber
                            }
                            return n.doSubAction(new g.default(t.selectedNumber.model, t.originalGeometry, i)),
                                n.doSubAction(new v.default(t.selectedNumber.model.parent, t.selectedNumber.model, {
                                    forced: !1,
                                    valid: !0
                                })),
                                t.selectedNumber.setValid(!0),
                                t.selectedNumber.setForced(!1)
                        }),
                        this.originalGeometry = i.clone()
                }
            },
            reset: function() {
                this.adding && null != this.selectedNumber && this.selectedNumber.dragging.forceEnd(),
                    this.adding = !1;
                for (var e = 0; e < this.markerLayer.markers.length; e++) {
                    this.markerLayer.markers[e].destroy()
                }
                this.markerLayer.clearMarkers(),
                    this.fractionPoint = null,
                    this.layer.destroyFeatures(this.layer.features),
                    this.editArea = null
            },
            render: function() {
                if (!this.updating && this.active && null !== this.houseNumberSets) {
                    this.reset();
                    var e = !0,
                        t = !1,
                        i = void 0;
                    try {
                        for (var n, s = (0,
                                u.default)((0,
                                a.default)(this.houseNumberSets)); !(e = (n = s.next()).done); e = !0)
                            for (var r = n.value, o = this.houseNumberSets[r], l = 0; l < o.numbers.length; l++) {
                                var d = o.numbers[l];
                                this.createHouseNumber(d)
                            }
                    } catch (e) {
                        t = !0,
                            i = e
                    } finally {
                        try {
                            !e && s.return && s.return()
                        } finally {
                            if (t)
                                throw i
                        }
                    }
                    return this.drawFogOfWar(),
                        this.drawEditArea(),
                        this.drawSegments()
                }
            },
            drawSegments: function() {
                var e = this,
                    t = this.segments.map(function(t) {
                        return new OL.Feature.Vector(t.geometry.clone(), {}, e.segmentStyle.fill)
                    });
                return this.layer.addFeatures(t)
            },
            drawEditArea: function() {
                var e = this;
                return this.editAreas = function() {
                        var t = [],
                            i = !0,
                            n = !1,
                            s = void 0;
                        try {
                            for (var r, o = (0,
                                    u.default)((0,
                                    a.default)(e.houseNumberSets)); !(i = (r = o.next()).done); i = !0) {
                                var l = r.value,
                                    d = e.houseNumberSets[l];
                                t.push(new OL.Feature.Vector(d.editArea, {}, e.editAreaStyle))
                            }
                        } catch (e) {
                            n = !0,
                                s = e
                        } finally {
                            try {
                                !i && o.return && o.return()
                            } finally {
                                if (n)
                                    throw s
                            }
                        }
                        return t
                    }(),
                    this.layer.addFeatures(this.editAreas)
            },
            createHouseNumber: function(e) {
                var t = this;
                e.calculateProjection(this.joinedGeometry);
                var i = new c.default(e, new OL.LonLat(e.geometry.x, e.geometry.y), this.map);
                return this.markerLayer.addMarker(i),
                    i.events.register("click:input", this, this.onMarkerClick),
                    i.events.register("change:number", this, this.onValueChanged),
                    i.events.register("delete", this, this.onMarkerDelete),
                    i.events.register("unselect", null, function() {
                        return t.unselectNumber(t.selectedNumber)
                    }),
                    i.events.register("drag", this, this.onDrag),
                    i.events.register("dragEnd", this, this.onDragEnd),
                    i.layer = this.markerLayer,
                    i
            },
            onValueChanged: function(e) {
                var t = e.number,
                    i = e.object;
                if (i.isNew && "" !== t)
                    i.model.number = t,
                    delete i.isNew,
                    i.model.geometry = new OL.Geometry.Point(i.lonlat.lon, i.lonlat.lat),
                    this.model.actionManager.add(new y.AddHouseNumber(i.model.parent, i.model));
                else if ("" !== t)
                    return this.model.actionManager.add(new v.default(i.model.parent, i.model, {
                        number: t,
                        forced: !1,
                        valid: !0
                    }))
            },
            onMarkerDelete: function(e) {
                var t = e.object;
                return this.unselectNumber(t),
                    t.isNew ? this.cancelAdd() : this.model.actionManager.add(new y.DeleteHouseNumber(t.model.parent, t.model))
            },
            onMarkerClick: function(e) {
                var t = e.object;
                return this.selectNumber(t)
            },
            selectNumber: function(e) {
                if (this.enabled && this.selectedNumber !== e) {
                    this.unselectNumber(this.selectedNumber),
                        this.selectedNumber = e;
                    var t = this.selectedNumber.model.fractionPoint.clone();
                    return this.fractionPoint = new A.default(new OL.LonLat(t.x, t.y), this.joinedGeometry, this.map),
                        this.markerLayer.addMarker(this.fractionPoint),
                        this.fractionPoint.dragging.activate(this.fractionPoint.icon.$div),
                        this.fractionPoint.layer = this.markerLayer,
                        this.selectedNumber.icon.bringToFront(),
                        this.selectedNumber.focus(),
                        this.selectedNumber.setActive(!0),
                        this.selectedNumber.dragging.activate(this.selectedNumber.icon.$div.find(".drag-handle")),
                        this.originalGeometry = this.selectedNumber.model.geometry.clone(),
                        this.fractionPoint.events.register("dragEnd", this, this.onFractionPointDragEnd),
                        this.fractionPoint.events.register("drag", this, this.onFractionPointDrag),
                        this.lightboxView.setLastEditedUser(this.selectedNumber.model.updatedBy),
                        this.fractionLine = new OL.Feature.Vector(new OL.Geometry.LineString([new OL.Geometry.Point(t.x, t.y), new OL.Geometry.Point(this.originalGeometry.x, this.originalGeometry.y)]), {}, this.fractionLineStyle),
                        this.fractionLinePadding = new OL.Feature.Vector(new OL.Geometry.LineString([new OL.Geometry.Point(t.x, t.y), new OL.Geometry.Point(this.originalGeometry.x, this.originalGeometry.y)]), {}, this.fractionLinePaddingStyle),
                        this.layer.addFeatures([this.fractionLinePadding, this.fractionLine])
                }
            },
            onFractionPointDrag: function() {
                return this.fractionLine.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLine.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionLinePadding.geometry.components[0].x = this.fractionPoint.lonlat.lon,
                    this.fractionLinePadding.geometry.components[0].y = this.fractionPoint.lonlat.lat,
                    this.fractionPoint.icon.forceReflow(),
                    this.layer.drawFeature(this.fractionLinePadding),
                    this.layer.drawFeature(this.fractionLine)
            },
            onFractionPointDragEnd: function() {
                var e = this,
                    t = new OL.Geometry.Point(this.fractionPoint.lonlat.lon, this.fractionPoint.lonlat.lat);
                this.selectedNumber.isNew ? this.selectedNumber.model.fractionPoint = t : this.ignoreUpdates(function() {
                    var t = new E.default;
                    e.model.actionManager.add(t);
                    var i = e.houseNumberSets[e.fractionPoint.closestSegment.getID()],
                        n = new y.UpdateFractionPoint(e.selectedNumber.model, i, e.fractionPoint);
                    return t.doSubAction(n),
                        e.selectedNumber.model = n.newHouseNumber,
                        t.doSubAction(new v.default(e.selectedNumber.model.parent, e.selectedNumber.model, {
                            forced: !1,
                            valid: !0
                        })),
                        e.selectedNumber.setValid(!0),
                        e.selectedNumber.setForced(!1)
                })
            },
            ignoreUpdates: function(e) {
                this.updating = !0,
                    e(),
                    this.updating = !1
            },
            unselectNumber: function(e) {
                if (null != e) {
                    if (e.dragging.deactivate(),
                        e.setActive(!1),
                        this.selectedNumber = null,
                        this.lightboxView.setLastEditedUser(null),
                        this.fractionPoint && (this.fractionPoint.events.unregister("dragEnd", this, this.onFractionPointDragEnd),
                            this.fractionPoint.events.unregister("drag", this, this.onFractionPointDrag),
                            this.markerLayer.removeMarker(this.fractionPoint)),
                        this.fractionLine && this.layer.destroyFeatures([this.fractionLine, this.fractionLinePadding]),
                        "" === e.input.val()) {
                        if (e.isNew)
                            return this.markerLayer.removeMarker(e);
                        var t = e.input.get(0).valueAsNumber;
                        return isNaN(t) ? e.input.val(e.model.number) : this.model.actionManager.add(new y.DeleteHouseNumber(e.model.parent, e.model))
                    }
                    return e.isNew ? (e.model.number = e.input.val(),
                        delete e.isNew,
                        this.model.actionManager.add(new y.AddHouseNumber(e.model.parent, e.model))) : void 0
                }
            },
            onAddClicked: function() {
                if (!this.adding && this.enabled) {
                    this.adding = !0;
                    var e = new p.default({
                            number: "",
                            geometry: new OL.Geometry.Point(0, 0),
                            fractionPoint: new OL.Geometry.Point(0, 0),
                            forced: !1
                        }),
                        t = this.createHouseNumber(e);
                    return e.parent = this.houseNumberSets[e.closestSegment.getID()],
                        t.setNew(!0),
                        t.isNew = !0,
                        t.dragging.forceStart(),
                        this.selectNumber(t),
                        t.events.register("click:input", this, this.onAddEnd)
                }
            },
            cancelAdd: function() {
                if (this.adding)
                    return this.adding = !1,
                        this.selectedNumber.dragging.forceEnd(),
                        this.unselectNumber(this.selectedNumber)
            },
            onAddEnd: function(e) {
                var t = e.object,
                    i = new OL.Geometry.Point(t.lonlat.lon, t.lonlat.lat);
                if (this.editAreas.some(function(e) {
                        return e.geometry.containsPoint(i)
                    }))
                    return this.adding = !1,
                        t.dragging.forceEnd(),
                        t.model.geometry = i,
                        t.model.fractionPoint = t.model.getFractionFromProjection(),
                        t.model.parent = this.houseNumberSets[t.model.closestSegment.getID()],
                        t.setNew(!1),
                        t.events.unregister("click:input", this, this.onAddEnd),
                        t.focus()
            },
            onMapClick: function(e) {
                if (null != this.selectedNumber)
                    return this.unselectNumber(this.selectedNumber)
            },
            activate: function() {
                if (!this.active)
                    return this.active = !0,
                        this._editingLock = W.editingMediator.lockEditing(),
                        this.map.showLightbox(this.lightboxView),
                        this.map.events.register("click", this, this.onMapClick),
                        this.map.events.register("moveend", this, this.drawFogOfWar),
                        this.map.events.register("zoomend", this, this.onZoomChanged),
                        this.onZoomChanged(),
                        this.model.houseNumbers.on("objectschanged", this.render, this),
                        W.commands.execute("save:setHandler", this.saveChanges, this)
            },
            onDestroy: function() {
                return this.deactivate(),
                    this.lightboxView.destroy(),
                    this.map.removeLayer(this.layer),
                    this.map.removeLayer(this.markerLayer)
            },
            deactivate: function() {
                if (this.active)
                    return this.active = !1,
                        W.editingMediator.releaseEditing(this._editingLock),
                        this._editingLock = null,
                        this.model.actionManager.clear(),
                        this.map.events.unregister("click", this, this.onMapClick),
                        this.map.events.unregister("moveend", this, this.drawFogOfWar),
                        this.map.events.unregister("zoomend", this, this.onZoomChanged),
                        this.model.houseNumbers.off("objectschanged", this.render, this),
                        this.reset(),
                        W.commands.execute("save:restoreDefaultHandler")
            },
            drawFogOfWar: function() {
                return this.fogOfWar && this.layer.destroyFeatures(this.fogOfWar),
                    this.fogOfWar = new OL.Feature.Vector(this.map.getExtent().toGeometry(), {}, {
                        fillColor: "black",
                        fillOpacity: .5,
                        strokeWidth: 0,
                        mask: "url(#HNAreaMask)"
                    }),
                    this.layer.addFeatures(this.fogOfWar),
                    this.layer.redraw()
            },
            onSave: function() {
                return this.saveChanges()
            },
            saveChanges: function() {
                var e = this;
                return this.unselectNumber(this.selectedNumber),
                    this.enabled = !1,
                    this.lightboxView.disable(),
                    this.lightboxView.setLoading(!0),
                    W.editingMediator.set({
                        navigation: !1
                    }),
                    W.controller.save().done(function() {
                        return e.onSaveSuccess()
                    }).fail(function(t) {
                        return e.onSaveFail(t)
                    }).always(function() {
                        return e.lightboxView.setLoading(!1),
                            W.editingMediator.set({
                                navigation: !0
                            })
                    })
            },
            onSaveFail: function(e) {
                var t = e[0];
                if (t.get("code") === this.HOUSE_NUMBERS_SAVE_ERROR_CODE) {
                    if (this.invalidHouseNumbers = t.get("objects"),
                        this.showingForceDialog = !0,
                        this.lightboxView.showForceMessage(),
                        null != this.invalidHouseNumbers)
                        for (var i = 0; i < this.invalidHouseNumbers.length; i++) {
                            var n = this.invalidHouseNumbers[i],
                                s = this.houseNumberSets[n.segID].getNumber(n.id);
                            n.model = s,
                                s.valid = !1,
                                s.invalidCode = n.errorType
                        }
                } else
                    this.lightboxView.showSaveErrorMessage();
                return this.render()
            },
            onSaveSuccess: function() {
                return this.enabled = !0,
                    this.lightboxView.enable(),
                    this.lightboxView.showSuccessMessage(),
                    this._setupSegments()
            },
            editingAllowedInZoom: function() {
                return this.map.getZoom() >= W.Config.houseNumbers.minEditZoom
            },
            onZoomChanged: function() {
                return $(this.markerLayer.div).toggleClass("preview", !this.editingAllowedInZoom()),
                    this.editingAllowedInZoom() || (this.cancelAdd(),
                        this.unselectNumber(this.selectedNumber)),
                    this.lightboxView.render()
            },
            canForcedInvalid: function() {
                return (0,
                    r.default)(this.houseNumberSets).every(function(e) {
                    var t = e.getSegment();
                    return null != t && t.canForceHouseNumbers()
                })
            },
            continueEditing: function() {
                return this.enabled = !0,
                    this.showingForceDialog = !1,
                    this.lightboxView.enable()
            },
            forceInvalid: function() {
                var e = this;
                return this.showingForceDialog = !1,
                    this.invalidHouseNumbers.isEmpty() || this.ignoreUpdates(function() {
                        var t = new E.default;
                        return e.model.actionManager.add(t),
                            e.invalidHouseNumbers.map(function(e) {
                                return t.doSubAction(new v.default(e.model.parent, e.model, {
                                    forced: !0
                                }))
                            })
                    }),
                    this.saveChanges()
            },
            CLASS_NAME: "W.Control.HouseNumbers"
        });
    t.default = I,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        o = i(105),
        a = n(o),
        l = i(24),
        u = n(l),
        d = OL.Class(OL.Marker, {
            model: null,
            input: null,
            ENTER: 13,
            ESC: 27,
            dragging: null,
            hasTooltip: !1,
            initialize: function(e, t, i) {
                var n = this;
                this.map = i,
                    this.model = e;
                var s = new r.default("house-number");
                OL.Marker.prototype.initialize.call(this, t, s),
                    this.render(),
                    this.input = this.icon.$div.find("input"),
                    this.inputWrapper = this.icon.$div.find(".input-wrapper"),
                    this.icon.$div.find(".input-wrapper, .drag-handle").on("click", function(e) {
                        return n.events.triggerEvent("click:input"), !1
                    }),
                    this.input.on("click", function() {
                        return n.input.focus()
                    }),
                    this.input.on("dblclick", function(e) {
                        return e.stopPropagation()
                    }),
                    this.input.on("mousedown", function(e) {
                        return e.stopPropagation()
                    }),
                    this.input.on("keydown", this.forceNumeric),
                    this.input.on("keyup", function(e) {
                        if (e.which === n.ESC)
                            return e.stopPropagation(),
                                n.input.blur(),
                                n.events.triggerEvent("unselect")
                    }),
                    this.input.on("change", function() {
                        return n.events.triggerEvent("change:number", {
                            number: n.input.val()
                        })
                    }),
                    this.inputWrapper.find(".delete-button").on("click", function() {
                        return n.events.triggerEvent("delete")
                    });
                for (var o = ["change:number", "delete", "drag", "dragEnd", "unselect", "click:input"], l = 0; l < o.length; l++) {
                    var u = o[l];
                    this.events.addEventType(u)
                }
                this.dragging = new a.default(this.map),
                    this.dragging.move = function(e) {
                        return n.destroyTooltip(),
                            n.lonlat = n.map.getLonLatFromViewPortPx(e.xy),
                            n.layer.drawMarker(n),
                            n.model.geometry.x = n.lonlat.lon,
                            n.model.geometry.y = n.lonlat.lat,
                            n.events.triggerEvent("drag", {
                                xy: e.xy,
                                marker: n
                            })
                    },
                    this.dragging.done = function(e) {
                        return n.createTooltip(),
                            n.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: n
                            })
                    },
                    this.createTooltip()
            },
            createTooltip: function() {
                if (!1 === this.model.valid && !this.hasTooltip)
                    return this.hasTooltip = !0,
                        this.inputWrapper.tooltip({
                            title: I18n.t("edit.house_numbers.errors")[this.model.invalidCode],
                            placement: "bottom"
                        })
            },
            destroyTooltip: function() {
                this.hasTooltip && this.inputWrapper.tooltip("destroy"),
                    this.hasTooltip = !1
            },
            destroy: function() {
                return this.destroyTooltip()
            },
            focus: function() {
                return this.input.focus(),
                    this.input.val(this.input.val())
            },
            select: function(e) {
                e.stopPropagation(),
                    this.input.focus()
            },
            render: function() {
                return this.icon.$div.html(u.default.getHTML("templates/house-number", this.model))
            },
            setActive: function(e) {
                return this.icon.$div.find(".content").toggleClass("active", e)
            },
            setNew: function(e) {
                return this.icon.$div.find(".content").toggleClass("new", e)
            },
            setValid: function(e) {
                e && this.destroyTooltip();
                var t = this.icon.$div.find(".content");
                return t.removeClass("valid-" + !e),
                    t.addClass("valid-" + e)
            },
            setForced: function(e) {
                var t = this.icon.$div.find(".content");
                return t.removeClass("forced-" + !e),
                    t.addClass("forced-" + e)
            },
            updateSide: function() {
                return this.inputWrapper.toggleClass("side-left", this.model.isLeft)
            },
            forceNumeric: function(e) {
                var t = e.which,
                    i = 65 === t && (e.ctrlKey || e.metaKey);
                return !!((!e.shiftKey && !e.altKey && !e.ctrlKey || i) && t >= 48 && t <= 57 || t >= 97 && t <= 122 || t >= 65 && t <= 90 || 32 === t || 191 === t || 189 === t || t >= 96 && t <= 105 || 8 === t || 9 === t || 13 === t || 35 === t || 36 === t || 37 === t || 39 === t || 46 === t || 45 === t || i)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(891),
        r = n(s),
        o = i(16),
        a = n(o),
        l = OL.Class(r.default, {
            loadingAnimation: null,
            toolbar: null,
            disabled: !1,
            template: "house-numbers-lightbox",
            events: {
                "click .add": "addClicked",
                "click .undo": "undoClicked",
                "click .redo": "redoClicked",
                "click .save": "saveClicked",
                "click .cancel": "cancelClicked",
                "click .continue-editing": "onContinueEditingClicked",
                "click .force-invalid": "onForceInvalidClicked"
            },
            initialize: function(e) {
                r.default.prototype.initialize.apply(this, arguments)
            },
            render: function() {
                if (r.default.prototype.render.apply(this, arguments),
                    this.toolbar = this.$el.find(".toolbar"),
                    this.loadingAnimation = this.$el.find(".loading-animation"),
                    this.zoomMessage = this.$el.find(".zoom-message"),
                    this.lastEditedUsername = this.$el.find(".last-edited"),
                    null !== this.pm.selectedNumber ? this.setLastEditedUser(this.pm.selectedNumber.model.updatedBy) : this.setLastEditedUser(null),
                    this.pm.showingForceDialog)
                    return this.showForceMessage()
            },
            registerEvents: function() {
                var e = this;
                return this.model.actionManager.events.on({
                        afteraction: this.render,
                        afterundoaction: this.render,
                        afterclearactions: this.render,
                        scope: this
                    }),
                    W.accelerators.events.register("editHouseNumbers", this, this.editHouseNumbersShortcutClicked),
                    W.accelerators.events.register("save", this, this.saveClicked),
                    $(document).on("keyup.house-numbers-lightbox", function(t) {
                        if (27 === t.which)
                            return e.confirmClose()
                    })
            },
            unregisterEvents: function() {
                return this.model.actionManager.events.un({
                        afteraction: this.render,
                        afterundoaction: this.render,
                        afterclearactions: this.render,
                        scope: this
                    }),
                    W.accelerators.events.unregister("editHouseNumbers", this, this.editHouseNumbersShortcutClicked),
                    W.accelerators.events.unregister("save", this, this.saveClicked),
                    $(document).off("keyup.house-numbers-lightbox")
            },
            show: function() {
                return r.default.prototype.show.apply(this, arguments),
                    this.render(),
                    this.registerEvents()
            },
            undoClicked: function() {
                return this.model.actionManager.undo()
            },
            redoClicked: function() {
                return this.model.actionManager.redo()
            },
            saveClicked: function() {
                return this.onSave()
            },
            addClicked: function() {
                return this.onAdd()
            },
            cancelClicked: function() {
                return this.confirmClose()
            },
            onClickout: function() {
                return this.confirmClose()
            },
            editHouseNumbersShortcutClicked: function(e) {
                return this.onAdd()
            },
            confirmClose: function() {
                var e = !0;
                if (this.model.actionManager.canSave() && (e = window.confirm(I18n.t("edit.unsaved_changes"))),
                    e)
                    return this.close()
            },
            close: function() {
                return this.unregisterEvents(),
                    r.default.prototype.close.apply(this, arguments)
            },
            onSave: function() {},
            onAdd: function() {},
            setLoading: function(e) {
                return this.toolbar.toggle(!e),
                    this.loadingAnimation.toggle(e)
            },
            showSuccessMessage: function() {
                return this.$el.find(".success-message").fadeIn().delay(3e3).fadeOut()
            },
            showErrorMessage: function() {
                return this.$el.find(".error-message").show()
            },
            showSaveErrorMessage: function() {
                return this.$el.find(".save-error-message").show()
            },
            showForceMessage: function() {
                return this.$el.find(".force-message").show()
            },
            setLastEditedUser: function(e) {
                e ? (this.lastEditedUsername.show(),
                    this.lastEditedUsername.find(".username").text(a.default.formatUserName(e))) : this.lastEditedUsername.hide()
            },
            disable: function() {
                return this.disabled = !0,
                    this.render()
            },
            enable: function() {
                return this.disabled = !1,
                    this.render()
            },
            serialize: function() {
                return this
            },
            onForceInvalidClicked: function() {
                return this.pm.forceInvalid()
            },
            onContinueEditingClicked: function() {
                return this.pm.continueEditing()
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(34),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class(s.default, {
            initialize: function(e) {
                this.$el = $("#map-lightbox .content"),
                    this._clickoutHandler = this.onClickout.bind(this),
                    this._overlay = $("#map-lightbox .overlay"),
                    s.default.prototype.initialize.apply(this, arguments),
                    this._overlay.on("click", this._clickoutHandler)
            },
            onClose: function(e) {
                e && e.preventDefault(),
                    this.close()
            },
            onClickout: function() {
                this.close()
            },
            close: function() {
                $("#map-lightbox").hide(),
                    this.olEvents.triggerEvent("closed")
            },
            render: function() {
                s.default.prototype.render.apply(this, arguments),
                    $("#map-lightbox").show()
            },
            destroy: function() {
                this._overlay.off("click", this._clickoutHandler),
                    s.default.prototype.destroy.apply(this, arguments)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(19),
        r = n(s),
        o = i(105),
        a = n(o),
        l = OL.Class(OL.Marker, {
            dragging: null,
            dragConstraint: null,
            closestSegment: null,
            initialize: function(e, t, i) {
                var n = this;
                this.map = i;
                var s = new r.default("fraction-point");
                OL.Marker.prototype.initialize.call(this, e, s),
                    this.dragConstraint = t;
                for (var o = ["drag", "dragEnd"], l = 0; l < o.length; l++) {
                    var u = o[l];
                    this.events.addEventType(u)
                }
                this.dragging = new a.default(this.map),
                    this.dragging.down = function(e) {
                        return n.icon.$div.addClass("dragging")
                    },
                    this.dragging.move = function(t) {
                        e = n.map.getLonLatFromViewPortPx(t.xy);
                        var i = n.dragConstraint.distanceTo(new OL.Geometry.Point(e.lon, e.lat), {
                            details: !0
                        });
                        return n.lonlat = new OL.LonLat(i.x0, i.y0),
                            n.closestSegment = i.model,
                            n.layer.drawMarker(n),
                            n.events.triggerEvent("drag", {
                                xy: t.xy,
                                marker: n
                            })
                    },
                    this.dragging.done = function(e) {
                        return n.icon.$div.removeClass("dragging"),
                            n.events.triggerEvent("dragEnd", {
                                xy: e ? e.xy : null,
                                marker: n
                            })
                    },
                    this.icon.$div.on("click", function() {
                        return !1
                    })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(894),
        r = n(s),
        o = i(24),
        a = n(o),
        l = Marionette.View.extend({
            template: "templates/segment/tts-playback",
            className: "tts-playback",
            ui: {
                ttsButton: ".tts-button"
            },
            events: {
                "click .play-button": "_playButtonClicked"
            },
            modelEvents: {
                "change:isEmpty": "render",
                "change:country": "render"
            },
            _ttsPlayer: null,
            initialize: function() {
                this._ttsPlayer = new r.default
            },
            _playButtonClicked: function() {
                var e = this._getSelectedTTSLocale();
                return this._ttsPlayer.sayStreetName(this.model, e)
            },
            _getSelectedTTSLocale: function() {
                return this.$el.find(".locale-select option:selected").val()
            },
            onRender: function() {
                var e = this.model.getTTSLocales();
                return this.ui.ttsButton.popover({
                    html: !0,
                    content: a.default.getHTML("templates/segment/tts-playback-popover", {
                        locales: e
                    }),
                    placement: "bottom"
                })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(11),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OL.Class({
            initialize: function() {},
            sayStreetName: function(e, t) {
                var i = e.get("name"),
                    n = e.get("lonlat");
                if (null === i || 0 !== i.length) {
                    var s = {
                        text: " " + i + " ",
                        lang: t
                    };
                    null !== n && _.extend(s, this._getLocationOptions(n)),
                        s = _.defaults(s, W.Config.tts.options);
                    var o = W.Config.tts.url + "?" + $.param(s);
                    return r._getCachedAudioElement().attr("src", o)
                }
            },
            _getLocationOptions: function(e) {
                return e = e.clone(),
                    s.default.unproject(e), {
                        lon: e.lon,
                        lat: e.lat
                    }
            }
        });
    r._cachedAudioElement = null,
        r._getCachedAudioElement = function() {
            return null != this._cachedAudioElement ? this._cachedAudioElement : this._cachedAudioElement = $("<audio />").attr("autoplay", !0)
        },
        t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            name: null,
            isEmpty: !1,
            lonlat: null,
            country: null
        },
        getTTSLocales: function() {
            var e = this.get("country");
            return null !== e && e.ttsLocales ? e.ttsLocales : [W.Config.tts.default_locale]
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(897),
        r = n(s),
        o = i(901),
        a = n(o),
        l = i(902),
        u = n(l),
        d = Marionette.View.extend({
            template: "templates/sidebar/user-info",
            className: "flex-parent",
            ui: {
                feedContainer: "#sidepanel-feed",
                feedRefresh: ".feed-refresh"
            },
            regions: {
                userDetailsRegion: "#user-details",
                preferencesRegion: "#sidepanel-prefs"
            },
            initialize: function(e) {
                this.user = this.model.get("user"),
                    this.feedControl = e.feedControl
            },
            onRender: function() {
                var e = this;
                return this.showChildView("preferencesRegion", new u.default({
                        model: W.prefs
                    })),
                    this.showChildView("userDetailsRegion", new a.default({
                        model: this.user
                    })),
                    this.feedControl.render({
                        el: this.ui.feedContainer
                    }),
                    $(this.ui.feedRefresh).click(function() {
                        return e.feedControl.refresh()
                    })
            },
            onAttach: function() {
                this.archiveControl = new r.default,
                    W.map.addControl(this.archiveControl),
                    this.archiveControl.activate(),
                    this.archiveControl.reset()
            },
            onDestroy: function() {
                this.archiveControl = null,
                    this.preferencesView && this.preferencesView.destroy(),
                    this.preferencesView = null
            },
            serializeData: function() {
                return {
                    user: this.model.get("user")
                }
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(30),
        s = i(898),
        r = i(899),
        o = i(900),
        a = OpenLayers.Class(OpenLayers.Control, n, {
            sidePanelView: null,
            editableAreasListView: null,
            layerView: null,
            panelView: null,
            editableAreasLayer: null,
            model: null,
            currentSessionList: null,
            currentSessionData: null,
            currentSession: null,
            currentUser: null,
            editableAreas: null,
            initialize: function() {
                OpenLayers.Control.prototype.initialize.apply(this, arguments),
                    this.sidePanelView = new s($("#sidepanel-drives")),
                    this.editableAreasListView = new o($("#sidepanel-areas")),
                    this.layerView = W.map.archiveLayer,
                    this.editableAreasLayer = W.map.userLayer,
                    this.layerView.pm = this,
                    this.model = W.model,
                    this._createEditableAreas()
            },
            _createEditableAreas: function() {
                var e = this.model.loginManager.user;
                this.editableAreas = e.areas.map(function(e, t) {
                    var i = _.extend({}, e, {
                        num: t
                    });
                    return new Backbone.Model(i)
                })
            },
            registerListeners: function() {
                this.sidePanelView.events.on({
                        shown: this.onSessionsListShown,
                        sessionClicked: this.onSessionClicked,
                        paginationLinkClicked: this.onPaginationLinkClicked,
                        searchSubmitted: this.onSearchSubmitted,
                        scope: this
                    }),
                    this.editableAreasListView.events.on({
                        areaClicked: this.onAreaClicked,
                        areasPaginationLinkClicked: this.onAreasPaginationLinkClicked,
                        scope: this
                    })
            },
            reset: function(e) {
                this.currentSessionList = null,
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.loadSessions(-1),
                    this.sidePanelView.reset(),
                    this.loadEditableAreas(),
                    this.layerView.clearDrive()
            },
            activate: function() {
                OpenLayers.Control.prototype.activate.apply(this, arguments),
                    this.registerListeners()
            },
            show: function() {
                this.sidePanelView.events.triggerEvent("shown")
            },
            onSessionsListShown: function(e) {
                null === this.currentSessionList && (this.loadSessions(0),
                    W.Report.generalAction("userdrive_clicked"))
            },
            onPaginationLinkClicked: function(e) {
                this.loadSessions(e.index)
            },
            onAreasPaginationLinkClicked: function(e) {
                var t = this.editableAreasListView.ResultsPerPage,
                    i = e.index,
                    n = this.editableAreas.slice(i * t, (i + 1) * t);
                this.editableAreasListView.setEditableAreasPage(n)
            },
            loadEditableAreas: function() {
                var e = this.model.loginManager.user,
                    t = [];
                e && (t = e.areas || []),
                    this.editableAreasListView.setEditableAreas(t.length),
                    this.onAreasPaginationLinkClicked({
                        index: 0
                    })
            },
            loadSessions: function(e) {
                var t = this;
                if (!this.model.loginManager.user || -1 === e)
                    return void this.sidePanelView.setSessions(0);
                this.sidePanelView.setLoading(!0);
                var i = {
                    minDistance: 1e3,
                    offset: e * this.sidePanelView.ResultsPerPage,
                    count: this.sidePanelView.ResultsPerPage
                };
                null !== this.currentUser && (i.username = this.currentUser),
                    this.model.archives.get(null, i).done(function(e) {
                        var i = t.model.archives.additionalInfo.totalSessions;
                        null === t.currentSessionList && t.sidePanelView.setSessions(i),
                            t.sidePanelView.setSessionsPage(e, t.currentUser, t.model.loginManager.user.isStaff),
                            t.currentSessionList = e
                    }).always(function() {
                        t.sidePanelView.setLoading(!1)
                    }).fail(function() {
                        t.sidePanelView.showError()
                    })
            },
            onAreaClicked: function(e) {
                var t = this.model.loginManager.user.areas[e.areaIndex];
                this.editableAreasLayer.setVisibility(!0),
                    this.ZoomToEditableArea(t)
            },
            ZoomToEditableArea: function(e) {
                var t = e.geometry.getBounds(),
                    i = this.map.getZoomForExtent(t);
                this.map.setCenter(t.getCenterLonLat(), i)
            },
            onSessionClicked: function(e) {
                var t = this;
                $.when(this.model.archives.get(e.id), this.model.archiveSessions.get(e.id)).then(function(i, n) {
                    t.currentSession = i,
                        t.sidePanelView.setSelectedSession(e.id),
                        $.isArray(n) && (n = n.first()),
                        t.currentSessionData = n,
                        null !== t.panelView && (t.panelView.off(),
                            t.panelView.destroy()),
                        t.panelView = new r({
                            model: n
                        }),
                        t.panelView.on("destroy", t.onPanelClosed, t),
                        W.map.panelRegion.show(t.panelView),
                        t.layerView.drawDrive(),
                        t.layerView.zoomToDrive()
                })
            },
            onSearchSubmitted: function(e) {
                e.username ? this.currentUser = e.username : this.currentUser = null,
                    this.currentSessionList = null,
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.loadSessions(0),
                    this.sidePanelView.reset(),
                    this.loadEditableAreas(),
                    this.layerView.clearDrive()
            },
            onPanelClosed: function() {
                this.sidePanelView.setSelectedSession(null),
                    this.currentSessionData = null,
                    this.currentSession = null,
                    this.layerView.clearDrive()
            },
            disable: function() {
                n.prototype.disable.apply(this, arguments),
                    this.onPanelClosed()
            },
            CLASS_NAME: "Waze.Control.Archive"
        });
    e.exports = a
}, function(e, t, i) {
    "use strict";
    var n = i(24),
        s = OpenLayers.Class({
            ResultsPerPage: 5,
            $element: null,
            events: null,
            initialize: function(e) {
                this.events = new OpenLayers.Events(this),
                    this.$element = e,
                    this.render()
            },
            render: function() {
                var e = this;
                this.$element.delegate(".result", "click", function() {
                        var t = this.dataset.id;
                        $(this).hasClass("session-available") && e.events.triggerEvent("sessionClicked", {
                            id: t
                        })
                    }),
                    $('a[href="#' + this.$element.attr("id") + '"]').on("show.bs.tab", function() {
                        e.events.triggerEvent("shown")
                    })
            },
            destroy: function() {
                this.events.destroy()
            },
            setLoading: function(e) {
                e ? (this.$element.find(".result-list-container").empty(),
                    this.$element.find(".pagination").addClass("loading"),
                    this.$element.find(".loading-animation").removeClass("hide")) : (this.$element.find(".pagination").removeClass("loading"),
                    this.$element.find(".loading-animation").addClass("hide"))
            },
            setSessions: function(e) {
                this.$element.find(".result-list-container").empty(),
                    this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                    this.$element.find(".pagination").pagination(e, {
                        callback: OpenLayers.Function.bind(this.onPaginationLinkClicked, this),
                        items_per_page: this.ResultsPerPage,
                        num_display_entries: this.ResultsPerPage - 1,
                        next_text: "",
                        prev_text: "",
                        num_edge_entries: 1,
                        ellipse_text: "..."
                    })
            },
            setSessionsPage: function(e, t, i) {
                var s = this;
                this.$element.find(".result-list-container").html(n.getHTML("templates/archive-sessions", {
                        sessions: e,
                        username: t,
                        isStaff: i
                    })),
                    this.$element.find(".sessions-search form").on("submit", function(e) {
                        e.preventDefault();
                        var t = $(e.target);
                        s.events.triggerEvent("searchSubmitted", {
                            username: t.find("input[name=username]").val()
                        })
                    })
            },
            setSelectedSession: function(e) {
                this.$element.find("#archive-sessions .result").removeClass("selected"),
                    null !== e && this.$element.find("#archive-sessions .result[data-id=" + e + "]").addClass("selected")
            },
            onPaginationLinkClicked: function(e) {
                this.events.triggerEvent("paginationLinkClicked", {
                    index: e
                })
            },
            onAreaPaginationLinkClicked: function(e) {
                this.events.triggerEvent("areasPaginationLinkClicked", {
                    index: e
                })
            },
            showError: function() {
                this.$element.find(".error").removeClass("hide")
            },
            reset: function() {},
            show: function() {},
            hide: function() {},
            CLASS_NAME: "Waze.View.Archive"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/archive-panel",
        serializeData: function() {
            return {
                fromAddress: this.model.fromLocation,
                toAddress: this.model.toLocation
            }
        },
        templateContext: {
            formatAddress: function(e) {
                var t = [e.city, e.street];
                return t = _.compact(t),
                    t.join(", ")
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(24),
        s = OpenLayers.Class({
            ResultsPerPage: 5,
            $element: null,
            events: null,
            initialize: function(e) {
                this.events = new OpenLayers.Events(this),
                    this.$element = e,
                    this.render()
            },
            render: function() {
                var e = this;
                this.$element.delegate(".result", "click", function() {
                    var t = $(this).data("index");
                    e.events.triggerEvent("areaClicked", {
                        areaIndex: t
                    })
                })
            },
            destroy: function() {
                this.events.destroy()
            },
            setLoading: function(e) {
                e ? (this.$element.find(".result-list-container").empty(),
                    this.$element.find(".pagination").addClass("loading")) : this.$element.find(".pagination").removeClass("loading")
            },
            setEditableAreas: function(e) {
                this.$element.find(".result-list-container").empty(),
                    this.$element.find(".pagination").toggle(e > this.ResultsPerPage),
                    this.$element.find(".pagination").pagination(e, {
                        callback: OpenLayers.Function.bind(this.onAreaPaginationLinkClicked, this),
                        items_per_page: this.ResultsPerPage,
                        num_display_entries: this.ResultsPerPage - 1,
                        next_text: "",
                        prev_text: "",
                        num_edge_entries: 1,
                        ellipse_text: "..."
                    })
            },
            setEditableAreasPage: function(e) {
                this.$element.find(".result-list-container").html(n.getHTML("templates/editable-areas", {
                    areas: e
                }))
            },
            onAreaPaginationLinkClicked: function(e) {
                this.events.triggerEvent("areasPaginationLinkClicked", {
                    index: e
                })
            },
            reset: function() {},
            show: function() {},
            hide: function() {},
            CLASS_NAME: "Waze.View.EditableAreas"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(24),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "templates/sidebar/user-details",
            events: {
                "click .logout-link": "_onLogoutClicked"
            },
            onRender: function() {
                return this.$el.find("#permissions-info").tooltip({
                    placement: "bottom",
                    title: s.default.getHTML("templates/sidebar/user-permissions-tooltip", this.model),
                    html: !0
                })
            },
            serializeData: function() {
                return this.model.getAttributes()
            },
            _onLogoutClicked: function() {
                return W.loginManager.logout()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(903),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Marionette.View.extend({
            template: "templates/prefs-panel",
            regions: {
                envSelectRegion: "#env-select"
            },
            events: {
                "change .language-select": "_onLanguageChange"
            },
            bindings: {
                "input[name=twoWayRoad]": "twoWaySegmentsByDefault",
                "input[name=turnsAllowed]": "enableTurnsByDefault",
                "input[name=requireDeselect]": "requireFeatureDeselect",
                "input[name=units-radio]": "isImperial"
            },
            onRender: function() {
                this.showChildView("envSelectRegion", new s.default),
                    this.stickit()
            },
            _onLanguageChange: function(e) {
                var t = $(e.target).val();
                return W.location.setLocale(t),
                    W.location.redirectToLocale()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/location-switcher",
        events: {
            "change select": "onLocationChanged"
        },
        onLocationChanged: function(e) {
            var t = $(e.target).val();
            if (t)
                return this.changeLocation(t)
        },
        changeLocation: function(e) {
            return W.location.changeAndRemovePermalink(e)
        },
        templateContext: {
            isCurrentEnv: function(e) {
                return W.location.code === e
            }
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "templates/sidebar/user-sandbox"
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(263),
        r = n(s),
        o = i(264),
        a = n(o),
        l = i(265),
        u = n(l),
        d = i(908),
        c = n(d),
        h = i(910),
        p = n(h),
        f = Marionette.Object.extend({
            initialize: function(e) {
                this.map = e.map,
                    this.controller = e.controller,
                    this.editingMediator = e.mediator,
                    this.actionManager = e.actionManager,
                    this.selectionManager = e.selectionManager,
                    this.dataModel = e.dataModel,
                    this.app = e.app,
                    this.loginManager = e.loginManager,
                    this.toolbarLayout = new r.default({
                        model: this.app
                    }),
                    this.listenTo(this.toolbarLayout, "render", this._onRender),
                    this.layerSwitcherController = new u.default({
                        map: this.map,
                        actionManager: this.actionManager,
                        togglerTree: e.togglerTree,
                        controller: this.controller
                    }),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            destroy: function() {
                return this.layerSwitcherController.destroy(),
                    this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            _onRender: function() {
                return this._initEditingToolbar(),
                    this.toolbarLayout.showChildView("layerSwitcher", this.layerSwitcherController.getLayout()),
                    this._setToolbarState(this.editingMediator.get("editingEnabled"))
            },
            _initEditingToolbar: function() {
                var e = new p.default({
                    actionManager: this.actionManager,
                    controller: this.controller,
                    map: this.map,
                    app: this.app,
                    selectionManager: this.selectionManager,
                    dataModel: this.dataModel,
                    loginManager: this.loginManager,
                    editingMediator: this.editingMediator
                });
                return this.toolbarCollectionView = new c.default({
                        collection: e.getToolbarButtons(),
                        map: this.map
                    }),
                    this.toolbarLayout.showChildView("toolbar", this.toolbarCollectionView)
            },
            _setToolbarState: function(e) {
                return this.enabled = e,
                    this.enabled ? (this.searchView = new a.default({
                            map: this.map
                        }),
                        this.toolbarLayout.showChildView("search", this.searchView),
                        this.searchView.enable(),
                        this.toolbarCollectionView.enable()) : (this.searchView && this.searchView.disable(),
                        this.toolbarLayout.getRegion("search").empty(),
                        this.toolbarCollectionView.disable())
            },
            _onEditingEnabledChanged: function() {
                return this._setToolbarState(this.editingMediator.get("editingEnabled"))
            }
        });
    t.default = f,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/LayerSwitcher/templates/layout",
        regions: {
            layersList: ".layer-switcher-container"
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(5),
        a = n(o),
        l = i(1),
        u = n(l),
        d = i(2),
        c = n(d),
        h = i(7),
        p = n(h),
        f = i(8),
        g = n(f),
        m = i(160),
        v = n(m),
        y = function(e) {
            function t() {
                return (0,
                        u.default)(this, t),
                    (0,
                        p.default)(this, (t.__proto__ || (0,
                        a.default)(t)).apply(this, arguments))
            }
            return (0,
                    g.default)(t, e),
                (0,
                    c.default)(t, [{
                    key: "ui",
                    value: function() {
                        return {
                            menu: ".menu"
                        }
                    }
                }, {
                    key: "events",
                    value: function() {
                        return {
                            "mouseenter .layer-switcher-container": "_show",
                            "mouseleave .layer-switcher-container": "_hide"
                        }
                    }
                }, {
                    key: "initialize",
                    value: function(e) {
                        this.state = e.state,
                            this.treeState = e.treeState,
                            this.viewState = new Backbone.Model({
                                showMoreOptions: !1,
                                visible: !1,
                                pinned: !1
                            }),
                            this._map = e.map,
                            this.stateBindings = this._getStateBindings(),
                            this.treeStateBindings = this._getTreeStateBindings(),
                            this._windowResizeCallback = this._setViewHeight.bind(this),
                            this._hideTimeout = null,
                            this.listenTo(this.viewState, "change:pinned", this._onPinnedChanged),
                            this._onPinnedChanged(),
                            $(window).on("resize", this._windowResizeCallback)
                    }
                }, {
                    key: "_onPinnedChanged",
                    value: function() {
                        this._map.toggleLayerSwitcherPinned(this.viewState.get("pinned"))
                    }
                }, {
                    key: "_show",
                    value: function() {
                        this._cancelHideTimer(),
                            this._toggleVisibility(!0)
                    }
                }, {
                    key: "_hide",
                    value: function() {
                        this.viewState.get("pinned") || this._startHideTimer()
                    }
                }, {
                    key: "_toggle",
                    value: function() {
                        this.viewState.get("visible") ? this._hide() : this._show()
                    }
                }, {
                    key: "_startHideTimer",
                    value: function() {
                        var e = this;
                        this._hideTimeout = window.setTimeout(function() {
                            e._toggleVisibility(!1),
                                e._cancelHideTimer()
                        }, 200)
                    }
                }, {
                    key: "_cancelHideTimer",
                    value: function() {
                        window.clearTimeout(this._hideTimeout),
                            this._hideTimeout = null
                    }
                }, {
                    key: "_toggleVisibility",
                    value: function(e) {
                        this.viewState.set("visible", e),
                            this.ui.menu.toggleClass("not-visible", !e)
                    }
                }, {
                    key: "onDestroy",
                    value: function() {
                        $(window).off("resize", this._windowResizeCallback)
                    }
                }, {
                    key: "_setViewHeight",
                    value: function() {
                        var e = $(".WazeMapFooter").offset().top - this.ui.menu.offset().top;
                        this.ui.menu.outerHeight(e)
                    }
                }, {
                    key: "_getTreeStateBindings",
                    value: function() {
                        return (0,
                            r.default)(this.treeState.attributes).reduce(function(e, t) {
                            return e[".toggler .layer-switcher-" + t.toLowerCase()] = {
                                    attributes: [{
                                        name: "disabled",
                                        observe: t,
                                        onGet: function(e) {
                                            return !e
                                        }
                                    }]
                                },
                                e
                        }, {})
                    }
                }, {
                    key: "_getStateBindings",
                    value: function() {
                        return (0,
                            r.default)(this.state.attributes).reduce(function(e, t) {
                            return e[".layer-switcher-" + t.toLowerCase()] = t,
                                e
                        }, {})
                    }
                }, {
                    key: "onRender",
                    value: function() {
                        this.stickit(this.state, this.stateBindings),
                            this.stickit(this.treeState, this.treeStateBindings),
                            this.stickit(this.viewState, this.viewStateBindings)
                    }
                }, {
                    key: "onAttach",
                    value: function() {
                        this._setViewHeight()
                    }
                }, {
                    key: "template",
                    get: function() {
                        return "Waze/Modules/LayerSwitcher/templates/layer-switcher"
                    }
                }, {
                    key: "className",
                    get: function() {
                        return "layer-switcher"
                    }
                }, {
                    key: "behaviors",
                    get: function() {
                        return {
                            accelerators: {
                                behaviorClass: v.default
                            }
                        }
                    }
                }, {
                    key: "accelerators",
                    get: function() {
                        return {
                            displayLayerSwitcher: "_toggle"
                        }
                    }
                }, {
                    key: "viewStateBindings",
                    get: function() {
                        return {
                            ".extended": {
                                observe: "showMoreOptions",
                                visible: !0
                            },
                            ".more-options-toggle .title": {
                                observe: "showMoreOptions",
                                onGet: function(e) {
                                    return e ? I18n.t("layer_switcher.more_options.hide") : I18n.t("layer_switcher.more_options.show")
                                }
                            },
                            ".more-options-toggle input[name=show-more-options]": "showMoreOptions",
                            "input[name=pinned]": "pinned",
                            ".menu": {
                                classes: {
                                    "not-visible": {
                                        observe: "visible",
                                        onGet: _.negate(_.identity)
                                    }
                                }
                            }
                        }
                    }
                }]),
                t
        }(Marionette.View);
    t.default = y,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(266),
        r = n(s),
        o = i(909),
        a = n(o),
        l = Marionette.CollectionView.extend({
            childView: r.default,
            itemGroupView: a.default,
            initialize: function(e) {
                this.map = e.map
            },
            buildChildView: function(e) {
                var t = {
                    model: e,
                    map: this.map
                };
                return null != e.children ? new this.itemGroupView(t) : new this.childView(t)
            },
            enable: function() {
                return this.children.invoke("enable")
            },
            disable: function() {
                return this.children.invoke("disable")
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(266),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            template: "Waze/Modules/Toolbar/templates/toolbar-item-group",
            enabled: !0,
            className: function() {
                var e = this.model.get("name"),
                    t = this.model.get("displayClass"),
                    i = void 0;
                return i = this.enabled && this._hasEnabledChildren() ? this._hasActiveChildren() ? "ItemActive" : "ItemInactive" : "ItemDisabled",
                    "toolbar-button " + t + " toolbar-submenu toolbar-group toolbar-group-" + e + " " + i
            },
            events: {
                mouseover: "_showMenu",
                mouseout: "_hideMenu"
            },
            childViewEvents: {
                controlTriggered: "_hideMenu"
            },
            childView: s.default,
            childViewContainer: "menu",
            collectionEvents: {
                "change:active": function(e, t) {
                    return this.setClassName()
                }
            },
            onRender: function() {
                return this.setClassName()
            },
            setClassName: function() {
                return this.$el.attr({
                    class: _.result(this, "className")
                })
            },
            _showMenu: function() {
                return this.$el.addClass("open")
            },
            _hideMenu: function() {
                return this.$el.removeClass("open")
            },
            _hasActiveChildren: function() {
                return this.model.children.some(function(e) {
                    return e.get("control").active
                })
            },
            _hasEnabledChildren: function() {
                return this.model.children.some(function(e) {
                    return e.get("control").enabled
                })
            },
            enable: function() {
                return this.children.invoke("enable"),
                    this.enabled = !0,
                    this.setClassName()
            },
            disable: function() {
                return this.children.invoke("disable"),
                    this.enabled = !1,
                    this.setClassName()
            },
            initialize: function(e) {
                var t = this;
                this.collection = this.model.children,
                    this.map = e.map,
                    this.childViewOptions = function(e, i) {
                        return {
                            parent: t.model,
                            map: t.map
                        }
                    }
            },
            buildChildView: function(e, t, i) {
                var n = _.extend({
                    model: e
                }, i);
                return new(e.get("childView") ? e.get("childView") : t)(n)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(911),
        r = n(s),
        o = i(912),
        a = n(o),
        l = i(913),
        u = n(l),
        d = i(914),
        c = n(d),
        h = i(915),
        p = n(h),
        f = i(268),
        g = n(f),
        m = i(269),
        v = n(m),
        y = i(916),
        b = n(y),
        E = i(917),
        w = n(E),
        S = i(270),
        M = n(S),
        C = i(53),
        T = n(C),
        A = i(77),
        I = n(A),
        O = i(95),
        L = function(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
                t
        }(O),
        D = i(135),
        k = n(D),
        R = i(130),
        x = n(R),
        P = i(82),
        N = n(P),
        V = i(26),
        U = n(V),
        j = i(106),
        z = n(j),
        F = i(271),
        B = n(F),
        G = OL.Class({
            initialize: function(e) {
                var t = this;
                this.actionManager = e.actionManager,
                    this.map = e.map,
                    this.selectionManager = e.selectionManager,
                    this.dataModel = e.dataModel,
                    this.controller = e.controller,
                    this.loginManager = e.loginManager,
                    this.editingMediator = e.editingMediator,
                    this.app = e.app,
                    this.app.on("change:loggedIn", function() {
                        t._enableControlsByRank(t.app.get("user"))
                    })
            },
            getToolbarButtons: function(e) {
                var t = U.default.getMenus().map(this.createMenu.bind(this)),
                    i = [].concat(t, this._generateVenueMenu(), this._generateDrawingControls(), this._generateEditingControls().reverse());
                return new B.default(i)
            },
            _enableControlsByRank: function(e) {
                W.Config.big_junctions.enable && this.drawBigJunction.control.setEnabled(null != e && this.loginManager.canEditBigJunctions())
            },
            _generateEditingControls: function() {
                return [{
                    title: I18n.t("toolbar.delete"),
                    control: new p.default(this.dataModel, {
                        displayClass: "waze-icon-trash"
                    })
                }, {
                    title: I18n.t("toolbar.redo"),
                    control: new u.default(this.actionManager, {
                        displayClass: "waze-icon-redo"
                    })
                }, {
                    title: I18n.t("toolbar.undo"),
                    control: new r.default(this.actionManager, {
                        displayClass: "waze-icon-undo"
                    })
                }, {
                    title: I18n.t("toolbar.save.title"),
                    control: new c.default(this.actionManager, {
                        editingMediator: this.editingMediator,
                        displayClass: "waze-icon-save"
                    })
                }, {
                    title: I18n.t("toolbar.reload"),
                    control: new a.default(this.actionManager, this.map.roadLayers, this.controller, {
                        displayClass: "waze-icon-reload"
                    })
                }]
            },
            _generateDrawingControls: function() {
                var e = this,
                    t = [{
                        title: I18n.t("drawing.road"),
                        control: new b.default(this.map.sketchLayer, this.map.segmentLayer, OL.Handler.Path, {
                            accelerator: "drawSegment",
                            enableSnapping: !0,
                            featureAdded: function(t, i, n) {
                                e.actionManager.add(new N.default(t, {
                                        createNodes: !0,
                                        openAllTurns: W.prefs.get("enableTurnsByDefault"),
                                        createTwoWay: W.prefs.get("twoWaySegmentsByDefault"),
                                        snappedFeatures: [i, n]
                                    })),
                                    _.defer(function() {
                                        return e.selectionManager.select([t])
                                    })
                            }
                        })
                    }, {
                        title: I18n.t("drawing.roundabout"),
                        control: new w.default({
                            onRoundaboutAdded: function(t) {
                                var i = new M.default(t);
                                e.actionManager.add(i),
                                    _.defer(function() {
                                        e.selectionManager.select(i.roundaboutSegments)
                                    })
                            }
                        })
                    }, {
                        title: I18n.t("drawing.camera"),
                        control: new b.default(this.map.sketchLayer, this.map.camerasLayer, OL.Handler.Point, {
                            enableSnapping: !0,
                            featureAdded: function(t) {
                                var i = new k.default({
                                    geometry: t.geometry
                                });
                                e.actionManager.add(new T.default(i, e.dataModel.cameras)),
                                    _.defer(function() {
                                        e.selectionManager.select([i])
                                    })
                            }
                        })
                    }];
                return W.Config.big_junctions.enable && (this.drawBigJunction = {
                        title: I18n.t("drawing.big_junction"),
                        control: new b.default(this.map.sketchLayer, this.map.bigJunctionLayer, OL.Handler.Polygon, {
                            accelerator: "drawBigJunction",
                            featureAdded: function(t) {
                                var i = new x.default({
                                    geometry: t.geometry
                                });
                                e.actionManager.add(new v.default(i)),
                                    _.defer(function() {
                                        e.selectionManager.select([i])
                                    })
                            }
                        })
                    },
                    t.push(this.drawBigJunction)), [{
                    name: "drawing",
                    displayClass: "waze-icon-road",
                    children: t
                }]
            },
            _generateVenueMenu: function() {
                var e = W.Config.venues.categories.map(this._generateVenueMenuItem.bind(this));
                return this.createMenu({
                    name: "venues",
                    displayClass: "waze-icon-place",
                    items: e
                })
            },
            _generateVenueMenuItem: function(e) {
                var t = function(t, i) {
                        var n = new I.default({
                            geometry: t,
                            categories: [e]
                        });
                        return i.actionManager.add(new g.default(n)),
                            n
                    },
                    i = {
                        primaryShape: "point",
                        secondaryShape: "polygon",
                        title: I18n.t("venues.categories." + e),
                        featureName: I18n.t("drawing.venue"),
                        layerUniqueName: z.default.LAYER_UNIQUE_NAMES.LANDMARKS,
                        createFeature: t
                    };
                return e === L.PARKING_LOT && (i.primaryShape = "polygon",
                        i.secondaryShape = null),
                    i
            },
            createMenu: function(e) {
                var t = this;
                return {
                    name: e.name,
                    displayClass: e.displayClass,
                    children: e.items.map(function(e) {
                        return t.createMenuItem(e)
                    })
                }
            },
            createMenuItem: function(e) {
                var t = this,
                    i = function(i) {
                        return i = e.createFeature(i.geometry, t.dataModel),
                            _.defer(function() {
                                return t.selectionManager.select([i])
                            })
                    },
                    n = this.map.getLayersBy("uniqueName", e.layerUniqueName)[0],
                    s = this.createDrawControl(e.primaryShape, n, i, e.enableSnapping),
                    r = void 0;
                return e.secondaryShape && (r = this.createDrawControl(e.secondaryShape, n, i, e.enableSnapping)), {
                    title: e.title,
                    featureName: e.featureName,
                    showDrawingControls: null != e.secondaryShape,
                    control: s,
                    secondaryControl: r
                }
            },
            createDrawControl: function(e, t, i, n) {
                var s = void 0;
                return s = "point" === e ? OL.Handler.Point : OL.Handler.Polygon,
                    new b.default(this.map.sketchLayer, t, s, {
                        enableSnapping: n,
                        featureAdded: i,
                        drawingType: e
                    })
            }
        });
    t.default = G,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(30),
        s = OpenLayers.Class(OpenLayers.Control.Button, n, {
            actionManager: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("undo", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.unregister("undo", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                this.actionManager.canUndo() ? this.enable() : this.disable()
            },
            trigger: function() {
                this.enabled && (this.onUndo(),
                    this.actionManager.undo())
            },
            onUndo: function() {}
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(30),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = OpenLayers.Class(OpenLayers.Control.Button, s.default, {
            _actionManager: null,
            initialize: function(e, t, i, n) {
                OpenLayers.Control.prototype.initialize.apply(this, [n]),
                    this._actionManager = e,
                    this._roadLayers = t,
                    this._controller = i,
                    this.autoActivate = !1,
                    this._actionManager.events.on({
                        scope: this,
                        hasActions: this._redraw,
                        noActions: this._redraw
                    }),
                    W.accelerators.events.register("reloadData", this, this.trigger),
                    this._redraw()
            },
            destroy: function() {
                this._actionManager.events.un({
                        scope: this,
                        hasActions: this._redraw,
                        noActions: this._redraw
                    }),
                    W.accelerators.events.unregister("reloadData", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            _canReload: function() {
                return !this._actionManager.canUndo()
            },
            _redraw: function() {
                this._canReload() ? this.enable() : this.disable()
            },
            trigger: function() {
                this._canReload() && (this._roadLayers.forEach(function(e) {
                        e.redraw({
                                force: !0
                            }),
                            e.removeBackBuffer()
                    }),
                    this._controller.reload())
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(30),
        s = OpenLayers.Class(OpenLayers.Control.Button, n, {
            actionManager: null,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("redo", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.unregister("redo", this, this.trigger),
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                this.actionManager.canRedo() ? this.enable() : this.disable()
            },
            trigger: function() {
                this.enabled && (this.onRedo(),
                    this.actionManager.redo())
            },
            onRedo: function() {}
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    var n = i(30),
        s = OpenLayers.Class(OpenLayers.Control.Button, n, {
            actionManager: null,
            $unsavedActionsCounter: null,
            CounterAlertThreshold: 10,
            initialize: function(e, t) {
                OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.actionManager = e,
                    this.autoActivate = !1,
                    this.onActionChange(),
                    this.actionManager.events.on({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("save", this, this.trigger)
            },
            destroy: function() {
                this.actionManager.events.un({
                        scope: this,
                        afteraction: this.onActionChange,
                        afterundoaction: this.onActionChange,
                        afterclearactions: this.onActionChange
                    }),
                    W.accelerators.events.register("save", this, this.trigger),
                    this.actionManager = null,
                    OpenLayers.Control.prototype.destroy.apply(this)
            },
            onActionChange: function() {
                var e = this.actionManager.unsavedActionsNum();
                this.$unsavedActionsCounter || (this.$unsavedActionsCounter = $("<div />").addClass("counter")),
                    this.$unsavedActionsCounter && (this.$unsavedActionsCounter.toggle(e > 0 && this.actionManager.isAllowedToSave()),
                        this.$unsavedActionsCounter.toggleClass("warning", e >= this.CounterAlertThreshold),
                        this.$unsavedActionsCounter.text(e)),
                    this.actionManager.canSave() ? this.enable() : this.disable()
            },
            onRender: function(e) {
                this.$unsavedActionsCounter && this.$unsavedActionsCounter.appendTo(e)
            },
            trigger: function() {
                this.enabled && this.editingMediator.get("editingEnabled") && W.commands.execute("save:start")
            }
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(30),
        r = n(s),
        o = i(211),
        a = n(o),
        l = i(4),
        u = n(l),
        d = i(267),
        c = n(d),
        h = new OpenLayers.Class(OpenLayers.Control.Button, r.default, {
            keyboardCodes: null,
            keyboardHandler: null,
            initialize: function(e, t) {
                r.default.prototype.initialize.apply(this, [t]),
                    OpenLayers.Control.prototype.initialize.apply(this, [t]),
                    this.model = e,
                    this.keyboardCodes = [OpenLayers.Event.KEY_DELETE],
                    this.keyboardHandler = new a.default(this, {
                        keydown: this.handleKeypress
                    }),
                    this.setEnabled(!1),
                    W.selectionManager.events.register("selectionchanged", this, this._onSelectionChanged)
            },
            destroy: function() {
                return r.default.prototype.destroy.apply(this, arguments),
                    W.selectionManager.events.unregister("selectionchanged", this, this._onSelectionChanged)
            },
            _onSelectionChanged: function(e) {
                var t = _(e.selected).pluck("model");
                this.setEnabledByFeatures(t || [])
            },
            trigger: function() {
                if (this.enabled) {
                    var e = this.features;
                    if (!e.isEmpty()) {
                        var t = !0,
                            i = e.some(function(e) {
                                return e.attributes.hasHNs
                            });
                        switch (e.first().type) {
                            case u.default.NODE:
                                this.model.deleteNodes(e);
                                break;
                            case u.default.SEGMENT:
                                e.length > 1 ? t = i ? window.confirm(I18n.t("edit.segment.delete_confirm.multiple_hn")) : window.confirm(I18n.t("edit.segment.delete_confirm.multiple")) : i && (t = window.confirm(I18n.t("edit.segment.delete_confirm.hn"))),
                                    t && this.model.deleteSegments(e);
                                break;
                            case u.default.BIG_JUNCTION:
                                this.model.actionManager.add(new c.default(e[0]));
                                break;
                            default:
                                this.model.deleteObjects(e)
                        }
                        this.onFeatureDelete(e)
                    }
                }
            },
            setEnabledByFeatures: function(e) {
                if (!e || e.isEmpty())
                    return void this.setEnabled(!1);
                var t = 1 === e.length && e.first().type === u.default.NODE,
                    i = !e.isEmpty() && e.every(function(e) {
                        return e.type === u.default.SEGMENT
                    }),
                    n = !1;
                if (t) {
                    n = e.first().isDeleteable(this.model)
                } else
                    n = i ? e.every(function(e) {
                        return e.isDeletable()
                    }) : e.first().isDeletable();
                this.features = e,
                    this.setEnabled(n)
            },
            handleKeypress: function(e) {
                this.keyboardCodes.contains(e.keyCode) && 1 === this.features.length && this.trigger()
            },
            setEnabled: function(e, t) {
                r.default.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyboardHandler.activate() : this.keyboardHandler.deactivate()
            },
            onFeatureDelete: function(e) {}
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    var n = i(30),
        s = i(212),
        r = i(27),
        o = OpenLayers.Class(OpenLayers.Control.DrawFeature, n, {
            keyHandler: null,
            snapControl: null,
            snappedFrom: null,
            editingMediator: null,
            targetLayer: null,
            type: OL.Control.TYPE_TOGGLE,
            drawingAccuracy: 2,
            keyUp: function(e) {
                this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && this.handler.cancel()
            },
            handleShortcut: function(e) {
                this.isEnabled() && this.activate()
            },
            isEnabled: function() {
                return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
            },
            featureCancelled: function(e) {},
            onDrawCancel: function(e) {
                this.deactivate(),
                    this.featureCancelled(e)
            },
            createFeature: function(e) {
                return new r({
                    geometry: e
                })
            },
            drawFeature: function(e) {
                var t = this.createFeature(e);
                !1 !== this.layer.events.triggerEvent("sketchcomplete", {
                        feature: t
                    }) && ("OpenLayers.Geometry.LineString" === t.geometry.CLASS_NAME && (t.geometry = t.geometry.simplify(this.drawingAccuracy * this.map.getResolution())),
                        t.state = OpenLayers.State.INSERT,
                        this.enableSnapping ? (this.snappedFrom && (this.snappedFrom.feature = this.snappedFrom.feature.model,
                                this.snappedFrom.feature && this.snappedFrom.feature.setSnapped(!1)),
                            this.snapControl.snappedFeature && (this.snapControl.snappedFeature.feature = this.snapControl.snappedFeature.feature.model),
                            this.snapControl.snappedFeature && this.snapControl.snappedFeature.feature.outOfScope && (this.snapControl.snappedFeature = null),
                            this.snappedFrom && this.snappedFrom.feature.outOfScope && (this.snappedFrom = null),
                            this.snapControl.snappedFeature && this.snappedFrom && this.snapControl.snappedFeature.feature === this.snappedFrom.feature && (this.snappedFrom = null),
                            this.featureAdded(t, this.snappedFrom, this.snapControl.snappedFeature)) : this.featureAdded(t)),
                    this.deactivate()
            },
            initialize: function(e, t, i, s) {
                n.prototype.initialize.apply(this, [s]),
                    this.callbacks = OpenLayers.Util.extend({
                        cancel: this.onDrawCancel
                    }, this.callbacks),
                    this.editingMediator = W.editingMediator,
                    this.targetLayer = t,
                    OpenLayers.Control.DrawFeature.prototype.initialize.apply(this, [e, i, s]),
                    this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                        keyup: this.keyUp
                    }),
                    this.accelerator && W.accelerators.events.register(this.accelerator, this, this.handleShortcut)
            },
            setMap: function() {
                OL.Control.DrawFeature.prototype.setMap.apply(this, arguments),
                    this.enableSnapping && this._createSnappingControl()
            },
            _createSnappingControl: function() {
                this.snapControl = new s({
                        layer: this.map.sketchLayer,
                        targets: [{
                            layer: this.map.nodeLayer
                        }, {
                            layer: this.map.segmentLayer,
                            filter: {
                                evaluate: function(e) {
                                    return !e.model.outOfScope && e.model.isGeometryEditable()
                                }
                            }
                        }]
                    }),
                    this.snapControl.events.on({
                        snap: function() {
                            var e = this.handler.getGeometry();
                            e && e.components && 1 === e.components.length && (this.snapControl.snappedFeature.feature.model && this.snapControl.snappedFeature.feature.model.setSnapped(!0),
                                this.snappedFrom = this.snapControl.snappedFeature)
                        },
                        scope: this
                    })
            },
            setEnabled: function(e, t) {
                n.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyHandler.activate() : this.keyHandler.deactivate()
            },
            activate: function() {
                this.active || (OpenLayers.Control.DrawFeature.prototype.activate.apply(this, arguments),
                    this.keyHandler.activate(),
                    this.targetLayer.getVisibility() || this.targetLayer.setVisibility(!0),
                    this.editingMediator.setDrawingInProgress(),
                    this.enableSnapping && (this.map.addControl(this.snapControl),
                        this.snapControl.activate()))
            },
            deactivate: function() {
                if (this.snappedFrom) {
                    var e = this.snappedFrom.feature;
                    e.setSnapped || (e = e.model),
                        e.setSnapped(!1)
                }
                this.snappedFrom = null,
                    this.active && (this.editingMediator.setDrawingDone(),
                        this.keyHandler.deactivate(),
                        this.enableSnapping && (this.snapControl.deactivate(),
                            this.map.removeControl(this.snapControl)),
                        OpenLayers.Control.DrawFeature.prototype.deactivate.apply(this, arguments))
            },
            CLASS_NAME: "Waze.Control.DrawFeature"
        });
    e.exports = o
}, function(e, t, i) {
    "use strict";
    var n = i(30),
        s = i(918),
        r = OpenLayers.Class(OpenLayers.Control, n, {
            keyHandler: null,
            handler: null,
            type: OL.Control.TYPE_TOGGLE,
            editingMediator: null,
            keyUp: function(e) {
                this.active && 0 === e.charCode && e.keyCode === OpenLayers.Event.KEY_ESC && (this.handler.cancel(),
                    this.deactivate())
            },
            handleShortcut: function(e) {
                this.isEnabled() && this.activate()
            },
            onDrawCancel: function(e) {
                this.deactivate(),
                    this.featureCancelled(e)
            },
            initialize: function(e) {
                OpenLayers.Control.prototype.initialize.apply(this, [e]),
                    n.prototype.initialize.apply(this, [e]),
                    this.callbacks = OpenLayers.Util.extend({
                        cancel: this.onDrawCancel
                    }, this.callbacks),
                    this.keyHandler = new OpenLayers.Handler.Keyboard(this, {
                        keyup: this.keyUp
                    }),
                    W.accelerators.events.register("drawRoundabout", this, this.handleShortcut),
                    this.handler = new s(this, {
                        done: this.onEllipseDrawn,
                        cancel: this.onCancel
                    }),
                    this.editingMediator = W.editingMediator
            },
            onDrawStart: function() {
                OpenLayers.Element.addClass(this.map.viewPortDiv, this.displayClass + "Over")
            },
            onDrawEnd: function() {
                OpenLayers.Element.removeClass(this.map.viewPortDiv, this.displayClass + "Over")
            },
            isEnabled: function() {
                return !this.editingMediator.get("drawing") && this.editingMediator.get("editingEnabled")
            },
            onEllipseDrawn: function(e) {
                this.onDrawEnd();
                var t = new OpenLayers.LonLat(e.x, e.y),
                    i = e.rx * this.map.getResolution(),
                    n = e.ry * this.map.getResolution();
                t.x = t.lon,
                    t.y = t.lat;
                var s = new OpenLayers.Bounds(e.x - i, e.y - n, e.x + i, e.y + n);
                this.deactivate(),
                    this.onRoundaboutAdded({
                        center: t,
                        rx: i,
                        ry: n,
                        bounds: s
                    })
            },
            onCancel: function() {
                this.onDrawEnd(),
                    this.deactivate()
            },
            onRoundaboutAdded: function() {},
            setEnabled: function(e, t) {
                n.prototype.setEnabled.apply(this, arguments),
                    e ? this.keyHandler.activate() : this.keyHandler.deactivate()
            },
            activate: function() {
                this.active || (OpenLayers.Control.prototype.activate.apply(this, arguments),
                    this.editingMediator.setDrawingInProgress(),
                    this.keyHandler.activate())
            },
            deactivate: function() {
                this.active && (this.keyHandler.deactivate(),
                    this.editingMediator.setDrawingDone(),
                    OpenLayers.Control.prototype.deactivate.apply(this, arguments))
            },
            CLASS_NAME: "Waze.Control.DrawRoundabout"
        });
    e.exports = r
}, function(e, t, i) {
    "use strict";
    var n = i(42),
        s = OpenLayers.Class(OpenLayers.Handler, {
            drawing: !1,
            dragging: !1,
            layer: null,
            style: null,
            point: null,
            lastDown: null,
            lastMove: null,
            distanceLine: null,
            radius: 0,
            rx: 0,
            ry: 0,
            regular: !1,
            geodesicPixelSize: null,
            MinEllipseSize: 15,
            MaxEllipseSizeMeters: 100,
            oldOnselectstart: null,
            initialize: function(e, t, i) {
                i && i.layerOptions && i.layerOptions.styleMap || (this.style = OpenLayers.Util.extend(OpenLayers.Feature.Vector.style.default, {})),
                    OpenLayers.Handler.prototype.initialize.apply(this, arguments)
            },
            setRegular: function(e) {
                this.regular !== e && (this.regular = e,
                    this.modifyFeature(this.lastMove))
            },
            activate: function() {
                if (!OpenLayers.Handler.prototype.activate.apply(this, arguments))
                    return !1;
                var e = OpenLayers.Util.extend({
                        calculateInRange: OpenLayers.Function.True
                    }, this.layerOptions),
                    t = OpenLayers.Layer.Vector.prototype.renderers;
                return OpenLayers.Layer.Vector.prototype.renderers = [n],
                    this.layer = new OpenLayers.Layer.Vector(this.CLASS_NAME, e),
                    OpenLayers.Layer.Vector.prototype.renderers = t,
                    this.map.addLayer(this.layer),
                    this.map.events.on({
                        zoomend: this.onZoom,
                        scope: this
                    }), !0
            },
            deactivate: function() {
                return !!OpenLayers.Handler.prototype.deactivate.apply(this, arguments) && (this.drawing && this.cancel(),
                    this.destroyFeature(),
                    null !== this.layer.map && this.layer.destroy(!1),
                    this.map.events.un({
                        zoomend: this.zoomend
                    }),
                    this.layer = null, !0)
            },
            onZoom: function() {
                this.drawing && this.cancel()
            },
            dblclick: function(e) {
                return OpenLayers.Event.stop(e), !1
            },
            mouseup: function(e) {
                if (this.drawing && this.dragging)
                    return this.finalize(), !1
            },
            mousedown: function(e) {
                return this.drawing ? (this.finalize(), !1) : (this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart ? document.onselectstart : OpenLayers.Function.True),
                    document.onselectstart = OpenLayers.Function.False, !this.checkModifiers(e) || (!(!this.lastDown || !this.lastDown.equals(e.xy)) || (this.drawing = !0,
                        this.geodesicPixelSize = this.map.getGeodesicPixelSize().w,
                        null === this.lastDown && this.createFeature(e.xy),
                        this.lastDown = e.xy, !1)))
            },
            createFeature: function(e) {
                var t = this.map.getLonLatFromPixel(e),
                    i = new OpenLayers.Geometry.LineString,
                    n = void 0;
                n = this.style ? OpenLayers.Util.extend({}, this.style) : OpenLayers.Util.extend({}, this.layerOptions.styleMap.styles.default.defaultStyle),
                    n.rx = this.MinEllipseSize,
                    n.ry = this.MinEllipseSize,
                    this.point = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t.lon, t.lat), {}, n),
                    i.addPoint(this.point.geometry.clone()),
                    i.addPoint(this.point.geometry.clone()),
                    this.distanceLine = new OpenLayers.Feature.Vector(i),
                    this.callback("create", [this.point.geometry, this.point]),
                    this.point.geometry.clearBounds(),
                    this.layer.addFeatures([this.point], {
                        silent: !0
                    })
            },
            finalize: function(e) {
                document.onselectstart = this.oldOnselectstart;
                var t = e ? "cancel" : "done",
                    i = void 0;
                this.point && (i = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y)),
                    this.drawing = !1,
                    this.dragging = !1,
                    this.regular = !1,
                    this.destroyFeature(),
                    Math.min(this.rx, this.ry) > this.MinEllipseSize && this.callback(t, [{
                        x: i.lon,
                        y: i.lat,
                        rx: this.rx,
                        ry: this.ry
                    }]),
                    this.lastDown = null,
                    this.rx = 0,
                    this.ry = 0
            },
            destroyFeature: function() {
                this.layer && this.layer.destroyFeatures(),
                    this.point = null,
                    this.distanceLine = null
            },
            cancel: function() {
                this.finalize(!0)
            },
            modifyFeature: function(e, t) {
                var i = this.distanceLine.geometry.components.last(),
                    n = new OpenLayers.LonLat(this.point.geometry.x, this.point.geometry.y),
                    s = void 0,
                    r = void 0,
                    o = void 0;
                this.lastMove = e;
                var a = this.map.getPixelFromLonLat(n),
                    l = e.y - a.y,
                    u = e.x - a.x;
                s = Math.atan2(l, u),
                    this.rx = Math.abs(u),
                    this.ry = Math.abs(l),
                    this.rx < this.MinEllipseSize && (this.rx = this.MinEllipseSize),
                    this.ry < this.MinEllipseSize && (this.ry = this.MinEllipseSize);
                var d = Math.floor(this.geodesicPixelSize * this.rx * 1e3),
                    c = Math.floor(this.geodesicPixelSize * this.ry * 1e3);
                d > this.MaxEllipseSizeMeters && (this.rx = 1 / (10 * this.geodesicPixelSize)),
                    c > this.MaxEllipseSizeMeters && (this.ry = 1 / (10 * this.geodesicPixelSize));
                var h = Math.max(this.rx, this.ry),
                    p = Math.ceil(this.geodesicPixelSize * h * 1e3);
                t.shiftKey || (this.rx = h,
                        this.ry = h),
                    this.ry > this.rx ? (r = this.rx / this.ry,
                        o = 1) : (o = this.ry / this.rx,
                        r = 1),
                    s = Math.atan2(l / o, u / r),
                    this.callback("modify", [this.point.geometry, this.point]),
                    i.x = n.lon + this.rx * Math.cos(s) * this.map.getResolution(),
                    i.y = n.lat - this.ry * Math.sin(s) * this.map.getResolution(),
                    i.clearBounds(),
                    this.distanceLine.geometry.clearBounds(),
                    this.point.geometry.clearBounds(),
                    this.point.style.rx = this.rx,
                    this.point.style.ry = this.ry,
                    this.point.style.label = p + "m",
                    this.drawCircle()
            },
            drawCircle: function() {
                this.layer.drawFeature(this.point),
                    this.layer.drawFeature(this.distanceLine)
            },
            mousemove: function(e) {
                return this.drawing && (this.dragging = !0,
                    this.modifyFeature(e.xy, e),
                    this.oldOnselectstart || (this.oldOnselectstart = document.onselectstart,
                        document.onselectstart = OpenLayers.Function.False)), !1
            },
            CLASS_NAME: "Waze.Handler.Ellipse"
        });
    e.exports = s
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            name: null,
            displayClass: null,
            featureName: null,
            parent: null,
            children: null,
            control: null,
            secondaryControl: null
        },
        initialize: function() {
            var e = i(271),
                t = this.get("children");
            if (null != t)
                return this.children = new e(t),
                    this.unset("children")
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(272),
        r = n(s),
        o = i(273),
        a = n(o),
        l = i(921),
        u = n(l),
        d = i(925),
        c = n(d),
        h = Marionette.Object.extend({
            initialize: function() {
                var e = new r.default({
                        globalVent: this.options.globalVent
                    }),
                    t = new a.default({
                        dataModel: this.options.dataModel,
                        map: this.options.map
                    }),
                    i = null;
                W.Config.area_manager_widget.enable && (i = new u.default({
                        managedAreasRepository: this.options.managedAreasRepository,
                        managedAreasLayer: this.options.map.managedAreasLayer,
                        pannable: this.options.map.getPannable(),
                        drawingContext: this.options.map.getDrawingContext()
                    })),
                    this.layout = new c.default({
                        loadingIndicatorView: e,
                        locationInfoView: t,
                        areaManagersLayout: i
                    })
            },
            destroy: function() {}
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(922),
        r = n(s),
        o = i(923),
        a = n(o),
        l = i(924),
        u = n(l),
        d = Marionette.View.extend({
            MAIN_LIST_NUM_ITEMS: 3,
            template: "Waze/Modules/Topbar/templates/area-managers/layout",
            className: "area-managers",
            regions: {
                mainList: ".main-list-region",
                restList: ".rest-list-region"
            },
            initialize: function() {
                var e = this;
                return this.managedAreasRepository = this.options.managedAreasRepository,
                    this.managedAreasRepository.model.events.register("mergeend", this, this._updateCollections),
                    this.mainCollection = new Backbone.Collection,
                    this.restCollection = new Backbone.Collection,
                    this.mainListView = new r.default({
                        collection: this.mainCollection
                    }),
                    this.restListView = new a.default({
                        collection: this.restCollection
                    }),
                    this.mapView = new u.default({
                        pannable: this.options.pannable,
                        managedAreasLayer: this.options.managedAreasLayer,
                        drawingContext: this.options.drawingContext
                    }), [this.mainListView, this.restListView].map(function(t) {
                        return e.listenTo(t, "onAreaMouseEnter", function(t) {
                                return e.mapView.highlightArea(t.attributes.externalModel)
                            }),
                            e.listenTo(t, "onAreaMouseLeave", function() {
                                return e.mapView.hideArea()
                            }),
                            e.listenTo(t, "onAreaClicked", function(t) {
                                return e.mapView.centerArea(t.attributes.externalModel)
                            })
                    })
            },
            onDestroy: function() {
                return this.managedAreasRepository.model.events.unregister("mergeend", this, this._updateCollections)
            },
            onRender: function() {
                this.showChildView("mainList", this.mainListView),
                    this.showChildView("restList", this.restListView)
            },
            _updateCollections: function() {
                var e = this.managedAreasRepository.getObjectArray().map(function(e) {
                        return new Backbone.Model({
                            username: e.getUserName(),
                            externalModel: e
                        })
                    }),
                    t = e.splice(this.MAIN_LIST_NUM_ITEMS);
                return this.mainCollection.reset(e),
                    this.restCollection.reset(t)
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(274),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            childView: s.default,
            childViewContainer: "ul",
            ui: {
                title: ".title"
            },
            template: "Waze/Modules/Topbar/templates/area-managers/main-list",
            initialize: function() {
                var e = this;
                return this.on("childview:onAreaMouseEnter", function(t) {
                        return e.trigger("onAreaMouseEnter", t.model)
                    }),
                    this.on("childview:onAreaMouseLeave", function(t) {
                        return e.trigger("onAreaMouseLeave", t.model)
                    }),
                    this.on("childview:onAreaClicked", function(t) {
                        return e.trigger("onAreaClicked", t.model)
                    }),
                    this.listenTo(this.collection, "reset", this._toggleTitle)
            },
            _toggleTitle: function() {
                return this.ui.title.toggle(this.collection.length > 0)
            },
            onRender: function() {
                return this._toggleTitle()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(274),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.CompositeView.extend({
            childView: s.default,
            className: "rest-list",
            childViewContainer: "ul",
            template: "Waze/Modules/Topbar/templates/area-managers/rest-list",
            initialize: function() {
                var e = this;
                return this.on("childview:onAreaMouseEnter", function(t) {
                        return e.trigger("onAreaMouseEnter", t.model)
                    }),
                    this.on("childview:onAreaMouseLeave", function(t) {
                        return e.trigger("onAreaMouseLeave", t.model)
                    }),
                    this.on("childview:onAreaClicked", function(t) {
                        return e.trigger("onAreaClicked", t.model)
                    }),
                    this.collection.on("reset", this.render)
            },
            serializeData: function() {
                return {
                    numItems: this.collection.length
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(228),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.Object.extend({
            _highlightedArea: null,
            initialize: function() {
                return this.pannable = this.options.pannable,
                    this.managedAreasLayer = this.options.managedAreasLayer,
                    this.drawingContext = this.options.drawingContext,
                    this.drawingContext.setStyleMap(s.default)
            },
            centerArea: function(e) {
                var t = e.geometry.getBounds().getCenterLonLat();
                return this.pannable.panTo(t)
            },
            highlightArea: function(e) {
                var t = this.managedAreasLayer.getVisibility(),
                    i = void 0;
                return t ? (this._highlightedArea = e,
                    null != (i = this.managedAreasLayer.getVector(e)) ? this.managedAreasLayer.drawFeature(i, "highlight") : void 0) : (i = new OL.Feature.Vector(e.geometry.clone()),
                    i.model = e,
                    this.drawingContext.addFeatures(i))
            },
            hideArea: function() {
                if (this.drawingContext.removeAllFeatures(),
                    null != this._highlightedArea) {
                    var e = this.managedAreasLayer.getVector(this._highlightedArea);
                    null != e && this.managedAreasLayer.drawFeature(e, "default"),
                        this._highlightedArea = null
                }
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/Topbar/templates/layout",
        regions: {
            loadingIndicator: ".loading-indicator-region",
            locationInfo: ".location-info-region",
            areaManagers: ".area-managers-region"
        },
        onRender: function() {
            if (this.showChildView("loadingIndicator", this.options.loadingIndicatorView),
                this.showChildView("locationInfo", this.options.locationInfoView),
                null != this.options.areaManagersLayout)
                return this.showChildView("areaManagers", this.options.areaManagersLayout)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(102),
        r = n(s),
        o = i(20),
        a = n(o),
        l = i(927),
        u = n(l),
        d = i(929),
        c = n(d),
        h = i(930),
        p = n(h),
        f = i(931),
        g = n(f),
        m = Backbone.Model.extend({
            defaults: {
                pendingChanges: !1,
                showingList: !0,
                saving: !1,
                editedModel: null
            }
        }),
        v = Marionette.Object.extend({
            _editingLock: null,
            initialize: function() {
                this.app = W.app,
                    this.map = W.map,
                    this.dataModel = W.model,
                    this.controller = W.controller,
                    this.repo = this.dataModel.majorTrafficEvents,
                    this.mteModeState = new m,
                    this.listenTo(this.mteModeState, "change", this.trigger.bind(this, r.default.STATE_CHANGED)),
                    this.map.closuresMarkerLayer.toggleRepo = !1,
                    this.dataModel.roadClosures.setActive(!0),
                    this.toolbarController = new u.default({
                        app: W.app,
                        map: this.map,
                        editingMediator: W.editingMediator,
                        actionManager: this.dataModel.actionManager,
                        mteModeState: this.mteModeState,
                        controller: this.controller,
                        togglerTree: W.togglerTree
                    }),
                    this.topbarLayout = new p.default({
                        map: this.map,
                        dataModel: this.dataModel,
                        globalVent: W.vent
                    }),
                    this.sidebarLayout = new c.default({
                        app: W.app
                    }),
                    this.mteController = new g.default({
                        toolbarController: this.toolbarController,
                        sidebarLayout: this.sidebarLayout,
                        mteModeState: this.mteModeState,
                        dataModel: this.dataModel,
                        repository: this.repo,
                        controller: this.controller,
                        editingMediator: W.editingMediator,
                        map: this.map
                    })
            },
            enter: function() {
                this._editingLock = W.editingMediator.lockEditing()
            },
            exit: function() {
                W.editingMediator.releaseEditing(this._editingLock),
                    this.toolbarController.destroy(),
                    this.mteController.destroy(),
                    this.map.closuresMarkerLayer.toggleRepo = !0
            },
            blockingExit: function() {
                return this.mteModeState.get("pendingChanges")
            },
            blockingExitReason: function() {
                return I18n.t("modes.exit.save_changes")
            },
            getSidebarLayout: function() {
                return this.sidebarLayout
            },
            getTopbarLayout: function() {
                return this.topbarLayout
            },
            getToolbarLayout: function() {
                return this.toolbarController.toolbarLayout
            },
            getState: function() {
                var e = this.mteModeState.get("editedModel");
                return {
                    majorTrafficEvent: e ? e.getID() : void 0
                }
            },
            restore: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = t.majorTrafficEvent;
                if (null != i) {
                    var n = function() {
                        var t = e.repo.get(i);
                        return null != t && e.mteController.showEditView(t),
                            null != t
                    };
                    return n() ? void 0 : this.listenToOnce(this.repo, a.default.ADDED, n)
                }
            }
        });
    t.default = v,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(265),
        r = n(s),
        o = i(264),
        a = n(o),
        l = i(928),
        u = n(l),
        d = i(263),
        c = n(d),
        h = Marionette.Object.extend({
            initialize: function(e) {
                return this.app = e.app,
                    this.map = e.map,
                    this.editingMediator = e.editingMediator,
                    this.actionManager = e.actionManager,
                    this.mteModeState = e.mteModeState,
                    this.searchView = new a.default({
                        map: this.map
                    }),
                    this.layerSwitcherController = new r.default({
                        map: this.map,
                        actionManager: this.actionManager,
                        controller: e.controller,
                        togglerTree: e.togglerTree
                    }),
                    this.toolbarButtons = new u.default({
                        mteModeState: this.mteModeState
                    }),
                    this.toolbarButtons.on("saveClicked", this._onSaveClicked, this),
                    this.toolbarButtons.on("addClicked", this._onAddClicked, this),
                    this.toolbarButtons.on("deleteClicked", this._onDeleteClicked, this),
                    this.editingMediator.on("change:editingEnabled", this._onEditingEnabledChanged, this),
                    this.toolbarLayout = new c.default({
                        model: this.app,
                        className: "toolbar toolbar-mte"
                    }),
                    this.listenTo(this.toolbarLayout, "render", this._onRender)
            },
            destroy: function() {
                return this.toolbarLayout.destroy(),
                    this.layerSwitcherController.destroy(),
                    this.editingMediator.off("change:editingEnabled", this._onEditingEnabledChanged, this)
            },
            _onRender: function() {
                this.toolbarLayout.showChildView("layerSwitcher", this.layerSwitcherController.getLayout()),
                    this.toolbarLayout.showChildView("toolbar", this.toolbarButtons),
                    this.toolbarLayout.showChildView("search", this.searchView)
            },
            _onSaveClicked: function() {
                return this.trigger("saveClicked")
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDeleteClicked: function() {
                return this.trigger("deleteClicked")
            },
            _onEditingEnabledChanged: function() {}
        });
    t.default = h,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(18),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/toolbar_buttons",
            triggers: {
                "click .save-button": "saveClicked",
                "click .add-button": "addClicked",
                "click .delete-button": "deleteClicked"
            },
            bindings: {
                ".save-button": {
                    attributes: function(e) {
                        return [{
                            name: "disabled",
                            observe: ["saving", e],
                            onGet: function(e) {
                                var t = (0,
                                        s.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i || !n
                            }
                        }]
                    }("pendingChanges")
                },
                ".add-button": {
                    attributes: function(e) {
                        return [{
                            name: "disabled",
                            observe: ["saving", e],
                            onGet: function(e) {
                                var t = (0,
                                        s.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i || n
                            }
                        }]
                    }("pendingChanges")
                },
                ".delete-button": {
                    attributes: [{
                        name: "disabled",
                        observe: ["editedModel", "showingList", "saving"],
                        onGet: function(e) {
                            var t = (0,
                                    s.default)(e, 3),
                                i = t[0],
                                n = t[1];
                            return t[2] || n || i && i.isNew()
                        }
                    }]
                }
            },
            initialize: function(e) {
                this.mteModeState = e.mteModeState
            },
            onRender: function() {
                return this.stickit(this.mteModeState)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/MTE/templates/sidebar",
        className: "sidebar-layout",
        regions: {
            loaderRegion: ".loaderRegion",
            mainRegion: ".mainRegion"
        },
        bindings: {
            ".loaderRegion": {
                observe: "loadingFeatures",
                visible: !0
            },
            ".mainRegion": {
                observe: "loadingFeatures",
                visible: _.negate(_.identity)
            }
        },
        initialize: function(e) {
            this.app = e.app
        },
        onRender: function() {
            return this.stickit(this.app)
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(272),
        r = n(s),
        o = i(273),
        a = n(o),
        l = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/topbar",
            regions: {
                loadingIndicator: ".loading-indicator-region",
                locationInfo: ".location-info-region"
            },
            onRender: function() {
                this.showChildView("loadingIndicator", new r.default({
                        globalVent: this.options.globalVent
                    })),
                    this.showChildView("locationInfo", new a.default({
                        dataModel: this.options.dataModel,
                        map: this.options.map
                    }))
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(932),
        r = n(s),
        o = i(141),
        a = n(o),
        l = i(20),
        u = n(l),
        d = i(934),
        c = n(d),
        h = i(936),
        p = n(h),
        f = i(97),
        g = n(f),
        m = i(241),
        v = n(m),
        _ = i(238),
        y = n(_),
        b = Marionette.Object.extend({
            initialize: function(e) {
                var t = this;
                return this.toolbarController = e.toolbarController,
                    this.sidebarLayout = e.sidebarLayout,
                    this.mteModeState = e.mteModeState,
                    this.dataModel = e.dataModel,
                    this.repository = e.repository,
                    this.controller = e.controller,
                    this.editingMediator = e.editingMediator,
                    this.map = e.map,
                    this.mteCollection = new c.default,
                    this.mteListView = new r.default({
                        collection: this.mteCollection,
                        dataModel: this.dataModel
                    }),
                    this.listenTo(this.repository, u.default.UPDATED, this._updateCollection),
                    this.listenTo(this.toolbarController, "saveClicked", this._onSaveClicked),
                    this.listenTo(this.toolbarController, "addClicked", this._onAddClicked),
                    this.listenTo(this.toolbarController, "deleteClicked", this._onDeleteClicked),
                    this.listenTo(this.mteListView, "mteItemClicked", this._onMteItemClicked),
                    this.savePopoverRegion = new v.default({
                        saveButtonSelector: ".toolbar-mte .save-button"
                    }),
                    this.listenTo(this.sidebarLayout, "render", function() {
                        return t._updateCollection(),
                            t._showListView()
                    })
            },
            _updateCollection: function(e) {
                return this.mteCollection.reset(this.repository.getObjectArray())
            },
            _onSaveClicked: function() {
                var e = this;
                return this.editView.validate().done(function() {
                    return e._save(e.editView.getAction())
                })
            },
            _save: function(e) {
                var t = this,
                    i = $.Deferred();
                e.doAction(),
                    this.mteModeState.set({
                        saving: !0
                    });
                var n = this.controller.save({
                        actions: [e]
                    }).fail(function(i) {
                        return t._rollbackChanges(e)
                    }),
                    s = new y.default({
                        saveResult: n,
                        map: this.map,
                        mediator: this.editingMediator,
                        popoverRegion: this.savePopoverRegion
                    });
                return s.on("done", function() {
                        return t.mteModeState.set({
                            saving: !1
                        })
                    }),
                    s.on("saveSuccess", function() {
                        return t.mteModeState.set({
                                pendingChanges: !1
                            }),
                            i.resolve()
                    }),
                    i.promise()
            },
            _onMteItemClicked: function(e) {
                return this.showEditView(e)
            },
            showEditView: function(e) {
                return this.mteModeState.set({
                        showingList: !1,
                        pendingChanges: !1,
                        editedModel: e
                    }),
                    this.editView = new p.default({
                        model: e,
                        dataModel: this.dataModel,
                        map: this.map,
                        mteModeState: this.mteModeState
                    }),
                    this.sidebarLayout.showChildView("mainRegion", this.editView, {
                        preventDestroy: !0
                    }),
                    this.editView.on("backButtonClicked", this._showListView, this),
                    this.editView.on("modelChanged", this._onModelChanged, this)
            },
            _onAddClicked: function() {
                var e = new g.default;
                return e.model = this.dataModel,
                    this.showEditView(e),
                    this.mteModeState.set({
                        pendingChanges: !0
                    })
            },
            _onDeleteClicked: function() {
                if (!this.mteModeState.get("pendingChanges") || window.confirm(I18n.t("mte.edit.pending_changes_delete"))) {
                    var e = new a.default(this.mteModeState.get("editedModel"));
                    return e.setModel(this.dataModel),
                        this._save(e).done(this._showListView.bind(this))
                }
            },
            _onModelChanged: function() {
                return this.mteModeState.set({
                    pendingChanges: !0
                })
            },
            _showListView: function() {
                return this.mteModeState.set({
                        showingList: !0,
                        pendingChanges: !1,
                        editedModel: null
                    }),
                    this.sidebarLayout.showChildView("mainRegion", this.mteListView)
            },
            _rollbackChanges: function(e) {
                return e.undoAction(),
                    this.dataModel.actionManager.clear()
            },
            onDestroy: function() {
                return this.savePopoverRegion.destroy()
            }
        });
    t.default = b,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(933),
        a = n(o),
        l = {
            THIS_WEEK: {
                name: I18n.t("mte.search.this_week"),
                endDate: 7..day().fromNow()
            },
            THIS_MONTH: {
                name: I18n.t("mte.search.this_month"),
                endDate: 1..month().fromNow()
            },
            NEXT_3_MONTHS: {
                name: I18n.t("mte.search.next_3_months"),
                endDate: 3..month().fromNow()
            },
            NEXT_YEAR: {
                name: I18n.t("mte.search.next_year"),
                endDate: 1..year().fromNow()
            }
        },
        u = Marionette.View.extend({
            className: "empty-message",
            template: function() {
                return I18n.t("mte.search.empty")
            }
        }),
        d = Marionette.CompositeView.extend({
            template: "Waze/Modules/MTE/templates/mte_list",
            className: "flex-parent",
            childView: a.default,
            childViewContainer: "ul.mte-list",
            emptyView: u,
            ui: {
                search: ".search-input",
                list: "ul.mte-list"
            },
            events: {
                "focus @ui.search": "_onFocusChange",
                "blur @ui.search": "_onFocusChange",
                "click .add-mte-button": "_onAddClicked",
                "click .date-filter-item": "_onDateFilterClicked"
            },
            childViewEvents: {
                click: "_onItemClicked"
            },
            bindings: {
                ".search-input": {
                    observe: "query",
                    onSet: function(e) {
                        return e.toLowerCase()
                    }
                },
                ".current-date-filter": {
                    observe: "dateFilter",
                    onGet: function(e) {
                        return e.name
                    }
                },
                "ul.mte-list": {
                    classes: {
                        disabled: {
                            observe: ["typing", "query"],
                            onGet: function(e) {
                                var t = (0,
                                        r.default)(e, 2),
                                    i = t[0],
                                    n = t[1];
                                return i && !n
                            }
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                return this.dataModel = e.dataModel,
                    this.model = new Backbone.Model({
                        query: "",
                        typing: !1,
                        dateFilter: l.THIS_MONTH
                    }),
                    this.listenTo(this.model, "change:query change:dateFilter", function() {
                        return t._renderChildren()
                    })
            },
            filter: function(e) {
                if (Date.parse(e.get("startDate")) > this.model.get("dateFilter").endDate)
                    return !1;
                var t = this.model.get("query"),
                    i = e.getEnglishName(),
                    n = this.dataModel.cities.get(e.get("cityID"));
                return n && (i = i + " " + n.attributes.englishName + " " + n.attributes.name),
                    i.toLowerCase().indexOf(t) > -1
            },
            onRender: function() {
                return this.stickit()
            },
            serializeData: function() {
                return {
                    dateFilters: l
                }
            },
            _onFocusChange: function(e) {
                return this.model.set("typing", this.ui.search.is(":focus"))
            },
            _onItemClicked: function(e) {
                return this.trigger("mteItemClicked", e.model)
            },
            _onAddClicked: function() {
                return this.trigger("addClicked")
            },
            _onDateFilterClicked: function(e) {
                var t = $(e.target);
                return this.model.set("dateFilter", l[t.data().filter])
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(16),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Marionette.View.extend({
            tagName: "li",
            className: "mte-item",
            template: "Waze/Modules/MTE/templates/mte_item_view",
            triggers: {
                click: "click"
            },
            serializeData: function() {
                return {
                    published: this.model.get("published"),
                    name: this.model.getEnglishName(),
                    date: this._shortDate()
                }
            },
            _shortDate: function() {
                var e = Date.parse(this.model.get("startDate")),
                    t = Date.parse(this.model.get("endDate"));
                return s.default.formatMonthRange(e, t)
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = i(935),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = Backbone.Collection.extend({
            model: s.default,
            comparator: function(e) {
                return (e.getEnglishName() || "").toLowerCase()
            }
        });
    t.default = r,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            name: null
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(18),
        u = n(l),
        d = i(156),
        c = n(d),
        h = i(53),
        p = n(h),
        f = i(80),
        g = n(f),
        m = i(937),
        v = n(m),
        y = i(97),
        b = n(y),
        E = i(939),
        w = n(E),
        S = i(940),
        M = n(S),
        C = i(15),
        T = n(C),
        A = i(16),
        I = n(A),
        O = i(941),
        L = n(O),
        D = i(942),
        k = n(D),
        R = i(944),
        x = n(R),
        P = Marionette.View.extend({
            className: "mte-edit-view",
            template: "Waze/Modules/MTE/templates/mte_edit_view",
            behaviors: {
                dateTimePickers: {
                    behaviorClass: g.default
                }
            },
            regions: {
                namesRegion: ".names-region",
                addressEditRegion: ".address-edit-region",
                closuresRegion: "#mte-edit-closures",
                contributorsRegion: ".contributors-region"
            },
            events: {
                "click .back-button": "_onBackButtonClicked",
                "show.bs.tab .closures-tab": "_onClosuresTabClick",
                "show.bs.tab .contributors-tab": "_onContributorsTabClick",
                "click .submit-button": "_onSubmitClicked",
                "click .publish-button": "_onPublishClicked",
                "submit @ui.attributesForm": "_onFormSubmitted"
            },
            ui: {
                formSubmit: ".form-submit-button",
                attributesForm: ".attributes-form",
                formInputs: "form button, form input, form select",
                locationTooltip: ".location-tooltip"
            },
            bindings: {
                ".url": "url",
                ".event-page": {
                    observe: "uniqueName",
                    visible: !0
                },
                ".event-page a": {
                    attributes: [{
                        name: "href",
                        observe: "uniqueName",
                        onGet: function(e) {
                            return e ? W.Config.mte.root_url + "/" + e : null
                        }
                    }]
                },
                ".submit-buttons": {
                    observe: "published",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    }
                },
                ".category": {
                    observe: "category",
                    selectOptions: {
                        collection: "this.categoryOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.select_category")
                        }
                    }
                },
                "[name=tweetText]": {
                    observe: "tweetText",
                    attributes: [{
                        name: "disabled",
                        observe: "published"
                    }]
                }
            },
            submitButtonBindings: {
                ".submit-button": {
                    observe: "submitted",
                    visible: !0,
                    onGet: function(e) {
                        return !e
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "submitting"
                    }]
                },
                ".submitted-indication": {
                    observe: "submitted",
                    visible: !0
                }
            },
            publishBindings: {
                ".publish-button": {
                    observe: ["published", "canPublish"],
                    visible: !0,
                    onGet: function(e) {
                        var t = (0,
                                u.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return !i && n
                    },
                    attributes: [{
                        name: "disabled",
                        observe: "publishing"
                    }]
                },
                ".published-indication": {
                    observe: ["published", "canPublish"],
                    visible: !0,
                    onGet: function(e) {
                        var t = (0,
                                u.default)(e, 2),
                            i = t[0],
                            n = t[1];
                        return i && n
                    }
                }
            },
            validationErrorsBindings: {
                ".validation-error[for=cityID]": "cityID",
                ".validation-error[for=names]": "names",
                ".validation-error[for=startDate]": "startDate",
                ".validation-error[for=endDate]": "endDate",
                ".start-date-group": {
                    classes: {
                        "has-error": {
                            observe: "startDate"
                        }
                    }
                },
                ".end-date-group": {
                    classes: {
                        "has-error": {
                            observe: "endDate"
                        }
                    }
                }
            },
            initialize: function(e) {
                var t = this;
                this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.api = new v.default({
                        dataModel: this.dataModel
                    });
                var i = [this.model.clone(), this.model];
                return this.model = i[0],
                    this.originalModel = i[1],
                    this.api = new v.default({
                        dataModel: this.dataModel
                    }),
                    this.submitViewModel = new Backbone.Model({
                        submitting: !1,
                        submitted: this.originalModel.get("ready")
                    }),
                    this.publishViewModel = new Backbone.Model({
                        publishing: !1,
                        canPublish: this.model.canPublish(),
                        published: this.originalModel.get("published")
                    }),
                    this.categoryOptions = _.map(b.default.prototype.CATEGORIES, function(e) {
                        return {
                            label: I18n.t("mte.edit.categories." + e),
                            value: e
                        }
                    }),
                    this.listenTo(this.originalModel, "change", function(e) {
                        return t.model.set(e.changed),
                            t.submitViewModel.set({
                                submitted: t.originalModel.get("ready")
                            }),
                            t.publishViewModel.set({
                                published: t.originalModel.get("published"),
                                canPublish: t.originalModel.canPublish()
                            })
                    }),
                    this.listenTo(this.model, "change", this._onModelChanged),
                    this.listenTo(this.mteModeState, "change:saving", this._onSavingChanged)
            },
            _onModelChanged: function(e) {
                if (null != this.validator) {
                    var t = !0,
                        i = !1,
                        n = void 0;
                    try {
                        for (var s, o = (0,
                                a.default)((0,
                                r.default)(e.changed)); !(t = (s = o.next()).done); t = !0) {
                            var l = s.value;
                            this.validator.clearErrorFor(l)
                        }
                    } catch (e) {
                        i = !0,
                            n = e
                    } finally {
                        try {
                            !t && o.return && o.return()
                        } finally {
                            if (i)
                                throw n
                        }
                    }
                }
                var u = (0,
                    r.default)(e.changed);
                if (_.intersection(u, b.default.prototype.writableAttributes).length > 0)
                    return this.trigger("modelChanged")
            },
            onRender: function() {
                var e = this;
                this.namesView = new M.default({
                        model: this.model,
                        editable: this.model.arePropertiesEditable()
                    }),
                    this.listenTo(this.namesView, "namesChanged", function(t) {
                        return e.model.set({
                            names: t
                        })
                    }),
                    this.showChildView("namesRegion", this.namesView),
                    this.addressView = new c.default({
                        addressModel: this.model.getAddress(),
                        dataModel: this.dataModel,
                        feature: this.model,
                        editable: this.model.arePropertiesEditable(),
                        editStreet: !1,
                        showCitySelect: !0
                    }),
                    this.listenTo(this.addressView, "addressChanged", function() {
                        e.trigger("modelChanged"),
                            e.validator && e.validator.clearErrorFor("cityID")
                    }),
                    this.showChildView("addressEditRegion", this.addressView),
                    this.stickit(),
                    this.stickit(this.submitViewModel, this.submitButtonBindings),
                    this.stickit(this.publishViewModel, this.publishBindings),
                    this.model.arePropertiesEditable() || this._toggleFormInputs(!1),
                    this.ui.locationTooltip.tooltip()
            },
            serializeData: function() {
                return {
                    modelAttributes: this.model.attributes,
                    showTweetControls: this.model.canEditTweetText(),
                    newModel: this.model.isNew()
                }
            },
            _onSavingChanged: function(e, t) {
                if (this.model.arePropertiesEditable())
                    return this._toggleFormInputs(!t),
                        this.namesView.toggleEditable(!t),
                        this.addressView.toggleEditable(!t)
            },
            _toggleFormInputs: function(e) {
                return this.ui.formInputs.prop("disabled", !e)
            },
            validate: function() {
                var e = $.Deferred();
                return this._isMTEValid() ? e.resolve() : (this._showValidationErrors(),
                        e.reject()),
                    e.promise()
            },
            _isMTEValid: function() {
                var e = this.ui.attributesForm.get(0).checkValidity();
                return null != this.validator && this.unstickit(this.validator, this.validationErrorsBindings),
                    this.validator = w.default.validate(this.model),
                    this.stickit(this.validator, this.validationErrorsBindings),
                    this.validator.isValid() && e
            },
            _showValidationErrors: function() {
                return this.ui.formSubmit.click()
            },
            getAction: function() {
                var e = void 0;
                return e = this.model.isNew() ? new p.default(this.model, this.dataModel.majorTrafficEvents) : new T.default(this.originalModel, this.model.attributes),
                    e.setModel(this.dataModel),
                    e
            },
            _onBackButtonClicked: function() {
                var e = !0;
                if (this.mteModeState.get("pendingChanges") && (e = window.confirm(I18n.t("mte.edit.pending_changes"))),
                    e)
                    return this.trigger("backButtonClicked")
            },
            _loadMTEDetails: function(e, t, i) {
                return e.show(new L.default({
                        loading: !0,
                        loadingMessage: t
                    })),
                    this.api.getMTEDetails(this.model.get("id")).fail(function() {
                        return e.show(new L.default({
                            error: !0,
                            errorMessage: i
                        }))
                    })
            },
            _onClosuresTabClick: function() {
                var e = this;
                return this._loadMTEDetails(this.getRegion("closuresRegion"), I18n.t("mte.edit.closures.loading"), I18n.t("mte.edit.closures.error")).done(function(t) {
                    return e.showChildView("closuresRegion", new x.default({
                        map: e.options.map,
                        model: e.model,
                        mteModeState: e.mteModeState,
                        dataModel: e.dataModel,
                        detailsModel: t,
                        canAdd: !1,
                        drawingContext: e.options.map.getDrawingContext({
                            extendedMode: !0
                        }),
                        closuresMarkerLayer: e.options.map.closuresMarkerLayer
                    }))
                })
            },
            _onContributorsTabClick: function() {
                var e = this;
                return this._loadMTEDetails(this.getRegion("contributorsRegion"), I18n.t("mte.edit.contributors.loading"), I18n.t("mte.edit.contributors.error")).done(function(t) {
                    return e.showChildView("contributorsRegion", new k.default({
                        detailsModel: t,
                        mteModel: e.model,
                        editable: e.model.canEditPartners()
                    }))
                })
            },
            _onSubmitClicked: function() {
                var e = this;
                if (window.confirm(I18n.t("mte.edit.submit_confirm")))
                    return this.submitViewModel.set({
                            submitting: !0
                        }),
                        this.api.submit(this.originalModel).always(function() {
                            return e.submitViewModel.set({
                                submitting: !1
                            })
                        }).fail(function(e) {
                            var t = e.errorList ? e.errorList.code : void 0;
                            alert(I.default.getSaveErrorTitle(t, "mte.edit.submit_failed"))
                        })
            },
            _onPublishClicked: function() {
                var e = this;
                return this.publishViewModel.set({
                        publishing: !0
                    }),
                    this.api.publish(this.originalModel).always(function() {
                        return e.publishViewModel.set({
                            publishing: !1
                        })
                    }).fail(function(e) {
                        var t = e.errorList ? e.errorList.code : void 0;
                        alert(I.default.getSaveErrorTitle(t, "mte.edit.publish_failed"))
                    })
            },
            _onFormSubmitted: function(e) {
                return e.preventDefault()
            }
        });
    t.default = P,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(938),
        r = n(s),
        o = i(49),
        a = n(o),
        l = Marionette.Object.extend({
            initialize: function(e) {
                this.dataModel = e.dataModel
            },
            getMTEDetails: function(e) {
                var t = this,
                    i = {
                        id: e,
                        mapVersionID: this.dataModel.lastTransactionID
                    };
                return $.get(Waze.Config.paths.mteDetails, i).then(function(e) {
                    var i = _.omit(e, "extendedDetails"),
                        n = (new a.default).read(i);
                    t.dataModel.putPersistent(n);
                    var s = _.extend(e.extendedDetails, {
                        segments: n.segments.objects,
                        closures: n.roadClosures.objects
                    });
                    return new r.default(s)
                })
            },
            submit: function(e) {
                return $.post(Waze.Config.paths.mteReady, {
                    id: e.getID()
                }).then(function(t, i, n) {
                    return e.set(n.responseJSON.majorTrafficEvents.objects[0]),
                        e
                }, function(e, t, i) {
                    return e.responseJSON
                })
            },
            publish: function(e) {
                return $.post(Waze.Config.paths.mtePublish, {
                    id: e.getID()
                }).then(function(t, i, n) {
                    return e.set(n.responseJSON.majorTrafficEvents.objects[0]),
                        e
                }, function(e, t, i) {
                    return e.responseJSON
                })
            }
        });
    t.default = l,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            segments: null,
            closures: null,
            contributors: null,
            partners: null,
            availablePartners: null
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = new RegExp("^[a-zA-Z0-9]{1,1}[\\sa-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]{0,24}$", "i"),
        s = Backbone.Model.extend({
            isValid: function() {
                return _.isEmpty(this.attributes)
            },
            clearErrorFor: function(e) {
                return this.unset(e)
            }
        });
    s.validate = function(e) {
            var t = {},
                i = e.get("startDate"),
                r = e.get("endDate"),
                o = e.getEnglishName();
            return e.getAddress().get("isEmpty") && (t.cityID = I18n.t("mte.edit.validation_errors.location")),
                null === o ? t.names = I18n.t("mte.edit.validation_errors.names") : o.length > 25 ? t.names = I18n.t("mte.edit.validation_errors.english_name_length") : n.test(o) || (t.names = I18n.t("mte.edit.validation_errors.english_name")),
                null === i && (t.startDate = I18n.t("mte.edit.validation_errors.start_date")),
                null === r && (t.endDate = I18n.t("mte.edit.validation_errors.end_date")),
                null !== i && null !== r && Date.parse(i) > Date.parse(r) && (t.endDate = I18n.t("mte.edit.validation_errors.end_before_start")),
                new s(t)
        },
        s.ENGLISH_NAME_PATTERN = n,
        t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(97),
        a = n(o),
        l = Backbone.Model.extend({
            defaults: {
                englishName: "",
                localName: "",
                locale: "es",
                showAddButton: !0,
                showLocalName: !1,
                showPreview: !0,
                editable: !0
            }
        }),
        u = Marionette.CompositeView.extend({
            template: "Waze/Modules/MTE/templates/item_edit/names",
            className: "mte-names-edit-view",
            events: {
                "click .add-local-name-button": "_onAddLocalNameButtonClicked",
                "click .remove-local-name-button": "_onRemoveLocalNameButtonClicked",
                "click .edit-names-button": "_onEditNamesButtonClicked",
                submit: "_onFormSubmitted"
            },
            bindings: {
                ".preview": {
                    observe: "showPreview",
                    visible: !0
                },
                ".edit-form": {
                    observe: "showPreview",
                    visible: _.negate(_.identity)
                },
                ".english-name-preview .name": {
                    observe: "englishName",
                    onGet: function(e) {
                        return _.isEmpty(e) ? I18n.t("mte.edit.name_list.add_name") : e
                    }
                },
                ".english-name-preview": {
                    classes: {
                        empty: {
                            observe: "englishName",
                            onGet: _.negate(_.identity)
                        }
                    }
                },
                ".language-preview": {
                    observe: "englishName",
                    visible: !0,
                    onGet: function(e) {
                        return !_.isEmpty(e)
                    }
                },
                ".local-name-preview": {
                    observe: "showLocalName",
                    visible: !0
                },
                ".local-language-preview": "locale",
                ".local-name-preview .name": "localName",
                ".english-name input": "englishName",
                ".local-name input": {
                    observe: "localName",
                    attributes: [{
                        name: "required",
                        observe: "showLocalName"
                    }]
                },
                ".locale": {
                    observe: "locale",
                    selectOptions: {
                        collection: "this.localeOptions",
                        defaultOption: {
                            value: null,
                            label: I18n.t("mte.edit.name_list.select_language")
                        }
                    },
                    attributes: [{
                        observe: "showLocalName",
                        name: "required"
                    }]
                },
                ".form-group.local-name": {
                    observe: "showLocalName",
                    visible: !0
                },
                ".add-local-name-button": {
                    observe: "showAddButton",
                    visible: !0
                },
                ".edit-names-button": {
                    attributes: [{
                        name: "disabled",
                        observe: "editable",
                        onGet: _.negate(_.identity)
                    }]
                },
                ".edit-names-button .waze-icon-edit": {
                    observe: "editable",
                    visible: !0
                }
            },
            initialize: function(e) {
                var t = this.model.getLocale();
                this.viewModel = new l({
                        englishName: this.model.getEnglishName(),
                        localName: this.model.getLocalName(),
                        locale: t,
                        editable: e.editable
                    }),
                    null !== t && this.viewModel.set({
                        showLocalName: !0,
                        showAddButton: !1
                    });
                var i = _.without(I18n.availableLocales, a.default.prototype.ENGLISH_LOCALE).map(function(e) {
                        return {
                            label: I18n.languageNames[e],
                            value: e
                        }
                    }),
                    n = (0,
                        r.default)(a.default.prototype.MTE_LOCALES).map(function(e) {
                        return {
                            label: a.default.prototype.MTE_LOCALES[e],
                            value: e
                        }
                    });
                this.localeOptions = _.sortBy(i.concat(n), "value")
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            serializeData: function() {
                return {
                    ENGLISH_LOCALE: a.default.prototype.ENGLISH_LOCALE
                }
            },
            toggleEditable: function(e) {
                return !1 === e && this.viewModel.set({
                        showPreview: !0
                    }),
                    this.viewModel.set({
                        editable: e
                    })
            },
            _onAddLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !0,
                    showAddButton: !1
                })
            },
            _onRemoveLocalNameButtonClicked: function() {
                return this.viewModel.set({
                    showLocalName: !1,
                    showAddButton: !0
                })
            },
            _onEditNamesButtonClicked: function() {
                return this.viewModel.set({
                    showPreview: !1
                })
            },
            _onFormSubmitted: function(e) {
                e.preventDefault(),
                    this.viewModel.set({
                        showPreview: !0
                    });
                var t = [{
                    locale: a.default.prototype.ENGLISH_LOCALE,
                    value: this.viewModel.get("englishName")
                }];
                return this.viewModel.get("showLocalName") && t.push({
                        locale: this.viewModel.get("locale"),
                        value: this.viewModel.get("localName")
                    }),
                    this.trigger("namesChanged", t)
            }
        });
    t.default = u,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
            defaults: {
                loading: !1,
                error: !1,
                loadingMessage: "",
                errorMessage: ""
            }
        }),
        s = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/item_edit/loading",
            bindings: {
                ".loading": {
                    observe: "loading",
                    visible: !0
                },
                ".error": {
                    observe: "error",
                    visible: !0
                }
            },
            initialize: function(e) {
                this.model = new n(e)
            },
            onRender: function() {
                return this.stickit()
            }
        });
    t.default = s,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(18),
        r = n(s),
        o = i(943),
        a = n(o),
        l = i(16),
        u = n(l),
        d = Marionette.CompositeView.extend({
            template: "Waze/Modules/MTE/templates/contributors/list",
            className: "mte-contributors-list",
            childView: a.default,
            childViewContainer: ".list",
            childViewOptions: function() {
                return {
                    editable: this.options.editable
                }
            },
            events: {
                "click .add-partner-button": "_onAddClicked",
                "click .cancel-button": "_onCancelClicked",
                "submit .add-partner-form": "_onPartnerFormSubmitted"
            },
            childViewEvents: {
                removeClicked: "_onRemoveClicked"
            },
            bindings: {
                ".add-partner-form": {
                    observe: "showAddPartnerForm",
                    visible: !0
                },
                ".add-partner-button": {
                    observe: ["showAddPartnerForm", "editable"],
                    visible: !0,
                    onGet: function(e) {
                        var t = (0,
                                r.default)(e, 2),
                            i = t[0];
                        return t[1] && !i
                    }
                },
                ".partner-select": {
                    observe: "selectedPartner",
                    selectOptions: {
                        collection: "this._partnerOptions",
                        defaultOption: {
                            label: I18n.t("mte.edit.contributors.choose_partner"),
                            value: null
                        }
                    }
                }
            },
            initialize: function() {
                var e = this.options.mteModel.get("partners").map(function(e) {
                        return {
                            userID: e,
                            isPartner: !0
                        }
                    }),
                    t = this.options.detailsModel.get("contributors").map(function(e) {
                        return {
                            userID: e
                        }
                    });
                this.collection = new Backbone.Collection(e.concat(t)),
                    this.collection.on("reset add remove", this._onPartnersChanged, this),
                    this._generatePartnerOptions(),
                    this.viewModel = new Backbone.Model({
                        showAddPartnerForm: !1,
                        selectedPartner: null,
                        editable: this.options.editable
                    })
            },
            _generatePartnerOptions: function() {
                var e = this.collection.where({
                        isPartner: !0
                    }).map(function(e) {
                        return e.get("userID")
                    }),
                    t = _.difference(this.options.detailsModel.get("availablePartners"), e);
                this._partnerOptions = t.map(function(e) {
                    return {
                        label: u.default.formatUserName(e),
                        value: e
                    }
                })
            },
            onRender: function() {
                return this.stickit(this.viewModel)
            },
            _onAddClicked: function() {
                return this.viewModel.set({
                    showAddPartnerForm: !0
                })
            },
            _onCancelClicked: function() {
                return this.viewModel.set({
                    showAddPartnerForm: !1
                })
            },
            _onRemoveClicked: function(e) {
                return this.collection.remove(e.model)
            },
            _onPartnerFormSubmitted: function(e) {
                e.preventDefault();
                var t = new Backbone.Model({
                    userID: this.viewModel.get("selectedPartner"),
                    isPartner: !0
                });
                return this.collection.add(t),
                    this.viewModel.set({
                        showAddPartnerForm: !1,
                        selectedPartner: null
                    })
            },
            _updateModel: function() {
                var e = this.collection.where({
                    isPartner: !0
                }).map(function(e) {
                    return e.get("userID")
                });
                return this.options.mteModel.set({
                    partners: e
                })
            },
            _onPartnersChanged: function() {
                return this._generatePartnerOptions(),
                    this.stickit(this.viewModel),
                    this._updateModel()
            }
        });
    t.default = d,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Marionette.View.extend({
        template: "Waze/Modules/MTE/templates/contributors/item",
        className: "mte-contributors-item",
        triggers: {
            "click .remove-button": "removeClicked"
        },
        serializeData: function() {
            var e = this;
            return _.tap(Marionette.View.prototype.serializeData.apply(this, arguments), function(t) {
                t.editable = e.options.editable
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";

    function n(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = i(3),
        r = n(s),
        o = i(12),
        a = n(o),
        l = i(252),
        u = n(l),
        d = i(261),
        c = n(d),
        h = i(262),
        p = n(h),
        f = i(161),
        g = n(f),
        m = i(152),
        v = n(m),
        y = i(945),
        b = n(y),
        E = Marionette.View.extend({
            template: function() {
                return I18n.t("mte.edit.closures.empty")
            }
        }),
        w = Marionette.View.extend({
            template: "Waze/Modules/MTE/templates/item_edit/closures",
            regions: {
                closuresRegion: ".closures"
            },
            initialize: function(e) {
                this.segments = e.detailsModel.get("segments"),
                    this.closures = e.detailsModel.get("closures"),
                    this.map = e.map,
                    this.dataModel = e.dataModel,
                    this.mteModeState = e.mteModeState,
                    this.drawingContext = e.drawingContext,
                    this.closuresMarkerLayer = e.closuresMarkerLayer,
                    this.segments.length ? (this.compositeSegment = new g.default(this.segments, this.dataModel, v.default.getReversedSegments(this.segments)),
                        this.closuresView = new u.default({
                            pannable: this.map.getPannable(),
                            dataModel: this.dataModel,
                            compositeSegment: this.compositeSegment,
                            allClosures: this.closures,
                            repoActive: this.dataModel.roadClosures.active,
                            canSaveClosures: this._canSaveClosures(),
                            listViewConfig: p.default.MTE,
                            editViewConfig: c.default.MTE
                        }),
                        this._drawClosures(),
                        this._toggleMarkers(!1)) : this.closuresView = new E
            },
            onRender: function() {
                this.showChildView("closuresRegion", this.closuresView)
            },
            _canSaveClosures: function() {
                return this.model.arePropertiesEditable() && !this.mteModeState.get("pendingChanges")
            },
            _drawClosures: function() {
                var e = this,
                    t = void 0;
                return this.drawingContext.setStyleMap(b.default), ["outline", "fill", "dash"].map(function(i) {
                    return t = e.segments.map(function(e) {
                            return new OL.Feature.Vector(e.geometry.clone(), {
                                type: i
                            })
                        }),
                        e.drawingContext.addFeatures(t)
                })
            },
            _toggleMarkers: function(e) {
                var t = _.pluck(this.closures, "id"),
                    i = !0,
                    n = !1,
                    s = void 0;
                try {
                    for (var o, l = (0,
                            a.default)((0,
                            r.default)(this.closuresMarkerLayer.markers)); !(i = (o = l.next()).done); i = !0) {
                        var u = o.value,
                            d = this.closuresMarkerLayer.markers[u];
                        _.contains(t, u) || d.toggle(e)
                    }
                } catch (e) {
                    n = !0,
                        s = e
                } finally {
                    try {
                        !i && l.return && l.return()
                    } finally {
                        if (n)
                            throw s
                    }
                }
            },
            onDestroy: function() {
                return this.drawingContext.destroy(),
                    this._toggleMarkers(!0)
            }
        });
    t.default = w,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = new OL.StyleMap;
    n.addUniqueValueRules("default", "type", {
            outline: {
                strokeColor: "black",
                strokeWidth: 14
            },
            fill: {
                strokeColor: "white",
                strokeWidth: 10
            },
            dash: {
                strokeColor: "red",
                strokeDashstyle: "dash",
                strokeDashArray: "10 10",
                strokeLinecap: "butt",
                strokeWidth: 10
            }
        }),
        t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var n = Backbone.Model.extend({
        defaults: {
            id: 1,
            isImperial: null,
            twoWaySegmentsByDefault: !1,
            enableTurnsByDefault: !1,
            requireFeatureDeselect: !1
        },
        localStorage: new Backbone.LocalStorage("preferences"),
        initialize: function() {
            var e = this;
            return this.on("change", function() {
                return e.save()
            })
        }
    });
    t.default = n,
        e.exports = t.default
}, function(e, t, i) {
    "use strict";
    I18n.pluralization.ru = function(e) {
            return [e % 10 == 1 && e % 100 != 11 ? "one" : [2, 3, 4].indexOf(e % 10) >= 0 && [12, 13, 14].indexOf(e % 100) < 0 ? "few" : e % 10 == 0 || [5, 6, 7, 8, 9].indexOf(e % 10) >= 0 || [11, 12, 13, 14].indexOf(e % 100) >= 0 ? "many" : "other"]
        },
        I18n.pluralization.oneRule = function(e) {
            return ["other"]
        }, ["ko", "ja", "ms", "zh", "zh", "zh-TW"].forEach(function(e) {
            I18n.pluralization[e] = I18n.pluralization.oneRule
        });
    var n = I18n.pluralization.get;
    I18n.pluralization.get = function() {
            var e = n.apply(this, arguments);
            return function() {
                var t = e.apply(void 0, arguments);
                return t.push("other"),
                    t
            }
        },
        e.exports = {}
}, function(e, t, i) {
    "use strict";
    i(949),
        i(950),
        i(951),
        i(952),
        i(953),
        i(954),
        i(955),
        i(956),
        i(957),
        i(958),
        i(959),
        i(960),
        i(961),
        i(962),
        i(963),
        i(964),
        i(965),
        i(966),
        i(967),
        i(968),
        i(969),
        i(970),
        i(971),
        i(972),
        i(973),
        i(974),
        i(975),
        i(976),
        i(977),
        i(978),
        i(979),
        i(980),
        i(981),
        i(982),
        i(983),
        i(984),
        i(985),
        i(986)
}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t, i) {
    "use strict";
    var n = i(988);
    window.require = function(e) {
        return e = "./" + e + ".js",
            n(e)
    }
}, function(e, t, i) {
    function n(e) {
        return i(s(e))
    }

    function s(e) {
        var t = r[e];
        if (!(t + 1))
            throw new Error("Cannot find module '" + e + "'.");
        return t
    }
    var r = {
        "./Waze/Action.js": 10,
        "./Waze/Action/AddAlternateStreet.js": 251,
        "./Waze/Action/AddBigJunction.js": 269,
        "./Waze/Action/AddIntersection.js": 214,
        "./Waze/Action/AddLandmark.js": 268,
        "./Waze/Action/AddNode.js": 103,
        "./Waze/Action/AddOrGetCity.js": 86,
        "./Waze/Action/AddOrGetStreet.js": 109,
        "./Waze/Action/AddRoadClosure.js": 256,
        "./Waze/Action/AddSegment.js": 82,
        "./Waze/Action/CompositeAction.js": 9,
        "./Waze/Action/ConnectSegment.js": 41,
        "./Waze/Action/CreateObject.js": 53,
        "./Waze/Action/CreateRoundabout.js": 270,
        "./Waze/Action/DeleteBigJunction.js": 267,
        "./Waze/Action/DeleteNode.js": 140,
        "./Waze/Action/DeleteObject.js": 141,
        "./Waze/Action/DeleteRoadClosure.js": 258,
        "./Waze/Action/DeleteSegment.js": 40,
        "./Waze/Action/DisconnectSegment.js": 81,
        "./Waze/Action/HouseNumber.js": 260,
        "./Waze/Action/MergeNode.js": 216,
        "./Waze/Action/MergeSegments.js": 142,
        "./Waze/Action/ModifyAllConnections.js": 145,
        "./Waze/Action/ModifyJunctionPath.js": 244,
        "./Waze/Action/MoveNode.js": 215,
        "./Waze/Action/MultiAction.js": 63,
        "./Waze/Action/SegmentAction.js": 143,
        "./Waze/Action/SplitSegments.js": 83,
        "./Waze/Action/UpdateBigJunctionConnectedSegments.js": 163,
        "./Waze/Action/UpdateFeatureAddress.js": 158,
        "./Waze/Action/UpdateFeatureGeometry.js": 101,
        "./Waze/Action/UpdateHouseNumber.js": 162,
        "./Waze/Action/UpdateHouseNumberGeometry.js": 259,
        "./Waze/Action/UpdateObject.js": 15,
        "./Waze/Action/UpdatePlaceUpdate.js": 234,
        "./Waze/Action/UpdateRoadClosure.js": 257,
        "./Waze/Action/UpdateSegmentGeometry.js": 146,
        "./Waze/Action/Visitor/Serializor.js": 989,
        "./Waze/Action/Visitor/TreeSerializor.js": 204,
        "./Waze/ActionManager.js": 206,
        "./Waze/DivIcon.js": 19,
        "./Waze/Feature/Vector.js": 23,
        "./Waze/Feature/Vector/BigJunction.js": 130,
        "./Waze/Feature/Vector/ClosureProblem.js": 184,
        "./Waze/Feature/Vector/CompositeSegment.js": 161,
        "./Waze/Feature/Vector/Factory/MapProblem.js": 182,
        "./Waze/Feature/Vector/Factory/MapProblemDetails.js": 185,
        "./Waze/Feature/Vector/JunctionPath.js": 131,
        "./Waze/Feature/Vector/Landmark.js": 77,
        "./Waze/Feature/Vector/Landmark/ParkingAttributes.js": 134,
        "./Waze/Feature/Vector/Landmark/ParkingEnum.js": 79,
        "./Waze/Feature/Vector/MapProblem.js": 61,
        "./Waze/Feature/Vector/Node.js": 94,
        "./Waze/Feature/Vector/ProblemResolution.js": 150,
        "./Waze/Feature/Vector/Segment.js": 27,
        "./Waze/Feature/Vector/SegmentFlags.js": 186,
        "./Waze/Feature/Vector/SpeedCamera.js": 135,
        "./Waze/Feature/Vector/TurnProblem.js": 183,
        "./Waze/Feature/Vector/UpdateRequest.js": 191,
        "./Waze/Model/Graph/Actions/SetTurn.js": 29,
        "./Waze/Model/Graph/Actions/SplitTurns.js": 207,
        "./Waze/Model/Graph/InstructionOpcode.js": 221,
        "./Waze/Model/Graph/RoadGraph.js": 210,
        "./Waze/Model/Graph/Turn.js": 144,
        "./Waze/Model/Graph/TurnData.js": 84,
        "./Waze/Model/Graph/TurnGraph.js": 208,
        "./Waze/Model/Graph/Vertex.js": 35,
        "./Waze/Modules/Closures/Models/ClosureActionBuilder.js": 255,
        "./Waze/Modules/Closures/Models/SharedClosure.js": 65,
        "./Waze/Modules/Closures/Models/SharedClosures.js": 254,
        "./Waze/Modules/Closures/Models/SharedClosuresBuilder.js": 253,
        "./Waze/ViewHelpers/Core.js": 16,
        "./Waze/ViewHelpers/ModelViewHelpers.js": 250
    };
    n.keys = function() {
            return Object.keys(r)
        },
        n.resolve = s,
        e.exports = n,
        n.id = 988
}, function(e, t, i) {
    "use strict";
    var n = i(47),
        s = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }(n),
        r = i(139),
        o = i(13),
        a = OpenLayers.Class(r, {
            result: null,
            problemUpdates: null,
            processedProblems: !1,
            traversalOrder: {
                _default: r.Order.PRE,
                "Waze.Action.DeleteNode": r.Order.POST,
                "Waze.Action.DeleteSegment": r.Order.POST
            },
            initialize: function() {
                this.result = [],
                    this.problemUpdates = {}
            },
            _default: function(e) {
                this.addAction(e)
            },
            beforeEnter: function(e) {
                return !e.dontSerialize
            },
            afterLeave: function(e) {},
            getTraversalOrder: function(e) {
                var t = this.traversalOrder[e.CLASS_NAME];
                return o.defined(t) || (t = this.traversalOrder._default),
                    t
            },
            UpdateProblem: function(e) {
                this.problemUpdates[e.problem.getID()] = e
            },
            addAction: function(e) {
                var t = void 0;
                e.dontSerialize || null !== (t = e.serialize()) && (t instanceof Array ? this.result = this.result.concat(t) : this.result.push(t))
            },
            getResult: function() {
                return this.processedProblems || ((0,
                            s.default)(this.problemUpdates).forEach(function(e) {
                            "open" !== e.problem.attributes.state && this.addAction(e)
                        }, this),
                        this.processedProblems = !0),
                    this.result
            },
            CLASS_NAME: "Waze.Action.Visitor.Serializor"
        });
    e.exports = a
}], [396]);